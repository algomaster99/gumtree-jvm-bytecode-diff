{"diffoscope-json-version": 1, "source1": "first/HideUtilityClassConstructorCheck.class", "source2": "second/HideUtilityClassConstructorCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,33 +18,31 @@\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 14 };\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        if (!isAbstract(ast)) {\n-            final boolean hasStaticModifier = isStatic(ast);\n-            final HideUtilityClassConstructorCheck.Details details = new HideUtilityClassConstructorCheck.Details(ast);\n+    public void visitToken(final DetailAST detailAST) {\n+        if (!isAbstract(detailAST)) {\n+            final boolean static1 = isStatic(detailAST);\n+            final HideUtilityClassConstructorCheck.Details details = new HideUtilityClassConstructorCheck.Details(detailAST);\n             details.invoke();\n             final boolean hasDefaultCtor = details.isHasDefaultCtor();\n             final boolean hasPublicCtor = details.isHasPublicCtor();\n             final boolean hasNonStaticMethodOrField = details.isHasNonStaticMethodOrField();\n             final boolean hasNonPrivateStaticMethodOrField = details.isHasNonPrivateStaticMethodOrField();\n-            final boolean hasAccessibleCtor = hasDefaultCtor || hasPublicCtor;\n-            final boolean extendsJlo = ast.findFirstToken(18) == null;\n-            final boolean isUtilClass = extendsJlo && !hasNonStaticMethodOrField && hasNonPrivateStaticMethodOrField;\n-            if (isUtilClass && hasAccessibleCtor && !hasStaticModifier) {\n-                this.log(ast, \"hide.utility.class\", new Object[0]);\n+            final boolean b = hasDefaultCtor || hasPublicCtor;\n+            if (detailAST.findFirstToken(18) == null && !hasNonStaticMethodOrField && hasNonPrivateStaticMethodOrField && b && !static1) {\n+                this.log(detailAST, \"hide.utility.class\", new Object[0]);\n             }\n         }\n     }\n     \n-    private static boolean isAbstract(final DetailAST ast) {\n-        return ast.findFirstToken(5).findFirstToken(40) != null;\n+    private static boolean isAbstract(final DetailAST detailAST) {\n+        return detailAST.findFirstToken(5).findFirstToken(40) != null;\n     }\n     \n-    private static boolean isStatic(final DetailAST ast) {\n-        return ast.findFirstToken(5).findFirstToken(64) != null;\n+    private static boolean isStatic(final DetailAST detailAST) {\n+        return detailAST.findFirstToken(5).findFirstToken(64) != null;\n     }\n }\n"}]}
