{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Integral.class", "source2": "second/NewAttributeBands$Integral.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,20 +8,20 @@\n \n public class Integral extends NewAttributeBands.LayoutElement\n {\n     private final String tag;\n     private int[] band;\n     \n     public Integral(final NewAttributeBands this$0, final String tag) {\n-        super(this.this$0 = this$0, (NewAttributeBands.NewAttributeBands$1)null);\n+        super(this.this$0 = this$0, (NewAttributeBands.LayoutElement)null);\n         this.tag = tag;\n     }\n     \n     public void readBands(final InputStream in, final int count) throws IOException, Pack200Exception {\n-        this.band = this.this$0.decodeBandInt(NewAttributeBands.access$400(this.this$0).getName() + \"_\" + this.tag, in, this.this$0.getCodec(this.tag), count);\n+        this.band = this.this$0.decodeBandInt(String.valueOf(NewAttributeBands.access$0(this.this$0).getName()) + \"_\" + this.tag, in, this.this$0.getCodec(this.tag), count);\n     }\n     \n     public void addToAttribute(final int n, final NewAttribute attribute) {\n         long value = (long)this.band[n];\n         if (this.tag.equals(\"B\") || this.tag.equals(\"FB\")) {\n             attribute.addInteger(1, value);\n         }\n@@ -36,45 +36,43 @@\n         }\n         else if (this.tag.equals(\"I\") || this.tag.equals(\"FI\")) {\n             attribute.addInteger(4, value);\n         }\n         else if (this.tag.equals(\"SI\")) {\n             attribute.addInteger(4, (long)(int)value);\n         }\n-        else if (!this.tag.equals(\"V\") && !this.tag.equals(\"FV\")) {\n-            if (!this.tag.equals(\"SV\")) {\n-                if (this.tag.startsWith(\"PO\")) {\n-                    final char uint_type = this.tag.substring(2).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    attribute.addBCOffset(length, (int)value);\n-                }\n-                else if (this.tag.startsWith(\"P\")) {\n-                    final char uint_type = this.tag.substring(1).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    attribute.addBCIndex(length, (int)value);\n+        else if (!this.tag.equals(\"V\") && !this.tag.equals(\"FV\") && !this.tag.equals(\"SV\")) {\n+            if (this.tag.startsWith(\"PO\")) {\n+                final char uint_type = this.tag.substring(2).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                attribute.addBCOffset(length, (int)value);\n+            }\n+            else if (this.tag.startsWith(\"P\")) {\n+                final char uint_type = this.tag.substring(1).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                attribute.addBCIndex(length, (int)value);\n+            }\n+            else if (this.tag.startsWith(\"OS\")) {\n+                final char uint_type = this.tag.substring(2).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                if (length == 1) {\n+                    value = (byte)value;\n                 }\n-                else if (this.tag.startsWith(\"OS\")) {\n-                    final char uint_type = this.tag.substring(2).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    if (length == 1) {\n-                        value = (byte)value;\n-                    }\n-                    else if (length == 2) {\n-                        value = (short)value;\n-                    }\n-                    else if (length == 4) {\n-                        value = (int)value;\n-                    }\n-                    attribute.addBCLength(length, (int)value);\n+                else if (length == 2) {\n+                    value = (short)value;\n                 }\n-                else if (this.tag.startsWith(\"O\")) {\n-                    final char uint_type = this.tag.substring(1).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    attribute.addBCLength(length, (int)value);\n+                else if (length == 4) {\n+                    value = (int)value;\n                 }\n+                attribute.addBCLength(length, (int)value);\n+            }\n+            else if (this.tag.startsWith(\"O\")) {\n+                final char uint_type = this.tag.substring(1).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                attribute.addBCLength(length, (int)value);\n             }\n         }\n     }\n     \n     long getValue(final int index) {\n         return this.band[index];\n     }\n"}]}
