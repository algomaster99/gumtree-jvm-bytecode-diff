{"diffoscope-json-version": 1, "source1": "first/NNTP.class", "source2": "second/NNTP.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,261 +1,261 @@\n-  SHA-256 checksum 14cf8220b65b684b5ef6f62a55f4a64a5fdbc349bdb4cf9b4d5acdcc217777e9\n+  SHA-256 checksum 908e0622c76612ecb6834c7b6ddd185eaab107c6b6f82da38f3a15837df08552\n   Compiled from \"NNTP.java\"\n public class org.apache.commons.net.nntp.NNTP extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/net/nntp/NNTP\n-  super_class: #28                        // org/apache/commons/net/SocketClient\n+  this_class: #7                          // org/apache/commons/net/nntp/NNTP\n+  super_class: #2                         // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 8, methods: 45, attributes: 1\n Constant pool:\n-    #1 = Methodref          #28.#138      // org/apache/commons/net/SocketClient.\"<init>\":()V\n-    #2 = Class              #139          // org/apache/commons/net/nntp/NNTP\n-    #3 = Methodref          #2.#140       // org/apache/commons/net/nntp/NNTP.setDefaultPort:(I)V\n-    #4 = Fieldref           #2.#141       // org/apache/commons/net/nntp/NNTP.replyString:Ljava/lang/String;\n-    #5 = Fieldref           #2.#142       // org/apache/commons/net/nntp/NNTP._reader_:Ljava/io/BufferedReader;\n-    #6 = Fieldref           #2.#143       // org/apache/commons/net/nntp/NNTP._writer_:Ljava/io/BufferedWriter;\n-    #7 = Fieldref           #2.#144       // org/apache/commons/net/nntp/NNTP._isAllowedToPost:Z\n-    #8 = Class              #145          // org/apache/commons/net/ProtocolCommandSupport\n-    #9 = Methodref          #8.#146       // org/apache/commons/net/ProtocolCommandSupport.\"<init>\":(Ljava/lang/Object;)V\n-   #10 = Fieldref           #2.#147       // org/apache/commons/net/nntp/NNTP._commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n-   #11 = Methodref          #148.#149     // java/io/BufferedReader.readLine:()Ljava/lang/String;\n-   #12 = Class              #150          // org/apache/commons/net/nntp/NNTPConnectionClosedException\n-   #13 = String             #151          // Connection closed without indication.\n-   #14 = Methodref          #12.#152      // org/apache/commons/net/nntp/NNTPConnectionClosedException.\"<init>\":(Ljava/lang/String;)V\n-   #15 = Methodref          #153.#154     // java/lang/String.length:()I\n-   #16 = Class              #155          // org/apache/commons/net/MalformedServerReplyException\n-   #17 = Class              #156          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#138      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #157          // Truncated server reply:\n-   #20 = Methodref          #17.#158      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#159      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #22 = Methodref          #16.#152      // org/apache/commons/net/MalformedServerReplyException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #153.#160     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #24 = Methodref          #161.#162     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #25 = Fieldref           #2.#163       // org/apache/commons/net/nntp/NNTP.replyCode:I\n-   #26 = Class              #164          // java/lang/NumberFormatException\n-   #27 = String             #165          // Could not parse response code.\\nServer Reply:\n-   #28 = Class              #166          // org/apache/commons/net/SocketClient\n-   #29 = String             #167          // \\r\\n\n-   #30 = Methodref          #2.#168       // org/apache/commons/net/nntp/NNTP.fireReplyReceived:(ILjava/lang/String;)V\n-   #31 = Class              #169          // org/apache/commons/net/nntp/NNTPReply\n-   #32 = String             #170          // NNTP response 400 received.  Server closed connection.\n-   #33 = Methodref          #28.#171      // org/apache/commons/net/SocketClient._connectAction_:()V\n-   #34 = Class              #172          // org/apache/commons/net/io/CRLFLineReader\n-   #35 = Class              #173          // java/io/InputStreamReader\n-   #36 = Fieldref           #2.#174       // org/apache/commons/net/nntp/NNTP._input_:Ljava/io/InputStream;\n-   #37 = Fieldref           #2.#175       // org/apache/commons/net/nntp/NNTP.DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n-   #38 = Methodref          #35.#176      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #39 = Methodref          #34.#177      // org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n-   #40 = Class              #178          // java/io/BufferedWriter\n-   #41 = Class              #179          // java/io/OutputStreamWriter\n-   #42 = Fieldref           #2.#180       // org/apache/commons/net/nntp/NNTP._output_:Ljava/io/OutputStream;\n-   #43 = Methodref          #41.#181      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #44 = Methodref          #40.#182      // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-   #45 = Methodref          #2.#183       // org/apache/commons/net/nntp/NNTP.__getReply:()V\n-   #46 = Methodref          #28.#184      // org/apache/commons/net/SocketClient.disconnect:()V\n-   #47 = Methodref          #17.#185      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #48 = Methodref          #40.#186      // java/io/BufferedWriter.write:(Ljava/lang/String;)V\n-   #49 = Methodref          #40.#187      // java/io/BufferedWriter.flush:()V\n-   #50 = Methodref          #2.#188       // org/apache/commons/net/nntp/NNTP.fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n-   #51 = Methodref          #54.#189      // org/apache/commons/net/nntp/NNTPCommand.getCommand:(I)Ljava/lang/String;\n-   #52 = Methodref          #2.#190       // org/apache/commons/net/nntp/NNTP.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-   #53 = Methodref          #2.#191       // org/apache/commons/net/nntp/NNTP.sendCommand:(ILjava/lang/String;)I\n-   #54 = Class              #192          // org/apache/commons/net/nntp/NNTPCommand\n-   #55 = Methodref          #193.#194     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #56 = Methodref          #2.#195       // org/apache/commons/net/nntp/NNTP.sendCommand:(I)I\n-   #57 = String             #196          // GMT\n-   #58 = String             #197          //  <\n-   #59 = String             #198          // USER\n-   #60 = String             #199          // PASS\n-   #61 = Methodref          #17.#152      // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-   #62 = String             #200          //\n-   #63 = String             #201          // ACTIVE\n-   #64 = Methodref          #2.#202       // org/apache/commons/net/nntp/NNTP.article:(J)I\n-   #65 = Methodref          #2.#203       // org/apache/commons/net/nntp/NNTP.body:(J)I\n-   #66 = Methodref          #2.#204       // org/apache/commons/net/nntp/NNTP.head:(J)I\n-   #67 = Methodref          #2.#205       // org/apache/commons/net/nntp/NNTP.stat:(J)I\n-   #68 = Fieldref           #206.#207     // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-   #69 = Utf8               DEFAULT_PORT\n-   #70 = Utf8               I\n-   #71 = Utf8               ConstantValue\n-   #72 = Integer            119\n-   #73 = Utf8               DEFAULT_ENCODING\n-   #74 = Utf8               Ljava/nio/charset/Charset;\n-   #75 = Utf8               _isAllowedToPost\n-   #76 = Utf8               Z\n-   #77 = Utf8               replyCode\n-   #78 = Utf8               replyString\n-   #79 = Utf8               Ljava/lang/String;\n-   #80 = Utf8               _reader_\n-   #81 = Utf8               Ljava/io/BufferedReader;\n-   #82 = Utf8               _writer_\n-   #83 = Utf8               Ljava/io/BufferedWriter;\n-   #84 = Utf8               _commandSupport_\n-   #85 = Utf8               Lorg/apache/commons/net/ProtocolCommandSupport;\n-   #86 = Utf8               <init>\n-   #87 = Utf8               ()V\n-   #88 = Utf8               Code\n-   #89 = Utf8               LineNumberTable\n-   #90 = Utf8               __getReply\n-   #91 = Utf8               StackMapTable\n-   #92 = Utf8               Exceptions\n-   #93 = Class              #208          // java/io/IOException\n-   #94 = Utf8               _connectAction_\n-   #95 = Utf8               disconnect\n-   #96 = Utf8               isAllowedToPost\n-   #97 = Utf8               ()Z\n-   #98 = Utf8               sendCommand\n-   #99 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-  #100 = Utf8               (ILjava/lang/String;)I\n-  #101 = Utf8               (Ljava/lang/String;)I\n-  #102 = Utf8               (I)I\n-  #103 = Utf8               getReplyCode\n-  #104 = Utf8               ()I\n-  #105 = Utf8               getReply\n-  #106 = Utf8               getReplyString\n-  #107 = Utf8               ()Ljava/lang/String;\n-  #108 = Utf8               article\n-  #109 = Utf8               (J)I\n-  #110 = Utf8               body\n-  #111 = Utf8               head\n-  #112 = Utf8               stat\n-  #113 = Utf8               group\n-  #114 = Utf8               help\n-  #115 = Utf8               ihave\n-  #116 = Utf8               last\n-  #117 = Utf8               list\n-  #118 = Utf8               next\n-  #119 = Utf8               newgroups\n-  #120 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)I\n-  #121 = Utf8               newnews\n-  #122 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)I\n-  #123 = Utf8               post\n-  #124 = Utf8               quit\n-  #125 = Utf8               authinfoUser\n-  #126 = Utf8               authinfoPass\n-  #127 = Utf8               xover\n-  #128 = Utf8               xhdr\n-  #129 = Utf8               listActive\n-  #130 = Utf8               Deprecated\n-  #131 = Utf8               RuntimeVisibleAnnotations\n-  #132 = Utf8               Ljava/lang/Deprecated;\n-  #133 = Utf8               getCommandSupport\n-  #134 = Utf8               ()Lorg/apache/commons/net/ProtocolCommandSupport;\n-  #135 = Utf8               <clinit>\n-  #136 = Utf8               SourceFile\n-  #137 = Utf8               NNTP.java\n-  #138 = NameAndType        #86:#87       // \"<init>\":()V\n-  #139 = Utf8               org/apache/commons/net/nntp/NNTP\n-  #140 = NameAndType        #209:#210     // setDefaultPort:(I)V\n-  #141 = NameAndType        #78:#79       // replyString:Ljava/lang/String;\n-  #142 = NameAndType        #80:#81       // _reader_:Ljava/io/BufferedReader;\n-  #143 = NameAndType        #82:#83       // _writer_:Ljava/io/BufferedWriter;\n-  #144 = NameAndType        #75:#76       // _isAllowedToPost:Z\n-  #145 = Utf8               org/apache/commons/net/ProtocolCommandSupport\n-  #146 = NameAndType        #86:#211      // \"<init>\":(Ljava/lang/Object;)V\n-  #147 = NameAndType        #84:#85       // _commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n-  #148 = Class              #212          // java/io/BufferedReader\n-  #149 = NameAndType        #213:#107     // readLine:()Ljava/lang/String;\n-  #150 = Utf8               org/apache/commons/net/nntp/NNTPConnectionClosedException\n-  #151 = Utf8               Connection closed without indication.\n-  #152 = NameAndType        #86:#214      // \"<init>\":(Ljava/lang/String;)V\n-  #153 = Class              #215          // java/lang/String\n-  #154 = NameAndType        #216:#104     // length:()I\n-  #155 = Utf8               org/apache/commons/net/MalformedServerReplyException\n-  #156 = Utf8               java/lang/StringBuilder\n-  #157 = Utf8               Truncated server reply:\n-  #158 = NameAndType        #217:#218     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #159 = NameAndType        #219:#107     // toString:()Ljava/lang/String;\n-  #160 = NameAndType        #220:#221     // substring:(II)Ljava/lang/String;\n-  #161 = Class              #222          // java/lang/Integer\n-  #162 = NameAndType        #223:#101     // parseInt:(Ljava/lang/String;)I\n-  #163 = NameAndType        #77:#70       // replyCode:I\n-  #164 = Utf8               java/lang/NumberFormatException\n-  #165 = Utf8               Could not parse response code.\\nServer Reply:\n-  #166 = Utf8               org/apache/commons/net/SocketClient\n-  #167 = Utf8               \\r\\n\n-  #168 = NameAndType        #224:#225     // fireReplyReceived:(ILjava/lang/String;)V\n-  #169 = Utf8               org/apache/commons/net/nntp/NNTPReply\n-  #170 = Utf8               NNTP response 400 received.  Server closed connection.\n-  #171 = NameAndType        #94:#87       // _connectAction_:()V\n-  #172 = Utf8               org/apache/commons/net/io/CRLFLineReader\n-  #173 = Utf8               java/io/InputStreamReader\n-  #174 = NameAndType        #226:#227     // _input_:Ljava/io/InputStream;\n-  #175 = NameAndType        #73:#74       // DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n-  #176 = NameAndType        #86:#228      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #177 = NameAndType        #86:#229      // \"<init>\":(Ljava/io/Reader;)V\n-  #178 = Utf8               java/io/BufferedWriter\n-  #179 = Utf8               java/io/OutputStreamWriter\n-  #180 = NameAndType        #230:#231     // _output_:Ljava/io/OutputStream;\n-  #181 = NameAndType        #86:#232      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #182 = NameAndType        #86:#233      // \"<init>\":(Ljava/io/Writer;)V\n-  #183 = NameAndType        #90:#87       // __getReply:()V\n-  #184 = NameAndType        #95:#87       // disconnect:()V\n-  #185 = NameAndType        #217:#234     // append:(C)Ljava/lang/StringBuilder;\n-  #186 = NameAndType        #235:#214     // write:(Ljava/lang/String;)V\n-  #187 = NameAndType        #236:#87      // flush:()V\n-  #188 = NameAndType        #237:#238     // fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n-  #189 = NameAndType        #239:#240     // getCommand:(I)Ljava/lang/String;\n-  #190 = NameAndType        #98:#99       // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-  #191 = NameAndType        #98:#100      // sendCommand:(ILjava/lang/String;)I\n-  #192 = Utf8               org/apache/commons/net/nntp/NNTPCommand\n-  #193 = Class              #241          // java/lang/Long\n-  #194 = NameAndType        #219:#242     // toString:(J)Ljava/lang/String;\n-  #195 = NameAndType        #98:#102      // sendCommand:(I)I\n-  #196 = Utf8               GMT\n-  #197 = Utf8                <\n-  #198 = Utf8               USER\n-  #199 = Utf8               PASS\n-  #200 = Utf8\n-  #201 = Utf8               ACTIVE\n-  #202 = NameAndType        #108:#109     // article:(J)I\n-  #203 = NameAndType        #110:#109     // body:(J)I\n-  #204 = NameAndType        #111:#109     // head:(J)I\n-  #205 = NameAndType        #112:#109     // stat:(J)I\n-  #206 = Class              #243          // java/nio/charset/StandardCharsets\n-  #207 = NameAndType        #244:#74      // ISO_8859_1:Ljava/nio/charset/Charset;\n-  #208 = Utf8               java/io/IOException\n-  #209 = Utf8               setDefaultPort\n-  #210 = Utf8               (I)V\n-  #211 = Utf8               (Ljava/lang/Object;)V\n-  #212 = Utf8               java/io/BufferedReader\n-  #213 = Utf8               readLine\n-  #214 = Utf8               (Ljava/lang/String;)V\n-  #215 = Utf8               java/lang/String\n-  #216 = Utf8               length\n-  #217 = Utf8               append\n-  #218 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #219 = Utf8               toString\n-  #220 = Utf8               substring\n-  #221 = Utf8               (II)Ljava/lang/String;\n-  #222 = Utf8               java/lang/Integer\n-  #223 = Utf8               parseInt\n-  #224 = Utf8               fireReplyReceived\n-  #225 = Utf8               (ILjava/lang/String;)V\n-  #226 = Utf8               _input_\n-  #227 = Utf8               Ljava/io/InputStream;\n-  #228 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #229 = Utf8               (Ljava/io/Reader;)V\n-  #230 = Utf8               _output_\n-  #231 = Utf8               Ljava/io/OutputStream;\n-  #232 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #233 = Utf8               (Ljava/io/Writer;)V\n-  #234 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #235 = Utf8               write\n-  #236 = Utf8               flush\n-  #237 = Utf8               fireCommandSent\n-  #238 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #239 = Utf8               getCommand\n-  #240 = Utf8               (I)Ljava/lang/String;\n-  #241 = Utf8               java/lang/Long\n-  #242 = Utf8               (J)Ljava/lang/String;\n-  #243 = Utf8               java/nio/charset/StandardCharsets\n-  #244 = Utf8               ISO_8859_1\n+    #1 = Methodref          #2.#3         // org/apache/commons/net/SocketClient.\"<init>\":()V\n+    #2 = Class              #4            // org/apache/commons/net/SocketClient\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               org/apache/commons/net/SocketClient\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/net/nntp/NNTP\n+    #8 = Utf8               org/apache/commons/net/nntp/NNTP\n+    #9 = Methodref          #7.#10        // org/apache/commons/net/nntp/NNTP.setDefaultPort:(I)V\n+   #10 = NameAndType        #11:#12       // setDefaultPort:(I)V\n+   #11 = Utf8               setDefaultPort\n+   #12 = Utf8               (I)V\n+   #13 = Fieldref           #7.#14        // org/apache/commons/net/nntp/NNTP.replyString:Ljava/lang/String;\n+   #14 = NameAndType        #15:#16       // replyString:Ljava/lang/String;\n+   #15 = Utf8               replyString\n+   #16 = Utf8               Ljava/lang/String;\n+   #17 = Fieldref           #7.#18        // org/apache/commons/net/nntp/NNTP._reader_:Ljava/io/BufferedReader;\n+   #18 = NameAndType        #19:#20       // _reader_:Ljava/io/BufferedReader;\n+   #19 = Utf8               _reader_\n+   #20 = Utf8               Ljava/io/BufferedReader;\n+   #21 = Fieldref           #7.#22        // org/apache/commons/net/nntp/NNTP._writer_:Ljava/io/BufferedWriter;\n+   #22 = NameAndType        #23:#24       // _writer_:Ljava/io/BufferedWriter;\n+   #23 = Utf8               _writer_\n+   #24 = Utf8               Ljava/io/BufferedWriter;\n+   #25 = Fieldref           #7.#26        // org/apache/commons/net/nntp/NNTP._isAllowedToPost:Z\n+   #26 = NameAndType        #27:#28       // _isAllowedToPost:Z\n+   #27 = Utf8               _isAllowedToPost\n+   #28 = Utf8               Z\n+   #29 = Class              #30           // org/apache/commons/net/ProtocolCommandSupport\n+   #30 = Utf8               org/apache/commons/net/ProtocolCommandSupport\n+   #31 = Methodref          #29.#32       // org/apache/commons/net/ProtocolCommandSupport.\"<init>\":(Ljava/lang/Object;)V\n+   #32 = NameAndType        #5:#33        // \"<init>\":(Ljava/lang/Object;)V\n+   #33 = Utf8               (Ljava/lang/Object;)V\n+   #34 = Fieldref           #7.#35        // org/apache/commons/net/nntp/NNTP._commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n+   #35 = NameAndType        #36:#37       // _commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n+   #36 = Utf8               _commandSupport_\n+   #37 = Utf8               Lorg/apache/commons/net/ProtocolCommandSupport;\n+   #38 = Methodref          #39.#40       // java/io/BufferedReader.readLine:()Ljava/lang/String;\n+   #39 = Class              #41           // java/io/BufferedReader\n+   #40 = NameAndType        #42:#43       // readLine:()Ljava/lang/String;\n+   #41 = Utf8               java/io/BufferedReader\n+   #42 = Utf8               readLine\n+   #43 = Utf8               ()Ljava/lang/String;\n+   #44 = Class              #45           // org/apache/commons/net/nntp/NNTPConnectionClosedException\n+   #45 = Utf8               org/apache/commons/net/nntp/NNTPConnectionClosedException\n+   #46 = String             #47           // Connection closed without indication.\n+   #47 = Utf8               Connection closed without indication.\n+   #48 = Methodref          #44.#49       // org/apache/commons/net/nntp/NNTPConnectionClosedException.\"<init>\":(Ljava/lang/String;)V\n+   #49 = NameAndType        #5:#50        // \"<init>\":(Ljava/lang/String;)V\n+   #50 = Utf8               (Ljava/lang/String;)V\n+   #51 = Methodref          #52.#53       // java/lang/String.length:()I\n+   #52 = Class              #54           // java/lang/String\n+   #53 = NameAndType        #55:#56       // length:()I\n+   #54 = Utf8               java/lang/String\n+   #55 = Utf8               length\n+   #56 = Utf8               ()I\n+   #57 = Class              #58           // org/apache/commons/net/MalformedServerReplyException\n+   #58 = Utf8               org/apache/commons/net/MalformedServerReplyException\n+   #59 = Class              #60           // java/lang/StringBuilder\n+   #60 = Utf8               java/lang/StringBuilder\n+   #61 = Methodref          #59.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #62 = String             #63           // Truncated server reply:\n+   #63 = Utf8               Truncated server reply:\n+   #64 = Methodref          #59.#65       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #65 = NameAndType        #66:#67       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #66 = Utf8               append\n+   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #68 = Methodref          #59.#69       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #69 = NameAndType        #70:#43       // toString:()Ljava/lang/String;\n+   #70 = Utf8               toString\n+   #71 = Methodref          #57.#49       // org/apache/commons/net/MalformedServerReplyException.\"<init>\":(Ljava/lang/String;)V\n+   #72 = Methodref          #52.#73       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #73 = NameAndType        #74:#75       // substring:(II)Ljava/lang/String;\n+   #74 = Utf8               substring\n+   #75 = Utf8               (II)Ljava/lang/String;\n+   #76 = Methodref          #77.#78       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #77 = Class              #79           // java/lang/Integer\n+   #78 = NameAndType        #80:#81       // parseInt:(Ljava/lang/String;)I\n+   #79 = Utf8               java/lang/Integer\n+   #80 = Utf8               parseInt\n+   #81 = Utf8               (Ljava/lang/String;)I\n+   #82 = Fieldref           #7.#83        // org/apache/commons/net/nntp/NNTP.replyCode:I\n+   #83 = NameAndType        #84:#85       // replyCode:I\n+   #84 = Utf8               replyCode\n+   #85 = Utf8               I\n+   #86 = Class              #87           // java/lang/NumberFormatException\n+   #87 = Utf8               java/lang/NumberFormatException\n+   #88 = String             #89           // Could not parse response code.\\nServer Reply:\n+   #89 = Utf8               Could not parse response code.\\nServer Reply:\n+   #90 = String             #91           // \\r\\n\n+   #91 = Utf8               \\r\\n\n+   #92 = Methodref          #7.#93        // org/apache/commons/net/nntp/NNTP.fireReplyReceived:(ILjava/lang/String;)V\n+   #93 = NameAndType        #94:#95       // fireReplyReceived:(ILjava/lang/String;)V\n+   #94 = Utf8               fireReplyReceived\n+   #95 = Utf8               (ILjava/lang/String;)V\n+   #96 = Class              #97           // org/apache/commons/net/nntp/NNTPReply\n+   #97 = Utf8               org/apache/commons/net/nntp/NNTPReply\n+   #98 = String             #99           // NNTP response 400 received.  Server closed connection.\n+   #99 = Utf8               NNTP response 400 received.  Server closed connection.\n+  #100 = Methodref          #2.#101       // org/apache/commons/net/SocketClient._connectAction_:()V\n+  #101 = NameAndType        #102:#6       // _connectAction_:()V\n+  #102 = Utf8               _connectAction_\n+  #103 = Class              #104          // org/apache/commons/net/io/CRLFLineReader\n+  #104 = Utf8               org/apache/commons/net/io/CRLFLineReader\n+  #105 = Class              #106          // java/io/InputStreamReader\n+  #106 = Utf8               java/io/InputStreamReader\n+  #107 = Fieldref           #7.#108       // org/apache/commons/net/nntp/NNTP._input_:Ljava/io/InputStream;\n+  #108 = NameAndType        #109:#110     // _input_:Ljava/io/InputStream;\n+  #109 = Utf8               _input_\n+  #110 = Utf8               Ljava/io/InputStream;\n+  #111 = Fieldref           #7.#112       // org/apache/commons/net/nntp/NNTP.DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n+  #112 = NameAndType        #113:#114     // DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n+  #113 = Utf8               DEFAULT_ENCODING\n+  #114 = Utf8               Ljava/nio/charset/Charset;\n+  #115 = Methodref          #105.#116     // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #116 = NameAndType        #5:#117       // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #117 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+  #118 = Methodref          #103.#119     // org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n+  #119 = NameAndType        #5:#120       // \"<init>\":(Ljava/io/Reader;)V\n+  #120 = Utf8               (Ljava/io/Reader;)V\n+  #121 = Class              #122          // java/io/BufferedWriter\n+  #122 = Utf8               java/io/BufferedWriter\n+  #123 = Class              #124          // java/io/OutputStreamWriter\n+  #124 = Utf8               java/io/OutputStreamWriter\n+  #125 = Fieldref           #7.#126       // org/apache/commons/net/nntp/NNTP._output_:Ljava/io/OutputStream;\n+  #126 = NameAndType        #127:#128     // _output_:Ljava/io/OutputStream;\n+  #127 = Utf8               _output_\n+  #128 = Utf8               Ljava/io/OutputStream;\n+  #129 = Methodref          #123.#130     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #130 = NameAndType        #5:#131       // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #131 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #132 = Methodref          #121.#133     // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+  #133 = NameAndType        #5:#134       // \"<init>\":(Ljava/io/Writer;)V\n+  #134 = Utf8               (Ljava/io/Writer;)V\n+  #135 = Methodref          #7.#136       // org/apache/commons/net/nntp/NNTP.__getReply:()V\n+  #136 = NameAndType        #137:#6       // __getReply:()V\n+  #137 = Utf8               __getReply\n+  #138 = Methodref          #2.#139       // org/apache/commons/net/SocketClient.disconnect:()V\n+  #139 = NameAndType        #140:#6       // disconnect:()V\n+  #140 = Utf8               disconnect\n+  #141 = Methodref          #59.#142      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #142 = NameAndType        #66:#143      // append:(C)Ljava/lang/StringBuilder;\n+  #143 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #144 = Methodref          #121.#145     // java/io/BufferedWriter.write:(Ljava/lang/String;)V\n+  #145 = NameAndType        #146:#50      // write:(Ljava/lang/String;)V\n+  #146 = Utf8               write\n+  #147 = Methodref          #121.#148     // java/io/BufferedWriter.flush:()V\n+  #148 = NameAndType        #149:#6       // flush:()V\n+  #149 = Utf8               flush\n+  #150 = Methodref          #7.#151       // org/apache/commons/net/nntp/NNTP.fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+  #151 = NameAndType        #152:#153     // fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+  #152 = Utf8               fireCommandSent\n+  #153 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #154 = Methodref          #155.#156     // org/apache/commons/net/nntp/NNTPCommand.getCommand:(I)Ljava/lang/String;\n+  #155 = Class              #157          // org/apache/commons/net/nntp/NNTPCommand\n+  #156 = NameAndType        #158:#159     // getCommand:(I)Ljava/lang/String;\n+  #157 = Utf8               org/apache/commons/net/nntp/NNTPCommand\n+  #158 = Utf8               getCommand\n+  #159 = Utf8               (I)Ljava/lang/String;\n+  #160 = Methodref          #7.#161       // org/apache/commons/net/nntp/NNTP.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #161 = NameAndType        #162:#163     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #162 = Utf8               sendCommand\n+  #163 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #164 = Methodref          #7.#165       // org/apache/commons/net/nntp/NNTP.sendCommand:(ILjava/lang/String;)I\n+  #165 = NameAndType        #162:#166     // sendCommand:(ILjava/lang/String;)I\n+  #166 = Utf8               (ILjava/lang/String;)I\n+  #167 = Methodref          #168.#169     // java/lang/Long.toString:(J)Ljava/lang/String;\n+  #168 = Class              #170          // java/lang/Long\n+  #169 = NameAndType        #70:#171      // toString:(J)Ljava/lang/String;\n+  #170 = Utf8               java/lang/Long\n+  #171 = Utf8               (J)Ljava/lang/String;\n+  #172 = Methodref          #7.#173       // org/apache/commons/net/nntp/NNTP.sendCommand:(I)I\n+  #173 = NameAndType        #162:#174     // sendCommand:(I)I\n+  #174 = Utf8               (I)I\n+  #175 = String             #176          // GMT\n+  #176 = Utf8               GMT\n+  #177 = String             #178          //  <\n+  #178 = Utf8                <\n+  #179 = String             #180          // USER\n+  #180 = Utf8               USER\n+  #181 = String             #182          // PASS\n+  #182 = Utf8               PASS\n+  #183 = Methodref          #59.#49       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #184 = String             #185          //\n+  #185 = Utf8\n+  #186 = String             #187          // ACTIVE\n+  #187 = Utf8               ACTIVE\n+  #188 = Methodref          #7.#189       // org/apache/commons/net/nntp/NNTP.article:(J)I\n+  #189 = NameAndType        #190:#191     // article:(J)I\n+  #190 = Utf8               article\n+  #191 = Utf8               (J)I\n+  #192 = Methodref          #7.#193       // org/apache/commons/net/nntp/NNTP.body:(J)I\n+  #193 = NameAndType        #194:#191     // body:(J)I\n+  #194 = Utf8               body\n+  #195 = Methodref          #7.#196       // org/apache/commons/net/nntp/NNTP.head:(J)I\n+  #196 = NameAndType        #197:#191     // head:(J)I\n+  #197 = Utf8               head\n+  #198 = Methodref          #7.#199       // org/apache/commons/net/nntp/NNTP.stat:(J)I\n+  #199 = NameAndType        #200:#191     // stat:(J)I\n+  #200 = Utf8               stat\n+  #201 = Fieldref           #202.#203     // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+  #202 = Class              #204          // java/nio/charset/StandardCharsets\n+  #203 = NameAndType        #205:#114     // ISO_8859_1:Ljava/nio/charset/Charset;\n+  #204 = Utf8               java/nio/charset/StandardCharsets\n+  #205 = Utf8               ISO_8859_1\n+  #206 = Utf8               DEFAULT_PORT\n+  #207 = Utf8               ConstantValue\n+  #208 = Integer            119\n+  #209 = Utf8               Code\n+  #210 = Utf8               LineNumberTable\n+  #211 = Utf8               StackMapTable\n+  #212 = Utf8               Exceptions\n+  #213 = Class              #214          // java/io/IOException\n+  #214 = Utf8               java/io/IOException\n+  #215 = Utf8               isAllowedToPost\n+  #216 = Utf8               ()Z\n+  #217 = Utf8               getReplyCode\n+  #218 = Utf8               getReply\n+  #219 = Utf8               getReplyString\n+  #220 = Utf8               group\n+  #221 = Utf8               help\n+  #222 = Utf8               ihave\n+  #223 = Utf8               last\n+  #224 = Utf8               list\n+  #225 = Utf8               next\n+  #226 = Utf8               newgroups\n+  #227 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)I\n+  #228 = Utf8               newnews\n+  #229 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)I\n+  #230 = Utf8               post\n+  #231 = Utf8               quit\n+  #232 = Utf8               authinfoUser\n+  #233 = Utf8               authinfoPass\n+  #234 = Utf8               xover\n+  #235 = Utf8               xhdr\n+  #236 = Utf8               listActive\n+  #237 = Utf8               Deprecated\n+  #238 = Utf8               RuntimeVisibleAnnotations\n+  #239 = Utf8               Ljava/lang/Deprecated;\n+  #240 = Utf8               getCommandSupport\n+  #241 = Utf8               ()Lorg/apache/commons/net/ProtocolCommandSupport;\n+  #242 = Utf8               <clinit>\n+  #243 = Utf8               SourceFile\n+  #244 = Utf8               NNTP.java\n {\n   public static final int DEFAULT_PORT = 119;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 119\n \n   private static final java.nio.charset.Charset DEFAULT_ENCODING;\n@@ -291,33 +291,33 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/net/SocketClient.\"<init>\":()V\n          4: aload_0\n          5: bipush        119\n-         7: invokevirtual #3                  // Method setDefaultPort:(I)V\n+         7: invokevirtual #9                  // Method setDefaultPort:(I)V\n         10: aload_0\n         11: aconst_null\n-        12: putfield      #4                  // Field replyString:Ljava/lang/String;\n+        12: putfield      #13                 // Field replyString:Ljava/lang/String;\n         15: aload_0\n         16: aconst_null\n-        17: putfield      #5                  // Field _reader_:Ljava/io/BufferedReader;\n+        17: putfield      #17                 // Field _reader_:Ljava/io/BufferedReader;\n         20: aload_0\n         21: aconst_null\n-        22: putfield      #6                  // Field _writer_:Ljava/io/BufferedWriter;\n+        22: putfield      #21                 // Field _writer_:Ljava/io/BufferedWriter;\n         25: aload_0\n         26: iconst_0\n-        27: putfield      #7                  // Field _isAllowedToPost:Z\n+        27: putfield      #25                 // Field _isAllowedToPost:Z\n         30: aload_0\n-        31: new           #8                  // class org/apache/commons/net/ProtocolCommandSupport\n+        31: new           #29                 // class org/apache/commons/net/ProtocolCommandSupport\n         34: dup\n         35: aload_0\n-        36: invokespecial #9                  // Method org/apache/commons/net/ProtocolCommandSupport.\"<init>\":(Ljava/lang/Object;)V\n-        39: putfield      #10                 // Field _commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n+        36: invokespecial #31                 // Method org/apache/commons/net/ProtocolCommandSupport.\"<init>\":(Ljava/lang/Object;)V\n+        39: putfield      #34                 // Field _commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n         42: return\n       LineNumberTable:\n         line 122: 0\n         line 123: 4\n         line 124: 10\n         line 125: 15\n         line 126: 20\n@@ -328,87 +328,87 @@\n   private void __getReply() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #5                  // Field _reader_:Ljava/io/BufferedReader;\n-         5: invokevirtual #11                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n-         8: putfield      #4                  // Field replyString:Ljava/lang/String;\n+         2: getfield      #17                 // Field _reader_:Ljava/io/BufferedReader;\n+         5: invokevirtual #38                 // Method java/io/BufferedReader.readLine:()Ljava/lang/String;\n+         8: putfield      #13                 // Field replyString:Ljava/lang/String;\n         11: aload_0\n-        12: getfield      #4                  // Field replyString:Ljava/lang/String;\n+        12: getfield      #13                 // Field replyString:Ljava/lang/String;\n         15: ifnonnull     28\n-        18: new           #12                 // class org/apache/commons/net/nntp/NNTPConnectionClosedException\n+        18: new           #44                 // class org/apache/commons/net/nntp/NNTPConnectionClosedException\n         21: dup\n-        22: ldc           #13                 // String Connection closed without indication.\n-        24: invokespecial #14                 // Method org/apache/commons/net/nntp/NNTPConnectionClosedException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #46                 // String Connection closed without indication.\n+        24: invokespecial #48                 // Method org/apache/commons/net/nntp/NNTPConnectionClosedException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: aload_0\n-        29: getfield      #4                  // Field replyString:Ljava/lang/String;\n-        32: invokevirtual #15                 // Method java/lang/String.length:()I\n+        29: getfield      #13                 // Field replyString:Ljava/lang/String;\n+        32: invokevirtual #51                 // Method java/lang/String.length:()I\n         35: iconst_3\n         36: if_icmpge     69\n-        39: new           #16                 // class org/apache/commons/net/MalformedServerReplyException\n+        39: new           #57                 // class org/apache/commons/net/MalformedServerReplyException\n         42: dup\n-        43: new           #17                 // class java/lang/StringBuilder\n+        43: new           #59                 // class java/lang/StringBuilder\n         46: dup\n-        47: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        50: ldc           #19                 // String Truncated server reply:\n-        52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        50: ldc           #62                 // String Truncated server reply:\n+        52: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         55: aload_0\n-        56: getfield      #4                  // Field replyString:Ljava/lang/String;\n-        59: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        62: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #22                 // Method org/apache/commons/net/MalformedServerReplyException.\"<init>\":(Ljava/lang/String;)V\n+        56: getfield      #13                 // Field replyString:Ljava/lang/String;\n+        59: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        65: invokespecial #71                 // Method org/apache/commons/net/MalformedServerReplyException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: aload_0\n         70: aload_0\n-        71: getfield      #4                  // Field replyString:Ljava/lang/String;\n+        71: getfield      #13                 // Field replyString:Ljava/lang/String;\n         74: iconst_0\n         75: iconst_3\n-        76: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        79: invokestatic  #24                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-        82: putfield      #25                 // Field replyCode:I\n+        76: invokevirtual #72                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        79: invokestatic  #76                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        82: putfield      #82                 // Field replyCode:I\n         85: goto          119\n         88: astore_1\n-        89: new           #16                 // class org/apache/commons/net/MalformedServerReplyException\n+        89: new           #57                 // class org/apache/commons/net/MalformedServerReplyException\n         92: dup\n-        93: new           #17                 // class java/lang/StringBuilder\n+        93: new           #59                 // class java/lang/StringBuilder\n         96: dup\n-        97: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       100: ldc           #27                 // String Could not parse response code.\\nServer Reply:\n-       102: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        97: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       100: ldc           #88                 // String Could not parse response code.\\nServer Reply:\n+       102: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        105: aload_0\n-       106: getfield      #4                  // Field replyString:Ljava/lang/String;\n-       109: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       112: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       115: invokespecial #22                 // Method org/apache/commons/net/MalformedServerReplyException.\"<init>\":(Ljava/lang/String;)V\n+       106: getfield      #13                 // Field replyString:Ljava/lang/String;\n+       109: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       112: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       115: invokespecial #71                 // Method org/apache/commons/net/MalformedServerReplyException.\"<init>\":(Ljava/lang/String;)V\n        118: athrow\n        119: aload_0\n        120: aload_0\n-       121: getfield      #25                 // Field replyCode:I\n-       124: new           #17                 // class java/lang/StringBuilder\n+       121: getfield      #82                 // Field replyCode:I\n+       124: new           #59                 // class java/lang/StringBuilder\n        127: dup\n-       128: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       128: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n        131: aload_0\n-       132: getfield      #4                  // Field replyString:Ljava/lang/String;\n-       135: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       138: ldc           #29                 // String \\r\\n\n-       140: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       143: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       146: invokevirtual #30                 // Method fireReplyReceived:(ILjava/lang/String;)V\n+       132: getfield      #13                 // Field replyString:Ljava/lang/String;\n+       135: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       138: ldc           #90                 // String \\r\\n\n+       140: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       143: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       146: invokevirtual #92                 // Method fireReplyReceived:(ILjava/lang/String;)V\n        149: aload_0\n-       150: getfield      #25                 // Field replyCode:I\n+       150: getfield      #82                 // Field replyCode:I\n        153: sipush        400\n        156: if_icmpne     169\n-       159: new           #12                 // class org/apache/commons/net/nntp/NNTPConnectionClosedException\n+       159: new           #44                 // class org/apache/commons/net/nntp/NNTPConnectionClosedException\n        162: dup\n-       163: ldc           #32                 // String NNTP response 400 received.  Server closed connection.\n-       165: invokespecial #14                 // Method org/apache/commons/net/nntp/NNTPConnectionClosedException.\"<init>\":(Ljava/lang/String;)V\n+       163: ldc           #98                 // String NNTP response 400 received.  Server closed connection.\n+       165: invokespecial #48                 // Method org/apache/commons/net/nntp/NNTPConnectionClosedException.\"<init>\":(Ljava/lang/String;)V\n        168: athrow\n        169: return\n       Exception table:\n          from    to  target type\n             69    85    88   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 133: 0\n@@ -436,48 +436,48 @@\n \n   protected void _connectAction_() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=7, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #33                 // Method org/apache/commons/net/SocketClient._connectAction_:()V\n+         1: invokespecial #100                // Method org/apache/commons/net/SocketClient._connectAction_:()V\n          4: aload_0\n-         5: new           #34                 // class org/apache/commons/net/io/CRLFLineReader\n+         5: new           #103                // class org/apache/commons/net/io/CRLFLineReader\n          8: dup\n-         9: new           #35                 // class java/io/InputStreamReader\n+         9: new           #105                // class java/io/InputStreamReader\n         12: dup\n         13: aload_0\n-        14: getfield      #36                 // Field _input_:Ljava/io/InputStream;\n-        17: getstatic     #37                 // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n-        20: invokespecial #38                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-        23: invokespecial #39                 // Method org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n-        26: putfield      #5                  // Field _reader_:Ljava/io/BufferedReader;\n+        14: getfield      #107                // Field _input_:Ljava/io/InputStream;\n+        17: getstatic     #111                // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n+        20: invokespecial #115                // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+        23: invokespecial #118                // Method org/apache/commons/net/io/CRLFLineReader.\"<init>\":(Ljava/io/Reader;)V\n+        26: putfield      #17                 // Field _reader_:Ljava/io/BufferedReader;\n         29: aload_0\n-        30: new           #40                 // class java/io/BufferedWriter\n+        30: new           #121                // class java/io/BufferedWriter\n         33: dup\n-        34: new           #41                 // class java/io/OutputStreamWriter\n+        34: new           #123                // class java/io/OutputStreamWriter\n         37: dup\n         38: aload_0\n-        39: getfield      #42                 // Field _output_:Ljava/io/OutputStream;\n-        42: getstatic     #37                 // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n-        45: invokespecial #43                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-        48: invokespecial #44                 // Method java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-        51: putfield      #6                  // Field _writer_:Ljava/io/BufferedWriter;\n+        39: getfield      #125                // Field _output_:Ljava/io/OutputStream;\n+        42: getstatic     #111                // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n+        45: invokespecial #129                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        48: invokespecial #132                // Method java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+        51: putfield      #21                 // Field _writer_:Ljava/io/BufferedWriter;\n         54: aload_0\n-        55: invokespecial #45                 // Method __getReply:()V\n+        55: invokespecial #135                // Method __getReply:()V\n         58: aload_0\n         59: aload_0\n-        60: getfield      #25                 // Field replyCode:I\n+        60: getfield      #82                 // Field replyCode:I\n         63: sipush        200\n         66: if_icmpne     73\n         69: iconst_1\n         70: goto          74\n         73: iconst_0\n-        74: putfield      #7                  // Field _isAllowedToPost:Z\n+        74: putfield      #25                 // Field _isAllowedToPost:Z\n         77: return\n       LineNumberTable:\n         line 174: 0\n         line 175: 4\n         line 178: 29\n         line 181: 54\n         line 183: 58\n@@ -495,27 +495,27 @@\n \n   public void disconnect() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #46                 // Method org/apache/commons/net/SocketClient.disconnect:()V\n+         1: invokespecial #138                // Method org/apache/commons/net/SocketClient.disconnect:()V\n          4: aload_0\n          5: aconst_null\n-         6: putfield      #5                  // Field _reader_:Ljava/io/BufferedReader;\n+         6: putfield      #17                 // Field _reader_:Ljava/io/BufferedReader;\n          9: aload_0\n         10: aconst_null\n-        11: putfield      #6                  // Field _writer_:Ljava/io/BufferedWriter;\n+        11: putfield      #21                 // Field _writer_:Ljava/io/BufferedWriter;\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #4                  // Field replyString:Ljava/lang/String;\n+        16: putfield      #13                 // Field replyString:Ljava/lang/String;\n         19: aload_0\n         20: iconst_0\n-        21: putfield      #7                  // Field _isAllowedToPost:Z\n+        21: putfield      #25                 // Field _isAllowedToPost:Z\n         24: return\n       LineNumberTable:\n         line 197: 0\n         line 198: 4\n         line 199: 9\n         line 200: 14\n         line 201: 19\n@@ -525,64 +525,64 @@\n \n   public boolean isAllowedToPost();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field _isAllowedToPost:Z\n+         1: getfield      #25                 // Field _isAllowedToPost:Z\n          4: ireturn\n       LineNumberTable:\n         line 214: 0\n \n   public int sendCommand(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_3\n          8: aload_3\n          9: aload_1\n-        10: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        10: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         13: pop\n         14: aload_2\n         15: ifnull        31\n         18: aload_3\n         19: bipush        32\n-        21: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        21: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         24: pop\n         25: aload_3\n         26: aload_2\n-        27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: pop\n         31: aload_3\n-        32: ldc           #29                 // String \\r\\n\n-        34: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        32: ldc           #90                 // String \\r\\n\n+        34: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: pop\n         38: aload_0\n-        39: getfield      #6                  // Field _writer_:Ljava/io/BufferedWriter;\n+        39: getfield      #21                 // Field _writer_:Ljava/io/BufferedWriter;\n         42: aload_3\n-        43: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        43: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         46: dup\n         47: astore        4\n-        49: invokevirtual #48                 // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V\n+        49: invokevirtual #144                // Method java/io/BufferedWriter.write:(Ljava/lang/String;)V\n         52: aload_0\n-        53: getfield      #6                  // Field _writer_:Ljava/io/BufferedWriter;\n-        56: invokevirtual #49                 // Method java/io/BufferedWriter.flush:()V\n+        53: getfield      #21                 // Field _writer_:Ljava/io/BufferedWriter;\n+        56: invokevirtual #147                // Method java/io/BufferedWriter.flush:()V\n         59: aload_0\n         60: aload_1\n         61: aload         4\n-        63: invokevirtual #50                 // Method fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n+        63: invokevirtual #150                // Method fireCommandSent:(Ljava/lang/String;Ljava/lang/String;)V\n         66: aload_0\n-        67: invokespecial #45                 // Method __getReply:()V\n+        67: invokespecial #135                // Method __getReply:()V\n         70: aload_0\n-        71: getfield      #25                 // Field replyCode:I\n+        71: getfield      #82                 // Field replyCode:I\n         74: ireturn\n       LineNumberTable:\n         line 239: 0\n         line 240: 8\n         line 242: 14\n         line 244: 18\n         line 245: 25\n@@ -602,407 +602,407 @@\n   public int sendCommand(int, java.lang.String) throws java.io.IOException;\n     descriptor: (ILjava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #51                 // Method org/apache/commons/net/nntp/NNTPCommand.getCommand:(I)Ljava/lang/String;\n+         2: invokestatic  #154                // Method org/apache/commons/net/nntp/NNTPCommand.getCommand:(I)Ljava/lang/String;\n          5: aload_2\n-         6: invokevirtual #52                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+         6: invokevirtual #160                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n          9: ireturn\n       LineNumberTable:\n         line 283: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int sendCommand(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokevirtual #52                 // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+         3: invokevirtual #160                // Method sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 307: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int sendCommand(int) throws java.io.IOException;\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: aconst_null\n-         3: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 332: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int getReplyCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field replyCode:I\n+         1: getfield      #82                 // Field replyCode:I\n          4: ireturn\n       LineNumberTable:\n         line 346: 0\n \n   public int getReply() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #45                 // Method __getReply:()V\n+         1: invokespecial #135                // Method __getReply:()V\n          4: aload_0\n-         5: getfield      #25                 // Field replyCode:I\n+         5: getfield      #82                 // Field replyCode:I\n          8: ireturn\n       LineNumberTable:\n         line 368: 0\n         line 369: 4\n     Exceptions:\n       throws java.io.IOException\n \n   public java.lang.String getReplyString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field replyString:Ljava/lang/String;\n+         1: getfield      #13                 // Field replyString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 381: 0\n \n   public int article(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_0\n          2: aload_1\n-         3: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 402: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int article(long) throws java.io.IOException;\n     descriptor: (J)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: iconst_0\n          2: lload_1\n-         3: invokestatic  #55                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n-         6: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokestatic  #167                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+         6: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          9: ireturn\n       LineNumberTable:\n         line 422: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int article() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #56                 // Method sendCommand:(I)I\n+         2: invokevirtual #172                // Method sendCommand:(I)I\n          5: ireturn\n       LineNumberTable:\n         line 440: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int body(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n          2: aload_1\n-         3: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 462: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int body(long) throws java.io.IOException;\n     descriptor: (J)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n          2: lload_1\n-         3: invokestatic  #55                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n-         6: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokestatic  #167                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+         6: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          9: ireturn\n       LineNumberTable:\n         line 482: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int body() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #56                 // Method sendCommand:(I)I\n+         2: invokevirtual #172                // Method sendCommand:(I)I\n          5: ireturn\n       LineNumberTable:\n         line 500: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int head(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_3\n          2: aload_1\n-         3: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 522: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int head(long) throws java.io.IOException;\n     descriptor: (J)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: iconst_3\n          2: lload_1\n-         3: invokestatic  #55                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n-         6: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokestatic  #167                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+         6: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          9: ireturn\n       LineNumberTable:\n         line 542: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int head() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_3\n-         2: invokevirtual #56                 // Method sendCommand:(I)I\n+         2: invokevirtual #172                // Method sendCommand:(I)I\n          5: ireturn\n       LineNumberTable:\n         line 560: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int stat(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        14\n          3: aload_1\n-         4: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         4: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          7: ireturn\n       LineNumberTable:\n         line 582: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int stat(long) throws java.io.IOException;\n     descriptor: (J)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: bipush        14\n          3: lload_1\n-         4: invokestatic  #55                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n-         7: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         4: invokestatic  #167                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+         7: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n         10: ireturn\n       LineNumberTable:\n         line 602: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int stat() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        14\n-         3: invokevirtual #56                 // Method sendCommand:(I)I\n+         3: invokevirtual #172                // Method sendCommand:(I)I\n          6: ireturn\n       LineNumberTable:\n         line 620: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int group(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_2\n          2: aload_1\n-         3: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 640: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int help() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_4\n-         2: invokevirtual #56                 // Method sendCommand:(I)I\n+         2: invokevirtual #172                // Method sendCommand:(I)I\n          5: ireturn\n       LineNumberTable:\n         line 659: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int ihave(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iconst_5\n          2: aload_1\n-         3: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         3: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          6: ireturn\n       LineNumberTable:\n         line 680: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int last() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        6\n-         3: invokevirtual #56                 // Method sendCommand:(I)I\n+         3: invokevirtual #172                // Method sendCommand:(I)I\n          6: ireturn\n       LineNumberTable:\n         line 699: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int list() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        7\n-         3: invokevirtual #56                 // Method sendCommand:(I)I\n+         3: invokevirtual #172                // Method sendCommand:(I)I\n          6: ireturn\n       LineNumberTable:\n         line 719: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int next() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        10\n-         3: invokevirtual #56                 // Method sendCommand:(I)I\n+         3: invokevirtual #172                // Method sendCommand:(I)I\n          6: ireturn\n       LineNumberTable:\n         line 739: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int newgroups(java.lang.String, java.lang.String, boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=5\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore        5\n          9: aload         5\n         11: aload_1\n-        12: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         15: pop\n         16: aload         5\n         18: bipush        32\n-        20: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        20: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         23: pop\n         24: aload         5\n         26: aload_2\n-        27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: pop\n         31: iload_3\n         32: ifeq          51\n         35: aload         5\n         37: bipush        32\n-        39: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        39: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         42: pop\n         43: aload         5\n-        45: ldc           #57                 // String GMT\n-        47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: ldc           #175                // String GMT\n+        47: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         50: pop\n         51: aload         4\n         53: ifnull        80\n         56: aload         5\n-        58: ldc           #58                 // String  <\n-        60: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        58: ldc           #177                // String  <\n+        60: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         63: pop\n         64: aload         5\n         66: aload         4\n-        68: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         71: pop\n         72: aload         5\n         74: bipush        62\n-        76: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        76: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         79: pop\n         80: aload_0\n         81: bipush        8\n         83: aload         5\n-        85: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        88: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+        85: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        88: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n         91: ireturn\n       LineNumberTable:\n         line 766: 0\n         line 768: 9\n         line 769: 16\n         line 770: 24\n         line 772: 31\n@@ -1022,67 +1022,67 @@\n       throws java.io.IOException\n \n   public int newnews(java.lang.String, java.lang.String, java.lang.String, boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=7, args_size=6\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore        6\n          9: aload         6\n         11: aload_1\n-        12: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         15: pop\n         16: aload         6\n         18: bipush        32\n-        20: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        20: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         23: pop\n         24: aload         6\n         26: aload_2\n-        27: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: pop\n         31: aload         6\n         33: bipush        32\n-        35: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        35: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         38: pop\n         39: aload         6\n         41: aload_3\n-        42: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         45: pop\n         46: iload         4\n         48: ifeq          67\n         51: aload         6\n         53: bipush        32\n-        55: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        55: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         58: pop\n         59: aload         6\n-        61: ldc           #57                 // String GMT\n-        63: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        61: ldc           #175                // String GMT\n+        63: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         66: pop\n         67: aload         5\n         69: ifnull        96\n         72: aload         6\n-        74: ldc           #58                 // String  <\n-        76: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        74: ldc           #177                // String  <\n+        76: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         79: pop\n         80: aload         6\n         82: aload         5\n-        84: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        84: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         87: pop\n         88: aload         6\n         90: bipush        62\n-        92: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        92: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         95: pop\n         96: aload_0\n         97: bipush        9\n         99: aload         6\n-       101: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       104: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+       101: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       104: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n        107: ireturn\n       LineNumberTable:\n         line 814: 0\n         line 816: 9\n         line 817: 16\n         line 818: 24\n         line 819: 31\n@@ -1106,78 +1106,78 @@\n   public int post() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        11\n-         3: invokevirtual #56                 // Method sendCommand:(I)I\n+         3: invokevirtual #172                // Method sendCommand:(I)I\n          6: ireturn\n       LineNumberTable:\n         line 855: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int quit() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        12\n-         3: invokevirtual #56                 // Method sendCommand:(I)I\n+         3: invokevirtual #172                // Method sendCommand:(I)I\n          6: ireturn\n       LineNumberTable:\n         line 875: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int authinfoUser(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #59                 // String USER\n-         9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #179                // String USER\n+         9: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_1\n-        13: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        16: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        13: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         19: astore_2\n         20: aload_0\n         21: bipush        15\n         23: aload_2\n-        24: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+        24: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n         27: ireturn\n       LineNumberTable:\n         line 894: 0\n         line 895: 20\n     Exceptions:\n       throws java.io.IOException\n \n   public int authinfoPass(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #60                 // String PASS\n-         9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #181                // String PASS\n+         9: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_1\n-        13: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        16: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        13: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         19: astore_2\n         20: aload_0\n         21: bipush        15\n         23: aload_2\n-        24: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+        24: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n         27: ireturn\n       LineNumberTable:\n         line 916: 0\n         line 917: 20\n     Exceptions:\n       throws java.io.IOException\n \n@@ -1185,72 +1185,72 @@\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: bipush        16\n          3: aload_1\n-         4: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+         4: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n          7: ireturn\n       LineNumberTable:\n         line 941: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int xhdr(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=3\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n          4: aload_1\n-         5: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         5: invokespecial #183                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n          8: astore_3\n          9: aload_3\n-        10: ldc           #62                 // String\n-        12: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        10: ldc           #184                // String\n+        12: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         15: pop\n         16: aload_3\n         17: aload_2\n-        18: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         21: pop\n         22: aload_0\n         23: bipush        17\n         25: aload_3\n-        26: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+        26: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n         32: ireturn\n       LineNumberTable:\n         line 967: 0\n         line 968: 9\n         line 969: 16\n         line 970: 22\n     Exceptions:\n       throws java.io.IOException\n \n   public int listActive(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #59                 // class java/lang/StringBuilder\n          3: dup\n-         4: ldc           #63                 // String ACTIVE\n-         6: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #186                // String ACTIVE\n+         6: invokespecial #183                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n          9: astore_2\n         10: aload_2\n         11: aload_1\n-        12: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        12: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         15: pop\n         16: aload_0\n         17: bipush        7\n         19: aload_2\n-        20: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        23: invokevirtual #53                 // Method sendCommand:(ILjava/lang/String;)I\n+        20: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        23: invokevirtual #164                // Method sendCommand:(ILjava/lang/String;)I\n         26: ireturn\n       LineNumberTable:\n         line 983: 0\n         line 984: 10\n         line 985: 16\n     Exceptions:\n       throws java.io.IOException\n@@ -1259,98 +1259,98 @@\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #64                 // Method article:(J)I\n+         3: invokevirtual #188                // Method article:(J)I\n          6: ireturn\n       LineNumberTable:\n         line 999: 0\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #132()\n+      0: #239()\n         java.lang.Deprecated\n \n   public int body(int) throws java.io.IOException;\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #65                 // Method body:(J)I\n+         3: invokevirtual #192                // Method body:(J)I\n          6: ireturn\n       LineNumberTable:\n         line 1011: 0\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #132()\n+      0: #239()\n         java.lang.Deprecated\n \n   public int head(int) throws java.io.IOException;\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #66                 // Method head:(J)I\n+         3: invokevirtual #195                // Method head:(J)I\n          6: ireturn\n       LineNumberTable:\n         line 1023: 0\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #132()\n+      0: #239()\n         java.lang.Deprecated\n \n   public int stat(int) throws java.io.IOException;\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #67                 // Method stat:(J)I\n+         3: invokevirtual #198                // Method stat:(J)I\n          6: ireturn\n       LineNumberTable:\n         line 1035: 0\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #132()\n+      0: #239()\n         java.lang.Deprecated\n \n   protected org.apache.commons.net.ProtocolCommandSupport getCommandSupport();\n     descriptor: ()Lorg/apache/commons/net/ProtocolCommandSupport;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field _commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n+         1: getfield      #34                 // Field _commandSupport_:Lorg/apache/commons/net/ProtocolCommandSupport;\n          4: areturn\n       LineNumberTable:\n         line 1043: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #68                 // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-         3: putstatic     #37                 // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n+         0: getstatic     #201                // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+         3: putstatic     #111                // Field DEFAULT_ENCODING:Ljava/nio/charset/Charset;\n          6: return\n       LineNumberTable:\n         line 90: 0\n }\n SourceFile: \"NNTP.java\"\n"}]}
