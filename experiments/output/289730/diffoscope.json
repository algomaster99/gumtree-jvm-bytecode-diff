{"diffoscope-json-version": 1, "source1": "first/RegexFileFilter.class", "source2": "second/RegexFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,49 +1,49 @@\n-  SHA-256 checksum c23e576321ef3be137f6542b1bdbb54195d02f054e9a979a217afc08f2c6c8a5\n+  SHA-256 checksum 5205ecb9de6e29409c08e50787c3e1dfc7e8a1ef6fc3d3bc1ce4273a15a1f5a8\n   Compiled from \"RegexFileFilter.java\"\n public class org.apache.commons.io.filefilter.RegexFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #30                         // org/apache/commons/io/filefilter/RegexFileFilter\n   super_class: #31                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Class              #70           // java/lang/IllegalArgumentException\n-    #2 = String             #71           // Pattern is missing\n-    #3 = Methodref          #1.#72        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #6.#73        // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-    #5 = Methodref          #74.#75       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-    #6 = Class              #76           // java/util/regex/Pattern\n-    #7 = InvokeDynamic      #0:#82        // #0:apply:()Ljava/util/function/Function;\n-    #8 = Methodref          #30.#83       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-    #9 = Methodref          #31.#84       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #10 = Fieldref           #30.#85       // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n-   #11 = Fieldref           #30.#86       // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n-   #12 = Methodref          #30.#87       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n-   #13 = Methodref          #30.#73       // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #14 = Methodref          #30.#88       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n-   #15 = Methodref          #30.#89       // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n-   #16 = Methodref          #6.#90        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #17 = Methodref          #91.#92       // java/util/regex/Matcher.matches:()Z\n-   #18 = InterfaceMethodref #93.#94       // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = Class              #95           // java/lang/CharSequence\n-   #20 = Methodref          #30.#96       // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #21 = Class              #97           // java/lang/StringBuilder\n-   #22 = Methodref          #21.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #98           // RegexFileFilter [pattern=\n-   #24 = Methodref          #21.#99       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #21.#100      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #26 = String             #101          // ]\n-   #27 = Methodref          #21.#102      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = InterfaceMethodref #103.#104     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #29 = InterfaceMethodref #103.#102     // java/nio/file/Path.toString:()Ljava/lang/String;\n-   #30 = Class              #105          // org/apache/commons/io/filefilter/RegexFileFilter\n-   #31 = Class              #106          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #32 = Class              #107          // java/io/Serializable\n+    #1 = Class              #68           // java/lang/IllegalArgumentException\n+    #2 = String             #69           // Pattern is missing\n+    #3 = Methodref          #1.#70        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #4 = Methodref          #6.#71        // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+    #5 = Methodref          #72.#73       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+    #6 = Class              #74           // java/util/regex/Pattern\n+    #7 = InvokeDynamic      #0:#80        // #0:apply:()Ljava/util/function/Function;\n+    #8 = Methodref          #30.#81       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+    #9 = Methodref          #31.#82       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #10 = Fieldref           #30.#83       // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n+   #11 = Fieldref           #30.#84       // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n+   #12 = Methodref          #30.#85       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n+   #13 = Methodref          #30.#71       // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #14 = Methodref          #30.#86       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n+   #15 = Methodref          #30.#87       // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #16 = Methodref          #6.#88        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #17 = Methodref          #89.#90       // java/util/regex/Matcher.matches:()Z\n+   #18 = InterfaceMethodref #54.#91       // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #19 = Class              #92           // java/lang/CharSequence\n+   #20 = Methodref          #30.#93       // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #21 = Class              #94           // java/lang/StringBuilder\n+   #22 = Methodref          #21.#82       // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #95           // RegexFileFilter [pattern=\n+   #24 = Methodref          #21.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #21.#97       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #26 = String             #98           // ]\n+   #27 = Methodref          #21.#99       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = InterfaceMethodref #100.#101     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #29 = InterfaceMethodref #100.#99      // java/nio/file/Path.toString:()Ljava/lang/String;\n+   #30 = Class              #102          // org/apache/commons/io/filefilter/RegexFileFilter\n+   #31 = Class              #103          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #32 = Class              #104          // java/io/Serializable\n    #33 = Utf8               serialVersionUID\n    #34 = Utf8               J\n    #35 = Utf8               ConstantValue\n    #36 = Long               4269646126155225062l\n    #38 = Utf8               pattern\n    #39 = Utf8               Ljava/util/regex/Pattern;\n    #40 = Utf8               pathToString\n@@ -56,103 +56,100 @@\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               StackMapTable\n    #49 = Utf8               toFlags\n    #50 = Utf8               (Lorg/apache/commons/io/IOCase;)I\n    #51 = Utf8               <init>\n    #52 = Utf8               (Ljava/util/regex/Pattern;)V\n    #53 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #54 = Class              #105          // org/apache/commons/io/filefilter/RegexFileFilter\n-   #55 = Class              #76           // java/util/regex/Pattern\n-   #56 = Class              #108          // java/util/function/Function\n-   #57 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n-   #58 = Utf8               (Ljava/lang/String;)V\n-   #59 = Utf8               (Ljava/lang/String;I)V\n-   #60 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #61 = Utf8               accept\n-   #62 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #63 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #64 = Utf8               toString\n-   #65 = Utf8               ()Ljava/lang/String;\n-   #66 = Utf8               lambda$new$0\n-   #67 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               RegexFileFilter.java\n-   #70 = Utf8               java/lang/IllegalArgumentException\n-   #71 = Utf8               Pattern is missing\n-   #72 = NameAndType        #51:#58       // \"<init>\":(Ljava/lang/String;)V\n-   #73 = NameAndType        #44:#45       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #74 = Class              #109          // org/apache/commons/io/IOCase\n-   #75 = NameAndType        #110:#111     // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-   #76 = Utf8               java/util/regex/Pattern\n-   #77 = Utf8               BootstrapMethods\n-   #78 = MethodHandle       6:#112        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #79 = MethodType         #113          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-   #80 = MethodHandle       6:#114        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-   #81 = MethodType         #67           //  (Ljava/nio/file/Path;)Ljava/lang/String;\n-   #82 = NameAndType        #115:#116     // apply:()Ljava/util/function/Function;\n-   #83 = NameAndType        #51:#53       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #84 = NameAndType        #51:#117      // \"<init>\":()V\n-   #85 = NameAndType        #38:#39       // pattern:Ljava/util/regex/Pattern;\n-   #86 = NameAndType        #40:#41       // pathToString:Ljava/util/function/Function;\n-   #87 = NameAndType        #51:#59       // \"<init>\":(Ljava/lang/String;I)V\n-   #88 = NameAndType        #51:#52       // \"<init>\":(Ljava/util/regex/Pattern;)V\n-   #89 = NameAndType        #49:#50       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n-   #90 = NameAndType        #118:#119     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #91 = Class              #120          // java/util/regex/Matcher\n-   #92 = NameAndType        #121:#122     // matches:()Z\n-   #93 = Class              #108          // java/util/function/Function\n-   #94 = NameAndType        #115:#113     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #95 = Utf8               java/lang/CharSequence\n-   #96 = NameAndType        #123:#124     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-   #97 = Utf8               java/lang/StringBuilder\n-   #98 = Utf8               RegexFileFilter [pattern=\n-   #99 = NameAndType        #125:#126     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #100 = NameAndType        #125:#127     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #101 = Utf8               ]\n-  #102 = NameAndType        #64:#65       // toString:()Ljava/lang/String;\n-  #103 = Class              #128          // java/nio/file/Path\n-  #104 = NameAndType        #129:#130     // getFileName:()Ljava/nio/file/Path;\n-  #105 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n-  #106 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #107 = Utf8               java/io/Serializable\n-  #108 = Utf8               java/util/function/Function\n-  #109 = Utf8               org/apache/commons/io/IOCase\n-  #110 = Utf8               isCaseSensitive\n-  #111 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n-  #112 = Methodref          #131.#132     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #113 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #114 = Methodref          #30.#133      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #115 = Utf8               apply\n-  #116 = Utf8               ()Ljava/util/function/Function;\n-  #117 = Utf8               ()V\n-  #118 = Utf8               matcher\n-  #119 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #120 = Utf8               java/util/regex/Matcher\n-  #121 = Utf8               matches\n-  #122 = Utf8               ()Z\n-  #123 = Utf8               toFileVisitResult\n-  #124 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #125 = Utf8               append\n-  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #127 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #128 = Utf8               java/nio/file/Path\n-  #129 = Utf8               getFileName\n-  #130 = Utf8               ()Ljava/nio/file/Path;\n-  #131 = Class              #134          // java/lang/invoke/LambdaMetafactory\n-  #132 = NameAndType        #135:#139     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #133 = NameAndType        #66:#67       // lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #134 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #135 = Utf8               metafactory\n-  #136 = Class              #141          // java/lang/invoke/MethodHandles$Lookup\n-  #137 = Utf8               Lookup\n-  #138 = Utf8               InnerClasses\n-  #139 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #140 = Class              #142          // java/lang/invoke/MethodHandles\n-  #141 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #142 = Utf8               java/lang/invoke/MethodHandles\n+   #54 = Class              #105          // java/util/function/Function\n+   #55 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+   #56 = Utf8               (Ljava/lang/String;)V\n+   #57 = Utf8               (Ljava/lang/String;I)V\n+   #58 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #59 = Utf8               accept\n+   #60 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #61 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #62 = Utf8               toString\n+   #63 = Utf8               ()Ljava/lang/String;\n+   #64 = Utf8               lambda$new$0\n+   #65 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+   #66 = Utf8               SourceFile\n+   #67 = Utf8               RegexFileFilter.java\n+   #68 = Utf8               java/lang/IllegalArgumentException\n+   #69 = Utf8               Pattern is missing\n+   #70 = NameAndType        #51:#56       // \"<init>\":(Ljava/lang/String;)V\n+   #71 = NameAndType        #44:#45       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #72 = Class              #106          // org/apache/commons/io/IOCase\n+   #73 = NameAndType        #107:#108     // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+   #74 = Utf8               java/util/regex/Pattern\n+   #75 = Utf8               BootstrapMethods\n+   #76 = MethodHandle       6:#109        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #77 = MethodType         #110          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+   #78 = MethodHandle       6:#111        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+   #79 = MethodType         #65           //  (Ljava/nio/file/Path;)Ljava/lang/String;\n+   #80 = NameAndType        #112:#113     // apply:()Ljava/util/function/Function;\n+   #81 = NameAndType        #51:#53       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #82 = NameAndType        #51:#114      // \"<init>\":()V\n+   #83 = NameAndType        #38:#39       // pattern:Ljava/util/regex/Pattern;\n+   #84 = NameAndType        #40:#41       // pathToString:Ljava/util/function/Function;\n+   #85 = NameAndType        #51:#57       // \"<init>\":(Ljava/lang/String;I)V\n+   #86 = NameAndType        #51:#52       // \"<init>\":(Ljava/util/regex/Pattern;)V\n+   #87 = NameAndType        #49:#50       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #88 = NameAndType        #115:#116     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #89 = Class              #117          // java/util/regex/Matcher\n+   #90 = NameAndType        #118:#119     // matches:()Z\n+   #91 = NameAndType        #112:#110     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #92 = Utf8               java/lang/CharSequence\n+   #93 = NameAndType        #120:#121     // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+   #94 = Utf8               java/lang/StringBuilder\n+   #95 = Utf8               RegexFileFilter [pattern=\n+   #96 = NameAndType        #122:#123     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = NameAndType        #122:#124     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #98 = Utf8               ]\n+   #99 = NameAndType        #62:#63       // toString:()Ljava/lang/String;\n+  #100 = Class              #125          // java/nio/file/Path\n+  #101 = NameAndType        #126:#127     // getFileName:()Ljava/nio/file/Path;\n+  #102 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n+  #103 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #104 = Utf8               java/io/Serializable\n+  #105 = Utf8               java/util/function/Function\n+  #106 = Utf8               org/apache/commons/io/IOCase\n+  #107 = Utf8               isCaseSensitive\n+  #108 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n+  #109 = Methodref          #128.#129     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #111 = Methodref          #30.#130      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #112 = Utf8               apply\n+  #113 = Utf8               ()Ljava/util/function/Function;\n+  #114 = Utf8               ()V\n+  #115 = Utf8               matcher\n+  #116 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #117 = Utf8               java/util/regex/Matcher\n+  #118 = Utf8               matches\n+  #119 = Utf8               ()Z\n+  #120 = Utf8               toFileVisitResult\n+  #121 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #122 = Utf8               append\n+  #123 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #125 = Utf8               java/nio/file/Path\n+  #126 = Utf8               getFileName\n+  #127 = Utf8               ()Ljava/nio/file/Path;\n+  #128 = Class              #131          // java/lang/invoke/LambdaMetafactory\n+  #129 = NameAndType        #132:#136     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #130 = NameAndType        #64:#65       // lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #131 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #132 = Utf8               metafactory\n+  #133 = Class              #138          // java/lang/invoke/MethodHandles$Lookup\n+  #134 = Utf8               Lookup\n+  #135 = Utf8               InnerClasses\n+  #136 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #137 = Class              #139          // java/lang/invoke/MethodHandles\n+  #138 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #139 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final long serialVersionUID = 4269646126155225062l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 4269646126155225062l\n \n   private final java.util.regex.Pattern pattern;\n@@ -249,15 +246,15 @@\n         line 126: 23\n         line 127: 28\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/io/filefilter/RegexFileFilter, class java/util/regex/Pattern, class java/util/function/Function ]\n           stack = []\n-    Signature: #57                          // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+    Signature: #55                          // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -364,14 +361,14 @@\n          6: invokeinterface #29,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n         11: areturn\n       LineNumberTable:\n         line 110: 0\n }\n SourceFile: \"RegexFileFilter.java\"\n InnerClasses:\n-  public static final #137= #136 of #140; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #134= #133 of #137; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #78 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #76 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #79 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #80 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n-      #81 (Ljava/nio/file/Path;)Ljava/lang/String;\n+      #77 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #78 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$0:(Ljava/nio/file/Path;)Ljava/lang/String;\n+      #79 (Ljava/nio/file/Path;)Ljava/lang/String;\n"}]}
