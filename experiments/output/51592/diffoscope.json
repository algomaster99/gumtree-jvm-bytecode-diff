{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorInputStream.class", "source2": "second/ZstdCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,210 +1,209 @@\n-  SHA-256 checksum cc2cfd8cdbbb4ddb10e5654c296f8f84618015202d0fd1694797a87c0f8f0276\n+  SHA-256 checksum 94df4471c050a458142a52a9fb3e4eea7946317d07d4de61f32963f95a85f582\n   Compiled from \"ZstdCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  super_class: #17                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #1                          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 0, fields: 1, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#61        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-   #2 = Class              #62            // com/github/luben/zstd/ZstdInputStream\n-   #3 = Methodref          #2.#63         // com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #4 = Fieldref           #16.#64        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-   #5 = Methodref          #2.#65         // com/github/luben/zstd/ZstdInputStream.available:()I\n-   #6 = Methodref          #2.#66         // com/github/luben/zstd/ZstdInputStream.close:()V\n-   #7 = Methodref          #2.#67         // com/github/luben/zstd/ZstdInputStream.read:([B)I\n-   #8 = Methodref          #2.#68         // com/github/luben/zstd/ZstdInputStream.skip:(J)J\n-   #9 = Methodref          #2.#69         // com/github/luben/zstd/ZstdInputStream.mark:(I)V\n-  #10 = Methodref          #2.#70         // com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n-  #11 = Methodref          #2.#71         // com/github/luben/zstd/ZstdInputStream.read:()I\n-  #12 = Methodref          #16.#72        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.count:(I)V\n-  #13 = Methodref          #2.#73         // com/github/luben/zstd/ZstdInputStream.read:([BII)I\n-  #14 = Methodref          #74.#75        // java/lang/Object.toString:()Ljava/lang/String;\n-  #15 = Methodref          #2.#76         // com/github/luben/zstd/ZstdInputStream.reset:()V\n-  #16 = Class              #77            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #17 = Class              #78            // org/apache/commons/compress/compressors/CompressorInputStream\n-  #18 = Utf8               decIS\n-  #19 = Utf8               Lcom/github/luben/zstd/ZstdInputStream;\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (Ljava/io/InputStream;)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               this\n-  #26 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n-  #27 = Utf8               in\n-  #28 = Utf8               Ljava/io/InputStream;\n-  #29 = Utf8               Exceptions\n-  #30 = Class              #79            // java/io/IOException\n-  #31 = Utf8               available\n-  #32 = Utf8               ()I\n-  #33 = Utf8               close\n-  #34 = Utf8               ()V\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+   #2 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+   #3 = Class              #4             // org/apache/commons/compress/compressors/CompressorInputStream\n+   #4 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #5 = Utf8               decIS\n+   #6 = Utf8               Lcom/github/luben/zstd/ZstdInputStream;\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/InputStream;)V\n+   #9 = Utf8               Exceptions\n+  #10 = Class              #11            // java/io/IOException\n+  #11 = Utf8               java/io/IOException\n+  #12 = Utf8               Code\n+  #13 = Methodref          #3.#14         // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+  #14 = NameAndType        #7:#15         // \"<init>\":()V\n+  #15 = Utf8               ()V\n+  #16 = Class              #17            // com/github/luben/zstd/ZstdInputStream\n+  #17 = Utf8               com/github/luben/zstd/ZstdInputStream\n+  #18 = Methodref          #16.#19        // com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #19 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n+  #20 = Fieldref           #1.#21         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+  #21 = NameAndType        #5:#6          // decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n+  #26 = Utf8               in\n+  #27 = Utf8               Ljava/io/InputStream;\n+  #28 = Utf8               available\n+  #29 = Utf8               ()I\n+  #30 = Methodref          #16.#31        // com/github/luben/zstd/ZstdInputStream.available:()I\n+  #31 = NameAndType        #28:#29        // available:()I\n+  #32 = Utf8               close\n+  #33 = Methodref          #16.#34        // com/github/luben/zstd/ZstdInputStream.close:()V\n+  #34 = NameAndType        #32:#15        // close:()V\n   #35 = Utf8               read\n   #36 = Utf8               ([B)I\n-  #37 = Utf8               b\n-  #38 = Utf8               [B\n-  #39 = Utf8               skip\n-  #40 = Utf8               (J)J\n-  #41 = Utf8               n\n-  #42 = Utf8               J\n-  #43 = Utf8               mark\n-  #44 = Utf8               (I)V\n-  #45 = Utf8               readlimit\n-  #46 = Utf8               I\n-  #47 = Utf8               markSupported\n-  #48 = Utf8               ()Z\n-  #49 = Utf8               ret\n-  #50 = Utf8               StackMapTable\n-  #51 = Class              #77            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #52 = Utf8               ([BII)I\n-  #53 = Utf8               buf\n-  #54 = Utf8               off\n-  #55 = Utf8               len\n-  #56 = Utf8               toString\n-  #57 = Utf8               ()Ljava/lang/String;\n-  #58 = Utf8               reset\n-  #59 = Utf8               SourceFile\n-  #60 = Utf8               ZstdCompressorInputStream.java\n-  #61 = NameAndType        #20:#34        // \"<init>\":()V\n-  #62 = Utf8               com/github/luben/zstd/ZstdInputStream\n-  #63 = NameAndType        #20:#21        // \"<init>\":(Ljava/io/InputStream;)V\n-  #64 = NameAndType        #18:#19        // decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-  #65 = NameAndType        #31:#32        // available:()I\n-  #66 = NameAndType        #33:#34        // close:()V\n-  #67 = NameAndType        #35:#36        // read:([B)I\n-  #68 = NameAndType        #39:#40        // skip:(J)J\n-  #69 = NameAndType        #43:#44        // mark:(I)V\n-  #70 = NameAndType        #47:#48        // markSupported:()Z\n-  #71 = NameAndType        #35:#32        // read:()I\n-  #72 = NameAndType        #80:#44        // count:(I)V\n-  #73 = NameAndType        #35:#52        // read:([BII)I\n-  #74 = Class              #81            // java/lang/Object\n-  #75 = NameAndType        #56:#57        // toString:()Ljava/lang/String;\n-  #76 = NameAndType        #58:#34        // reset:()V\n-  #77 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #78 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #79 = Utf8               java/io/IOException\n-  #80 = Utf8               count\n-  #81 = Utf8               java/lang/Object\n+  #37 = Methodref          #16.#38        // com/github/luben/zstd/ZstdInputStream.read:([B)I\n+  #38 = NameAndType        #35:#36        // read:([B)I\n+  #39 = Utf8               b\n+  #40 = Utf8               [B\n+  #41 = Utf8               skip\n+  #42 = Utf8               (J)J\n+  #43 = Methodref          #16.#44        // com/github/luben/zstd/ZstdInputStream.skip:(J)J\n+  #44 = NameAndType        #41:#42        // skip:(J)J\n+  #45 = Utf8               n\n+  #46 = Utf8               J\n+  #47 = Utf8               mark\n+  #48 = Utf8               (I)V\n+  #49 = Methodref          #16.#50        // com/github/luben/zstd/ZstdInputStream.mark:(I)V\n+  #50 = NameAndType        #47:#48        // mark:(I)V\n+  #51 = Utf8               readlimit\n+  #52 = Utf8               I\n+  #53 = Utf8               markSupported\n+  #54 = Utf8               ()Z\n+  #55 = Methodref          #16.#56        // com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n+  #56 = NameAndType        #53:#54        // markSupported:()Z\n+  #57 = Methodref          #16.#58        // com/github/luben/zstd/ZstdInputStream.read:()I\n+  #58 = NameAndType        #35:#29        // read:()I\n+  #59 = Methodref          #1.#60         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.count:(I)V\n+  #60 = NameAndType        #61:#48        // count:(I)V\n+  #61 = Utf8               count\n+  #62 = Utf8               ret\n+  #63 = Utf8               StackMapTable\n+  #64 = Utf8               ([BII)I\n+  #65 = Methodref          #16.#66        // com/github/luben/zstd/ZstdInputStream.read:([BII)I\n+  #66 = NameAndType        #35:#64        // read:([BII)I\n+  #67 = Utf8               buf\n+  #68 = Utf8               off\n+  #69 = Utf8               len\n+  #70 = Utf8               toString\n+  #71 = Utf8               ()Ljava/lang/String;\n+  #72 = Methodref          #73.#75        // java/lang/Object.toString:()Ljava/lang/String;\n+  #73 = Class              #74            // java/lang/Object\n+  #74 = Utf8               java/lang/Object\n+  #75 = NameAndType        #70:#71        // toString:()Ljava/lang/String;\n+  #76 = Utf8               reset\n+  #77 = Methodref          #16.#78        // com/github/luben/zstd/ZstdInputStream.reset:()V\n+  #78 = NameAndType        #76:#15        // reset:()V\n+  #79 = Utf8               SourceFile\n+  #80 = Utf8               ZstdCompressorInputStream.java\n {\n   private final com.github.luben.zstd.ZstdInputStream decIS;\n     descriptor: Lcom/github/luben/zstd/ZstdInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdInputStream\n+         5: new           #16                 // class com/github/luben/zstd/ZstdInputStream\n          8: dup\n          9: aload_1\n-        10: invokespecial #3                  // Method com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        13: putfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+        10: invokespecial #18                 // Method com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        13: putfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n         16: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 4\n         line 39: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n             0      17     1    in   Ljava/io/InputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #5                  // Method com/github/luben/zstd/ZstdInputStream.available:()I\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #30                 // Method com/github/luben/zstd/ZstdInputStream.available:()I\n          7: ireturn\n       LineNumberTable:\n         line 43: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #6                  // Method com/github/luben/zstd/ZstdInputStream.close:()V\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #33                 // Method com/github/luben/zstd/ZstdInputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n          4: aload_1\n-         5: invokevirtual #7                  // Method com/github/luben/zstd/ZstdInputStream.read:([B)I\n+         5: invokevirtual #37                 // Method com/github/luben/zstd/ZstdInputStream.read:([B)I\n          8: ireturn\n       LineNumberTable:\n         line 53: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n          4: lload_1\n-         5: invokevirtual #8                  // Method com/github/luben/zstd/ZstdInputStream.skip:(J)J\n+         5: invokevirtual #43                 // Method com/github/luben/zstd/ZstdInputStream.skip:(J)J\n          8: lreturn\n       LineNumberTable:\n         line 58: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n             0       9     1     n   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n          4: iload_1\n-         5: invokevirtual #9                  // Method com/github/luben/zstd/ZstdInputStream.mark:(I)V\n+         5: invokevirtual #49                 // Method com/github/luben/zstd/ZstdInputStream.mark:(I)V\n          8: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n@@ -212,40 +211,42 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #10                 // Method com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #55                 // Method com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 68: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #11                 // Method com/github/luben/zstd/ZstdInputStream.read:()I\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #57                 // Method com/github/luben/zstd/ZstdInputStream.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_0\n         15: goto          19\n         18: iconst_1\n-        19: invokevirtual #12                 // Method count:(I)V\n+        19: invokevirtual #59                 // Method count:(I)V\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 73: 0\n         line 74: 8\n         line 75: 22\n       LocalVariableTable:\n@@ -257,75 +258,73 @@\n           offset_delta = 18\n           locals = [ class org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream, int ]\n           stack = [ class org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream, int ]\n           stack = [ class org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream, int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #13                 // Method com/github/luben/zstd/ZstdInputStream.read:([BII)I\n+         7: invokevirtual #65                 // Method com/github/luben/zstd/ZstdInputStream.read:([BII)I\n         10: istore        4\n         12: aload_0\n         13: iload         4\n-        15: invokevirtual #12                 // Method count:(I)V\n+        15: invokevirtual #59                 // Method count:(I)V\n         18: iload         4\n         20: ireturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 12\n         line 82: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n             0      21     1   buf   [B\n             0      21     2   off   I\n             0      21     3   len   I\n            12       9     4   ret   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #14                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #72                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n \n   public void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #15                 // Method com/github/luben/zstd/ZstdInputStream.reset:()V\n+         1: getfield      #20                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #77                 // Method com/github/luben/zstd/ZstdInputStream.reset:()V\n          7: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ZstdCompressorInputStream.java\"\n"}]}
