{"diffoscope-json-version": 1, "source1": "first/PropertyListParserTokenManager.class", "source2": "second/PropertyListParserTokenManager.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -27,60 +27,60 @@\n     int curLexState;\n     int defaultLexState;\n     int jjnewStateCnt;\n     int jjround;\n     int jjmatchedPos;\n     int jjmatchedKind;\n     \n-    public void setDebugStream(final PrintStream ds) {\n-        this.debugStream = ds;\n+    public void setDebugStream(final PrintStream debugStream) {\n+        this.debugStream = debugStream;\n     }\n     \n-    private final int jjStopStringLiteralDfa_0(final int pos, final long active0) {\n-        switch (pos) {\n+    private final int jjStopStringLiteralDfa_0(final int n, final long n2) {\n+        switch (n) {\n             case 0: {\n-                if ((active0 & 0x20000120L) != 0x0L) {\n+                if ((n2 & 0x20000120L) != 0x0L) {\n                     this.jjmatchedKind = 27;\n                     return 8;\n                 }\n-                if ((active0 & 0x80000L) != 0x0L) {\n+                if ((n2 & 0x80000L) != 0x0L) {\n                     return 8;\n                 }\n-                if ((active0 & 0x200000L) != 0x0L) {\n+                if ((n2 & 0x200000L) != 0x0L) {\n                     return 14;\n                 }\n-                if ((active0 & 0x140000L) != 0x0L) {\n+                if ((n2 & 0x140000L) != 0x0L) {\n                     return 6;\n                 }\n                 return -1;\n             }\n             case 1: {\n-                if ((active0 & 0x100000L) != 0x0L) {\n+                if ((n2 & 0x100000L) != 0x0L) {\n                     this.jjmatchedKind = 27;\n                     this.jjmatchedPos = 1;\n                     return 3;\n                 }\n-                if ((active0 & 0x120L) != 0x0L) {\n+                if ((n2 & 0x120L) != 0x0L) {\n                     return 8;\n                 }\n                 return -1;\n             }\n             default: {\n                 return -1;\n             }\n         }\n     }\n     \n-    private final int jjStartNfa_0(final int pos, final long active0) {\n-        return this.jjMoveNfa_0(this.jjStopStringLiteralDfa_0(pos, active0), pos + 1);\n+    private final int jjStartNfa_0(final int n, final long n2) {\n+        return this.jjMoveNfa_0(this.jjStopStringLiteralDfa_0(n, n2), n + 1);\n     }\n     \n-    private int jjStopAtPos(final int pos, final int kind) {\n-        this.jjmatchedKind = kind;\n-        return (this.jjmatchedPos = pos) + 1;\n+    private int jjStopAtPos(final int jjmatchedPos, final int jjmatchedKind) {\n+        this.jjmatchedKind = jjmatchedKind;\n+        return (this.jjmatchedPos = jjmatchedPos) + 1;\n     }\n     \n     private int jjMoveStringLiteralDfa0_0() {\n         switch (this.curChar) {\n             case '\\\"': {\n                 return this.jjStartNfaWithStates_0(0, 21, 14);\n             }\n@@ -120,157 +120,157 @@\n             }\n             default: {\n                 return this.jjMoveNfa_0(0, 0);\n             }\n         }\n     }\n     \n-    private int jjMoveStringLiteralDfa1_0(final long active0) {\n+    private int jjMoveStringLiteralDfa1_0(final long n) {\n         try {\n             this.curChar = this.input_stream.readChar();\n         }\n-        catch (final IOException e) {\n-            this.jjStopStringLiteralDfa_0(0, active0);\n+        catch (final IOException ex) {\n+            this.jjStopStringLiteralDfa_0(0, n);\n             return 1;\n         }\n         switch (this.curChar) {\n             case '\\\"': {\n-                if ((active0 & 0x20000000L) != 0x0L) {\n+                if ((n & 0x20000000L) != 0x0L) {\n                     return this.jjStopAtPos(1, 29);\n                 }\n                 break;\n             }\n             case '*': {\n-                if ((active0 & 0x20L) != 0x0L) {\n+                if ((n & 0x20L) != 0x0L) {\n                     return this.jjStartNfaWithStates_0(1, 5, 8);\n                 }\n-                return this.jjMoveStringLiteralDfa2_0(active0, 1048576L);\n+                return this.jjMoveStringLiteralDfa2_0(n, 1048576L);\n             }\n             case '/': {\n-                if ((active0 & 0x100L) != 0x0L) {\n+                if ((n & 0x100L) != 0x0L) {\n                     return this.jjStartNfaWithStates_0(1, 8, 8);\n                 }\n                 break;\n             }\n         }\n-        return this.jjStartNfa_0(0, active0);\n+        return this.jjStartNfa_0(0, n);\n     }\n     \n-    private int jjMoveStringLiteralDfa2_0(final long old0, long active0) {\n-        if ((active0 &= old0) == 0x0L) {\n-            return this.jjStartNfa_0(0, old0);\n+    private int jjMoveStringLiteralDfa2_0(final long n, long n2) {\n+        if ((n2 &= n) == 0x0L) {\n+            return this.jjStartNfa_0(0, n);\n         }\n         try {\n             this.curChar = this.input_stream.readChar();\n         }\n-        catch (final IOException e) {\n-            this.jjStopStringLiteralDfa_0(1, active0);\n+        catch (final IOException ex) {\n+            this.jjStopStringLiteralDfa_0(1, n2);\n             return 2;\n         }\n         switch (this.curChar) {\n             case 'D': {\n-                if ((active0 & 0x100000L) != 0x0L) {\n+                if ((n2 & 0x100000L) != 0x0L) {\n                     return this.jjStartNfaWithStates_0(2, 20, 15);\n                 }\n                 break;\n             }\n         }\n-        return this.jjStartNfa_0(1, active0);\n+        return this.jjStartNfa_0(1, n2);\n     }\n     \n-    private int jjStartNfaWithStates_0(final int pos, final int kind, final int state) {\n-        this.jjmatchedKind = kind;\n-        this.jjmatchedPos = pos;\n+    private int jjStartNfaWithStates_0(final int jjmatchedPos, final int jjmatchedKind, final int n) {\n+        this.jjmatchedKind = jjmatchedKind;\n+        this.jjmatchedPos = jjmatchedPos;\n         try {\n             this.curChar = this.input_stream.readChar();\n         }\n-        catch (final IOException e) {\n-            return pos + 1;\n+        catch (final IOException ex) {\n+            return jjmatchedPos + 1;\n         }\n-        return this.jjMoveNfa_0(state, pos + 1);\n+        return this.jjMoveNfa_0(n, jjmatchedPos + 1);\n     }\n     \n-    private int jjMoveNfa_0(final int startState, int curPos) {\n-        int startsAt = 0;\n+    private int jjMoveNfa_0(final int n, int jjmatchedPos) {\n+        int n2 = 0;\n         this.jjnewStateCnt = 14;\n         int i = 1;\n-        this.jjstateSet[0] = startState;\n-        int kind = Integer.MAX_VALUE;\n+        this.jjstateSet[0] = n;\n+        int jjmatchedKind = Integer.MAX_VALUE;\n         while (true) {\n             if (++this.jjround == Integer.MAX_VALUE) {\n                 this.ReInitRounds();\n             }\n             if (this.curChar < '@') {\n-                final long l = 1L << this.curChar;\n+                final long n3 = 1L << this.curChar;\n                 do {\n                     switch (this.jjstateSet[--i]) {\n                         case 15: {\n-                            if ((0xD7FFECFAFFFFD9FFL & l) != 0x0L) {\n-                                if (kind > 27) {\n-                                    kind = 27;\n+                            if ((0xD7FFECFAFFFFD9FFL & n3) != 0x0L) {\n+                                if (jjmatchedKind > 27) {\n+                                    jjmatchedKind = 27;\n                                 }\n                                 this.jjCheckNAdd(8);\n                             }\n-                            if ((0x7FF280100000000L & l) != 0x0L) {\n+                            if ((0x7FF280100000000L & n3) != 0x0L) {\n                                 this.jjCheckNAddTwoStates(4, 5);\n                                 continue;\n                             }\n-                            if (this.curChar == '>' && kind > 26) {\n-                                kind = 26;\n+                            if (this.curChar == '>' && jjmatchedKind > 26) {\n+                                jjmatchedKind = 26;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 6: {\n-                            if ((0xD7FFECFAFFFFD9FFL & l) != 0x0L) {\n-                                if (kind > 27) {\n-                                    kind = 27;\n+                            if ((0xD7FFECFAFFFFD9FFL & n3) != 0x0L) {\n+                                if (jjmatchedKind > 27) {\n+                                    jjmatchedKind = 27;\n                                 }\n                                 this.jjCheckNAdd(8);\n                             }\n-                            if ((0x3FF000100002600L & l) != 0x0L) {\n+                            if ((0x3FF000100002600L & n3) != 0x0L) {\n                                 this.jjCheckNAddTwoStates(1, 2);\n                                 continue;\n                             }\n                             if (this.curChar == '*') {\n                                 this.jjstateSet[this.jjnewStateCnt++] = 3;\n                                 continue;\n                             }\n-                            if (this.curChar == '>' && kind > 25) {\n-                                kind = 25;\n+                            if (this.curChar == '>' && jjmatchedKind > 25) {\n+                                jjmatchedKind = 25;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 14: {\n-                            if ((0xFFFFFFFBFFFFFFFFL & l) != 0x0L) {\n+                            if ((0xFFFFFFFBFFFFFFFFL & n3) != 0x0L) {\n                                 this.jjCheckNAddStates(0, 2);\n                                 continue;\n                             }\n-                            if (this.curChar == '\\\"' && kind > 28) {\n-                                kind = 28;\n+                            if (this.curChar == '\\\"' && jjmatchedKind > 28) {\n+                                jjmatchedKind = 28;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 3:\n                         case 8: {\n-                            if ((0xD7FFECFAFFFFD9FFL & l) == 0x0L) {\n+                            if ((0xD7FFECFAFFFFD9FFL & n3) == 0x0L) {\n                                 continue;\n                             }\n-                            if (kind > 27) {\n-                                kind = 27;\n+                            if (jjmatchedKind > 27) {\n+                                jjmatchedKind = 27;\n                             }\n                             this.jjCheckNAdd(8);\n                             continue;\n                         }\n                         case 0: {\n-                            if ((0xD7FFECFAFFFFD9FFL & l) != 0x0L) {\n-                                if (kind > 27) {\n-                                    kind = 27;\n+                            if ((0xD7FFECFAFFFFD9FFL & n3) != 0x0L) {\n+                                if (jjmatchedKind > 27) {\n+                                    jjmatchedKind = 27;\n                                 }\n                                 this.jjCheckNAdd(8);\n                             }\n                             else if (this.curChar == '\\\"') {\n                                 this.jjCheckNAddStates(0, 2);\n                             }\n                             if (this.curChar == '<') {\n@@ -279,37 +279,37 @@\n                             if (this.curChar == '<') {\n                                 this.jjCheckNAddTwoStates(1, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 1: {\n-                            if ((0x3FF000100002600L & l) != 0x0L) {\n+                            if ((0x3FF000100002600L & n3) != 0x0L) {\n                                 this.jjCheckNAddTwoStates(1, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 2: {\n-                            if (this.curChar == '>' && kind > 25) {\n-                                kind = 25;\n+                            if (this.curChar == '>' && jjmatchedKind > 25) {\n+                                jjmatchedKind = 25;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 4: {\n-                            if ((0x7FF280100000000L & l) != 0x0L) {\n+                            if ((0x7FF280100000000L & n3) != 0x0L) {\n                                 this.jjCheckNAddTwoStates(4, 5);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 5: {\n-                            if (this.curChar == '>' && kind > 26) {\n-                                kind = 26;\n+                            if (this.curChar == '>' && jjmatchedKind > 26) {\n+                                jjmatchedKind = 26;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 7: {\n                             if (this.curChar == '<') {\n                                 this.jjstateSet[this.jjnewStateCnt++] = 6;\n@@ -322,97 +322,97 @@\n                             if (this.curChar == '\\\"') {\n                                 this.jjCheckNAddStates(0, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 10: {\n-                            if ((0xFFFFFFFBFFFFFFFFL & l) != 0x0L) {\n+                            if ((0xFFFFFFFBFFFFFFFFL & n3) != 0x0L) {\n                                 this.jjCheckNAddStates(0, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 13: {\n-                            if (this.curChar == '\\\"' && kind > 28) {\n-                                kind = 28;\n+                            if (this.curChar == '\\\"' && jjmatchedKind > 28) {\n+                                jjmatchedKind = 28;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         default: {\n                             continue;\n                         }\n                     }\n-                } while (i != startsAt);\n+                } while (i != n2);\n             }\n             else if (this.curChar < '\\u0080') {\n-                final long l = 1L << (this.curChar & '?');\n+                final long n4 = 1L << (this.curChar & '?');\n                 do {\n                     switch (this.jjstateSet[--i]) {\n                         case 15: {\n-                            if ((0xD7FFFFFFFFFFFFFFL & l) != 0x0L) {\n-                                if (kind > 27) {\n-                                    kind = 27;\n+                            if ((0xD7FFFFFFFFFFFFFFL & n4) != 0x0L) {\n+                                if (jjmatchedKind > 27) {\n+                                    jjmatchedKind = 27;\n                                 }\n                                 this.jjCheckNAdd(8);\n                             }\n                             if (this.curChar == 'Z') {\n                                 this.jjCheckNAddTwoStates(4, 5);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 6: {\n-                            if ((0xD7FFFFFFFFFFFFFFL & l) != 0x0L) {\n-                                if (kind > 27) {\n-                                    kind = 27;\n+                            if ((0xD7FFFFFFFFFFFFFFL & n4) != 0x0L) {\n+                                if (jjmatchedKind > 27) {\n+                                    jjmatchedKind = 27;\n                                 }\n                                 this.jjCheckNAdd(8);\n                             }\n-                            if ((0x7E0000007EL & l) != 0x0L) {\n+                            if ((0x7E0000007EL & n4) != 0x0L) {\n                                 this.jjCheckNAddTwoStates(1, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 14: {\n                             this.jjCheckNAddStates(0, 2);\n                             if (this.curChar == '\\\\') {\n                                 this.jjstateSet[this.jjnewStateCnt++] = 11;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 3: {\n-                            if ((0xD7FFFFFFFFFFFFFFL & l) != 0x0L) {\n-                                if (kind > 27) {\n-                                    kind = 27;\n+                            if ((0xD7FFFFFFFFFFFFFFL & n4) != 0x0L) {\n+                                if (jjmatchedKind > 27) {\n+                                    jjmatchedKind = 27;\n                                 }\n                                 this.jjCheckNAdd(8);\n                             }\n                             if (this.curChar == 'D') {\n                                 this.jjCheckNAddTwoStates(4, 5);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 0:\n                         case 8: {\n-                            if ((0xD7FFFFFFFFFFFFFFL & l) == 0x0L) {\n+                            if ((0xD7FFFFFFFFFFFFFFL & n4) == 0x0L) {\n                                 continue;\n                             }\n-                            if (kind > 27) {\n-                                kind = 27;\n+                            if (jjmatchedKind > 27) {\n+                                jjmatchedKind = 27;\n                             }\n                             this.jjCheckNAdd(8);\n                             continue;\n                         }\n                         case 1: {\n-                            if ((0x7E0000007EL & l) != 0x0L) {\n+                            if ((0x7E0000007EL & n4) != 0x0L) {\n                                 this.jjCheckNAddTwoStates(1, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 4: {\n                             if (this.curChar == 'Z') {\n@@ -432,130 +432,130 @@\n                             continue;\n                         }\n                         case 10: {\n                             this.jjCheckNAddStates(0, 2);\n                             continue;\n                         }\n                     }\n-                } while (i != startsAt);\n+                } while (i != n2);\n             }\n             else {\n-                final int i2 = (this.curChar & '\\u00ff') >> 6;\n-                final long l2 = 1L << (this.curChar & '?');\n+                final int n5 = (this.curChar & '\\u00ff') >> 6;\n+                final long n6 = 1L << (this.curChar & '?');\n                 do {\n                     switch (this.jjstateSet[--i]) {\n                         case 8:\n                         case 15: {\n-                            if ((PropertyListParserTokenManager.jjbitVec0[i2] & l2) == 0x0L) {\n+                            if ((PropertyListParserTokenManager.jjbitVec0[n5] & n6) == 0x0L) {\n                                 continue;\n                             }\n-                            if (kind > 27) {\n-                                kind = 27;\n+                            if (jjmatchedKind > 27) {\n+                                jjmatchedKind = 27;\n                             }\n                             this.jjCheckNAdd(8);\n                             continue;\n                         }\n                         case 6: {\n-                            if ((PropertyListParserTokenManager.jjbitVec0[i2] & l2) == 0x0L) {\n+                            if ((PropertyListParserTokenManager.jjbitVec0[n5] & n6) == 0x0L) {\n                                 continue;\n                             }\n-                            if (kind > 27) {\n-                                kind = 27;\n+                            if (jjmatchedKind > 27) {\n+                                jjmatchedKind = 27;\n                             }\n                             this.jjCheckNAdd(8);\n                             continue;\n                         }\n                         case 10:\n                         case 14: {\n-                            if ((PropertyListParserTokenManager.jjbitVec0[i2] & l2) != 0x0L) {\n+                            if ((PropertyListParserTokenManager.jjbitVec0[n5] & n6) != 0x0L) {\n                                 this.jjCheckNAddStates(0, 2);\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 3: {\n-                            if ((PropertyListParserTokenManager.jjbitVec0[i2] & l2) == 0x0L) {\n+                            if ((PropertyListParserTokenManager.jjbitVec0[n5] & n6) == 0x0L) {\n                                 continue;\n                             }\n-                            if (kind > 27) {\n-                                kind = 27;\n+                            if (jjmatchedKind > 27) {\n+                                jjmatchedKind = 27;\n                             }\n                             this.jjCheckNAdd(8);\n                             continue;\n                         }\n                         case 0: {\n-                            if ((PropertyListParserTokenManager.jjbitVec0[i2] & l2) == 0x0L) {\n+                            if ((PropertyListParserTokenManager.jjbitVec0[n5] & n6) == 0x0L) {\n                                 continue;\n                             }\n-                            if (kind > 27) {\n-                                kind = 27;\n+                            if (jjmatchedKind > 27) {\n+                                jjmatchedKind = 27;\n                             }\n                             this.jjCheckNAdd(8);\n                             continue;\n                         }\n                         default: {\n                             continue;\n                         }\n                     }\n-                } while (i != startsAt);\n+                } while (i != n2);\n             }\n-            if (kind != Integer.MAX_VALUE) {\n-                this.jjmatchedKind = kind;\n-                this.jjmatchedPos = curPos;\n-                kind = Integer.MAX_VALUE;\n-            }\n-            ++curPos;\n-            final int n = i = this.jjnewStateCnt;\n-            final int n2 = 14;\n-            final int jjnewStateCnt = startsAt;\n+            if (jjmatchedKind != Integer.MAX_VALUE) {\n+                this.jjmatchedKind = jjmatchedKind;\n+                this.jjmatchedPos = jjmatchedPos;\n+                jjmatchedKind = Integer.MAX_VALUE;\n+            }\n+            ++jjmatchedPos;\n+            final int n7 = i = this.jjnewStateCnt;\n+            final int n8 = 14;\n+            final int jjnewStateCnt = n2;\n             this.jjnewStateCnt = jjnewStateCnt;\n-            if (n == (startsAt = n2 - jjnewStateCnt)) {\n+            if (n7 == (n2 = n8 - jjnewStateCnt)) {\n                 break;\n             }\n             try {\n                 this.curChar = this.input_stream.readChar();\n             }\n-            catch (final IOException e) {\n-                return curPos;\n+            catch (final IOException ex) {\n+                return jjmatchedPos;\n             }\n         }\n-        return curPos;\n+        return jjmatchedPos;\n     }\n     \n     private int jjMoveStringLiteralDfa0_2() {\n         return this.jjMoveNfa_2(0, 0);\n     }\n     \n-    private int jjMoveNfa_2(final int startState, int curPos) {\n-        int startsAt = 0;\n+    private int jjMoveNfa_2(final int n, int jjmatchedPos) {\n+        int n2 = 0;\n         this.jjnewStateCnt = 3;\n         int i = 1;\n-        this.jjstateSet[0] = startState;\n-        int kind = Integer.MAX_VALUE;\n+        this.jjstateSet[0] = n;\n+        int jjmatchedKind = Integer.MAX_VALUE;\n         while (true) {\n             if (++this.jjround == Integer.MAX_VALUE) {\n                 this.ReInitRounds();\n             }\n             if (this.curChar < '@') {\n-                final long l = 1L << this.curChar;\n+                final long n3 = 1L << this.curChar;\n                 do {\n                     switch (this.jjstateSet[--i]) {\n                         case 0: {\n-                            if ((0x2400L & l) != 0x0L && kind > 9) {\n-                                kind = 9;\n+                            if ((0x2400L & n3) != 0x0L && jjmatchedKind > 9) {\n+                                jjmatchedKind = 9;\n                             }\n                             if (this.curChar == '\\r') {\n                                 this.jjstateSet[this.jjnewStateCnt++] = 1;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 1: {\n-                            if (this.curChar == '\\n' && kind > 9) {\n-                                kind = 9;\n+                            if (this.curChar == '\\n' && jjmatchedKind > 9) {\n+                                jjmatchedKind = 9;\n                                 continue;\n                             }\n                             continue;\n                         }\n                         case 2: {\n                             if (this.curChar == '\\r') {\n                                 this.jjstateSet[this.jjnewStateCnt++] = 1;\n@@ -563,305 +563,305 @@\n                             }\n                             continue;\n                         }\n                         default: {\n                             continue;\n                         }\n                     }\n-                } while (i != startsAt);\n+                } while (i != n2);\n             }\n             else if (this.curChar < '\\u0080') {\n-                final long l = 1L << (this.curChar & '?');\n+                final long n4 = 1L << (this.curChar & '?');\n                 do {\n-                    final int n = this.jjstateSet[--i];\n-                } while (i != startsAt);\n+                    final int n5 = this.jjstateSet[--i];\n+                } while (i != n2);\n             }\n             else {\n-                final int i2 = (this.curChar & '\\u00ff') >> 6;\n-                final long l2 = 1L << (this.curChar & '?');\n+                final int n6 = (this.curChar & '\\u00ff') >> 6;\n+                final long n7 = 1L << (this.curChar & '?');\n                 do {\n-                    final int n2 = this.jjstateSet[--i];\n-                } while (i != startsAt);\n+                    final int n8 = this.jjstateSet[--i];\n+                } while (i != n2);\n             }\n-            if (kind != Integer.MAX_VALUE) {\n-                this.jjmatchedKind = kind;\n-                this.jjmatchedPos = curPos;\n-                kind = Integer.MAX_VALUE;\n-            }\n-            ++curPos;\n-            final int n3 = i = this.jjnewStateCnt;\n-            final int n4 = 3;\n-            final int jjnewStateCnt = startsAt;\n+            if (jjmatchedKind != Integer.MAX_VALUE) {\n+                this.jjmatchedKind = jjmatchedKind;\n+                this.jjmatchedPos = jjmatchedPos;\n+                jjmatchedKind = Integer.MAX_VALUE;\n+            }\n+            ++jjmatchedPos;\n+            final int n9 = i = this.jjnewStateCnt;\n+            final int n10 = 3;\n+            final int jjnewStateCnt = n2;\n             this.jjnewStateCnt = jjnewStateCnt;\n-            if (n3 == (startsAt = n4 - jjnewStateCnt)) {\n+            if (n9 == (n2 = n10 - jjnewStateCnt)) {\n                 break;\n             }\n             try {\n                 this.curChar = this.input_stream.readChar();\n             }\n-            catch (final IOException e) {\n-                return curPos;\n+            catch (final IOException ex) {\n+                return jjmatchedPos;\n             }\n         }\n-        return curPos;\n+        return jjmatchedPos;\n     }\n     \n     private int jjMoveStringLiteralDfa0_1() {\n         switch (this.curChar) {\n             case '*': {\n                 return this.jjMoveStringLiteralDfa1_1(128L);\n             }\n             default: {\n                 return 1;\n             }\n         }\n     }\n     \n-    private int jjMoveStringLiteralDfa1_1(final long active0) {\n+    private int jjMoveStringLiteralDfa1_1(final long n) {\n         try {\n             this.curChar = this.input_stream.readChar();\n         }\n-        catch (final IOException e) {\n+        catch (final IOException ex) {\n             return 1;\n         }\n         switch (this.curChar) {\n             case '/': {\n-                if ((active0 & 0x80L) != 0x0L) {\n+                if ((n & 0x80L) != 0x0L) {\n                     return this.jjStopAtPos(1, 7);\n                 }\n                 return 2;\n             }\n             default: {\n                 return 2;\n             }\n         }\n     }\n     \n-    public PropertyListParserTokenManager(final SimpleCharStream stream) {\n+    public PropertyListParserTokenManager(final SimpleCharStream input_stream) {\n         this.debugStream = System.out;\n         this.jjrounds = new int[14];\n         this.jjstateSet = new int[28];\n         this.jjimage = new StringBuilder();\n         this.image = this.jjimage;\n         this.curLexState = 0;\n         this.defaultLexState = 0;\n-        this.input_stream = stream;\n+        this.input_stream = input_stream;\n     }\n     \n-    public PropertyListParserTokenManager(final SimpleCharStream stream, final int lexState) {\n-        this(stream);\n-        this.SwitchTo(lexState);\n+    public PropertyListParserTokenManager(final SimpleCharStream simpleCharStream, final int n) {\n+        this(simpleCharStream);\n+        this.SwitchTo(n);\n     }\n     \n-    public void ReInit(final SimpleCharStream stream) {\n+    public void ReInit(final SimpleCharStream input_stream) {\n         final int n = 0;\n         this.jjnewStateCnt = n;\n         this.jjmatchedPos = n;\n         this.curLexState = this.defaultLexState;\n-        this.input_stream = stream;\n+        this.input_stream = input_stream;\n         this.ReInitRounds();\n     }\n     \n     private void ReInitRounds() {\n         this.jjround = -2147483647;\n-        int i = 14;\n-        while (i-- > 0) {\n-            this.jjrounds[i] = Integer.MIN_VALUE;\n+        int n = 14;\n+        while (n-- > 0) {\n+            this.jjrounds[n] = Integer.MIN_VALUE;\n         }\n     }\n     \n-    public void ReInit(final SimpleCharStream stream, final int lexState) {\n-        this.ReInit(stream);\n-        this.SwitchTo(lexState);\n+    public void ReInit(final SimpleCharStream simpleCharStream, final int n) {\n+        this.ReInit(simpleCharStream);\n+        this.SwitchTo(n);\n     }\n     \n-    public void SwitchTo(final int lexState) {\n-        if (lexState >= 3 || lexState < 0) {\n-            throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + lexState + \". State unchanged.\", 2);\n+    public void SwitchTo(final int n) {\n+        if (n >= 3 || n < 0) {\n+            throw new TokenMgrError(\"Error: Ignoring invalid lexical state : \" + n + \". State unchanged.\", 2);\n         }\n-        this.curLexState = lexState;\n+        this.curLexState = n;\n     }\n     \n     protected Token jjFillToken() {\n-        final String im = PropertyListParserTokenManager.jjstrLiteralImages[this.jjmatchedKind];\n-        final String curTokenImage = (im == null) ? this.input_stream.GetImage() : im;\n+        final String s = PropertyListParserTokenManager.jjstrLiteralImages[this.jjmatchedKind];\n+        final String s2 = (s == null) ? this.input_stream.GetImage() : s;\n         final int beginLine = this.input_stream.getBeginLine();\n         final int beginColumn = this.input_stream.getBeginColumn();\n         final int endLine = this.input_stream.getEndLine();\n         final int endColumn = this.input_stream.getEndColumn();\n-        final Token t = Token.newToken(this.jjmatchedKind, curTokenImage);\n-        t.beginLine = beginLine;\n-        t.endLine = endLine;\n-        t.beginColumn = beginColumn;\n-        t.endColumn = endColumn;\n-        return t;\n+        final Token token = Token.newToken(this.jjmatchedKind, s2);\n+        token.beginLine = beginLine;\n+        token.endLine = endLine;\n+        token.beginColumn = beginColumn;\n+        token.endColumn = endColumn;\n+        return token;\n     }\n     \n     public Token getNextToken() {\n         Token specialToken = null;\n-        int curPos = 0;\n+        int n = 0;\n     Label_0004_Outer:\n         while (true) {\n         Label_0004:\n             while (true) {\n                 try {\n                     this.curChar = this.input_stream.BeginToken();\n                 }\n-                catch (final IOException e) {\n+                catch (final IOException ex) {\n                     this.jjmatchedKind = 0;\n-                    final Token matchedToken = this.jjFillToken();\n-                    matchedToken.specialToken = specialToken;\n-                    return matchedToken;\n+                    final Token jjFillToken = this.jjFillToken();\n+                    jjFillToken.specialToken = specialToken;\n+                    return jjFillToken;\n                 }\n                 (this.image = this.jjimage).setLength();\n                 this.jjimageLen = 0;\n                 while (true) {\n                     switch (this.curLexState) {\n                         case 0: {\n                             try {\n                                 this.input_stream.backup(0);\n                                 while (this.curChar <= ' ' && (0x100002600L & 1L << this.curChar) != 0x0L) {\n                                     this.curChar = this.input_stream.BeginToken();\n                                 }\n                             }\n-                            catch (final IOException e2) {\n+                            catch (final IOException ex2) {\n                                 continue Label_0004;\n                             }\n                             this.jjmatchedKind = Integer.MAX_VALUE;\n                             this.jjmatchedPos = 0;\n-                            curPos = this.jjMoveStringLiteralDfa0_0();\n+                            n = this.jjMoveStringLiteralDfa0_0();\n                             break;\n                         }\n                         case 1: {\n                             this.jjmatchedKind = Integer.MAX_VALUE;\n                             this.jjmatchedPos = 0;\n-                            curPos = this.jjMoveStringLiteralDfa0_1();\n+                            n = this.jjMoveStringLiteralDfa0_1();\n                             if (this.jjmatchedPos == 0 && this.jjmatchedKind > 6) {\n                                 this.jjmatchedKind = 6;\n                                 break;\n                             }\n                             break;\n                         }\n                         case 2: {\n                             this.jjmatchedKind = Integer.MAX_VALUE;\n                             this.jjmatchedPos = 0;\n-                            curPos = this.jjMoveStringLiteralDfa0_2();\n+                            n = this.jjMoveStringLiteralDfa0_2();\n                             if (this.jjmatchedPos == 0 && this.jjmatchedKind > 10) {\n                                 this.jjmatchedKind = 10;\n                                 break;\n                             }\n                             break;\n                         }\n                     }\n                     if (this.jjmatchedKind == Integer.MAX_VALUE) {\n                         break Label_0004_Outer;\n                     }\n-                    if (this.jjmatchedPos + 1 < curPos) {\n-                        this.input_stream.backup(curPos - this.jjmatchedPos - 1);\n+                    if (this.jjmatchedPos + 1 < n) {\n+                        this.input_stream.backup(n - this.jjmatchedPos - 1);\n                     }\n                     if ((PropertyListParserTokenManager.jjtoToken[this.jjmatchedKind >> 6] & 1L << (this.jjmatchedKind & 0x3F)) != 0x0L) {\n-                        final Token matchedToken = this.jjFillToken();\n-                        matchedToken.specialToken = specialToken;\n+                        final Token jjFillToken2 = this.jjFillToken();\n+                        jjFillToken2.specialToken = specialToken;\n                         if (PropertyListParserTokenManager.jjnewLexState[this.jjmatchedKind] != -1) {\n                             this.curLexState = PropertyListParserTokenManager.jjnewLexState[this.jjmatchedKind];\n                         }\n-                        return matchedToken;\n+                        return jjFillToken2;\n                     }\n                     if ((PropertyListParserTokenManager.jjtoSkip[this.jjmatchedKind >> 6] & 1L << (this.jjmatchedKind & 0x3F)) == 0x0L) {\n                         this.jjimageLen += this.jjmatchedPos + 1;\n                         if (PropertyListParserTokenManager.jjnewLexState[this.jjmatchedKind] != -1) {\n                             this.curLexState = PropertyListParserTokenManager.jjnewLexState[this.jjmatchedKind];\n                         }\n-                        curPos = 0;\n+                        n = 0;\n                         this.jjmatchedKind = Integer.MAX_VALUE;\n                         try {\n                             this.curChar = this.input_stream.readChar();\n                             continue Label_0004_Outer;\n                         }\n-                        catch (final IOException ex) {}\n+                        catch (final IOException ex3) {}\n                         break Label_0004_Outer;\n                     }\n                     if ((PropertyListParserTokenManager.jjtoSpecial[this.jjmatchedKind >> 6] & 1L << (this.jjmatchedKind & 0x3F)) != 0x0L) {\n-                        final Token matchedToken = this.jjFillToken();\n+                        final Token jjFillToken3 = this.jjFillToken();\n                         if (specialToken == null) {\n-                            specialToken = matchedToken;\n+                            specialToken = jjFillToken3;\n                         }\n                         else {\n-                            matchedToken.specialToken = specialToken;\n+                            jjFillToken3.specialToken = specialToken;\n                             final Token token = specialToken;\n-                            final Token next = matchedToken;\n+                            final Token next = jjFillToken3;\n                             token.next = next;\n                             specialToken = next;\n                         }\n-                        this.SkipLexicalActions(matchedToken);\n+                        this.SkipLexicalActions(jjFillToken3);\n                     }\n                     else {\n                         this.SkipLexicalActions(null);\n                     }\n                     if (PropertyListParserTokenManager.jjnewLexState[this.jjmatchedKind] != -1) {\n                         this.curLexState = PropertyListParserTokenManager.jjnewLexState[this.jjmatchedKind];\n                         break;\n                     }\n                     break;\n                 }\n                 break;\n             }\n         }\n-        int error_line = this.input_stream.getEndLine();\n-        int error_column = this.input_stream.getEndColumn();\n-        String error_after = null;\n-        boolean EOFSeen = false;\n+        int endLine = this.input_stream.getEndLine();\n+        int endColumn = this.input_stream.getEndColumn();\n+        String s = null;\n+        boolean b = false;\n         try {\n             this.input_stream.readChar();\n             this.input_stream.backup(1);\n         }\n-        catch (final IOException e3) {\n-            EOFSeen = true;\n-            error_after = ((curPos <= 1) ? \"\" : this.input_stream.GetImage());\n+        catch (final IOException ex4) {\n+            b = true;\n+            s = ((n <= 1) ? \"\" : this.input_stream.GetImage());\n             if (this.curChar == '\\n' || this.curChar == '\\r') {\n-                ++error_line;\n-                error_column = 0;\n+                ++endLine;\n+                endColumn = 0;\n             }\n             else {\n-                ++error_column;\n+                ++endColumn;\n             }\n         }\n-        if (!EOFSeen) {\n+        if (!b) {\n             this.input_stream.backup(1);\n-            error_after = ((curPos <= 1) ? \"\" : this.input_stream.GetImage());\n+            s = ((n <= 1) ? \"\" : this.input_stream.GetImage());\n         }\n-        throw new TokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, 0);\n+        throw new TokenMgrError(b, this.curLexState, endLine, endColumn, s, this.curChar, 0);\n     }\n     \n-    void SkipLexicalActions(final Token matchedToken) {\n+    void SkipLexicalActions(final Token token) {\n         final int jjmatchedKind = this.jjmatchedKind;\n     }\n     \n-    private void jjCheckNAdd(final int state) {\n-        if (this.jjrounds[state] != this.jjround) {\n-            this.jjstateSet[this.jjnewStateCnt++] = state;\n-            this.jjrounds[state] = this.jjround;\n+    private void jjCheckNAdd(final int n) {\n+        if (this.jjrounds[n] != this.jjround) {\n+            this.jjstateSet[this.jjnewStateCnt++] = n;\n+            this.jjrounds[n] = this.jjround;\n         }\n     }\n     \n-    private void jjAddStates(int start, final int end) {\n+    private void jjAddStates(int n, final int n2) {\n         do {\n-            this.jjstateSet[this.jjnewStateCnt++] = PropertyListParserTokenManager.jjnextStates[start];\n-        } while (start++ != end);\n+            this.jjstateSet[this.jjnewStateCnt++] = PropertyListParserTokenManager.jjnextStates[n];\n+        } while (n++ != n2);\n     }\n     \n-    private void jjCheckNAddTwoStates(final int state1, final int state2) {\n-        this.jjCheckNAdd(state1);\n-        this.jjCheckNAdd(state2);\n+    private void jjCheckNAddTwoStates(final int n, final int n2) {\n+        this.jjCheckNAdd(n);\n+        this.jjCheckNAdd(n2);\n     }\n     \n-    private void jjCheckNAddStates(int start, final int end) {\n+    private void jjCheckNAddStates(int n, final int n2) {\n         do {\n-            this.jjCheckNAdd(PropertyListParserTokenManager.jjnextStates[start]);\n-        } while (start++ != end);\n+            this.jjCheckNAdd(PropertyListParserTokenManager.jjnextStates[n]);\n+        } while (n++ != n2);\n     }\n     \n     static {\n         jjbitVec0 = new long[] { 0L, 0L, -1L, -1L };\n         jjnextStates = new int[] { 10, 12, 13 };\n         jjstrLiteralImages = new String[] { \"\", null, null, null, null, null, null, null, null, null, null, \"(\", \")\", \",\", \"{\", \"}\", \";\", \"=\", \"<\", \">\", \"<*D\", \"\\\"\", null, null, null, null, null, null, null, \"\\\\\\\"\" };\n         lexStateNames = new String[] { \"DEFAULT\", \"IN_COMMENT\", \"IN_SINGLE_LINE_COMMENT\" };\n"}]}
