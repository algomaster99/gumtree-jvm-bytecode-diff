{"diffoscope-json-version": 1, "source1": "first/ProxyInputStream.class", "source2": "second/ProxyInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,171 +1,171 @@\n-  SHA-256 checksum 3ff8a018c07952d52ed8fb68299d695be52f3130a3cdd5665e5336b8f6e04047\n+  SHA-256 checksum eaf879bf5dc83e95554cbbe2dad4709b5d5e17f9824c69a6f6b51543ff823749\n   Compiled from \"ProxyInputStream.java\"\n public abstract class org.apache.commons.io.input.ProxyInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #19                         // org/apache/commons/io/input/ProxyInputStream\n-  super_class: #20                        // java/io/FilterInputStream\n+  this_class: #1                          // org/apache/commons/io/input/ProxyInputStream\n+  super_class: #3                         // java/io/FilterInputStream\n   interfaces: 0, fields: 0, methods: 13, attributes: 3\n Constant pool:\n-    #1 = Class              #66           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #20.#67       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Methodref          #19.#68       // org/apache/commons/io/input/ProxyInputStream.beforeRead:(I)V\n-    #4 = Fieldref           #19.#69       // org/apache/commons/io/input/ProxyInputStream.in:Ljava/io/InputStream;\n-    #5 = Methodref          #70.#71       // java/io/InputStream.read:()I\n-    #6 = Methodref          #19.#72       // org/apache/commons/io/input/ProxyInputStream.afterRead:(I)V\n-    #7 = Class              #73           // java/io/IOException\n-    #8 = Methodref          #19.#74       // org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-    #9 = Methodref          #1.#75        // org/apache/commons/io/IOUtils.length:([B)I\n-   #10 = Methodref          #70.#76       // java/io/InputStream.read:([B)I\n-   #11 = Methodref          #70.#77       // java/io/InputStream.read:([BII)I\n-   #12 = Methodref          #70.#78       // java/io/InputStream.skip:(J)J\n-   #13 = Methodref          #20.#79       // java/io/FilterInputStream.available:()I\n-   #14 = InvokeDynamic      #0:#85        // #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-   #15 = Methodref          #1.#86        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #16 = Methodref          #70.#87       // java/io/InputStream.mark:(I)V\n-   #17 = Methodref          #70.#88       // java/io/InputStream.reset:()V\n-   #18 = Methodref          #70.#89       // java/io/InputStream.markSupported:()Z\n-   #19 = Class              #90           // org/apache/commons/io/input/ProxyInputStream\n-   #20 = Class              #91           // java/io/FilterInputStream\n-   #21 = Utf8               <init>\n-   #22 = Utf8               (Ljava/io/InputStream;)V\n-   #23 = Utf8               Code\n-   #24 = Utf8               LineNumberTable\n-   #25 = Utf8               LocalVariableTable\n-   #26 = Utf8               this\n-   #27 = Utf8               Lorg/apache/commons/io/input/ProxyInputStream;\n-   #28 = Utf8               proxy\n-   #29 = Utf8               Ljava/io/InputStream;\n-   #30 = Utf8               read\n-   #31 = Utf8               ()I\n-   #32 = Utf8               b\n-   #33 = Utf8               I\n-   #34 = Utf8               e\n-   #35 = Utf8               Ljava/io/IOException;\n-   #36 = Utf8               StackMapTable\n-   #37 = Class              #90           // org/apache/commons/io/input/ProxyInputStream\n-   #38 = Class              #73           // java/io/IOException\n-   #39 = Utf8               Exceptions\n-   #40 = Utf8               ([B)I\n-   #41 = Utf8               n\n-   #42 = Utf8               bts\n-   #43 = Utf8               [B\n-   #44 = Utf8               ([BII)I\n-   #45 = Utf8               off\n-   #46 = Utf8               len\n-   #47 = Utf8               skip\n-   #48 = Utf8               (J)J\n-   #49 = Utf8               ln\n-   #50 = Utf8               J\n-   #51 = Utf8               available\n-   #52 = Utf8               close\n-   #53 = Utf8               ()V\n-   #54 = Utf8               mark\n-   #55 = Utf8               (I)V\n-   #56 = Utf8               readlimit\n-   #57 = Utf8               reset\n-   #58 = Utf8               markSupported\n-   #59 = Utf8               ()Z\n-   #60 = Utf8               beforeRead\n-   #61 = Utf8               afterRead\n-   #62 = Utf8               handleIOException\n-   #63 = Utf8               (Ljava/io/IOException;)V\n-   #64 = Utf8               SourceFile\n-   #65 = Utf8               ProxyInputStream.java\n-   #66 = Utf8               org/apache/commons/io/IOUtils\n-   #67 = NameAndType        #21:#22       // \"<init>\":(Ljava/io/InputStream;)V\n-   #68 = NameAndType        #60:#55       // beforeRead:(I)V\n-   #69 = NameAndType        #92:#29       // in:Ljava/io/InputStream;\n-   #70 = Class              #93           // java/io/InputStream\n-   #71 = NameAndType        #30:#31       // read:()I\n-   #72 = NameAndType        #61:#55       // afterRead:(I)V\n-   #73 = Utf8               java/io/IOException\n-   #74 = NameAndType        #62:#63       // handleIOException:(Ljava/io/IOException;)V\n-   #75 = NameAndType        #94:#40       // length:([B)I\n-   #76 = NameAndType        #30:#40       // read:([B)I\n-   #77 = NameAndType        #30:#44       // read:([BII)I\n-   #78 = NameAndType        #47:#48       // skip:(J)J\n-   #79 = NameAndType        #51:#31       // available:()I\n-   #80 = Utf8               BootstrapMethods\n-   #81 = MethodHandle       6:#95         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #82 = MethodType         #96           //  (Ljava/lang/Object;)V\n-   #83 = MethodHandle       5:#8          // REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-   #84 = MethodType         #63           //  (Ljava/io/IOException;)V\n-   #85 = NameAndType        #97:#98       // accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-   #86 = NameAndType        #52:#99       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #87 = NameAndType        #54:#55       // mark:(I)V\n-   #88 = NameAndType        #57:#53       // reset:()V\n-   #89 = NameAndType        #58:#59       // markSupported:()Z\n-   #90 = Utf8               org/apache/commons/io/input/ProxyInputStream\n-   #91 = Utf8               java/io/FilterInputStream\n-   #92 = Utf8               in\n-   #93 = Utf8               java/io/InputStream\n-   #94 = Utf8               length\n-   #95 = Methodref          #100.#101     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #96 = Utf8               (Ljava/lang/Object;)V\n-   #97 = Utf8               accept\n-   #98 = Utf8               (Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-   #99 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #100 = Class              #102          // java/lang/invoke/LambdaMetafactory\n-  #101 = NameAndType        #103:#107     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #102 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #103 = Utf8               metafactory\n-  #104 = Class              #109          // java/lang/invoke/MethodHandles$Lookup\n-  #105 = Utf8               Lookup\n-  #106 = Utf8               InnerClasses\n-  #107 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #108 = Class              #110          // java/lang/invoke/MethodHandles\n-  #109 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #110 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/io/input/ProxyInputStream\n+    #2 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+    #3 = Class              #4            // java/io/FilterInputStream\n+    #4 = Utf8               java/io/FilterInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;)V\n+    #7 = Utf8               Code\n+    #8 = Methodref          #3.#9         // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #9 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;)V\n+   #10 = Utf8               LineNumberTable\n+   #11 = Utf8               LocalVariableTable\n+   #12 = Utf8               this\n+   #13 = Utf8               Lorg/apache/commons/io/input/ProxyInputStream;\n+   #14 = Utf8               proxy\n+   #15 = Utf8               Ljava/io/InputStream;\n+   #16 = Utf8               read\n+   #17 = Utf8               ()I\n+   #18 = Utf8               Exceptions\n+   #19 = Class              #20           // java/io/IOException\n+   #20 = Utf8               java/io/IOException\n+   #21 = Methodref          #1.#22        // org/apache/commons/io/input/ProxyInputStream.beforeRead:(I)V\n+   #22 = NameAndType        #23:#24       // beforeRead:(I)V\n+   #23 = Utf8               beforeRead\n+   #24 = Utf8               (I)V\n+   #25 = Fieldref           #1.#26        // org/apache/commons/io/input/ProxyInputStream.in:Ljava/io/InputStream;\n+   #26 = NameAndType        #27:#15       // in:Ljava/io/InputStream;\n+   #27 = Utf8               in\n+   #28 = Methodref          #29.#31       // java/io/InputStream.read:()I\n+   #29 = Class              #30           // java/io/InputStream\n+   #30 = Utf8               java/io/InputStream\n+   #31 = NameAndType        #16:#17       // read:()I\n+   #32 = Methodref          #1.#33        // org/apache/commons/io/input/ProxyInputStream.afterRead:(I)V\n+   #33 = NameAndType        #34:#24       // afterRead:(I)V\n+   #34 = Utf8               afterRead\n+   #35 = Methodref          #1.#36        // org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+   #36 = NameAndType        #37:#38       // handleIOException:(Ljava/io/IOException;)V\n+   #37 = Utf8               handleIOException\n+   #38 = Utf8               (Ljava/io/IOException;)V\n+   #39 = Utf8               b\n+   #40 = Utf8               I\n+   #41 = Utf8               e\n+   #42 = Utf8               Ljava/io/IOException;\n+   #43 = Utf8               StackMapTable\n+   #44 = Utf8               ([B)I\n+   #45 = Methodref          #46.#48       // org/apache/commons/io/IOUtils.length:([B)I\n+   #46 = Class              #47           // org/apache/commons/io/IOUtils\n+   #47 = Utf8               org/apache/commons/io/IOUtils\n+   #48 = NameAndType        #49:#44       // length:([B)I\n+   #49 = Utf8               length\n+   #50 = Methodref          #29.#51       // java/io/InputStream.read:([B)I\n+   #51 = NameAndType        #16:#44       // read:([B)I\n+   #52 = Utf8               bts\n+   #53 = Utf8               [B\n+   #54 = Utf8               n\n+   #55 = Utf8               ([BII)I\n+   #56 = Methodref          #29.#57       // java/io/InputStream.read:([BII)I\n+   #57 = NameAndType        #16:#55       // read:([BII)I\n+   #58 = Utf8               off\n+   #59 = Utf8               len\n+   #60 = Utf8               skip\n+   #61 = Utf8               (J)J\n+   #62 = Methodref          #29.#63       // java/io/InputStream.skip:(J)J\n+   #63 = NameAndType        #60:#61       // skip:(J)J\n+   #64 = Utf8               ln\n+   #65 = Utf8               J\n+   #66 = Utf8               available\n+   #67 = Methodref          #3.#68        // java/io/FilterInputStream.available:()I\n+   #68 = NameAndType        #66:#17       // available:()I\n+   #69 = Utf8               close\n+   #70 = Utf8               ()V\n+   #71 = NameAndType        #72:#73       // accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+   #72 = Utf8               accept\n+   #73 = Utf8               (Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+   #74 = InvokeDynamic      #0:#71        // #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+   #75 = Methodref          #46.#76       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #76 = NameAndType        #69:#77       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #77 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #78 = Utf8               mark\n+   #79 = Methodref          #29.#80       // java/io/InputStream.mark:(I)V\n+   #80 = NameAndType        #78:#24       // mark:(I)V\n+   #81 = Utf8               readlimit\n+   #82 = Utf8               reset\n+   #83 = Methodref          #29.#84       // java/io/InputStream.reset:()V\n+   #84 = NameAndType        #82:#70       // reset:()V\n+   #85 = Utf8               markSupported\n+   #86 = Utf8               ()Z\n+   #87 = Methodref          #29.#88       // java/io/InputStream.markSupported:()Z\n+   #88 = NameAndType        #85:#86       // markSupported:()Z\n+   #89 = Utf8               SourceFile\n+   #90 = Utf8               ProxyInputStream.java\n+   #91 = Utf8               BootstrapMethods\n+   #92 = Methodref          #93.#95       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #93 = Class              #94           // java/lang/invoke/LambdaMetafactory\n+   #94 = Utf8               java/lang/invoke/LambdaMetafactory\n+   #95 = NameAndType        #96:#97       // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #96 = Utf8               metafactory\n+   #97 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #98 = MethodHandle       6:#92         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #99 = Utf8               (Ljava/lang/Object;)V\n+  #100 = MethodType         #99           //  (Ljava/lang/Object;)V\n+  #101 = MethodHandle       5:#35         // REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+  #102 = MethodType         #38           //  (Ljava/io/IOException;)V\n+  #103 = Utf8               InnerClasses\n+  #104 = Class              #105          // java/lang/invoke/MethodHandles$Lookup\n+  #105 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #106 = Class              #107          // java/lang/invoke/MethodHandles\n+  #107 = Utf8               java/lang/invoke/MethodHandles\n+  #108 = Utf8               Lookup\n {\n   public org.apache.commons.io.input.ProxyInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #8                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 49: 0\n         line 51: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0       6     1 proxy   Ljava/io/InputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokevirtual #21                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         9: invokevirtual #5                  // Method java/io/InputStream.read:()I\n+         6: getfield      #25                 // Field in:Ljava/io/InputStream;\n+         9: invokevirtual #28                 // Method java/io/InputStream.read:()I\n         12: istore_1\n         13: aload_0\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: iconst_1\n         20: goto          24\n         23: iconst_m1\n-        24: invokevirtual #6                  // Method afterRead:(I)V\n+        24: invokevirtual #32                 // Method afterRead:(I)V\n         27: iload_1\n         28: ireturn\n         29: astore_1\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        32: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         35: iconst_m1\n         36: ireturn\n       Exception table:\n          from    to  target type\n              0    28    29   Class java/io/IOException\n       LineNumberTable:\n         line 61: 0\n@@ -173,56 +173,56 @@\n         line 63: 13\n         line 64: 27\n         line 65: 29\n         line 66: 30\n         line 67: 35\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0      37     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n            13      16     1     b   I\n            30       7     1     e   Ljava/io/IOException;\n-            0      37     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n       StackMapTable: number_of_entries = 3\n         frame_type = 255 /* full_frame */\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/input/ProxyInputStream, int ]\n           stack = [ class org/apache/commons/io/input/ProxyInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/input/ProxyInputStream, int ]\n           stack = [ class org/apache/commons/io/input/ProxyInputStream, int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 4\n           locals = [ class org/apache/commons/io/input/ProxyInputStream ]\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:([B)I\n-         5: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokestatic  #45                 // Method org/apache/commons/io/IOUtils.length:([B)I\n+         5: invokevirtual #21                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         9: getfield      #25                 // Field in:Ljava/io/InputStream;\n         12: aload_1\n-        13: invokevirtual #10                 // Method java/io/InputStream.read:([B)I\n+        13: invokevirtual #50                 // Method java/io/InputStream.read:([B)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #6                  // Method afterRead:(I)V\n+        19: invokevirtual #32                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 80: 0\n@@ -230,48 +230,48 @@\n         line 82: 17\n         line 83: 22\n         line 84: 24\n         line 85: 25\n         line 86: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       7     2     n   I\n-           25       7     2     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0      32     1   bts   [B\n+           17       7     2     n   I\n+           25       7     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokevirtual #21                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         6: getfield      #25                 // Field in:Ljava/io/InputStream;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #11                 // Method java/io/InputStream.read:([BII)I\n+        12: invokevirtual #56                 // Method java/io/InputStream.read:([BII)I\n         15: istore        4\n         17: aload_0\n         18: iload         4\n-        20: invokevirtual #6                  // Method afterRead:(I)V\n+        20: invokevirtual #32                 // Method afterRead:(I)V\n         23: iload         4\n         25: ireturn\n         26: astore        4\n         28: aload_0\n         29: aload         4\n-        31: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        31: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         34: iconst_m1\n         35: ireturn\n       Exception table:\n          from    to  target type\n              0    25    26   Class java/io/IOException\n       LineNumberTable:\n         line 101: 0\n@@ -279,228 +279,225 @@\n         line 103: 17\n         line 104: 23\n         line 105: 26\n         line 106: 28\n         line 107: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       9     4     n   I\n-           28       8     4     e   Ljava/io/IOException;\n             0      36     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0      36     1   bts   [B\n             0      36     2   off   I\n             0      36     3   len   I\n+           17       9     4     n   I\n+           28       8     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #25                 // Field in:Ljava/io/InputStream;\n          4: lload_1\n-         5: invokevirtual #12                 // Method java/io/InputStream.skip:(J)J\n+         5: invokevirtual #62                 // Method java/io/InputStream.skip:(J)J\n          8: lreturn\n          9: astore_3\n         10: aload_0\n         11: aload_3\n-        12: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        12: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         15: lconst_0\n         16: lreturn\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 120: 0\n         line 121: 9\n         line 122: 10\n         line 123: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10       7     3     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0      17     1    ln   J\n+           10       7     3     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #13                 // Method java/io/FilterInputStream.available:()I\n+         1: invokespecial #67                 // Method java/io/FilterInputStream.available:()I\n          4: ireturn\n          5: astore_1\n          6: aload_0\n          7: aload_1\n-         8: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+         8: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         11: iconst_0\n         12: ireturn\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/io/IOException\n       LineNumberTable:\n         line 135: 0\n         line 136: 5\n         line 137: 6\n         line 138: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            6       7     1     e   Ljava/io/IOException;\n             0      13     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n+            6       7     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #25                 // Field in:Ljava/io/InputStream;\n          4: aload_0\n-         5: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-        10: invokestatic  #15                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+         5: invokedynamic #74,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+        10: invokestatic  #75                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n         13: return\n       LineNumberTable:\n         line 148: 0\n         line 149: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #25                 // Field in:Ljava/io/InputStream;\n          4: iload_1\n-         5: invokevirtual #16                 // Method java/io/InputStream.mark:(I)V\n+         5: invokevirtual #79                 // Method java/io/InputStream.mark:(I)V\n          8: return\n       LineNumberTable:\n         line 157: 0\n         line 158: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0       9     1 readlimit   I\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #17                 // Method java/io/InputStream.reset:()V\n+         1: getfield      #25                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #83                 // Method java/io/InputStream.reset:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #35                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 167: 0\n-        line 170: 7\n-        line 168: 10\n+        line 168: 7\n         line 169: 11\n         line 171: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #18                 // Method java/io/InputStream.markSupported:()Z\n+         1: getfield      #25                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #87                 // Method java/io/InputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 179: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n \n   protected void beforeRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 203: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void afterRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 225: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void handleIOException(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 237: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0       2     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ProxyInputStream.java\"\n-InnerClasses:\n-  public static final #105= #104 of #108; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #98 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #82 (Ljava/lang/Object;)V\n-      #83 REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-      #84 (Ljava/io/IOException;)V\n+      #100 (Ljava/lang/Object;)V\n+      #101 REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+      #102 (Ljava/io/IOException;)V\n+InnerClasses:\n+  public static final #108= #104 of #106; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
