{"diffoscope-json-version": 1, "source1": "first/AbstractHierarchicalConfiguration.class", "source2": "second/AbstractHierarchicalConfiguration.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -149,19 +149,25 @@\n         Collection collection = null;\n         Collection collection2 = null;\n         while (iterator.hasNext() && iterator2.hasNext()) {\n             hashMap.put(iterator.next(), iterator2.next());\n         }\n         if (iterator2.hasNext()) {\n             collection = new LinkedList();\n-            iterator2.forEachRemaining(collection::add);\n+            final Iterator iterator3 = iterator2;\n+            final Collection obj = collection;\n+            Objects.requireNonNull(obj);\n+            iterator3.forEachRemaining(obj::add);\n         }\n         if (iterator.hasNext()) {\n             collection2 = new LinkedList();\n-            iterator.forEachRemaining(collection2::add);\n+            final Iterator iterator4 = iterator;\n+            final Collection obj2 = collection2;\n+            Objects.requireNonNull(obj2);\n+            iterator4.forEachRemaining(obj2::add);\n         }\n         return (NodeUpdateData<T>)new NodeUpdateData((Map)hashMap, collection, collection2, s);\n     }\n     \n     public String nodeKey(final T t, final Map<T, String> map, final NodeHandler<T> nodeHandler) {\n         final LinkedList list = new LinkedList();\n         Object parent;\n"}]}
