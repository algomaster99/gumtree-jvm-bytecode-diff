{"diffoscope-json-version": 1, "source1": "first/MutableDouble.class", "source2": "second/MutableDouble.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,132 +1,132 @@\n-  SHA-256 checksum 68d6c85233554310386919ff7d33f31254f9ecc7d2ecc376b3174b973ee3e72b\n+  SHA-256 checksum d314ee6332ed99a73ce9e7f7cbff8df41573e96410637f2984c84bdfe735f189\n   Compiled from \"MutableDouble.java\"\n public class org.apache.commons.lang3.mutable.MutableDouble extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableDouble>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/lang3/mutable/MutableDouble\n-  super_class: #2                         // java/lang/Number\n+  this_class: #1                          // org/apache/commons/lang3/mutable/MutableDouble\n+  super_class: #3                         // java/lang/Number\n   interfaces: 2, fields: 2, methods: 35, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Number.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Number\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/lang3/mutable/MutableDouble\n+    #2 = Utf8               org/apache/commons/lang3/mutable/MutableDouble\n+    #3 = Class              #4            // java/lang/Number\n     #4 = Utf8               java/lang/Number\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Fieldref           #8.#9         // org/apache/commons/lang3/mutable/MutableDouble.value:D\n-    #8 = Class              #10           // org/apache/commons/lang3/mutable/MutableDouble\n-    #9 = NameAndType        #11:#12       // value:D\n-   #10 = Utf8               org/apache/commons/lang3/mutable/MutableDouble\n-   #11 = Utf8               value\n-   #12 = Utf8               D\n-   #13 = Methodref          #2.#14        // java/lang/Number.doubleValue:()D\n-   #14 = NameAndType        #15:#16       // doubleValue:()D\n-   #15 = Utf8               doubleValue\n-   #16 = Utf8               ()D\n-   #17 = Methodref          #18.#19       // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #18 = Class              #20           // java/lang/Double\n-   #19 = NameAndType        #21:#22       // parseDouble:(Ljava/lang/String;)D\n-   #20 = Utf8               java/lang/Double\n-   #21 = Utf8               parseDouble\n-   #22 = Utf8               (Ljava/lang/String;)D\n-   #23 = Methodref          #18.#24       // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-   #24 = NameAndType        #25:#26       // valueOf:(D)Ljava/lang/Double;\n-   #25 = Utf8               valueOf\n-   #26 = Utf8               (D)Ljava/lang/Double;\n-   #27 = Methodref          #18.#28       // java/lang/Double.isNaN:(D)Z\n-   #28 = NameAndType        #29:#30       // isNaN:(D)Z\n-   #29 = Utf8               isNaN\n-   #30 = Utf8               (D)Z\n-   #31 = Methodref          #18.#32       // java/lang/Double.isInfinite:(D)Z\n-   #32 = NameAndType        #33:#30       // isInfinite:(D)Z\n-   #33 = Utf8               isInfinite\n-   #34 = Methodref          #8.#14        // org/apache/commons/lang3/mutable/MutableDouble.doubleValue:()D\n-   #35 = Methodref          #18.#36       // java/lang/Double.doubleToLongBits:(D)J\n-   #36 = NameAndType        #37:#38       // doubleToLongBits:(D)J\n-   #37 = Utf8               doubleToLongBits\n-   #38 = Utf8               (D)J\n-   #39 = Methodref          #18.#40       // java/lang/Double.compare:(DD)I\n-   #40 = NameAndType        #41:#42       // compare:(DD)I\n-   #41 = Utf8               compare\n-   #42 = Utf8               (DD)I\n-   #43 = Methodref          #44.#45       // java/lang/String.valueOf:(D)Ljava/lang/String;\n-   #44 = Class              #46           // java/lang/String\n-   #45 = NameAndType        #25:#47       // valueOf:(D)Ljava/lang/String;\n-   #46 = Utf8               java/lang/String\n-   #47 = Utf8               (D)Ljava/lang/String;\n-   #48 = Methodref          #8.#49        // org/apache/commons/lang3/mutable/MutableDouble.compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n-   #49 = NameAndType        #50:#51       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n-   #50 = Utf8               compareTo\n-   #51 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n-   #52 = Methodref          #8.#53        // org/apache/commons/lang3/mutable/MutableDouble.setValue:(Ljava/lang/Number;)V\n-   #53 = NameAndType        #54:#55       // setValue:(Ljava/lang/Number;)V\n-   #54 = Utf8               setValue\n-   #55 = Utf8               (Ljava/lang/Number;)V\n-   #56 = Methodref          #8.#57        // org/apache/commons/lang3/mutable/MutableDouble.getValue:()Ljava/lang/Double;\n-   #57 = NameAndType        #58:#59       // getValue:()Ljava/lang/Double;\n-   #58 = Utf8               getValue\n-   #59 = Utf8               ()Ljava/lang/Double;\n-   #60 = Class              #61           // java/lang/Comparable\n-   #61 = Utf8               java/lang/Comparable\n-   #62 = Class              #63           // org/apache/commons/lang3/mutable/Mutable\n-   #63 = Utf8               org/apache/commons/lang3/mutable/Mutable\n-   #64 = Utf8               serialVersionUID\n-   #65 = Utf8               J\n-   #66 = Utf8               ConstantValue\n-   #67 = Long               1587163916l\n-   #69 = Utf8               Code\n-   #70 = Utf8               LineNumberTable\n-   #71 = Utf8               LocalVariableTable\n-   #72 = Utf8               this\n-   #73 = Utf8               Lorg/apache/commons/lang3/mutable/MutableDouble;\n-   #74 = Utf8               (D)V\n-   #75 = Utf8               Ljava/lang/Number;\n-   #76 = Utf8               (Ljava/lang/String;)V\n-   #77 = Utf8               Ljava/lang/String;\n-   #78 = Utf8               ()Z\n-   #79 = Utf8               increment\n-   #80 = Utf8               getAndIncrement\n-   #81 = Utf8               last\n-   #82 = Utf8               incrementAndGet\n-   #83 = Utf8               decrement\n-   #84 = Utf8               getAndDecrement\n-   #85 = Utf8               decrementAndGet\n-   #86 = Utf8               add\n-   #87 = Utf8               operand\n-   #88 = Utf8               subtract\n-   #89 = Utf8               addAndGet\n-   #90 = Utf8               (D)D\n-   #91 = Utf8               (Ljava/lang/Number;)D\n-   #92 = Utf8               getAndAdd\n-   #93 = Utf8               intValue\n-   #94 = Utf8               ()I\n-   #95 = Utf8               longValue\n-   #96 = Utf8               ()J\n-   #97 = Utf8               floatValue\n-   #98 = Utf8               ()F\n-   #99 = Utf8               toDouble\n-  #100 = Utf8               equals\n-  #101 = Utf8               (Ljava/lang/Object;)Z\n-  #102 = Utf8               obj\n-  #103 = Utf8               Ljava/lang/Object;\n-  #104 = Utf8               StackMapTable\n-  #105 = Utf8               hashCode\n-  #106 = Utf8               bits\n-  #107 = Utf8               other\n-  #108 = Utf8               toString\n-  #109 = Utf8               ()Ljava/lang/String;\n-  #110 = Utf8               (Ljava/lang/Object;)I\n-  #111 = Utf8               (Ljava/lang/Object;)V\n-  #112 = Utf8               ()Ljava/lang/Object;\n-  #113 = Utf8               Signature\n-  #114 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableDouble;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n-  #115 = Utf8               SourceFile\n-  #116 = Utf8               MutableDouble.java\n+    #5 = Class              #6            // java/lang/Comparable\n+    #6 = Utf8               java/lang/Comparable\n+    #7 = Class              #8            // org/apache/commons/lang3/mutable/Mutable\n+    #8 = Utf8               org/apache/commons/lang3/mutable/Mutable\n+    #9 = Utf8               serialVersionUID\n+   #10 = Utf8               J\n+   #11 = Utf8               ConstantValue\n+   #12 = Long               1587163916l\n+   #14 = Utf8               value\n+   #15 = Utf8               D\n+   #16 = Utf8               <init>\n+   #17 = Utf8               ()V\n+   #18 = Utf8               Code\n+   #19 = Methodref          #3.#20        // java/lang/Number.\"<init>\":()V\n+   #20 = NameAndType        #16:#17       // \"<init>\":()V\n+   #21 = Utf8               LineNumberTable\n+   #22 = Utf8               LocalVariableTable\n+   #23 = Utf8               this\n+   #24 = Utf8               Lorg/apache/commons/lang3/mutable/MutableDouble;\n+   #25 = Utf8               (D)V\n+   #26 = Fieldref           #1.#27        // org/apache/commons/lang3/mutable/MutableDouble.value:D\n+   #27 = NameAndType        #14:#15       // value:D\n+   #28 = Utf8               (Ljava/lang/Number;)V\n+   #29 = Methodref          #3.#30        // java/lang/Number.doubleValue:()D\n+   #30 = NameAndType        #31:#32       // doubleValue:()D\n+   #31 = Utf8               doubleValue\n+   #32 = Utf8               ()D\n+   #33 = Utf8               Ljava/lang/Number;\n+   #34 = Utf8               (Ljava/lang/String;)V\n+   #35 = Methodref          #36.#38       // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #36 = Class              #37           // java/lang/Double\n+   #37 = Utf8               java/lang/Double\n+   #38 = NameAndType        #39:#40       // parseDouble:(Ljava/lang/String;)D\n+   #39 = Utf8               parseDouble\n+   #40 = Utf8               (Ljava/lang/String;)D\n+   #41 = Utf8               Ljava/lang/String;\n+   #42 = Utf8               getValue\n+   #43 = Utf8               ()Ljava/lang/Double;\n+   #44 = Methodref          #36.#45       // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+   #45 = NameAndType        #46:#47       // valueOf:(D)Ljava/lang/Double;\n+   #46 = Utf8               valueOf\n+   #47 = Utf8               (D)Ljava/lang/Double;\n+   #48 = Utf8               setValue\n+   #49 = Utf8               isNaN\n+   #50 = Utf8               ()Z\n+   #51 = Methodref          #36.#52       // java/lang/Double.isNaN:(D)Z\n+   #52 = NameAndType        #49:#53       // isNaN:(D)Z\n+   #53 = Utf8               (D)Z\n+   #54 = Utf8               isInfinite\n+   #55 = Methodref          #36.#56       // java/lang/Double.isInfinite:(D)Z\n+   #56 = NameAndType        #54:#53       // isInfinite:(D)Z\n+   #57 = Utf8               increment\n+   #58 = Utf8               getAndIncrement\n+   #59 = Utf8               last\n+   #60 = Utf8               incrementAndGet\n+   #61 = Utf8               decrement\n+   #62 = Utf8               getAndDecrement\n+   #63 = Utf8               decrementAndGet\n+   #64 = Utf8               add\n+   #65 = Utf8               operand\n+   #66 = Utf8               subtract\n+   #67 = Utf8               addAndGet\n+   #68 = Utf8               (D)D\n+   #69 = Utf8               (Ljava/lang/Number;)D\n+   #70 = Utf8               getAndAdd\n+   #71 = Utf8               intValue\n+   #72 = Utf8               ()I\n+   #73 = Utf8               longValue\n+   #74 = Utf8               ()J\n+   #75 = Utf8               floatValue\n+   #76 = Utf8               ()F\n+   #77 = Utf8               toDouble\n+   #78 = Methodref          #1.#30        // org/apache/commons/lang3/mutable/MutableDouble.doubleValue:()D\n+   #79 = Utf8               equals\n+   #80 = Utf8               (Ljava/lang/Object;)Z\n+   #81 = Methodref          #36.#82       // java/lang/Double.doubleToLongBits:(D)J\n+   #82 = NameAndType        #83:#84       // doubleToLongBits:(D)J\n+   #83 = Utf8               doubleToLongBits\n+   #84 = Utf8               (D)J\n+   #85 = Utf8               obj\n+   #86 = Utf8               Ljava/lang/Object;\n+   #87 = Utf8               StackMapTable\n+   #88 = Utf8               hashCode\n+   #89 = Utf8               bits\n+   #90 = Utf8               compareTo\n+   #91 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+   #92 = Methodref          #36.#93       // java/lang/Double.compare:(DD)I\n+   #93 = NameAndType        #94:#95       // compare:(DD)I\n+   #94 = Utf8               compare\n+   #95 = Utf8               (DD)I\n+   #96 = Utf8               other\n+   #97 = Utf8               toString\n+   #98 = Utf8               ()Ljava/lang/String;\n+   #99 = Methodref          #100.#102     // java/lang/String.valueOf:(D)Ljava/lang/String;\n+  #100 = Class              #101          // java/lang/String\n+  #101 = Utf8               java/lang/String\n+  #102 = NameAndType        #46:#103      // valueOf:(D)Ljava/lang/String;\n+  #103 = Utf8               (D)Ljava/lang/String;\n+  #104 = Utf8               (Ljava/lang/Object;)I\n+  #105 = Methodref          #1.#106       // org/apache/commons/lang3/mutable/MutableDouble.compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+  #106 = NameAndType        #90:#91       // compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+  #107 = Utf8               (Ljava/lang/Object;)V\n+  #108 = Methodref          #1.#109       // org/apache/commons/lang3/mutable/MutableDouble.setValue:(Ljava/lang/Number;)V\n+  #109 = NameAndType        #48:#28       // setValue:(Ljava/lang/Number;)V\n+  #110 = Utf8               ()Ljava/lang/Object;\n+  #111 = Methodref          #1.#112       // org/apache/commons/lang3/mutable/MutableDouble.getValue:()Ljava/lang/Double;\n+  #112 = NameAndType        #42:#43       // getValue:()Ljava/lang/Double;\n+  #113 = Utf8               SourceFile\n+  #114 = Utf8               MutableDouble.java\n+  #115 = Utf8               Signature\n+  #116 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableDouble;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n {\n   private static final long serialVersionUID = 1587163916l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1587163916l\n \n   private double value;\n@@ -135,33 +135,33 @@\n \n   public org.apache.commons.lang3.mutable.MutableDouble();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public org.apache.commons.lang3.mutable.MutableDouble(double);\n     descriptor: (D)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: dload_1\n-         6: putfield      #7                  // Field value:D\n+         6: putfield      #26                 // Field value:D\n          9: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 4\n         line 52: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -170,19 +170,19 @@\n \n   public org.apache.commons.lang3.mutable.MutableDouble(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.doubleValue:()D\n-         9: putfield      #7                  // Field value:D\n+         6: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D\n+         9: putfield      #26                 // Field value:D\n         12: return\n       LineNumberTable:\n         line 60: 0\n         line 61: 4\n         line 62: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -191,19 +191,19 @@\n \n   public org.apache.commons.lang3.mutable.MutableDouble(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #17                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-         9: putfield      #7                  // Field value:D\n+         6: invokestatic  #35                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+         9: putfield      #26                 // Field value:D\n         12: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 4\n         line 73: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -212,31 +212,31 @@\n \n   public java.lang.Double getValue();\n     descriptor: ()Ljava/lang/Double;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n-         4: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+         1: getfield      #26                 // Field value:D\n+         4: invokestatic  #44                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n          7: areturn\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public void setValue(double);\n     descriptor: (D)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: dload_1\n-         2: putfield      #7                  // Field value:D\n+         2: putfield      #26                 // Field value:D\n          5: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -245,16 +245,16 @@\n   public void setValue(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #13                 // Method java/lang/Number.doubleValue:()D\n-         5: putfield      #7                  // Field value:D\n+         2: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D\n+         5: putfield      #26                 // Field value:D\n          8: return\n       LineNumberTable:\n         line 103: 0\n         line 104: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -262,71 +262,71 @@\n \n   public boolean isNaN();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n-         4: invokestatic  #27                 // Method java/lang/Double.isNaN:(D)Z\n+         1: getfield      #26                 // Field value:D\n+         4: invokestatic  #51                 // Method java/lang/Double.isNaN:(D)Z\n          7: ireturn\n       LineNumberTable:\n         line 113: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public boolean isInfinite();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n-         4: invokestatic  #31                 // Method java/lang/Double.isInfinite:(D)Z\n+         1: getfield      #26                 // Field value:D\n+         4: invokestatic  #55                 // Method java/lang/Double.isInfinite:(D)Z\n          7: ireturn\n       LineNumberTable:\n         line 122: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public void increment();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dconst_1\n          6: dadd\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: return\n       LineNumberTable:\n         line 132: 0\n         line 133: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public double getAndIncrement();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: dstore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:D\n+         7: getfield      #26                 // Field value:D\n         10: dconst_1\n         11: dadd\n-        12: putfield      #7                  // Field value:D\n+        12: putfield      #26                 // Field value:D\n         15: dload_1\n         16: dreturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 5\n         line 145: 15\n       LocalVariableTable:\n@@ -337,20 +337,20 @@\n   public double incrementAndGet();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dconst_1\n          6: dadd\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: aload_0\n-        11: getfield      #7                  // Field value:D\n+        11: getfield      #26                 // Field value:D\n         14: dreturn\n       LineNumberTable:\n         line 156: 0\n         line 157: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -358,40 +358,40 @@\n   public void decrement();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dconst_1\n          6: dsub\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: return\n       LineNumberTable:\n         line 166: 0\n         line 167: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public double getAndDecrement();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: dstore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:D\n+         7: getfield      #26                 // Field value:D\n         10: dconst_1\n         11: dsub\n-        12: putfield      #7                  // Field value:D\n+        12: putfield      #26                 // Field value:D\n         15: dload_1\n         16: dreturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 5\n         line 179: 15\n       LocalVariableTable:\n@@ -402,20 +402,20 @@\n   public double decrementAndGet();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dconst_1\n          6: dsub\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: aload_0\n-        11: getfield      #7                  // Field value:D\n+        11: getfield      #26                 // Field value:D\n         14: dreturn\n       LineNumberTable:\n         line 190: 0\n         line 191: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -423,18 +423,18 @@\n   public void add(double);\n     descriptor: (D)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dload_1\n          6: dadd\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: return\n       LineNumberTable:\n         line 202: 0\n         line 203: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -443,19 +443,19 @@\n   public void add(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.doubleValue:()D\n+         6: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D\n          9: dadd\n-        10: putfield      #7                  // Field value:D\n+        10: putfield      #26                 // Field value:D\n         13: return\n       LineNumberTable:\n         line 213: 0\n         line 214: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -464,18 +464,18 @@\n   public void subtract(double);\n     descriptor: (D)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dload_1\n          6: dsub\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: return\n       LineNumberTable:\n         line 223: 0\n         line 224: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -484,19 +484,19 @@\n   public void subtract(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.doubleValue:()D\n+         6: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D\n          9: dsub\n-        10: putfield      #7                  // Field value:D\n+        10: putfield      #26                 // Field value:D\n         13: return\n       LineNumberTable:\n         line 234: 0\n         line 235: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -505,20 +505,20 @@\n   public double addAndGet(double);\n     descriptor: (D)D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: dload_1\n          6: dadd\n-         7: putfield      #7                  // Field value:D\n+         7: putfield      #26                 // Field value:D\n         10: aload_0\n-        11: getfield      #7                  // Field value:D\n+        11: getfield      #26                 // Field value:D\n         14: dreturn\n       LineNumberTable:\n         line 246: 0\n         line 247: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -527,21 +527,21 @@\n   public double addAndGet(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #7                  // Field value:D\n+         2: getfield      #26                 // Field value:D\n          5: aload_1\n-         6: invokevirtual #13                 // Method java/lang/Number.doubleValue:()D\n+         6: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D\n          9: dadd\n-        10: putfield      #7                  // Field value:D\n+        10: putfield      #26                 // Field value:D\n         13: aload_0\n-        14: getfield      #7                  // Field value:D\n+        14: getfield      #26                 // Field value:D\n         17: dreturn\n       LineNumberTable:\n         line 260: 0\n         line 261: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n@@ -549,22 +549,22 @@\n \n   public double getAndAdd(double);\n     descriptor: (D)D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: dstore_3\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:D\n+         7: getfield      #26                 // Field value:D\n         10: dload_1\n         11: dadd\n-        12: putfield      #7                  // Field value:D\n+        12: putfield      #26                 // Field value:D\n         15: dload_3\n         16: dreturn\n       LineNumberTable:\n         line 273: 0\n         line 274: 5\n         line 275: 15\n       LocalVariableTable:\n@@ -575,23 +575,23 @@\n \n   public double getAndAdd(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: dstore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #7                  // Field value:D\n+         7: getfield      #26                 // Field value:D\n         10: aload_1\n-        11: invokevirtual #13                 // Method java/lang/Number.doubleValue:()D\n+        11: invokevirtual #29                 // Method java/lang/Number.doubleValue:()D\n         14: dadd\n-        15: putfield      #7                  // Field value:D\n+        15: putfield      #26                 // Field value:D\n         18: dload_2\n         19: dreturn\n       LineNumberTable:\n         line 288: 0\n         line 289: 5\n         line 290: 18\n       LocalVariableTable:\n@@ -602,124 +602,122 @@\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: d2i\n          5: ireturn\n       LineNumberTable:\n         line 302: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: d2l\n          5: lreturn\n       LineNumberTable:\n         line 312: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: d2f\n          5: freturn\n       LineNumberTable:\n         line 322: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: dreturn\n       LineNumberTable:\n         line 332: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public java.lang.Double toDouble();\n     descriptor: ()Ljava/lang/Double;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #34                 // Method doubleValue:()D\n-         4: invokestatic  #23                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+         1: invokevirtual #78                 // Method doubleValue:()D\n+         4: invokestatic  #44                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n          7: areturn\n       LineNumberTable:\n         line 342: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #8                  // class org/apache/commons/lang3/mutable/MutableDouble\n-         4: ifeq          32\n+         1: instanceof    #1                  // class org/apache/commons/lang3/mutable/MutableDouble\n+         4: ifeq          30\n          7: aload_1\n-         8: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableDouble\n-        11: getfield      #7                  // Field value:D\n-        14: invokestatic  #35                 // Method java/lang/Double.doubleToLongBits:(D)J\n+         8: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableDouble\n+        11: getfield      #26                 // Field value:D\n+        14: invokestatic  #81                 // Method java/lang/Double.doubleToLongBits:(D)J\n         17: aload_0\n-        18: getfield      #7                  // Field value:D\n-        21: invokestatic  #35                 // Method java/lang/Double.doubleToLongBits:(D)J\n+        18: getfield      #26                 // Field value:D\n+        21: invokestatic  #81                 // Method java/lang/Double.doubleToLongBits:(D)J\n         24: lcmp\n-        25: ifne          32\n+        25: ifne          30\n         28: iconst_1\n-        29: goto          33\n-        32: iconst_0\n-        33: ireturn\n+        29: ireturn\n+        30: iconst_0\n+        31: ireturn\n       LineNumberTable:\n         line 377: 0\n-        line 378: 14\n-        line 377: 33\n+        line 378: 7\n+        line 377: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      34     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n-            0      34     1   obj   Ljava/lang/Object;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 32 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      32     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n+            0      32     1   obj   Ljava/lang/Object;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 30 /* same */\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n-         4: invokestatic  #35                 // Method java/lang/Double.doubleToLongBits:(D)J\n+         1: getfield      #26                 // Field value:D\n+         4: invokestatic  #81                 // Method java/lang/Double.doubleToLongBits:(D)J\n          7: lstore_1\n          8: lload_1\n          9: lload_1\n         10: bipush        32\n         12: lushr\n         13: lxor\n         14: l2i\n@@ -734,82 +732,79 @@\n \n   public int compareTo(org.apache.commons.lang3.mutable.MutableDouble);\n     descriptor: (Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n+         1: getfield      #26                 // Field value:D\n          4: aload_1\n-         5: getfield      #7                  // Field value:D\n-         8: invokestatic  #39                 // Method java/lang/Double.compare:(DD)I\n+         5: getfield      #26                 // Field value:D\n+         8: invokestatic  #92                 // Method java/lang/Double.compare:(DD)I\n         11: ireturn\n       LineNumberTable:\n         line 401: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n             0      12     1 other   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field value:D\n-         4: invokestatic  #43                 // Method java/lang/String.valueOf:(D)Ljava/lang/String;\n+         1: getfield      #26                 // Field value:D\n+         4: invokestatic  #99                 // Method java/lang/String.valueOf:(D)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 412: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableDouble\n-         5: invokevirtual #48                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n+         2: checkcast     #1                  // class org/apache/commons/lang3/mutable/MutableDouble\n+         5: invokevirtual #105                // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableDouble;)I\n          8: ireturn\n       LineNumberTable:\n-        line 27: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #2                  // class java/lang/Number\n-         5: invokevirtual #52                 // Method setValue:(Ljava/lang/Number;)V\n+         2: checkcast     #3                  // class java/lang/Number\n+         5: invokevirtual #108                // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n-        line 27: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n \n   public java.lang.Object getValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #56                 // Method getValue:()Ljava/lang/Double;\n+         1: invokevirtual #111                // Method getValue:()Ljava/lang/Double;\n          4: areturn\n       LineNumberTable:\n-        line 27: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/lang3/mutable/MutableDouble;\n }\n-Signature: #114                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableDouble;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n SourceFile: \"MutableDouble.java\"\n+Signature: #116                         // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableDouble;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n"}]}
