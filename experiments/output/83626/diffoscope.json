{"diffoscope-json-version": 1, "source1": "first/FileLocatorUtils.class", "source2": "second/FileLocatorUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,21 +1,21 @@\n \n package org.apache.commons.configuration2.io;\n \n-import org.apache.commons.logging.LogFactory;\n import org.apache.commons.configuration2.ex.ConfigurationException;\n import java.util.Collection;\n import java.util.Arrays;\n import org.apache.commons.lang3.ObjectUtils;\n import java.util.Map;\n import java.net.MalformedURLException;\n import java.net.URI;\n import java.net.URL;\n import org.apache.commons.lang3.StringUtils;\n import java.io.File;\n+import org.apache.commons.logging.LogFactory;\n import org.apache.commons.logging.Log;\n \n public final class FileLocatorUtils\n {\n     public static final FileSystem DEFAULT_FILE_SYSTEM;\n     public static final FileLocationStrategy DEFAULT_LOCATION_STRATEGY;\n     private static final String FILE_SCHEME = \"file:\";\n@@ -23,14 +23,20 @@\n     private static final String PROP_BASE_PATH = \"basePath\";\n     private static final String PROP_ENCODING = \"encoding\";\n     private static final String PROP_FILE_NAME = \"fileName\";\n     private static final String PROP_FILE_SYSTEM = \"fileSystem\";\n     private static final String PROP_STRATEGY = \"locationStrategy\";\n     private static final String PROP_SOURCE_URL = \"sourceURL\";\n     \n+    static {\n+        DEFAULT_FILE_SYSTEM = (FileSystem)new DefaultFileSystem();\n+        DEFAULT_LOCATION_STRATEGY = initDefaultLocationStrategy();\n+        LOG = LogFactory.getLog((Class)FileLocatorUtils.class);\n+    }\n+    \n     private FileLocatorUtils() {\n     }\n     \n     static String appendPath(final String path, final String ext) {\n         final StringBuilder fName = new StringBuilder();\n         fName.append(path);\n         if (!path.endsWith(File.separator)) {\n@@ -188,15 +194,15 @@\n     \n     private static FileLocationStrategy initDefaultLocationStrategy() {\n         final FileLocationStrategy[] subStrategies = { (FileLocationStrategy)new ProvidedURLLocationStrategy(), (FileLocationStrategy)new FileSystemLocationStrategy(), (FileLocationStrategy)new AbsoluteNameLocationStrategy(), (FileLocationStrategy)new BasePathLocationStrategy(), (FileLocationStrategy)new HomeDirectoryLocationStrategy(true), (FileLocationStrategy)new HomeDirectoryLocationStrategy(false), (FileLocationStrategy)new ClasspathLocationStrategy() };\n         return (FileLocationStrategy)new CombinedLocationStrategy((Collection)Arrays.asList(subStrategies));\n     }\n     \n     public static boolean isFullyInitialized(final FileLocator locator) {\n-        return locator != null && locator.getBasePath() != null && locator.getFileName() != null && locator.getSourceURL() != null;\n+        return locator != null && (locator.getBasePath() != null && locator.getFileName() != null && locator.getSourceURL() != null);\n     }\n     \n     public static boolean isLocationDefined(final FileLocator locator) {\n         return locator != null && (locator.getFileName() != null || locator.getSourceURL() != null);\n     }\n     \n     public static URL locate(final FileLocator locator) {\n@@ -227,14 +233,8 @@\n             map.put(\"locationStrategy\", locator.getLocationStrategy());\n         }\n     }\n     \n     static URL toURL(final File file) throws MalformedURLException {\n         return file.toURI().toURL();\n     }\n-    \n-    static {\n-        DEFAULT_FILE_SYSTEM = (FileSystem)new DefaultFileSystem();\n-        DEFAULT_LOCATION_STRATEGY = initDefaultLocationStrategy();\n-        LOG = LogFactory.getLog((Class)FileLocatorUtils.class);\n-    }\n }\n"}]}
