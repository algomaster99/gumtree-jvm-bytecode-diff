{"diffoscope-json-version": 1, "source1": "first/Verifier.class", "source2": "second/Verifier.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,12 +1,12 @@\n \n package org.apache.bcel.verifier;\n \n-import java.util.Iterator;\n import java.util.List;\n+import java.util.Iterator;\n import org.apache.commons.lang3.ArrayUtils;\n import java.util.ArrayList;\n import java.util.HashMap;\n import org.apache.bcel.classfile.JavaClass;\n import org.apache.bcel.Repository;\n import org.apache.bcel.classfile.Utility;\n import org.apache.bcel.verifier.structurals.Pass3bVerifier;\n@@ -24,56 +24,54 @@\n     private Pass1Verifier p1v;\n     private Pass2Verifier p2v;\n     private final Map<String, Pass3aVerifier> p3avs;\n     private final Map<String, Pass3bVerifier> p3bvs;\n     \n     public static void main(final String[] args) {\n         System.out.println(\"Apache Commons BCEL\\nhttps://commons.apache.org/bcel\\n\");\n-        for (int index = 0; index < args.length; ++index) {\n+        for (int i = 0; i < args.length; ++i) {\n             try {\n-                if (args[index].endsWith(\".class\")) {\n-                    final int dotclasspos = args[index].lastIndexOf(\".class\");\n-                    if (dotclasspos != -1) {\n-                        args[index] = args[index].substring(0, dotclasspos);\n+                if (args[i].endsWith(\".class\")) {\n+                    final int lastIndex = args[i].lastIndexOf(\".class\");\n+                    if (lastIndex != -1) {\n+                        args[i] = args[i].substring(0, lastIndex);\n                     }\n                 }\n-                args[index] = Utility.pathToPackage(args[index]);\n-                System.out.println(\"Now verifying: \" + args[index] + \"\\n\");\n-                verifyType(args[index]);\n+                args[i] = Utility.pathToPackage(args[i]);\n+                System.out.println(\"Now verifying: \" + args[i] + \"\\n\");\n+                verifyType(args[i]);\n                 Repository.clearCache();\n                 System.gc();\n             }\n-            catch (final ClassNotFoundException e) {\n-                e.printStackTrace();\n+            catch (final ClassNotFoundException ex) {\n+                ex.printStackTrace();\n             }\n         }\n     }\n     \n     static void verifyType(final String fullyQualifiedClassName) throws ClassNotFoundException {\n         final Verifier verifier = VerifierFactory.getVerifier(fullyQualifiedClassName);\n-        VerificationResult verificationResult = verifier.doPass1();\n-        System.out.println(\"Pass 1:\\n\" + verificationResult);\n-        verificationResult = verifier.doPass2();\n-        System.out.println(\"Pass 2:\\n\" + verificationResult);\n-        if (verificationResult == VerificationResult.VR_OK) {\n-            final JavaClass jc = Repository.lookupClass(fullyQualifiedClassName);\n-            for (int i = 0; i < jc.getMethods().length; ++i) {\n-                verificationResult = verifier.doPass3a(i);\n-                System.out.println(\"Pass 3a, method number \" + i + \" ['\" + jc.getMethods()[i] + \"']:\\n\" + verificationResult);\n-                verificationResult = verifier.doPass3b(i);\n-                System.out.println(\"Pass 3b, method number \" + i + \" ['\" + jc.getMethods()[i] + \"']:\\n\" + verificationResult);\n+        System.out.println(\"Pass 1:\\n\" + verifier.doPass1());\n+        final VerificationResult doPass2 = verifier.doPass2();\n+        System.out.println(\"Pass 2:\\n\" + doPass2);\n+        if (doPass2 == VerificationResult.VR_OK) {\n+            final JavaClass lookupClass = Repository.lookupClass(fullyQualifiedClassName);\n+            for (int i = 0; i < lookupClass.getMethods().length; ++i) {\n+                System.out.println(\"Pass 3a, method number \" + i + \" ['\" + lookupClass.getMethods()[i] + \"']:\\n\" + verifier.doPass3a(i));\n+                System.out.println(\"Pass 3b, method number \" + i + \" ['\" + lookupClass.getMethods()[i] + \"']:\\n\" + verifier.doPass3b(i));\n             }\n         }\n         System.out.println(\"Warnings:\");\n-        final String[] warnings = verifier.getMessages();\n-        if (warnings.length == 0) {\n+        final String[] messages = verifier.getMessages();\n+        if (messages.length == 0) {\n             System.out.println(\"<none>\");\n         }\n-        for (final String warning : warnings) {\n-            System.out.println(warning);\n+        final String[] array = messages;\n+        for (int length = array.length, j = 0; j < length; ++j) {\n+            System.out.println(array[j]);\n         }\n         System.out.println(\"\\n\");\n         verifier.flush();\n     }\n     \n     Verifier(final String fullyQualifiedClassName) {\n         this.p3avs = new HashMap<String, Pass3aVerifier>();\n@@ -92,57 +90,54 @@\n         if (this.p2v == null) {\n             this.p2v = new Pass2Verifier(this);\n         }\n         return this.p2v.verify();\n     }\n     \n     public VerificationResult doPass3a(final int methodNo) {\n-        return ((Pass3aVerifier)this.p3avs.computeIfAbsent(Integer.toString(methodNo), k -> new Pass3aVerifier(this, methodNo))).verify();\n+        return ((Pass3aVerifier)this.p3avs.computeIfAbsent(Integer.toString(methodNo), p1 -> new Pass3aVerifier(this, n))).verify();\n     }\n     \n     public VerificationResult doPass3b(final int methodNo) {\n-        return ((Pass3bVerifier)this.p3bvs.computeIfAbsent(Integer.toString(methodNo), k -> new Pass3bVerifier(this, methodNo))).verify();\n+        return ((Pass3bVerifier)this.p3bvs.computeIfAbsent(Integer.toString(methodNo), p1 -> new Pass3bVerifier(this, n))).verify();\n     }\n     \n     public void flush() {\n         this.p1v = null;\n         this.p2v = null;\n         this.p3avs.clear();\n         this.p3bvs.clear();\n     }\n     \n     public final String getClassName() {\n         return this.className;\n     }\n     \n     public String[] getMessages() throws ClassNotFoundException {\n-        final List<String> messages = new ArrayList<String>();\n-        String element = null;\n+        final ArrayList list = new ArrayList();\n         if (this.p1v != null) {\n-            this.p1v.getMessagesList().forEach(element -> messages.add(\"Pass 1: \" + element));\n+            this.p1v.getMessagesList().forEach(str -> list2.add(\"Pass 1: \" + str));\n         }\n         if (this.p2v != null) {\n-            this.p2v.getMessagesList().forEach(element -> messages.add(\"Pass 2: \" + element));\n+            this.p2v.getMessagesList().forEach(str2 -> list3.add(\"Pass 2: \" + str2));\n         }\n-        for (final Pass3aVerifier pv : this.p3avs.values()) {\n-            final int meth = pv.getMethodNo();\n-            final String[] messages2 = pv.getMessages();\n-            for (int length = messages2.length, i = 0; i < length; ++i) {\n-                element = messages2[i];\n-                messages.add(\"Pass 3a, method \" + meth + \" ('\" + Repository.lookupClass(this.className).getMethods()[meth] + \"'): \" + element);\n+        for (final Pass3aVerifier pass3aVerifier : this.p3avs.values()) {\n+            final int methodNo = pass3aVerifier.getMethodNo();\n+            final String[] messages = pass3aVerifier.getMessages();\n+            for (int length = messages.length, i = 0; i < length; ++i) {\n+                list.add(\"Pass 3a, method \" + methodNo + \" ('\" + Repository.lookupClass(this.className).getMethods()[methodNo] + \"'): \" + messages[i]);\n             }\n         }\n-        for (final Pass3bVerifier pv2 : this.p3bvs.values()) {\n-            final int meth = pv2.getMethodNo();\n-            final String[] messages3 = pv2.getMessages();\n-            for (int length2 = messages3.length, j = 0; j < length2; ++j) {\n-                element = messages3[j];\n-                messages.add(\"Pass 3b, method \" + meth + \" ('\" + Repository.lookupClass(this.className).getMethods()[meth] + \"'): \" + element);\n+        for (final Pass3bVerifier pass3bVerifier : this.p3bvs.values()) {\n+            final int methodNo2 = pass3bVerifier.getMethodNo();\n+            final String[] messages2 = pass3bVerifier.getMessages();\n+            for (int length2 = messages2.length, j = 0; j < length2; ++j) {\n+                list.add(\"Pass 3b, method \" + methodNo2 + \" ('\" + Repository.lookupClass(this.className).getMethods()[methodNo2] + \"'): \" + messages2[j]);\n             }\n         }\n-        return messages.toArray(ArrayUtils.EMPTY_STRING_ARRAY);\n+        return (String[])list.toArray(ArrayUtils.EMPTY_STRING_ARRAY);\n     }\n     \n     static {\n         EMPTY_ARRAY = new Verifier[0];\n     }\n }\n"}]}
