{"diffoscope-json-version": 1, "source1": "first/JsonGenerator.class", "source2": "second/JsonGenerator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,176 +1,176 @@\n-  SHA-256 checksum 549d25debeb67d40d176a35a9be16319f62c62332ef97cecac0c645d28095a6a\n+  SHA-256 checksum 932572739243b917dd3a90d875e6bcdb285f0d68c4109775354fff9720037824\n   Compiled from \"JsonGenerator.java\"\n public abstract class com.fasterxml.jackson.core.JsonGenerator implements java.io.Closeable,java.io.Flushable,com.fasterxml.jackson.core.Versioned\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #153                        // com/fasterxml/jackson/core/JsonGenerator\n   super_class: #16                        // java/lang/Object\n   interfaces: 3, fields: 4, methods: 122, attributes: 2\n Constant pool:\n-    #1 = Class              #415          // com/fasterxml/jackson/core/JsonTokenId\n-    #2 = Methodref          #16.#416      // java/lang/Object.\"<init>\":()V\n-    #3 = Methodref          #153.#417     // com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;\n-    #4 = Methodref          #153.#418     // com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V\n-    #5 = Methodref          #153.#419     // com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-    #6 = Methodref          #420.#417     // com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n-    #7 = Methodref          #420.#418     // com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n-    #8 = Methodref          #153.#421     // com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-    #9 = Methodref          #153.#422     // com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #10 = Methodref          #423.#424     // com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-   #11 = Methodref          #153.#425     // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-   #12 = Methodref          #153.#426     // com/fasterxml/jackson/core/JsonGenerator.getFeatureMask:()I\n-   #13 = Methodref          #153.#427     // com/fasterxml/jackson/core/JsonGenerator.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #14 = Class              #428          // java/lang/UnsupportedOperationException\n-   #15 = String             #429          // Generator of type %s does not support schema of type \\'%s\\'\n-   #16 = Class              #430          // java/lang/Object\n-   #17 = Methodref          #16.#431      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #18 = Methodref          #432.#433     // java/lang/Class.getName:()Ljava/lang/String;\n-   #19 = InterfaceMethodref #434.#435     // com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n-   #20 = Methodref          #48.#436      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #21 = Methodref          #14.#437      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Fieldref           #153.#438     // com/fasterxml/jackson/core/JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-   #23 = Methodref          #14.#416      // java/lang/UnsupportedOperationException.\"<init>\":()V\n-   #24 = Fieldref           #153.#439     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #25 = Methodref          #153.#440     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V\n-   #26 = Methodref          #153.#441     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V\n-   #27 = Methodref          #153.#442     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V\n-   #28 = Methodref          #153.#443     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n-   #29 = Methodref          #124.#444     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #30 = Methodref          #153.#445     // com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V\n-   #31 = Class              #446          // java/lang/IllegalArgumentException\n-   #32 = String             #447          // null array\n-   #33 = Methodref          #31.#437      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #153.#448     // com/fasterxml/jackson/core/JsonGenerator._verifyOffsets:(III)V\n-   #35 = Methodref          #153.#449     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V\n-   #36 = Methodref          #153.#450     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V\n-   #37 = Methodref          #153.#451     // com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V\n-   #38 = Methodref          #153.#452     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V\n-   #39 = Methodref          #153.#453     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V\n-   #40 = Methodref          #153.#454     // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V\n-   #41 = Methodref          #153.#455     // com/fasterxml/jackson/core/JsonGenerator._reportUnsupportedOperation:()V\n-   #42 = InterfaceMethodref #456.#457     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-   #43 = Methodref          #153.#458     // com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V\n-   #44 = Methodref          #153.#459     // com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V\n-   #45 = Methodref          #460.#461     // com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n-   #46 = Methodref          #153.#462     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-   #47 = Methodref          #153.#463     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-   #48 = Class              #464          // java/lang/String\n-   #49 = Methodref          #48.#465      // java/lang/String.\"<init>\":([CII)V\n-   #50 = Methodref          #153.#466     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V\n-   #51 = Methodref          #153.#467     // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V\n-   #52 = Class              #313          // \"[B\"\n-   #53 = Methodref          #153.#468     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:([B)V\n-   #54 = Class              #469          // com/fasterxml/jackson/core/JsonGenerationException\n-   #55 = Class              #470          // java/lang/StringBuilder\n-   #56 = Methodref          #55.#416      // java/lang/StringBuilder.\"<init>\":()V\n-   #57 = String             #471          // No native support for writing embedded objects of type\n-   #58 = Methodref          #55.#472      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #59 = Methodref          #55.#473      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #60 = Methodref          #54.#474      // com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #61 = String             #475          // No native support for writing Object Ids\n-   #62 = String             #476          // No native support for writing Type Ids\n-   #63 = Fieldref           #477.#478     // com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n-   #64 = Fieldref           #477.#479     // com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n-   #65 = Methodref          #153.#480     // com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z\n-   #66 = Fieldref           #477.#481     // com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n-   #67 = Methodref          #153.#482     // com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V\n-   #68 = Methodref          #48.#483      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-   #69 = Fieldref           #477.#484     // com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-   #70 = Fieldref           #485.#486     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #71 = Methodref          #342.#487     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n-   #72 = Fieldref           #342.#488     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-   #73 = Fieldref           #157.#489     // com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n-   #74 = Methodref          #342.#490     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n-   #75 = Fieldref           #477.#491     // com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n-   #76 = Fieldref           #477.#492     // com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n-   #77 = Methodref          #153.#493     // com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n-   #78 = Fieldref           #485.#494     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #79 = Methodref          #153.#495     // com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V\n-   #80 = Methodref          #153.#496     // com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V\n-   #81 = Methodref          #153.#497     // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V\n-   #82 = Methodref          #153.#498     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(S)V\n-   #83 = Methodref          #153.#499     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V\n-   #84 = Methodref          #153.#500     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V\n-   #85 = Methodref          #153.#501     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V\n-   #86 = Methodref          #153.#502     // com/fasterxml/jackson/core/JsonGenerator.writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #87 = Methodref          #503.#504     // com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #88 = Methodref          #485.#505     // com/fasterxml/jackson/core/JsonToken.id:()I\n-   #89 = String             #506          // No current event to copy\n-   #90 = Methodref          #153.#507     // com/fasterxml/jackson/core/JsonGenerator._reportError:(Ljava/lang/String;)V\n-   #91 = Methodref          #503.#508     // com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-   #92 = Methodref          #503.#509     // com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n-   #93 = Methodref          #503.#510     // com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n-   #94 = Methodref          #503.#511     // com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n-   #95 = Methodref          #503.#512     // com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n-   #96 = Methodref          #153.#513     // com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V\n-   #97 = Methodref          #503.#514     // com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n-   #98 = Methodref          #503.#515     // com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-   #99 = Fieldref           #388.#516     // com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #100 = Methodref          #503.#517     // com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n-  #101 = Fieldref           #388.#518     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #102 = Methodref          #503.#519     // com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n-  #103 = Methodref          #503.#520     // com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n-  #104 = Fieldref           #388.#521     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #105 = Methodref          #503.#522     // com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n-  #106 = Fieldref           #388.#523     // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #107 = Methodref          #503.#524     // com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n-  #108 = Methodref          #503.#525     // com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n-  #109 = Methodref          #503.#526     // com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n-  #110 = Class              #527          // java/lang/IllegalStateException\n-  #111 = String             #528          // Internal error: unknown current token,\n-  #112 = Methodref          #55.#529      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #113 = Methodref          #110.#437     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #114 = Methodref          #503.#530     // com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #115 = Methodref          #153.#531     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #116 = Methodref          #153.#532     // com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #117 = Methodref          #533.#534     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n-  #118 = String             #535          // Operation not supported by generator of type\n-  #119 = String             #536          // invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-  #120 = Methodref          #122.#537     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #121 = Class              #538          // java/lang/Number\n-  #122 = Class              #539          // java/lang/Integer\n-  #123 = Methodref          #121.#540     // java/lang/Number.intValue:()I\n-  #124 = Class              #541          // java/lang/Long\n-  #125 = Methodref          #121.#542     // java/lang/Number.longValue:()J\n-  #126 = Class              #543          // java/lang/Double\n-  #127 = Methodref          #121.#544     // java/lang/Number.doubleValue:()D\n-  #128 = Class              #545          // java/lang/Float\n-  #129 = Methodref          #121.#546     // java/lang/Number.floatValue:()F\n-  #130 = Class              #547          // java/lang/Short\n-  #131 = Methodref          #121.#548     // java/lang/Number.shortValue:()S\n-  #132 = Class              #549          // java/lang/Byte\n-  #133 = Methodref          #121.#550     // java/lang/Number.byteValue:()B\n-  #134 = Class              #551          // java/math/BigInteger\n-  #135 = Class              #552          // java/math/BigDecimal\n-  #136 = Class              #553          // java/util/concurrent/atomic/AtomicInteger\n-  #137 = Methodref          #136.#554     // java/util/concurrent/atomic/AtomicInteger.get:()I\n-  #138 = Class              #555          // java/util/concurrent/atomic/AtomicLong\n-  #139 = Methodref          #138.#556     // java/util/concurrent/atomic/AtomicLong.get:()J\n-  #140 = Class              #557          // java/lang/Boolean\n-  #141 = Methodref          #140.#558     // java/lang/Boolean.booleanValue:()Z\n-  #142 = Class              #559          // java/util/concurrent/atomic/AtomicBoolean\n-  #143 = Methodref          #142.#560     // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-  #144 = String             #561          // No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-  #145 = String             #562          // )\n-  #146 = Methodref          #563.#564     // com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #147 = Methodref          #565.#566     // com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #148 = Fieldref           #563.#567     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #149 = Methodref          #565.#568     // com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #150 = Fieldref           #153.#569     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #151 = Fieldref           #563.#570     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #152 = Fieldref           #153.#571     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #153 = Class              #572          // com/fasterxml/jackson/core/JsonGenerator\n-  #154 = Class              #573          // java/io/Closeable\n-  #155 = Class              #574          // java/io/Flushable\n-  #156 = Class              #575          // com/fasterxml/jackson/core/Versioned\n-  #157 = Class              #576          // com/fasterxml/jackson/core/JsonGenerator$1\n+    #1 = Class              #410          // com/fasterxml/jackson/core/JsonTokenId\n+    #2 = Methodref          #16.#411      // java/lang/Object.\"<init>\":()V\n+    #3 = Methodref          #153.#412     // com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;\n+    #4 = Methodref          #153.#413     // com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V\n+    #5 = Methodref          #153.#414     // com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+    #6 = Methodref          #195.#412     // com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n+    #7 = Methodref          #195.#413     // com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n+    #8 = Methodref          #153.#415     // com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+    #9 = Methodref          #153.#416     // com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #10 = Methodref          #417.#418     // com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+   #11 = Methodref          #153.#419     // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #12 = Methodref          #153.#420     // com/fasterxml/jackson/core/JsonGenerator.getFeatureMask:()I\n+   #13 = Methodref          #153.#421     // com/fasterxml/jackson/core/JsonGenerator.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #14 = Class              #422          // java/lang/UnsupportedOperationException\n+   #15 = String             #423          // Generator of type %s does not support schema of type \\'%s\\'\n+   #16 = Class              #424          // java/lang/Object\n+   #17 = Methodref          #16.#425      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #18 = Methodref          #426.#427     // java/lang/Class.getName:()Ljava/lang/String;\n+   #19 = InterfaceMethodref #428.#429     // com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n+   #20 = Methodref          #48.#430      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #21 = Methodref          #14.#431      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = Fieldref           #153.#432     // com/fasterxml/jackson/core/JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #23 = Methodref          #14.#411      // java/lang/UnsupportedOperationException.\"<init>\":()V\n+   #24 = Fieldref           #153.#433     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #25 = Methodref          #153.#434     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V\n+   #26 = Methodref          #153.#435     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V\n+   #27 = Methodref          #153.#436     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V\n+   #28 = Methodref          #153.#437     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n+   #29 = Methodref          #124.#438     // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #30 = Methodref          #153.#439     // com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V\n+   #31 = Class              #440          // java/lang/IllegalArgumentException\n+   #32 = String             #441          // null array\n+   #33 = Methodref          #31.#431      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #34 = Methodref          #153.#442     // com/fasterxml/jackson/core/JsonGenerator._verifyOffsets:(III)V\n+   #35 = Methodref          #153.#443     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V\n+   #36 = Methodref          #153.#444     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V\n+   #37 = Methodref          #153.#445     // com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V\n+   #38 = Methodref          #153.#446     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V\n+   #39 = Methodref          #153.#447     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V\n+   #40 = Methodref          #153.#448     // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V\n+   #41 = Methodref          #153.#449     // com/fasterxml/jackson/core/JsonGenerator._reportUnsupportedOperation:()V\n+   #42 = InterfaceMethodref #450.#451     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+   #43 = Methodref          #153.#452     // com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V\n+   #44 = Methodref          #153.#453     // com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V\n+   #45 = Methodref          #454.#455     // com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+   #46 = Methodref          #153.#456     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+   #47 = Methodref          #153.#457     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+   #48 = Class              #458          // java/lang/String\n+   #49 = Methodref          #48.#459      // java/lang/String.\"<init>\":([CII)V\n+   #50 = Methodref          #153.#460     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V\n+   #51 = Methodref          #153.#461     // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V\n+   #52 = Class              #312          // \"[B\"\n+   #53 = Methodref          #153.#462     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:([B)V\n+   #54 = Class              #463          // com/fasterxml/jackson/core/JsonGenerationException\n+   #55 = Class              #464          // java/lang/StringBuilder\n+   #56 = Methodref          #55.#411      // java/lang/StringBuilder.\"<init>\":()V\n+   #57 = String             #465          // No native support for writing embedded objects of type\n+   #58 = Methodref          #55.#466      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #59 = Methodref          #55.#467      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #60 = Methodref          #54.#468      // com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #61 = String             #469          // No native support for writing Object Ids\n+   #62 = String             #470          // No native support for writing Type Ids\n+   #63 = Fieldref           #471.#472     // com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n+   #64 = Fieldref           #471.#473     // com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+   #65 = Methodref          #153.#474     // com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z\n+   #66 = Fieldref           #471.#475     // com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n+   #67 = Methodref          #153.#476     // com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V\n+   #68 = Methodref          #48.#477      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+   #69 = Fieldref           #471.#478     // com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+   #70 = Fieldref           #348.#479     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #71 = Methodref          #341.#480     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n+   #72 = Fieldref           #341.#481     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+   #73 = Fieldref           #157.#482     // com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+   #74 = Methodref          #341.#483     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n+   #75 = Fieldref           #471.#484     // com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n+   #76 = Fieldref           #471.#485     // com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n+   #77 = Methodref          #153.#486     // com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+   #78 = Fieldref           #348.#487     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #79 = Methodref          #153.#488     // com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V\n+   #80 = Methodref          #153.#489     // com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V\n+   #81 = Methodref          #153.#490     // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V\n+   #82 = Methodref          #153.#491     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(S)V\n+   #83 = Methodref          #153.#492     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V\n+   #84 = Methodref          #153.#493     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V\n+   #85 = Methodref          #153.#494     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V\n+   #86 = Methodref          #153.#495     // com/fasterxml/jackson/core/JsonGenerator.writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #87 = Methodref          #496.#497     // com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #88 = Methodref          #348.#498     // com/fasterxml/jackson/core/JsonToken.id:()I\n+   #89 = String             #499          // No current event to copy\n+   #90 = Methodref          #153.#500     // com/fasterxml/jackson/core/JsonGenerator._reportError:(Ljava/lang/String;)V\n+   #91 = Methodref          #496.#501     // com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+   #92 = Methodref          #496.#502     // com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n+   #93 = Methodref          #496.#503     // com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n+   #94 = Methodref          #496.#504     // com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n+   #95 = Methodref          #496.#505     // com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n+   #96 = Methodref          #153.#506     // com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V\n+   #97 = Methodref          #496.#507     // com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n+   #98 = Methodref          #496.#508     // com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+   #99 = Fieldref           #385.#509     // com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #100 = Methodref          #496.#510     // com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n+  #101 = Fieldref           #385.#511     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #102 = Methodref          #496.#512     // com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n+  #103 = Methodref          #496.#513     // com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n+  #104 = Fieldref           #385.#514     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #105 = Methodref          #496.#515     // com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n+  #106 = Fieldref           #385.#516     // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #107 = Methodref          #496.#517     // com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n+  #108 = Methodref          #496.#518     // com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n+  #109 = Methodref          #496.#519     // com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n+  #110 = Class              #520          // java/lang/IllegalStateException\n+  #111 = String             #521          // Internal error: unknown current token,\n+  #112 = Methodref          #55.#522      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #113 = Methodref          #110.#431     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #114 = Methodref          #496.#523     // com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #115 = Methodref          #153.#524     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #116 = Methodref          #153.#525     // com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #117 = Methodref          #526.#527     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n+  #118 = String             #528          // Operation not supported by generator of type\n+  #119 = String             #529          // invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+  #120 = Methodref          #122.#530     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #121 = Class              #531          // java/lang/Number\n+  #122 = Class              #532          // java/lang/Integer\n+  #123 = Methodref          #121.#533     // java/lang/Number.intValue:()I\n+  #124 = Class              #534          // java/lang/Long\n+  #125 = Methodref          #121.#535     // java/lang/Number.longValue:()J\n+  #126 = Class              #536          // java/lang/Double\n+  #127 = Methodref          #121.#537     // java/lang/Number.doubleValue:()D\n+  #128 = Class              #538          // java/lang/Float\n+  #129 = Methodref          #121.#539     // java/lang/Number.floatValue:()F\n+  #130 = Class              #540          // java/lang/Short\n+  #131 = Methodref          #121.#541     // java/lang/Number.shortValue:()S\n+  #132 = Class              #542          // java/lang/Byte\n+  #133 = Methodref          #121.#543     // java/lang/Number.byteValue:()B\n+  #134 = Class              #544          // java/math/BigInteger\n+  #135 = Class              #545          // java/math/BigDecimal\n+  #136 = Class              #546          // java/util/concurrent/atomic/AtomicInteger\n+  #137 = Methodref          #136.#547     // java/util/concurrent/atomic/AtomicInteger.get:()I\n+  #138 = Class              #548          // java/util/concurrent/atomic/AtomicLong\n+  #139 = Methodref          #138.#549     // java/util/concurrent/atomic/AtomicLong.get:()J\n+  #140 = Class              #550          // java/lang/Boolean\n+  #141 = Methodref          #140.#551     // java/lang/Boolean.booleanValue:()Z\n+  #142 = Class              #552          // java/util/concurrent/atomic/AtomicBoolean\n+  #143 = Methodref          #142.#553     // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+  #144 = String             #554          // No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+  #145 = String             #555          // )\n+  #146 = Methodref          #556.#557     // com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #147 = Methodref          #558.#559     // com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #148 = Fieldref           #556.#560     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #149 = Methodref          #558.#561     // com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #150 = Fieldref           #153.#562     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #151 = Fieldref           #556.#563     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #152 = Fieldref           #153.#564     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #153 = Class              #565          // com/fasterxml/jackson/core/JsonGenerator\n+  #154 = Class              #566          // java/io/Closeable\n+  #155 = Class              #567          // java/io/Flushable\n+  #156 = Class              #568          // com/fasterxml/jackson/core/Versioned\n+  #157 = Class              #569          // com/fasterxml/jackson/core/JsonGenerator$1\n   #158 = Utf8               InnerClasses\n-  #159 = Class              #577          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #159 = Class              #570          // com/fasterxml/jackson/core/JsonGenerator$Feature\n   #160 = Utf8               Feature\n   #161 = Utf8               DEFAULT_WRITE_CAPABILITIES\n   #162 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n   #163 = Utf8               Signature\n   #164 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n   #165 = Utf8               DEFAULT_TEXTUAL_WRITE_CAPABILITIES\n   #166 = Utf8               DEFAULT_BINARY_WRITE_CAPABILITIES\n@@ -198,489 +198,482 @@\n   #188 = Utf8               (Ljava/lang/Object;)V\n   #189 = Utf8               v\n   #190 = Utf8               Ljava/lang/Object;\n   #191 = Utf8               getCurrentValue\n   #192 = Utf8               ctxt\n   #193 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n   #194 = Utf8               StackMapTable\n-  #195 = Class              #578          // com/fasterxml/jackson/core/JsonStreamContext\n-  #196 = Class              #430          // java/lang/Object\n-  #197 = Utf8               setCurrentValue\n-  #198 = Utf8               enable\n-  #199 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #200 = Utf8               disable\n-  #201 = Utf8               configure\n-  #202 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;Z)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #203 = Utf8               f\n-  #204 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #205 = Utf8               state\n-  #206 = Utf8               Z\n-  #207 = Utf8               isEnabled\n-  #208 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #209 = Utf8               (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n-  #210 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteFeature;\n-  #211 = Utf8               getFeatureMask\n-  #212 = Utf8               ()I\n-  #213 = Utf8               setFeatureMask\n-  #214 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #215 = Utf8               Deprecated\n-  #216 = Utf8               RuntimeVisibleAnnotations\n-  #217 = Utf8               Ljava/lang/Deprecated;\n-  #218 = Utf8               overrideStdFeatures\n-  #219 = Utf8               (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #220 = Utf8               values\n-  #221 = Utf8               I\n-  #222 = Utf8               mask\n-  #223 = Utf8               oldState\n-  #224 = Utf8               newState\n-  #225 = Utf8               getFormatFeatures\n-  #226 = Utf8               overrideFormatFeatures\n-  #227 = Utf8               setSchema\n-  #228 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)V\n-  #229 = Utf8               schema\n-  #230 = Utf8               Lcom/fasterxml/jackson/core/FormatSchema;\n-  #231 = Utf8               getSchema\n-  #232 = Utf8               ()Lcom/fasterxml/jackson/core/FormatSchema;\n-  #233 = Utf8               setPrettyPrinter\n-  #234 = Utf8               (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #235 = Utf8               pp\n-  #236 = Utf8               getPrettyPrinter\n-  #237 = Utf8               ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #238 = Utf8               useDefaultPrettyPrinter\n-  #239 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #240 = Utf8               setHighestNonEscapedChar\n-  #241 = Utf8               charCode\n-  #242 = Utf8               getHighestEscapedChar\n-  #243 = Utf8               getCharacterEscapes\n-  #244 = Utf8               ()Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #245 = Utf8               setCharacterEscapes\n-  #246 = Utf8               (Lcom/fasterxml/jackson/core/io/CharacterEscapes;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #247 = Utf8               esc\n-  #248 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #249 = Utf8               setRootValueSeparator\n-  #250 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #251 = Utf8               sep\n-  #252 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n-  #253 = Utf8               getOutputBuffered\n-  #254 = Utf8               canUseSchema\n-  #255 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n-  #256 = Utf8               canWriteObjectId\n-  #257 = Utf8               ()Z\n-  #258 = Utf8               canWriteTypeId\n-  #259 = Utf8               canWriteBinaryNatively\n-  #260 = Utf8               canOmitFields\n-  #261 = Utf8               canWriteFormattedNumbers\n-  #262 = Utf8               getWriteCapabilities\n-  #263 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #264 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n-  #265 = Utf8               writeStartArray\n-  #266 = Utf8               Exceptions\n-  #267 = Class              #579          // java/io/IOException\n-  #268 = Utf8               (I)V\n-  #269 = Utf8               size\n-  #270 = Utf8               forValue\n-  #271 = Utf8               (Ljava/lang/Object;I)V\n-  #272 = Utf8               writeEndArray\n-  #273 = Utf8               writeStartObject\n-  #274 = Utf8               writeEndObject\n-  #275 = Utf8               writeFieldName\n-  #276 = Utf8               (Ljava/lang/String;)V\n-  #277 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #278 = Utf8               writeFieldId\n-  #279 = Utf8               (J)V\n-  #280 = Utf8               id\n-  #281 = Utf8               J\n-  #282 = Utf8               writeArray\n-  #283 = Utf8               ([III)V\n-  #284 = Utf8               i\n-  #285 = Utf8               end\n-  #286 = Utf8               array\n-  #287 = Utf8               [I\n-  #288 = Utf8               offset\n-  #289 = Utf8               length\n-  #290 = Utf8               ([JII)V\n-  #291 = Utf8               [J\n-  #292 = Utf8               ([DII)V\n-  #293 = Utf8               [D\n-  #294 = Utf8               ([Ljava/lang/String;II)V\n-  #295 = Utf8               [Ljava/lang/String;\n-  #296 = Utf8               writeString\n-  #297 = Utf8               (Ljava/io/Reader;I)V\n-  #298 = Utf8               reader\n-  #299 = Utf8               Ljava/io/Reader;\n-  #300 = Utf8               len\n-  #301 = Utf8               ([CII)V\n-  #302 = Utf8               writeRawUTF8String\n-  #303 = Utf8               ([BII)V\n-  #304 = Utf8               writeUTF8String\n-  #305 = Utf8               writeRaw\n-  #306 = Utf8               (Ljava/lang/String;II)V\n-  #307 = Utf8               (C)V\n-  #308 = Utf8               raw\n-  #309 = Utf8               writeRawValue\n-  #310 = Utf8               writeBinary\n-  #311 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #312 = Utf8               data\n-  #313 = Utf8               [B\n-  #314 = Utf8               ([B)V\n-  #315 = Utf8               (Ljava/io/InputStream;I)I\n-  #316 = Utf8               Ljava/io/InputStream;\n-  #317 = Utf8               dataLength\n-  #318 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #319 = Utf8               writeNumber\n-  #320 = Utf8               (S)V\n-  #321 = Utf8               S\n-  #322 = Utf8               (Ljava/math/BigInteger;)V\n-  #323 = Utf8               (D)V\n-  #324 = Utf8               (F)V\n-  #325 = Utf8               (Ljava/math/BigDecimal;)V\n-  #326 = Utf8               encodedValueBuffer\n-  #327 = Utf8               [C\n-  #328 = Utf8               writeBoolean\n-  #329 = Utf8               (Z)V\n-  #330 = Utf8               writeNull\n-  #331 = Utf8               writeEmbeddedObject\n-  #332 = Utf8               object\n-  #333 = Utf8               writeObjectId\n-  #334 = Utf8               writeObjectRef\n-  #335 = Utf8               referenced\n-  #336 = Utf8               writeTypeId\n-  #337 = Utf8               writeTypePrefix\n-  #338 = Utf8               (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n-  #339 = Utf8               idStr\n-  #340 = Utf8               Ljava/lang/String;\n-  #341 = Utf8               incl\n-  #342 = Class              #580          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #343 = Utf8               Inclusion\n-  #344 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #345 = Utf8               typeIdDef\n-  #346 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;\n-  #347 = Utf8               valueShape\n-  #348 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n-  #349 = Class              #581          // com/fasterxml/jackson/core/JsonToken\n-  #350 = Class              #464          // java/lang/String\n-  #351 = Class              #580          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #352 = Utf8               writeTypeSuffix\n-  #353 = Utf8               writePOJO\n-  #354 = Utf8               pojo\n-  #355 = Utf8               writeObject\n-  #356 = Utf8               writeTree\n-  #357 = Utf8               (Lcom/fasterxml/jackson/core/TreeNode;)V\n-  #358 = Utf8               writeBinaryField\n-  #359 = Utf8               (Ljava/lang/String;[B)V\n-  #360 = Utf8               fieldName\n-  #361 = Utf8               writeBooleanField\n-  #362 = Utf8               (Ljava/lang/String;Z)V\n-  #363 = Utf8               value\n-  #364 = Utf8               writeNullField\n-  #365 = Utf8               writeStringField\n-  #366 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #367 = Utf8               writeNumberField\n-  #368 = Utf8               (Ljava/lang/String;S)V\n-  #369 = Utf8               (Ljava/lang/String;I)V\n-  #370 = Utf8               (Ljava/lang/String;J)V\n-  #371 = Utf8               (Ljava/lang/String;Ljava/math/BigInteger;)V\n-  #372 = Utf8               Ljava/math/BigInteger;\n-  #373 = Utf8               (Ljava/lang/String;F)V\n-  #374 = Utf8               F\n-  #375 = Utf8               (Ljava/lang/String;D)V\n-  #376 = Utf8               D\n-  #377 = Utf8               (Ljava/lang/String;Ljava/math/BigDecimal;)V\n-  #378 = Utf8               Ljava/math/BigDecimal;\n-  #379 = Utf8               writeArrayFieldStart\n-  #380 = Utf8               writeObjectFieldStart\n-  #381 = Utf8               writePOJOField\n-  #382 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #383 = Utf8               writeObjectField\n-  #384 = Utf8               writeOmittedField\n-  #385 = Utf8               copyCurrentEvent\n-  #386 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #387 = Utf8               n\n-  #388 = Class              #582          // com/fasterxml/jackson/core/JsonParser$NumberType\n-  #389 = Utf8               NumberType\n-  #390 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #391 = Utf8               p\n-  #392 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;\n-  #393 = Utf8               t\n-  #394 = Utf8               token\n-  #395 = Class              #582          // com/fasterxml/jackson/core/JsonParser$NumberType\n-  #396 = Utf8               copyCurrentStructure\n-  #397 = Utf8               _copyCurrentContents\n-  #398 = Utf8               depth\n-  #399 = Utf8               flush\n-  #400 = Utf8               isClosed\n-  #401 = Utf8               close\n-  #402 = Utf8               _reportError\n-  #403 = Utf8               msg\n-  #404 = Utf8               _throwInternal\n-  #405 = Utf8               _reportUnsupportedOperation\n-  #406 = Utf8               _verifyOffsets\n-  #407 = Utf8               (III)V\n-  #408 = Utf8               arrayLength\n-  #409 = Utf8               _writeSimpleObject\n-  #410 = Utf8               Ljava/lang/Number;\n-  #411 = Class              #538          // java/lang/Number\n-  #412 = Utf8               <clinit>\n-  #413 = Utf8               SourceFile\n-  #414 = Utf8               JsonGenerator.java\n-  #415 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-  #416 = NameAndType        #169:#170     // \"<init>\":()V\n-  #417 = NameAndType        #191:#185     // getCurrentValue:()Ljava/lang/Object;\n-  #418 = NameAndType        #197:#188     // setCurrentValue:(Ljava/lang/Object;)V\n-  #419 = NameAndType        #182:#183     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #420 = Class              #578          // com/fasterxml/jackson/core/JsonStreamContext\n-  #421 = NameAndType        #198:#199     // enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #422 = NameAndType        #200:#199     // disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #423 = Class              #583          // com/fasterxml/jackson/core/StreamWriteFeature\n-  #424 = NameAndType        #584:#585     // mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #425 = NameAndType        #207:#208     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #426 = NameAndType        #211:#212     // getFeatureMask:()I\n-  #427 = NameAndType        #213:#214     // setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #428 = Utf8               java/lang/UnsupportedOperationException\n-  #429 = Utf8               Generator of type %s does not support schema of type \\'%s\\'\n-  #430 = Utf8               java/lang/Object\n-  #431 = NameAndType        #586:#587     // getClass:()Ljava/lang/Class;\n-  #432 = Class              #588          // java/lang/Class\n-  #433 = NameAndType        #589:#590     // getName:()Ljava/lang/String;\n-  #434 = Class              #591          // com/fasterxml/jackson/core/FormatSchema\n-  #435 = NameAndType        #592:#590     // getSchemaType:()Ljava/lang/String;\n-  #436 = NameAndType        #593:#594     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #437 = NameAndType        #169:#276     // \"<init>\":(Ljava/lang/String;)V\n-  #438 = NameAndType        #167:#168     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #439 = NameAndType        #161:#162     // DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #440 = NameAndType        #265:#170     // writeStartArray:()V\n-  #441 = NameAndType        #265:#268     // writeStartArray:(I)V\n-  #442 = NameAndType        #273:#170     // writeStartObject:()V\n-  #443 = NameAndType        #273:#188     // writeStartObject:(Ljava/lang/Object;)V\n-  #444 = NameAndType        #595:#596     // toString:(J)Ljava/lang/String;\n-  #445 = NameAndType        #275:#276     // writeFieldName:(Ljava/lang/String;)V\n-  #446 = Utf8               java/lang/IllegalArgumentException\n-  #447 = Utf8               null array\n-  #448 = NameAndType        #406:#407     // _verifyOffsets:(III)V\n-  #449 = NameAndType        #265:#271     // writeStartArray:(Ljava/lang/Object;I)V\n-  #450 = NameAndType        #319:#268     // writeNumber:(I)V\n-  #451 = NameAndType        #272:#170     // writeEndArray:()V\n-  #452 = NameAndType        #319:#279     // writeNumber:(J)V\n-  #453 = NameAndType        #319:#323     // writeNumber:(D)V\n-  #454 = NameAndType        #296:#276     // writeString:(Ljava/lang/String;)V\n-  #455 = NameAndType        #405:#170     // _reportUnsupportedOperation:()V\n-  #456 = Class              #597          // com/fasterxml/jackson/core/SerializableString\n-  #457 = NameAndType        #598:#590     // getValue:()Ljava/lang/String;\n-  #458 = NameAndType        #305:#276     // writeRaw:(Ljava/lang/String;)V\n-  #459 = NameAndType        #309:#276     // writeRawValue:(Ljava/lang/String;)V\n-  #460 = Class              #599          // com/fasterxml/jackson/core/Base64Variants\n-  #461 = NameAndType        #600:#601     // getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #462 = NameAndType        #310:#311     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #463 = NameAndType        #310:#318     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #464 = Utf8               java/lang/String\n-  #465 = NameAndType        #169:#301     // \"<init>\":([CII)V\n-  #466 = NameAndType        #319:#276     // writeNumber:(Ljava/lang/String;)V\n-  #467 = NameAndType        #330:#170     // writeNull:()V\n-  #468 = NameAndType        #310:#314     // writeBinary:([B)V\n-  #469 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n-  #470 = Utf8               java/lang/StringBuilder\n-  #471 = Utf8               No native support for writing embedded objects of type\n-  #472 = NameAndType        #602:#603     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #473 = NameAndType        #595:#590     // toString:()Ljava/lang/String;\n-  #474 = NameAndType        #169:#604     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #475 = Utf8               No native support for writing Object Ids\n-  #476 = Utf8               No native support for writing Type Ids\n-  #477 = Class              #605          // com/fasterxml/jackson/core/type/WritableTypeId\n-  #478 = NameAndType        #280:#190     // id:Ljava/lang/Object;\n-  #479 = NameAndType        #347:#348     // valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n-  #480 = NameAndType        #258:#257     // canWriteTypeId:()Z\n-  #481 = NameAndType        #606:#206     // wrapperWritten:Z\n-  #482 = NameAndType        #336:#188     // writeTypeId:(Ljava/lang/Object;)V\n-  #483 = NameAndType        #607:#608     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-  #484 = NameAndType        #609:#344     // include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #485 = Class              #581          // com/fasterxml/jackson/core/JsonToken\n-  #486 = NameAndType        #610:#348     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #487 = NameAndType        #611:#257     // requiresObjectContext:()Z\n-  #488 = NameAndType        #612:#344     // WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #489 = NameAndType        #613:#287     // $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n-  #490 = NameAndType        #614:#212     // ordinal:()I\n-  #491 = NameAndType        #270:#190     // forValue:Ljava/lang/Object;\n-  #492 = NameAndType        #615:#340     // asProperty:Ljava/lang/String;\n-  #493 = NameAndType        #365:#366     // writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n-  #494 = NameAndType        #616:#348     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #495 = NameAndType        #274:#170     // writeEndObject:()V\n-  #496 = NameAndType        #355:#188     // writeObject:(Ljava/lang/Object;)V\n-  #497 = NameAndType        #328:#329     // writeBoolean:(Z)V\n-  #498 = NameAndType        #319:#320     // writeNumber:(S)V\n-  #499 = NameAndType        #319:#322     // writeNumber:(Ljava/math/BigInteger;)V\n-  #500 = NameAndType        #319:#324     // writeNumber:(F)V\n-  #501 = NameAndType        #319:#325     // writeNumber:(Ljava/math/BigDecimal;)V\n-  #502 = NameAndType        #383:#382     // writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n-  #503 = Class              #617          // com/fasterxml/jackson/core/JsonParser\n-  #504 = NameAndType        #618:#619     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #505 = NameAndType        #280:#212     // id:()I\n-  #506 = Utf8               No current event to copy\n-  #507 = NameAndType        #402:#276     // _reportError:(Ljava/lang/String;)V\n-  #508 = NameAndType        #620:#590     // getCurrentName:()Ljava/lang/String;\n-  #509 = NameAndType        #621:#257     // hasTextCharacters:()Z\n-  #510 = NameAndType        #622:#623     // getTextCharacters:()[C\n-  #511 = NameAndType        #624:#212     // getTextOffset:()I\n-  #512 = NameAndType        #625:#212     // getTextLength:()I\n-  #513 = NameAndType        #296:#301     // writeString:([CII)V\n-  #514 = NameAndType        #626:#590     // getText:()Ljava/lang/String;\n-  #515 = NameAndType        #627:#628     // getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #516 = NameAndType        #629:#390     // INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #517 = NameAndType        #630:#212     // getIntValue:()I\n-  #518 = NameAndType        #631:#390     // BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #519 = NameAndType        #632:#633     // getBigIntegerValue:()Ljava/math/BigInteger;\n-  #520 = NameAndType        #634:#635     // getLongValue:()J\n-  #521 = NameAndType        #636:#390     // BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #522 = NameAndType        #637:#638     // getDecimalValue:()Ljava/math/BigDecimal;\n-  #523 = NameAndType        #639:#390     // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #524 = NameAndType        #640:#641     // getFloatValue:()F\n-  #525 = NameAndType        #642:#643     // getDoubleValue:()D\n-  #526 = NameAndType        #644:#185     // getEmbeddedObject:()Ljava/lang/Object;\n-  #527 = Utf8               java/lang/IllegalStateException\n-  #528 = Utf8               Internal error: unknown current token,\n-  #529 = NameAndType        #602:#645     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #530 = NameAndType        #646:#619     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #531 = NameAndType        #397:#386     // _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #532 = NameAndType        #385:#386     // copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #533 = Class              #647          // com/fasterxml/jackson/core/util/VersionUtil\n-  #534 = NameAndType        #648:#170     // throwInternal:()V\n-  #535 = Utf8               Operation not supported by generator of type\n-  #536 = Utf8               invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-  #537 = NameAndType        #607:#649     // valueOf:(I)Ljava/lang/Integer;\n-  #538 = Utf8               java/lang/Number\n-  #539 = Utf8               java/lang/Integer\n-  #540 = NameAndType        #650:#212     // intValue:()I\n-  #541 = Utf8               java/lang/Long\n-  #542 = NameAndType        #651:#635     // longValue:()J\n-  #543 = Utf8               java/lang/Double\n-  #544 = NameAndType        #652:#643     // doubleValue:()D\n-  #545 = Utf8               java/lang/Float\n-  #546 = NameAndType        #653:#641     // floatValue:()F\n-  #547 = Utf8               java/lang/Short\n-  #548 = NameAndType        #654:#655     // shortValue:()S\n-  #549 = Utf8               java/lang/Byte\n-  #550 = NameAndType        #656:#657     // byteValue:()B\n-  #551 = Utf8               java/math/BigInteger\n-  #552 = Utf8               java/math/BigDecimal\n-  #553 = Utf8               java/util/concurrent/atomic/AtomicInteger\n-  #554 = NameAndType        #658:#212     // get:()I\n-  #555 = Utf8               java/util/concurrent/atomic/AtomicLong\n-  #556 = NameAndType        #658:#635     // get:()J\n-  #557 = Utf8               java/lang/Boolean\n-  #558 = NameAndType        #659:#257     // booleanValue:()Z\n-  #559 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n-  #560 = NameAndType        #658:#257     // get:()Z\n-  #561 = Utf8               No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-  #562 = Utf8               )\n-  #563 = Class              #660          // com/fasterxml/jackson/core/StreamWriteCapability\n-  #564 = NameAndType        #220:#661     // values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #565 = Class              #662          // com/fasterxml/jackson/core/util/JacksonFeatureSet\n-  #566 = NameAndType        #663:#664     // fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #567 = NameAndType        #665:#666     // CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #568 = NameAndType        #667:#668     // with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #569 = NameAndType        #165:#162     // DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #570 = NameAndType        #669:#666     // CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #571 = NameAndType        #166:#162     // DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #572 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n-  #573 = Utf8               java/io/Closeable\n-  #574 = Utf8               java/io/Flushable\n-  #575 = Utf8               com/fasterxml/jackson/core/Versioned\n-  #576 = Utf8               com/fasterxml/jackson/core/JsonGenerator$1\n-  #577 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #578 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n-  #579 = Utf8               java/io/IOException\n-  #580 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #581 = Utf8               com/fasterxml/jackson/core/JsonToken\n-  #582 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType\n-  #583 = Utf8               com/fasterxml/jackson/core/StreamWriteFeature\n-  #584 = Utf8               mappedFeature\n-  #585 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #586 = Utf8               getClass\n-  #587 = Utf8               ()Ljava/lang/Class;\n-  #588 = Utf8               java/lang/Class\n-  #589 = Utf8               getName\n-  #590 = Utf8               ()Ljava/lang/String;\n-  #591 = Utf8               com/fasterxml/jackson/core/FormatSchema\n-  #592 = Utf8               getSchemaType\n-  #593 = Utf8               format\n-  #594 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #595 = Utf8               toString\n-  #596 = Utf8               (J)Ljava/lang/String;\n-  #597 = Utf8               com/fasterxml/jackson/core/SerializableString\n-  #598 = Utf8               getValue\n-  #599 = Utf8               com/fasterxml/jackson/core/Base64Variants\n-  #600 = Utf8               getDefaultVariant\n-  #601 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #602 = Utf8               append\n-  #603 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #604 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #605 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId\n-  #606 = Utf8               wrapperWritten\n-  #607 = Utf8               valueOf\n-  #608 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n-  #609 = Utf8               include\n-  #610 = Utf8               START_OBJECT\n-  #611 = Utf8               requiresObjectContext\n-  #612 = Utf8               WRAPPER_ARRAY\n-  #613 = Utf8               $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion\n-  #614 = Utf8               ordinal\n-  #615 = Utf8               asProperty\n-  #616 = Utf8               START_ARRAY\n-  #617 = Utf8               com/fasterxml/jackson/core/JsonParser\n-  #618 = Utf8               currentToken\n-  #619 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n-  #620 = Utf8               getCurrentName\n-  #621 = Utf8               hasTextCharacters\n-  #622 = Utf8               getTextCharacters\n-  #623 = Utf8               ()[C\n-  #624 = Utf8               getTextOffset\n-  #625 = Utf8               getTextLength\n-  #626 = Utf8               getText\n-  #627 = Utf8               getNumberType\n-  #628 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #629 = Utf8               INT\n-  #630 = Utf8               getIntValue\n-  #631 = Utf8               BIG_INTEGER\n-  #632 = Utf8               getBigIntegerValue\n-  #633 = Utf8               ()Ljava/math/BigInteger;\n-  #634 = Utf8               getLongValue\n-  #635 = Utf8               ()J\n-  #636 = Utf8               BIG_DECIMAL\n-  #637 = Utf8               getDecimalValue\n-  #638 = Utf8               ()Ljava/math/BigDecimal;\n-  #639 = Utf8               FLOAT\n-  #640 = Utf8               getFloatValue\n-  #641 = Utf8               ()F\n-  #642 = Utf8               getDoubleValue\n-  #643 = Utf8               ()D\n-  #644 = Utf8               getEmbeddedObject\n-  #645 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #646 = Utf8               nextToken\n-  #647 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n-  #648 = Utf8               throwInternal\n-  #649 = Utf8               (I)Ljava/lang/Integer;\n-  #650 = Utf8               intValue\n-  #651 = Utf8               longValue\n-  #652 = Utf8               doubleValue\n-  #653 = Utf8               floatValue\n-  #654 = Utf8               shortValue\n-  #655 = Utf8               ()S\n-  #656 = Utf8               byteValue\n-  #657 = Utf8               ()B\n-  #658 = Utf8               get\n-  #659 = Utf8               booleanValue\n-  #660 = Utf8               com/fasterxml/jackson/core/StreamWriteCapability\n-  #661 = Utf8               ()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #662 = Utf8               com/fasterxml/jackson/core/util/JacksonFeatureSet\n-  #663 = Utf8               fromDefaults\n-  #664 = Utf8               ([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #665 = Utf8               CAN_WRITE_FORMATTED_NUMBERS\n-  #666 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #667 = Utf8               with\n-  #668 = Utf8               (Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #669 = Utf8               CAN_WRITE_BINARY_NATIVELY\n+  #195 = Class              #571          // com/fasterxml/jackson/core/JsonStreamContext\n+  #196 = Utf8               setCurrentValue\n+  #197 = Utf8               enable\n+  #198 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #199 = Utf8               disable\n+  #200 = Utf8               configure\n+  #201 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;Z)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #202 = Utf8               f\n+  #203 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #204 = Utf8               state\n+  #205 = Utf8               Z\n+  #206 = Utf8               isEnabled\n+  #207 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #208 = Utf8               (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n+  #209 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteFeature;\n+  #210 = Utf8               getFeatureMask\n+  #211 = Utf8               ()I\n+  #212 = Utf8               setFeatureMask\n+  #213 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #214 = Utf8               Deprecated\n+  #215 = Utf8               RuntimeVisibleAnnotations\n+  #216 = Utf8               Ljava/lang/Deprecated;\n+  #217 = Utf8               overrideStdFeatures\n+  #218 = Utf8               (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #219 = Utf8               values\n+  #220 = Utf8               I\n+  #221 = Utf8               mask\n+  #222 = Utf8               oldState\n+  #223 = Utf8               newState\n+  #224 = Utf8               getFormatFeatures\n+  #225 = Utf8               overrideFormatFeatures\n+  #226 = Utf8               setSchema\n+  #227 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)V\n+  #228 = Utf8               schema\n+  #229 = Utf8               Lcom/fasterxml/jackson/core/FormatSchema;\n+  #230 = Utf8               getSchema\n+  #231 = Utf8               ()Lcom/fasterxml/jackson/core/FormatSchema;\n+  #232 = Utf8               setPrettyPrinter\n+  #233 = Utf8               (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #234 = Utf8               pp\n+  #235 = Utf8               getPrettyPrinter\n+  #236 = Utf8               ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #237 = Utf8               useDefaultPrettyPrinter\n+  #238 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #239 = Utf8               setHighestNonEscapedChar\n+  #240 = Utf8               charCode\n+  #241 = Utf8               getHighestEscapedChar\n+  #242 = Utf8               getCharacterEscapes\n+  #243 = Utf8               ()Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #244 = Utf8               setCharacterEscapes\n+  #245 = Utf8               (Lcom/fasterxml/jackson/core/io/CharacterEscapes;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #246 = Utf8               esc\n+  #247 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #248 = Utf8               setRootValueSeparator\n+  #249 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #250 = Utf8               sep\n+  #251 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n+  #252 = Utf8               getOutputBuffered\n+  #253 = Utf8               canUseSchema\n+  #254 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n+  #255 = Utf8               canWriteObjectId\n+  #256 = Utf8               ()Z\n+  #257 = Utf8               canWriteTypeId\n+  #258 = Utf8               canWriteBinaryNatively\n+  #259 = Utf8               canOmitFields\n+  #260 = Utf8               canWriteFormattedNumbers\n+  #261 = Utf8               getWriteCapabilities\n+  #262 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #263 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+  #264 = Utf8               writeStartArray\n+  #265 = Utf8               Exceptions\n+  #266 = Class              #572          // java/io/IOException\n+  #267 = Utf8               (I)V\n+  #268 = Utf8               size\n+  #269 = Utf8               forValue\n+  #270 = Utf8               (Ljava/lang/Object;I)V\n+  #271 = Utf8               writeEndArray\n+  #272 = Utf8               writeStartObject\n+  #273 = Utf8               writeEndObject\n+  #274 = Utf8               writeFieldName\n+  #275 = Utf8               (Ljava/lang/String;)V\n+  #276 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #277 = Utf8               writeFieldId\n+  #278 = Utf8               (J)V\n+  #279 = Utf8               id\n+  #280 = Utf8               J\n+  #281 = Utf8               writeArray\n+  #282 = Utf8               ([III)V\n+  #283 = Utf8               i\n+  #284 = Utf8               end\n+  #285 = Utf8               array\n+  #286 = Utf8               [I\n+  #287 = Utf8               offset\n+  #288 = Utf8               length\n+  #289 = Utf8               ([JII)V\n+  #290 = Utf8               [J\n+  #291 = Utf8               ([DII)V\n+  #292 = Utf8               [D\n+  #293 = Utf8               ([Ljava/lang/String;II)V\n+  #294 = Utf8               [Ljava/lang/String;\n+  #295 = Utf8               writeString\n+  #296 = Utf8               (Ljava/io/Reader;I)V\n+  #297 = Utf8               reader\n+  #298 = Utf8               Ljava/io/Reader;\n+  #299 = Utf8               len\n+  #300 = Utf8               ([CII)V\n+  #301 = Utf8               writeRawUTF8String\n+  #302 = Utf8               ([BII)V\n+  #303 = Utf8               writeUTF8String\n+  #304 = Utf8               writeRaw\n+  #305 = Utf8               (Ljava/lang/String;II)V\n+  #306 = Utf8               (C)V\n+  #307 = Utf8               raw\n+  #308 = Utf8               writeRawValue\n+  #309 = Utf8               writeBinary\n+  #310 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #311 = Utf8               data\n+  #312 = Utf8               [B\n+  #313 = Utf8               ([B)V\n+  #314 = Utf8               (Ljava/io/InputStream;I)I\n+  #315 = Utf8               Ljava/io/InputStream;\n+  #316 = Utf8               dataLength\n+  #317 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #318 = Utf8               writeNumber\n+  #319 = Utf8               (S)V\n+  #320 = Utf8               S\n+  #321 = Utf8               (Ljava/math/BigInteger;)V\n+  #322 = Utf8               (D)V\n+  #323 = Utf8               (F)V\n+  #324 = Utf8               (Ljava/math/BigDecimal;)V\n+  #325 = Utf8               encodedValueBuffer\n+  #326 = Utf8               [C\n+  #327 = Utf8               writeBoolean\n+  #328 = Utf8               (Z)V\n+  #329 = Utf8               writeNull\n+  #330 = Utf8               writeEmbeddedObject\n+  #331 = Utf8               object\n+  #332 = Utf8               writeObjectId\n+  #333 = Utf8               writeObjectRef\n+  #334 = Utf8               referenced\n+  #335 = Utf8               writeTypeId\n+  #336 = Utf8               writeTypePrefix\n+  #337 = Utf8               (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n+  #338 = Utf8               idStr\n+  #339 = Utf8               Ljava/lang/String;\n+  #340 = Utf8               incl\n+  #341 = Class              #573          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n+  #342 = Utf8               Inclusion\n+  #343 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #344 = Utf8               typeIdDef\n+  #345 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;\n+  #346 = Utf8               valueShape\n+  #347 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n+  #348 = Class              #574          // com/fasterxml/jackson/core/JsonToken\n+  #349 = Utf8               writeTypeSuffix\n+  #350 = Utf8               writePOJO\n+  #351 = Utf8               pojo\n+  #352 = Utf8               writeObject\n+  #353 = Utf8               writeTree\n+  #354 = Utf8               (Lcom/fasterxml/jackson/core/TreeNode;)V\n+  #355 = Utf8               writeBinaryField\n+  #356 = Utf8               (Ljava/lang/String;[B)V\n+  #357 = Utf8               fieldName\n+  #358 = Utf8               writeBooleanField\n+  #359 = Utf8               (Ljava/lang/String;Z)V\n+  #360 = Utf8               value\n+  #361 = Utf8               writeNullField\n+  #362 = Utf8               writeStringField\n+  #363 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #364 = Utf8               writeNumberField\n+  #365 = Utf8               (Ljava/lang/String;S)V\n+  #366 = Utf8               (Ljava/lang/String;I)V\n+  #367 = Utf8               (Ljava/lang/String;J)V\n+  #368 = Utf8               (Ljava/lang/String;Ljava/math/BigInteger;)V\n+  #369 = Utf8               Ljava/math/BigInteger;\n+  #370 = Utf8               (Ljava/lang/String;F)V\n+  #371 = Utf8               F\n+  #372 = Utf8               (Ljava/lang/String;D)V\n+  #373 = Utf8               D\n+  #374 = Utf8               (Ljava/lang/String;Ljava/math/BigDecimal;)V\n+  #375 = Utf8               Ljava/math/BigDecimal;\n+  #376 = Utf8               writeArrayFieldStart\n+  #377 = Utf8               writeObjectFieldStart\n+  #378 = Utf8               writePOJOField\n+  #379 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #380 = Utf8               writeObjectField\n+  #381 = Utf8               writeOmittedField\n+  #382 = Utf8               copyCurrentEvent\n+  #383 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #384 = Utf8               n\n+  #385 = Class              #575          // com/fasterxml/jackson/core/JsonParser$NumberType\n+  #386 = Utf8               NumberType\n+  #387 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #388 = Utf8               p\n+  #389 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;\n+  #390 = Utf8               t\n+  #391 = Utf8               token\n+  #392 = Utf8               copyCurrentStructure\n+  #393 = Utf8               _copyCurrentContents\n+  #394 = Utf8               depth\n+  #395 = Utf8               flush\n+  #396 = Utf8               isClosed\n+  #397 = Utf8               close\n+  #398 = Utf8               _reportError\n+  #399 = Utf8               msg\n+  #400 = Utf8               _throwInternal\n+  #401 = Utf8               _reportUnsupportedOperation\n+  #402 = Utf8               _verifyOffsets\n+  #403 = Utf8               (III)V\n+  #404 = Utf8               arrayLength\n+  #405 = Utf8               _writeSimpleObject\n+  #406 = Utf8               Ljava/lang/Number;\n+  #407 = Utf8               <clinit>\n+  #408 = Utf8               SourceFile\n+  #409 = Utf8               JsonGenerator.java\n+  #410 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+  #411 = NameAndType        #169:#170     // \"<init>\":()V\n+  #412 = NameAndType        #191:#185     // getCurrentValue:()Ljava/lang/Object;\n+  #413 = NameAndType        #196:#188     // setCurrentValue:(Ljava/lang/Object;)V\n+  #414 = NameAndType        #182:#183     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #415 = NameAndType        #197:#198     // enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #416 = NameAndType        #199:#198     // disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #417 = Class              #576          // com/fasterxml/jackson/core/StreamWriteFeature\n+  #418 = NameAndType        #577:#578     // mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #419 = NameAndType        #206:#207     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #420 = NameAndType        #210:#211     // getFeatureMask:()I\n+  #421 = NameAndType        #212:#213     // setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #422 = Utf8               java/lang/UnsupportedOperationException\n+  #423 = Utf8               Generator of type %s does not support schema of type \\'%s\\'\n+  #424 = Utf8               java/lang/Object\n+  #425 = NameAndType        #579:#580     // getClass:()Ljava/lang/Class;\n+  #426 = Class              #581          // java/lang/Class\n+  #427 = NameAndType        #582:#583     // getName:()Ljava/lang/String;\n+  #428 = Class              #584          // com/fasterxml/jackson/core/FormatSchema\n+  #429 = NameAndType        #585:#583     // getSchemaType:()Ljava/lang/String;\n+  #430 = NameAndType        #586:#587     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #431 = NameAndType        #169:#275     // \"<init>\":(Ljava/lang/String;)V\n+  #432 = NameAndType        #167:#168     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #433 = NameAndType        #161:#162     // DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #434 = NameAndType        #264:#170     // writeStartArray:()V\n+  #435 = NameAndType        #264:#267     // writeStartArray:(I)V\n+  #436 = NameAndType        #272:#170     // writeStartObject:()V\n+  #437 = NameAndType        #272:#188     // writeStartObject:(Ljava/lang/Object;)V\n+  #438 = NameAndType        #588:#589     // toString:(J)Ljava/lang/String;\n+  #439 = NameAndType        #274:#275     // writeFieldName:(Ljava/lang/String;)V\n+  #440 = Utf8               java/lang/IllegalArgumentException\n+  #441 = Utf8               null array\n+  #442 = NameAndType        #402:#403     // _verifyOffsets:(III)V\n+  #443 = NameAndType        #264:#270     // writeStartArray:(Ljava/lang/Object;I)V\n+  #444 = NameAndType        #318:#267     // writeNumber:(I)V\n+  #445 = NameAndType        #271:#170     // writeEndArray:()V\n+  #446 = NameAndType        #318:#278     // writeNumber:(J)V\n+  #447 = NameAndType        #318:#322     // writeNumber:(D)V\n+  #448 = NameAndType        #295:#275     // writeString:(Ljava/lang/String;)V\n+  #449 = NameAndType        #401:#170     // _reportUnsupportedOperation:()V\n+  #450 = Class              #590          // com/fasterxml/jackson/core/SerializableString\n+  #451 = NameAndType        #591:#583     // getValue:()Ljava/lang/String;\n+  #452 = NameAndType        #304:#275     // writeRaw:(Ljava/lang/String;)V\n+  #453 = NameAndType        #308:#275     // writeRawValue:(Ljava/lang/String;)V\n+  #454 = Class              #592          // com/fasterxml/jackson/core/Base64Variants\n+  #455 = NameAndType        #593:#594     // getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #456 = NameAndType        #309:#310     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #457 = NameAndType        #309:#317     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #458 = Utf8               java/lang/String\n+  #459 = NameAndType        #169:#300     // \"<init>\":([CII)V\n+  #460 = NameAndType        #318:#275     // writeNumber:(Ljava/lang/String;)V\n+  #461 = NameAndType        #329:#170     // writeNull:()V\n+  #462 = NameAndType        #309:#313     // writeBinary:([B)V\n+  #463 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n+  #464 = Utf8               java/lang/StringBuilder\n+  #465 = Utf8               No native support for writing embedded objects of type\n+  #466 = NameAndType        #595:#596     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #467 = NameAndType        #588:#583     // toString:()Ljava/lang/String;\n+  #468 = NameAndType        #169:#597     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #469 = Utf8               No native support for writing Object Ids\n+  #470 = Utf8               No native support for writing Type Ids\n+  #471 = Class              #598          // com/fasterxml/jackson/core/type/WritableTypeId\n+  #472 = NameAndType        #279:#190     // id:Ljava/lang/Object;\n+  #473 = NameAndType        #346:#347     // valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+  #474 = NameAndType        #257:#256     // canWriteTypeId:()Z\n+  #475 = NameAndType        #599:#205     // wrapperWritten:Z\n+  #476 = NameAndType        #335:#188     // writeTypeId:(Ljava/lang/Object;)V\n+  #477 = NameAndType        #600:#601     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+  #478 = NameAndType        #602:#343     // include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #479 = NameAndType        #603:#347     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #480 = NameAndType        #604:#256     // requiresObjectContext:()Z\n+  #481 = NameAndType        #605:#343     // WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #482 = NameAndType        #606:#286     // $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+  #483 = NameAndType        #607:#211     // ordinal:()I\n+  #484 = NameAndType        #269:#190     // forValue:Ljava/lang/Object;\n+  #485 = NameAndType        #608:#339     // asProperty:Ljava/lang/String;\n+  #486 = NameAndType        #362:#363     // writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+  #487 = NameAndType        #609:#347     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #488 = NameAndType        #273:#170     // writeEndObject:()V\n+  #489 = NameAndType        #352:#188     // writeObject:(Ljava/lang/Object;)V\n+  #490 = NameAndType        #327:#328     // writeBoolean:(Z)V\n+  #491 = NameAndType        #318:#319     // writeNumber:(S)V\n+  #492 = NameAndType        #318:#321     // writeNumber:(Ljava/math/BigInteger;)V\n+  #493 = NameAndType        #318:#323     // writeNumber:(F)V\n+  #494 = NameAndType        #318:#324     // writeNumber:(Ljava/math/BigDecimal;)V\n+  #495 = NameAndType        #380:#379     // writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #496 = Class              #610          // com/fasterxml/jackson/core/JsonParser\n+  #497 = NameAndType        #611:#612     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #498 = NameAndType        #279:#211     // id:()I\n+  #499 = Utf8               No current event to copy\n+  #500 = NameAndType        #398:#275     // _reportError:(Ljava/lang/String;)V\n+  #501 = NameAndType        #613:#583     // getCurrentName:()Ljava/lang/String;\n+  #502 = NameAndType        #614:#256     // hasTextCharacters:()Z\n+  #503 = NameAndType        #615:#616     // getTextCharacters:()[C\n+  #504 = NameAndType        #617:#211     // getTextOffset:()I\n+  #505 = NameAndType        #618:#211     // getTextLength:()I\n+  #506 = NameAndType        #295:#300     // writeString:([CII)V\n+  #507 = NameAndType        #619:#583     // getText:()Ljava/lang/String;\n+  #508 = NameAndType        #620:#621     // getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #509 = NameAndType        #622:#387     // INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #510 = NameAndType        #623:#211     // getIntValue:()I\n+  #511 = NameAndType        #624:#387     // BIG_INTEGER:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #512 = NameAndType        #625:#626     // getBigIntegerValue:()Ljava/math/BigInteger;\n+  #513 = NameAndType        #627:#628     // getLongValue:()J\n+  #514 = NameAndType        #629:#387     // BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #515 = NameAndType        #630:#631     // getDecimalValue:()Ljava/math/BigDecimal;\n+  #516 = NameAndType        #632:#387     // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #517 = NameAndType        #633:#634     // getFloatValue:()F\n+  #518 = NameAndType        #635:#636     // getDoubleValue:()D\n+  #519 = NameAndType        #637:#185     // getEmbeddedObject:()Ljava/lang/Object;\n+  #520 = Utf8               java/lang/IllegalStateException\n+  #521 = Utf8               Internal error: unknown current token,\n+  #522 = NameAndType        #595:#638     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #523 = NameAndType        #639:#612     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #524 = NameAndType        #393:#383     // _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #525 = NameAndType        #382:#383     // copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #526 = Class              #640          // com/fasterxml/jackson/core/util/VersionUtil\n+  #527 = NameAndType        #641:#170     // throwInternal:()V\n+  #528 = Utf8               Operation not supported by generator of type\n+  #529 = Utf8               invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+  #530 = NameAndType        #600:#642     // valueOf:(I)Ljava/lang/Integer;\n+  #531 = Utf8               java/lang/Number\n+  #532 = Utf8               java/lang/Integer\n+  #533 = NameAndType        #643:#211     // intValue:()I\n+  #534 = Utf8               java/lang/Long\n+  #535 = NameAndType        #644:#628     // longValue:()J\n+  #536 = Utf8               java/lang/Double\n+  #537 = NameAndType        #645:#636     // doubleValue:()D\n+  #538 = Utf8               java/lang/Float\n+  #539 = NameAndType        #646:#634     // floatValue:()F\n+  #540 = Utf8               java/lang/Short\n+  #541 = NameAndType        #647:#648     // shortValue:()S\n+  #542 = Utf8               java/lang/Byte\n+  #543 = NameAndType        #649:#650     // byteValue:()B\n+  #544 = Utf8               java/math/BigInteger\n+  #545 = Utf8               java/math/BigDecimal\n+  #546 = Utf8               java/util/concurrent/atomic/AtomicInteger\n+  #547 = NameAndType        #651:#211     // get:()I\n+  #548 = Utf8               java/util/concurrent/atomic/AtomicLong\n+  #549 = NameAndType        #651:#628     // get:()J\n+  #550 = Utf8               java/lang/Boolean\n+  #551 = NameAndType        #652:#256     // booleanValue:()Z\n+  #552 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n+  #553 = NameAndType        #651:#256     // get:()Z\n+  #554 = Utf8               No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+  #555 = Utf8               )\n+  #556 = Class              #653          // com/fasterxml/jackson/core/StreamWriteCapability\n+  #557 = NameAndType        #219:#654     // values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #558 = Class              #655          // com/fasterxml/jackson/core/util/JacksonFeatureSet\n+  #559 = NameAndType        #656:#657     // fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #560 = NameAndType        #658:#659     // CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #561 = NameAndType        #660:#661     // with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #562 = NameAndType        #165:#162     // DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #563 = NameAndType        #662:#659     // CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #564 = NameAndType        #166:#162     // DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #565 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+  #566 = Utf8               java/io/Closeable\n+  #567 = Utf8               java/io/Flushable\n+  #568 = Utf8               com/fasterxml/jackson/core/Versioned\n+  #569 = Utf8               com/fasterxml/jackson/core/JsonGenerator$1\n+  #570 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #571 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n+  #572 = Utf8               java/io/IOException\n+  #573 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n+  #574 = Utf8               com/fasterxml/jackson/core/JsonToken\n+  #575 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType\n+  #576 = Utf8               com/fasterxml/jackson/core/StreamWriteFeature\n+  #577 = Utf8               mappedFeature\n+  #578 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #579 = Utf8               getClass\n+  #580 = Utf8               ()Ljava/lang/Class;\n+  #581 = Utf8               java/lang/Class\n+  #582 = Utf8               getName\n+  #583 = Utf8               ()Ljava/lang/String;\n+  #584 = Utf8               com/fasterxml/jackson/core/FormatSchema\n+  #585 = Utf8               getSchemaType\n+  #586 = Utf8               format\n+  #587 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #588 = Utf8               toString\n+  #589 = Utf8               (J)Ljava/lang/String;\n+  #590 = Utf8               com/fasterxml/jackson/core/SerializableString\n+  #591 = Utf8               getValue\n+  #592 = Utf8               com/fasterxml/jackson/core/Base64Variants\n+  #593 = Utf8               getDefaultVariant\n+  #594 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #595 = Utf8               append\n+  #596 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #597 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #598 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId\n+  #599 = Utf8               wrapperWritten\n+  #600 = Utf8               valueOf\n+  #601 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n+  #602 = Utf8               include\n+  #603 = Utf8               START_OBJECT\n+  #604 = Utf8               requiresObjectContext\n+  #605 = Utf8               WRAPPER_ARRAY\n+  #606 = Utf8               $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion\n+  #607 = Utf8               ordinal\n+  #608 = Utf8               asProperty\n+  #609 = Utf8               START_ARRAY\n+  #610 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #611 = Utf8               currentToken\n+  #612 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n+  #613 = Utf8               getCurrentName\n+  #614 = Utf8               hasTextCharacters\n+  #615 = Utf8               getTextCharacters\n+  #616 = Utf8               ()[C\n+  #617 = Utf8               getTextOffset\n+  #618 = Utf8               getTextLength\n+  #619 = Utf8               getText\n+  #620 = Utf8               getNumberType\n+  #621 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #622 = Utf8               INT\n+  #623 = Utf8               getIntValue\n+  #624 = Utf8               BIG_INTEGER\n+  #625 = Utf8               getBigIntegerValue\n+  #626 = Utf8               ()Ljava/math/BigInteger;\n+  #627 = Utf8               getLongValue\n+  #628 = Utf8               ()J\n+  #629 = Utf8               BIG_DECIMAL\n+  #630 = Utf8               getDecimalValue\n+  #631 = Utf8               ()Ljava/math/BigDecimal;\n+  #632 = Utf8               FLOAT\n+  #633 = Utf8               getFloatValue\n+  #634 = Utf8               ()F\n+  #635 = Utf8               getDoubleValue\n+  #636 = Utf8               ()D\n+  #637 = Utf8               getEmbeddedObject\n+  #638 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #639 = Utf8               nextToken\n+  #640 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n+  #641 = Utf8               throwInternal\n+  #642 = Utf8               (I)Ljava/lang/Integer;\n+  #643 = Utf8               intValue\n+  #644 = Utf8               longValue\n+  #645 = Utf8               doubleValue\n+  #646 = Utf8               floatValue\n+  #647 = Utf8               shortValue\n+  #648 = Utf8               ()S\n+  #649 = Utf8               byteValue\n+  #650 = Utf8               ()B\n+  #651 = Utf8               get\n+  #652 = Utf8               booleanValue\n+  #653 = Utf8               com/fasterxml/jackson/core/StreamWriteCapability\n+  #654 = Utf8               ()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #655 = Utf8               com/fasterxml/jackson/core/util/JacksonFeatureSet\n+  #656 = Utf8               fromDefaults\n+  #657 = Utf8               ([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #658 = Utf8               CAN_WRITE_FORMATTED_NUMBERS\n+  #659 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #660 = Utf8               with\n+  #661 = Utf8               (Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #662 = Utf8               CAN_WRITE_BINARY_NATIVELY\n {\n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_WRITE_CAPABILITIES;\n     descriptor: Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     Signature: #164                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_TEXTUAL_WRITE_CAPABILITIES;\n@@ -893,15 +886,15 @@\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int);\n     descriptor: (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #217()\n+      0: #216()\n         java.lang.Deprecated\n \n   public com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int);\n     descriptor: (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n@@ -1214,15 +1207,15 @@\n          0: getstatic     #24                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n          3: areturn\n       LineNumberTable:\n         line 888: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-    Signature: #264                         // ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+    Signature: #263                         // ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   public abstract void writeStartArray() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n@@ -1241,15 +1234,15 @@\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0       5     1  size   I\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #217()\n+      0: #216()\n         java.lang.Deprecated\n \n   public void writeStartArray(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n@@ -1979,52 +1972,51 @@\n          0: aload_1\n          1: ifnonnull     9\n          4: aload_0\n          5: invokevirtual #51                 // Method writeNull:()V\n          8: return\n          9: aload_1\n         10: instanceof    #52                 // class \"[B\"\n-        13: ifeq          28\n+        13: ifeq          25\n         16: aload_0\n         17: aload_1\n         18: checkcast     #52                 // class \"[B\"\n-        21: checkcast     #52                 // class \"[B\"\n-        24: invokevirtual #53                 // Method writeBinary:([B)V\n-        27: return\n-        28: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n-        31: dup\n-        32: new           #55                 // class java/lang/StringBuilder\n-        35: dup\n-        36: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        39: ldc           #57                 // String No native support for writing embedded objects of type\n-        41: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        44: aload_1\n-        45: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        48: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        51: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: aload_0\n-        58: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-        61: athrow\n+        21: invokevirtual #53                 // Method writeBinary:([B)V\n+        24: return\n+        25: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+        28: dup\n+        29: new           #55                 // class java/lang/StringBuilder\n+        32: dup\n+        33: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        36: ldc           #57                 // String No native support for writing embedded objects of type\n+        38: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: aload_1\n+        42: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        45: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: aload_0\n+        55: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+        58: athrow\n       LineNumberTable:\n         line 1831: 0\n         line 1832: 4\n         line 1833: 8\n         line 1835: 9\n         line 1836: 16\n-        line 1837: 27\n-        line 1839: 28\n-        line 1840: 45\n+        line 1837: 24\n+        line 1839: 25\n+        line 1840: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      62     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0      62     1 object   Ljava/lang/Object;\n+            0      59     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0      59     1 object   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public void writeObjectId(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n@@ -3537,58 +3529,57 @@\n        189: ifeq          204\n        192: aload_0\n        193: aload_2\n        194: checkcast     #138                // class java/util/concurrent/atomic/AtomicLong\n        197: invokevirtual #139                // Method java/util/concurrent/atomic/AtomicLong.get:()J\n        200: invokevirtual #38                 // Method writeNumber:(J)V\n        203: return\n-       204: goto          264\n+       204: goto          261\n        207: aload_1\n        208: instanceof    #52                 // class \"[B\"\n-       211: ifeq          226\n+       211: ifeq          223\n        214: aload_0\n        215: aload_1\n        216: checkcast     #52                 // class \"[B\"\n-       219: checkcast     #52                 // class \"[B\"\n-       222: invokevirtual #53                 // Method writeBinary:([B)V\n-       225: return\n-       226: aload_1\n-       227: instanceof    #140                // class java/lang/Boolean\n-       230: ifeq          245\n-       233: aload_0\n-       234: aload_1\n-       235: checkcast     #140                // class java/lang/Boolean\n-       238: invokevirtual #141                // Method java/lang/Boolean.booleanValue:()Z\n-       241: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       244: return\n-       245: aload_1\n-       246: instanceof    #142                // class java/util/concurrent/atomic/AtomicBoolean\n-       249: ifeq          264\n-       252: aload_0\n-       253: aload_1\n-       254: checkcast     #142                // class java/util/concurrent/atomic/AtomicBoolean\n-       257: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-       260: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       263: return\n-       264: new           #110                // class java/lang/IllegalStateException\n-       267: dup\n-       268: new           #55                 // class java/lang/StringBuilder\n-       271: dup\n-       272: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       275: ldc           #144                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-       277: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       280: aload_1\n-       281: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-       284: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-       287: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       290: ldc           #145                // String )\n-       292: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       295: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       298: invokespecial #113                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       301: athrow\n+       219: invokevirtual #53                 // Method writeBinary:([B)V\n+       222: return\n+       223: aload_1\n+       224: instanceof    #140                // class java/lang/Boolean\n+       227: ifeq          242\n+       230: aload_0\n+       231: aload_1\n+       232: checkcast     #140                // class java/lang/Boolean\n+       235: invokevirtual #141                // Method java/lang/Boolean.booleanValue:()Z\n+       238: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       241: return\n+       242: aload_1\n+       243: instanceof    #142                // class java/util/concurrent/atomic/AtomicBoolean\n+       246: ifeq          261\n+       249: aload_0\n+       250: aload_1\n+       251: checkcast     #142                // class java/util/concurrent/atomic/AtomicBoolean\n+       254: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+       257: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       260: return\n+       261: new           #110                // class java/lang/IllegalStateException\n+       264: dup\n+       265: new           #55                 // class java/lang/StringBuilder\n+       268: dup\n+       269: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       272: ldc           #144                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+       274: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       277: aload_1\n+       278: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+       281: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+       284: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       287: ldc           #145                // String )\n+       289: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       292: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       295: invokespecial #113                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       298: athrow\n       LineNumberTable:\n         line 2767: 0\n         line 2768: 4\n         line 2769: 8\n         line 2771: 9\n         line 2772: 16\n         line 2773: 24\n@@ -3622,28 +3613,28 @@\n         line 2804: 173\n         line 2805: 184\n         line 2806: 185\n         line 2807: 192\n         line 2808: 203\n         line 2810: 204\n         line 2811: 214\n-        line 2812: 225\n-        line 2813: 226\n-        line 2814: 233\n-        line 2815: 244\n-        line 2816: 245\n-        line 2817: 252\n-        line 2818: 263\n-        line 2820: 264\n-        line 2821: 281\n+        line 2812: 222\n+        line 2813: 223\n+        line 2814: 230\n+        line 2815: 241\n+        line 2816: 242\n+        line 2817: 249\n+        line 2818: 260\n+        line 2820: 261\n+        line 2821: 278\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            37     167     2     n   Ljava/lang/Number;\n-            0     302     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0     302     1 value   Ljava/lang/Object;\n+            0     299     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0     299     1 value   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 16\n         frame_type = 9 /* same */\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ class java/lang/Number ]\n         frame_type = 15 /* same */\n@@ -3653,15 +3644,15 @@\n         frame_type = 16 /* same */\n         frame_type = 15 /* same */\n         frame_type = 15 /* same */\n         frame_type = 18 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 18\n         frame_type = 2 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n@@ -3688,9 +3679,9 @@\n         line 59: 27\n         line 58: 33\n }\n SourceFile: \"JsonGenerator.java\"\n InnerClasses:\n   static #157;                            // class com/fasterxml/jackson/core/JsonGenerator$1\n   public static final #160= #159 of #153; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n-  public static final #343= #342 of #477; // Inclusion=class com/fasterxml/jackson/core/type/WritableTypeId$Inclusion of class com/fasterxml/jackson/core/type/WritableTypeId\n-  public static final #389= #388 of #503; // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser\n+  public static final #342= #341 of #471; // Inclusion=class com/fasterxml/jackson/core/type/WritableTypeId$Inclusion of class com/fasterxml/jackson/core/type/WritableTypeId\n+  public static final #386= #385 of #496; // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser\n"}]}
