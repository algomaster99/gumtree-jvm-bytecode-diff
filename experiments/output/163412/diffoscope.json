{"diffoscope-json-version": 1, "source1": "first/StringUtils.class", "source2": "second/StringUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum 07314e2bda69124863d1bd8cf7e6120b315d1eac49401b3cb26aef65964d0052\n+  SHA-256 checksum d7fb41ece1e224fbf82bee7b4327358b197f4c537f7ba77fb31b894379382a82\n   Compiled from \"StringUtils.java\"\n public class org.apache.commons.codec.binary.StringUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #30                         // org/apache/commons/codec/binary/StringUtils\n   super_class: #31                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 21, attributes: 1\n Constant pool:\n-    #1 = Methodref          #31.#86       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #87           // java/lang/String\n-    #3 = Methodref          #31.#88       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-    #4 = InterfaceMethodref #89.#90       // java/lang/CharSequence.length:()I\n-    #5 = Methodref          #91.#92       // org/apache/commons/codec/binary/CharSequenceUtils.regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-    #6 = Methodref          #2.#93        // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-    #7 = Methodref          #94.#95       // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n-    #8 = Fieldref           #96.#97       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-    #9 = Methodref          #30.#98       // org/apache/commons/codec/binary/StringUtils.getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n-   #10 = Fieldref           #96.#99       // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n-   #11 = Methodref          #30.#100      // org/apache/commons/codec/binary/StringUtils.getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n-   #12 = Methodref          #2.#101       // java/lang/String.getBytes:(Ljava/lang/String;)[B\n-   #13 = Class              #102          // java/io/UnsupportedEncodingException\n-   #14 = Methodref          #30.#103      // org/apache/commons/codec/binary/StringUtils.newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n-   #15 = Fieldref           #96.#104      // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n-   #16 = Fieldref           #96.#105      // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-   #17 = Fieldref           #96.#106      // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #18 = Fieldref           #96.#107      // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #19 = Class              #108          // java/lang/IllegalStateException\n-   #20 = Class              #109          // java/lang/StringBuilder\n-   #21 = Methodref          #20.#86       // java/lang/StringBuilder.\"<init>\":()V\n-   #22 = Methodref          #20.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = String             #111          // :\n-   #24 = Methodref          #20.#112      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #20.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #19.#114      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #2.#115       // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #28 = Methodref          #2.#116       // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-   #29 = Methodref          #30.#117      // org/apache/commons/codec/binary/StringUtils.newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n-   #30 = Class              #118          // org/apache/commons/codec/binary/StringUtils\n-   #31 = Class              #119          // java/lang/Object\n+    #1 = Methodref          #31.#84       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #85           // java/lang/String\n+    #3 = Methodref          #31.#86       // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+    #4 = InterfaceMethodref #87.#88       // java/lang/CharSequence.length:()I\n+    #5 = Methodref          #89.#90       // org/apache/commons/codec/binary/CharSequenceUtils.regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+    #6 = Methodref          #2.#91        // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+    #7 = Methodref          #92.#93       // java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;\n+    #8 = Fieldref           #94.#95       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+    #9 = Methodref          #30.#96       // org/apache/commons/codec/binary/StringUtils.getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n+   #10 = Fieldref           #94.#97       // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;\n+   #11 = Methodref          #30.#98       // org/apache/commons/codec/binary/StringUtils.getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+   #12 = Methodref          #2.#99        // java/lang/String.getBytes:(Ljava/lang/String;)[B\n+   #13 = Class              #100          // java/io/UnsupportedEncodingException\n+   #14 = Methodref          #30.#101      // org/apache/commons/codec/binary/StringUtils.newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+   #15 = Fieldref           #94.#102      // java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;\n+   #16 = Fieldref           #94.#103      // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #17 = Fieldref           #94.#104      // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #18 = Fieldref           #94.#105      // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #19 = Class              #106          // java/lang/IllegalStateException\n+   #20 = Class              #107          // java/lang/StringBuilder\n+   #21 = Methodref          #20.#84       // java/lang/StringBuilder.\"<init>\":()V\n+   #22 = Methodref          #20.#108      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = String             #109          // :\n+   #24 = Methodref          #20.#110      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #20.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #26 = Methodref          #19.#112      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = Methodref          #2.#113       // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+   #28 = Methodref          #2.#114       // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+   #29 = Methodref          #30.#115      // org/apache/commons/codec/binary/StringUtils.newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+   #30 = Class              #116          // org/apache/commons/codec/binary/StringUtils\n+   #31 = Class              #117          // java/lang/Object\n    #32 = Utf8               <init>\n    #33 = Utf8               ()V\n    #34 = Utf8               Code\n    #35 = Utf8               LineNumberTable\n    #36 = Utf8               LocalVariableTable\n    #37 = Utf8               this\n    #38 = Utf8               Lorg/apache/commons/codec/binary/StringUtils;\n@@ -58,105 +58,103 @@\n    #48 = Utf8               Ljava/lang/String;\n    #49 = Utf8               charset\n    #50 = Utf8               Ljava/nio/charset/Charset;\n    #51 = Utf8               getByteBufferUtf8\n    #52 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n    #53 = Utf8               getBytes\n    #54 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n-   #55 = Class              #74           // \"[B\"\n+   #55 = Class              #73           // \"[B\"\n    #56 = Utf8               getBytesIso8859_1\n    #57 = Utf8               (Ljava/lang/String;)[B\n    #58 = Utf8               getBytesUnchecked\n    #59 = Utf8               (Ljava/lang/String;Ljava/lang/String;)[B\n    #60 = Utf8               e\n    #61 = Utf8               Ljava/io/UnsupportedEncodingException;\n    #62 = Utf8               charsetName\n-   #63 = Class              #102          // java/io/UnsupportedEncodingException\n-   #64 = Utf8               getBytesUsAscii\n-   #65 = Utf8               getBytesUtf16\n-   #66 = Utf8               getBytesUtf16Be\n-   #67 = Utf8               getBytesUtf16Le\n-   #68 = Utf8               getBytesUtf8\n-   #69 = Utf8               newIllegalStateException\n-   #70 = Utf8               (Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n-   #71 = Utf8               newString\n-   #72 = Utf8               ([BLjava/nio/charset/Charset;)Ljava/lang/String;\n-   #73 = Utf8               bytes\n-   #74 = Utf8               [B\n-   #75 = Class              #87           // java/lang/String\n-   #76 = Utf8               ([BLjava/lang/String;)Ljava/lang/String;\n-   #77 = Utf8               newStringIso8859_1\n-   #78 = Utf8               ([B)Ljava/lang/String;\n-   #79 = Utf8               newStringUsAscii\n-   #80 = Utf8               newStringUtf16\n-   #81 = Utf8               newStringUtf16Be\n-   #82 = Utf8               newStringUtf16Le\n-   #83 = Utf8               newStringUtf8\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               StringUtils.java\n-   #86 = NameAndType        #32:#33       // \"<init>\":()V\n-   #87 = Utf8               java/lang/String\n-   #88 = NameAndType        #39:#120      // equals:(Ljava/lang/Object;)Z\n-   #89 = Class              #121          // java/lang/CharSequence\n-   #90 = NameAndType        #122:#123     // length:()I\n-   #91 = Class              #124          // org/apache/commons/codec/binary/CharSequenceUtils\n-   #92 = NameAndType        #125:#126     // regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-   #93 = NameAndType        #53:#127      // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #94 = Class              #128          // java/nio/ByteBuffer\n-   #95 = NameAndType        #129:#130     // wrap:([B)Ljava/nio/ByteBuffer;\n-   #96 = Class              #131          // java/nio/charset/StandardCharsets\n-   #97 = NameAndType        #132:#50      // UTF_8:Ljava/nio/charset/Charset;\n-   #98 = NameAndType        #45:#46       // getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n-   #99 = NameAndType        #133:#50      // ISO_8859_1:Ljava/nio/charset/Charset;\n-  #100 = NameAndType        #53:#54       // getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n-  #101 = NameAndType        #53:#57       // getBytes:(Ljava/lang/String;)[B\n-  #102 = Utf8               java/io/UnsupportedEncodingException\n-  #103 = NameAndType        #69:#70       // newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n-  #104 = NameAndType        #134:#50      // US_ASCII:Ljava/nio/charset/Charset;\n-  #105 = NameAndType        #135:#50      // UTF_16:Ljava/nio/charset/Charset;\n-  #106 = NameAndType        #136:#50      // UTF_16BE:Ljava/nio/charset/Charset;\n-  #107 = NameAndType        #137:#50      // UTF_16LE:Ljava/nio/charset/Charset;\n-  #108 = Utf8               java/lang/IllegalStateException\n-  #109 = Utf8               java/lang/StringBuilder\n-  #110 = NameAndType        #138:#139     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = Utf8               :\n-  #112 = NameAndType        #138:#140     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #113 = NameAndType        #141:#142     // toString:()Ljava/lang/String;\n-  #114 = NameAndType        #32:#143      // \"<init>\":(Ljava/lang/String;)V\n-  #115 = NameAndType        #32:#144      // \"<init>\":([BLjava/nio/charset/Charset;)V\n-  #116 = NameAndType        #32:#145      // \"<init>\":([BLjava/lang/String;)V\n-  #117 = NameAndType        #71:#72       // newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n-  #118 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #119 = Utf8               java/lang/Object\n-  #120 = Utf8               (Ljava/lang/Object;)Z\n-  #121 = Utf8               java/lang/CharSequence\n-  #122 = Utf8               length\n-  #123 = Utf8               ()I\n-  #124 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n-  #125 = Utf8               regionMatches\n-  #126 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n-  #127 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #128 = Utf8               java/nio/ByteBuffer\n-  #129 = Utf8               wrap\n-  #130 = Utf8               ([B)Ljava/nio/ByteBuffer;\n-  #131 = Utf8               java/nio/charset/StandardCharsets\n-  #132 = Utf8               UTF_8\n-  #133 = Utf8               ISO_8859_1\n-  #134 = Utf8               US_ASCII\n-  #135 = Utf8               UTF_16\n-  #136 = Utf8               UTF_16BE\n-  #137 = Utf8               UTF_16LE\n-  #138 = Utf8               append\n-  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #140 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #141 = Utf8               toString\n-  #142 = Utf8               ()Ljava/lang/String;\n-  #143 = Utf8               (Ljava/lang/String;)V\n-  #144 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #145 = Utf8               ([BLjava/lang/String;)V\n+   #63 = Utf8               getBytesUsAscii\n+   #64 = Utf8               getBytesUtf16\n+   #65 = Utf8               getBytesUtf16Be\n+   #66 = Utf8               getBytesUtf16Le\n+   #67 = Utf8               getBytesUtf8\n+   #68 = Utf8               newIllegalStateException\n+   #69 = Utf8               (Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+   #70 = Utf8               newString\n+   #71 = Utf8               ([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+   #72 = Utf8               bytes\n+   #73 = Utf8               [B\n+   #74 = Utf8               ([BLjava/lang/String;)Ljava/lang/String;\n+   #75 = Utf8               newStringIso8859_1\n+   #76 = Utf8               ([B)Ljava/lang/String;\n+   #77 = Utf8               newStringUsAscii\n+   #78 = Utf8               newStringUtf16\n+   #79 = Utf8               newStringUtf16Be\n+   #80 = Utf8               newStringUtf16Le\n+   #81 = Utf8               newStringUtf8\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               StringUtils.java\n+   #84 = NameAndType        #32:#33       // \"<init>\":()V\n+   #85 = Utf8               java/lang/String\n+   #86 = NameAndType        #39:#118      // equals:(Ljava/lang/Object;)Z\n+   #87 = Class              #119          // java/lang/CharSequence\n+   #88 = NameAndType        #120:#121     // length:()I\n+   #89 = Class              #122          // org/apache/commons/codec/binary/CharSequenceUtils\n+   #90 = NameAndType        #123:#124     // regionMatches:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+   #91 = NameAndType        #53:#125      // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #92 = Class              #126          // java/nio/ByteBuffer\n+   #93 = NameAndType        #127:#128     // wrap:([B)Ljava/nio/ByteBuffer;\n+   #94 = Class              #129          // java/nio/charset/StandardCharsets\n+   #95 = NameAndType        #130:#50      // UTF_8:Ljava/nio/charset/Charset;\n+   #96 = NameAndType        #45:#46       // getByteBuffer:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;\n+   #97 = NameAndType        #131:#50      // ISO_8859_1:Ljava/nio/charset/Charset;\n+   #98 = NameAndType        #53:#54       // getBytes:(Ljava/lang/String;Ljava/nio/charset/Charset;)[B\n+   #99 = NameAndType        #53:#57       // getBytes:(Ljava/lang/String;)[B\n+  #100 = Utf8               java/io/UnsupportedEncodingException\n+  #101 = NameAndType        #68:#69       // newIllegalStateException:(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;\n+  #102 = NameAndType        #132:#50      // US_ASCII:Ljava/nio/charset/Charset;\n+  #103 = NameAndType        #133:#50      // UTF_16:Ljava/nio/charset/Charset;\n+  #104 = NameAndType        #134:#50      // UTF_16BE:Ljava/nio/charset/Charset;\n+  #105 = NameAndType        #135:#50      // UTF_16LE:Ljava/nio/charset/Charset;\n+  #106 = Utf8               java/lang/IllegalStateException\n+  #107 = Utf8               java/lang/StringBuilder\n+  #108 = NameAndType        #136:#137     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #109 = Utf8               :\n+  #110 = NameAndType        #136:#138     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #111 = NameAndType        #139:#140     // toString:()Ljava/lang/String;\n+  #112 = NameAndType        #32:#141      // \"<init>\":(Ljava/lang/String;)V\n+  #113 = NameAndType        #32:#142      // \"<init>\":([BLjava/nio/charset/Charset;)V\n+  #114 = NameAndType        #32:#143      // \"<init>\":([BLjava/lang/String;)V\n+  #115 = NameAndType        #70:#71       // newString:([BLjava/nio/charset/Charset;)Ljava/lang/String;\n+  #116 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #117 = Utf8               java/lang/Object\n+  #118 = Utf8               (Ljava/lang/Object;)Z\n+  #119 = Utf8               java/lang/CharSequence\n+  #120 = Utf8               length\n+  #121 = Utf8               ()I\n+  #122 = Utf8               org/apache/commons/codec/binary/CharSequenceUtils\n+  #123 = Utf8               regionMatches\n+  #124 = Utf8               (Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z\n+  #125 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #126 = Utf8               java/nio/ByteBuffer\n+  #127 = Utf8               wrap\n+  #128 = Utf8               ([B)Ljava/nio/ByteBuffer;\n+  #129 = Utf8               java/nio/charset/StandardCharsets\n+  #130 = Utf8               UTF_8\n+  #131 = Utf8               ISO_8859_1\n+  #132 = Utf8               US_ASCII\n+  #133 = Utf8               UTF_16\n+  #134 = Utf8               UTF_16BE\n+  #135 = Utf8               UTF_16LE\n+  #136 = Utf8               append\n+  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #138 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #139 = Utf8               toString\n+  #140 = Utf8               ()Ljava/lang/String;\n+  #141 = Utf8               (Ljava/lang/String;)V\n+  #142 = Utf8               ([BLjava/nio/charset/Charset;)V\n+  #143 = Utf8               ([BLjava/lang/String;)V\n {\n   public org.apache.commons.codec.binary.StringUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
