{"diffoscope-json-version": 1, "source1": "first/Conversion.class", "source2": "second/Conversion.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,143 +1,143 @@\n-  SHA-256 checksum b63c1cfda5c0ef154d730c9d0989fc3e323afac949f7e196d066c8a4d7a2b564\n+  SHA-256 checksum 12c3a657785729bffa520b6f3257b9b77246c5386782e77f4165dddbc0b83fa0\n   Compiled from \"Conversion.java\"\n public class org.apache.commons.lang3.Conversion\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #129                        // org/apache/commons/lang3/Conversion\n   super_class: #131                       // java/lang/Object\n   interfaces: 0, fields: 17, methods: 44, attributes: 1\n Constant pool:\n-    #1 = Methodref          #131.#275     // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #276.#277     // java/lang/Character.digit:(CI)I\n-    #3 = Class              #278          // java/lang/IllegalArgumentException\n-    #4 = Class              #279          // java/lang/StringBuilder\n-    #5 = Methodref          #4.#275       // java/lang/StringBuilder.\"<init>\":()V\n-    #6 = String             #280          // Cannot interpret \\'\n-    #7 = Methodref          #4.#281       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #4.#282       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #9 = String             #283          // \\' as a hexadecimal digit\n-   #10 = Methodref          #4.#284       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #3.#285       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #129.#286     // org/apache/commons/lang3/Conversion.FFFF:[Z\n-   #13 = Methodref          #287.#288     // \"[Z\".clone:()Ljava/lang/Object;\n+    #1 = Methodref          #131.#273     // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #274.#275     // java/lang/Character.digit:(CI)I\n+    #3 = Class              #276          // java/lang/IllegalArgumentException\n+    #4 = Class              #277          // java/lang/StringBuilder\n+    #5 = Methodref          #4.#273       // java/lang/StringBuilder.\"<init>\":()V\n+    #6 = String             #278          // Cannot interpret \\'\n+    #7 = Methodref          #4.#279       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #4.#280       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #9 = String             #281          // \\' as a hexadecimal digit\n+   #10 = Methodref          #4.#282       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #11 = Methodref          #3.#283       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #129.#284     // org/apache/commons/lang3/Conversion.FFFF:[Z\n+   #13 = Methodref          #285.#286     // \"[Z\".clone:()Ljava/lang/Object;\n    #14 = Class              #133          // \"[Z\"\n-   #15 = Fieldref           #129.#289     // org/apache/commons/lang3/Conversion.TFFF:[Z\n-   #16 = Methodref          #290.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #17 = Fieldref           #129.#291     // org/apache/commons/lang3/Conversion.FTFF:[Z\n-   #18 = Methodref          #292.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #19 = Fieldref           #129.#293     // org/apache/commons/lang3/Conversion.TTFF:[Z\n-   #20 = Methodref          #294.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #21 = Fieldref           #129.#295     // org/apache/commons/lang3/Conversion.FFTF:[Z\n-   #22 = Methodref          #296.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #23 = Fieldref           #129.#297     // org/apache/commons/lang3/Conversion.TFTF:[Z\n-   #24 = Methodref          #298.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #25 = Fieldref           #129.#299     // org/apache/commons/lang3/Conversion.FTTF:[Z\n-   #26 = Methodref          #300.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #27 = Fieldref           #129.#301     // org/apache/commons/lang3/Conversion.TTTF:[Z\n-   #28 = Methodref          #302.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #29 = Fieldref           #129.#303     // org/apache/commons/lang3/Conversion.FFFT:[Z\n-   #30 = Methodref          #304.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #31 = Fieldref           #129.#305     // org/apache/commons/lang3/Conversion.TFFT:[Z\n-   #32 = Methodref          #306.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #33 = Fieldref           #129.#307     // org/apache/commons/lang3/Conversion.FTFT:[Z\n-   #34 = Methodref          #308.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #35 = Fieldref           #129.#309     // org/apache/commons/lang3/Conversion.TTFT:[Z\n-   #36 = Methodref          #310.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #37 = Fieldref           #129.#311     // org/apache/commons/lang3/Conversion.FFTT:[Z\n-   #38 = Methodref          #312.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #39 = Fieldref           #129.#313     // org/apache/commons/lang3/Conversion.TFTT:[Z\n-   #40 = Methodref          #314.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #41 = Fieldref           #129.#315     // org/apache/commons/lang3/Conversion.FTTT:[Z\n-   #42 = Methodref          #316.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #43 = Fieldref           #129.#317     // org/apache/commons/lang3/Conversion.TTTT:[Z\n-   #44 = Methodref          #318.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #45 = Methodref          #319.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #46 = Methodref          #320.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #47 = Methodref          #321.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #48 = Methodref          #322.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #49 = Methodref          #323.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #50 = Methodref          #324.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #51 = Methodref          #325.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #52 = Methodref          #326.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #53 = Methodref          #327.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #54 = Methodref          #328.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #55 = Methodref          #329.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #56 = Methodref          #330.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #57 = Methodref          #331.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #58 = Methodref          #332.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #59 = Methodref          #333.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #60 = Methodref          #334.#288     // \"[Z\".clone:()Ljava/lang/Object;\n-   #61 = Methodref          #129.#335     // org/apache/commons/lang3/Conversion.binaryToHexDigit:([ZI)C\n-   #62 = String             #336          // Cannot convert an empty array.\n-   #63 = Methodref          #129.#337     // org/apache/commons/lang3/Conversion.binaryToHexDigitMsb0_4bits:([ZI)C\n-   #64 = String             #338          // src.length>8: src.length=\n-   #65 = Methodref          #4.#339       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #66 = String             #340          // src.length-srcPos<4: src.length=\n-   #67 = String             #341          // , srcPos=\n-   #68 = Methodref          #129.#342     // org/apache/commons/lang3/Conversion.binaryBeMsb0ToHexDigit:([ZI)C\n-   #69 = Methodref          #343.#344     // java/lang/Math.min:(II)I\n-   #70 = Methodref          #345.#346     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #71 = Methodref          #276.#347     // java/lang/Character.forDigit:(II)C\n-   #72 = String             #348          // nibble value not between 0 and 15:\n-   #73 = String             #349          // (nInts-1)*32+dstPos is greater or equal to than 64\n+   #15 = Fieldref           #129.#287     // org/apache/commons/lang3/Conversion.TFFF:[Z\n+   #16 = Methodref          #288.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #17 = Fieldref           #129.#289     // org/apache/commons/lang3/Conversion.FTFF:[Z\n+   #18 = Methodref          #290.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #19 = Fieldref           #129.#291     // org/apache/commons/lang3/Conversion.TTFF:[Z\n+   #20 = Methodref          #292.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #21 = Fieldref           #129.#293     // org/apache/commons/lang3/Conversion.FFTF:[Z\n+   #22 = Methodref          #294.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #23 = Fieldref           #129.#295     // org/apache/commons/lang3/Conversion.TFTF:[Z\n+   #24 = Methodref          #296.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #25 = Fieldref           #129.#297     // org/apache/commons/lang3/Conversion.FTTF:[Z\n+   #26 = Methodref          #298.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #27 = Fieldref           #129.#299     // org/apache/commons/lang3/Conversion.TTTF:[Z\n+   #28 = Methodref          #300.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #29 = Fieldref           #129.#301     // org/apache/commons/lang3/Conversion.FFFT:[Z\n+   #30 = Methodref          #302.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #31 = Fieldref           #129.#303     // org/apache/commons/lang3/Conversion.TFFT:[Z\n+   #32 = Methodref          #304.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #33 = Fieldref           #129.#305     // org/apache/commons/lang3/Conversion.FTFT:[Z\n+   #34 = Methodref          #306.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #35 = Fieldref           #129.#307     // org/apache/commons/lang3/Conversion.TTFT:[Z\n+   #36 = Methodref          #308.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #37 = Fieldref           #129.#309     // org/apache/commons/lang3/Conversion.FFTT:[Z\n+   #38 = Methodref          #310.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #39 = Fieldref           #129.#311     // org/apache/commons/lang3/Conversion.TFTT:[Z\n+   #40 = Methodref          #312.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #41 = Fieldref           #129.#313     // org/apache/commons/lang3/Conversion.FTTT:[Z\n+   #42 = Methodref          #314.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #43 = Fieldref           #129.#315     // org/apache/commons/lang3/Conversion.TTTT:[Z\n+   #44 = Methodref          #316.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #45 = Methodref          #317.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #46 = Methodref          #318.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #47 = Methodref          #319.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #48 = Methodref          #320.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #49 = Methodref          #321.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #50 = Methodref          #322.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #51 = Methodref          #323.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #52 = Methodref          #324.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #53 = Methodref          #325.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #54 = Methodref          #326.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #55 = Methodref          #327.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #56 = Methodref          #328.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #57 = Methodref          #329.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #58 = Methodref          #330.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #59 = Methodref          #331.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #60 = Methodref          #332.#286     // \"[Z\".clone:()Ljava/lang/Object;\n+   #61 = Methodref          #129.#333     // org/apache/commons/lang3/Conversion.binaryToHexDigit:([ZI)C\n+   #62 = String             #334          // Cannot convert an empty array.\n+   #63 = Methodref          #129.#335     // org/apache/commons/lang3/Conversion.binaryToHexDigitMsb0_4bits:([ZI)C\n+   #64 = String             #336          // src.length>8: src.length=\n+   #65 = Methodref          #4.#337       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #66 = String             #338          // src.length-srcPos<4: src.length=\n+   #67 = String             #339          // , srcPos=\n+   #68 = Methodref          #129.#340     // org/apache/commons/lang3/Conversion.binaryBeMsb0ToHexDigit:([ZI)C\n+   #69 = Methodref          #341.#342     // java/lang/Math.min:(II)I\n+   #70 = Methodref          #343.#344     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #71 = Methodref          #274.#345     // java/lang/Character.forDigit:(II)C\n+   #72 = String             #346          // nibble value not between 0 and 15:\n+   #73 = String             #347          // (nInts-1)*32+dstPos is greater or equal to than 64\n    #74 = Long               4294967295l\n    #76 = Long               -1l\n-   #78 = String             #350          // (nShorts-1)*16+dstPos is greater or equal to than 64\n+   #78 = String             #348          // (nShorts-1)*16+dstPos is greater or equal to than 64\n    #79 = Long               65535l\n-   #81 = String             #351          // (nShorts-1)*16+dstPos is greater or equal to than 32\n+   #81 = String             #349          // (nShorts-1)*16+dstPos is greater or equal to than 32\n    #82 = Integer            65535\n-   #83 = String             #352          // (nBytes-1)*8+dstPos is greater or equal to than 64\n+   #83 = String             #350          // (nBytes-1)*8+dstPos is greater or equal to than 64\n    #84 = Long               255l\n-   #86 = String             #353          // (nBytes-1)*8+dstPos is greater or equal to than 32\n-   #87 = String             #354          // (nBytes-1)*8+dstPos is greater or equal to than 16\n-   #88 = String             #355          // (nHexs-1)*4+dstPos is greater or equal to than 64\n+   #86 = String             #351          // (nBytes-1)*8+dstPos is greater or equal to than 32\n+   #87 = String             #352          // (nBytes-1)*8+dstPos is greater or equal to than 16\n+   #88 = String             #353          // (nHexs-1)*4+dstPos is greater or equal to than 64\n    #89 = Long               15l\n-   #91 = Methodref          #356.#357     // java/lang/String.charAt:(I)C\n-   #92 = Methodref          #129.#358     // org/apache/commons/lang3/Conversion.hexDigitToInt:(C)I\n-   #93 = String             #359          // (nHexs-1)*4+dstPos is greater or equal to than 32\n-   #94 = String             #360          // (nHexs-1)*4+dstPos is greater or equal to than 16\n-   #95 = String             #361          // (nHexs-1)*4+dstPos is greater or equal to than 8\n-   #96 = String             #362          // nBools-1+dstPos is greater or equal to than 64\n-   #97 = String             #363          // nBools-1+dstPos is greater or equal to than 32\n-   #98 = String             #364          // nBools-1+dstPos is greater or equal to than 16\n-   #99 = String             #365          // nBools-1+dstPos is greater or equal to than 8\n-  #100 = String             #366          // (nInts-1)*32+srcPos is greater or equal to than 64\n-  #101 = String             #367          // (nShorts-1)*16+srcPos is greater or equal to than 64\n-  #102 = String             #368          // (nShorts-1)*16+srcPos is greater or equal to than 32\n-  #103 = String             #369          // (nBytes-1)*8+srcPos is greater or equal to than 64\n-  #104 = String             #370          // (nBytes-1)*8+srcPos is greater or equal to than 32\n-  #105 = String             #371          // (nBytes-1)*8+srcPos is greater or equal to than 16\n-  #106 = String             #372          // (nHexs-1)*4+srcPos is greater or equal to than 64\n-  #107 = Methodref          #4.#285       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-  #108 = Methodref          #4.#373       // java/lang/StringBuilder.length:()I\n-  #109 = Methodref          #129.#374     // org/apache/commons/lang3/Conversion.intToHexDigit:(I)C\n-  #110 = Methodref          #4.#375       // java/lang/StringBuilder.setCharAt:(IC)V\n-  #111 = String             #376          // (nHexs-1)*4+srcPos is greater or equal to than 32\n-  #112 = String             #377          // (nHexs-1)*4+srcPos is greater or equal to than 16\n-  #113 = String             #378          // (nHexs-1)*4+srcPos is greater or equal to than 8\n-  #114 = String             #379          // nBools-1+srcPos is greater or equal to than 64\n-  #115 = String             #380          // nBools-1+srcPos is greater or equal to than 32\n-  #116 = String             #381          // nBools-1+srcPos is greater or equal to than 16\n-  #117 = Fieldref           #129.#382     // org/apache/commons/lang3/Conversion.$assertionsDisabled:Z\n-  #118 = Class              #383          // java/lang/AssertionError\n-  #119 = Methodref          #118.#275     // java/lang/AssertionError.\"<init>\":()V\n-  #120 = String             #384          // nBools-1+srcPos is greater or equal to than 8\n-  #121 = String             #385          // nBytes is greater than 16\n-  #122 = Methodref          #126.#386     // java/util/UUID.getMostSignificantBits:()J\n-  #123 = Methodref          #129.#387     // org/apache/commons/lang3/Conversion.longToByteArray:(JI[BII)[B\n-  #124 = Methodref          #126.#388     // java/util/UUID.getLeastSignificantBits:()J\n-  #125 = String             #389          // Need at least 16 bytes for UUID\n-  #126 = Class              #390          // java/util/UUID\n-  #127 = Methodref          #129.#391     // org/apache/commons/lang3/Conversion.byteArrayToLong:([BIJII)J\n-  #128 = Methodref          #126.#392     // java/util/UUID.\"<init>\":(JJ)V\n-  #129 = Class              #393          // org/apache/commons/lang3/Conversion\n-  #130 = Methodref          #394.#395     // java/lang/Class.desiredAssertionStatus:()Z\n-  #131 = Class              #396          // java/lang/Object\n+   #91 = Methodref          #354.#355     // java/lang/String.charAt:(I)C\n+   #92 = Methodref          #129.#356     // org/apache/commons/lang3/Conversion.hexDigitToInt:(C)I\n+   #93 = String             #357          // (nHexs-1)*4+dstPos is greater or equal to than 32\n+   #94 = String             #358          // (nHexs-1)*4+dstPos is greater or equal to than 16\n+   #95 = String             #359          // (nHexs-1)*4+dstPos is greater or equal to than 8\n+   #96 = String             #360          // nBools-1+dstPos is greater or equal to than 64\n+   #97 = String             #361          // nBools-1+dstPos is greater or equal to than 32\n+   #98 = String             #362          // nBools-1+dstPos is greater or equal to than 16\n+   #99 = String             #363          // nBools-1+dstPos is greater or equal to than 8\n+  #100 = String             #364          // (nInts-1)*32+srcPos is greater or equal to than 64\n+  #101 = String             #365          // (nShorts-1)*16+srcPos is greater or equal to than 64\n+  #102 = String             #366          // (nShorts-1)*16+srcPos is greater or equal to than 32\n+  #103 = String             #367          // (nBytes-1)*8+srcPos is greater or equal to than 64\n+  #104 = String             #368          // (nBytes-1)*8+srcPos is greater or equal to than 32\n+  #105 = String             #369          // (nBytes-1)*8+srcPos is greater or equal to than 16\n+  #106 = String             #370          // (nHexs-1)*4+srcPos is greater or equal to than 64\n+  #107 = Methodref          #4.#283       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #108 = Methodref          #4.#371       // java/lang/StringBuilder.length:()I\n+  #109 = Methodref          #129.#372     // org/apache/commons/lang3/Conversion.intToHexDigit:(I)C\n+  #110 = Methodref          #4.#373       // java/lang/StringBuilder.setCharAt:(IC)V\n+  #111 = String             #374          // (nHexs-1)*4+srcPos is greater or equal to than 32\n+  #112 = String             #375          // (nHexs-1)*4+srcPos is greater or equal to than 16\n+  #113 = String             #376          // (nHexs-1)*4+srcPos is greater or equal to than 8\n+  #114 = String             #377          // nBools-1+srcPos is greater or equal to than 64\n+  #115 = String             #378          // nBools-1+srcPos is greater or equal to than 32\n+  #116 = String             #379          // nBools-1+srcPos is greater or equal to than 16\n+  #117 = Fieldref           #129.#380     // org/apache/commons/lang3/Conversion.$assertionsDisabled:Z\n+  #118 = Class              #381          // java/lang/AssertionError\n+  #119 = Methodref          #118.#273     // java/lang/AssertionError.\"<init>\":()V\n+  #120 = String             #382          // nBools-1+srcPos is greater or equal to than 8\n+  #121 = String             #383          // nBytes is greater than 16\n+  #122 = Methodref          #126.#384     // java/util/UUID.getMostSignificantBits:()J\n+  #123 = Methodref          #129.#385     // org/apache/commons/lang3/Conversion.longToByteArray:(JI[BII)[B\n+  #124 = Methodref          #126.#386     // java/util/UUID.getLeastSignificantBits:()J\n+  #125 = String             #387          // Need at least 16 bytes for UUID\n+  #126 = Class              #388          // java/util/UUID\n+  #127 = Methodref          #129.#389     // org/apache/commons/lang3/Conversion.byteArrayToLong:([BIJII)J\n+  #128 = Methodref          #126.#390     // java/util/UUID.\"<init>\":(JJ)V\n+  #129 = Class              #391          // org/apache/commons/lang3/Conversion\n+  #130 = Methodref          #392.#393     // java/lang/Class.desiredAssertionStatus:()Z\n+  #131 = Class              #394          // java/lang/Object\n   #132 = Utf8               TTTT\n   #133 = Utf8               [Z\n   #134 = Utf8               FTTT\n   #135 = Utf8               TFTT\n   #136 = Utf8               FFTT\n   #137 = Utf8               TTFT\n   #138 = Utf8               FTFT\n@@ -248,82 +248,82 @@\n   #243 = Utf8               (SI[BII)[B\n   #244 = Utf8               longToHex\n   #245 = Utf8               (JILjava/lang/String;II)Ljava/lang/String;\n   #246 = Utf8               nHexs\n   #247 = Utf8               sb\n   #248 = Utf8               Ljava/lang/StringBuilder;\n   #249 = Utf8               append\n-  #250 = Class              #279          // java/lang/StringBuilder\n-  #251 = Utf8               intToHex\n-  #252 = Utf8               (IILjava/lang/String;II)Ljava/lang/String;\n-  #253 = Utf8               shortToHex\n-  #254 = Utf8               (SILjava/lang/String;II)Ljava/lang/String;\n-  #255 = Utf8               byteToHex\n-  #256 = Utf8               (BILjava/lang/String;II)Ljava/lang/String;\n-  #257 = Utf8               longToBinary\n-  #258 = Utf8               (JI[ZII)[Z\n-  #259 = Utf8               intToBinary\n-  #260 = Utf8               (II[ZII)[Z\n-  #261 = Utf8               shortToBinary\n-  #262 = Utf8               (SI[ZII)[Z\n-  #263 = Utf8               byteToBinary\n-  #264 = Utf8               (BI[ZII)[Z\n-  #265 = Utf8               uuidToByteArray\n-  #266 = Utf8               (Ljava/util/UUID;[BII)[B\n-  #267 = Utf8               Ljava/util/UUID;\n-  #268 = Class              #390          // java/util/UUID\n-  #269 = Class              #204          // \"[B\"\n-  #270 = Utf8               byteArrayToUuid\n-  #271 = Utf8               ([BI)Ljava/util/UUID;\n-  #272 = Utf8               <clinit>\n-  #273 = Utf8               SourceFile\n-  #274 = Utf8               Conversion.java\n-  #275 = NameAndType        #151:#152     // \"<init>\":()V\n-  #276 = Class              #397          // java/lang/Character\n-  #277 = NameAndType        #162:#398     // digit:(CI)I\n-  #278 = Utf8               java/lang/IllegalArgumentException\n-  #279 = Utf8               java/lang/StringBuilder\n-  #280 = Utf8               Cannot interpret \\'\n-  #281 = NameAndType        #249:#399     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #282 = NameAndType        #249:#400     // append:(C)Ljava/lang/StringBuilder;\n-  #283 = Utf8               \\' as a hexadecimal digit\n-  #284 = NameAndType        #401:#402     // toString:()Ljava/lang/String;\n-  #285 = NameAndType        #151:#403     // \"<init>\":(Ljava/lang/String;)V\n-  #286 = NameAndType        #148:#133     // FFFF:[Z\n-  #287 = Class              #133          // \"[Z\"\n-  #288 = NameAndType        #404:#405     // clone:()Ljava/lang/Object;\n-  #289 = NameAndType        #147:#133     // TFFF:[Z\n+  #250 = Utf8               intToHex\n+  #251 = Utf8               (IILjava/lang/String;II)Ljava/lang/String;\n+  #252 = Utf8               shortToHex\n+  #253 = Utf8               (SILjava/lang/String;II)Ljava/lang/String;\n+  #254 = Utf8               byteToHex\n+  #255 = Utf8               (BILjava/lang/String;II)Ljava/lang/String;\n+  #256 = Utf8               longToBinary\n+  #257 = Utf8               (JI[ZII)[Z\n+  #258 = Utf8               intToBinary\n+  #259 = Utf8               (II[ZII)[Z\n+  #260 = Utf8               shortToBinary\n+  #261 = Utf8               (SI[ZII)[Z\n+  #262 = Utf8               byteToBinary\n+  #263 = Utf8               (BI[ZII)[Z\n+  #264 = Utf8               uuidToByteArray\n+  #265 = Utf8               (Ljava/util/UUID;[BII)[B\n+  #266 = Utf8               Ljava/util/UUID;\n+  #267 = Class              #204          // \"[B\"\n+  #268 = Utf8               byteArrayToUuid\n+  #269 = Utf8               ([BI)Ljava/util/UUID;\n+  #270 = Utf8               <clinit>\n+  #271 = Utf8               SourceFile\n+  #272 = Utf8               Conversion.java\n+  #273 = NameAndType        #151:#152     // \"<init>\":()V\n+  #274 = Class              #395          // java/lang/Character\n+  #275 = NameAndType        #162:#396     // digit:(CI)I\n+  #276 = Utf8               java/lang/IllegalArgumentException\n+  #277 = Utf8               java/lang/StringBuilder\n+  #278 = Utf8               Cannot interpret \\'\n+  #279 = NameAndType        #249:#397     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #280 = NameAndType        #249:#398     // append:(C)Ljava/lang/StringBuilder;\n+  #281 = Utf8               \\' as a hexadecimal digit\n+  #282 = NameAndType        #399:#400     // toString:()Ljava/lang/String;\n+  #283 = NameAndType        #151:#401     // \"<init>\":(Ljava/lang/String;)V\n+  #284 = NameAndType        #148:#133     // FFFF:[Z\n+  #285 = Class              #133          // \"[Z\"\n+  #286 = NameAndType        #402:#403     // clone:()Ljava/lang/Object;\n+  #287 = NameAndType        #147:#133     // TFFF:[Z\n+  #288 = Class              #133          // \"[Z\"\n+  #289 = NameAndType        #146:#133     // FTFF:[Z\n   #290 = Class              #133          // \"[Z\"\n-  #291 = NameAndType        #146:#133     // FTFF:[Z\n+  #291 = NameAndType        #145:#133     // TTFF:[Z\n   #292 = Class              #133          // \"[Z\"\n-  #293 = NameAndType        #145:#133     // TTFF:[Z\n+  #293 = NameAndType        #144:#133     // FFTF:[Z\n   #294 = Class              #133          // \"[Z\"\n-  #295 = NameAndType        #144:#133     // FFTF:[Z\n+  #295 = NameAndType        #143:#133     // TFTF:[Z\n   #296 = Class              #133          // \"[Z\"\n-  #297 = NameAndType        #143:#133     // TFTF:[Z\n+  #297 = NameAndType        #142:#133     // FTTF:[Z\n   #298 = Class              #133          // \"[Z\"\n-  #299 = NameAndType        #142:#133     // FTTF:[Z\n+  #299 = NameAndType        #141:#133     // TTTF:[Z\n   #300 = Class              #133          // \"[Z\"\n-  #301 = NameAndType        #141:#133     // TTTF:[Z\n+  #301 = NameAndType        #140:#133     // FFFT:[Z\n   #302 = Class              #133          // \"[Z\"\n-  #303 = NameAndType        #140:#133     // FFFT:[Z\n+  #303 = NameAndType        #139:#133     // TFFT:[Z\n   #304 = Class              #133          // \"[Z\"\n-  #305 = NameAndType        #139:#133     // TFFT:[Z\n+  #305 = NameAndType        #138:#133     // FTFT:[Z\n   #306 = Class              #133          // \"[Z\"\n-  #307 = NameAndType        #138:#133     // FTFT:[Z\n+  #307 = NameAndType        #137:#133     // TTFT:[Z\n   #308 = Class              #133          // \"[Z\"\n-  #309 = NameAndType        #137:#133     // TTFT:[Z\n+  #309 = NameAndType        #136:#133     // FFTT:[Z\n   #310 = Class              #133          // \"[Z\"\n-  #311 = NameAndType        #136:#133     // FFTT:[Z\n+  #311 = NameAndType        #135:#133     // TFTT:[Z\n   #312 = Class              #133          // \"[Z\"\n-  #313 = NameAndType        #135:#133     // TFTT:[Z\n+  #313 = NameAndType        #134:#133     // FTTT:[Z\n   #314 = Class              #133          // \"[Z\"\n-  #315 = NameAndType        #134:#133     // FTTT:[Z\n+  #315 = NameAndType        #132:#133     // TTTT:[Z\n   #316 = Class              #133          // \"[Z\"\n-  #317 = NameAndType        #132:#133     // TTTT:[Z\n+  #317 = Class              #133          // \"[Z\"\n   #318 = Class              #133          // \"[Z\"\n   #319 = Class              #133          // \"[Z\"\n   #320 = Class              #133          // \"[Z\"\n   #321 = Class              #133          // \"[Z\"\n   #322 = Class              #133          // \"[Z\"\n   #323 = Class              #133          // \"[Z\"\n   #324 = Class              #133          // \"[Z\"\n@@ -331,109 +331,107 @@\n   #326 = Class              #133          // \"[Z\"\n   #327 = Class              #133          // \"[Z\"\n   #328 = Class              #133          // \"[Z\"\n   #329 = Class              #133          // \"[Z\"\n   #330 = Class              #133          // \"[Z\"\n   #331 = Class              #133          // \"[Z\"\n   #332 = Class              #133          // \"[Z\"\n-  #333 = Class              #133          // \"[Z\"\n-  #334 = Class              #133          // \"[Z\"\n-  #335 = NameAndType        #169:#172     // binaryToHexDigit:([ZI)C\n-  #336 = Utf8               Cannot convert an empty array.\n-  #337 = NameAndType        #174:#172     // binaryToHexDigitMsb0_4bits:([ZI)C\n-  #338 = Utf8               src.length>8: src.length=\n-  #339 = NameAndType        #249:#406     // append:(I)Ljava/lang/StringBuilder;\n-  #340 = Utf8               src.length-srcPos<4: src.length=\n-  #341 = Utf8               , srcPos=\n-  #342 = NameAndType        #175:#172     // binaryBeMsb0ToHexDigit:([ZI)C\n-  #343 = Class              #407          // java/lang/Math\n-  #344 = NameAndType        #408:#409     // min:(II)I\n-  #345 = Class              #410          // java/lang/System\n-  #346 = NameAndType        #411:#412     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #347 = NameAndType        #413:#414     // forDigit:(II)C\n-  #348 = Utf8               nibble value not between 0 and 15:\n-  #349 = Utf8               (nInts-1)*32+dstPos is greater or equal to than 64\n-  #350 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 64\n-  #351 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 32\n-  #352 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 64\n-  #353 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 32\n-  #354 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 16\n-  #355 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 64\n-  #356 = Class              #415          // java/lang/String\n-  #357 = NameAndType        #416:#180     // charAt:(I)C\n-  #358 = NameAndType        #158:#159     // hexDigitToInt:(C)I\n-  #359 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 32\n-  #360 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 16\n-  #361 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 8\n-  #362 = Utf8               nBools-1+dstPos is greater or equal to than 64\n-  #363 = Utf8               nBools-1+dstPos is greater or equal to than 32\n-  #364 = Utf8               nBools-1+dstPos is greater or equal to than 16\n-  #365 = Utf8               nBools-1+dstPos is greater or equal to than 8\n-  #366 = Utf8               (nInts-1)*32+srcPos is greater or equal to than 64\n-  #367 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 64\n-  #368 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 32\n-  #369 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 64\n-  #370 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 32\n-  #371 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 16\n-  #372 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 64\n-  #373 = NameAndType        #417:#418     // length:()I\n-  #374 = NameAndType        #179:#180     // intToHexDigit:(I)C\n-  #375 = NameAndType        #419:#420     // setCharAt:(IC)V\n-  #376 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 32\n-  #377 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 16\n-  #378 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 8\n-  #379 = Utf8               nBools-1+srcPos is greater or equal to than 64\n-  #380 = Utf8               nBools-1+srcPos is greater or equal to than 32\n-  #381 = Utf8               nBools-1+srcPos is greater or equal to than 16\n-  #382 = NameAndType        #149:#150     // $assertionsDisabled:Z\n-  #383 = Utf8               java/lang/AssertionError\n-  #384 = Utf8               nBools-1+srcPos is greater or equal to than 8\n-  #385 = Utf8               nBytes is greater than 16\n-  #386 = NameAndType        #421:#422     // getMostSignificantBits:()J\n-  #387 = NameAndType        #238:#239     // longToByteArray:(JI[BII)[B\n-  #388 = NameAndType        #423:#422     // getLeastSignificantBits:()J\n-  #389 = Utf8               Need at least 16 bytes for UUID\n-  #390 = Utf8               java/util/UUID\n-  #391 = NameAndType        #202:#203     // byteArrayToLong:([BIJII)J\n-  #392 = NameAndType        #151:#424     // \"<init>\":(JJ)V\n-  #393 = Utf8               org/apache/commons/lang3/Conversion\n-  #394 = Class              #425          // java/lang/Class\n-  #395 = NameAndType        #426:#427     // desiredAssertionStatus:()Z\n-  #396 = Utf8               java/lang/Object\n-  #397 = Utf8               java/lang/Character\n-  #398 = Utf8               (CI)I\n-  #399 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #400 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #401 = Utf8               toString\n-  #402 = Utf8               ()Ljava/lang/String;\n-  #403 = Utf8               (Ljava/lang/String;)V\n-  #404 = Utf8               clone\n-  #405 = Utf8               ()Ljava/lang/Object;\n-  #406 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #407 = Utf8               java/lang/Math\n-  #408 = Utf8               min\n-  #409 = Utf8               (II)I\n-  #410 = Utf8               java/lang/System\n-  #411 = Utf8               arraycopy\n-  #412 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #413 = Utf8               forDigit\n-  #414 = Utf8               (II)C\n-  #415 = Utf8               java/lang/String\n-  #416 = Utf8               charAt\n-  #417 = Utf8               length\n-  #418 = Utf8               ()I\n-  #419 = Utf8               setCharAt\n-  #420 = Utf8               (IC)V\n-  #421 = Utf8               getMostSignificantBits\n-  #422 = Utf8               ()J\n-  #423 = Utf8               getLeastSignificantBits\n-  #424 = Utf8               (JJ)V\n-  #425 = Utf8               java/lang/Class\n-  #426 = Utf8               desiredAssertionStatus\n-  #427 = Utf8               ()Z\n+  #333 = NameAndType        #169:#172     // binaryToHexDigit:([ZI)C\n+  #334 = Utf8               Cannot convert an empty array.\n+  #335 = NameAndType        #174:#172     // binaryToHexDigitMsb0_4bits:([ZI)C\n+  #336 = Utf8               src.length>8: src.length=\n+  #337 = NameAndType        #249:#404     // append:(I)Ljava/lang/StringBuilder;\n+  #338 = Utf8               src.length-srcPos<4: src.length=\n+  #339 = Utf8               , srcPos=\n+  #340 = NameAndType        #175:#172     // binaryBeMsb0ToHexDigit:([ZI)C\n+  #341 = Class              #405          // java/lang/Math\n+  #342 = NameAndType        #406:#407     // min:(II)I\n+  #343 = Class              #408          // java/lang/System\n+  #344 = NameAndType        #409:#410     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #345 = NameAndType        #411:#412     // forDigit:(II)C\n+  #346 = Utf8               nibble value not between 0 and 15:\n+  #347 = Utf8               (nInts-1)*32+dstPos is greater or equal to than 64\n+  #348 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 64\n+  #349 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 32\n+  #350 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 64\n+  #351 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 32\n+  #352 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 16\n+  #353 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 64\n+  #354 = Class              #413          // java/lang/String\n+  #355 = NameAndType        #414:#180     // charAt:(I)C\n+  #356 = NameAndType        #158:#159     // hexDigitToInt:(C)I\n+  #357 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 32\n+  #358 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 16\n+  #359 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 8\n+  #360 = Utf8               nBools-1+dstPos is greater or equal to than 64\n+  #361 = Utf8               nBools-1+dstPos is greater or equal to than 32\n+  #362 = Utf8               nBools-1+dstPos is greater or equal to than 16\n+  #363 = Utf8               nBools-1+dstPos is greater or equal to than 8\n+  #364 = Utf8               (nInts-1)*32+srcPos is greater or equal to than 64\n+  #365 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 64\n+  #366 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 32\n+  #367 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 64\n+  #368 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 32\n+  #369 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 16\n+  #370 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 64\n+  #371 = NameAndType        #415:#416     // length:()I\n+  #372 = NameAndType        #179:#180     // intToHexDigit:(I)C\n+  #373 = NameAndType        #417:#418     // setCharAt:(IC)V\n+  #374 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 32\n+  #375 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 16\n+  #376 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 8\n+  #377 = Utf8               nBools-1+srcPos is greater or equal to than 64\n+  #378 = Utf8               nBools-1+srcPos is greater or equal to than 32\n+  #379 = Utf8               nBools-1+srcPos is greater or equal to than 16\n+  #380 = NameAndType        #149:#150     // $assertionsDisabled:Z\n+  #381 = Utf8               java/lang/AssertionError\n+  #382 = Utf8               nBools-1+srcPos is greater or equal to than 8\n+  #383 = Utf8               nBytes is greater than 16\n+  #384 = NameAndType        #419:#420     // getMostSignificantBits:()J\n+  #385 = NameAndType        #238:#239     // longToByteArray:(JI[BII)[B\n+  #386 = NameAndType        #421:#420     // getLeastSignificantBits:()J\n+  #387 = Utf8               Need at least 16 bytes for UUID\n+  #388 = Utf8               java/util/UUID\n+  #389 = NameAndType        #202:#203     // byteArrayToLong:([BIJII)J\n+  #390 = NameAndType        #151:#422     // \"<init>\":(JJ)V\n+  #391 = Utf8               org/apache/commons/lang3/Conversion\n+  #392 = Class              #423          // java/lang/Class\n+  #393 = NameAndType        #424:#425     // desiredAssertionStatus:()Z\n+  #394 = Utf8               java/lang/Object\n+  #395 = Utf8               java/lang/Character\n+  #396 = Utf8               (CI)I\n+  #397 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #398 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #399 = Utf8               toString\n+  #400 = Utf8               ()Ljava/lang/String;\n+  #401 = Utf8               (Ljava/lang/String;)V\n+  #402 = Utf8               clone\n+  #403 = Utf8               ()Ljava/lang/Object;\n+  #404 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #405 = Utf8               java/lang/Math\n+  #406 = Utf8               min\n+  #407 = Utf8               (II)I\n+  #408 = Utf8               java/lang/System\n+  #409 = Utf8               arraycopy\n+  #410 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #411 = Utf8               forDigit\n+  #412 = Utf8               (II)C\n+  #413 = Utf8               java/lang/String\n+  #414 = Utf8               charAt\n+  #415 = Utf8               length\n+  #416 = Utf8               ()I\n+  #417 = Utf8               setCharAt\n+  #418 = Utf8               (IC)V\n+  #419 = Utf8               getMostSignificantBits\n+  #420 = Utf8               ()J\n+  #421 = Utf8               getLeastSignificantBits\n+  #422 = Utf8               (JJ)V\n+  #423 = Utf8               java/lang/Class\n+  #424 = Utf8               desiredAssertionStatus\n+  #425 = Utf8               ()Z\n {\n   private static final boolean[] TTTT;\n     descriptor: [Z\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final boolean[] FTTT;\n     descriptor: [Z\n"}]}
