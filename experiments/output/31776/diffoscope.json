{"diffoscope-json-version": 1, "source1": "first/FileTimes.class", "source2": "second/FileTimes.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,182 +1,182 @@\n-  SHA-256 checksum d569de8626269a4b5ba1304d00ba1ba76a45ac8a3d7440161fd05e0446db905e\n+  SHA-256 checksum e28ec1f7a445322a751216c8dfbfed193ae60a6aca6a1396912d1280d5ca3f13\n   Compiled from \"FileTimes.java\"\n public final class org.apache.commons.io.file.attribute.FileTimes\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/io/file/attribute/FileTimes\n-  super_class: #37                        // java/lang/Object\n+  this_class: #26                         // org/apache/commons/io/file/attribute/FileTimes\n+  super_class: #101                       // java/lang/Object\n   interfaces: 0, fields: 4, methods: 16, attributes: 1\n Constant pool:\n-    #1 = Methodref          #86.#99       // java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n-    #2 = Methodref          #100.#101     // java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n-    #3 = Methodref          #86.#102      // java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-    #4 = Methodref          #100.#103     // java/time/Instant.minusNanos:(J)Ljava/time/Instant;\n-    #5 = Methodref          #100.#104     // java/time/Instant.minusSeconds:(J)Ljava/time/Instant;\n-    #6 = Methodref          #100.#105     // java/time/Instant.now:()Ljava/time/Instant;\n-    #7 = Class              #106          // org/apache/commons/io/file/attribute/FileTimes\n-    #8 = Long               -116444736000000000l\n-   #10 = Methodref          #107.#108     // java/lang/Math.addExact:(JJ)J\n-   #11 = Fieldref           #7.#109       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_MILLISECOND:J\n-   #12 = Methodref          #107.#110     // java/lang/Math.floorDiv:(JJ)J\n-   #13 = Class              #111          // java/util/Date\n-   #14 = Methodref          #13.#112      // java/util/Date.\"<init>\":(J)V\n-   #15 = Fieldref           #7.#113       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_SECOND:J\n-   #16 = Methodref          #107.#114     // java/lang/Math.floorMod:(JJ)J\n-   #17 = Long               100l\n-   #19 = Methodref          #100.#115     // java/time/Instant.ofEpochSecond:(JJ)Ljava/time/Instant;\n-   #20 = Methodref          #100.#116     // java/time/Instant.plusMillis:(J)Ljava/time/Instant;\n-   #21 = Methodref          #100.#117     // java/time/Instant.plusNanos:(J)Ljava/time/Instant;\n-   #22 = Methodref          #100.#118     // java/time/Instant.plusSeconds:(J)Ljava/time/Instant;\n-   #23 = Methodref          #7.#119       // org/apache/commons/io/file/attribute/FileTimes.now:()Ljava/nio/file/attribute/FileTime;\n-   #24 = Methodref          #120.#121     // java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-   #25 = Methodref          #86.#122      // java/nio/file/attribute/FileTime.toMillis:()J\n-   #26 = Methodref          #13.#123      // java/util/Date.getTime:()J\n-   #27 = Methodref          #86.#124      // java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n-   #28 = Methodref          #107.#125     // java/lang/Math.subtractExact:(JJ)J\n-   #29 = Methodref          #100.#126     // java/time/Instant.getEpochSecond:()J\n-   #30 = Methodref          #100.#127     // java/time/Instant.getNano:()I\n-   #31 = Methodref          #37.#128      // java/lang/Object.\"<init>\":()V\n-   #32 = Fieldref           #100.#129     // java/time/Instant.EPOCH:Ljava/time/Instant;\n-   #33 = Fieldref           #7.#130       // org/apache/commons/io/file/attribute/FileTimes.EPOCH:Ljava/nio/file/attribute/FileTime;\n-   #34 = Fieldref           #131.#132     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n-   #35 = Methodref          #131.#133     // java/util/concurrent/TimeUnit.toNanos:(J)J\n-   #36 = Fieldref           #131.#134     // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-   #37 = Class              #135          // java/lang/Object\n-   #38 = Utf8               EPOCH\n-   #39 = Utf8               Ljava/nio/file/attribute/FileTime;\n-   #40 = Utf8               WINDOWS_EPOCH_OFFSET\n-   #41 = Utf8               J\n-   #42 = Utf8               ConstantValue\n-   #43 = Utf8               HUNDRED_NANOS_PER_SECOND\n-   #44 = Utf8               HUNDRED_NANOS_PER_MILLISECOND\n-   #45 = Utf8               minusMillis\n-   #46 = Utf8               (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               fileTime\n-   #51 = Utf8               millisToSubtract\n-   #52 = Utf8               minusNanos\n-   #53 = Utf8               nanosToSubtract\n-   #54 = Utf8               minusSeconds\n-   #55 = Utf8               secondsToSubtract\n-   #56 = Utf8               now\n-   #57 = Utf8               ()Ljava/nio/file/attribute/FileTime;\n-   #58 = Utf8               ntfsTimeToDate\n-   #59 = Utf8               (J)Ljava/util/Date;\n-   #60 = Utf8               ntfsTime\n-   #61 = Utf8               javaHundredNanos\n-   #62 = Utf8               javaMillis\n-   #63 = Utf8               ntfsTimeToFileTime\n-   #64 = Utf8               (J)Ljava/nio/file/attribute/FileTime;\n-   #65 = Utf8               javaHundredsNanos\n-   #66 = Utf8               javaSeconds\n-   #67 = Utf8               javaNanos\n-   #68 = Utf8               plusMillis\n-   #69 = Utf8               millisToAdd\n-   #70 = Utf8               plusNanos\n-   #71 = Utf8               plusSeconds\n-   #72 = Utf8               secondsToAdd\n-   #73 = Utf8               setLastModifiedTime\n-   #74 = Utf8               (Ljava/nio/file/Path;)V\n-   #75 = Utf8               path\n-   #76 = Utf8               Ljava/nio/file/Path;\n-   #77 = Utf8               Exceptions\n-   #78 = Class              #136          // java/io/IOException\n-   #79 = Utf8               toDate\n-   #80 = Utf8               (Ljava/nio/file/attribute/FileTime;)Ljava/util/Date;\n-   #81 = Utf8               StackMapTable\n-   #82 = Utf8               toFileTime\n-   #83 = Utf8               (Ljava/util/Date;)Ljava/nio/file/attribute/FileTime;\n-   #84 = Utf8               date\n-   #85 = Utf8               Ljava/util/Date;\n-   #86 = Class              #137          // java/nio/file/attribute/FileTime\n-   #87 = Utf8               toNtfsTime\n-   #88 = Utf8               (Ljava/util/Date;)J\n-   #89 = Utf8               (Ljava/nio/file/attribute/FileTime;)J\n-   #90 = Utf8               instant\n-   #91 = Utf8               Ljava/time/Instant;\n-   #92 = Utf8               <init>\n-   #93 = Utf8               ()V\n-   #94 = Utf8               this\n-   #95 = Utf8               Lorg/apache/commons/io/file/attribute/FileTimes;\n-   #96 = Utf8               <clinit>\n-   #97 = Utf8               SourceFile\n-   #98 = Utf8               FileTimes.java\n-   #99 = NameAndType        #138:#139     // toInstant:()Ljava/time/Instant;\n-  #100 = Class              #140          // java/time/Instant\n-  #101 = NameAndType        #45:#141      // minusMillis:(J)Ljava/time/Instant;\n-  #102 = NameAndType        #142:#143     // from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-  #103 = NameAndType        #52:#141      // minusNanos:(J)Ljava/time/Instant;\n-  #104 = NameAndType        #54:#141      // minusSeconds:(J)Ljava/time/Instant;\n-  #105 = NameAndType        #56:#139      // now:()Ljava/time/Instant;\n-  #106 = Utf8               org/apache/commons/io/file/attribute/FileTimes\n-  #107 = Class              #144          // java/lang/Math\n-  #108 = NameAndType        #145:#146     // addExact:(JJ)J\n-  #109 = NameAndType        #44:#41       // HUNDRED_NANOS_PER_MILLISECOND:J\n-  #110 = NameAndType        #147:#146     // floorDiv:(JJ)J\n-  #111 = Utf8               java/util/Date\n-  #112 = NameAndType        #92:#148      // \"<init>\":(J)V\n-  #113 = NameAndType        #43:#41       // HUNDRED_NANOS_PER_SECOND:J\n-  #114 = NameAndType        #149:#146     // floorMod:(JJ)J\n-  #115 = NameAndType        #150:#151     // ofEpochSecond:(JJ)Ljava/time/Instant;\n-  #116 = NameAndType        #68:#141      // plusMillis:(J)Ljava/time/Instant;\n-  #117 = NameAndType        #70:#141      // plusNanos:(J)Ljava/time/Instant;\n-  #118 = NameAndType        #71:#141      // plusSeconds:(J)Ljava/time/Instant;\n-  #119 = NameAndType        #56:#57       // now:()Ljava/nio/file/attribute/FileTime;\n-  #120 = Class              #152          // java/nio/file/Files\n-  #121 = NameAndType        #73:#153      // setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-  #122 = NameAndType        #154:#155     // toMillis:()J\n-  #123 = NameAndType        #156:#155     // getTime:()J\n-  #124 = NameAndType        #157:#64      // fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n-  #125 = NameAndType        #158:#146     // subtractExact:(JJ)J\n-  #126 = NameAndType        #159:#155     // getEpochSecond:()J\n-  #127 = NameAndType        #160:#161     // getNano:()I\n-  #128 = NameAndType        #92:#93       // \"<init>\":()V\n-  #129 = NameAndType        #38:#91       // EPOCH:Ljava/time/Instant;\n-  #130 = NameAndType        #38:#39       // EPOCH:Ljava/nio/file/attribute/FileTime;\n-  #131 = Class              #162          // java/util/concurrent/TimeUnit\n-  #132 = NameAndType        #163:#164     // SECONDS:Ljava/util/concurrent/TimeUnit;\n-  #133 = NameAndType        #165:#166     // toNanos:(J)J\n-  #134 = NameAndType        #167:#164     // MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n-  #135 = Utf8               java/lang/Object\n-  #136 = Utf8               java/io/IOException\n-  #137 = Utf8               java/nio/file/attribute/FileTime\n-  #138 = Utf8               toInstant\n-  #139 = Utf8               ()Ljava/time/Instant;\n-  #140 = Utf8               java/time/Instant\n-  #141 = Utf8               (J)Ljava/time/Instant;\n-  #142 = Utf8               from\n-  #143 = Utf8               (Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-  #144 = Utf8               java/lang/Math\n-  #145 = Utf8               addExact\n-  #146 = Utf8               (JJ)J\n-  #147 = Utf8               floorDiv\n-  #148 = Utf8               (J)V\n-  #149 = Utf8               floorMod\n-  #150 = Utf8               ofEpochSecond\n-  #151 = Utf8               (JJ)Ljava/time/Instant;\n-  #152 = Utf8               java/nio/file/Files\n-  #153 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-  #154 = Utf8               toMillis\n-  #155 = Utf8               ()J\n-  #156 = Utf8               getTime\n-  #157 = Utf8               fromMillis\n-  #158 = Utf8               subtractExact\n-  #159 = Utf8               getEpochSecond\n-  #160 = Utf8               getNano\n-  #161 = Utf8               ()I\n-  #162 = Utf8               java/util/concurrent/TimeUnit\n-  #163 = Utf8               SECONDS\n-  #164 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #165 = Utf8               toNanos\n-  #166 = Utf8               (J)J\n-  #167 = Utf8               MILLISECONDS\n+    #1 = Methodref          #2.#3         // java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n+    #2 = Class              #4            // java/nio/file/attribute/FileTime\n+    #3 = NameAndType        #5:#6         // toInstant:()Ljava/time/Instant;\n+    #4 = Utf8               java/nio/file/attribute/FileTime\n+    #5 = Utf8               toInstant\n+    #6 = Utf8               ()Ljava/time/Instant;\n+    #7 = Methodref          #8.#9         // java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n+    #8 = Class              #10           // java/time/Instant\n+    #9 = NameAndType        #11:#12       // minusMillis:(J)Ljava/time/Instant;\n+   #10 = Utf8               java/time/Instant\n+   #11 = Utf8               minusMillis\n+   #12 = Utf8               (J)Ljava/time/Instant;\n+   #13 = Methodref          #2.#14        // java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+   #14 = NameAndType        #15:#16       // from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+   #15 = Utf8               from\n+   #16 = Utf8               (Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+   #17 = Methodref          #8.#18        // java/time/Instant.minusNanos:(J)Ljava/time/Instant;\n+   #18 = NameAndType        #19:#12       // minusNanos:(J)Ljava/time/Instant;\n+   #19 = Utf8               minusNanos\n+   #20 = Methodref          #8.#21        // java/time/Instant.minusSeconds:(J)Ljava/time/Instant;\n+   #21 = NameAndType        #22:#12       // minusSeconds:(J)Ljava/time/Instant;\n+   #22 = Utf8               minusSeconds\n+   #23 = Methodref          #8.#24        // java/time/Instant.now:()Ljava/time/Instant;\n+   #24 = NameAndType        #25:#6        // now:()Ljava/time/Instant;\n+   #25 = Utf8               now\n+   #26 = Class              #27           // org/apache/commons/io/file/attribute/FileTimes\n+   #27 = Utf8               org/apache/commons/io/file/attribute/FileTimes\n+   #28 = Long               -116444736000000000l\n+   #30 = Methodref          #31.#32       // java/lang/Math.addExact:(JJ)J\n+   #31 = Class              #33           // java/lang/Math\n+   #32 = NameAndType        #34:#35       // addExact:(JJ)J\n+   #33 = Utf8               java/lang/Math\n+   #34 = Utf8               addExact\n+   #35 = Utf8               (JJ)J\n+   #36 = Fieldref           #26.#37       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_MILLISECOND:J\n+   #37 = NameAndType        #38:#39       // HUNDRED_NANOS_PER_MILLISECOND:J\n+   #38 = Utf8               HUNDRED_NANOS_PER_MILLISECOND\n+   #39 = Utf8               J\n+   #40 = Methodref          #31.#41       // java/lang/Math.floorDiv:(JJ)J\n+   #41 = NameAndType        #42:#35       // floorDiv:(JJ)J\n+   #42 = Utf8               floorDiv\n+   #43 = Class              #44           // java/util/Date\n+   #44 = Utf8               java/util/Date\n+   #45 = Methodref          #43.#46       // java/util/Date.\"<init>\":(J)V\n+   #46 = NameAndType        #47:#48       // \"<init>\":(J)V\n+   #47 = Utf8               <init>\n+   #48 = Utf8               (J)V\n+   #49 = Fieldref           #26.#50       // org/apache/commons/io/file/attribute/FileTimes.HUNDRED_NANOS_PER_SECOND:J\n+   #50 = NameAndType        #51:#39       // HUNDRED_NANOS_PER_SECOND:J\n+   #51 = Utf8               HUNDRED_NANOS_PER_SECOND\n+   #52 = Methodref          #31.#53       // java/lang/Math.floorMod:(JJ)J\n+   #53 = NameAndType        #54:#35       // floorMod:(JJ)J\n+   #54 = Utf8               floorMod\n+   #55 = Long               100l\n+   #57 = Methodref          #8.#58        // java/time/Instant.ofEpochSecond:(JJ)Ljava/time/Instant;\n+   #58 = NameAndType        #59:#60       // ofEpochSecond:(JJ)Ljava/time/Instant;\n+   #59 = Utf8               ofEpochSecond\n+   #60 = Utf8               (JJ)Ljava/time/Instant;\n+   #61 = Methodref          #8.#62        // java/time/Instant.plusMillis:(J)Ljava/time/Instant;\n+   #62 = NameAndType        #63:#12       // plusMillis:(J)Ljava/time/Instant;\n+   #63 = Utf8               plusMillis\n+   #64 = Methodref          #8.#65        // java/time/Instant.plusNanos:(J)Ljava/time/Instant;\n+   #65 = NameAndType        #66:#12       // plusNanos:(J)Ljava/time/Instant;\n+   #66 = Utf8               plusNanos\n+   #67 = Methodref          #8.#68        // java/time/Instant.plusSeconds:(J)Ljava/time/Instant;\n+   #68 = NameAndType        #69:#12       // plusSeconds:(J)Ljava/time/Instant;\n+   #69 = Utf8               plusSeconds\n+   #70 = Methodref          #26.#71       // org/apache/commons/io/file/attribute/FileTimes.now:()Ljava/nio/file/attribute/FileTime;\n+   #71 = NameAndType        #25:#72       // now:()Ljava/nio/file/attribute/FileTime;\n+   #72 = Utf8               ()Ljava/nio/file/attribute/FileTime;\n+   #73 = Methodref          #74.#75       // java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #74 = Class              #76           // java/nio/file/Files\n+   #75 = NameAndType        #77:#78       // setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #76 = Utf8               java/nio/file/Files\n+   #77 = Utf8               setLastModifiedTime\n+   #78 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #79 = Methodref          #2.#80        // java/nio/file/attribute/FileTime.toMillis:()J\n+   #80 = NameAndType        #81:#82       // toMillis:()J\n+   #81 = Utf8               toMillis\n+   #82 = Utf8               ()J\n+   #83 = Methodref          #43.#84       // java/util/Date.getTime:()J\n+   #84 = NameAndType        #85:#82       // getTime:()J\n+   #85 = Utf8               getTime\n+   #86 = Methodref          #2.#87        // java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+   #87 = NameAndType        #88:#89       // fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+   #88 = Utf8               fromMillis\n+   #89 = Utf8               (J)Ljava/nio/file/attribute/FileTime;\n+   #90 = Methodref          #31.#91       // java/lang/Math.subtractExact:(JJ)J\n+   #91 = NameAndType        #92:#35       // subtractExact:(JJ)J\n+   #92 = Utf8               subtractExact\n+   #93 = Methodref          #8.#94        // java/time/Instant.getEpochSecond:()J\n+   #94 = NameAndType        #95:#82       // getEpochSecond:()J\n+   #95 = Utf8               getEpochSecond\n+   #96 = Methodref          #8.#97        // java/time/Instant.getNano:()I\n+   #97 = NameAndType        #98:#99       // getNano:()I\n+   #98 = Utf8               getNano\n+   #99 = Utf8               ()I\n+  #100 = Methodref          #101.#102     // java/lang/Object.\"<init>\":()V\n+  #101 = Class              #103          // java/lang/Object\n+  #102 = NameAndType        #47:#104      // \"<init>\":()V\n+  #103 = Utf8               java/lang/Object\n+  #104 = Utf8               ()V\n+  #105 = Fieldref           #8.#106       // java/time/Instant.EPOCH:Ljava/time/Instant;\n+  #106 = NameAndType        #107:#108     // EPOCH:Ljava/time/Instant;\n+  #107 = Utf8               EPOCH\n+  #108 = Utf8               Ljava/time/Instant;\n+  #109 = Fieldref           #26.#110      // org/apache/commons/io/file/attribute/FileTimes.EPOCH:Ljava/nio/file/attribute/FileTime;\n+  #110 = NameAndType        #107:#111     // EPOCH:Ljava/nio/file/attribute/FileTime;\n+  #111 = Utf8               Ljava/nio/file/attribute/FileTime;\n+  #112 = Fieldref           #113.#114     // java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #113 = Class              #115          // java/util/concurrent/TimeUnit\n+  #114 = NameAndType        #116:#117     // SECONDS:Ljava/util/concurrent/TimeUnit;\n+  #115 = Utf8               java/util/concurrent/TimeUnit\n+  #116 = Utf8               SECONDS\n+  #117 = Utf8               Ljava/util/concurrent/TimeUnit;\n+  #118 = Methodref          #113.#119     // java/util/concurrent/TimeUnit.toNanos:(J)J\n+  #119 = NameAndType        #120:#121     // toNanos:(J)J\n+  #120 = Utf8               toNanos\n+  #121 = Utf8               (J)J\n+  #122 = Fieldref           #113.#123     // java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+  #123 = NameAndType        #124:#117     // MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+  #124 = Utf8               MILLISECONDS\n+  #125 = Utf8               WINDOWS_EPOCH_OFFSET\n+  #126 = Utf8               ConstantValue\n+  #127 = Utf8               (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n+  #128 = Utf8               Code\n+  #129 = Utf8               LineNumberTable\n+  #130 = Utf8               LocalVariableTable\n+  #131 = Utf8               fileTime\n+  #132 = Utf8               millisToSubtract\n+  #133 = Utf8               nanosToSubtract\n+  #134 = Utf8               secondsToSubtract\n+  #135 = Utf8               ntfsTimeToDate\n+  #136 = Utf8               (J)Ljava/util/Date;\n+  #137 = Utf8               ntfsTime\n+  #138 = Utf8               javaHundredNanos\n+  #139 = Utf8               javaMillis\n+  #140 = Utf8               ntfsTimeToFileTime\n+  #141 = Utf8               javaHundredsNanos\n+  #142 = Utf8               javaSeconds\n+  #143 = Utf8               javaNanos\n+  #144 = Utf8               millisToAdd\n+  #145 = Utf8               secondsToAdd\n+  #146 = Utf8               (Ljava/nio/file/Path;)V\n+  #147 = Utf8               path\n+  #148 = Utf8               Ljava/nio/file/Path;\n+  #149 = Utf8               Exceptions\n+  #150 = Class              #151          // java/io/IOException\n+  #151 = Utf8               java/io/IOException\n+  #152 = Utf8               toDate\n+  #153 = Utf8               (Ljava/nio/file/attribute/FileTime;)Ljava/util/Date;\n+  #154 = Utf8               StackMapTable\n+  #155 = Utf8               toFileTime\n+  #156 = Utf8               (Ljava/util/Date;)Ljava/nio/file/attribute/FileTime;\n+  #157 = Utf8               date\n+  #158 = Utf8               Ljava/util/Date;\n+  #159 = Utf8               toNtfsTime\n+  #160 = Utf8               (Ljava/util/Date;)J\n+  #161 = Utf8               (Ljava/nio/file/attribute/FileTime;)J\n+  #162 = Utf8               instant\n+  #163 = Utf8               this\n+  #164 = Utf8               Lorg/apache/commons/io/file/attribute/FileTimes;\n+  #165 = Utf8               <clinit>\n+  #166 = Utf8               SourceFile\n+  #167 = Utf8               FileTimes.java\n {\n   public static final java.nio.file.attribute.FileTime EPOCH;\n     descriptor: Ljava/nio/file/attribute/FileTime;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   static final long WINDOWS_EPOCH_OFFSET = -116444736000000000l;\n     descriptor: J\n@@ -195,16 +195,16 @@\n     descriptor: (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: lload_1\n-         5: invokevirtual #2                  // Method java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n-         8: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #7                  // Method java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n+         8: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 72: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 fileTime   Ljava/nio/file/attribute/FileTime;\n             0      12     1 millisToSubtract   J\n@@ -213,16 +213,16 @@\n     descriptor: (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: lload_1\n-         5: invokevirtual #4                  // Method java/time/Instant.minusNanos:(J)Ljava/time/Instant;\n-         8: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #17                 // Method java/time/Instant.minusNanos:(J)Ljava/time/Instant;\n+         8: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 fileTime   Ljava/nio/file/attribute/FileTime;\n             0      12     1 nanosToSubtract   J\n@@ -231,52 +231,52 @@\n     descriptor: (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: lload_1\n-         5: invokevirtual #5                  // Method java/time/Instant.minusSeconds:(J)Ljava/time/Instant;\n-         8: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #20                 // Method java/time/Instant.minusSeconds:(J)Ljava/time/Instant;\n+         8: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 fileTime   Ljava/nio/file/attribute/FileTime;\n             0      12     1 secondsToSubtract   J\n \n   public static java.nio.file.attribute.FileTime now();\n     descriptor: ()Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokestatic  #6                  // Method java/time/Instant.now:()Ljava/time/Instant;\n-         3: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         0: invokestatic  #23                 // Method java/time/Instant.now:()Ljava/time/Instant;\n+         3: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n          6: areturn\n       LineNumberTable:\n         line 103: 0\n \n   public static java.util.Date ntfsTimeToDate(long);\n     descriptor: (J)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=1\n          0: lload_0\n-         1: ldc2_w        #8                  // long -116444736000000000l\n-         4: invokestatic  #10                 // Method java/lang/Math.addExact:(JJ)J\n+         1: ldc2_w        #28                 // long -116444736000000000l\n+         4: invokestatic  #30                 // Method java/lang/Math.addExact:(JJ)J\n          7: lstore_2\n          8: lload_2\n-         9: getstatic     #11                 // Field HUNDRED_NANOS_PER_MILLISECOND:J\n-        12: invokestatic  #12                 // Method java/lang/Math.floorDiv:(JJ)J\n+         9: getstatic     #36                 // Field HUNDRED_NANOS_PER_MILLISECOND:J\n+        12: invokestatic  #40                 // Method java/lang/Math.floorDiv:(JJ)J\n         15: lstore        4\n-        17: new           #13                 // class java/util/Date\n+        17: new           #43                 // class java/util/Date\n         20: dup\n         21: lload         4\n-        23: invokespecial #14                 // Method java/util/Date.\"<init>\":(J)V\n+        23: invokespecial #45                 // Method java/util/Date.\"<init>\":(J)V\n         26: areturn\n       LineNumberTable:\n         line 113: 0\n         line 114: 8\n         line 115: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -286,31 +286,31 @@\n \n   public static java.nio.file.attribute.FileTime ntfsTimeToFileTime(long);\n     descriptor: (J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=8, args_size=1\n          0: lload_0\n-         1: ldc2_w        #8                  // long -116444736000000000l\n-         4: invokestatic  #10                 // Method java/lang/Math.addExact:(JJ)J\n+         1: ldc2_w        #28                 // long -116444736000000000l\n+         4: invokestatic  #30                 // Method java/lang/Math.addExact:(JJ)J\n          7: lstore_2\n          8: lload_2\n-         9: getstatic     #15                 // Field HUNDRED_NANOS_PER_SECOND:J\n-        12: invokestatic  #12                 // Method java/lang/Math.floorDiv:(JJ)J\n+         9: getstatic     #49                 // Field HUNDRED_NANOS_PER_SECOND:J\n+        12: invokestatic  #40                 // Method java/lang/Math.floorDiv:(JJ)J\n         15: lstore        4\n         17: lload_2\n-        18: getstatic     #15                 // Field HUNDRED_NANOS_PER_SECOND:J\n-        21: invokestatic  #16                 // Method java/lang/Math.floorMod:(JJ)J\n-        24: ldc2_w        #17                 // long 100l\n+        18: getstatic     #49                 // Field HUNDRED_NANOS_PER_SECOND:J\n+        21: invokestatic  #52                 // Method java/lang/Math.floorMod:(JJ)J\n+        24: ldc2_w        #55                 // long 100l\n         27: lmul\n         28: lstore        6\n         30: lload         4\n         32: lload         6\n-        34: invokestatic  #19                 // Method java/time/Instant.ofEpochSecond:(JJ)Ljava/time/Instant;\n-        37: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+        34: invokestatic  #57                 // Method java/time/Instant.ofEpochSecond:(JJ)Ljava/time/Instant;\n+        37: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         40: areturn\n       LineNumberTable:\n         line 127: 0\n         line 128: 8\n         line 129: 17\n         line 130: 30\n       LocalVariableTable:\n@@ -324,16 +324,16 @@\n     descriptor: (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: lload_1\n-         5: invokevirtual #20                 // Method java/time/Instant.plusMillis:(J)Ljava/time/Instant;\n-         8: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #61                 // Method java/time/Instant.plusMillis:(J)Ljava/time/Instant;\n+         8: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 141: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 fileTime   Ljava/nio/file/attribute/FileTime;\n             0      12     1 millisToAdd   J\n@@ -342,16 +342,16 @@\n     descriptor: (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: lload_1\n-         5: invokevirtual #21                 // Method java/time/Instant.plusNanos:(J)Ljava/time/Instant;\n-         8: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #64                 // Method java/time/Instant.plusNanos:(J)Ljava/time/Instant;\n+         8: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 152: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 fileTime   Ljava/nio/file/attribute/FileTime;\n             0      12     1 nanosToSubtract   J\n@@ -360,32 +360,32 @@\n     descriptor: (Ljava/nio/file/attribute/FileTime;J)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: lload_1\n-         5: invokevirtual #22                 // Method java/time/Instant.plusSeconds:(J)Ljava/time/Instant;\n-         8: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #67                 // Method java/time/Instant.plusSeconds:(J)Ljava/time/Instant;\n+         8: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 fileTime   Ljava/nio/file/attribute/FileTime;\n             0      12     1 secondsToAdd   J\n \n   public static void setLastModifiedTime(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #23                 // Method now:()Ljava/nio/file/attribute/FileTime;\n-         4: invokestatic  #24                 // Method java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+         1: invokestatic  #70                 // Method now:()Ljava/nio/file/attribute/FileTime;\n+         4: invokestatic  #73                 // Method java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n          7: pop\n          8: return\n       LineNumberTable:\n         line 173: 0\n         line 174: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -396,19 +396,19 @@\n   public static java.util.Date toDate(java.nio.file.attribute.FileTime);\n     descriptor: (Ljava/nio/file/attribute/FileTime;)Ljava/util/Date;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        18\n-         4: new           #13                 // class java/util/Date\n+         4: new           #43                 // class java/util/Date\n          7: dup\n          8: aload_0\n-         9: invokevirtual #25                 // Method java/nio/file/attribute/FileTime.toMillis:()J\n-        12: invokespecial #14                 // Method java/util/Date.\"<init>\":(J)V\n+         9: invokevirtual #79                 // Method java/nio/file/attribute/FileTime.toMillis:()J\n+        12: invokespecial #45                 // Method java/util/Date.\"<init>\":(J)V\n         15: goto          19\n         18: aconst_null\n         19: areturn\n       LineNumberTable:\n         line 185: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -422,16 +422,16 @@\n     descriptor: (Ljava/util/Date;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n-         5: invokevirtual #26                 // Method java/util/Date.getTime:()J\n-         8: invokestatic  #27                 // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+         5: invokevirtual #83                 // Method java/util/Date.getTime:()J\n+         8: invokestatic  #86                 // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n         11: goto          15\n         14: aconst_null\n         15: areturn\n       LineNumberTable:\n         line 197: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -443,21 +443,21 @@\n \n   public static long toNtfsTime(java.util.Date);\n     descriptor: (Ljava/util/Date;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #26                 // Method java/util/Date.getTime:()J\n-         4: getstatic     #11                 // Field HUNDRED_NANOS_PER_MILLISECOND:J\n+         1: invokevirtual #83                 // Method java/util/Date.getTime:()J\n+         4: getstatic     #36                 // Field HUNDRED_NANOS_PER_MILLISECOND:J\n          7: lmul\n          8: lstore_1\n          9: lload_1\n-        10: ldc2_w        #8                  // long -116444736000000000l\n-        13: invokestatic  #28                 // Method java/lang/Math.subtractExact:(JJ)J\n+        10: ldc2_w        #28                 // long -116444736000000000l\n+        13: invokestatic  #90                 // Method java/lang/Math.subtractExact:(JJ)J\n         16: lreturn\n       LineNumberTable:\n         line 207: 0\n         line 208: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  date   Ljava/util/Date;\n@@ -468,27 +468,27 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n          1: invokevirtual #1                  // Method java/nio/file/attribute/FileTime.toInstant:()Ljava/time/Instant;\n          4: astore_1\n          5: aload_1\n-         6: invokevirtual #29                 // Method java/time/Instant.getEpochSecond:()J\n-         9: getstatic     #15                 // Field HUNDRED_NANOS_PER_SECOND:J\n+         6: invokevirtual #93                 // Method java/time/Instant.getEpochSecond:()J\n+         9: getstatic     #49                 // Field HUNDRED_NANOS_PER_SECOND:J\n         12: lmul\n         13: aload_1\n-        14: invokevirtual #30                 // Method java/time/Instant.getNano:()I\n+        14: invokevirtual #96                 // Method java/time/Instant.getNano:()I\n         17: bipush        100\n         19: idiv\n         20: i2l\n         21: ladd\n         22: lstore_2\n         23: lload_2\n-        24: ldc2_w        #8                  // long -116444736000000000l\n-        27: invokestatic  #28                 // Method java/lang/Math.subtractExact:(JJ)J\n+        24: ldc2_w        #28                 // long -116444736000000000l\n+        27: invokestatic  #90                 // Method java/lang/Math.subtractExact:(JJ)J\n         30: lreturn\n       LineNumberTable:\n         line 218: 0\n         line 219: 5\n         line 220: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -498,43 +498,43 @@\n \n   private org.apache.commons.io.file.attribute.FileTimes();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #31                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #100                // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 223: 0\n         line 225: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/attribute/FileTimes;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n-         0: getstatic     #32                 // Field java/time/Instant.EPOCH:Ljava/time/Instant;\n-         3: invokestatic  #3                  // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-         6: putstatic     #33                 // Field EPOCH:Ljava/nio/file/attribute/FileTime;\n-         9: getstatic     #34                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n+         0: getstatic     #105                // Field java/time/Instant.EPOCH:Ljava/time/Instant;\n+         3: invokestatic  #13                 // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         6: putstatic     #109                // Field EPOCH:Ljava/nio/file/attribute/FileTime;\n+         9: getstatic     #112                // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;\n         12: lconst_1\n-        13: invokevirtual #35                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J\n-        16: ldc2_w        #17                 // long 100l\n+        13: invokevirtual #118                // Method java/util/concurrent/TimeUnit.toNanos:(J)J\n+        16: ldc2_w        #55                 // long 100l\n         19: ldiv\n-        20: putstatic     #15                 // Field HUNDRED_NANOS_PER_SECOND:J\n-        23: getstatic     #36                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n+        20: putstatic     #49                 // Field HUNDRED_NANOS_PER_SECOND:J\n+        23: getstatic     #122                // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;\n         26: lconst_1\n-        27: invokevirtual #35                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J\n-        30: ldc2_w        #17                 // long 100l\n+        27: invokevirtual #118                // Method java/util/concurrent/TimeUnit.toNanos:(J)J\n+        30: ldc2_w        #55                 // long 100l\n         33: ldiv\n-        34: putstatic     #11                 // Field HUNDRED_NANOS_PER_MILLISECOND:J\n+        34: putstatic     #36                 // Field HUNDRED_NANOS_PER_MILLISECOND:J\n         37: return\n       LineNumberTable:\n         line 40: 0\n         line 57: 9\n         line 62: 23\n }\n SourceFile: \"FileTimes.java\"\n"}]}
