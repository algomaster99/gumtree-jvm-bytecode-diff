{"diffoscope-json-version": 1, "source1": "first/TokenMgrError.class", "source2": "second/TokenMgrError.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,166 +1,166 @@\n-  SHA-256 checksum 7fbd51f1377425bf810f9c82f210206502cded40eac26f68d2103aeeb5393fad\n+  SHA-256 checksum 3d7523b8c505139bd6880f0f3c5934879b91ce72062d34c23e0b9a39002facab\n   Compiled from \"TokenMgrError.java\"\n public class org.apache.commons.configuration2.plist.TokenMgrError extends java.lang.Error\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #41                         // org/apache/commons/configuration2/plist/TokenMgrError\n-  super_class: #42                        // java/lang/Error\n+  this_class: #81                         // org/apache/commons/configuration2/plist/TokenMgrError\n+  super_class: #93                        // java/lang/Error\n   interfaces: 0, fields: 6, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #94           // java/lang/StringBuffer\n-    #2 = Methodref          #1.#95        // java/lang/StringBuffer.\"<init>\":()V\n-    #3 = Methodref          #72.#96       // java/lang/String.length:()I\n-    #4 = Methodref          #72.#97       // java/lang/String.charAt:(I)C\n-    #5 = String             #98           // \\\\b\n-    #6 = Methodref          #1.#99        // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-    #7 = String             #100          // \\\\t\n-    #8 = String             #101          // \\\\n\n-    #9 = String             #102          // \\\\f\n-   #10 = String             #103          // \\\\r\n-   #11 = String             #104          // \\\\\\\"\n-   #12 = String             #105          // \\\\\\'\n-   #13 = String             #106          // \\\\\\\\\n-   #14 = Class              #107          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#95       // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #108          // 0000\n-   #17 = Methodref          #14.#109      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #110.#111     // java/lang/Integer.toString:(II)Ljava/lang/String;\n-   #19 = Methodref          #14.#112      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #20 = String             #113          // \\\\u\n-   #21 = Methodref          #72.#114      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #22 = Methodref          #1.#115       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n-   #23 = Methodref          #1.#112       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #24 = String             #116          // Lexical error at line\n-   #25 = Methodref          #14.#117      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #26 = String             #118          // , column\n-   #27 = String             #119          // .  Encountered:\n-   #28 = String             #120          // <EOF>\n-   #29 = String             #121          // \\\"\n-   #30 = Methodref          #72.#122      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #31 = Methodref          #41.#123      // org/apache/commons/configuration2/plist/TokenMgrError.addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-   #32 = String             #124          //  (\n-   #33 = String             #125          // ),\n-   #34 = String             #126          // after : \\\"\n-   #35 = Methodref          #42.#127      // java/lang/Error.getMessage:()Ljava/lang/String;\n-   #36 = Methodref          #42.#95       // java/lang/Error.\"<init>\":()V\n-   #37 = Methodref          #42.#128      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #38 = Fieldref           #41.#129      // org/apache/commons/configuration2/plist/TokenMgrError.errorCode:I\n-   #39 = Methodref          #41.#130      // org/apache/commons/configuration2/plist/TokenMgrError.LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n-   #40 = Methodref          #41.#131      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n-   #41 = Class              #132          // org/apache/commons/configuration2/plist/TokenMgrError\n-   #42 = Class              #133          // java/lang/Error\n-   #43 = Utf8               serialVersionUID\n-   #44 = Utf8               J\n-   #45 = Utf8               ConstantValue\n-   #46 = Long               1l\n-   #48 = Utf8               LEXICAL_ERROR\n-   #49 = Utf8               I\n-   #50 = Integer            0\n-   #51 = Utf8               STATIC_LEXER_ERROR\n-   #52 = Integer            1\n-   #53 = Utf8               INVALID_LEXICAL_STATE\n-   #54 = Integer            2\n-   #55 = Utf8               LOOP_DETECTED\n-   #56 = Integer            3\n-   #57 = Utf8               errorCode\n-   #58 = Utf8               addEscapes\n-   #59 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #60 = Utf8               Code\n-   #61 = Utf8               LineNumberTable\n-   #62 = Utf8               LocalVariableTable\n-   #63 = Utf8               s\n-   #64 = Utf8               Ljava/lang/String;\n-   #65 = Utf8               ch\n-   #66 = Utf8               C\n-   #67 = Utf8               i\n-   #68 = Utf8               str\n-   #69 = Utf8               retval\n-   #70 = Utf8               Ljava/lang/StringBuffer;\n-   #71 = Utf8               StackMapTable\n-   #72 = Class              #134          // java/lang/String\n-   #73 = Utf8               LexicalError\n-   #74 = Utf8               (ZIIILjava/lang/String;C)Ljava/lang/String;\n-   #75 = Utf8               EOFSeen\n-   #76 = Utf8               Z\n-   #77 = Utf8               lexState\n-   #78 = Utf8               errorLine\n-   #79 = Utf8               errorColumn\n-   #80 = Utf8               errorAfter\n-   #81 = Utf8               curChar\n-   #82 = Utf8               getMessage\n-   #83 = Utf8               ()Ljava/lang/String;\n-   #84 = Utf8               this\n-   #85 = Utf8               Lorg/apache/commons/configuration2/plist/TokenMgrError;\n-   #86 = Utf8               <init>\n-   #87 = Utf8               ()V\n-   #88 = Utf8               (Ljava/lang/String;I)V\n-   #89 = Utf8               message\n-   #90 = Utf8               reason\n-   #91 = Utf8               (ZIIILjava/lang/String;CI)V\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               TokenMgrError.java\n-   #94 = Utf8               java/lang/StringBuffer\n-   #95 = NameAndType        #86:#87       // \"<init>\":()V\n-   #96 = NameAndType        #135:#136     // length:()I\n-   #97 = NameAndType        #137:#138     // charAt:(I)C\n-   #98 = Utf8               \\\\b\n-   #99 = NameAndType        #139:#140     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #100 = Utf8               \\\\t\n-  #101 = Utf8               \\\\n\n-  #102 = Utf8               \\\\f\n-  #103 = Utf8               \\\\r\n-  #104 = Utf8               \\\\\\\"\n-  #105 = Utf8               \\\\\\'\n-  #106 = Utf8               \\\\\\\\\n-  #107 = Utf8               java/lang/StringBuilder\n-  #108 = Utf8               0000\n-  #109 = NameAndType        #139:#141     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #110 = Class              #142          // java/lang/Integer\n-  #111 = NameAndType        #143:#144     // toString:(II)Ljava/lang/String;\n-  #112 = NameAndType        #143:#83      // toString:()Ljava/lang/String;\n-  #113 = Utf8               \\\\u\n-  #114 = NameAndType        #145:#144     // substring:(II)Ljava/lang/String;\n-  #115 = NameAndType        #139:#146     // append:(C)Ljava/lang/StringBuffer;\n-  #116 = Utf8               Lexical error at line\n-  #117 = NameAndType        #139:#147     // append:(I)Ljava/lang/StringBuilder;\n-  #118 = Utf8               , column\n-  #119 = Utf8               .  Encountered:\n-  #120 = Utf8               <EOF>\n-  #121 = Utf8               \\\"\n-  #122 = NameAndType        #148:#149     // valueOf:(C)Ljava/lang/String;\n-  #123 = NameAndType        #58:#59       // addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-  #124 = Utf8                (\n-  #125 = Utf8               ),\n-  #126 = Utf8               after : \\\"\n-  #127 = NameAndType        #82:#83       // getMessage:()Ljava/lang/String;\n-  #128 = NameAndType        #86:#150      // \"<init>\":(Ljava/lang/String;)V\n-  #129 = NameAndType        #57:#49       // errorCode:I\n-  #130 = NameAndType        #73:#74       // LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n-  #131 = NameAndType        #86:#88       // \"<init>\":(Ljava/lang/String;I)V\n-  #132 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n-  #133 = Utf8               java/lang/Error\n-  #134 = Utf8               java/lang/String\n-  #135 = Utf8               length\n-  #136 = Utf8               ()I\n-  #137 = Utf8               charAt\n-  #138 = Utf8               (I)C\n-  #139 = Utf8               append\n-  #140 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #141 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #142 = Utf8               java/lang/Integer\n-  #143 = Utf8               toString\n-  #144 = Utf8               (II)Ljava/lang/String;\n-  #145 = Utf8               substring\n-  #146 = Utf8               (C)Ljava/lang/StringBuffer;\n-  #147 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #148 = Utf8               valueOf\n-  #149 = Utf8               (C)Ljava/lang/String;\n-  #150 = Utf8               (Ljava/lang/String;)V\n+    #1 = Class              #2            // java/lang/StringBuffer\n+    #2 = Utf8               java/lang/StringBuffer\n+    #3 = Methodref          #1.#4         // java/lang/StringBuffer.\"<init>\":()V\n+    #4 = NameAndType        #5:#6         // \"<init>\":()V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/lang/String.length:()I\n+    #8 = Class              #10           // java/lang/String\n+    #9 = NameAndType        #11:#12       // length:()I\n+   #10 = Utf8               java/lang/String\n+   #11 = Utf8               length\n+   #12 = Utf8               ()I\n+   #13 = Methodref          #8.#14        // java/lang/String.charAt:(I)C\n+   #14 = NameAndType        #15:#16       // charAt:(I)C\n+   #15 = Utf8               charAt\n+   #16 = Utf8               (I)C\n+   #17 = String             #18           // \\\\b\n+   #18 = Utf8               \\\\b\n+   #19 = Methodref          #1.#20        // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #20 = NameAndType        #21:#22       // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #21 = Utf8               append\n+   #22 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #23 = String             #24           // \\\\t\n+   #24 = Utf8               \\\\t\n+   #25 = String             #26           // \\\\n\n+   #26 = Utf8               \\\\n\n+   #27 = String             #28           // \\\\f\n+   #28 = Utf8               \\\\f\n+   #29 = String             #30           // \\\\r\n+   #30 = Utf8               \\\\r\n+   #31 = String             #32           // \\\\\\\"\n+   #32 = Utf8               \\\\\\\"\n+   #33 = String             #34           // \\\\\\'\n+   #34 = Utf8               \\\\\\'\n+   #35 = String             #36           // \\\\\\\\\n+   #36 = Utf8               \\\\\\\\\n+   #37 = Class              #38           // java/lang/StringBuilder\n+   #38 = Utf8               java/lang/StringBuilder\n+   #39 = Methodref          #37.#4        // java/lang/StringBuilder.\"<init>\":()V\n+   #40 = String             #41           // 0000\n+   #41 = Utf8               0000\n+   #42 = Methodref          #37.#43       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #43 = NameAndType        #21:#44       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #44 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #45 = Methodref          #46.#47       // java/lang/Integer.toString:(II)Ljava/lang/String;\n+   #46 = Class              #48           // java/lang/Integer\n+   #47 = NameAndType        #49:#50       // toString:(II)Ljava/lang/String;\n+   #48 = Utf8               java/lang/Integer\n+   #49 = Utf8               toString\n+   #50 = Utf8               (II)Ljava/lang/String;\n+   #51 = Methodref          #37.#52       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #52 = NameAndType        #49:#53       // toString:()Ljava/lang/String;\n+   #53 = Utf8               ()Ljava/lang/String;\n+   #54 = String             #55           // \\\\u\n+   #55 = Utf8               \\\\u\n+   #56 = Methodref          #8.#57        // java/lang/String.substring:(II)Ljava/lang/String;\n+   #57 = NameAndType        #58:#50       // substring:(II)Ljava/lang/String;\n+   #58 = Utf8               substring\n+   #59 = Methodref          #1.#60        // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+   #60 = NameAndType        #21:#61       // append:(C)Ljava/lang/StringBuffer;\n+   #61 = Utf8               (C)Ljava/lang/StringBuffer;\n+   #62 = Methodref          #1.#52        // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #63 = String             #64           // Lexical error at line\n+   #64 = Utf8               Lexical error at line\n+   #65 = Methodref          #37.#66       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #66 = NameAndType        #21:#67       // append:(I)Ljava/lang/StringBuilder;\n+   #67 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #68 = String             #69           // , column\n+   #69 = Utf8               , column\n+   #70 = String             #71           // .  Encountered:\n+   #71 = Utf8               .  Encountered:\n+   #72 = String             #73           // <EOF>\n+   #73 = Utf8               <EOF>\n+   #74 = String             #75           // \\\"\n+   #75 = Utf8               \\\"\n+   #76 = Methodref          #8.#77        // java/lang/String.valueOf:(C)Ljava/lang/String;\n+   #77 = NameAndType        #78:#79       // valueOf:(C)Ljava/lang/String;\n+   #78 = Utf8               valueOf\n+   #79 = Utf8               (C)Ljava/lang/String;\n+   #80 = Methodref          #81.#82       // org/apache/commons/configuration2/plist/TokenMgrError.addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+   #81 = Class              #83           // org/apache/commons/configuration2/plist/TokenMgrError\n+   #82 = NameAndType        #84:#85       // addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+   #83 = Utf8               org/apache/commons/configuration2/plist/TokenMgrError\n+   #84 = Utf8               addEscapes\n+   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #86 = String             #87           //  (\n+   #87 = Utf8                (\n+   #88 = String             #89           // ),\n+   #89 = Utf8               ),\n+   #90 = String             #91           // after : \\\"\n+   #91 = Utf8               after : \\\"\n+   #92 = Methodref          #93.#94       // java/lang/Error.getMessage:()Ljava/lang/String;\n+   #93 = Class              #95           // java/lang/Error\n+   #94 = NameAndType        #96:#53       // getMessage:()Ljava/lang/String;\n+   #95 = Utf8               java/lang/Error\n+   #96 = Utf8               getMessage\n+   #97 = Methodref          #93.#4        // java/lang/Error.\"<init>\":()V\n+   #98 = Methodref          #93.#99       // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+   #99 = NameAndType        #5:#100       // \"<init>\":(Ljava/lang/String;)V\n+  #100 = Utf8               (Ljava/lang/String;)V\n+  #101 = Fieldref           #81.#102      // org/apache/commons/configuration2/plist/TokenMgrError.errorCode:I\n+  #102 = NameAndType        #103:#104     // errorCode:I\n+  #103 = Utf8               errorCode\n+  #104 = Utf8               I\n+  #105 = Methodref          #81.#106      // org/apache/commons/configuration2/plist/TokenMgrError.LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #106 = NameAndType        #107:#108     // LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #107 = Utf8               LexicalError\n+  #108 = Utf8               (ZIIILjava/lang/String;C)Ljava/lang/String;\n+  #109 = Methodref          #81.#110      // org/apache/commons/configuration2/plist/TokenMgrError.\"<init>\":(Ljava/lang/String;I)V\n+  #110 = NameAndType        #5:#111       // \"<init>\":(Ljava/lang/String;I)V\n+  #111 = Utf8               (Ljava/lang/String;I)V\n+  #112 = Utf8               serialVersionUID\n+  #113 = Utf8               J\n+  #114 = Utf8               ConstantValue\n+  #115 = Long               1l\n+  #117 = Utf8               LEXICAL_ERROR\n+  #118 = Integer            0\n+  #119 = Utf8               STATIC_LEXER_ERROR\n+  #120 = Integer            1\n+  #121 = Utf8               INVALID_LEXICAL_STATE\n+  #122 = Integer            2\n+  #123 = Utf8               LOOP_DETECTED\n+  #124 = Integer            3\n+  #125 = Utf8               Code\n+  #126 = Utf8               LineNumberTable\n+  #127 = Utf8               LocalVariableTable\n+  #128 = Utf8               s\n+  #129 = Utf8               Ljava/lang/String;\n+  #130 = Utf8               ch\n+  #131 = Utf8               C\n+  #132 = Utf8               i\n+  #133 = Utf8               str\n+  #134 = Utf8               retval\n+  #135 = Utf8               Ljava/lang/StringBuffer;\n+  #136 = Utf8               StackMapTable\n+  #137 = Utf8               EOFSeen\n+  #138 = Utf8               Z\n+  #139 = Utf8               lexState\n+  #140 = Utf8               errorLine\n+  #141 = Utf8               errorColumn\n+  #142 = Utf8               errorAfter\n+  #143 = Utf8               curChar\n+  #144 = Utf8               this\n+  #145 = Utf8               Lorg/apache/commons/configuration2/plist/TokenMgrError;\n+  #146 = Utf8               message\n+  #147 = Utf8               reason\n+  #148 = Utf8               (ZIIILjava/lang/String;CI)V\n+  #149 = Utf8               SourceFile\n+  #150 = Utf8               TokenMgrError.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   static final int LEXICAL_ERROR = 0;\n@@ -190,126 +190,126 @@\n   protected static final java.lang.String addEscapes(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     Code:\n       stack=5, locals=5, args_size=1\n          0: new           #1                  // class java/lang/StringBuffer\n          3: dup\n-         4: invokespecial #2                  // Method java/lang/StringBuffer.\"<init>\":()V\n+         4: invokespecial #3                  // Method java/lang/StringBuffer.\"<init>\":()V\n          7: astore_1\n          8: iconst_0\n          9: istore_3\n         10: iload_3\n         11: aload_0\n-        12: invokevirtual #3                  // Method java/lang/String.length:()I\n+        12: invokevirtual #7                  // Method java/lang/String.length:()I\n         15: if_icmpge     286\n         18: aload_0\n         19: iload_3\n-        20: invokevirtual #4                  // Method java/lang/String.charAt:(I)C\n+        20: invokevirtual #13                 // Method java/lang/String.charAt:(I)C\n         23: lookupswitch  { // 9\n                        0: 104\n                        8: 107\n                        9: 117\n                       10: 127\n                       12: 137\n                       13: 147\n                       34: 157\n                       39: 167\n                       92: 177\n                  default: 187\n             }\n        104: goto          280\n        107: aload_1\n-       108: ldc           #5                  // String \\\\b\n-       110: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       108: ldc           #17                 // String \\\\b\n+       110: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        113: pop\n        114: goto          280\n        117: aload_1\n-       118: ldc           #7                  // String \\\\t\n-       120: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       118: ldc           #23                 // String \\\\t\n+       120: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        123: pop\n        124: goto          280\n        127: aload_1\n-       128: ldc           #8                  // String \\\\n\n-       130: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       128: ldc           #25                 // String \\\\n\n+       130: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        133: pop\n        134: goto          280\n        137: aload_1\n-       138: ldc           #9                  // String \\\\f\n-       140: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       138: ldc           #27                 // String \\\\f\n+       140: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        143: pop\n        144: goto          280\n        147: aload_1\n-       148: ldc           #10                 // String \\\\r\n-       150: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       148: ldc           #29                 // String \\\\r\n+       150: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        153: pop\n        154: goto          280\n        157: aload_1\n-       158: ldc           #11                 // String \\\\\\\"\n-       160: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       158: ldc           #31                 // String \\\\\\\"\n+       160: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        163: pop\n        164: goto          280\n        167: aload_1\n-       168: ldc           #12                 // String \\\\\\'\n-       170: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       168: ldc           #33                 // String \\\\\\'\n+       170: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        173: pop\n        174: goto          280\n        177: aload_1\n-       178: ldc           #13                 // String \\\\\\\\\n-       180: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       178: ldc           #35                 // String \\\\\\\\\n+       180: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        183: pop\n        184: goto          280\n        187: aload_0\n        188: iload_3\n-       189: invokevirtual #4                  // Method java/lang/String.charAt:(I)C\n+       189: invokevirtual #13                 // Method java/lang/String.charAt:(I)C\n        192: dup\n        193: istore_2\n        194: bipush        32\n        196: if_icmplt     205\n        199: iload_2\n        200: bipush        126\n        202: if_icmple     274\n-       205: new           #14                 // class java/lang/StringBuilder\n+       205: new           #37                 // class java/lang/StringBuilder\n        208: dup\n-       209: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       212: ldc           #16                 // String 0000\n-       214: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       209: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       212: ldc           #40                 // String 0000\n+       214: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        217: iload_2\n        218: bipush        16\n-       220: invokestatic  #18                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;\n-       223: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       226: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       220: invokestatic  #45                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;\n+       223: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       226: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        229: astore        4\n        231: aload_1\n-       232: new           #14                 // class java/lang/StringBuilder\n+       232: new           #37                 // class java/lang/StringBuilder\n        235: dup\n-       236: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       239: ldc           #20                 // String \\\\u\n-       241: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       236: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       239: ldc           #54                 // String \\\\u\n+       241: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        244: aload         4\n        246: aload         4\n-       248: invokevirtual #3                  // Method java/lang/String.length:()I\n+       248: invokevirtual #7                  // Method java/lang/String.length:()I\n        251: iconst_4\n        252: isub\n        253: aload         4\n-       255: invokevirtual #3                  // Method java/lang/String.length:()I\n-       258: invokevirtual #21                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       261: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       264: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       267: invokevirtual #6                  // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+       255: invokevirtual #7                  // Method java/lang/String.length:()I\n+       258: invokevirtual #56                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       261: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       264: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       267: invokevirtual #19                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n        270: pop\n        271: goto          280\n        274: aload_1\n        275: iload_2\n-       276: invokevirtual #22                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+       276: invokevirtual #59                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n        279: pop\n        280: iinc          3, 1\n        283: goto          10\n        286: aload_1\n-       287: invokevirtual #23                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n+       287: invokevirtual #62                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n        290: areturn\n       LineNumberTable:\n         line 51: 0\n         line 53: 8\n         line 54: 18\n         line 57: 104\n         line 59: 107\n@@ -371,58 +371,58 @@\n           offset_delta = 5\n \n   protected static java.lang.String LexicalError(boolean, int, int, int, java.lang.String, char);\n     descriptor: (ZIIILjava/lang/String;C)Ljava/lang/String;\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=6\n-         0: new           #14                 // class java/lang/StringBuilder\n+         0: new           #37                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #24                 // String Lexical error at line\n-         9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #63                 // String Lexical error at line\n+         9: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: iload_2\n-        13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        16: ldc           #26                 // String , column\n-        18: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        16: ldc           #68                 // String , column\n+        18: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         21: iload_3\n-        22: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        25: ldc           #27                 // String .  Encountered:\n-        27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        25: ldc           #70                 // String .  Encountered:\n+        27: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: iload_0\n         31: ifeq          39\n-        34: ldc           #28                 // String <EOF>\n+        34: ldc           #72                 // String <EOF>\n         36: goto          85\n-        39: new           #14                 // class java/lang/StringBuilder\n+        39: new           #37                 // class java/lang/StringBuilder\n         42: dup\n-        43: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        46: ldc           #29                 // String \\\"\n-        48: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        43: invokespecial #39                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        46: ldc           #74                 // String \\\"\n+        48: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         51: iload         5\n-        53: invokestatic  #30                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-        56: invokestatic  #31                 // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-        59: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        62: ldc           #29                 // String \\\"\n-        64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: ldc           #32                 // String  (\n-        69: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokestatic  #76                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+        56: invokestatic  #80                 // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+        59: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: ldc           #74                 // String \\\"\n+        64: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: ldc           #86                 // String  (\n+        69: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         72: iload         5\n-        74: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: ldc           #33                 // String ),\n-        79: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        82: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        85: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        88: ldc           #34                 // String after : \\\"\n-        90: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        74: invokevirtual #65                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        77: ldc           #88                 // String ),\n+        79: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        82: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        85: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        88: ldc           #90                 // String after : \\\"\n+        90: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         93: aload         4\n-        95: invokestatic  #31                 // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n-        98: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       101: ldc           #29                 // String \\\"\n-       103: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       106: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        95: invokestatic  #80                 // Method addEscapes:(Ljava/lang/String;)Ljava/lang/String;\n+        98: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       101: ldc           #74                 // String \\\"\n+       103: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       106: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        109: areturn\n       LineNumberTable:\n         line 108: 0\n         line 111: 30\n         line 112: 95\n         line 108: 109\n       LocalVariableTable:\n@@ -443,29 +443,29 @@\n \n   public java.lang.String getMessage();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #35                 // Method java/lang/Error.getMessage:()Ljava/lang/String;\n+         1: invokespecial #92                 // Method java/lang/Error.getMessage:()Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 125: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/plist/TokenMgrError;\n \n   public org.apache.commons.configuration2.plist.TokenMgrError();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #36                 // Method java/lang/Error.\"<init>\":()V\n+         1: invokespecial #97                 // Method java/lang/Error.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/plist/TokenMgrError;\n@@ -473,18 +473,18 @@\n   public org.apache.commons.configuration2.plist.TokenMgrError(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #37                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #98                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n          5: aload_0\n          6: iload_2\n-         7: putfield      #38                 // Field errorCode:I\n+         7: putfield      #101                // Field errorCode:I\n         10: return\n       LineNumberTable:\n         line 138: 0\n         line 139: 5\n         line 140: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -500,17 +500,17 @@\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n          4: iload         4\n          6: aload         5\n          8: iload         6\n-        10: invokestatic  #39                 // Method LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n+        10: invokestatic  #105                // Method LexicalError:(ZIIILjava/lang/String;C)Ljava/lang/String;\n         13: iload         7\n-        15: invokespecial #40                 // Method \"<init>\":(Ljava/lang/String;I)V\n+        15: invokespecial #109                // Method \"<init>\":(Ljava/lang/String;I)V\n         18: return\n       LineNumberTable:\n         line 144: 0\n         line 145: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/configuration2/plist/TokenMgrError;\n"}]}
