{"diffoscope-json-version": 1, "source1": "first/InnerClass.class", "source2": "second/InnerClass.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,166 +1,166 @@\n-  SHA-256 checksum c4219f2292ce68e0831ed316f9c5b541c71e00024c4f495bb7ad490483a7cdef\n+  SHA-256 checksum 4c1bacc691ad997d3bb82fa9013ac64cc70b57b5b936fe2b6c2a7a5ac1e2ba27\n   Compiled from \"InnerClass.java\"\n public final class org.apache.bcel.classfile.InnerClass implements java.lang.Cloneable,org.apache.bcel.classfile.Node\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #14                         // org/apache/bcel/classfile/InnerClass\n-  super_class: #38                        // java/lang/Object\n+  this_class: #8                          // org/apache/bcel/classfile/InnerClass\n+  super_class: #26                        // java/lang/Object\n   interfaces: 2, fields: 4, methods: 16, attributes: 1\n Constant pool:\n-    #1 = InterfaceMethodref #78.#79       // java/io/DataInput.readUnsignedShort:()I\n-    #2 = Methodref          #14.#80       // org/apache/bcel/classfile/InnerClass.\"<init>\":(IIII)V\n-    #3 = Methodref          #14.#81       // org/apache/bcel/classfile/InnerClass.getInnerClassIndex:()I\n-    #4 = Methodref          #14.#82       // org/apache/bcel/classfile/InnerClass.getOuterClassIndex:()I\n-    #5 = Methodref          #14.#83       // org/apache/bcel/classfile/InnerClass.getInnerNameIndex:()I\n-    #6 = Methodref          #14.#84       // org/apache/bcel/classfile/InnerClass.getInnerAccessFlags:()I\n-    #7 = Methodref          #38.#85       // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #14.#86       // org/apache/bcel/classfile/InnerClass.innerClassIndex:I\n-    #9 = Fieldref           #14.#87       // org/apache/bcel/classfile/InnerClass.outerClassIndex:I\n-   #10 = Fieldref           #14.#88       // org/apache/bcel/classfile/InnerClass.innerNameIndex:I\n-   #11 = Fieldref           #14.#89       // org/apache/bcel/classfile/InnerClass.innerAccessFlags:I\n-   #12 = InterfaceMethodref #90.#91       // org/apache/bcel/classfile/Visitor.visitInnerClass:(Lorg/apache/bcel/classfile/InnerClass;)V\n-   #13 = Methodref          #38.#92       // java/lang/Object.clone:()Ljava/lang/Object;\n-   #14 = Class              #93           // org/apache/bcel/classfile/InnerClass\n-   #15 = Class              #94           // java/lang/CloneNotSupportedException\n-   #16 = Methodref          #95.#96       // java/io/DataOutputStream.writeShort:(I)V\n-   #17 = Class              #97           // java/lang/StringBuilder\n-   #18 = Methodref          #17.#85       // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #98           // InnerClass(\n-   #20 = Methodref          #17.#99       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#100      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #22 = String             #101          // ,\n-   #23 = String             #102          // )\n-   #24 = Methodref          #17.#103      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Class              #104          // org/apache/bcel/Const\n-   #26 = Methodref          #75.#105      // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-   #27 = Methodref          #106.#107     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #28 = String             #108          //  of class\n-   #29 = String             #109          //\n-   #30 = Methodref          #75.#110      // org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-   #31 = Methodref          #111.#112     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #32 = String             #113          // (anonymous)\n-   #33 = Methodref          #106.#114     // org/apache/bcel/classfile/Utility.accessToString:(IZ)Ljava/lang/String;\n-   #34 = Methodref          #74.#115      // java/lang/String.isEmpty:()Z\n-   #35 = String             #116          //\n-   #36 = String             #117          //\n-   #37 = String             #118          // =class\n-   #38 = Class              #119          // java/lang/Object\n-   #39 = Class              #120          // java/lang/Cloneable\n-   #40 = Class              #121          // org/apache/bcel/classfile/Node\n-   #41 = Utf8               innerClassIndex\n-   #42 = Utf8               I\n-   #43 = Utf8               outerClassIndex\n-   #44 = Utf8               innerNameIndex\n-   #45 = Utf8               innerAccessFlags\n-   #46 = Utf8               <init>\n-   #47 = Utf8               (Ljava/io/DataInput;)V\n-   #48 = Utf8               Code\n-   #49 = Utf8               LineNumberTable\n-   #50 = Utf8               Exceptions\n-   #51 = Class              #122          // java/io/IOException\n-   #52 = Utf8               (Lorg/apache/bcel/classfile/InnerClass;)V\n-   #53 = Utf8               (IIII)V\n-   #54 = Utf8               accept\n-   #55 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-   #56 = Utf8               copy\n-   #57 = Utf8               ()Lorg/apache/bcel/classfile/InnerClass;\n-   #58 = Utf8               StackMapTable\n-   #59 = Utf8               dump\n-   #60 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #61 = Utf8               getInnerAccessFlags\n-   #62 = Utf8               ()I\n-   #63 = Utf8               getInnerClassIndex\n-   #64 = Utf8               getInnerNameIndex\n-   #65 = Utf8               getOuterClassIndex\n-   #66 = Utf8               setInnerAccessFlags\n-   #67 = Utf8               (I)V\n-   #68 = Utf8               setInnerClassIndex\n-   #69 = Utf8               setInnerNameIndex\n-   #70 = Utf8               setOuterClassIndex\n-   #71 = Utf8               toString\n-   #72 = Utf8               ()Ljava/lang/String;\n-   #73 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #74 = Class              #123          // java/lang/String\n-   #75 = Class              #124          // org/apache/bcel/classfile/ConstantPool\n-   #76 = Utf8               SourceFile\n-   #77 = Utf8               InnerClass.java\n-   #78 = Class              #125          // java/io/DataInput\n-   #79 = NameAndType        #126:#62      // readUnsignedShort:()I\n-   #80 = NameAndType        #46:#53       // \"<init>\":(IIII)V\n-   #81 = NameAndType        #63:#62       // getInnerClassIndex:()I\n-   #82 = NameAndType        #65:#62       // getOuterClassIndex:()I\n-   #83 = NameAndType        #64:#62       // getInnerNameIndex:()I\n-   #84 = NameAndType        #61:#62       // getInnerAccessFlags:()I\n-   #85 = NameAndType        #46:#127      // \"<init>\":()V\n-   #86 = NameAndType        #41:#42       // innerClassIndex:I\n-   #87 = NameAndType        #43:#42       // outerClassIndex:I\n-   #88 = NameAndType        #44:#42       // innerNameIndex:I\n-   #89 = NameAndType        #45:#42       // innerAccessFlags:I\n-   #90 = Class              #128          // org/apache/bcel/classfile/Visitor\n-   #91 = NameAndType        #129:#52      // visitInnerClass:(Lorg/apache/bcel/classfile/InnerClass;)V\n-   #92 = NameAndType        #130:#131     // clone:()Ljava/lang/Object;\n-   #93 = Utf8               org/apache/bcel/classfile/InnerClass\n-   #94 = Utf8               java/lang/CloneNotSupportedException\n-   #95 = Class              #132          // java/io/DataOutputStream\n-   #96 = NameAndType        #133:#67      // writeShort:(I)V\n-   #97 = Utf8               java/lang/StringBuilder\n-   #98 = Utf8               InnerClass(\n-   #99 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #100 = NameAndType        #134:#136     // append:(I)Ljava/lang/StringBuilder;\n-  #101 = Utf8               ,\n-  #102 = Utf8               )\n-  #103 = NameAndType        #71:#72       // toString:()Ljava/lang/String;\n-  #104 = Utf8               org/apache/bcel/Const\n-  #105 = NameAndType        #137:#138     // getConstantString:(IB)Ljava/lang/String;\n-  #106 = Class              #139          // org/apache/bcel/classfile/Utility\n-  #107 = NameAndType        #140:#141     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #108 = Utf8                of class\n-  #109 = Utf8\n-  #110 = NameAndType        #142:#143     // getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #111 = Class              #144          // org/apache/bcel/classfile/ConstantUtf8\n-  #112 = NameAndType        #145:#72      // getBytes:()Ljava/lang/String;\n-  #113 = Utf8               (anonymous)\n-  #114 = NameAndType        #146:#147     // accessToString:(IZ)Ljava/lang/String;\n-  #115 = NameAndType        #148:#149     // isEmpty:()Z\n-  #116 = Utf8\n-  #117 = Utf8\n-  #118 = Utf8               =class\n-  #119 = Utf8               java/lang/Object\n-  #120 = Utf8               java/lang/Cloneable\n-  #121 = Utf8               org/apache/bcel/classfile/Node\n-  #122 = Utf8               java/io/IOException\n-  #123 = Utf8               java/lang/String\n-  #124 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #125 = Utf8               java/io/DataInput\n-  #126 = Utf8               readUnsignedShort\n-  #127 = Utf8               ()V\n-  #128 = Utf8               org/apache/bcel/classfile/Visitor\n-  #129 = Utf8               visitInnerClass\n-  #130 = Utf8               clone\n-  #131 = Utf8               ()Ljava/lang/Object;\n-  #132 = Utf8               java/io/DataOutputStream\n-  #133 = Utf8               writeShort\n-  #134 = Utf8               append\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #137 = Utf8               getConstantString\n-  #138 = Utf8               (IB)Ljava/lang/String;\n-  #139 = Utf8               org/apache/bcel/classfile/Utility\n-  #140 = Utf8               compactClassName\n-  #141 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #142 = Utf8               getConstantUtf8\n-  #143 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #144 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #145 = Utf8               getBytes\n-  #146 = Utf8               accessToString\n-  #147 = Utf8               (IZ)Ljava/lang/String;\n-  #148 = Utf8               isEmpty\n-  #149 = Utf8               ()Z\n+    #1 = InterfaceMethodref #2.#3         // java/io/DataInput.readUnsignedShort:()I\n+    #2 = Class              #4            // java/io/DataInput\n+    #3 = NameAndType        #5:#6         // readUnsignedShort:()I\n+    #4 = Utf8               java/io/DataInput\n+    #5 = Utf8               readUnsignedShort\n+    #6 = Utf8               ()I\n+    #7 = Methodref          #8.#9         // org/apache/bcel/classfile/InnerClass.\"<init>\":(IIII)V\n+    #8 = Class              #10           // org/apache/bcel/classfile/InnerClass\n+    #9 = NameAndType        #11:#12       // \"<init>\":(IIII)V\n+   #10 = Utf8               org/apache/bcel/classfile/InnerClass\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (IIII)V\n+   #13 = Methodref          #8.#14        // org/apache/bcel/classfile/InnerClass.getInnerClassIndex:()I\n+   #14 = NameAndType        #15:#6        // getInnerClassIndex:()I\n+   #15 = Utf8               getInnerClassIndex\n+   #16 = Methodref          #8.#17        // org/apache/bcel/classfile/InnerClass.getOuterClassIndex:()I\n+   #17 = NameAndType        #18:#6        // getOuterClassIndex:()I\n+   #18 = Utf8               getOuterClassIndex\n+   #19 = Methodref          #8.#20        // org/apache/bcel/classfile/InnerClass.getInnerNameIndex:()I\n+   #20 = NameAndType        #21:#6        // getInnerNameIndex:()I\n+   #21 = Utf8               getInnerNameIndex\n+   #22 = Methodref          #8.#23        // org/apache/bcel/classfile/InnerClass.getInnerAccessFlags:()I\n+   #23 = NameAndType        #24:#6        // getInnerAccessFlags:()I\n+   #24 = Utf8               getInnerAccessFlags\n+   #25 = Methodref          #26.#27       // java/lang/Object.\"<init>\":()V\n+   #26 = Class              #28           // java/lang/Object\n+   #27 = NameAndType        #11:#29       // \"<init>\":()V\n+   #28 = Utf8               java/lang/Object\n+   #29 = Utf8               ()V\n+   #30 = Fieldref           #8.#31        // org/apache/bcel/classfile/InnerClass.innerClassIndex:I\n+   #31 = NameAndType        #32:#33       // innerClassIndex:I\n+   #32 = Utf8               innerClassIndex\n+   #33 = Utf8               I\n+   #34 = Fieldref           #8.#35        // org/apache/bcel/classfile/InnerClass.outerClassIndex:I\n+   #35 = NameAndType        #36:#33       // outerClassIndex:I\n+   #36 = Utf8               outerClassIndex\n+   #37 = Fieldref           #8.#38        // org/apache/bcel/classfile/InnerClass.innerNameIndex:I\n+   #38 = NameAndType        #39:#33       // innerNameIndex:I\n+   #39 = Utf8               innerNameIndex\n+   #40 = Fieldref           #8.#41        // org/apache/bcel/classfile/InnerClass.innerAccessFlags:I\n+   #41 = NameAndType        #42:#33       // innerAccessFlags:I\n+   #42 = Utf8               innerAccessFlags\n+   #43 = InterfaceMethodref #44.#45       // org/apache/bcel/classfile/Visitor.visitInnerClass:(Lorg/apache/bcel/classfile/InnerClass;)V\n+   #44 = Class              #46           // org/apache/bcel/classfile/Visitor\n+   #45 = NameAndType        #47:#48       // visitInnerClass:(Lorg/apache/bcel/classfile/InnerClass;)V\n+   #46 = Utf8               org/apache/bcel/classfile/Visitor\n+   #47 = Utf8               visitInnerClass\n+   #48 = Utf8               (Lorg/apache/bcel/classfile/InnerClass;)V\n+   #49 = Methodref          #26.#50       // java/lang/Object.clone:()Ljava/lang/Object;\n+   #50 = NameAndType        #51:#52       // clone:()Ljava/lang/Object;\n+   #51 = Utf8               clone\n+   #52 = Utf8               ()Ljava/lang/Object;\n+   #53 = Class              #54           // java/lang/CloneNotSupportedException\n+   #54 = Utf8               java/lang/CloneNotSupportedException\n+   #55 = Methodref          #56.#57       // java/io/DataOutputStream.writeShort:(I)V\n+   #56 = Class              #58           // java/io/DataOutputStream\n+   #57 = NameAndType        #59:#60       // writeShort:(I)V\n+   #58 = Utf8               java/io/DataOutputStream\n+   #59 = Utf8               writeShort\n+   #60 = Utf8               (I)V\n+   #61 = Class              #62           // java/lang/StringBuilder\n+   #62 = Utf8               java/lang/StringBuilder\n+   #63 = Methodref          #61.#27       // java/lang/StringBuilder.\"<init>\":()V\n+   #64 = String             #65           // InnerClass(\n+   #65 = Utf8               InnerClass(\n+   #66 = Methodref          #61.#67       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #67 = NameAndType        #68:#69       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #68 = Utf8               append\n+   #69 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #70 = Methodref          #61.#71       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #71 = NameAndType        #68:#72       // append:(I)Ljava/lang/StringBuilder;\n+   #72 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #73 = String             #74           // ,\n+   #74 = Utf8               ,\n+   #75 = String             #76           // )\n+   #76 = Utf8               )\n+   #77 = Methodref          #61.#78       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #78 = NameAndType        #79:#80       // toString:()Ljava/lang/String;\n+   #79 = Utf8               toString\n+   #80 = Utf8               ()Ljava/lang/String;\n+   #81 = Class              #82           // org/apache/bcel/Const\n+   #82 = Utf8               org/apache/bcel/Const\n+   #83 = Methodref          #84.#85       // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+   #84 = Class              #86           // org/apache/bcel/classfile/ConstantPool\n+   #85 = NameAndType        #87:#88       // getConstantString:(IB)Ljava/lang/String;\n+   #86 = Utf8               org/apache/bcel/classfile/ConstantPool\n+   #87 = Utf8               getConstantString\n+   #88 = Utf8               (IB)Ljava/lang/String;\n+   #89 = Methodref          #90.#91       // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #90 = Class              #92           // org/apache/bcel/classfile/Utility\n+   #91 = NameAndType        #93:#94       // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #92 = Utf8               org/apache/bcel/classfile/Utility\n+   #93 = Utf8               compactClassName\n+   #94 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+   #95 = String             #96           //  of class\n+   #96 = Utf8                of class\n+   #97 = String             #98           //\n+   #98 = Utf8\n+   #99 = Methodref          #84.#100      // org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #100 = NameAndType        #101:#102     // getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #101 = Utf8               getConstantUtf8\n+  #102 = Utf8               (I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #103 = Methodref          #104.#105     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+  #104 = Class              #106          // org/apache/bcel/classfile/ConstantUtf8\n+  #105 = NameAndType        #107:#80      // getBytes:()Ljava/lang/String;\n+  #106 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #107 = Utf8               getBytes\n+  #108 = String             #109          // (anonymous)\n+  #109 = Utf8               (anonymous)\n+  #110 = Methodref          #90.#111      // org/apache/bcel/classfile/Utility.accessToString:(IZ)Ljava/lang/String;\n+  #111 = NameAndType        #112:#113     // accessToString:(IZ)Ljava/lang/String;\n+  #112 = Utf8               accessToString\n+  #113 = Utf8               (IZ)Ljava/lang/String;\n+  #114 = Methodref          #115.#116     // java/lang/String.isEmpty:()Z\n+  #115 = Class              #117          // java/lang/String\n+  #116 = NameAndType        #118:#119     // isEmpty:()Z\n+  #117 = Utf8               java/lang/String\n+  #118 = Utf8               isEmpty\n+  #119 = Utf8               ()Z\n+  #120 = String             #121          //\n+  #121 = Utf8\n+  #122 = String             #123          //\n+  #123 = Utf8\n+  #124 = String             #125          // =class\n+  #125 = Utf8               =class\n+  #126 = Class              #127          // java/lang/Cloneable\n+  #127 = Utf8               java/lang/Cloneable\n+  #128 = Class              #129          // org/apache/bcel/classfile/Node\n+  #129 = Utf8               org/apache/bcel/classfile/Node\n+  #130 = Utf8               (Ljava/io/DataInput;)V\n+  #131 = Utf8               Code\n+  #132 = Utf8               LineNumberTable\n+  #133 = Utf8               Exceptions\n+  #134 = Class              #135          // java/io/IOException\n+  #135 = Utf8               java/io/IOException\n+  #136 = Utf8               accept\n+  #137 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #138 = Utf8               copy\n+  #139 = Utf8               ()Lorg/apache/bcel/classfile/InnerClass;\n+  #140 = Utf8               StackMapTable\n+  #141 = Utf8               dump\n+  #142 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #143 = Utf8               setInnerAccessFlags\n+  #144 = Utf8               setInnerClassIndex\n+  #145 = Utf8               setInnerNameIndex\n+  #146 = Utf8               setOuterClassIndex\n+  #147 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+  #148 = Utf8               SourceFile\n+  #149 = Utf8               InnerClass.java\n {\n   private int innerClassIndex;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int outerClassIndex;\n     descriptor: I\n@@ -184,61 +184,61 @@\n          2: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n          7: aload_1\n          8: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         13: aload_1\n         14: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         19: aload_1\n         20: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        25: invokespecial #2                  // Method \"<init>\":(IIII)V\n+        25: invokespecial #7                  // Method \"<init>\":(IIII)V\n         28: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 28\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.bcel.classfile.InnerClass(org.apache.bcel.classfile.InnerClass);\n     descriptor: (Lorg/apache/bcel/classfile/InnerClass;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #3                  // Method getInnerClassIndex:()I\n+         2: invokevirtual #13                 // Method getInnerClassIndex:()I\n          5: aload_1\n-         6: invokevirtual #4                  // Method getOuterClassIndex:()I\n+         6: invokevirtual #16                 // Method getOuterClassIndex:()I\n          9: aload_1\n-        10: invokevirtual #5                  // Method getInnerNameIndex:()I\n+        10: invokevirtual #19                 // Method getInnerNameIndex:()I\n         13: aload_1\n-        14: invokevirtual #6                  // Method getInnerAccessFlags:()I\n-        17: invokespecial #2                  // Method \"<init>\":(IIII)V\n+        14: invokevirtual #22                 // Method getInnerAccessFlags:()I\n+        17: invokespecial #7                  // Method \"<init>\":(IIII)V\n         20: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 20\n \n   public org.apache.bcel.classfile.InnerClass(int, int, int, int);\n     descriptor: (IIII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=5, args_size=5\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #25                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #8                  // Field innerClassIndex:I\n+         6: putfield      #30                 // Field innerClassIndex:I\n          9: aload_0\n         10: iload_2\n-        11: putfield      #9                  // Field outerClassIndex:I\n+        11: putfield      #34                 // Field outerClassIndex:I\n         14: aload_0\n         15: iload_3\n-        16: putfield      #10                 // Field innerNameIndex:I\n+        16: putfield      #37                 // Field innerNameIndex:I\n         19: aload_0\n         20: iload         4\n-        22: putfield      #11                 // Field innerAccessFlags:I\n+        22: putfield      #40                 // Field innerAccessFlags:I\n         25: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 4\n         line 63: 9\n         line 64: 14\n         line 65: 19\n@@ -247,28 +247,28 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #12,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitInnerClass:(Lorg/apache/bcel/classfile/InnerClass;)V\n+         2: invokeinterface #43,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitInnerClass:(Lorg/apache/bcel/classfile/InnerClass;)V\n          7: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 7\n \n   public org.apache.bcel.classfile.InnerClass copy();\n     descriptor: ()Lorg/apache/bcel/classfile/InnerClass;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #13                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #14                 // class org/apache/bcel/classfile/InnerClass\n+         1: invokevirtual #49                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #8                  // class org/apache/bcel/classfile/InnerClass\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n@@ -283,28 +283,28 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #8                  // Field innerClassIndex:I\n-         5: invokevirtual #16                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #30                 // Field innerClassIndex:I\n+         5: invokevirtual #55                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #9                  // Field outerClassIndex:I\n-        13: invokevirtual #16                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #34                 // Field outerClassIndex:I\n+        13: invokevirtual #55                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #10                 // Field innerNameIndex:I\n-        21: invokevirtual #16                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #37                 // Field innerNameIndex:I\n+        21: invokevirtual #55                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: aload_1\n         25: aload_0\n-        26: getfield      #11                 // Field innerAccessFlags:I\n-        29: invokevirtual #16                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        26: getfield      #40                 // Field innerAccessFlags:I\n+        29: invokevirtual #55                 // Method java/io/DataOutputStream.writeShort:(I)V\n         32: return\n       LineNumberTable:\n         line 98: 0\n         line 99: 8\n         line 100: 16\n         line 101: 24\n         line 102: 32\n@@ -313,224 +313,224 @@\n \n   public int getInnerAccessFlags();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field innerAccessFlags:I\n+         1: getfield      #40                 // Field innerAccessFlags:I\n          4: ireturn\n       LineNumberTable:\n         line 108: 0\n \n   public int getInnerClassIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field innerClassIndex:I\n+         1: getfield      #30                 // Field innerClassIndex:I\n          4: ireturn\n       LineNumberTable:\n         line 115: 0\n \n   public int getInnerNameIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field innerNameIndex:I\n+         1: getfield      #37                 // Field innerNameIndex:I\n          4: ireturn\n       LineNumberTable:\n         line 122: 0\n \n   public int getOuterClassIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field outerClassIndex:I\n+         1: getfield      #34                 // Field outerClassIndex:I\n          4: ireturn\n       LineNumberTable:\n         line 129: 0\n \n   public void setInnerAccessFlags(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #11                 // Field innerAccessFlags:I\n+         2: putfield      #40                 // Field innerAccessFlags:I\n          5: return\n       LineNumberTable:\n         line 136: 0\n         line 137: 5\n \n   public void setInnerClassIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field innerClassIndex:I\n+         2: putfield      #30                 // Field innerClassIndex:I\n          5: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 5\n \n   public void setInnerNameIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #10                 // Field innerNameIndex:I\n+         2: putfield      #37                 // Field innerNameIndex:I\n          5: return\n       LineNumberTable:\n         line 150: 0\n         line 151: 5\n \n   public void setOuterClassIndex(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #9                  // Field outerClassIndex:I\n+         2: putfield      #34                 // Field outerClassIndex:I\n          5: return\n       LineNumberTable:\n         line 157: 0\n         line 158: 5\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #61                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #19                 // String InnerClass(\n-         9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #64                 // String InnerClass(\n+         9: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: getfield      #8                  // Field innerClassIndex:I\n-        16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #22                 // String ,\n-        21: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: getfield      #30                 // Field innerClassIndex:I\n+        16: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        19: ldc           #73                 // String ,\n+        21: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: aload_0\n-        25: getfield      #9                  // Field outerClassIndex:I\n-        28: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        31: ldc           #22                 // String ,\n-        33: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: getfield      #34                 // Field outerClassIndex:I\n+        28: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        31: ldc           #73                 // String ,\n+        33: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: aload_0\n-        37: getfield      #10                 // Field innerNameIndex:I\n-        40: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        43: ldc           #22                 // String ,\n-        45: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: getfield      #37                 // Field innerNameIndex:I\n+        40: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        43: ldc           #73                 // String ,\n+        45: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         48: aload_0\n-        49: getfield      #11                 // Field innerAccessFlags:I\n-        52: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        55: ldc           #23                 // String )\n-        57: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        60: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        49: getfield      #40                 // Field innerAccessFlags:I\n+        52: invokevirtual #70                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        55: ldc           #75                 // String )\n+        57: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        60: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         63: areturn\n       LineNumberTable:\n         line 165: 0\n \n   public java.lang.String toString(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #8                  // Field innerClassIndex:I\n+         2: getfield      #30                 // Field innerClassIndex:I\n          5: bipush        7\n-         7: invokevirtual #26                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+         7: invokevirtual #83                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n         10: astore        4\n         12: aload         4\n         14: iconst_0\n-        15: invokestatic  #27                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        15: invokestatic  #89                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n         18: astore        4\n         20: aload_0\n-        21: getfield      #9                  // Field outerClassIndex:I\n+        21: getfield      #34                 // Field outerClassIndex:I\n         24: ifeq          65\n         27: aload_1\n         28: aload_0\n-        29: getfield      #9                  // Field outerClassIndex:I\n+        29: getfield      #34                 // Field outerClassIndex:I\n         32: bipush        7\n-        34: invokevirtual #26                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+        34: invokevirtual #83                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n         37: astore_2\n-        38: new           #17                 // class java/lang/StringBuilder\n+        38: new           #61                 // class java/lang/StringBuilder\n         41: dup\n-        42: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        45: ldc           #28                 // String  of class\n-        47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        45: ldc           #95                 // String  of class\n+        47: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         50: aload_2\n         51: iconst_0\n-        52: invokestatic  #27                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-        55: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        52: invokestatic  #89                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        55: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        58: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         61: astore_2\n         62: goto          68\n-        65: ldc           #29                 // String\n+        65: ldc           #97                 // String\n         67: astore_2\n         68: aload_0\n-        69: getfield      #10                 // Field innerNameIndex:I\n+        69: getfield      #37                 // Field innerNameIndex:I\n         72: ifeq          90\n         75: aload_1\n         76: aload_0\n-        77: getfield      #10                 // Field innerNameIndex:I\n-        80: invokevirtual #30                 // Method org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n-        83: invokevirtual #31                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+        77: getfield      #37                 // Field innerNameIndex:I\n+        80: invokevirtual #99                 // Method org/apache/bcel/classfile/ConstantPool.getConstantUtf8:(I)Lorg/apache/bcel/classfile/ConstantUtf8;\n+        83: invokevirtual #103                // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n         86: astore_3\n         87: goto          93\n-        90: ldc           #32                 // String (anonymous)\n+        90: ldc           #108                // String (anonymous)\n         92: astore_3\n         93: aload_0\n-        94: getfield      #11                 // Field innerAccessFlags:I\n+        94: getfield      #40                 // Field innerAccessFlags:I\n         97: iconst_1\n-        98: invokestatic  #33                 // Method org/apache/bcel/classfile/Utility.accessToString:(IZ)Ljava/lang/String;\n+        98: invokestatic  #110                // Method org/apache/bcel/classfile/Utility.accessToString:(IZ)Ljava/lang/String;\n        101: astore        5\n        103: aload         5\n-       105: invokevirtual #34                 // Method java/lang/String.isEmpty:()Z\n+       105: invokevirtual #114                // Method java/lang/String.isEmpty:()Z\n        108: ifeq          116\n-       111: ldc           #29                 // String\n+       111: ldc           #97                 // String\n        113: goto          136\n-       116: new           #17                 // class java/lang/StringBuilder\n+       116: new           #61                 // class java/lang/StringBuilder\n        119: dup\n-       120: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       120: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n        123: aload         5\n-       125: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       128: ldc           #35                 // String\n-       130: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       133: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       125: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       128: ldc           #120                // String\n+       130: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       133: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        136: astore        5\n-       138: new           #17                 // class java/lang/StringBuilder\n+       138: new           #61                 // class java/lang/StringBuilder\n        141: dup\n-       142: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       145: ldc           #36                 // String\n-       147: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       142: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       145: ldc           #122                // String\n+       147: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        150: aload         5\n-       152: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       152: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        155: aload_3\n-       156: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       159: ldc           #37                 // String =class\n-       161: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       156: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       159: ldc           #124                // String =class\n+       161: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        164: aload         4\n-       166: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       166: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        169: aload_2\n-       170: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       173: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       170: invokevirtual #66                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       173: invokevirtual #77                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        176: areturn\n       LineNumberTable:\n         line 174: 0\n         line 175: 12\n         line 176: 20\n         line 177: 27\n         line 178: 38\n"}]}
