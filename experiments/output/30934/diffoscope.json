{"diffoscope-json-version": 1, "source1": "first/FilterCollectionWriter.class", "source2": "second/FilterCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,207 +1,207 @@\n-  SHA-256 checksum c9c80d42222476f0425bf7afe990c8690d5766f6dbb95568389deb99506c0a3f\n+  SHA-256 checksum 3b05e3a02c78f1737198ee4153a01889bae302435ce4a3007e67bcaff40cb2db\n   Compiled from \"FilterCollectionWriter.java\"\n public class org.apache.commons.io.output.FilterCollectionWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #38                         // org/apache/commons/io/output/FilterCollectionWriter\n-  super_class: #14                        // java/io/Writer\n+  this_class: #14                         // org/apache/commons/io/output/FilterCollectionWriter\n+  super_class: #2                         // java/io/Writer\n   interfaces: 0, fields: 2, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #14.#109      // java/io/Writer.\"<init>\":()V\n-    #2 = Methodref          #110.#111     // java/util/Collections.emptyList:()Ljava/util/List;\n-    #3 = Fieldref           #38.#112      // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n-    #4 = Fieldref           #38.#113      // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n-    #5 = Methodref          #114.#115     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-    #6 = Class              #116          // java/util/ArrayList\n-    #7 = Methodref          #6.#109       // java/util/ArrayList.\"<init>\":()V\n-    #8 = Class              #117          // org/apache/commons/io/IOIndexedException\n-    #9 = Methodref          #8.#118       // org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-   #10 = InterfaceMethodref #74.#119      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #11 = InterfaceMethodref #53.#120      // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #12 = InterfaceMethodref #75.#121      // java/util/Iterator.hasNext:()Z\n-   #13 = InterfaceMethodref #75.#122      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #14 = Class              #123          // java/io/Writer\n-   #15 = Methodref          #14.#124      // java/io/Writer.append:(C)Ljava/io/Writer;\n-   #16 = Class              #125          // java/io/IOException\n-   #17 = Methodref          #38.#126      // org/apache/commons/io/output/FilterCollectionWriter.add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n-   #18 = Methodref          #38.#127      // org/apache/commons/io/output/FilterCollectionWriter.notEmpty:(Ljava/util/List;)Z\n-   #19 = Class              #128          // org/apache/commons/io/IOExceptionList\n-   #20 = String             #68           // append\n-   #21 = Methodref          #19.#129      // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-   #22 = Methodref          #14.#130      // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #23 = Methodref          #14.#131      // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #24 = Methodref          #14.#132      // java/io/Writer.close:()V\n-   #25 = String             #84           // close\n-   #26 = Methodref          #14.#133      // java/io/Writer.flush:()V\n-   #27 = String             #86           // flush\n-   #28 = InterfaceMethodref #74.#134      // java/util/List.isEmpty:()Z\n-   #29 = Methodref          #14.#135      // java/io/Writer.write:([C)V\n-   #30 = String             #90           // write\n-   #31 = Methodref          #14.#136      // java/io/Writer.write:([CII)V\n-   #32 = Methodref          #14.#137      // java/io/Writer.write:(I)V\n-   #33 = Methodref          #14.#138      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #34 = Methodref          #14.#139      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #35 = Methodref          #38.#124      // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-   #36 = Methodref          #38.#131      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #37 = Methodref          #38.#130      // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #38 = Class              #140          // org/apache/commons/io/output/FilterCollectionWriter\n-   #39 = Utf8               EMPTY_WRITERS\n-   #40 = Utf8               Ljava/util/Collection;\n-   #41 = Utf8               Signature\n-   #42 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n-   #43 = Utf8               writers\n-   #44 = Utf8               <init>\n-   #45 = Utf8               (Ljava/util/Collection;)V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               LocalVariableTable\n-   #49 = Utf8               this\n-   #50 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n-   #51 = Utf8               LocalVariableTypeTable\n-   #52 = Utf8               StackMapTable\n-   #53 = Class              #141          // java/util/Collection\n-   #54 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n-   #55 = Utf8               ([Ljava/io/Writer;)V\n-   #56 = Utf8               [Ljava/io/Writer;\n-   #57 = Class              #56           // \"[Ljava/io/Writer;\"\n-   #58 = Utf8               add\n-   #59 = Utf8               (Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n-   #60 = Utf8               causeList\n-   #61 = Utf8               Ljava/util/List;\n-   #62 = Utf8               i\n-   #63 = Utf8               I\n-   #64 = Utf8               e\n-   #65 = Utf8               Ljava/io/IOException;\n-   #66 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n-   #67 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n-   #68 = Utf8               append\n-   #69 = Utf8               (C)Ljava/io/Writer;\n-   #70 = Utf8               w\n-   #71 = Utf8               Ljava/io/Writer;\n-   #72 = Utf8               c\n-   #73 = Utf8               C\n-   #74 = Class              #142          // java/util/List\n-   #75 = Class              #143          // java/util/Iterator\n-   #76 = Utf8               Exceptions\n-   #77 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #78 = Utf8               csq\n-   #79 = Utf8               Ljava/lang/CharSequence;\n-   #80 = Class              #144          // java/lang/CharSequence\n-   #81 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #82 = Utf8               start\n-   #83 = Utf8               end\n-   #84 = Utf8               close\n-   #85 = Utf8               ()V\n-   #86 = Utf8               flush\n-   #87 = Utf8               notEmpty\n-   #88 = Utf8               (Ljava/util/List;)Z\n-   #89 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;)Z\n-   #90 = Utf8               write\n-   #91 = Utf8               ([C)V\n-   #92 = Utf8               cbuf\n-   #93 = Utf8               [C\n-   #94 = Class              #93           // \"[C\"\n-   #95 = Utf8               ([CII)V\n-   #96 = Utf8               off\n-   #97 = Utf8               len\n-   #98 = Utf8               (I)V\n-   #99 = Utf8               (Ljava/lang/String;)V\n-  #100 = Utf8               str\n-  #101 = Utf8               Ljava/lang/String;\n-  #102 = Class              #145          // java/lang/String\n-  #103 = Utf8               (Ljava/lang/String;II)V\n-  #104 = Utf8               (C)Ljava/lang/Appendable;\n-  #105 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #106 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #107 = Utf8               SourceFile\n-  #108 = Utf8               FilterCollectionWriter.java\n-  #109 = NameAndType        #44:#85       // \"<init>\":()V\n-  #110 = Class              #146          // java/util/Collections\n-  #111 = NameAndType        #147:#148     // emptyList:()Ljava/util/List;\n-  #112 = NameAndType        #39:#40       // EMPTY_WRITERS:Ljava/util/Collection;\n-  #113 = NameAndType        #43:#40       // writers:Ljava/util/Collection;\n-  #114 = Class              #149          // java/util/Arrays\n-  #115 = NameAndType        #150:#151     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #116 = Utf8               java/util/ArrayList\n-  #117 = Utf8               org/apache/commons/io/IOIndexedException\n-  #118 = NameAndType        #44:#152      // \"<init>\":(ILjava/lang/Throwable;)V\n-  #119 = NameAndType        #58:#153      // add:(Ljava/lang/Object;)Z\n-  #120 = NameAndType        #154:#155     // iterator:()Ljava/util/Iterator;\n-  #121 = NameAndType        #156:#157     // hasNext:()Z\n-  #122 = NameAndType        #158:#159     // next:()Ljava/lang/Object;\n-  #123 = Utf8               java/io/Writer\n-  #124 = NameAndType        #68:#69       // append:(C)Ljava/io/Writer;\n-  #125 = Utf8               java/io/IOException\n-  #126 = NameAndType        #58:#59       // add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n-  #127 = NameAndType        #87:#88       // notEmpty:(Ljava/util/List;)Z\n-  #128 = Utf8               org/apache/commons/io/IOExceptionList\n-  #129 = NameAndType        #44:#160      // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n-  #130 = NameAndType        #68:#77       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-  #131 = NameAndType        #68:#81       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-  #132 = NameAndType        #84:#85       // close:()V\n-  #133 = NameAndType        #86:#85       // flush:()V\n-  #134 = NameAndType        #161:#157     // isEmpty:()Z\n-  #135 = NameAndType        #90:#91       // write:([C)V\n-  #136 = NameAndType        #90:#95       // write:([CII)V\n-  #137 = NameAndType        #90:#98       // write:(I)V\n-  #138 = NameAndType        #90:#99       // write:(Ljava/lang/String;)V\n-  #139 = NameAndType        #90:#103      // write:(Ljava/lang/String;II)V\n-  #140 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n-  #141 = Utf8               java/util/Collection\n-  #142 = Utf8               java/util/List\n-  #143 = Utf8               java/util/Iterator\n+    #1 = Methodref          #2.#3         // java/io/Writer.\"<init>\":()V\n+    #2 = Class              #4            // java/io/Writer\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/io/Writer\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/util/Collections.emptyList:()Ljava/util/List;\n+    #8 = Class              #10           // java/util/Collections\n+    #9 = NameAndType        #11:#12       // emptyList:()Ljava/util/List;\n+   #10 = Utf8               java/util/Collections\n+   #11 = Utf8               emptyList\n+   #12 = Utf8               ()Ljava/util/List;\n+   #13 = Fieldref           #14.#15       // org/apache/commons/io/output/FilterCollectionWriter.EMPTY_WRITERS:Ljava/util/Collection;\n+   #14 = Class              #16           // org/apache/commons/io/output/FilterCollectionWriter\n+   #15 = NameAndType        #17:#18       // EMPTY_WRITERS:Ljava/util/Collection;\n+   #16 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n+   #17 = Utf8               EMPTY_WRITERS\n+   #18 = Utf8               Ljava/util/Collection;\n+   #19 = Fieldref           #14.#20       // org/apache/commons/io/output/FilterCollectionWriter.writers:Ljava/util/Collection;\n+   #20 = NameAndType        #21:#18       // writers:Ljava/util/Collection;\n+   #21 = Utf8               writers\n+   #22 = Methodref          #23.#24       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #23 = Class              #25           // java/util/Arrays\n+   #24 = NameAndType        #26:#27       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #25 = Utf8               java/util/Arrays\n+   #26 = Utf8               asList\n+   #27 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #28 = Class              #29           // java/util/ArrayList\n+   #29 = Utf8               java/util/ArrayList\n+   #30 = Methodref          #28.#3        // java/util/ArrayList.\"<init>\":()V\n+   #31 = Class              #32           // org/apache/commons/io/IOIndexedException\n+   #32 = Utf8               org/apache/commons/io/IOIndexedException\n+   #33 = Methodref          #31.#34       // org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+   #34 = NameAndType        #5:#35        // \"<init>\":(ILjava/lang/Throwable;)V\n+   #35 = Utf8               (ILjava/lang/Throwable;)V\n+   #36 = InterfaceMethodref #37.#38       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #37 = Class              #39           // java/util/List\n+   #38 = NameAndType        #40:#41       // add:(Ljava/lang/Object;)Z\n+   #39 = Utf8               java/util/List\n+   #40 = Utf8               add\n+   #41 = Utf8               (Ljava/lang/Object;)Z\n+   #42 = InterfaceMethodref #43.#44       // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #43 = Class              #45           // java/util/Collection\n+   #44 = NameAndType        #46:#47       // iterator:()Ljava/util/Iterator;\n+   #45 = Utf8               java/util/Collection\n+   #46 = Utf8               iterator\n+   #47 = Utf8               ()Ljava/util/Iterator;\n+   #48 = InterfaceMethodref #49.#50       // java/util/Iterator.hasNext:()Z\n+   #49 = Class              #51           // java/util/Iterator\n+   #50 = NameAndType        #52:#53       // hasNext:()Z\n+   #51 = Utf8               java/util/Iterator\n+   #52 = Utf8               hasNext\n+   #53 = Utf8               ()Z\n+   #54 = InterfaceMethodref #49.#55       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #55 = NameAndType        #56:#57       // next:()Ljava/lang/Object;\n+   #56 = Utf8               next\n+   #57 = Utf8               ()Ljava/lang/Object;\n+   #58 = Methodref          #2.#59        // java/io/Writer.append:(C)Ljava/io/Writer;\n+   #59 = NameAndType        #60:#61       // append:(C)Ljava/io/Writer;\n+   #60 = Utf8               append\n+   #61 = Utf8               (C)Ljava/io/Writer;\n+   #62 = Class              #63           // java/io/IOException\n+   #63 = Utf8               java/io/IOException\n+   #64 = Methodref          #14.#65       // org/apache/commons/io/output/FilterCollectionWriter.add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+   #65 = NameAndType        #40:#66       // add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+   #66 = Utf8               (Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+   #67 = Methodref          #14.#68       // org/apache/commons/io/output/FilterCollectionWriter.notEmpty:(Ljava/util/List;)Z\n+   #68 = NameAndType        #69:#70       // notEmpty:(Ljava/util/List;)Z\n+   #69 = Utf8               notEmpty\n+   #70 = Utf8               (Ljava/util/List;)Z\n+   #71 = Class              #72           // org/apache/commons/io/IOExceptionList\n+   #72 = Utf8               org/apache/commons/io/IOExceptionList\n+   #73 = String             #60           // append\n+   #74 = Methodref          #71.#75       // org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #75 = NameAndType        #5:#76        // \"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+   #76 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n+   #77 = Methodref          #2.#78        // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #78 = NameAndType        #60:#79       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #79 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #80 = Methodref          #2.#81        // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #81 = NameAndType        #60:#82       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #82 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #83 = Methodref          #2.#84        // java/io/Writer.close:()V\n+   #84 = NameAndType        #85:#6        // close:()V\n+   #85 = Utf8               close\n+   #86 = String             #85           // close\n+   #87 = Methodref          #2.#88        // java/io/Writer.flush:()V\n+   #88 = NameAndType        #89:#6        // flush:()V\n+   #89 = Utf8               flush\n+   #90 = String             #89           // flush\n+   #91 = InterfaceMethodref #37.#92       // java/util/List.isEmpty:()Z\n+   #92 = NameAndType        #93:#53       // isEmpty:()Z\n+   #93 = Utf8               isEmpty\n+   #94 = Methodref          #2.#95        // java/io/Writer.write:([C)V\n+   #95 = NameAndType        #96:#97       // write:([C)V\n+   #96 = Utf8               write\n+   #97 = Utf8               ([C)V\n+   #98 = String             #96           // write\n+   #99 = Methodref          #2.#100       // java/io/Writer.write:([CII)V\n+  #100 = NameAndType        #96:#101      // write:([CII)V\n+  #101 = Utf8               ([CII)V\n+  #102 = Methodref          #2.#103       // java/io/Writer.write:(I)V\n+  #103 = NameAndType        #96:#104      // write:(I)V\n+  #104 = Utf8               (I)V\n+  #105 = Methodref          #2.#106       // java/io/Writer.write:(Ljava/lang/String;)V\n+  #106 = NameAndType        #96:#107      // write:(Ljava/lang/String;)V\n+  #107 = Utf8               (Ljava/lang/String;)V\n+  #108 = Methodref          #2.#109       // java/io/Writer.write:(Ljava/lang/String;II)V\n+  #109 = NameAndType        #96:#110      // write:(Ljava/lang/String;II)V\n+  #110 = Utf8               (Ljava/lang/String;II)V\n+  #111 = Methodref          #14.#59       // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+  #112 = Methodref          #14.#81       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+  #113 = Methodref          #14.#78       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+  #114 = Utf8               Signature\n+  #115 = Utf8               Ljava/util/Collection<Ljava/io/Writer;>;\n+  #116 = Utf8               (Ljava/util/Collection;)V\n+  #117 = Utf8               Code\n+  #118 = Utf8               LineNumberTable\n+  #119 = Utf8               LocalVariableTable\n+  #120 = Utf8               this\n+  #121 = Utf8               Lorg/apache/commons/io/output/FilterCollectionWriter;\n+  #122 = Utf8               LocalVariableTypeTable\n+  #123 = Utf8               StackMapTable\n+  #124 = Utf8               (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+  #125 = Utf8               ([Ljava/io/Writer;)V\n+  #126 = Utf8               [Ljava/io/Writer;\n+  #127 = Class              #126          // \"[Ljava/io/Writer;\"\n+  #128 = Utf8               causeList\n+  #129 = Utf8               Ljava/util/List;\n+  #130 = Utf8               i\n+  #131 = Utf8               I\n+  #132 = Utf8               e\n+  #133 = Utf8               Ljava/io/IOException;\n+  #134 = Utf8               Ljava/util/List<Ljava/lang/Exception;>;\n+  #135 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n+  #136 = Utf8               w\n+  #137 = Utf8               Ljava/io/Writer;\n+  #138 = Utf8               c\n+  #139 = Utf8               C\n+  #140 = Utf8               Exceptions\n+  #141 = Utf8               csq\n+  #142 = Utf8               Ljava/lang/CharSequence;\n+  #143 = Class              #144          // java/lang/CharSequence\n   #144 = Utf8               java/lang/CharSequence\n-  #145 = Utf8               java/lang/String\n-  #146 = Utf8               java/util/Collections\n-  #147 = Utf8               emptyList\n-  #148 = Utf8               ()Ljava/util/List;\n-  #149 = Utf8               java/util/Arrays\n-  #150 = Utf8               asList\n-  #151 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #152 = Utf8               (ILjava/lang/Throwable;)V\n-  #153 = Utf8               (Ljava/lang/Object;)Z\n-  #154 = Utf8               iterator\n-  #155 = Utf8               ()Ljava/util/Iterator;\n-  #156 = Utf8               hasNext\n-  #157 = Utf8               ()Z\n-  #158 = Utf8               next\n-  #159 = Utf8               ()Ljava/lang/Object;\n-  #160 = Utf8               (Ljava/lang/String;Ljava/util/List;)V\n-  #161 = Utf8               isEmpty\n+  #145 = Utf8               start\n+  #146 = Utf8               end\n+  #147 = Utf8               (Ljava/util/List<Ljava/lang/Exception;>;)Z\n+  #148 = Utf8               cbuf\n+  #149 = Utf8               [C\n+  #150 = Class              #149          // \"[C\"\n+  #151 = Utf8               off\n+  #152 = Utf8               len\n+  #153 = Utf8               str\n+  #154 = Utf8               Ljava/lang/String;\n+  #155 = Class              #156          // java/lang/String\n+  #156 = Utf8               java/lang/String\n+  #157 = Utf8               (C)Ljava/lang/Appendable;\n+  #158 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #159 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #160 = Utf8               SourceFile\n+  #161 = Utf8               FilterCollectionWriter.java\n {\n   protected final java.util.Collection<java.io.Writer> EMPTY_WRITERS;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #42                          // Ljava/util/Collection<Ljava/io/Writer;>;\n+    Signature: #115                         // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected final java.util.Collection<java.io.Writer> writers;\n     descriptor: Ljava/util/Collection;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n-    Signature: #42                          // Ljava/util/Collection<Ljava/io/Writer;>;\n+    Signature: #115                         // Ljava/util/Collection<Ljava/io/Writer;>;\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.util.Collection<java.io.Writer>);\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         8: putfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+         5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         8: putfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         11: aload_0\n         12: aload_1\n         13: ifnonnull     23\n         16: aload_0\n-        17: getfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+        17: getfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         20: goto          24\n         23: aload_1\n-        24: putfield      #4                  // Field writers:Ljava/util/Collection;\n+        24: putfield      #19                 // Field writers:Ljava/util/Collection;\n         27: return\n       LineNumberTable:\n         line 63: 0\n         line 51: 4\n         line 64: 11\n         line 65: 27\n       LocalVariableTable:\n@@ -216,35 +216,35 @@\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n           stack = [ class org/apache/commons/io/output/FilterCollectionWriter, class java/util/Collection ]\n-    Signature: #54                          // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n+    Signature: #124                         // (Ljava/util/Collection<Ljava/io/Writer;>;)V\n \n   protected org.apache.commons.io.output.FilterCollectionWriter(java.io.Writer...);\n     descriptor: ([Ljava/io/Writer;)V\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n-         8: putfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+         5: invokestatic  #7                  // Method java/util/Collections.emptyList:()Ljava/util/List;\n+         8: putfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         11: aload_0\n         12: aload_1\n         13: ifnonnull     23\n         16: aload_0\n-        17: getfield      #3                  // Field EMPTY_WRITERS:Ljava/util/Collection;\n+        17: getfield      #13                 // Field EMPTY_WRITERS:Ljava/util/Collection;\n         20: goto          27\n         23: aload_1\n-        24: invokestatic  #5                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        27: putfield      #4                  // Field writers:Ljava/util/Collection;\n+        24: invokestatic  #22                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        27: putfield      #19                 // Field writers:Ljava/util/Collection;\n         30: return\n       LineNumberTable:\n         line 72: 0\n         line 51: 4\n         line 73: 11\n         line 74: 30\n       LocalVariableTable:\n@@ -264,25 +264,25 @@\n   private java.util.List<java.lang.Exception> add(java.util.List<java.lang.Exception>, int, java.io.IOException);\n     descriptor: (Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_1\n          1: ifnonnull     12\n-         4: new           #6                  // class java/util/ArrayList\n+         4: new           #28                 // class java/util/ArrayList\n          7: dup\n-         8: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n+         8: invokespecial #30                 // Method java/util/ArrayList.\"<init>\":()V\n         11: astore_1\n         12: aload_1\n-        13: new           #8                  // class org/apache/commons/io/IOIndexedException\n+        13: new           #31                 // class org/apache/commons/io/IOIndexedException\n         16: dup\n         17: iload_2\n         18: aload_3\n-        19: invokespecial #9                  // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n-        22: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        19: invokespecial #33                 // Method org/apache/commons/io/IOIndexedException.\"<init>\":(ILjava/lang/Throwable;)V\n+        22: invokeinterface #36,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         27: pop\n         28: aload_1\n         29: areturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 4\n         line 88: 12\n@@ -294,61 +294,61 @@\n             0      30     2     i   I\n             0      30     3     e   Ljava/io/IOException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      30     1 causeList   Ljava/util/List<Ljava/lang/Exception;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Signature: #67                          // (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n+    Signature: #135                         // (Ljava/util/List<Ljava/lang/Exception;>;ILjava/io/IOException;)Ljava/util/List<Ljava/lang/Exception;>;\n \n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore        4\n         15: aload         4\n-        17: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        17: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         22: ifeq          69\n         25: aload         4\n-        27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #14                 // class java/io/Writer\n+        27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #2                  // class java/io/Writer\n         35: astore        5\n         37: aload         5\n         39: ifnull        63\n         42: aload         5\n         44: iload_1\n-        45: invokevirtual #15                 // Method java/io/Writer.append:(C)Ljava/io/Writer;\n+        45: invokevirtual #58                 // Method java/io/Writer.append:(C)Ljava/io/Writer;\n         48: pop\n         49: goto          63\n         52: astore        6\n         54: aload_0\n         55: aload_2\n         56: iload_3\n         57: aload         6\n-        59: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        59: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         62: astore_2\n         63: iinc          3, 1\n         66: goto          15\n         69: aload_0\n         70: aload_2\n-        71: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        71: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         74: ifeq          88\n-        77: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        77: new           #71                 // class org/apache/commons/io/IOExceptionList\n         80: dup\n-        81: ldc           #20                 // String append\n+        81: ldc           #73                 // String append\n         83: aload_2\n-        84: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        84: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         87: athrow\n         88: aload_0\n         89: areturn\n       Exception table:\n          from    to  target type\n             42    49    52   Class java/io/IOException\n       LineNumberTable:\n@@ -397,49 +397,49 @@\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore        4\n         15: aload         4\n-        17: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        17: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         22: ifeq          69\n         25: aload         4\n-        27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #14                 // class java/io/Writer\n+        27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #2                  // class java/io/Writer\n         35: astore        5\n         37: aload         5\n         39: ifnull        63\n         42: aload         5\n         44: aload_1\n-        45: invokevirtual #22                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        45: invokevirtual #77                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         48: pop\n         49: goto          63\n         52: astore        6\n         54: aload_0\n         55: aload_2\n         56: iload_3\n         57: aload         6\n-        59: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        59: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         62: astore_2\n         63: iinc          3, 1\n         66: goto          15\n         69: aload_0\n         70: aload_2\n-        71: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        71: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         74: ifeq          88\n-        77: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        77: new           #71                 // class org/apache/commons/io/IOExceptionList\n         80: dup\n-        81: ldc           #20                 // String append\n+        81: ldc           #73                 // String append\n         83: aload_2\n-        84: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        84: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         87: athrow\n         88: aload_0\n         89: areturn\n       Exception table:\n          from    to  target type\n             42    49    52   Class java/io/IOException\n       LineNumberTable:\n@@ -488,51 +488,51 @@\n     Code:\n       stack=4, locals=9, args_size=4\n          0: aconst_null\n          1: astore        4\n          3: iconst_0\n          4: istore        5\n          6: aload_0\n-         7: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        10: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         7: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        10: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         15: astore        6\n         17: aload         6\n-        19: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        19: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         24: ifeq          76\n         27: aload         6\n-        29: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        34: checkcast     #14                 // class java/io/Writer\n+        29: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        34: checkcast     #2                  // class java/io/Writer\n         37: astore        7\n         39: aload         7\n         41: ifnull        70\n         44: aload         7\n         46: aload_1\n         47: iload_2\n         48: iload_3\n-        49: invokevirtual #23                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+        49: invokevirtual #80                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n         52: pop\n         53: goto          70\n         56: astore        8\n         58: aload_0\n         59: aload         4\n         61: iload         5\n         63: aload         8\n-        65: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        65: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         68: astore        4\n         70: iinc          5, 1\n         73: goto          17\n         76: aload_0\n         77: aload         4\n-        79: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        79: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         82: ifeq          97\n-        85: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        85: new           #71                 // class org/apache/commons/io/IOExceptionList\n         88: dup\n-        89: ldc           #20                 // String append\n+        89: ldc           #73                 // String append\n         91: aload         4\n-        93: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        93: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         96: athrow\n         97: aload_0\n         98: areturn\n       Exception table:\n          from    to  target type\n             44    53    56   Class java/io/IOException\n       LineNumberTable:\n@@ -583,47 +583,47 @@\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aconst_null\n          1: astore_1\n          2: iconst_0\n          3: istore_2\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore_3\n         14: aload_3\n-        15: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        15: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         20: ifeq          64\n         23: aload_3\n-        24: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        29: checkcast     #14                 // class java/io/Writer\n+        24: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        29: checkcast     #2                  // class java/io/Writer\n         32: astore        4\n         34: aload         4\n         36: ifnull        58\n         39: aload         4\n-        41: invokevirtual #24                 // Method java/io/Writer.close:()V\n+        41: invokevirtual #83                 // Method java/io/Writer.close:()V\n         44: goto          58\n         47: astore        5\n         49: aload_0\n         50: aload_1\n         51: iload_2\n         52: aload         5\n-        54: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        54: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         57: astore_1\n         58: iinc          2, 1\n         61: goto          14\n         64: aload_0\n         65: aload_1\n-        66: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        66: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         69: ifeq          83\n-        72: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        72: new           #71                 // class org/apache/commons/io/IOExceptionList\n         75: dup\n-        76: ldc           #25                 // String close\n+        76: ldc           #86                 // String close\n         78: aload_1\n-        79: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        79: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         82: athrow\n         83: return\n       Exception table:\n          from    to  target type\n             39    44    47   Class java/io/IOException\n       LineNumberTable:\n         line 155: 0\n@@ -670,47 +670,47 @@\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aconst_null\n          1: astore_1\n          2: iconst_0\n          3: istore_2\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore_3\n         14: aload_3\n-        15: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        15: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         20: ifeq          64\n         23: aload_3\n-        24: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        29: checkcast     #14                 // class java/io/Writer\n+        24: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        29: checkcast     #2                  // class java/io/Writer\n         32: astore        4\n         34: aload         4\n         36: ifnull        58\n         39: aload         4\n-        41: invokevirtual #26                 // Method java/io/Writer.flush:()V\n+        41: invokevirtual #87                 // Method java/io/Writer.flush:()V\n         44: goto          58\n         47: astore        5\n         49: aload_0\n         50: aload_1\n         51: iload_2\n         52: aload         5\n-        54: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        54: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         57: astore_1\n         58: iinc          2, 1\n         61: goto          14\n         64: aload_0\n         65: aload_1\n-        66: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        66: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         69: ifeq          83\n-        72: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        72: new           #71                 // class org/apache/commons/io/IOExceptionList\n         75: dup\n-        76: ldc           #27                 // String flush\n+        76: ldc           #90                 // String flush\n         78: aload_1\n-        79: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        79: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         82: athrow\n         83: return\n       Exception table:\n          from    to  target type\n             39    44    47   Class java/io/IOException\n       LineNumberTable:\n         line 180: 0\n@@ -755,15 +755,15 @@\n     descriptor: (Ljava/util/List;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        17\n          4: aload_1\n-         5: invokeinterface #28,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+         5: invokeinterface #91,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         10: ifne          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 205: 0\n@@ -774,60 +774,60 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      19     1 causeList   Ljava/util/List<Ljava/lang/Exception;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Signature: #89                          // (Ljava/util/List<Ljava/lang/Exception;>;)Z\n+    Signature: #147                         // (Ljava/util/List<Ljava/lang/Exception;>;)Z\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore        4\n         15: aload         4\n-        17: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        17: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         22: ifeq          68\n         25: aload         4\n-        27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #14                 // class java/io/Writer\n+        27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #2                  // class java/io/Writer\n         35: astore        5\n         37: aload         5\n         39: ifnull        62\n         42: aload         5\n         44: aload_1\n-        45: invokevirtual #29                 // Method java/io/Writer.write:([C)V\n+        45: invokevirtual #94                 // Method java/io/Writer.write:([C)V\n         48: goto          62\n         51: astore        6\n         53: aload_0\n         54: aload_2\n         55: iload_3\n         56: aload         6\n-        58: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        58: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         61: astore_2\n         62: iinc          3, 1\n         65: goto          15\n         68: aload_0\n         69: aload_2\n-        70: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        70: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         73: ifeq          87\n-        76: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        76: new           #71                 // class org/apache/commons/io/IOExceptionList\n         79: dup\n-        80: ldc           #30                 // String write\n+        80: ldc           #98                 // String write\n         82: aload_2\n-        83: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        83: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         86: athrow\n         87: return\n       Exception table:\n          from    to  target type\n             42    48    51   Class java/io/IOException\n       LineNumberTable:\n         line 210: 0\n@@ -875,50 +875,50 @@\n     Code:\n       stack=4, locals=9, args_size=4\n          0: aconst_null\n          1: astore        4\n          3: iconst_0\n          4: istore        5\n          6: aload_0\n-         7: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        10: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         7: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        10: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         15: astore        6\n         17: aload         6\n-        19: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        19: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         24: ifeq          75\n         27: aload         6\n-        29: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        34: checkcast     #14                 // class java/io/Writer\n+        29: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        34: checkcast     #2                  // class java/io/Writer\n         37: astore        7\n         39: aload         7\n         41: ifnull        69\n         44: aload         7\n         46: aload_1\n         47: iload_2\n         48: iload_3\n-        49: invokevirtual #31                 // Method java/io/Writer.write:([CII)V\n+        49: invokevirtual #99                 // Method java/io/Writer.write:([CII)V\n         52: goto          69\n         55: astore        8\n         57: aload_0\n         58: aload         4\n         60: iload         5\n         62: aload         8\n-        64: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        64: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         67: astore        4\n         69: iinc          5, 1\n         72: goto          17\n         75: aload_0\n         76: aload         4\n-        78: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        78: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         81: ifeq          96\n-        84: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        84: new           #71                 // class org/apache/commons/io/IOExceptionList\n         87: dup\n-        88: ldc           #30                 // String write\n+        88: ldc           #98                 // String write\n         90: aload         4\n-        92: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        92: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         95: athrow\n         96: return\n       Exception table:\n          from    to  target type\n             44    52    55   Class java/io/IOException\n       LineNumberTable:\n         line 238: 0\n@@ -968,48 +968,48 @@\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore        4\n         15: aload         4\n-        17: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        17: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         22: ifeq          68\n         25: aload         4\n-        27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #14                 // class java/io/Writer\n+        27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #2                  // class java/io/Writer\n         35: astore        5\n         37: aload         5\n         39: ifnull        62\n         42: aload         5\n         44: iload_1\n-        45: invokevirtual #32                 // Method java/io/Writer.write:(I)V\n+        45: invokevirtual #102                // Method java/io/Writer.write:(I)V\n         48: goto          62\n         51: astore        6\n         53: aload_0\n         54: aload_2\n         55: iload_3\n         56: aload         6\n-        58: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        58: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         61: astore_2\n         62: iinc          3, 1\n         65: goto          15\n         68: aload_0\n         69: aload_2\n-        70: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        70: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         73: ifeq          87\n-        76: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        76: new           #71                 // class org/apache/commons/io/IOExceptionList\n         79: dup\n-        80: ldc           #30                 // String write\n+        80: ldc           #98                 // String write\n         82: aload_2\n-        83: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        83: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         86: athrow\n         87: return\n       Exception table:\n          from    to  target type\n             42    48    51   Class java/io/IOException\n       LineNumberTable:\n         line 262: 0\n@@ -1057,48 +1057,48 @@\n     Code:\n       stack=4, locals=7, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: iconst_0\n          3: istore_3\n          4: aload_0\n-         5: getfield      #4                  // Field writers:Ljava/util/Collection;\n-         8: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         5: getfield      #19                 // Field writers:Ljava/util/Collection;\n+         8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         13: astore        4\n         15: aload         4\n-        17: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        17: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         22: ifeq          68\n         25: aload         4\n-        27: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        32: checkcast     #14                 // class java/io/Writer\n+        27: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        32: checkcast     #2                  // class java/io/Writer\n         35: astore        5\n         37: aload         5\n         39: ifnull        62\n         42: aload         5\n         44: aload_1\n-        45: invokevirtual #33                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        45: invokevirtual #105                // Method java/io/Writer.write:(Ljava/lang/String;)V\n         48: goto          62\n         51: astore        6\n         53: aload_0\n         54: aload_2\n         55: iload_3\n         56: aload         6\n-        58: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        58: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         61: astore_2\n         62: iinc          3, 1\n         65: goto          15\n         68: aload_0\n         69: aload_2\n-        70: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        70: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         73: ifeq          87\n-        76: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        76: new           #71                 // class org/apache/commons/io/IOExceptionList\n         79: dup\n-        80: ldc           #30                 // String write\n+        80: ldc           #98                 // String write\n         82: aload_2\n-        83: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        83: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         86: athrow\n         87: return\n       Exception table:\n          from    to  target type\n             42    48    51   Class java/io/IOException\n       LineNumberTable:\n         line 281: 0\n@@ -1146,50 +1146,50 @@\n     Code:\n       stack=4, locals=9, args_size=4\n          0: aconst_null\n          1: astore        4\n          3: iconst_0\n          4: istore        5\n          6: aload_0\n-         7: getfield      #4                  // Field writers:Ljava/util/Collection;\n-        10: invokeinterface #11,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         7: getfield      #19                 // Field writers:Ljava/util/Collection;\n+        10: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         15: astore        6\n         17: aload         6\n-        19: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        19: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         24: ifeq          75\n         27: aload         6\n-        29: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        34: checkcast     #14                 // class java/io/Writer\n+        29: invokeinterface #54,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        34: checkcast     #2                  // class java/io/Writer\n         37: astore        7\n         39: aload         7\n         41: ifnull        69\n         44: aload         7\n         46: aload_1\n         47: iload_2\n         48: iload_3\n-        49: invokevirtual #34                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+        49: invokevirtual #108                // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         52: goto          69\n         55: astore        8\n         57: aload_0\n         58: aload         4\n         60: iload         5\n         62: aload         8\n-        64: invokespecial #17                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n+        64: invokespecial #64                 // Method add:(Ljava/util/List;ILjava/io/IOException;)Ljava/util/List;\n         67: astore        4\n         69: iinc          5, 1\n         72: goto          17\n         75: aload_0\n         76: aload         4\n-        78: invokespecial #18                 // Method notEmpty:(Ljava/util/List;)Z\n+        78: invokespecial #67                 // Method notEmpty:(Ljava/util/List;)Z\n         81: ifeq          96\n-        84: new           #19                 // class org/apache/commons/io/IOExceptionList\n+        84: new           #71                 // class org/apache/commons/io/IOExceptionList\n         87: dup\n-        88: ldc           #30                 // String write\n+        88: ldc           #98                 // String write\n         90: aload         4\n-        92: invokespecial #21                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n+        92: invokespecial #74                 // Method org/apache/commons/io/IOExceptionList.\"<init>\":(Ljava/lang/String;Ljava/util/List;)V\n         95: athrow\n         96: return\n       Exception table:\n          from    to  target type\n             44    52    55   Class java/io/IOException\n       LineNumberTable:\n         line 310: 0\n@@ -1236,15 +1236,15 @@\n   public java.lang.Appendable append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #35                 // Method append:(C)Ljava/io/Writer;\n+         2: invokevirtual #111                // Method append:(C)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 46: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Exceptions:\n@@ -1255,15 +1255,15 @@\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #36                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #112                // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n         line 46: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Exceptions:\n@@ -1272,15 +1272,15 @@\n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #37                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #113                // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 46: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/FilterCollectionWriter;\n     Exceptions:\n"}]}
