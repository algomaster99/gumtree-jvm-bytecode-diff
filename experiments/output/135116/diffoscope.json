{"diffoscope-json-version": 1, "source1": "first/ControlFlowGraph.class", "source2": "second/ControlFlowGraph.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,17 +17,18 @@\n         this(method_gen, true);\n     }\n     \n     public ControlFlowGraph(final MethodGen method_gen, final boolean enableJustIceCheck) {\n         this.instructionContexts = new HashMap<InstructionHandle, InstructionContext>();\n         this.subroutines = new Subroutines(method_gen, enableJustIceCheck);\n         this.exceptionhandlers = new ExceptionHandlers(method_gen);\n-        final InstructionHandle[] instructionHandles;\n-        final InstructionHandle[] instructionhandles = instructionHandles = method_gen.getInstructionList().getInstructionHandles();\n-        for (final InstructionHandle instructionhandle : instructionHandles) {\n+        final InstructionHandle[] instructionhandles = method_gen.getInstructionList().getInstructionHandles();\n+        InstructionHandle[] array;\n+        for (int length = (array = instructionhandles).length, i = 0; i < length; ++i) {\n+            final InstructionHandle instructionhandle = array[i];\n             this.instructionContexts.put(instructionhandle, (InstructionContext)new ControlFlowGraph.InstructionContextImpl(this, instructionhandle));\n         }\n     }\n     \n     public InstructionContext contextOf(final InstructionHandle inst) {\n         final InstructionContext ic = (InstructionContext)this.instructionContexts.get(inst);\n         if (ic == null) {\n"}]}
