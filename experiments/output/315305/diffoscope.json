{"diffoscope-json-version": 1, "source1": "first/CanReadFileFilter.class", "source2": "second/CanReadFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,70 +1,70 @@\n-  SHA-256 checksum 14490d69e8080de06793abb7f82107a3f3f6d8a924904416e823879e48bde35d\n+  SHA-256 checksum 7f730ba1679bd1dc24e910674cfa2eaa033432fc731a1c59517f012d0bb772b0\n   Compiled from \"CanReadFileFilter.java\"\n public class org.apache.commons.io.filefilter.CanReadFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/io/filefilter/CanReadFileFilter\n-  super_class: #13                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #13                         // org/apache/commons/io/filefilter/CanReadFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 4, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#33        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Methodref          #34.#35        // java/io/File.canRead:()Z\n-   #3 = Class              #36            // org/apache/commons/io/filefilter/CanReadFileFilter\n-   #4 = Methodref          #3.#33         // org/apache/commons/io/filefilter/CanReadFileFilter.\"<init>\":()V\n-   #5 = Fieldref           #3.#37         // org/apache/commons/io/filefilter/CanReadFileFilter.CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #6 = Class              #38            // org/apache/commons/io/filefilter/NotFileFilter\n-   #7 = Methodref          #6.#39         // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #8 = Fieldref           #3.#40         // org/apache/commons/io/filefilter/CanReadFileFilter.CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #9 = Class              #41            // org/apache/commons/io/filefilter/AndFileFilter\n-  #10 = Fieldref           #42.#43        // org/apache/commons/io/filefilter/CanWriteFileFilter.CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #11 = Methodref          #9.#44         // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #12 = Fieldref           #3.#45         // org/apache/commons/io/filefilter/CanReadFileFilter.READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #13 = Class              #46            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #14 = Class              #47            // java/io/Serializable\n-  #15 = Utf8               serialVersionUID\n-  #16 = Utf8               J\n-  #17 = Utf8               ConstantValue\n-  #18 = Long               3179904805251622989l\n-  #20 = Utf8               CAN_READ\n-  #21 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #22 = Utf8               CANNOT_READ\n-  #23 = Utf8               READ_ONLY\n-  #24 = Utf8               <init>\n-  #25 = Utf8               ()V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               accept\n-  #29 = Utf8               (Ljava/io/File;)Z\n-  #30 = Utf8               <clinit>\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               CanReadFileFilter.java\n-  #33 = NameAndType        #24:#25        // \"<init>\":()V\n-  #34 = Class              #48            // java/io/File\n-  #35 = NameAndType        #49:#50        // canRead:()Z\n-  #36 = Utf8               org/apache/commons/io/filefilter/CanReadFileFilter\n-  #37 = NameAndType        #20:#21        // CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #38 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #39 = NameAndType        #24:#51        // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #40 = NameAndType        #22:#21        // CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #41 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #42 = Class              #52            // org/apache/commons/io/filefilter/CanWriteFileFilter\n-  #43 = NameAndType        #53:#21        // CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #44 = NameAndType        #24:#54        // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #45 = NameAndType        #23:#21        // READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #46 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #47 = Utf8               java/io/Serializable\n-  #48 = Utf8               java/io/File\n-  #49 = Utf8               canRead\n-  #50 = Utf8               ()Z\n-  #51 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #52 = Utf8               org/apache/commons/io/filefilter/CanWriteFileFilter\n-  #53 = Utf8               CANNOT_WRITE\n-  #54 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#9          // java/io/File.canRead:()Z\n+   #8 = Class              #10            // java/io/File\n+   #9 = NameAndType        #11:#12        // canRead:()Z\n+  #10 = Utf8               java/io/File\n+  #11 = Utf8               canRead\n+  #12 = Utf8               ()Z\n+  #13 = Class              #14            // org/apache/commons/io/filefilter/CanReadFileFilter\n+  #14 = Utf8               org/apache/commons/io/filefilter/CanReadFileFilter\n+  #15 = Methodref          #13.#3         // org/apache/commons/io/filefilter/CanReadFileFilter.\"<init>\":()V\n+  #16 = Fieldref           #13.#17        // org/apache/commons/io/filefilter/CanReadFileFilter.CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #17 = NameAndType        #18:#19        // CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #18 = Utf8               CAN_READ\n+  #19 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #20 = Class              #21            // org/apache/commons/io/filefilter/NotFileFilter\n+  #21 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+  #22 = Methodref          #20.#23        // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #23 = NameAndType        #5:#24         // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #24 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #25 = Fieldref           #13.#26        // org/apache/commons/io/filefilter/CanReadFileFilter.CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #26 = NameAndType        #27:#19        // CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #27 = Utf8               CANNOT_READ\n+  #28 = Class              #29            // org/apache/commons/io/filefilter/AndFileFilter\n+  #29 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+  #30 = Fieldref           #31.#32        // org/apache/commons/io/filefilter/CanWriteFileFilter.CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #31 = Class              #33            // org/apache/commons/io/filefilter/CanWriteFileFilter\n+  #32 = NameAndType        #34:#19        // CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #33 = Utf8               org/apache/commons/io/filefilter/CanWriteFileFilter\n+  #34 = Utf8               CANNOT_WRITE\n+  #35 = Methodref          #28.#36        // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #36 = NameAndType        #5:#37         // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #37 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #38 = Fieldref           #13.#39        // org/apache/commons/io/filefilter/CanReadFileFilter.READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #39 = NameAndType        #40:#19        // READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #40 = Utf8               READ_ONLY\n+  #41 = Class              #42            // java/io/Serializable\n+  #42 = Utf8               java/io/Serializable\n+  #43 = Utf8               serialVersionUID\n+  #44 = Utf8               J\n+  #45 = Utf8               ConstantValue\n+  #46 = Long               3179904805251622989l\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               accept\n+  #51 = Utf8               (Ljava/io/File;)Z\n+  #52 = Utf8               <clinit>\n+  #53 = Utf8               SourceFile\n+  #54 = Utf8               CanReadFileFilter.java\n {\n   private static final long serialVersionUID = 3179904805251622989l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 3179904805251622989l\n \n   public static final org.apache.commons.io.filefilter.IOFileFilter CAN_READ;\n@@ -93,39 +93,39 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #2                  // Method java/io/File.canRead:()Z\n+         1: invokevirtual #7                  // Method java/io/File.canRead:()Z\n          4: ireturn\n       LineNumberTable:\n         line 92: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n-         0: new           #3                  // class org/apache/commons/io/filefilter/CanReadFileFilter\n+         0: new           #13                 // class org/apache/commons/io/filefilter/CanReadFileFilter\n          3: dup\n-         4: invokespecial #4                  // Method \"<init>\":()V\n-         7: putstatic     #5                  // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        10: new           #6                  // class org/apache/commons/io/filefilter/NotFileFilter\n+         4: invokespecial #15                 // Method \"<init>\":()V\n+         7: putstatic     #16                 // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        10: new           #20                 // class org/apache/commons/io/filefilter/NotFileFilter\n         13: dup\n-        14: getstatic     #5                  // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        17: invokespecial #7                  // Method org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-        20: putstatic     #8                  // Field CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        23: new           #9                  // class org/apache/commons/io/filefilter/AndFileFilter\n+        14: getstatic     #16                 // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        17: invokespecial #22                 // Method org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        20: putstatic     #25                 // Field CANNOT_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        23: new           #28                 // class org/apache/commons/io/filefilter/AndFileFilter\n         26: dup\n-        27: getstatic     #5                  // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        30: getstatic     #10                 // Field org/apache/commons/io/filefilter/CanWriteFileFilter.CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        33: invokespecial #11                 // Method org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-        36: putstatic     #12                 // Field READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        27: getstatic     #16                 // Field CAN_READ:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        30: getstatic     #30                 // Field org/apache/commons/io/filefilter/CanWriteFileFilter.CANNOT_WRITE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        33: invokespecial #35                 // Method org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+        36: putstatic     #38                 // Field READ_ONLY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         39: return\n       LineNumberTable:\n         line 68: 0\n         line 71: 10\n         line 74: 23\n }\n SourceFile: \"CanReadFileFilter.java\"\n"}]}
