{"diffoscope-json-version": 1, "source1": "first/ModularRuntimeImage.class", "source2": "second/ModularRuntimeImage.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,218 +1,218 @@\n-  SHA-256 checksum bf1f8e0d96db9e68ba2c37a69e874ffbd3b8a7cbc9dc28a620ad06850acc162e\n+  SHA-256 checksum d8b47404ef85ed1f508b67a8c04178bab8ec9652dc81c0e684b9c470dd77b5f3\n   Compiled from \"ModularRuntimeImage.java\"\n public class org.apache.bcel.util.ModularRuntimeImage implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #42                         // org/apache/bcel/util/ModularRuntimeImage\n-  super_class: #43                        // java/lang/Object\n+  this_class: #16                         // org/apache/bcel/util/ModularRuntimeImage\n+  super_class: #22                        // java/lang/Object\n   interfaces: 1, fields: 4, methods: 10, attributes: 3\n Constant pool:\n-    #1 = String             #86           // jrt:/\n-    #2 = Methodref          #87.#88       // java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;\n-    #3 = Methodref          #89.#90       // java/nio/file/FileSystems.getFileSystem:(Ljava/net/URI;)Ljava/nio/file/FileSystem;\n-    #4 = Methodref          #42.#91       // org/apache/bcel/util/ModularRuntimeImage.\"<init>\":(Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n-    #5 = Methodref          #43.#92       // java/lang/Object.\"<init>\":()V\n-    #6 = Methodref          #93.#94       // java/util/Collections.emptyMap:()Ljava/util/Map;\n-    #7 = Class              #95           // java/lang/String\n-    #8 = Methodref          #96.#97       // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-    #9 = String             #98           // lib\n-   #10 = InterfaceMethodref #70.#99       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #11 = String             #100          // jrt-fs.jar\n-   #12 = Class              #101          // java/net/URL\n-   #13 = InterfaceMethodref #70.#102      // java/nio/file/Path.toUri:()Ljava/net/URI;\n-   #14 = Methodref          #87.#103      // java/net/URI.toURL:()Ljava/net/URL;\n-   #15 = Methodref          #104.#105     // java/net/URLClassLoader.newInstance:([Ljava/net/URL;)Ljava/net/URLClassLoader;\n-   #16 = Fieldref           #42.#106      // org/apache/bcel/util/ModularRuntimeImage.classLoader:Ljava/net/URLClassLoader;\n-   #17 = Methodref          #89.#107      // java/nio/file/FileSystems.newFileSystem:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n-   #18 = Fieldref           #42.#108      // org/apache/bcel/util/ModularRuntimeImage.fileSystem:Ljava/nio/file/FileSystem;\n-   #19 = Methodref          #104.#109     // java/net/URLClassLoader.close:()V\n-   #20 = Methodref          #110.#109     // java/nio/file/FileSystem.close:()V\n-   #21 = Class              #111          // java/util/ArrayList\n-   #22 = Methodref          #21.#92       // java/util/ArrayList.\"<init>\":()V\n-   #23 = Methodref          #112.#113     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-   #24 = Methodref          #114.#115     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #25 = InvokeDynamic      #0:#121       // #0:accept:(Ljava/util/List;)Ljava/util/function/Consumer;\n-   #26 = InterfaceMethodref #72.#122      // java/nio/file/DirectoryStream.forEach:(Ljava/util/function/Consumer;)V\n-   #27 = InterfaceMethodref #72.#109      // java/nio/file/DirectoryStream.close:()V\n-   #28 = Class              #123          // java/lang/Throwable\n-   #29 = Methodref          #28.#124      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #30 = Methodref          #110.#125     // java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-   #31 = Methodref          #42.#126      // org/apache/bcel/util/ModularRuntimeImage.list:(Ljava/nio/file/Path;)Ljava/util/List;\n-   #32 = Fieldref           #42.#127      // org/apache/bcel/util/ModularRuntimeImage.MODULES_PATH:Ljava/lang/String;\n-   #33 = Methodref          #42.#128      // org/apache/bcel/util/ModularRuntimeImage.list:(Ljava/lang/String;)Ljava/util/List;\n-   #34 = Fieldref           #42.#129      // org/apache/bcel/util/ModularRuntimeImage.PACKAGES_PATH:Ljava/lang/String;\n-   #35 = Class              #130          // java/lang/StringBuilder\n-   #36 = Methodref          #35.#92       // java/lang/StringBuilder.\"<init>\":()V\n-   #37 = Fieldref           #131.#132     // java/io/File.separator:Ljava/lang/String;\n-   #38 = Methodref          #35.#133      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #39 = String             #79           // modules\n-   #40 = Methodref          #35.#134      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #41 = String             #82           // packages\n-   #42 = Class              #135          // org/apache/bcel/util/ModularRuntimeImage\n-   #43 = Class              #136          // java/lang/Object\n-   #44 = Class              #137          // java/io/Closeable\n-   #45 = Utf8               MODULES_PATH\n-   #46 = Utf8               Ljava/lang/String;\n-   #47 = Utf8               PACKAGES_PATH\n-   #48 = Utf8               classLoader\n-   #49 = Utf8               Ljava/net/URLClassLoader;\n-   #50 = Utf8               fileSystem\n-   #51 = Utf8               Ljava/nio/file/FileSystem;\n-   #52 = Utf8               <init>\n-   #53 = Utf8               ()V\n-   #54 = Utf8               Code\n-   #55 = Utf8               LineNumberTable\n-   #56 = Utf8               (Ljava/lang/String;)V\n-   #57 = Utf8               Exceptions\n-   #58 = Class              #138          // java/io/IOException\n-   #59 = Utf8               MethodParameters\n-   #60 = Utf8               javaHome\n-   #61 = Utf8               (Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n-   #62 = Utf8               cl\n-   #63 = Utf8               fs\n-   #64 = Utf8               close\n-   #65 = Utf8               StackMapTable\n-   #66 = Utf8               getFileSystem\n-   #67 = Utf8               ()Ljava/nio/file/FileSystem;\n-   #68 = Utf8               list\n-   #69 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;\n-   #70 = Class              #139          // java/nio/file/Path\n-   #71 = Class              #140          // java/util/List\n-   #72 = Class              #141          // java/nio/file/DirectoryStream\n-   #73 = Utf8               dirPath\n-   #74 = Utf8               Signature\n-   #75 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #76 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n-   #77 = Utf8               dirName\n-   #78 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #79 = Utf8               modules\n-   #80 = Utf8               ()Ljava/util/List;\n-   #81 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n-   #82 = Utf8               packages\n-   #83 = Utf8               <clinit>\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               ModularRuntimeImage.java\n-   #86 = Utf8               jrt:/\n-   #87 = Class              #142          // java/net/URI\n-   #88 = NameAndType        #143:#144     // create:(Ljava/lang/String;)Ljava/net/URI;\n-   #89 = Class              #145          // java/nio/file/FileSystems\n-   #90 = NameAndType        #66:#146      // getFileSystem:(Ljava/net/URI;)Ljava/nio/file/FileSystem;\n-   #91 = NameAndType        #52:#61       // \"<init>\":(Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n-   #92 = NameAndType        #52:#53       // \"<init>\":()V\n-   #93 = Class              #147          // java/util/Collections\n-   #94 = NameAndType        #148:#149     // emptyMap:()Ljava/util/Map;\n-   #95 = Utf8               java/lang/String\n-   #96 = Class              #150          // java/nio/file/Paths\n-   #97 = NameAndType        #151:#152     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-   #98 = Utf8               lib\n-   #99 = NameAndType        #153:#154     // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-  #100 = Utf8               jrt-fs.jar\n-  #101 = Utf8               java/net/URL\n-  #102 = NameAndType        #155:#156     // toUri:()Ljava/net/URI;\n-  #103 = NameAndType        #157:#158     // toURL:()Ljava/net/URL;\n-  #104 = Class              #159          // java/net/URLClassLoader\n-  #105 = NameAndType        #160:#161     // newInstance:([Ljava/net/URL;)Ljava/net/URLClassLoader;\n-  #106 = NameAndType        #48:#49       // classLoader:Ljava/net/URLClassLoader;\n-  #107 = NameAndType        #162:#163     // newFileSystem:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n-  #108 = NameAndType        #50:#51       // fileSystem:Ljava/nio/file/FileSystem;\n-  #109 = NameAndType        #64:#53       // close:()V\n-  #110 = Class              #164          // java/nio/file/FileSystem\n-  #111 = Utf8               java/util/ArrayList\n-  #112 = Class              #165          // java/nio/file/Files\n-  #113 = NameAndType        #166:#167     // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #114 = Class              #168          // java/util/Objects\n-  #115 = NameAndType        #169:#170     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #116 = Utf8               BootstrapMethods\n-  #117 = MethodHandle       6:#171        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #118 = MethodType         #172          //  (Ljava/lang/Object;)V\n-  #119 = MethodHandle       9:#173        // REF_invokeInterface java/util/List.add:(Ljava/lang/Object;)Z\n-  #120 = MethodType         #174          //  (Ljava/nio/file/Path;)V\n-  #121 = NameAndType        #175:#176     // accept:(Ljava/util/List;)Ljava/util/function/Consumer;\n-  #122 = NameAndType        #177:#178     // forEach:(Ljava/util/function/Consumer;)V\n-  #123 = Utf8               java/lang/Throwable\n-  #124 = NameAndType        #179:#180     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #125 = NameAndType        #181:#152     // getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #126 = NameAndType        #68:#69       // list:(Ljava/nio/file/Path;)Ljava/util/List;\n-  #127 = NameAndType        #45:#46       // MODULES_PATH:Ljava/lang/String;\n-  #128 = NameAndType        #68:#76       // list:(Ljava/lang/String;)Ljava/util/List;\n-  #129 = NameAndType        #47:#46       // PACKAGES_PATH:Ljava/lang/String;\n-  #130 = Utf8               java/lang/StringBuilder\n-  #131 = Class              #182          // java/io/File\n-  #132 = NameAndType        #183:#46      // separator:Ljava/lang/String;\n-  #133 = NameAndType        #184:#185     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #134 = NameAndType        #186:#187     // toString:()Ljava/lang/String;\n-  #135 = Utf8               org/apache/bcel/util/ModularRuntimeImage\n-  #136 = Utf8               java/lang/Object\n-  #137 = Utf8               java/io/Closeable\n-  #138 = Utf8               java/io/IOException\n-  #139 = Utf8               java/nio/file/Path\n-  #140 = Utf8               java/util/List\n-  #141 = Utf8               java/nio/file/DirectoryStream\n-  #142 = Utf8               java/net/URI\n-  #143 = Utf8               create\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/net/URI;\n-  #145 = Utf8               java/nio/file/FileSystems\n-  #146 = Utf8               (Ljava/net/URI;)Ljava/nio/file/FileSystem;\n-  #147 = Utf8               java/util/Collections\n-  #148 = Utf8               emptyMap\n-  #149 = Utf8               ()Ljava/util/Map;\n-  #150 = Utf8               java/nio/file/Paths\n-  #151 = Utf8               get\n-  #152 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-  #153 = Utf8               resolve\n-  #154 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-  #155 = Utf8               toUri\n-  #156 = Utf8               ()Ljava/net/URI;\n-  #157 = Utf8               toURL\n-  #158 = Utf8               ()Ljava/net/URL;\n-  #159 = Utf8               java/net/URLClassLoader\n-  #160 = Utf8               newInstance\n-  #161 = Utf8               ([Ljava/net/URL;)Ljava/net/URLClassLoader;\n-  #162 = Utf8               newFileSystem\n-  #163 = Utf8               (Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n-  #164 = Utf8               java/nio/file/FileSystem\n-  #165 = Utf8               java/nio/file/Files\n-  #166 = Utf8               newDirectoryStream\n-  #167 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #168 = Utf8               java/util/Objects\n-  #169 = Utf8               requireNonNull\n-  #170 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #171 = Methodref          #188.#189     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #172 = Utf8               (Ljava/lang/Object;)V\n-  #173 = InterfaceMethodref #71.#190      // java/util/List.add:(Ljava/lang/Object;)Z\n-  #174 = Utf8               (Ljava/nio/file/Path;)V\n-  #175 = Utf8               accept\n-  #176 = Utf8               (Ljava/util/List;)Ljava/util/function/Consumer;\n-  #177 = Utf8               forEach\n-  #178 = Utf8               (Ljava/util/function/Consumer;)V\n-  #179 = Utf8               addSuppressed\n-  #180 = Utf8               (Ljava/lang/Throwable;)V\n-  #181 = Utf8               getPath\n-  #182 = Utf8               java/io/File\n-  #183 = Utf8               separator\n-  #184 = Utf8               append\n-  #185 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #186 = Utf8               toString\n-  #187 = Utf8               ()Ljava/lang/String;\n-  #188 = Class              #191          // java/lang/invoke/LambdaMetafactory\n-  #189 = NameAndType        #192:#196     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #190 = NameAndType        #197:#198     // add:(Ljava/lang/Object;)Z\n-  #191 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #192 = Utf8               metafactory\n-  #193 = Class              #200          // java/lang/invoke/MethodHandles$Lookup\n-  #194 = Utf8               Lookup\n-  #195 = Utf8               InnerClasses\n-  #196 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #197 = Utf8               add\n-  #198 = Utf8               (Ljava/lang/Object;)Z\n-  #199 = Class              #201          // java/lang/invoke/MethodHandles\n-  #200 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #201 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = String             #2            // jrt:/\n+    #2 = Utf8               jrt:/\n+    #3 = Methodref          #4.#5         // java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;\n+    #4 = Class              #6            // java/net/URI\n+    #5 = NameAndType        #7:#8         // create:(Ljava/lang/String;)Ljava/net/URI;\n+    #6 = Utf8               java/net/URI\n+    #7 = Utf8               create\n+    #8 = Utf8               (Ljava/lang/String;)Ljava/net/URI;\n+    #9 = Methodref          #10.#11       // java/nio/file/FileSystems.getFileSystem:(Ljava/net/URI;)Ljava/nio/file/FileSystem;\n+   #10 = Class              #12           // java/nio/file/FileSystems\n+   #11 = NameAndType        #13:#14       // getFileSystem:(Ljava/net/URI;)Ljava/nio/file/FileSystem;\n+   #12 = Utf8               java/nio/file/FileSystems\n+   #13 = Utf8               getFileSystem\n+   #14 = Utf8               (Ljava/net/URI;)Ljava/nio/file/FileSystem;\n+   #15 = Methodref          #16.#17       // org/apache/bcel/util/ModularRuntimeImage.\"<init>\":(Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n+   #16 = Class              #18           // org/apache/bcel/util/ModularRuntimeImage\n+   #17 = NameAndType        #19:#20       // \"<init>\":(Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n+   #18 = Utf8               org/apache/bcel/util/ModularRuntimeImage\n+   #19 = Utf8               <init>\n+   #20 = Utf8               (Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n+   #21 = Methodref          #22.#23       // java/lang/Object.\"<init>\":()V\n+   #22 = Class              #24           // java/lang/Object\n+   #23 = NameAndType        #19:#25       // \"<init>\":()V\n+   #24 = Utf8               java/lang/Object\n+   #25 = Utf8               ()V\n+   #26 = Methodref          #27.#28       // java/util/Collections.emptyMap:()Ljava/util/Map;\n+   #27 = Class              #29           // java/util/Collections\n+   #28 = NameAndType        #30:#31       // emptyMap:()Ljava/util/Map;\n+   #29 = Utf8               java/util/Collections\n+   #30 = Utf8               emptyMap\n+   #31 = Utf8               ()Ljava/util/Map;\n+   #32 = Class              #33           // java/lang/String\n+   #33 = Utf8               java/lang/String\n+   #34 = Methodref          #35.#36       // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+   #35 = Class              #37           // java/nio/file/Paths\n+   #36 = NameAndType        #38:#39       // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+   #37 = Utf8               java/nio/file/Paths\n+   #38 = Utf8               get\n+   #39 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+   #40 = String             #41           // lib\n+   #41 = Utf8               lib\n+   #42 = InterfaceMethodref #43.#44       // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #43 = Class              #45           // java/nio/file/Path\n+   #44 = NameAndType        #46:#47       // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #45 = Utf8               java/nio/file/Path\n+   #46 = Utf8               resolve\n+   #47 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+   #48 = String             #49           // jrt-fs.jar\n+   #49 = Utf8               jrt-fs.jar\n+   #50 = Class              #51           // java/net/URL\n+   #51 = Utf8               java/net/URL\n+   #52 = InterfaceMethodref #43.#53       // java/nio/file/Path.toUri:()Ljava/net/URI;\n+   #53 = NameAndType        #54:#55       // toUri:()Ljava/net/URI;\n+   #54 = Utf8               toUri\n+   #55 = Utf8               ()Ljava/net/URI;\n+   #56 = Methodref          #4.#57        // java/net/URI.toURL:()Ljava/net/URL;\n+   #57 = NameAndType        #58:#59       // toURL:()Ljava/net/URL;\n+   #58 = Utf8               toURL\n+   #59 = Utf8               ()Ljava/net/URL;\n+   #60 = Methodref          #61.#62       // java/net/URLClassLoader.newInstance:([Ljava/net/URL;)Ljava/net/URLClassLoader;\n+   #61 = Class              #63           // java/net/URLClassLoader\n+   #62 = NameAndType        #64:#65       // newInstance:([Ljava/net/URL;)Ljava/net/URLClassLoader;\n+   #63 = Utf8               java/net/URLClassLoader\n+   #64 = Utf8               newInstance\n+   #65 = Utf8               ([Ljava/net/URL;)Ljava/net/URLClassLoader;\n+   #66 = Fieldref           #16.#67       // org/apache/bcel/util/ModularRuntimeImage.classLoader:Ljava/net/URLClassLoader;\n+   #67 = NameAndType        #68:#69       // classLoader:Ljava/net/URLClassLoader;\n+   #68 = Utf8               classLoader\n+   #69 = Utf8               Ljava/net/URLClassLoader;\n+   #70 = Methodref          #10.#71       // java/nio/file/FileSystems.newFileSystem:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n+   #71 = NameAndType        #72:#73       // newFileSystem:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n+   #72 = Utf8               newFileSystem\n+   #73 = Utf8               (Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n+   #74 = Fieldref           #16.#75       // org/apache/bcel/util/ModularRuntimeImage.fileSystem:Ljava/nio/file/FileSystem;\n+   #75 = NameAndType        #76:#77       // fileSystem:Ljava/nio/file/FileSystem;\n+   #76 = Utf8               fileSystem\n+   #77 = Utf8               Ljava/nio/file/FileSystem;\n+   #78 = Methodref          #61.#79       // java/net/URLClassLoader.close:()V\n+   #79 = NameAndType        #80:#25       // close:()V\n+   #80 = Utf8               close\n+   #81 = Methodref          #82.#79       // java/nio/file/FileSystem.close:()V\n+   #82 = Class              #83           // java/nio/file/FileSystem\n+   #83 = Utf8               java/nio/file/FileSystem\n+   #84 = Class              #85           // java/util/ArrayList\n+   #85 = Utf8               java/util/ArrayList\n+   #86 = Methodref          #84.#23       // java/util/ArrayList.\"<init>\":()V\n+   #87 = Methodref          #88.#89       // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+   #88 = Class              #90           // java/nio/file/Files\n+   #89 = NameAndType        #91:#92       // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+   #90 = Utf8               java/nio/file/Files\n+   #91 = Utf8               newDirectoryStream\n+   #92 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+   #93 = Methodref          #94.#95       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #94 = Class              #96           // java/util/Objects\n+   #95 = NameAndType        #97:#98       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #96 = Utf8               java/util/Objects\n+   #97 = Utf8               requireNonNull\n+   #98 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #99 = InvokeDynamic      #0:#100       // #0:accept:(Ljava/util/List;)Ljava/util/function/Consumer;\n+  #100 = NameAndType        #101:#102     // accept:(Ljava/util/List;)Ljava/util/function/Consumer;\n+  #101 = Utf8               accept\n+  #102 = Utf8               (Ljava/util/List;)Ljava/util/function/Consumer;\n+  #103 = InterfaceMethodref #104.#105     // java/nio/file/DirectoryStream.forEach:(Ljava/util/function/Consumer;)V\n+  #104 = Class              #106          // java/nio/file/DirectoryStream\n+  #105 = NameAndType        #107:#108     // forEach:(Ljava/util/function/Consumer;)V\n+  #106 = Utf8               java/nio/file/DirectoryStream\n+  #107 = Utf8               forEach\n+  #108 = Utf8               (Ljava/util/function/Consumer;)V\n+  #109 = InterfaceMethodref #104.#79      // java/nio/file/DirectoryStream.close:()V\n+  #110 = Class              #111          // java/lang/Throwable\n+  #111 = Utf8               java/lang/Throwable\n+  #112 = Methodref          #110.#113     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #113 = NameAndType        #114:#115     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #114 = Utf8               addSuppressed\n+  #115 = Utf8               (Ljava/lang/Throwable;)V\n+  #116 = Methodref          #82.#117      // java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #117 = NameAndType        #118:#39      // getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+  #118 = Utf8               getPath\n+  #119 = Methodref          #16.#120      // org/apache/bcel/util/ModularRuntimeImage.list:(Ljava/nio/file/Path;)Ljava/util/List;\n+  #120 = NameAndType        #121:#122     // list:(Ljava/nio/file/Path;)Ljava/util/List;\n+  #121 = Utf8               list\n+  #122 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;\n+  #123 = Fieldref           #16.#124      // org/apache/bcel/util/ModularRuntimeImage.MODULES_PATH:Ljava/lang/String;\n+  #124 = NameAndType        #125:#126     // MODULES_PATH:Ljava/lang/String;\n+  #125 = Utf8               MODULES_PATH\n+  #126 = Utf8               Ljava/lang/String;\n+  #127 = Methodref          #16.#128      // org/apache/bcel/util/ModularRuntimeImage.list:(Ljava/lang/String;)Ljava/util/List;\n+  #128 = NameAndType        #121:#129     // list:(Ljava/lang/String;)Ljava/util/List;\n+  #129 = Utf8               (Ljava/lang/String;)Ljava/util/List;\n+  #130 = Fieldref           #16.#131      // org/apache/bcel/util/ModularRuntimeImage.PACKAGES_PATH:Ljava/lang/String;\n+  #131 = NameAndType        #132:#126     // PACKAGES_PATH:Ljava/lang/String;\n+  #132 = Utf8               PACKAGES_PATH\n+  #133 = Class              #134          // java/lang/StringBuilder\n+  #134 = Utf8               java/lang/StringBuilder\n+  #135 = Methodref          #133.#23      // java/lang/StringBuilder.\"<init>\":()V\n+  #136 = Fieldref           #137.#138     // java/io/File.separator:Ljava/lang/String;\n+  #137 = Class              #139          // java/io/File\n+  #138 = NameAndType        #140:#126     // separator:Ljava/lang/String;\n+  #139 = Utf8               java/io/File\n+  #140 = Utf8               separator\n+  #141 = Methodref          #133.#142     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #142 = NameAndType        #143:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #143 = Utf8               append\n+  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #145 = String             #146          // modules\n+  #146 = Utf8               modules\n+  #147 = Methodref          #133.#148     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #148 = NameAndType        #149:#150     // toString:()Ljava/lang/String;\n+  #149 = Utf8               toString\n+  #150 = Utf8               ()Ljava/lang/String;\n+  #151 = String             #152          // packages\n+  #152 = Utf8               packages\n+  #153 = Class              #154          // java/io/Closeable\n+  #154 = Utf8               java/io/Closeable\n+  #155 = Utf8               Code\n+  #156 = Utf8               LineNumberTable\n+  #157 = Utf8               (Ljava/lang/String;)V\n+  #158 = Utf8               Exceptions\n+  #159 = Class              #160          // java/io/IOException\n+  #160 = Utf8               java/io/IOException\n+  #161 = Utf8               MethodParameters\n+  #162 = Utf8               javaHome\n+  #163 = Utf8               cl\n+  #164 = Utf8               fs\n+  #165 = Utf8               StackMapTable\n+  #166 = Utf8               ()Ljava/nio/file/FileSystem;\n+  #167 = Class              #168          // java/util/List\n+  #168 = Utf8               java/util/List\n+  #169 = Utf8               dirPath\n+  #170 = Utf8               Signature\n+  #171 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #172 = Utf8               dirName\n+  #173 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #174 = Utf8               ()Ljava/util/List;\n+  #175 = Utf8               ()Ljava/util/List<Ljava/nio/file/Path;>;\n+  #176 = Utf8               <clinit>\n+  #177 = Utf8               SourceFile\n+  #178 = Utf8               ModularRuntimeImage.java\n+  #179 = Utf8               BootstrapMethods\n+  #180 = MethodHandle       6:#181        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #181 = Methodref          #182.#183     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #182 = Class              #184          // java/lang/invoke/LambdaMetafactory\n+  #183 = NameAndType        #185:#186     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #184 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #185 = Utf8               metafactory\n+  #186 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #187 = MethodType         #188          //  (Ljava/lang/Object;)V\n+  #188 = Utf8               (Ljava/lang/Object;)V\n+  #189 = MethodHandle       9:#190        // REF_invokeInterface java/util/List.add:(Ljava/lang/Object;)Z\n+  #190 = InterfaceMethodref #167.#191     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #191 = NameAndType        #192:#193     // add:(Ljava/lang/Object;)Z\n+  #192 = Utf8               add\n+  #193 = Utf8               (Ljava/lang/Object;)Z\n+  #194 = MethodType         #195          //  (Ljava/nio/file/Path;)V\n+  #195 = Utf8               (Ljava/nio/file/Path;)V\n+  #196 = Utf8               InnerClasses\n+  #197 = Class              #198          // java/lang/invoke/MethodHandles$Lookup\n+  #198 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #199 = Class              #200          // java/lang/invoke/MethodHandles\n+  #200 = Utf8               java/lang/invoke/MethodHandles\n+  #201 = Utf8               Lookup\n {\n   static final java.lang.String MODULES_PATH;\n     descriptor: Ljava/lang/String;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   static final java.lang.String PACKAGES_PATH;\n     descriptor: Ljava/lang/String;\n@@ -230,61 +230,61 @@\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n          2: ldc           #1                  // String jrt:/\n-         4: invokestatic  #2                  // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;\n-         7: invokestatic  #3                  // Method java/nio/file/FileSystems.getFileSystem:(Ljava/net/URI;)Ljava/nio/file/FileSystem;\n-        10: invokespecial #4                  // Method \"<init>\":(Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n+         4: invokestatic  #3                  // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;\n+         7: invokestatic  #9                  // Method java/nio/file/FileSystems.getFileSystem:(Ljava/net/URI;)Ljava/nio/file/FileSystem;\n+        10: invokespecial #15                 // Method \"<init>\":(Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n         13: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 13\n \n   public org.apache.bcel.util.ModularRuntimeImage(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aload_0\n-         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n-         4: invokestatic  #6                  // Method java/util/Collections.emptyMap:()Ljava/util/Map;\n+         1: invokespecial #21                 // Method java/lang/Object.\"<init>\":()V\n+         4: invokestatic  #26                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;\n          7: astore_2\n          8: aload_1\n          9: iconst_0\n-        10: anewarray     #7                  // class java/lang/String\n-        13: invokestatic  #8                  // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+        10: anewarray     #32                 // class java/lang/String\n+        13: invokestatic  #34                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n         16: astore_3\n         17: aload_3\n-        18: ldc           #9                  // String lib\n-        20: invokeinterface #10,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-        25: ldc           #11                 // String jrt-fs.jar\n-        27: invokeinterface #10,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+        18: ldc           #40                 // String lib\n+        20: invokeinterface #42,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+        25: ldc           #48                 // String jrt-fs.jar\n+        27: invokeinterface #42,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n         32: astore        4\n         34: aload_0\n         35: iconst_1\n-        36: anewarray     #12                 // class java/net/URL\n+        36: anewarray     #50                 // class java/net/URL\n         39: dup\n         40: iconst_0\n         41: aload         4\n-        43: invokeinterface #13,  1           // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;\n-        48: invokevirtual #14                 // Method java/net/URI.toURL:()Ljava/net/URL;\n+        43: invokeinterface #52,  1           // InterfaceMethod java/nio/file/Path.toUri:()Ljava/net/URI;\n+        48: invokevirtual #56                 // Method java/net/URI.toURL:()Ljava/net/URL;\n         51: aastore\n-        52: invokestatic  #15                 // Method java/net/URLClassLoader.newInstance:([Ljava/net/URL;)Ljava/net/URLClassLoader;\n-        55: putfield      #16                 // Field classLoader:Ljava/net/URLClassLoader;\n+        52: invokestatic  #60                 // Method java/net/URLClassLoader.newInstance:([Ljava/net/URL;)Ljava/net/URLClassLoader;\n+        55: putfield      #66                 // Field classLoader:Ljava/net/URLClassLoader;\n         58: aload_0\n         59: ldc           #1                  // String jrt:/\n-        61: invokestatic  #2                  // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;\n+        61: invokestatic  #3                  // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;\n         64: aload_2\n         65: aload_0\n-        66: getfield      #16                 // Field classLoader:Ljava/net/URLClassLoader;\n-        69: invokestatic  #17                 // Method java/nio/file/FileSystems.newFileSystem:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n-        72: putfield      #18                 // Field fileSystem:Ljava/nio/file/FileSystem;\n+        66: getfield      #66                 // Field classLoader:Ljava/net/URLClassLoader;\n+        69: invokestatic  #70                 // Method java/nio/file/FileSystems.newFileSystem:(Ljava/net/URI;Ljava/util/Map;Ljava/lang/ClassLoader;)Ljava/nio/file/FileSystem;\n+        72: putfield      #74                 // Field fileSystem:Ljava/nio/file/FileSystem;\n         75: return\n       LineNumberTable:\n         line 64: 0\n         line 65: 4\n         line 66: 8\n         line 67: 17\n         line 68: 34\n@@ -298,21 +298,21 @@\n \n   private org.apache.bcel.util.ModularRuntimeImage(java.net.URLClassLoader, java.nio.file.FileSystem);\n     descriptor: (Ljava/net/URLClassLoader;Ljava/nio/file/FileSystem;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #21                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #16                 // Field classLoader:Ljava/net/URLClassLoader;\n+         6: putfield      #66                 // Field classLoader:Ljava/net/URLClassLoader;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #18                 // Field fileSystem:Ljava/nio/file/FileSystem;\n+        11: putfield      #74                 // Field fileSystem:Ljava/nio/file/FileSystem;\n         14: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 4\n         line 74: 9\n         line 75: 14\n     MethodParameters:\n@@ -322,25 +322,25 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field classLoader:Ljava/net/URLClassLoader;\n+         1: getfield      #66                 // Field classLoader:Ljava/net/URLClassLoader;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #16                 // Field classLoader:Ljava/net/URLClassLoader;\n-        11: invokevirtual #19                 // Method java/net/URLClassLoader.close:()V\n+         8: getfield      #66                 // Field classLoader:Ljava/net/URLClassLoader;\n+        11: invokevirtual #78                 // Method java/net/URLClassLoader.close:()V\n         14: aload_0\n-        15: getfield      #18                 // Field fileSystem:Ljava/nio/file/FileSystem;\n+        15: getfield      #74                 // Field fileSystem:Ljava/nio/file/FileSystem;\n         18: ifnull        28\n         21: aload_0\n-        22: getfield      #18                 // Field fileSystem:Ljava/nio/file/FileSystem;\n-        25: invokevirtual #20                 // Method java/nio/file/FileSystem.close:()V\n+        22: getfield      #74                 // Field fileSystem:Ljava/nio/file/FileSystem;\n+        25: invokevirtual #81                 // Method java/nio/file/FileSystem.close:()V\n         28: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 7\n         line 82: 14\n         line 83: 21\n         line 85: 28\n@@ -352,53 +352,53 @@\n \n   public java.nio.file.FileSystem getFileSystem();\n     descriptor: ()Ljava/nio/file/FileSystem;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field fileSystem:Ljava/nio/file/FileSystem;\n+         1: getfield      #74                 // Field fileSystem:Ljava/nio/file/FileSystem;\n          4: areturn\n       LineNumberTable:\n         line 88: 0\n \n   public java.util.List<java.nio.file.Path> list(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=2\n-         0: new           #21                 // class java/util/ArrayList\n+         0: new           #84                 // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #22                 // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #86                 // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_2\n          8: aload_1\n-         9: invokestatic  #23                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+         9: invokestatic  #87                 // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n         12: astore_3\n         13: aload_3\n         14: aload_2\n         15: dup\n-        16: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        16: invokestatic  #93                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         19: pop\n-        20: invokedynamic #25,  0             // InvokeDynamic #0:accept:(Ljava/util/List;)Ljava/util/function/Consumer;\n-        25: invokeinterface #26,  2           // InterfaceMethod java/nio/file/DirectoryStream.forEach:(Ljava/util/function/Consumer;)V\n+        20: invokedynamic #99,  0             // InvokeDynamic #0:accept:(Ljava/util/List;)Ljava/util/function/Consumer;\n+        25: invokeinterface #103,  2          // InterfaceMethod java/nio/file/DirectoryStream.forEach:(Ljava/util/function/Consumer;)V\n         30: aload_3\n         31: ifnull        70\n         34: aload_3\n-        35: invokeinterface #27,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        35: invokeinterface #109,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         40: goto          70\n         43: astore        4\n         45: aload_3\n         46: ifnull        67\n         49: aload_3\n-        50: invokeinterface #27,  1           // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        50: invokeinterface #109,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         55: goto          67\n         58: astore        5\n         60: aload         4\n         62: aload         5\n-        64: invokevirtual #29                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        64: invokevirtual #112                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         67: aload         4\n         69: athrow\n         70: aload_2\n         71: areturn\n       Exception table:\n          from    to  target type\n             13    30    43   Class java/lang/Throwable\n@@ -423,99 +423,99 @@\n         frame_type = 249 /* chop */\n           offset_delta = 2\n     Exceptions:\n       throws java.io.IOException\n     MethodParameters:\n       Name                           Flags\n       dirPath                        final\n-    Signature: #75                          // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #171                         // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> list(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #18                 // Field fileSystem:Ljava/nio/file/FileSystem;\n+         2: getfield      #74                 // Field fileSystem:Ljava/nio/file/FileSystem;\n          5: aload_1\n          6: iconst_0\n-         7: anewarray     #7                  // class java/lang/String\n-        10: invokevirtual #30                 // Method java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-        13: invokevirtual #31                 // Method list:(Ljava/nio/file/Path;)Ljava/util/List;\n+         7: anewarray     #32                 // class java/lang/String\n+        10: invokevirtual #116                // Method java/nio/file/FileSystem.getPath:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+        13: invokevirtual #119                // Method list:(Ljava/nio/file/Path;)Ljava/util/List;\n         16: areturn\n       LineNumberTable:\n         line 114: 0\n     Exceptions:\n       throws java.io.IOException\n     MethodParameters:\n       Name                           Flags\n       dirName                        final\n-    Signature: #78                          // (Ljava/lang/String;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #173                         // (Ljava/lang/String;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> modules() throws java.io.IOException;\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #32                 // Field MODULES_PATH:Ljava/lang/String;\n-         4: invokevirtual #33                 // Method list:(Ljava/lang/String;)Ljava/util/List;\n+         1: getstatic     #123                // Field MODULES_PATH:Ljava/lang/String;\n+         4: invokevirtual #127                // Method list:(Ljava/lang/String;)Ljava/util/List;\n          7: areturn\n       LineNumberTable:\n         line 124: 0\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #81                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #175                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   public java.util.List<java.nio.file.Path> packages() throws java.io.IOException;\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #34                 // Field PACKAGES_PATH:Ljava/lang/String;\n-         4: invokevirtual #33                 // Method list:(Ljava/lang/String;)Ljava/util/List;\n+         1: getstatic     #130                // Field PACKAGES_PATH:Ljava/lang/String;\n+         4: invokevirtual #127                // Method list:(Ljava/lang/String;)Ljava/util/List;\n          7: areturn\n       LineNumberTable:\n         line 134: 0\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #81                          // ()Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #175                         // ()Ljava/util/List<Ljava/nio/file/Path;>;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #35                 // class java/lang/StringBuilder\n+         0: new           #133                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: getstatic     #37                 // Field java/io/File.separator:Ljava/lang/String;\n-        10: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        13: ldc           #39                 // String modules\n-        15: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        18: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        21: putstatic     #32                 // Field MODULES_PATH:Ljava/lang/String;\n-        24: new           #35                 // class java/lang/StringBuilder\n+         4: invokespecial #135                // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: getstatic     #136                // Field java/io/File.separator:Ljava/lang/String;\n+        10: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: ldc           #145                // String modules\n+        15: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: invokevirtual #147                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        21: putstatic     #123                // Field MODULES_PATH:Ljava/lang/String;\n+        24: new           #133                // class java/lang/StringBuilder\n         27: dup\n-        28: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        31: getstatic     #37                 // Field java/io/File.separator:Ljava/lang/String;\n-        34: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        37: ldc           #41                 // String packages\n-        39: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        45: putstatic     #34                 // Field PACKAGES_PATH:Ljava/lang/String;\n+        28: invokespecial #135                // Method java/lang/StringBuilder.\"<init>\":()V\n+        31: getstatic     #136                // Field java/io/File.separator:Ljava/lang/String;\n+        34: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: ldc           #151                // String packages\n+        39: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokevirtual #147                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        45: putstatic     #130                // Field PACKAGES_PATH:Ljava/lang/String;\n         48: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 24\n }\n SourceFile: \"ModularRuntimeImage.java\"\n-InnerClasses:\n-  public static final #194= #193 of #199; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #117 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #180 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #118 (Ljava/lang/Object;)V\n-      #119 REF_invokeInterface java/util/List.add:(Ljava/lang/Object;)Z\n-      #120 (Ljava/nio/file/Path;)V\n+      #187 (Ljava/lang/Object;)V\n+      #189 REF_invokeInterface java/util/List.add:(Ljava/lang/Object;)Z\n+      #194 (Ljava/nio/file/Path;)V\n+InnerClasses:\n+  public static final #201= #197 of #199; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
