{"diffoscope-json-version": 1, "source1": "first/ScatterZipOutputStream.class", "source2": "second/ScatterZipOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,66 +1,66 @@\n-  SHA-256 checksum 3e323fe8c4fe52bd646454bcbfb8b334bd55873bfe100c666cb84d3069ef0947\n+  SHA-256 checksum 83f64aa9d22d87fb19ccf938c9a0a163ad31007162b60e4824301e66710081bf\n   Compiled from \"ScatterZipOutputStream.java\"\n public class org.apache.commons.compress.archivers.zip.ScatterZipOutputStream implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #9                          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n   super_class: #48                        // java/lang/Object\n   interfaces: 1, fields: 5, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #9.#100       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.items:Ljava/util/Queue;\n-    #2 = Fieldref           #9.#101       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-    #3 = Methodref          #102.#103     // java/io/File.toPath:()Ljava/nio/file/Path;\n-    #4 = Class              #104          // java/util/zip/Deflater\n-    #5 = Methodref          #9.#105       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.pathBased:(Ljava/nio/file/Path;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-    #6 = Class              #106          // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-    #7 = Methodref          #6.#107       // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n-    #8 = Methodref          #108.#109     // org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-    #9 = Class              #110          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-   #10 = Methodref          #9.#111       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-   #11 = Methodref          #48.#112      // java/lang/Object.\"<init>\":()V\n-   #12 = Class              #113          // java/util/concurrent/ConcurrentLinkedQueue\n-   #13 = Methodref          #12.#112      // java/util/concurrent/ConcurrentLinkedQueue.\"<init>\":()V\n-   #14 = Class              #114          // java/util/concurrent/atomic/AtomicBoolean\n-   #15 = Methodref          #14.#112      // java/util/concurrent/atomic/AtomicBoolean.\"<init>\":()V\n-   #16 = Fieldref           #9.#115       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-   #17 = Fieldref           #9.#116       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-   #18 = Methodref          #117.#118     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getPayloadStream:()Ljava/io/InputStream;\n-   #19 = Methodref          #117.#119     // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n-   #20 = Methodref          #108.#120     // org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:(Ljava/io/InputStream;I)V\n-   #21 = Methodref          #121.#122     // java/io/InputStream.close:()V\n-   #22 = Class              #123          // java/lang/Throwable\n-   #23 = Methodref          #22.#124      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #24 = Class              #125          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-   #25 = Methodref          #108.#126     // org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J\n-   #26 = Methodref          #108.#127     // org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesWrittenForLastEntry:()J\n-   #27 = Methodref          #108.#128     // org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J\n-   #28 = Methodref          #24.#129      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n-   #29 = InterfaceMethodref #130.#131     // java/util/Queue.add:(Ljava/lang/Object;)Z\n-   #30 = Methodref          #14.#132      // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n-   #31 = Fieldref           #9.#133       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-   #32 = Methodref          #46.#122      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.close:()V\n-   #33 = InterfaceMethodref #134.#122     // org/apache/commons/compress/parallel/ScatterGatherBackingStore.close:()V\n-   #34 = Methodref          #108.#122     // org/apache/commons/compress/archivers/zip/StreamCompressor.close:()V\n-   #35 = InterfaceMethodref #134.#135     // org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n-   #36 = InterfaceMethodref #134.#136     // org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n-   #37 = InterfaceMethodref #130.#137     // java/util/Queue.iterator:()Ljava/util/Iterator;\n-   #38 = InterfaceMethodref #138.#139     // java/util/Iterator.hasNext:()Z\n-   #39 = InterfaceMethodref #138.#140     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #40 = Class              #141          // org/apache/commons/compress/utils/BoundedInputStream\n-   #41 = Fieldref           #24.#142      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n-   #42 = Methodref          #40.#143      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #43 = Methodref          #24.#144      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #44 = Methodref          #145.#146     // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-   #45 = Methodref          #40.#122      // org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-   #46 = Class              #147          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-   #47 = Methodref          #46.#148      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n-   #48 = Class              #149          // java/lang/Object\n-   #49 = Class              #150          // java/io/Closeable\n+    #1 = Fieldref           #9.#96        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.items:Ljava/util/Queue;\n+    #2 = Fieldref           #9.#97        // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+    #3 = Methodref          #98.#99       // java/io/File.toPath:()Ljava/nio/file/Path;\n+    #4 = Class              #100          // java/util/zip/Deflater\n+    #5 = Methodref          #9.#101       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.pathBased:(Ljava/nio/file/Path;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+    #6 = Class              #102          // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+    #7 = Methodref          #6.#103       // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.\"<init>\":(Ljava/nio/file/Path;)V\n+    #8 = Methodref          #104.#105     // org/apache/commons/compress/archivers/zip/StreamCompressor.create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+    #9 = Class              #106          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+   #10 = Methodref          #9.#107       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.\"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+   #11 = Methodref          #48.#108      // java/lang/Object.\"<init>\":()V\n+   #12 = Class              #109          // java/util/concurrent/ConcurrentLinkedQueue\n+   #13 = Methodref          #12.#108      // java/util/concurrent/ConcurrentLinkedQueue.\"<init>\":()V\n+   #14 = Class              #110          // java/util/concurrent/atomic/AtomicBoolean\n+   #15 = Methodref          #14.#108      // java/util/concurrent/atomic/AtomicBoolean.\"<init>\":()V\n+   #16 = Fieldref           #9.#111       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #17 = Fieldref           #9.#112       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+   #18 = Methodref          #80.#113      // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getPayloadStream:()Ljava/io/InputStream;\n+   #19 = Methodref          #80.#114      // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n+   #20 = Methodref          #104.#115     // org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:(Ljava/io/InputStream;I)V\n+   #21 = Methodref          #81.#116      // java/io/InputStream.close:()V\n+   #22 = Class              #117          // java/lang/Throwable\n+   #23 = Methodref          #22.#118      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #24 = Class              #119          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+   #25 = Methodref          #104.#120     // org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J\n+   #26 = Methodref          #104.#121     // org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesWrittenForLastEntry:()J\n+   #27 = Methodref          #104.#122     // org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J\n+   #28 = Methodref          #24.#123      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n+   #29 = InterfaceMethodref #124.#125     // java/util/Queue.add:(Ljava/lang/Object;)Z\n+   #30 = Methodref          #14.#126      // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n+   #31 = Fieldref           #9.#127       // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream.zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+   #32 = Methodref          #46.#116      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.close:()V\n+   #33 = InterfaceMethodref #128.#116     // org/apache/commons/compress/parallel/ScatterGatherBackingStore.close:()V\n+   #34 = Methodref          #104.#116     // org/apache/commons/compress/archivers/zip/StreamCompressor.close:()V\n+   #35 = InterfaceMethodref #128.#129     // org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n+   #36 = InterfaceMethodref #128.#130     // org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n+   #37 = InterfaceMethodref #124.#131     // java/util/Queue.iterator:()Ljava/util/Iterator;\n+   #38 = InterfaceMethodref #87.#132      // java/util/Iterator.hasNext:()Z\n+   #39 = InterfaceMethodref #87.#133      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #40 = Class              #134          // org/apache/commons/compress/utils/BoundedInputStream\n+   #41 = Fieldref           #24.#135      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n+   #42 = Methodref          #40.#136      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #43 = Methodref          #24.#137      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #44 = Methodref          #88.#138      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+   #45 = Methodref          #40.#116      // org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+   #46 = Class              #139          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+   #47 = Methodref          #46.#140      // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n+   #48 = Class              #141          // java/lang/Object\n+   #49 = Class              #142          // java/io/Closeable\n    #50 = Utf8               ZipEntryWriter\n    #51 = Utf8               InnerClasses\n    #52 = Utf8               CompressedEntry\n    #53 = Utf8               items\n    #54 = Utf8               Ljava/util/Queue;\n    #55 = Utf8               Signature\n    #56 = Utf8               Ljava/util/Queue<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n@@ -73,143 +73,135 @@\n    #63 = Utf8               zipEntryWriter\n    #64 = Utf8               Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n    #65 = Utf8               fileBased\n    #66 = Utf8               (Ljava/io/File;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n    #67 = Utf8               Code\n    #68 = Utf8               LineNumberTable\n    #69 = Utf8               Exceptions\n-   #70 = Class              #151          // java/io/FileNotFoundException\n+   #70 = Class              #143          // java/io/FileNotFoundException\n    #71 = Utf8               (Ljava/io/File;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n    #72 = Utf8               pathBased\n    #73 = Utf8               (Ljava/nio/file/Path;)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n    #74 = Utf8               (Ljava/nio/file/Path;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n    #75 = Utf8               <init>\n    #76 = Utf8               (Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n    #77 = Utf8               addArchiveEntry\n    #78 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n    #79 = Utf8               StackMapTable\n-   #80 = Class              #110          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-   #81 = Class              #152          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-   #82 = Class              #153          // java/io/InputStream\n-   #83 = Class              #123          // java/lang/Throwable\n-   #84 = Class              #154          // java/io/IOException\n-   #85 = Utf8               close\n-   #86 = Utf8               ()V\n-   #87 = Utf8               writeTo\n-   #88 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n-   #89 = Class              #155          // java/util/Iterator\n-   #90 = Class              #156          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #91 = Class              #125          // org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-   #92 = Class              #141          // org/apache/commons/compress/utils/BoundedInputStream\n-   #93 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-   #94 = Utf8               access$000\n-   #95 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-   #96 = Utf8               access$100\n-   #97 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               ScatterZipOutputStream.java\n-  #100 = NameAndType        #53:#54       // items:Ljava/util/Queue;\n-  #101 = NameAndType        #57:#58       // backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n-  #102 = Class              #157          // java/io/File\n-  #103 = NameAndType        #158:#159     // toPath:()Ljava/nio/file/Path;\n-  #104 = Utf8               java/util/zip/Deflater\n-  #105 = NameAndType        #72:#74       // pathBased:(Ljava/nio/file/Path;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n-  #106 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #107 = NameAndType        #75:#160      // \"<init>\":(Ljava/nio/file/Path;)V\n-  #108 = Class              #161          // org/apache/commons/compress/archivers/zip/StreamCompressor\n-  #109 = NameAndType        #162:#163     // create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #110 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n-  #111 = NameAndType        #75:#76       // \"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n-  #112 = NameAndType        #75:#86       // \"<init>\":()V\n-  #113 = Utf8               java/util/concurrent/ConcurrentLinkedQueue\n-  #114 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n-  #115 = NameAndType        #61:#62       // isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-  #116 = NameAndType        #59:#60       // streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #117 = Class              #152          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #118 = NameAndType        #164:#165     // getPayloadStream:()Ljava/io/InputStream;\n-  #119 = NameAndType        #166:#167     // getMethod:()I\n-  #120 = NameAndType        #168:#169     // deflate:(Ljava/io/InputStream;I)V\n-  #121 = Class              #153          // java/io/InputStream\n-  #122 = NameAndType        #85:#86       // close:()V\n-  #123 = Utf8               java/lang/Throwable\n-  #124 = NameAndType        #170:#171     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #125 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-  #126 = NameAndType        #172:#173     // getCrc32:()J\n-  #127 = NameAndType        #174:#173     // getBytesWrittenForLastEntry:()J\n-  #128 = NameAndType        #175:#173     // getBytesRead:()J\n-  #129 = NameAndType        #75:#176      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n-  #130 = Class              #177          // java/util/Queue\n-  #131 = NameAndType        #178:#179     // add:(Ljava/lang/Object;)Z\n-  #132 = NameAndType        #180:#181     // compareAndSet:(ZZ)Z\n-  #133 = NameAndType        #63:#64       // zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n-  #134 = Class              #182          // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #135 = NameAndType        #183:#86      // closeForWriting:()V\n-  #136 = NameAndType        #184:#165     // getInputStream:()Ljava/io/InputStream;\n-  #137 = NameAndType        #185:#186     // iterator:()Ljava/util/Iterator;\n-  #138 = Class              #155          // java/util/Iterator\n-  #139 = NameAndType        #187:#188     // hasNext:()Z\n-  #140 = NameAndType        #189:#190     // next:()Ljava/lang/Object;\n-  #141 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #142 = NameAndType        #191:#192     // compressedSize:J\n-  #143 = NameAndType        #75:#193      // \"<init>\":(Ljava/io/InputStream;J)V\n-  #144 = NameAndType        #194:#195     // transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #145 = Class              #156          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #146 = NameAndType        #196:#197     // addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-  #147 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n-  #148 = NameAndType        #75:#198      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n-  #149 = Utf8               java/lang/Object\n-  #150 = Utf8               java/io/Closeable\n-  #151 = Utf8               java/io/FileNotFoundException\n-  #152 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  #153 = Utf8               java/io/InputStream\n-  #154 = Utf8               java/io/IOException\n-  #155 = Utf8               java/util/Iterator\n-  #156 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #157 = Utf8               java/io/File\n-  #158 = Utf8               toPath\n-  #159 = Utf8               ()Ljava/nio/file/Path;\n-  #160 = Utf8               (Ljava/nio/file/Path;)V\n-  #161 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n-  #162 = Utf8               create\n-  #163 = Utf8               (ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-  #164 = Utf8               getPayloadStream\n-  #165 = Utf8               ()Ljava/io/InputStream;\n-  #166 = Utf8               getMethod\n-  #167 = Utf8               ()I\n-  #168 = Utf8               deflate\n-  #169 = Utf8               (Ljava/io/InputStream;I)V\n-  #170 = Utf8               addSuppressed\n-  #171 = Utf8               (Ljava/lang/Throwable;)V\n-  #172 = Utf8               getCrc32\n-  #173 = Utf8               ()J\n-  #174 = Utf8               getBytesWrittenForLastEntry\n-  #175 = Utf8               getBytesRead\n-  #176 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n-  #177 = Utf8               java/util/Queue\n-  #178 = Utf8               add\n-  #179 = Utf8               (Ljava/lang/Object;)Z\n-  #180 = Utf8               compareAndSet\n-  #181 = Utf8               (ZZ)Z\n-  #182 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #183 = Utf8               closeForWriting\n-  #184 = Utf8               getInputStream\n-  #185 = Utf8               iterator\n-  #186 = Utf8               ()Ljava/util/Iterator;\n-  #187 = Utf8               hasNext\n-  #188 = Utf8               ()Z\n-  #189 = Utf8               next\n-  #190 = Utf8               ()Ljava/lang/Object;\n-  #191 = Utf8               compressedSize\n-  #192 = Utf8               J\n-  #193 = Utf8               (Ljava/io/InputStream;J)V\n-  #194 = Utf8               transferToArchiveEntry\n-  #195 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #196 = Utf8               addRawArchiveEntry\n-  #197 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-  #198 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n+   #80 = Class              #144          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+   #81 = Class              #145          // java/io/InputStream\n+   #82 = Class              #146          // java/io/IOException\n+   #83 = Utf8               close\n+   #84 = Utf8               ()V\n+   #85 = Utf8               writeTo\n+   #86 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n+   #87 = Class              #147          // java/util/Iterator\n+   #88 = Class              #148          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+   #89 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+   #90 = Utf8               access$000\n+   #91 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #92 = Utf8               access$100\n+   #93 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)Ljava/util/Queue;\n+   #94 = Utf8               SourceFile\n+   #95 = Utf8               ScatterZipOutputStream.java\n+   #96 = NameAndType        #53:#54       // items:Ljava/util/Queue;\n+   #97 = NameAndType        #57:#58       // backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n+   #98 = Class              #149          // java/io/File\n+   #99 = NameAndType        #150:#151     // toPath:()Ljava/nio/file/Path;\n+  #100 = Utf8               java/util/zip/Deflater\n+  #101 = NameAndType        #72:#74       // pathBased:(Ljava/nio/file/Path;I)Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;\n+  #102 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #103 = NameAndType        #75:#152      // \"<init>\":(Ljava/nio/file/Path;)V\n+  #104 = Class              #153          // org/apache/commons/compress/archivers/zip/StreamCompressor\n+  #105 = NameAndType        #154:#155     // create:(ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+  #106 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream\n+  #107 = NameAndType        #75:#76       // \"<init>\":(Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;Lorg/apache/commons/compress/archivers/zip/StreamCompressor;)V\n+  #108 = NameAndType        #75:#84       // \"<init>\":()V\n+  #109 = Utf8               java/util/concurrent/ConcurrentLinkedQueue\n+  #110 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n+  #111 = NameAndType        #61:#62       // isClosed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+  #112 = NameAndType        #59:#60       // streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+  #113 = NameAndType        #156:#157     // getPayloadStream:()Ljava/io/InputStream;\n+  #114 = NameAndType        #158:#159     // getMethod:()I\n+  #115 = NameAndType        #160:#161     // deflate:(Ljava/io/InputStream;I)V\n+  #116 = NameAndType        #83:#84       // close:()V\n+  #117 = Utf8               java/lang/Throwable\n+  #118 = NameAndType        #162:#163     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #119 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+  #120 = NameAndType        #164:#165     // getCrc32:()J\n+  #121 = NameAndType        #166:#165     // getBytesWrittenForLastEntry:()J\n+  #122 = NameAndType        #167:#165     // getBytesRead:()J\n+  #123 = NameAndType        #75:#168      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n+  #124 = Class              #169          // java/util/Queue\n+  #125 = NameAndType        #170:#171     // add:(Ljava/lang/Object;)Z\n+  #126 = NameAndType        #172:#173     // compareAndSet:(ZZ)Z\n+  #127 = NameAndType        #63:#64       // zipEntryWriter:Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n+  #128 = Class              #174          // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #129 = NameAndType        #175:#84      // closeForWriting:()V\n+  #130 = NameAndType        #176:#157     // getInputStream:()Ljava/io/InputStream;\n+  #131 = NameAndType        #177:#178     // iterator:()Ljava/util/Iterator;\n+  #132 = NameAndType        #179:#180     // hasNext:()Z\n+  #133 = NameAndType        #181:#182     // next:()Ljava/lang/Object;\n+  #134 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #135 = NameAndType        #183:#184     // compressedSize:J\n+  #136 = NameAndType        #75:#185      // \"<init>\":(Ljava/io/InputStream;J)V\n+  #137 = NameAndType        #186:#187     // transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #138 = NameAndType        #188:#189     // addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+  #139 = Utf8               org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter\n+  #140 = NameAndType        #75:#190      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n+  #141 = Utf8               java/lang/Object\n+  #142 = Utf8               java/io/Closeable\n+  #143 = Utf8               java/io/FileNotFoundException\n+  #144 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n+  #145 = Utf8               java/io/InputStream\n+  #146 = Utf8               java/io/IOException\n+  #147 = Utf8               java/util/Iterator\n+  #148 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #149 = Utf8               java/io/File\n+  #150 = Utf8               toPath\n+  #151 = Utf8               ()Ljava/nio/file/Path;\n+  #152 = Utf8               (Ljava/nio/file/Path;)V\n+  #153 = Utf8               org/apache/commons/compress/archivers/zip/StreamCompressor\n+  #154 = Utf8               create\n+  #155 = Utf8               (ILorg/apache/commons/compress/parallel/ScatterGatherBackingStore;)Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+  #156 = Utf8               getPayloadStream\n+  #157 = Utf8               ()Ljava/io/InputStream;\n+  #158 = Utf8               getMethod\n+  #159 = Utf8               ()I\n+  #160 = Utf8               deflate\n+  #161 = Utf8               (Ljava/io/InputStream;I)V\n+  #162 = Utf8               addSuppressed\n+  #163 = Utf8               (Ljava/lang/Throwable;)V\n+  #164 = Utf8               getCrc32\n+  #165 = Utf8               ()J\n+  #166 = Utf8               getBytesWrittenForLastEntry\n+  #167 = Utf8               getBytesRead\n+  #168 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n+  #169 = Utf8               java/util/Queue\n+  #170 = Utf8               add\n+  #171 = Utf8               (Ljava/lang/Object;)Z\n+  #172 = Utf8               compareAndSet\n+  #173 = Utf8               (ZZ)Z\n+  #174 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #175 = Utf8               closeForWriting\n+  #176 = Utf8               getInputStream\n+  #177 = Utf8               iterator\n+  #178 = Utf8               ()Ljava/util/Iterator;\n+  #179 = Utf8               hasNext\n+  #180 = Utf8               ()Z\n+  #181 = Utf8               next\n+  #182 = Utf8               ()Ljava/lang/Object;\n+  #183 = Utf8               compressedSize\n+  #184 = Utf8               J\n+  #185 = Utf8               (Ljava/io/InputStream;J)V\n+  #186 = Utf8               transferToArchiveEntry\n+  #187 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #188 = Utf8               addRawArchiveEntry\n+  #189 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+  #190 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream;)V\n {\n   private final java.util.Queue<org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$CompressedEntry> items;\n     descriptor: Ljava/util/Queue;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #56                          // Ljava/util/Queue<Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry;>;\n \n   private final org.apache.commons.compress.parallel.ScatterGatherBackingStore backingStore;\n@@ -331,118 +323,84 @@\n         line 170: 31\n         line 171: 36\n \n   public void addArchiveEntry(org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=10, locals=7, args_size=2\n+      stack=10, locals=5, args_size=2\n          0: aload_1\n          1: invokevirtual #18                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getPayloadStream:()Ljava/io/InputStream;\n          4: astore_2\n-         5: aconst_null\n-         6: astore_3\n-         7: aload_0\n-         8: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-        11: aload_2\n-        12: aload_1\n-        13: invokevirtual #19                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n-        16: invokevirtual #20                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:(Ljava/io/InputStream;I)V\n-        19: aload_2\n-        20: ifnull        95\n-        23: aload_3\n-        24: ifnull        45\n-        27: aload_2\n-        28: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-        31: goto          95\n-        34: astore        4\n-        36: aload_3\n-        37: aload         4\n-        39: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        42: goto          95\n-        45: aload_2\n-        46: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-        49: goto          95\n-        52: astore        4\n-        54: aload         4\n-        56: astore_3\n-        57: aload         4\n-        59: athrow\n-        60: astore        5\n-        62: aload_2\n-        63: ifnull        92\n-        66: aload_3\n-        67: ifnull        88\n-        70: aload_2\n-        71: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-        74: goto          92\n-        77: astore        6\n-        79: aload_3\n-        80: aload         6\n-        82: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        85: goto          92\n-        88: aload_2\n-        89: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-        92: aload         5\n-        94: athrow\n-        95: aload_0\n-        96: getfield      #1                  // Field items:Ljava/util/Queue;\n-        99: new           #24                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-       102: dup\n-       103: aload_1\n-       104: aload_0\n-       105: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-       108: invokevirtual #25                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J\n-       111: aload_0\n-       112: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-       115: invokevirtual #26                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesWrittenForLastEntry:()J\n-       118: aload_0\n-       119: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n-       122: invokevirtual #27                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J\n-       125: invokespecial #28                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n-       128: invokeinterface #29,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z\n-       133: pop\n-       134: return\n+         5: aload_0\n+         6: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+         9: aload_2\n+        10: aload_1\n+        11: invokevirtual #19                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.getMethod:()I\n+        14: invokevirtual #20                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.deflate:(Ljava/io/InputStream;I)V\n+        17: aload_2\n+        18: ifnull        50\n+        21: aload_2\n+        22: invokevirtual #21                 // Method java/io/InputStream.close:()V\n+        25: goto          50\n+        28: astore_3\n+        29: aload_2\n+        30: ifnull        48\n+        33: aload_2\n+        34: invokevirtual #21                 // Method java/io/InputStream.close:()V\n+        37: goto          48\n+        40: astore        4\n+        42: aload_3\n+        43: aload         4\n+        45: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        48: aload_3\n+        49: athrow\n+        50: aload_0\n+        51: getfield      #1                  // Field items:Ljava/util/Queue;\n+        54: new           #24                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+        57: dup\n+        58: aload_1\n+        59: aload_0\n+        60: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+        63: invokevirtual #25                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getCrc32:()J\n+        66: aload_0\n+        67: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+        70: invokevirtual #26                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesWrittenForLastEntry:()J\n+        73: aload_0\n+        74: getfield      #17                 // Field streamCompressor:Lorg/apache/commons/compress/archivers/zip/StreamCompressor;\n+        77: invokevirtual #27                 // Method org/apache/commons/compress/archivers/zip/StreamCompressor.getBytesRead:()J\n+        80: invokespecial #28                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;JJJ)V\n+        83: invokeinterface #29,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z\n+        88: pop\n+        89: return\n       Exception table:\n          from    to  target type\n-            27    31    34   Class java/lang/Throwable\n-             7    19    52   Class java/lang/Throwable\n-             7    19    60   any\n-            70    74    77   Class java/lang/Throwable\n-            52    62    60   any\n+             5    17    28   Class java/lang/Throwable\n+            33    37    40   Class java/lang/Throwable\n       LineNumberTable:\n         line 180: 0\n-        line 181: 7\n-        line 182: 19\n-        line 180: 52\n-        line 182: 60\n-        line 183: 95\n-        line 184: 115\n-        line 183: 128\n-        line 185: 134\n-      StackMapTable: number_of_entries = 8\n+        line 181: 5\n+        line 182: 17\n+        line 180: 28\n+        line 183: 50\n+        line 184: 70\n+        line 183: 83\n+        line 185: 89\n+      StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 34\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest, class java/io/InputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n+          offset_delta = 28\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest, class java/io/InputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest, class java/io/InputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 11\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest, class java/io/InputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest ]\n-          stack = []\n+        frame_type = 7 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 1\n     Exceptions:\n       throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n@@ -497,193 +455,121 @@\n     Exceptions:\n       throws java.io.IOException\n \n   public void writeTo(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=5, locals=13, args_size=2\n+      stack=5, locals=8, args_size=2\n          0: aload_0\n          1: getfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n          4: invokeinterface #35,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.closeForWriting:()V\n          9: aload_0\n         10: getfield      #2                  // Field backingStore:Lorg/apache/commons/compress/parallel/ScatterGatherBackingStore;\n         13: invokeinterface #36,  1           // InterfaceMethod org/apache/commons/compress/parallel/ScatterGatherBackingStore.getInputStream:()Ljava/io/InputStream;\n         18: astore_2\n-        19: aconst_null\n-        20: astore_3\n-        21: aload_0\n-        22: getfield      #1                  // Field items:Ljava/util/Queue;\n-        25: invokeinterface #37,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n-        30: astore        4\n-        32: aload         4\n-        34: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        39: ifeq          173\n-        42: aload         4\n-        44: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        49: checkcast     #24                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n-        52: astore        5\n-        54: new           #40                 // class org/apache/commons/compress/utils/BoundedInputStream\n-        57: dup\n-        58: aload_2\n-        59: aload         5\n-        61: getfield      #41                 // Field org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n-        64: invokespecial #42                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-        67: astore        6\n-        69: aconst_null\n-        70: astore        7\n-        72: aload_1\n-        73: aload         5\n-        75: invokevirtual #43                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-        78: aload         6\n-        80: invokevirtual #44                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n-        83: aload         6\n-        85: ifnull        170\n-        88: aload         7\n-        90: ifnull        113\n-        93: aload         6\n-        95: invokevirtual #45                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-        98: goto          170\n-       101: astore        8\n-       103: aload         7\n-       105: aload         8\n-       107: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       110: goto          170\n-       113: aload         6\n-       115: invokevirtual #45                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-       118: goto          170\n-       121: astore        8\n-       123: aload         8\n-       125: astore        7\n-       127: aload         8\n-       129: athrow\n-       130: astore        9\n-       132: aload         6\n-       134: ifnull        167\n-       137: aload         7\n-       139: ifnull        162\n-       142: aload         6\n-       144: invokevirtual #45                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-       147: goto          167\n-       150: astore        10\n-       152: aload         7\n-       154: aload         10\n-       156: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       159: goto          167\n-       162: aload         6\n-       164: invokevirtual #45                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n-       167: aload         9\n-       169: athrow\n-       170: goto          32\n-       173: aload_2\n-       174: ifnull        249\n-       177: aload_3\n-       178: ifnull        199\n-       181: aload_2\n-       182: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-       185: goto          249\n-       188: astore        4\n-       190: aload_3\n-       191: aload         4\n-       193: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       196: goto          249\n-       199: aload_2\n-       200: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-       203: goto          249\n-       206: astore        4\n-       208: aload         4\n-       210: astore_3\n-       211: aload         4\n-       213: athrow\n-       214: astore        11\n-       216: aload_2\n-       217: ifnull        246\n-       220: aload_3\n-       221: ifnull        242\n-       224: aload_2\n-       225: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-       228: goto          246\n-       231: astore        12\n-       233: aload_3\n-       234: aload         12\n-       236: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       239: goto          246\n-       242: aload_2\n-       243: invokevirtual #21                 // Method java/io/InputStream.close:()V\n-       246: aload         11\n-       248: athrow\n-       249: return\n+        19: aload_0\n+        20: getfield      #1                  // Field items:Ljava/util/Queue;\n+        23: invokeinterface #37,  1           // InterfaceMethod java/util/Queue.iterator:()Ljava/util/Iterator;\n+        28: astore_3\n+        29: aload_3\n+        30: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        35: ifeq          108\n+        38: aload_3\n+        39: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        44: checkcast     #24                 // class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry\n+        47: astore        4\n+        49: new           #40                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        52: dup\n+        53: aload_2\n+        54: aload         4\n+        56: getfield      #41                 // Field org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.compressedSize:J\n+        59: invokespecial #42                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        62: astore        5\n+        64: aload_1\n+        65: aload         4\n+        67: invokevirtual #43                 // Method org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry.transferToArchiveEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+        70: aload         5\n+        72: invokevirtual #44                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.addRawArchiveEntry:(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Ljava/io/InputStream;)V\n+        75: aload         5\n+        77: invokevirtual #45                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+        80: goto          105\n+        83: astore        6\n+        85: aload         5\n+        87: invokevirtual #45                 // Method org/apache/commons/compress/utils/BoundedInputStream.close:()V\n+        90: goto          102\n+        93: astore        7\n+        95: aload         6\n+        97: aload         7\n+        99: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       102: aload         6\n+       104: athrow\n+       105: goto          29\n+       108: aload_2\n+       109: ifnull        141\n+       112: aload_2\n+       113: invokevirtual #21                 // Method java/io/InputStream.close:()V\n+       116: goto          141\n+       119: astore_3\n+       120: aload_2\n+       121: ifnull        139\n+       124: aload_2\n+       125: invokevirtual #21                 // Method java/io/InputStream.close:()V\n+       128: goto          139\n+       131: astore        4\n+       133: aload_3\n+       134: aload         4\n+       136: invokevirtual #23                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       139: aload_3\n+       140: athrow\n+       141: return\n       Exception table:\n          from    to  target type\n-            93    98   101   Class java/lang/Throwable\n-            72    83   121   Class java/lang/Throwable\n-            72    83   130   any\n-           142   147   150   Class java/lang/Throwable\n-           121   132   130   any\n-           181   185   188   Class java/lang/Throwable\n-            21   173   206   Class java/lang/Throwable\n-            21   173   214   any\n-           224   228   231   Class java/lang/Throwable\n-           206   216   214   any\n+            64    75    83   Class java/lang/Throwable\n+            85    90    93   Class java/lang/Throwable\n+            19   108   119   Class java/lang/Throwable\n+           124   128   131   Class java/lang/Throwable\n       LineNumberTable:\n         line 214: 0\n         line 215: 9\n-        line 216: 21\n-        line 217: 54\n-        line 219: 72\n-        line 220: 83\n-        line 217: 121\n-        line 220: 130\n-        line 221: 170\n-        line 222: 173\n-        line 215: 206\n-        line 222: 214\n-        line 223: 249\n-      StackMapTable: number_of_entries = 18\n-        frame_type = 254 /* append */\n-          offset_delta = 32\n-          locals = [ class java/io/InputStream, class java/lang/Throwable, class java/util/Iterator ]\n+        line 216: 19\n+        line 217: 49\n+        line 219: 64\n+        line 220: 75\n+        line 217: 83\n+        line 221: 105\n+        line 222: 108\n+        line 215: 119\n+        line 223: 141\n+      StackMapTable: number_of_entries = 10\n+        frame_type = 253 /* append */\n+          offset_delta = 29\n+          locals = [ class java/io/InputStream, class java/util/Iterator ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 68\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/lang/Throwable, class java/util/Iterator, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 71 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 72 /* same_locals_1_stack_item */\n+          offset_delta = 53\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/util/Iterator, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 19\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/lang/Throwable, class java/util/Iterator, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 9\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/util/Iterator, class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream$CompressedEntry, class org/apache/commons/compress/utils/BoundedInputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 11 /* same */\n-        frame_type = 4 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 8 /* same */\n+        frame_type = 248 /* chop */\n           offset_delta = 2\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/lang/Throwable, class java/util/Iterator ]\n-          stack = []\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-        frame_type = 78 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n+        frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/lang/Throwable, top, top, top, top, top, top, top, class java/lang/Throwable ]\n+          offset_delta = 11\n+          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream, class java/io/InputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 2\n-          locals = [ class org/apache/commons/compress/archivers/zip/ScatterZipOutputStream, class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream ]\n-          stack = []\n+        frame_type = 7 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 1\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.commons.compress.archivers.zip.ScatterZipOutputStream$ZipEntryWriter zipEntryWriter() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ScatterZipOutputStream$ZipEntryWriter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n"}]}
