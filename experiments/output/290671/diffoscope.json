{"diffoscope-json-version": 1, "source1": "first/FileFilterUtils.class", "source2": "second/FileFilterUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,314 +1,310 @@\n-  SHA-256 checksum d46461a7b1829b26a54b7298cdc895454c1f00cd99549a5bb568236d4b6719d3\n+  SHA-256 checksum f93bf194288b9e5d057c3535650343199d003fe8ed1c28388cd0fb14f634a7a6\n   Compiled from \"FileFilterUtils.java\"\n public class org.apache.commons.io.filefilter.FileFilterUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #86                         // org/apache/commons/io/filefilter/FileFilterUtils\n   super_class: #87                        // java/lang/Object\n   interfaces: 0, fields: 2, methods: 44, attributes: 1\n Constant pool:\n-    #1 = Methodref          #87.#165      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #166          // java/lang/IllegalArgumentException\n-    #3 = String             #167          // file filter is null\n-    #4 = Methodref          #2.#168       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Fieldref           #169.#170     // org/apache/commons/io/FileUtils.EMPTY_FILE_ARRAY:[Ljava/io/File;\n-    #6 = Class              #171          // java/util/ArrayList\n-    #7 = Methodref          #6.#165       // java/util/ArrayList.\"<init>\":()V\n-    #8 = String             #172          // file array contains null\n-    #9 = InterfaceMethodref #78.#173      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #10 = InterfaceMethodref #15.#174      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #11 = InterfaceMethodref #15.#175      // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #12 = Class              #176          // \"[Ljava/io/File;\"\n-   #13 = Methodref          #86.#177      // org/apache/commons/io/filefilter/FileFilterUtils.filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n-   #14 = Methodref          #86.#178      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n-   #15 = Class              #179          // java/util/List\n-   #16 = Methodref          #86.#180      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n-   #17 = Methodref          #181.#182     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #18 = Class              #183          // java/util/HashSet\n-   #19 = Methodref          #18.#184      // java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n-   #20 = Methodref          #18.#165      // java/util/HashSet.\"<init>\":()V\n-   #21 = Class              #185          // java/util/Set\n-   #22 = InterfaceMethodref #186.#187     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #23 = InterfaceMethodref #188.#189     // java/util/Iterator.hasNext:()Z\n-   #24 = InterfaceMethodref #188.#190     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #25 = Class              #191          // java/io/File\n-   #26 = String             #192          // file collection contains null\n-   #27 = InterfaceMethodref #193.#174     // java/util/Collection.add:(Ljava/lang/Object;)Z\n-   #28 = Class              #194          // org/apache/commons/io/filefilter/PrefixFileFilter\n-   #29 = Methodref          #28.#168      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Methodref          #28.#195      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #31 = Class              #196          // org/apache/commons/io/filefilter/SuffixFileFilter\n-   #32 = Methodref          #31.#168      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Methodref          #31.#195      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #34 = Class              #197          // org/apache/commons/io/filefilter/NameFileFilter\n-   #35 = Methodref          #34.#168      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #36 = Methodref          #34.#195      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #37 = Fieldref           #198.#199     // org/apache/commons/io/filefilter/DirectoryFileFilter.DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #38 = Fieldref           #200.#201     // org/apache/commons/io/filefilter/FileFileFilter.FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #39 = Class              #202          // org/apache/commons/io/filefilter/AndFileFilter\n-   #40 = Methodref          #39.#203      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #41 = Class              #204          // org/apache/commons/io/filefilter/OrFileFilter\n-   #42 = Methodref          #41.#203      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #43 = Methodref          #86.#205      // org/apache/commons/io/filefilter/FileFilterUtils.toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n-   #44 = Methodref          #39.#206      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/List;)V\n-   #45 = Methodref          #41.#206      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/List;)V\n-   #46 = String             #207          // The filters must not be null\n-   #47 = Methodref          #6.#208       // java/util/ArrayList.\"<init>\":(I)V\n-   #48 = Class              #209          // java/lang/StringBuilder\n-   #49 = Methodref          #48.#165      // java/lang/StringBuilder.\"<init>\":()V\n-   #50 = String             #210          // The filter[\n-   #51 = Methodref          #48.#211      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #52 = Methodref          #48.#212      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #53 = String             #213          // ] is null\n-   #54 = Methodref          #48.#214      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #55 = Class              #215          // org/apache/commons/io/filefilter/NotFileFilter\n-   #56 = Methodref          #55.#216      // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-   #57 = Fieldref           #217.#218     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #58 = Fieldref           #219.#220     // org/apache/commons/io/filefilter/FalseFileFilter.FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #59 = Class              #221          // org/apache/commons/io/filefilter/DelegateFileFilter\n-   #60 = Methodref          #59.#222      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FileFilter;)V\n-   #61 = Methodref          #59.#223      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FilenameFilter;)V\n-   #62 = Class              #224          // org/apache/commons/io/filefilter/AgeFileFilter\n-   #63 = Methodref          #62.#225      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(J)V\n-   #64 = Methodref          #62.#226      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(JZ)V\n-   #65 = Methodref          #62.#227      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;)V\n-   #66 = Methodref          #62.#228      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;Z)V\n-   #67 = Methodref          #62.#229      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;)V\n-   #68 = Methodref          #62.#230      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;Z)V\n-   #69 = Class              #231          // org/apache/commons/io/filefilter/SizeFileFilter\n-   #70 = Methodref          #69.#225      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(J)V\n-   #71 = Methodref          #69.#226      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n-   #72 = Class              #232          // org/apache/commons/io/filefilter/MagicNumberFileFilter\n-   #73 = Methodref          #72.#168      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;)V\n-   #74 = Methodref          #72.#233      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;J)V\n-   #75 = Methodref          #72.#234      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([B)V\n-   #76 = Methodref          #72.#235      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([BJ)V\n-   #77 = Fieldref           #86.#236      // org/apache/commons/io/filefilter/FileFilterUtils.cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #78 = Class              #237          // org/apache/commons/io/filefilter/IOFileFilter\n-   #79 = Methodref          #86.#238      // org/apache/commons/io/filefilter/FileFilterUtils.and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #80 = Fieldref           #86.#239      // org/apache/commons/io/filefilter/FileFilterUtils.svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #81 = Methodref          #86.#240      // org/apache/commons/io/filefilter/FileFilterUtils.directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #82 = String             #241          // CVS\n-   #83 = Methodref          #86.#242      // org/apache/commons/io/filefilter/FileFilterUtils.nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #84 = Methodref          #86.#243      // org/apache/commons/io/filefilter/FileFilterUtils.notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #85 = String             #244          // .svn\n-   #86 = Class              #245          // org/apache/commons/io/filefilter/FileFilterUtils\n-   #87 = Class              #246          // java/lang/Object\n+    #1 = Methodref          #87.#162      // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #163          // java/lang/IllegalArgumentException\n+    #3 = String             #164          // file filter is null\n+    #4 = Methodref          #2.#165       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #5 = Fieldref           #166.#167     // org/apache/commons/io/FileUtils.EMPTY_FILE_ARRAY:[Ljava/io/File;\n+    #6 = Class              #168          // java/util/ArrayList\n+    #7 = Methodref          #6.#162       // java/util/ArrayList.\"<init>\":()V\n+    #8 = String             #169          // file array contains null\n+    #9 = InterfaceMethodref #78.#170      // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+   #10 = InterfaceMethodref #15.#171      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #11 = InterfaceMethodref #15.#172      // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #12 = Class              #173          // \"[Ljava/io/File;\"\n+   #13 = Methodref          #86.#174      // org/apache/commons/io/filefilter/FileFilterUtils.filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n+   #14 = Methodref          #86.#175      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n+   #15 = Class              #176          // java/util/List\n+   #16 = Methodref          #86.#177      // org/apache/commons/io/filefilter/FileFilterUtils.filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n+   #17 = Methodref          #178.#179     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #18 = Class              #180          // java/util/HashSet\n+   #19 = Methodref          #18.#181      // java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n+   #20 = Methodref          #18.#162      // java/util/HashSet.\"<init>\":()V\n+   #21 = Class              #182          // java/util/Set\n+   #22 = InterfaceMethodref #183.#184     // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #23 = InterfaceMethodref #112.#185     // java/util/Iterator.hasNext:()Z\n+   #24 = InterfaceMethodref #112.#186     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #25 = Class              #187          // java/io/File\n+   #26 = String             #188          // file collection contains null\n+   #27 = InterfaceMethodref #189.#171     // java/util/Collection.add:(Ljava/lang/Object;)Z\n+   #28 = Class              #190          // org/apache/commons/io/filefilter/PrefixFileFilter\n+   #29 = Methodref          #28.#165      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Methodref          #28.#191      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #31 = Class              #192          // org/apache/commons/io/filefilter/SuffixFileFilter\n+   #32 = Methodref          #31.#165      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #33 = Methodref          #31.#191      // org/apache/commons/io/filefilter/SuffixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #34 = Class              #193          // org/apache/commons/io/filefilter/NameFileFilter\n+   #35 = Methodref          #34.#165      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #36 = Methodref          #34.#191      // org/apache/commons/io/filefilter/NameFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #37 = Fieldref           #194.#195     // org/apache/commons/io/filefilter/DirectoryFileFilter.DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #38 = Fieldref           #196.#197     // org/apache/commons/io/filefilter/FileFileFilter.FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #39 = Class              #198          // org/apache/commons/io/filefilter/AndFileFilter\n+   #40 = Methodref          #39.#199      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #41 = Class              #200          // org/apache/commons/io/filefilter/OrFileFilter\n+   #42 = Methodref          #41.#199      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #43 = Methodref          #86.#201      // org/apache/commons/io/filefilter/FileFilterUtils.toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n+   #44 = Methodref          #39.#202      // org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Ljava/util/List;)V\n+   #45 = Methodref          #41.#202      // org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Ljava/util/List;)V\n+   #46 = String             #203          // The filters must not be null\n+   #47 = Methodref          #6.#204       // java/util/ArrayList.\"<init>\":(I)V\n+   #48 = Class              #205          // java/lang/StringBuilder\n+   #49 = Methodref          #48.#162      // java/lang/StringBuilder.\"<init>\":()V\n+   #50 = String             #206          // The filter[\n+   #51 = Methodref          #48.#207      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Methodref          #48.#208      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #53 = String             #209          // ] is null\n+   #54 = Methodref          #48.#210      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #55 = Class              #211          // org/apache/commons/io/filefilter/NotFileFilter\n+   #56 = Methodref          #55.#212      // org/apache/commons/io/filefilter/NotFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+   #57 = Fieldref           #213.#214     // org/apache/commons/io/filefilter/TrueFileFilter.TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #58 = Fieldref           #215.#216     // org/apache/commons/io/filefilter/FalseFileFilter.FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #59 = Class              #217          // org/apache/commons/io/filefilter/DelegateFileFilter\n+   #60 = Methodref          #59.#218      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FileFilter;)V\n+   #61 = Methodref          #59.#219      // org/apache/commons/io/filefilter/DelegateFileFilter.\"<init>\":(Ljava/io/FilenameFilter;)V\n+   #62 = Class              #220          // org/apache/commons/io/filefilter/AgeFileFilter\n+   #63 = Methodref          #62.#221      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(J)V\n+   #64 = Methodref          #62.#222      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(JZ)V\n+   #65 = Methodref          #62.#223      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;)V\n+   #66 = Methodref          #62.#224      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/util/Date;Z)V\n+   #67 = Methodref          #62.#225      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;)V\n+   #68 = Methodref          #62.#226      // org/apache/commons/io/filefilter/AgeFileFilter.\"<init>\":(Ljava/io/File;Z)V\n+   #69 = Class              #227          // org/apache/commons/io/filefilter/SizeFileFilter\n+   #70 = Methodref          #69.#221      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(J)V\n+   #71 = Methodref          #69.#222      // org/apache/commons/io/filefilter/SizeFileFilter.\"<init>\":(JZ)V\n+   #72 = Class              #228          // org/apache/commons/io/filefilter/MagicNumberFileFilter\n+   #73 = Methodref          #72.#165      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;)V\n+   #74 = Methodref          #72.#229      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":(Ljava/lang/String;J)V\n+   #75 = Methodref          #72.#230      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([B)V\n+   #76 = Methodref          #72.#231      // org/apache/commons/io/filefilter/MagicNumberFileFilter.\"<init>\":([BJ)V\n+   #77 = Fieldref           #86.#232      // org/apache/commons/io/filefilter/FileFilterUtils.cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #78 = Class              #233          // org/apache/commons/io/filefilter/IOFileFilter\n+   #79 = Methodref          #86.#234      // org/apache/commons/io/filefilter/FileFilterUtils.and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #80 = Fieldref           #86.#235      // org/apache/commons/io/filefilter/FileFilterUtils.svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #81 = Methodref          #86.#236      // org/apache/commons/io/filefilter/FileFilterUtils.directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #82 = String             #237          // CVS\n+   #83 = Methodref          #86.#238      // org/apache/commons/io/filefilter/FileFilterUtils.nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #84 = Methodref          #86.#239      // org/apache/commons/io/filefilter/FileFilterUtils.notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+   #85 = String             #240          // .svn\n+   #86 = Class              #241          // org/apache/commons/io/filefilter/FileFilterUtils\n+   #87 = Class              #242          // java/lang/Object\n    #88 = Utf8               cvsFilter\n    #89 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n    #90 = Utf8               svnFilter\n    #91 = Utf8               <init>\n    #92 = Utf8               ()V\n    #93 = Utf8               Code\n    #94 = Utf8               LineNumberTable\n    #95 = Utf8               filter\n    #96 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n    #97 = Utf8               StackMapTable\n-   #98 = Class              #237          // org/apache/commons/io/filefilter/IOFileFilter\n-   #99 = Class              #179          // java/util/List\n-  #100 = Class              #191          // java/io/File\n-  #101 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;\n-  #102 = Utf8               Signature\n-  #103 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n-  #104 = Utf8               filterList\n-  #105 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n-  #106 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n-  #107 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;\n-  #108 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n-  #109 = Utf8               filterSet\n-  #110 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;\n-  #111 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n-  #112 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;\n-  #113 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n-  #114 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n-  #115 = Class              #247          // java/util/Iterator\n-  #116 = Utf8               <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n-  #117 = Utf8               prefixFileFilter\n-  #118 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #119 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #120 = Utf8               suffixFileFilter\n-  #121 = Utf8               nameFileFilter\n-  #122 = Utf8               directoryFileFilter\n-  #123 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #124 = Utf8               fileFileFilter\n-  #125 = Utf8               andFileFilter\n-  #126 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #127 = Utf8               Deprecated\n-  #128 = Utf8               RuntimeVisibleAnnotations\n-  #129 = Utf8               Ljava/lang/Deprecated;\n-  #130 = Utf8               orFileFilter\n-  #131 = Utf8               and\n-  #132 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #133 = Utf8               or\n-  #134 = Utf8               toList\n-  #135 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n-  #136 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n-  #137 = Utf8               notFileFilter\n-  #138 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #139 = Utf8               trueFileFilter\n-  #140 = Utf8               falseFileFilter\n-  #141 = Utf8               asFileFilter\n-  #142 = Utf8               (Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #143 = Utf8               (Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #144 = Utf8               ageFileFilter\n-  #145 = Utf8               (J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #146 = Utf8               (JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #147 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #148 = Utf8               (Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #149 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #150 = Utf8               (Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #151 = Utf8               sizeFileFilter\n-  #152 = Utf8               sizeRangeFileFilter\n-  #153 = Utf8               (JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #154 = Utf8               magicNumberFileFilter\n-  #155 = Utf8               (Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #156 = Utf8               ([B)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #157 = Utf8               ([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #158 = Utf8               makeCVSAware\n-  #159 = Utf8               makeSVNAware\n-  #160 = Utf8               makeDirectoryOnly\n-  #161 = Utf8               makeFileOnly\n-  #162 = Utf8               <clinit>\n-  #163 = Utf8               SourceFile\n-  #164 = Utf8               FileFilterUtils.java\n-  #165 = NameAndType        #91:#92       // \"<init>\":()V\n-  #166 = Utf8               java/lang/IllegalArgumentException\n-  #167 = Utf8               file filter is null\n-  #168 = NameAndType        #91:#248      // \"<init>\":(Ljava/lang/String;)V\n-  #169 = Class              #249          // org/apache/commons/io/FileUtils\n-  #170 = NameAndType        #250:#176     // EMPTY_FILE_ARRAY:[Ljava/io/File;\n-  #171 = Utf8               java/util/ArrayList\n-  #172 = Utf8               file array contains null\n-  #173 = NameAndType        #251:#252     // accept:(Ljava/io/File;)Z\n-  #174 = NameAndType        #253:#254     // add:(Ljava/lang/Object;)Z\n-  #175 = NameAndType        #255:#256     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #176 = Utf8               [Ljava/io/File;\n-  #177 = NameAndType        #104:#105     // filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n-  #178 = NameAndType        #95:#114      // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n-  #179 = Utf8               java/util/List\n-  #180 = NameAndType        #95:#96       // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n-  #181 = Class              #257          // java/util/Arrays\n-  #182 = NameAndType        #258:#259     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #183 = Utf8               java/util/HashSet\n-  #184 = NameAndType        #91:#260      // \"<init>\":(Ljava/util/Collection;)V\n-  #185 = Utf8               java/util/Set\n-  #186 = Class              #261          // java/lang/Iterable\n-  #187 = NameAndType        #262:#263     // iterator:()Ljava/util/Iterator;\n-  #188 = Class              #247          // java/util/Iterator\n-  #189 = NameAndType        #264:#265     // hasNext:()Z\n-  #190 = NameAndType        #266:#267     // next:()Ljava/lang/Object;\n-  #191 = Utf8               java/io/File\n-  #192 = Utf8               file collection contains null\n-  #193 = Class              #268          // java/util/Collection\n-  #194 = Utf8               org/apache/commons/io/filefilter/PrefixFileFilter\n-  #195 = NameAndType        #91:#269      // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #196 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n-  #197 = Utf8               org/apache/commons/io/filefilter/NameFileFilter\n-  #198 = Class              #270          // org/apache/commons/io/filefilter/DirectoryFileFilter\n-  #199 = NameAndType        #271:#89      // DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #200 = Class              #272          // org/apache/commons/io/filefilter/FileFileFilter\n-  #201 = NameAndType        #273:#89      // FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #202 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n-  #203 = NameAndType        #91:#274      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #204 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n-  #205 = NameAndType        #134:#135     // toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n-  #206 = NameAndType        #91:#275      // \"<init>\":(Ljava/util/List;)V\n-  #207 = Utf8               The filters must not be null\n-  #208 = NameAndType        #91:#276      // \"<init>\":(I)V\n-  #209 = Utf8               java/lang/StringBuilder\n-  #210 = Utf8               The filter[\n-  #211 = NameAndType        #277:#278     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #212 = NameAndType        #277:#279     // append:(I)Ljava/lang/StringBuilder;\n-  #213 = Utf8               ] is null\n-  #214 = NameAndType        #280:#281     // toString:()Ljava/lang/String;\n-  #215 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #216 = NameAndType        #91:#282      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #217 = Class              #283          // org/apache/commons/io/filefilter/TrueFileFilter\n-  #218 = NameAndType        #284:#89      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #219 = Class              #285          // org/apache/commons/io/filefilter/FalseFileFilter\n-  #220 = NameAndType        #286:#89      // FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #221 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n-  #222 = NameAndType        #91:#287      // \"<init>\":(Ljava/io/FileFilter;)V\n-  #223 = NameAndType        #91:#288      // \"<init>\":(Ljava/io/FilenameFilter;)V\n-  #224 = Utf8               org/apache/commons/io/filefilter/AgeFileFilter\n-  #225 = NameAndType        #91:#289      // \"<init>\":(J)V\n-  #226 = NameAndType        #91:#290      // \"<init>\":(JZ)V\n-  #227 = NameAndType        #91:#291      // \"<init>\":(Ljava/util/Date;)V\n-  #228 = NameAndType        #91:#292      // \"<init>\":(Ljava/util/Date;Z)V\n-  #229 = NameAndType        #91:#293      // \"<init>\":(Ljava/io/File;)V\n-  #230 = NameAndType        #91:#294      // \"<init>\":(Ljava/io/File;Z)V\n-  #231 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n-  #232 = Utf8               org/apache/commons/io/filefilter/MagicNumberFileFilter\n-  #233 = NameAndType        #91:#295      // \"<init>\":(Ljava/lang/String;J)V\n-  #234 = NameAndType        #91:#296      // \"<init>\":([B)V\n-  #235 = NameAndType        #91:#297      // \"<init>\":([BJ)V\n-  #236 = NameAndType        #88:#89       // cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #237 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #238 = NameAndType        #131:#132     // and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #239 = NameAndType        #90:#89       // svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #240 = NameAndType        #122:#123     // directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #241 = Utf8               CVS\n-  #242 = NameAndType        #121:#118     // nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #243 = NameAndType        #137:#138     // notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #244 = Utf8               .svn\n-  #245 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n-  #246 = Utf8               java/lang/Object\n-  #247 = Utf8               java/util/Iterator\n-  #248 = Utf8               (Ljava/lang/String;)V\n-  #249 = Utf8               org/apache/commons/io/FileUtils\n-  #250 = Utf8               EMPTY_FILE_ARRAY\n-  #251 = Utf8               accept\n-  #252 = Utf8               (Ljava/io/File;)Z\n-  #253 = Utf8               add\n-  #254 = Utf8               (Ljava/lang/Object;)Z\n-  #255 = Utf8               toArray\n-  #256 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #257 = Utf8               java/util/Arrays\n-  #258 = Utf8               asList\n-  #259 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #260 = Utf8               (Ljava/util/Collection;)V\n-  #261 = Utf8               java/lang/Iterable\n-  #262 = Utf8               iterator\n-  #263 = Utf8               ()Ljava/util/Iterator;\n-  #264 = Utf8               hasNext\n-  #265 = Utf8               ()Z\n-  #266 = Utf8               next\n-  #267 = Utf8               ()Ljava/lang/Object;\n-  #268 = Utf8               java/util/Collection\n-  #269 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #270 = Utf8               org/apache/commons/io/filefilter/DirectoryFileFilter\n-  #271 = Utf8               DIRECTORY\n-  #272 = Utf8               org/apache/commons/io/filefilter/FileFileFilter\n-  #273 = Utf8               FILE\n-  #274 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #275 = Utf8               (Ljava/util/List;)V\n-  #276 = Utf8               (I)V\n-  #277 = Utf8               append\n-  #278 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #279 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #280 = Utf8               toString\n-  #281 = Utf8               ()Ljava/lang/String;\n-  #282 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #283 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n-  #284 = Utf8               TRUE\n-  #285 = Utf8               org/apache/commons/io/filefilter/FalseFileFilter\n-  #286 = Utf8               FALSE\n-  #287 = Utf8               (Ljava/io/FileFilter;)V\n-  #288 = Utf8               (Ljava/io/FilenameFilter;)V\n-  #289 = Utf8               (J)V\n-  #290 = Utf8               (JZ)V\n-  #291 = Utf8               (Ljava/util/Date;)V\n-  #292 = Utf8               (Ljava/util/Date;Z)V\n-  #293 = Utf8               (Ljava/io/File;)V\n-  #294 = Utf8               (Ljava/io/File;Z)V\n-  #295 = Utf8               (Ljava/lang/String;J)V\n-  #296 = Utf8               ([B)V\n-  #297 = Utf8               ([BJ)V\n+   #98 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)[Ljava/io/File;\n+   #99 = Utf8               Signature\n+  #100 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n+  #101 = Utf8               filterList\n+  #102 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n+  #103 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n+  #104 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;\n+  #105 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n+  #106 = Utf8               filterSet\n+  #107 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;\n+  #108 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n+  #109 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;\n+  #110 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n+  #111 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n+  #112 = Class              #243          // java/util/Iterator\n+  #113 = Utf8               <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n+  #114 = Utf8               prefixFileFilter\n+  #115 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #116 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #117 = Utf8               suffixFileFilter\n+  #118 = Utf8               nameFileFilter\n+  #119 = Utf8               directoryFileFilter\n+  #120 = Utf8               ()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #121 = Utf8               fileFileFilter\n+  #122 = Utf8               andFileFilter\n+  #123 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #124 = Utf8               Deprecated\n+  #125 = Utf8               RuntimeVisibleAnnotations\n+  #126 = Utf8               Ljava/lang/Deprecated;\n+  #127 = Utf8               orFileFilter\n+  #128 = Utf8               and\n+  #129 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #130 = Utf8               or\n+  #131 = Utf8               toList\n+  #132 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n+  #133 = Utf8               ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+  #134 = Utf8               notFileFilter\n+  #135 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #136 = Utf8               trueFileFilter\n+  #137 = Utf8               falseFileFilter\n+  #138 = Utf8               asFileFilter\n+  #139 = Utf8               (Ljava/io/FileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #140 = Utf8               (Ljava/io/FilenameFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #141 = Utf8               ageFileFilter\n+  #142 = Utf8               (J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #143 = Utf8               (JZ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #144 = Utf8               (Ljava/util/Date;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #145 = Utf8               (Ljava/util/Date;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #146 = Utf8               (Ljava/io/File;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #147 = Utf8               (Ljava/io/File;Z)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #148 = Utf8               sizeFileFilter\n+  #149 = Utf8               sizeRangeFileFilter\n+  #150 = Utf8               (JJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #151 = Utf8               magicNumberFileFilter\n+  #152 = Utf8               (Ljava/lang/String;J)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #153 = Utf8               ([B)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #154 = Utf8               ([BJ)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #155 = Utf8               makeCVSAware\n+  #156 = Utf8               makeSVNAware\n+  #157 = Utf8               makeDirectoryOnly\n+  #158 = Utf8               makeFileOnly\n+  #159 = Utf8               <clinit>\n+  #160 = Utf8               SourceFile\n+  #161 = Utf8               FileFilterUtils.java\n+  #162 = NameAndType        #91:#92       // \"<init>\":()V\n+  #163 = Utf8               java/lang/IllegalArgumentException\n+  #164 = Utf8               file filter is null\n+  #165 = NameAndType        #91:#244      // \"<init>\":(Ljava/lang/String;)V\n+  #166 = Class              #245          // org/apache/commons/io/FileUtils\n+  #167 = NameAndType        #246:#173     // EMPTY_FILE_ARRAY:[Ljava/io/File;\n+  #168 = Utf8               java/util/ArrayList\n+  #169 = Utf8               file array contains null\n+  #170 = NameAndType        #247:#248     // accept:(Ljava/io/File;)Z\n+  #171 = NameAndType        #249:#250     // add:(Ljava/lang/Object;)Z\n+  #172 = NameAndType        #251:#252     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #173 = Utf8               [Ljava/io/File;\n+  #174 = NameAndType        #101:#102     // filterList:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n+  #175 = NameAndType        #95:#111      // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n+  #176 = Utf8               java/util/List\n+  #177 = NameAndType        #95:#96       // filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)[Ljava/io/File;\n+  #178 = Class              #253          // java/util/Arrays\n+  #179 = NameAndType        #254:#255     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #180 = Utf8               java/util/HashSet\n+  #181 = NameAndType        #91:#256      // \"<init>\":(Ljava/util/Collection;)V\n+  #182 = Utf8               java/util/Set\n+  #183 = Class              #257          // java/lang/Iterable\n+  #184 = NameAndType        #258:#259     // iterator:()Ljava/util/Iterator;\n+  #185 = NameAndType        #260:#261     // hasNext:()Z\n+  #186 = NameAndType        #262:#263     // next:()Ljava/lang/Object;\n+  #187 = Utf8               java/io/File\n+  #188 = Utf8               file collection contains null\n+  #189 = Class              #264          // java/util/Collection\n+  #190 = Utf8               org/apache/commons/io/filefilter/PrefixFileFilter\n+  #191 = NameAndType        #91:#265      // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #192 = Utf8               org/apache/commons/io/filefilter/SuffixFileFilter\n+  #193 = Utf8               org/apache/commons/io/filefilter/NameFileFilter\n+  #194 = Class              #266          // org/apache/commons/io/filefilter/DirectoryFileFilter\n+  #195 = NameAndType        #267:#89      // DIRECTORY:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #196 = Class              #268          // org/apache/commons/io/filefilter/FileFileFilter\n+  #197 = NameAndType        #269:#89      // FILE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #198 = Utf8               org/apache/commons/io/filefilter/AndFileFilter\n+  #199 = NameAndType        #91:#270      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #200 = Utf8               org/apache/commons/io/filefilter/OrFileFilter\n+  #201 = NameAndType        #131:#132     // toList:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List;\n+  #202 = NameAndType        #91:#271      // \"<init>\":(Ljava/util/List;)V\n+  #203 = Utf8               The filters must not be null\n+  #204 = NameAndType        #91:#272      // \"<init>\":(I)V\n+  #205 = Utf8               java/lang/StringBuilder\n+  #206 = Utf8               The filter[\n+  #207 = NameAndType        #273:#274     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #208 = NameAndType        #273:#275     // append:(I)Ljava/lang/StringBuilder;\n+  #209 = Utf8               ] is null\n+  #210 = NameAndType        #276:#277     // toString:()Ljava/lang/String;\n+  #211 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+  #212 = NameAndType        #91:#278      // \"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #213 = Class              #279          // org/apache/commons/io/filefilter/TrueFileFilter\n+  #214 = NameAndType        #280:#89      // TRUE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #215 = Class              #281          // org/apache/commons/io/filefilter/FalseFileFilter\n+  #216 = NameAndType        #282:#89      // FALSE:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #217 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n+  #218 = NameAndType        #91:#283      // \"<init>\":(Ljava/io/FileFilter;)V\n+  #219 = NameAndType        #91:#284      // \"<init>\":(Ljava/io/FilenameFilter;)V\n+  #220 = Utf8               org/apache/commons/io/filefilter/AgeFileFilter\n+  #221 = NameAndType        #91:#285      // \"<init>\":(J)V\n+  #222 = NameAndType        #91:#286      // \"<init>\":(JZ)V\n+  #223 = NameAndType        #91:#287      // \"<init>\":(Ljava/util/Date;)V\n+  #224 = NameAndType        #91:#288      // \"<init>\":(Ljava/util/Date;Z)V\n+  #225 = NameAndType        #91:#289      // \"<init>\":(Ljava/io/File;)V\n+  #226 = NameAndType        #91:#290      // \"<init>\":(Ljava/io/File;Z)V\n+  #227 = Utf8               org/apache/commons/io/filefilter/SizeFileFilter\n+  #228 = Utf8               org/apache/commons/io/filefilter/MagicNumberFileFilter\n+  #229 = NameAndType        #91:#291      // \"<init>\":(Ljava/lang/String;J)V\n+  #230 = NameAndType        #91:#292      // \"<init>\":([B)V\n+  #231 = NameAndType        #91:#293      // \"<init>\":([BJ)V\n+  #232 = NameAndType        #88:#89       // cvsFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #233 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #234 = NameAndType        #128:#129     // and:([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #235 = NameAndType        #90:#89       // svnFilter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #236 = NameAndType        #119:#120     // directoryFileFilter:()Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #237 = Utf8               CVS\n+  #238 = NameAndType        #118:#115     // nameFileFilter:(Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #239 = NameAndType        #134:#135     // notFileFilter:(Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #240 = Utf8               .svn\n+  #241 = Utf8               org/apache/commons/io/filefilter/FileFilterUtils\n+  #242 = Utf8               java/lang/Object\n+  #243 = Utf8               java/util/Iterator\n+  #244 = Utf8               (Ljava/lang/String;)V\n+  #245 = Utf8               org/apache/commons/io/FileUtils\n+  #246 = Utf8               EMPTY_FILE_ARRAY\n+  #247 = Utf8               accept\n+  #248 = Utf8               (Ljava/io/File;)Z\n+  #249 = Utf8               add\n+  #250 = Utf8               (Ljava/lang/Object;)Z\n+  #251 = Utf8               toArray\n+  #252 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #253 = Utf8               java/util/Arrays\n+  #254 = Utf8               asList\n+  #255 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #256 = Utf8               (Ljava/util/Collection;)V\n+  #257 = Utf8               java/lang/Iterable\n+  #258 = Utf8               iterator\n+  #259 = Utf8               ()Ljava/util/Iterator;\n+  #260 = Utf8               hasNext\n+  #261 = Utf8               ()Z\n+  #262 = Utf8               next\n+  #263 = Utf8               ()Ljava/lang/Object;\n+  #264 = Utf8               java/util/Collection\n+  #265 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #266 = Utf8               org/apache/commons/io/filefilter/DirectoryFileFilter\n+  #267 = Utf8               DIRECTORY\n+  #268 = Utf8               org/apache/commons/io/filefilter/FileFileFilter\n+  #269 = Utf8               FILE\n+  #270 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #271 = Utf8               (Ljava/util/List;)V\n+  #272 = Utf8               (I)V\n+  #273 = Utf8               append\n+  #274 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #275 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #276 = Utf8               toString\n+  #277 = Utf8               ()Ljava/lang/String;\n+  #278 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #279 = Utf8               org/apache/commons/io/filefilter/TrueFileFilter\n+  #280 = Utf8               TRUE\n+  #281 = Utf8               org/apache/commons/io/filefilter/FalseFileFilter\n+  #282 = Utf8               FALSE\n+  #283 = Utf8               (Ljava/io/FileFilter;)V\n+  #284 = Utf8               (Ljava/io/FilenameFilter;)V\n+  #285 = Utf8               (J)V\n+  #286 = Utf8               (JZ)V\n+  #287 = Utf8               (Ljava/util/Date;)V\n+  #288 = Utf8               (Ljava/util/Date;Z)V\n+  #289 = Utf8               (Ljava/io/File;)V\n+  #290 = Utf8               (Ljava/io/File;Z)V\n+  #291 = Utf8               (Ljava/lang/String;J)V\n+  #292 = Utf8               ([B)V\n+  #293 = Utf8               ([BJ)V\n {\n   private static final org.apache.commons.io.filefilter.IOFileFilter cvsFilter;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final org.apache.commons.io.filefilter.IOFileFilter svnFilter;\n     descriptor: Lorg/apache/commons/io/filefilter/IOFileFilter;\n@@ -423,15 +419,15 @@\n          7: getstatic     #5                  // Field org/apache/commons/io/FileUtils.EMPTY_FILE_ARRAY:[Ljava/io/File;\n         10: invokeinterface #11,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n         15: checkcast     #12                 // class \"[Ljava/io/File;\"\n         18: areturn\n       LineNumberTable:\n         line 123: 0\n         line 124: 6\n-    Signature: #103                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n+    Signature: #100                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)[Ljava/io/File;\n \n   public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable<java.io.File>);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -440,15 +436,15 @@\n          5: dup\n          6: invokespecial #7                  // Method java/util/ArrayList.\"<init>\":()V\n          9: invokestatic  #14                 // Method filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n         12: checkcast     #15                 // class java/util/List\n         15: areturn\n       LineNumberTable:\n         line 153: 0\n-    Signature: #106                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n+    Signature: #103                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/List<Ljava/io/File;>;\n \n   public static java.util.List<java.io.File> filterList(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n@@ -457,15 +453,15 @@\n          5: astore_2\n          6: aload_2\n          7: invokestatic  #17                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n         10: areturn\n       LineNumberTable:\n         line 182: 0\n         line 183: 6\n-    Signature: #108                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n+    Signature: #105                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/List<Ljava/io/File;>;\n \n   public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.io.File...);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n@@ -477,15 +473,15 @@\n         10: aload_2\n         11: invokestatic  #17                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n         14: invokespecial #19                 // Method java/util/HashSet.\"<init>\":(Ljava/util/Collection;)V\n         17: areturn\n       LineNumberTable:\n         line 213: 0\n         line 214: 6\n-    Signature: #111                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n+    Signature: #108                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;[Ljava/io/File;)Ljava/util/Set<Ljava/io/File;>;\n \n   public static java.util.Set<java.io.File> filterSet(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable<java.io.File>);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;)Ljava/util/Set;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -494,15 +490,15 @@\n          5: dup\n          6: invokespecial #20                 // Method java/util/HashSet.\"<init>\":()V\n          9: invokestatic  #14                 // Method filter:(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n         12: checkcast     #21                 // class java/util/Set\n         15: areturn\n       LineNumberTable:\n         line 244: 0\n-    Signature: #113                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n+    Signature: #110                         // (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;)Ljava/util/Set<Ljava/io/File;>;\n \n   private static <T extends java.util.Collection<java.io.File>> T filter(org.apache.commons.io.filefilter.IOFileFilter, java.lang.Iterable<java.io.File>, T);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=3\n          0: aload_0\n@@ -561,15 +557,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 34\n           locals = [ class java/io/File ]\n         frame_type = 250 /* chop */\n           offset_delta = 19\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #116                         // <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n+    Signature: #113                         // <T::Ljava/util/Collection<Ljava/io/File;>;>(Lorg/apache/commons/io/filefilter/IOFileFilter;Ljava/lang/Iterable<Ljava/io/File;>;TT;)TT;\n \n   public static org.apache.commons.io.filefilter.IOFileFilter prefixFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #28                 // class org/apache/commons/io/filefilter/PrefixFileFilter\n@@ -679,15 +675,15 @@\n          5: aload_1\n          6: invokespecial #40                 // Method org/apache/commons/io/filefilter/AndFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n          9: areturn\n       LineNumberTable:\n         line 392: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #129()\n+      0: #126()\n         java.lang.Deprecated\n \n   public static org.apache.commons.io.filefilter.IOFileFilter orFileFilter(org.apache.commons.io.filefilter.IOFileFilter, org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n@@ -697,15 +693,15 @@\n          5: aload_1\n          6: invokespecial #42                 // Method org/apache/commons/io/filefilter/OrFileFilter.\"<init>\":(Lorg/apache/commons/io/filefilter/IOFileFilter;Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n          9: areturn\n       LineNumberTable:\n         line 407: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #129()\n+      0: #126()\n         java.lang.Deprecated\n \n   public static org.apache.commons.io.filefilter.IOFileFilter and(org.apache.commons.io.filefilter.IOFileFilter...);\n     descriptor: ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=1, args_size=1\n@@ -798,15 +794,15 @@\n         frame_type = 14 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 11\n           locals = [ class java/util/List, int ]\n         frame_type = 43 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 15\n-    Signature: #136                         // ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n+    Signature: #133                         // ([Lorg/apache/commons/io/filefilter/IOFileFilter;)Ljava/util/List<Lorg/apache/commons/io/filefilter/IOFileFilter;>;\n \n   public static org.apache.commons.io.filefilter.IOFileFilter notFileFilter(org.apache.commons.io.filefilter.IOFileFilter);\n     descriptor: (Lorg/apache/commons/io/filefilter/IOFileFilter;)Lorg/apache/commons/io/filefilter/IOFileFilter;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: new           #55                 // class org/apache/commons/io/filefilter/NotFileFilter\n"}]}
