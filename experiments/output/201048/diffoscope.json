{"diffoscope-json-version": 1, "source1": "first/CharSequenceUtils.class", "source2": "second/CharSequenceUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,28 +1,28 @@\n \n package org.apache.commons.codec.binary;\n \n public class CharSequenceUtils\n {\n-    static boolean regionMatches(final CharSequence cs, final boolean ignoreCase, final int thisStart, final CharSequence substring, final int start, final int length) {\n-        if (cs instanceof String && substring instanceof String) {\n-            return ((String)cs).regionMatches(ignoreCase, thisStart, (String)substring, start, length);\n+    static boolean regionMatches(final CharSequence charSequence, final boolean ignoreCase, final int toffset, final CharSequence charSequence2, final int ooffset, final int len) {\n+        if (charSequence instanceof String && charSequence2 instanceof String) {\n+            return ((String)charSequence).regionMatches(ignoreCase, toffset, (String)charSequence2, ooffset, len);\n         }\n-        int index1 = thisStart;\n-        int index2 = start;\n-        int tmpLen = length;\n-        while (tmpLen-- > 0) {\n-            final char c1 = cs.charAt(index1++);\n-            final char c2 = substring.charAt(index2++);\n-            if (c1 == c2) {\n+        int n = toffset;\n+        int n2 = ooffset;\n+        int n3 = len;\n+        while (n3-- > 0) {\n+            final char char1 = charSequence.charAt(n++);\n+            final char char2 = charSequence2.charAt(n2++);\n+            if (char1 == char2) {\n                 continue;\n             }\n             if (!ignoreCase) {\n                 return false;\n             }\n-            if (Character.toUpperCase(c1) != Character.toUpperCase(c2) && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n+            if (Character.toUpperCase(char1) != Character.toUpperCase(char2) && Character.toLowerCase(char1) != Character.toLowerCase(char2)) {\n                 return false;\n             }\n         }\n         return true;\n     }\n }\n"}]}
