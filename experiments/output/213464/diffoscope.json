{"diffoscope-json-version": 1, "source1": "first/ToNetASCIIOutputStream.class", "source2": "second/ToNetASCIIOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,44 +5,44 @@\n import java.io.OutputStream;\n import java.io.FilterOutputStream;\n \n public final class ToNetASCIIOutputStream extends FilterOutputStream\n {\n     private boolean lastWasCR;\n     \n-    public ToNetASCIIOutputStream(final OutputStream output) {\n-        super(output);\n+    public ToNetASCIIOutputStream(final OutputStream out) {\n+        super(out);\n         this.lastWasCR = false;\n     }\n     \n     @Override\n-    public synchronized void write(final int ch) throws IOException {\n-        switch (ch) {\n+    public synchronized void write(final int n) throws IOException {\n+        switch (n) {\n             case 13: {\n                 this.lastWasCR = true;\n                 this.out.write(13);\n                 return;\n             }\n             case 10: {\n                 if (!this.lastWasCR) {\n                     this.out.write(13);\n                     break;\n                 }\n                 break;\n             }\n         }\n         this.lastWasCR = false;\n-        this.out.write(ch);\n+        this.out.write(n);\n     }\n     \n     @Override\n-    public synchronized void write(final byte[] buffer) throws IOException {\n-        this.write(buffer, 0, buffer.length);\n+    public synchronized void write(final byte[] array) throws IOException {\n+        this.write(array, 0, array.length);\n     }\n     \n     @Override\n-    public synchronized void write(final byte[] buffer, int offset, int length) throws IOException {\n-        while (length-- > 0) {\n-            this.write(buffer[offset++]);\n+    public synchronized void write(final byte[] array, int n, int n2) throws IOException {\n+        while (n2-- > 0) {\n+            this.write(array[n++]);\n         }\n     }\n }\n"}]}
