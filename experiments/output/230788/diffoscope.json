{"diffoscope-json-version": 1, "source1": "first/ResourceAlignmentExtraField.class", "source2": "second/ResourceAlignmentExtraField.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,32 +11,32 @@\n     private short alignment;\n     private boolean allowMethodChange;\n     private int padding;\n     \n     public ResourceAlignmentExtraField() {\n     }\n     \n-    public ResourceAlignmentExtraField(final int alignment) {\n-        this(alignment, false);\n+    public ResourceAlignmentExtraField(final int n) {\n+        this(n, false);\n     }\n     \n-    public ResourceAlignmentExtraField(final int alignment, final boolean allowMethodChange) {\n-        this(alignment, allowMethodChange, 0);\n+    public ResourceAlignmentExtraField(final int n, final boolean b) {\n+        this(n, b, 0);\n     }\n     \n-    public ResourceAlignmentExtraField(final int alignment, final boolean allowMethodChange, final int padding) {\n-        if (alignment < 0 || alignment > 32767) {\n-            throw new IllegalArgumentException(\"Alignment must be between 0 and 0x7fff, was: \" + alignment);\n+    public ResourceAlignmentExtraField(final int i, final boolean allowMethodChange, final int n) {\n+        if (i < 0 || i > 32767) {\n+            throw new IllegalArgumentException(\"Alignment must be between 0 and 0x7fff, was: \" + i);\n         }\n-        if (padding < 0) {\n-            throw new IllegalArgumentException(\"Padding must not be negative, was: \" + padding);\n+        if (n < 0) {\n+            throw new IllegalArgumentException(\"Padding must not be negative, was: \" + n);\n         }\n-        this.alignment = (short)alignment;\n+        this.alignment = (short)i;\n         this.allowMethodChange = allowMethodChange;\n-        this.padding = padding;\n+        this.padding = n;\n     }\n     \n     public short getAlignment() {\n         return this.alignment;\n     }\n     \n     public boolean allowMethodChange() {\n@@ -52,34 +52,34 @@\n     }\n     \n     public ZipShort getCentralDirectoryLength() {\n         return new ZipShort(2);\n     }\n     \n     public byte[] getLocalFileDataData() {\n-        final byte[] content = new byte[2 + this.padding];\n-        ZipShort.putShort(this.alignment | (this.allowMethodChange ? 32768 : 0), content, 0);\n-        return content;\n+        final byte[] array = new byte[2 + this.padding];\n+        ZipShort.putShort(this.alignment | (this.allowMethodChange ? 32768 : 0), array, 0);\n+        return array;\n     }\n     \n     public byte[] getCentralDirectoryData() {\n         return ZipShort.getBytes(this.alignment | (this.allowMethodChange ? 32768 : 0));\n     }\n     \n-    public void parseFromLocalFileData(final byte[] buffer, final int offset, final int length) throws ZipException {\n-        this.parseFromCentralDirectoryData(buffer, offset, length);\n-        this.padding = length - 2;\n+    public void parseFromLocalFileData(final byte[] array, final int n, final int n2) throws ZipException {\n+        this.parseFromCentralDirectoryData(array, n, n2);\n+        this.padding = n2 - 2;\n     }\n     \n-    public void parseFromCentralDirectoryData(final byte[] buffer, final int offset, final int length) throws ZipException {\n-        if (length < 2) {\n-            throw new ZipException(\"Too short content for ResourceAlignmentExtraField (0xa11e): \" + length);\n+    public void parseFromCentralDirectoryData(final byte[] array, final int n, final int i) throws ZipException {\n+        if (i < 2) {\n+            throw new ZipException(\"Too short content for ResourceAlignmentExtraField (0xa11e): \" + i);\n         }\n-        final int alignmentValue = ZipShort.getValue(buffer, offset);\n-        this.alignment = (short)(alignmentValue & 0x7FFF);\n-        this.allowMethodChange = ((alignmentValue & 0x8000) != 0x0);\n+        final int value = ZipShort.getValue(array, n);\n+        this.alignment = (short)(value & 0x7FFF);\n+        this.allowMethodChange = ((value & 0x8000) != 0x0);\n     }\n     \n     static {\n         ID = new ZipShort(41246);\n     }\n }\n"}]}
