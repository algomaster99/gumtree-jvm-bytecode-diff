{"diffoscope-json-version": 1, "source1": "first/DiffBuilder.class", "source2": "second/DiffBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -218,38 +218,38 @@\n             objectToTest = lhs;\n         }\n         else {\n             objectToTest = rhs;\n         }\n         if (objectToTest.getClass().isArray()) {\n             if (objectToTest instanceof boolean[]) {\n-                return this.append(fieldName, lhs, (boolean[])(boolean[])rhs);\n+                return this.append(fieldName, (boolean[])lhs, (boolean[])rhs);\n             }\n             if (objectToTest instanceof byte[]) {\n-                return this.append(fieldName, lhs, (byte[])(byte[])rhs);\n+                return this.append(fieldName, (byte[])lhs, (byte[])rhs);\n             }\n             if (objectToTest instanceof char[]) {\n-                return this.append(fieldName, lhs, (char[])(char[])rhs);\n+                return this.append(fieldName, (char[])lhs, (char[])rhs);\n             }\n             if (objectToTest instanceof double[]) {\n-                return this.append(fieldName, lhs, (double[])(double[])rhs);\n+                return this.append(fieldName, (double[])lhs, (double[])rhs);\n             }\n             if (objectToTest instanceof float[]) {\n-                return this.append(fieldName, lhs, (float[])(float[])rhs);\n+                return this.append(fieldName, (float[])lhs, (float[])rhs);\n             }\n             if (objectToTest instanceof int[]) {\n-                return this.append(fieldName, lhs, (int[])(int[])rhs);\n+                return this.append(fieldName, (int[])lhs, (int[])rhs);\n             }\n             if (objectToTest instanceof long[]) {\n-                return this.append(fieldName, lhs, (long[])(long[])rhs);\n+                return this.append(fieldName, (long[])lhs, (long[])rhs);\n             }\n             if (objectToTest instanceof short[]) {\n-                return this.append(fieldName, lhs, (short[])(short[])rhs);\n+                return this.append(fieldName, (short[])lhs, (short[])rhs);\n             }\n-            return this.append(fieldName, lhs, (Object[])(Object[])rhs);\n+            return this.append(fieldName, (Object[])lhs, (Object[])rhs);\n         }\n         else {\n             if (lhs != null && lhs.equals(rhs)) {\n                 return this;\n             }\n             this.diffs.add((Diff<?>)new DiffBuilder.DiffBuilder$17(this, fieldName, lhs, rhs));\n             return this;\n"}]}
