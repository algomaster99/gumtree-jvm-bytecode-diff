{"diffoscope-json-version": 1, "source1": "first/FileBasedScatterGatherBackingStore.class", "source2": "second/FileBasedScatterGatherBackingStore.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,100 +1,100 @@\n-  SHA-256 checksum 5c406a89ade579c8e7ef9b9a6fadbcaec88dc976211892dcf35a1fb943ed912e\n+  SHA-256 checksum d51bff91d11f818164be1c48a3801157e1a0e62207345ab110fcdd716f2f67cd\n   Compiled from \"FileBasedScatterGatherBackingStore.java\"\n public class org.apache.commons.compress.parallel.FileBasedScatterGatherBackingStore implements org.apache.commons.compress.parallel.ScatterGatherBackingStore\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #19                         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  super_class: #20                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #20.#45        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #19.#46        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/io/File;\n-   #3 = Methodref          #33.#47        // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #4 = Class              #48            // java/nio/file/OpenOption\n-   #5 = Methodref          #49.#50        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #6 = Fieldref           #19.#51        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.os:Ljava/io/OutputStream;\n-   #7 = Class              #52            // java/io/FileNotFoundException\n-   #8 = Class              #53            // java/io/IOException\n-   #9 = Class              #54            // java/lang/RuntimeException\n-  #10 = Methodref          #9.#55         // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #11 = Methodref          #49.#56        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #12 = Fieldref           #19.#57        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n-  #13 = Methodref          #58.#59        // java/io/OutputStream.close:()V\n-  #14 = Methodref          #58.#60        // java/io/OutputStream.write:([BII)V\n-  #15 = Methodref          #19.#61        // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n-  #16 = Methodref          #33.#62        // java/io/File.exists:()Z\n-  #17 = Methodref          #33.#63        // java/io/File.delete:()Z\n-  #18 = Methodref          #33.#64        // java/io/File.deleteOnExit:()V\n-  #19 = Class              #65            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #20 = Class              #66            // java/lang/Object\n-  #21 = Class              #67            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #22 = Utf8               target\n-  #23 = Utf8               Ljava/io/File;\n-  #24 = Utf8               os\n-  #25 = Utf8               Ljava/io/OutputStream;\n-  #26 = Utf8               closed\n-  #27 = Utf8               Z\n-  #28 = Utf8               <init>\n-  #29 = Utf8               (Ljava/io/File;)V\n-  #30 = Utf8               Code\n-  #31 = Utf8               LineNumberTable\n-  #32 = Utf8               StackMapTable\n-  #33 = Class              #68            // java/io/File\n-  #34 = Utf8               Exceptions\n-  #35 = Utf8               getInputStream\n-  #36 = Utf8               ()Ljava/io/InputStream;\n-  #37 = Utf8               closeForWriting\n-  #38 = Utf8               ()V\n-  #39 = Utf8               writeOut\n-  #40 = Utf8               ([BII)V\n-  #41 = Utf8               close\n-  #42 = Class              #69            // java/lang/Throwable\n-  #43 = Utf8               SourceFile\n-  #44 = Utf8               FileBasedScatterGatherBackingStore.java\n-  #45 = NameAndType        #28:#38        // \"<init>\":()V\n-  #46 = NameAndType        #22:#23        // target:Ljava/io/File;\n-  #47 = NameAndType        #70:#71        // toPath:()Ljava/nio/file/Path;\n-  #48 = Utf8               java/nio/file/OpenOption\n-  #49 = Class              #72            // java/nio/file/Files\n-  #50 = NameAndType        #73:#74        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #51 = NameAndType        #24:#25        // os:Ljava/io/OutputStream;\n-  #52 = Utf8               java/io/FileNotFoundException\n-  #53 = Utf8               java/io/IOException\n-  #54 = Utf8               java/lang/RuntimeException\n-  #55 = NameAndType        #28:#75        // \"<init>\":(Ljava/lang/Throwable;)V\n-  #56 = NameAndType        #76:#77        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #57 = NameAndType        #26:#27        // closed:Z\n-  #58 = Class              #78            // java/io/OutputStream\n-  #59 = NameAndType        #41:#38        // close:()V\n-  #60 = NameAndType        #79:#40        // write:([BII)V\n-  #61 = NameAndType        #37:#38        // closeForWriting:()V\n-  #62 = NameAndType        #80:#81        // exists:()Z\n-  #63 = NameAndType        #82:#81        // delete:()Z\n-  #64 = NameAndType        #83:#38        // deleteOnExit:()V\n-  #65 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n-  #66 = Utf8               java/lang/Object\n-  #67 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n-  #68 = Utf8               java/io/File\n-  #69 = Utf8               java/lang/Throwable\n-  #70 = Utf8               toPath\n-  #71 = Utf8               ()Ljava/nio/file/Path;\n-  #72 = Utf8               java/nio/file/Files\n-  #73 = Utf8               newOutputStream\n-  #74 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #75 = Utf8               (Ljava/lang/Throwable;)V\n-  #76 = Utf8               newInputStream\n-  #77 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #78 = Utf8               java/io/OutputStream\n-  #79 = Utf8               write\n-  #80 = Utf8               exists\n-  #81 = Utf8               ()Z\n-  #82 = Utf8               delete\n-  #83 = Utf8               deleteOnExit\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.target:Ljava/io/File;\n+   #8 = Class              #10            // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+   #9 = NameAndType        #11:#12        // target:Ljava/io/File;\n+  #10 = Utf8               org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore\n+  #11 = Utf8               target\n+  #12 = Utf8               Ljava/io/File;\n+  #13 = Methodref          #14.#15        // java/io/File.toPath:()Ljava/nio/file/Path;\n+  #14 = Class              #16            // java/io/File\n+  #15 = NameAndType        #17:#18        // toPath:()Ljava/nio/file/Path;\n+  #16 = Utf8               java/io/File\n+  #17 = Utf8               toPath\n+  #18 = Utf8               ()Ljava/nio/file/Path;\n+  #19 = Class              #20            // java/nio/file/OpenOption\n+  #20 = Utf8               java/nio/file/OpenOption\n+  #21 = Methodref          #22.#23        // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #22 = Class              #24            // java/nio/file/Files\n+  #23 = NameAndType        #25:#26        // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #24 = Utf8               java/nio/file/Files\n+  #25 = Utf8               newOutputStream\n+  #26 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #27 = Fieldref           #8.#28         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.os:Ljava/io/OutputStream;\n+  #28 = NameAndType        #29:#30        // os:Ljava/io/OutputStream;\n+  #29 = Utf8               os\n+  #30 = Utf8               Ljava/io/OutputStream;\n+  #31 = Class              #32            // java/io/FileNotFoundException\n+  #32 = Utf8               java/io/FileNotFoundException\n+  #33 = Class              #34            // java/io/IOException\n+  #34 = Utf8               java/io/IOException\n+  #35 = Class              #36            // java/lang/RuntimeException\n+  #36 = Utf8               java/lang/RuntimeException\n+  #37 = Methodref          #35.#38        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #38 = NameAndType        #5:#39         // \"<init>\":(Ljava/lang/Throwable;)V\n+  #39 = Utf8               (Ljava/lang/Throwable;)V\n+  #40 = Methodref          #22.#41        // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #41 = NameAndType        #42:#43        // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #42 = Utf8               newInputStream\n+  #43 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #44 = Fieldref           #8.#45         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closed:Z\n+  #45 = NameAndType        #46:#47        // closed:Z\n+  #46 = Utf8               closed\n+  #47 = Utf8               Z\n+  #48 = Methodref          #49.#50        // java/io/OutputStream.close:()V\n+  #49 = Class              #51            // java/io/OutputStream\n+  #50 = NameAndType        #52:#6         // close:()V\n+  #51 = Utf8               java/io/OutputStream\n+  #52 = Utf8               close\n+  #53 = Methodref          #49.#54        // java/io/OutputStream.write:([BII)V\n+  #54 = NameAndType        #55:#56        // write:([BII)V\n+  #55 = Utf8               write\n+  #56 = Utf8               ([BII)V\n+  #57 = Methodref          #8.#58         // org/apache/commons/compress/parallel/FileBasedScatterGatherBackingStore.closeForWriting:()V\n+  #58 = NameAndType        #59:#6         // closeForWriting:()V\n+  #59 = Utf8               closeForWriting\n+  #60 = Methodref          #14.#61        // java/io/File.exists:()Z\n+  #61 = NameAndType        #62:#63        // exists:()Z\n+  #62 = Utf8               exists\n+  #63 = Utf8               ()Z\n+  #64 = Methodref          #14.#65        // java/io/File.delete:()Z\n+  #65 = NameAndType        #66:#63        // delete:()Z\n+  #66 = Utf8               delete\n+  #67 = Methodref          #14.#68        // java/io/File.deleteOnExit:()V\n+  #68 = NameAndType        #69:#6         // deleteOnExit:()V\n+  #69 = Utf8               deleteOnExit\n+  #70 = Class              #71            // org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #71 = Utf8               org/apache/commons/compress/parallel/ScatterGatherBackingStore\n+  #72 = Utf8               (Ljava/io/File;)V\n+  #73 = Utf8               Code\n+  #74 = Utf8               LineNumberTable\n+  #75 = Utf8               StackMapTable\n+  #76 = Utf8               Exceptions\n+  #77 = Utf8               getInputStream\n+  #78 = Utf8               ()Ljava/io/InputStream;\n+  #79 = Utf8               writeOut\n+  #80 = Class              #81            // java/lang/Throwable\n+  #81 = Utf8               java/lang/Throwable\n+  #82 = Utf8               SourceFile\n+  #83 = Utf8               FileBasedScatterGatherBackingStore.java\n {\n   private final java.io.File target;\n     descriptor: Ljava/io/File;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.OutputStream os;\n     descriptor: Ljava/io/OutputStream;\n@@ -109,31 +109,31 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field target:Ljava/io/File;\n+         6: putfield      #7                  // Field target:Ljava/io/File;\n          9: aload_0\n         10: aload_1\n-        11: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        11: invokevirtual #13                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n         14: iconst_0\n-        15: anewarray     #4                  // class java/nio/file/OpenOption\n-        18: invokestatic  #5                  // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-        21: putfield      #6                  // Field os:Ljava/io/OutputStream;\n+        15: anewarray     #19                 // class java/nio/file/OpenOption\n+        18: invokestatic  #21                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+        21: putfield      #27                 // Field os:Ljava/io/OutputStream;\n         24: goto          40\n         27: astore_2\n         28: aload_2\n         29: athrow\n         30: astore_2\n-        31: new           #9                  // class java/lang/RuntimeException\n+        31: new           #35                 // class java/lang/RuntimeException\n         34: dup\n         35: aload_2\n-        36: invokespecial #10                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        36: invokespecial #37                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         39: athrow\n         40: return\n       Exception table:\n          from    to  target type\n              9    24    27   Class java/io/FileNotFoundException\n              9    24    30   Class java/io/IOException\n       LineNumberTable:\n@@ -159,39 +159,39 @@\n \n   public java.io.InputStream getInputStream() throws java.io.IOException;\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field target:Ljava/io/File;\n-         4: invokevirtual #3                  // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: getfield      #7                  // Field target:Ljava/io/File;\n+         4: invokevirtual #13                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          7: iconst_0\n-         8: anewarray     #4                  // class java/nio/file/OpenOption\n-        11: invokestatic  #11                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+         8: anewarray     #19                 // class java/nio/file/OpenOption\n+        11: invokestatic  #40                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n         14: areturn\n       LineNumberTable:\n         line 51: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public void closeForWriting() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field closed:Z\n+         1: getfield      #44                 // Field closed:Z\n          4: ifne          19\n          7: aload_0\n-         8: getfield      #6                  // Field os:Ljava/io/OutputStream;\n-        11: invokevirtual #13                 // Method java/io/OutputStream.close:()V\n+         8: getfield      #27                 // Field os:Ljava/io/OutputStream;\n+        11: invokevirtual #48                 // Method java/io/OutputStream.close:()V\n         14: aload_0\n         15: iconst_1\n-        16: putfield      #12                 // Field closed:Z\n+        16: putfield      #44                 // Field closed:Z\n         19: return\n       LineNumberTable:\n         line 57: 0\n         line 58: 7\n         line 59: 14\n         line 61: 19\n       StackMapTable: number_of_entries = 1\n@@ -201,57 +201,57 @@\n \n   public void writeOut(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #6                  // Field os:Ljava/io/OutputStream;\n+         1: getfield      #27                 // Field os:Ljava/io/OutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #14                 // Method java/io/OutputStream.write:([BII)V\n+         7: invokevirtual #53                 // Method java/io/OutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 10\n     Exceptions:\n       throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #15                 // Method closeForWriting:()V\n+         1: invokevirtual #57                 // Method closeForWriting:()V\n          4: aload_0\n-         5: getfield      #2                  // Field target:Ljava/io/File;\n-         8: invokevirtual #16                 // Method java/io/File.exists:()Z\n+         5: getfield      #7                  // Field target:Ljava/io/File;\n+         8: invokevirtual #60                 // Method java/io/File.exists:()Z\n         11: ifeq          64\n         14: aload_0\n-        15: getfield      #2                  // Field target:Ljava/io/File;\n-        18: invokevirtual #17                 // Method java/io/File.delete:()Z\n+        15: getfield      #7                  // Field target:Ljava/io/File;\n+        18: invokevirtual #64                 // Method java/io/File.delete:()Z\n         21: ifne          64\n         24: aload_0\n-        25: getfield      #2                  // Field target:Ljava/io/File;\n-        28: invokevirtual #18                 // Method java/io/File.deleteOnExit:()V\n+        25: getfield      #7                  // Field target:Ljava/io/File;\n+        28: invokevirtual #67                 // Method java/io/File.deleteOnExit:()V\n         31: goto          64\n         34: astore_1\n         35: aload_0\n-        36: getfield      #2                  // Field target:Ljava/io/File;\n-        39: invokevirtual #16                 // Method java/io/File.exists:()Z\n+        36: getfield      #7                  // Field target:Ljava/io/File;\n+        39: invokevirtual #60                 // Method java/io/File.exists:()Z\n         42: ifeq          62\n         45: aload_0\n-        46: getfield      #2                  // Field target:Ljava/io/File;\n-        49: invokevirtual #17                 // Method java/io/File.delete:()Z\n+        46: getfield      #7                  // Field target:Ljava/io/File;\n+        49: invokevirtual #64                 // Method java/io/File.delete:()Z\n         52: ifne          62\n         55: aload_0\n-        56: getfield      #2                  // Field target:Ljava/io/File;\n-        59: invokevirtual #18                 // Method java/io/File.deleteOnExit:()V\n+        56: getfield      #7                  // Field target:Ljava/io/File;\n+        59: invokevirtual #67                 // Method java/io/File.deleteOnExit:()V\n         62: aload_1\n         63: athrow\n         64: return\n       Exception table:\n          from    to  target type\n              0     4    34   any\n       LineNumberTable:\n"}]}
