{"diffoscope-json-version": 1, "source1": "first/ProxyInputStream.class", "source2": "second/ProxyInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,149 @@\n-  SHA-256 checksum d11f7b6e7122e1db2f7f27bda4f5fc1c4e2086fd02cb8396d5c8af26961a3d32\n+  SHA-256 checksum 514befce59af8853e3fe0a4caad7c71b5f97fc8a705a1a34ca8cab3fac4e17d1\n   Compiled from \"ProxyInputStream.java\"\n public abstract class org.apache.commons.io.input.ProxyInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #19                         // org/apache/commons/io/input/ProxyInputStream\n-  super_class: #20                        // java/io/FilterInputStream\n+  this_class: #10                         // org/apache/commons/io/input/ProxyInputStream\n+  super_class: #4                         // java/io/FilterInputStream\n   interfaces: 0, fields: 0, methods: 13, attributes: 3\n Constant pool:\n-   #1 = Class              #47            // org/apache/commons/io/IOUtils\n-   #2 = Methodref          #20.#48        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #3 = Methodref          #19.#49        // org/apache/commons/io/input/ProxyInputStream.beforeRead:(I)V\n-   #4 = Fieldref           #19.#50        // org/apache/commons/io/input/ProxyInputStream.in:Ljava/io/InputStream;\n-   #5 = Methodref          #51.#52        // java/io/InputStream.read:()I\n-   #6 = Methodref          #19.#53        // org/apache/commons/io/input/ProxyInputStream.afterRead:(I)V\n-   #7 = Class              #54            // java/io/IOException\n-   #8 = Methodref          #19.#55        // org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-   #9 = Methodref          #1.#56         // org/apache/commons/io/IOUtils.length:([B)I\n-  #10 = Methodref          #51.#57        // java/io/InputStream.read:([B)I\n-  #11 = Methodref          #51.#58        // java/io/InputStream.read:([BII)I\n-  #12 = Methodref          #51.#59        // java/io/InputStream.skip:(J)J\n-  #13 = Methodref          #20.#60        // java/io/FilterInputStream.available:()I\n-  #14 = InvokeDynamic      #0:#66         // #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #15 = Methodref          #1.#67         // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #16 = Methodref          #51.#68        // java/io/InputStream.mark:(I)V\n-  #17 = Methodref          #51.#69        // java/io/InputStream.reset:()V\n-  #18 = Methodref          #51.#70        // java/io/InputStream.markSupported:()Z\n-  #19 = Class              #71            // org/apache/commons/io/input/ProxyInputStream\n-  #20 = Class              #72            // java/io/FilterInputStream\n-  #21 = Utf8               <init>\n-  #22 = Utf8               (Ljava/io/InputStream;)V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               read\n-  #26 = Utf8               ()I\n-  #27 = Utf8               StackMapTable\n-  #28 = Utf8               Exceptions\n-  #29 = Utf8               ([B)I\n-  #30 = Utf8               ([BII)I\n-  #31 = Utf8               skip\n-  #32 = Utf8               (J)J\n-  #33 = Utf8               available\n-  #34 = Utf8               close\n-  #35 = Utf8               ()V\n-  #36 = Utf8               mark\n-  #37 = Utf8               (I)V\n-  #38 = Utf8               reset\n-  #39 = Utf8               markSupported\n-  #40 = Utf8               ()Z\n-  #41 = Utf8               beforeRead\n-  #42 = Utf8               afterRead\n-  #43 = Utf8               handleIOException\n-  #44 = Utf8               (Ljava/io/IOException;)V\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               ProxyInputStream.java\n-  #47 = Utf8               org/apache/commons/io/IOUtils\n-  #48 = NameAndType        #21:#22        // \"<init>\":(Ljava/io/InputStream;)V\n-  #49 = NameAndType        #41:#37        // beforeRead:(I)V\n-  #50 = NameAndType        #73:#74        // in:Ljava/io/InputStream;\n-  #51 = Class              #75            // java/io/InputStream\n-  #52 = NameAndType        #25:#26        // read:()I\n-  #53 = NameAndType        #42:#37        // afterRead:(I)V\n-  #54 = Utf8               java/io/IOException\n-  #55 = NameAndType        #43:#44        // handleIOException:(Ljava/io/IOException;)V\n-  #56 = NameAndType        #76:#29        // length:([B)I\n-  #57 = NameAndType        #25:#29        // read:([B)I\n-  #58 = NameAndType        #25:#30        // read:([BII)I\n-  #59 = NameAndType        #31:#32        // skip:(J)J\n-  #60 = NameAndType        #33:#26        // available:()I\n-  #61 = Utf8               BootstrapMethods\n-  #62 = MethodHandle       6:#77          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #63 = MethodType         #78            //  (Ljava/lang/Object;)V\n-  #64 = MethodHandle       5:#8           // REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-  #65 = MethodType         #44            //  (Ljava/io/IOException;)V\n-  #66 = NameAndType        #79:#80        // accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #67 = NameAndType        #34:#81        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #68 = NameAndType        #36:#37        // mark:(I)V\n-  #69 = NameAndType        #38:#35        // reset:()V\n-  #70 = NameAndType        #39:#40        // markSupported:()Z\n-  #71 = Utf8               org/apache/commons/io/input/ProxyInputStream\n-  #72 = Utf8               java/io/FilterInputStream\n-  #73 = Utf8               in\n-  #74 = Utf8               Ljava/io/InputStream;\n-  #75 = Utf8               java/io/InputStream\n-  #76 = Utf8               length\n-  #77 = Methodref          #82.#83        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #78 = Utf8               (Ljava/lang/Object;)V\n-  #79 = Utf8               accept\n-  #80 = Utf8               (Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-  #81 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #82 = Class              #84            // java/lang/invoke/LambdaMetafactory\n-  #83 = NameAndType        #85:#89        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #84 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #85 = Utf8               metafactory\n-  #86 = Class              #91            // java/lang/invoke/MethodHandles$Lookup\n-  #87 = Utf8               Lookup\n-  #88 = Utf8               InnerClasses\n-  #89 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #90 = Class              #92            // java/lang/invoke/MethodHandles\n-  #91 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #92 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Class              #2             // org/apache/commons/io/IOUtils\n+   #2 = Utf8               org/apache/commons/io/IOUtils\n+   #3 = Methodref          #4.#5          // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #4 = Class              #6             // java/io/FilterInputStream\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/InputStream;)V\n+   #6 = Utf8               java/io/FilterInputStream\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/InputStream;)V\n+   #9 = Methodref          #10.#11        // org/apache/commons/io/input/ProxyInputStream.beforeRead:(I)V\n+  #10 = Class              #12            // org/apache/commons/io/input/ProxyInputStream\n+  #11 = NameAndType        #13:#14        // beforeRead:(I)V\n+  #12 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+  #13 = Utf8               beforeRead\n+  #14 = Utf8               (I)V\n+  #15 = Fieldref           #10.#16        // org/apache/commons/io/input/ProxyInputStream.in:Ljava/io/InputStream;\n+  #16 = NameAndType        #17:#18        // in:Ljava/io/InputStream;\n+  #17 = Utf8               in\n+  #18 = Utf8               Ljava/io/InputStream;\n+  #19 = Methodref          #20.#21        // java/io/InputStream.read:()I\n+  #20 = Class              #22            // java/io/InputStream\n+  #21 = NameAndType        #23:#24        // read:()I\n+  #22 = Utf8               java/io/InputStream\n+  #23 = Utf8               read\n+  #24 = Utf8               ()I\n+  #25 = Methodref          #10.#26        // org/apache/commons/io/input/ProxyInputStream.afterRead:(I)V\n+  #26 = NameAndType        #27:#14        // afterRead:(I)V\n+  #27 = Utf8               afterRead\n+  #28 = Class              #29            // java/io/IOException\n+  #29 = Utf8               java/io/IOException\n+  #30 = Methodref          #10.#31        // org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+  #31 = NameAndType        #32:#33        // handleIOException:(Ljava/io/IOException;)V\n+  #32 = Utf8               handleIOException\n+  #33 = Utf8               (Ljava/io/IOException;)V\n+  #34 = Methodref          #1.#35         // org/apache/commons/io/IOUtils.length:([B)I\n+  #35 = NameAndType        #36:#37        // length:([B)I\n+  #36 = Utf8               length\n+  #37 = Utf8               ([B)I\n+  #38 = Methodref          #20.#39        // java/io/InputStream.read:([B)I\n+  #39 = NameAndType        #23:#37        // read:([B)I\n+  #40 = Methodref          #20.#41        // java/io/InputStream.read:([BII)I\n+  #41 = NameAndType        #23:#42        // read:([BII)I\n+  #42 = Utf8               ([BII)I\n+  #43 = Methodref          #20.#44        // java/io/InputStream.skip:(J)J\n+  #44 = NameAndType        #45:#46        // skip:(J)J\n+  #45 = Utf8               skip\n+  #46 = Utf8               (J)J\n+  #47 = Methodref          #4.#48         // java/io/FilterInputStream.available:()I\n+  #48 = NameAndType        #49:#24        // available:()I\n+  #49 = Utf8               available\n+  #50 = InvokeDynamic      #0:#51         // #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #51 = NameAndType        #52:#53        // accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #52 = Utf8               accept\n+  #53 = Utf8               (Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+  #54 = Methodref          #1.#55         // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #55 = NameAndType        #56:#57        // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #56 = Utf8               close\n+  #57 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+  #58 = Methodref          #20.#59        // java/io/InputStream.mark:(I)V\n+  #59 = NameAndType        #60:#14        // mark:(I)V\n+  #60 = Utf8               mark\n+  #61 = Methodref          #20.#62        // java/io/InputStream.reset:()V\n+  #62 = NameAndType        #63:#64        // reset:()V\n+  #63 = Utf8               reset\n+  #64 = Utf8               ()V\n+  #65 = Methodref          #20.#66        // java/io/InputStream.markSupported:()Z\n+  #66 = NameAndType        #67:#68        // markSupported:()Z\n+  #67 = Utf8               markSupported\n+  #68 = Utf8               ()Z\n+  #69 = Utf8               Code\n+  #70 = Utf8               LineNumberTable\n+  #71 = Utf8               StackMapTable\n+  #72 = Utf8               Exceptions\n+  #73 = Utf8               SourceFile\n+  #74 = Utf8               ProxyInputStream.java\n+  #75 = Utf8               BootstrapMethods\n+  #76 = MethodHandle       6:#77          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #77 = Methodref          #78.#79        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #78 = Class              #80            // java/lang/invoke/LambdaMetafactory\n+  #79 = NameAndType        #81:#82        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #80 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #81 = Utf8               metafactory\n+  #82 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #83 = MethodType         #84            //  (Ljava/lang/Object;)V\n+  #84 = Utf8               (Ljava/lang/Object;)V\n+  #85 = MethodHandle       5:#30          // REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+  #86 = MethodType         #33            //  (Ljava/io/IOException;)V\n+  #87 = Utf8               InnerClasses\n+  #88 = Class              #89            // java/lang/invoke/MethodHandles$Lookup\n+  #89 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #90 = Class              #91            // java/lang/invoke/MethodHandles\n+  #91 = Utf8               java/lang/invoke/MethodHandles\n+  #92 = Utf8               Lookup\n {\n   public org.apache.commons.io.input.ProxyInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #3                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: return\n       LineNumberTable:\n         line 49: 0\n         line 51: 5\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokevirtual #9                  // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         9: invokevirtual #5                  // Method java/io/InputStream.read:()I\n+         6: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         9: invokevirtual #19                 // Method java/io/InputStream.read:()I\n         12: istore_1\n         13: aload_0\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: iconst_1\n         20: goto          24\n         23: iconst_m1\n-        24: invokevirtual #6                  // Method afterRead:(I)V\n+        24: invokevirtual #25                 // Method afterRead:(I)V\n         27: iload_1\n         28: ireturn\n         29: astore_1\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        32: invokevirtual #30                 // Method handleIOException:(Ljava/io/IOException;)V\n         35: iconst_m1\n         36: ireturn\n       Exception table:\n          from    to  target type\n              0    28    29   Class java/io/IOException\n       LineNumberTable:\n         line 61: 0\n@@ -172,30 +172,30 @@\n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #9                  // Method org/apache/commons/io/IOUtils.length:([B)I\n-         5: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokestatic  #34                 // Method org/apache/commons/io/IOUtils.length:([B)I\n+         5: invokevirtual #9                  // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         9: getfield      #15                 // Field in:Ljava/io/InputStream;\n         12: aload_1\n-        13: invokevirtual #10                 // Method java/io/InputStream.read:([B)I\n+        13: invokevirtual #38                 // Method java/io/InputStream.read:([B)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #6                  // Method afterRead:(I)V\n+        19: invokevirtual #25                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #30                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 80: 0\n@@ -214,31 +214,31 @@\n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #3                  // Method beforeRead:(I)V\n+         2: invokevirtual #9                  // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         6: getfield      #15                 // Field in:Ljava/io/InputStream;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #11                 // Method java/io/InputStream.read:([BII)I\n+        12: invokevirtual #40                 // Method java/io/InputStream.read:([BII)I\n         15: istore        4\n         17: aload_0\n         18: iload         4\n-        20: invokevirtual #6                  // Method afterRead:(I)V\n+        20: invokevirtual #25                 // Method afterRead:(I)V\n         23: iload         4\n         25: ireturn\n         26: astore        4\n         28: aload_0\n         29: aload         4\n-        31: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        31: invokevirtual #30                 // Method handleIOException:(Ljava/io/IOException;)V\n         34: iconst_m1\n         35: ireturn\n       Exception table:\n          from    to  target type\n              0    25    26   Class java/io/IOException\n       LineNumberTable:\n         line 101: 0\n@@ -256,22 +256,22 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n          4: lload_1\n-         5: invokevirtual #12                 // Method java/io/InputStream.skip:(J)J\n+         5: invokevirtual #43                 // Method java/io/InputStream.skip:(J)J\n          8: lreturn\n          9: astore_3\n         10: aload_0\n         11: aload_3\n-        12: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        12: invokevirtual #30                 // Method handleIOException:(Ljava/io/IOException;)V\n         15: lconst_0\n         16: lreturn\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 120: 0\n@@ -286,20 +286,20 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #13                 // Method java/io/FilterInputStream.available:()I\n+         1: invokespecial #47                 // Method java/io/FilterInputStream.available:()I\n          4: ireturn\n          5: astore_1\n          6: aload_0\n          7: aload_1\n-         8: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+         8: invokevirtual #30                 // Method handleIOException:(Ljava/io/IOException;)V\n         11: iconst_0\n         12: ireturn\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/io/IOException\n       LineNumberTable:\n         line 135: 0\n@@ -314,52 +314,52 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n          4: aload_0\n-         5: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-        10: invokestatic  #15                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+         5: invokedynamic #50,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+        10: invokestatic  #54                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n         13: return\n       LineNumberTable:\n         line 148: 0\n         line 149: 13\n     Exceptions:\n       throws java.io.IOException\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n          4: iload_1\n-         5: invokevirtual #16                 // Method java/io/InputStream.mark:(I)V\n+         5: invokevirtual #58                 // Method java/io/InputStream.mark:(I)V\n          8: return\n       LineNumberTable:\n         line 157: 0\n         line 158: 8\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #17                 // Method java/io/InputStream.reset:()V\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #61                 // Method java/io/InputStream.reset:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #8                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #30                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 167: 0\n         line 170: 7\n@@ -375,16 +375,16 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #18                 // Method java/io/InputStream.markSupported:()Z\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #65                 // Method java/io/InputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 179: 0\n \n   protected void beforeRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n@@ -416,15 +416,15 @@\n          1: athrow\n       LineNumberTable:\n         line 235: 0\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ProxyInputStream.java\"\n-InnerClasses:\n-  public static final #87= #86 of #90;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #62 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #76 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #63 (Ljava/lang/Object;)V\n-      #64 REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-      #65 (Ljava/io/IOException;)V\n+      #83 (Ljava/lang/Object;)V\n+      #85 REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+      #86 (Ljava/io/IOException;)V\n+InnerClasses:\n+  public static final #92= #88 of #90;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
