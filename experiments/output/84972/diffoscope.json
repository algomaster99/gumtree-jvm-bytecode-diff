{"diffoscope-json-version": 1, "source1": "first/DirectoryStreamFilter.class", "source2": "second/DirectoryStreamFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,84 +1,84 @@\n-  SHA-256 checksum bef3991f5b7d0215f235625614c9a9a66ea811c3e78d97367891206fd29203d7\n+  SHA-256 checksum 0ee03e4a0f39ac2a410728b472eb20439c4c30d3221ebd4e1c1db40fa2b10bd3\n   Compiled from \"DirectoryStreamFilter.java\"\n public class org.apache.commons.io.file.DirectoryStreamFilter extends java.lang.Object implements java.nio.file.DirectoryStream$Filter<java.nio.file.Path>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/file/DirectoryStreamFilter\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/file/DirectoryStreamFilter\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 4, attributes: 3\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/file/DirectoryStreamFilter\n+   #2 = Utf8               org/apache/commons/io/file/DirectoryStreamFilter\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = String             #8             // pathFilter\n-   #8 = Utf8               pathFilter\n-   #9 = Methodref          #10.#11        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #10 = Class              #12            // java/util/Objects\n-  #11 = NameAndType        #13:#14        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #12 = Utf8               java/util/Objects\n-  #13 = Utf8               requireNonNull\n-  #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #15 = Class              #16            // org/apache/commons/io/file/PathFilter\n-  #16 = Utf8               org/apache/commons/io/file/PathFilter\n-  #17 = Fieldref           #18.#19        // org/apache/commons/io/file/DirectoryStreamFilter.pathFilter:Lorg/apache/commons/io/file/PathFilter;\n-  #18 = Class              #20            // org/apache/commons/io/file/DirectoryStreamFilter\n-  #19 = NameAndType        #8:#21         // pathFilter:Lorg/apache/commons/io/file/PathFilter;\n-  #20 = Utf8               org/apache/commons/io/file/DirectoryStreamFilter\n-  #21 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n-  #22 = Fieldref           #23.#24        // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-  #23 = Class              #25            // org/apache/commons/io/file/PathUtils\n-  #24 = NameAndType        #26:#27        // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-  #25 = Utf8               org/apache/commons/io/file/PathUtils\n-  #26 = Utf8               EMPTY_LINK_OPTION_ARRAY\n-  #27 = Utf8               [Ljava/nio/file/LinkOption;\n-  #28 = Methodref          #23.#29        // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #29 = NameAndType        #30:#31        // readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #30 = Utf8               readBasicFileAttributes\n-  #31 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  #32 = InterfaceMethodref #15.#33        // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #33 = NameAndType        #34:#35        // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #34 = Utf8               accept\n-  #35 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #36 = Fieldref           #37.#38        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #37 = Class              #39            // java/nio/file/FileVisitResult\n-  #38 = NameAndType        #40:#41        // CONTINUE:Ljava/nio/file/FileVisitResult;\n-  #39 = Utf8               java/nio/file/FileVisitResult\n-  #40 = Utf8               CONTINUE\n-  #41 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #42 = Class              #43            // java/nio/file/Path\n-  #43 = Utf8               java/nio/file/Path\n-  #44 = Methodref          #18.#45        // org/apache/commons/io/file/DirectoryStreamFilter.accept:(Ljava/nio/file/Path;)Z\n-  #45 = NameAndType        #34:#46        // accept:(Ljava/nio/file/Path;)Z\n-  #46 = Utf8               (Ljava/nio/file/Path;)Z\n-  #47 = Class              #48            // java/nio/file/DirectoryStream$Filter\n-  #48 = Utf8               java/nio/file/DirectoryStream$Filter\n-  #49 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)V\n-  #50 = Utf8               Code\n-  #51 = Utf8               LineNumberTable\n-  #52 = Utf8               LocalVariableTable\n-  #53 = Utf8               this\n-  #54 = Utf8               Lorg/apache/commons/io/file/DirectoryStreamFilter;\n-  #55 = Utf8               path\n-  #56 = Utf8               Ljava/nio/file/Path;\n-  #57 = Utf8               StackMapTable\n-  #58 = Utf8               Exceptions\n-  #59 = Class              #60            // java/io/IOException\n-  #60 = Utf8               java/io/IOException\n-  #61 = Utf8               getPathFilter\n-  #62 = Utf8               ()Lorg/apache/commons/io/file/PathFilter;\n-  #63 = Utf8               (Ljava/lang/Object;)Z\n-  #64 = Utf8               Signature\n-  #65 = Utf8               Ljava/lang/Object;Ljava/nio/file/DirectoryStream$Filter<Ljava/nio/file/Path;>;\n-  #66 = Utf8               SourceFile\n-  #67 = Utf8               DirectoryStreamFilter.java\n+   #5 = Class              #6             // java/nio/file/DirectoryStream$Filter\n+   #6 = Utf8               java/nio/file/DirectoryStream$Filter\n+   #7 = Utf8               pathFilter\n+   #8 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // java/lang/Object.\"<init>\":()V\n+  #13 = NameAndType        #9:#14         // \"<init>\":()V\n+  #14 = Utf8               ()V\n+  #15 = String             #7             // pathFilter\n+  #16 = Methodref          #17.#19        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #17 = Class              #18            // java/util/Objects\n+  #18 = Utf8               java/util/Objects\n+  #19 = NameAndType        #20:#21        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #20 = Utf8               requireNonNull\n+  #21 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #22 = Class              #23            // org/apache/commons/io/file/PathFilter\n+  #23 = Utf8               org/apache/commons/io/file/PathFilter\n+  #24 = Fieldref           #1.#25         // org/apache/commons/io/file/DirectoryStreamFilter.pathFilter:Lorg/apache/commons/io/file/PathFilter;\n+  #25 = NameAndType        #7:#8          // pathFilter:Lorg/apache/commons/io/file/PathFilter;\n+  #26 = Utf8               LineNumberTable\n+  #27 = Utf8               LocalVariableTable\n+  #28 = Utf8               this\n+  #29 = Utf8               Lorg/apache/commons/io/file/DirectoryStreamFilter;\n+  #30 = Utf8               accept\n+  #31 = Utf8               (Ljava/nio/file/Path;)Z\n+  #32 = Utf8               Exceptions\n+  #33 = Class              #34            // java/io/IOException\n+  #34 = Utf8               java/io/IOException\n+  #35 = Fieldref           #36.#38        // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+  #36 = Class              #37            // org/apache/commons/io/file/PathUtils\n+  #37 = Utf8               org/apache/commons/io/file/PathUtils\n+  #38 = NameAndType        #39:#40        // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+  #39 = Utf8               EMPTY_LINK_OPTION_ARRAY\n+  #40 = Utf8               [Ljava/nio/file/LinkOption;\n+  #41 = Methodref          #36.#42        // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #42 = NameAndType        #43:#44        // readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #43 = Utf8               readBasicFileAttributes\n+  #44 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #45 = InterfaceMethodref #22.#46        // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #46 = NameAndType        #30:#47        // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #47 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #48 = Fieldref           #49.#51        // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #49 = Class              #50            // java/nio/file/FileVisitResult\n+  #50 = Utf8               java/nio/file/FileVisitResult\n+  #51 = NameAndType        #52:#53        // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #52 = Utf8               CONTINUE\n+  #53 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #54 = Utf8               path\n+  #55 = Utf8               Ljava/nio/file/Path;\n+  #56 = Utf8               StackMapTable\n+  #57 = Utf8               getPathFilter\n+  #58 = Utf8               ()Lorg/apache/commons/io/file/PathFilter;\n+  #59 = Utf8               (Ljava/lang/Object;)Z\n+  #60 = Class              #61            // java/nio/file/Path\n+  #61 = Utf8               java/nio/file/Path\n+  #62 = Methodref          #1.#63         // org/apache/commons/io/file/DirectoryStreamFilter.accept:(Ljava/nio/file/Path;)Z\n+  #63 = NameAndType        #30:#31        // accept:(Ljava/nio/file/Path;)Z\n+  #64 = Utf8               SourceFile\n+  #65 = Utf8               DirectoryStreamFilter.java\n+  #66 = Utf8               Signature\n+  #67 = Utf8               Ljava/lang/Object;Ljava/nio/file/DirectoryStream$Filter<Ljava/nio/file/Path;>;\n   #68 = Utf8               InnerClasses\n   #69 = Class              #70            // java/nio/file/DirectoryStream\n   #70 = Utf8               java/nio/file/DirectoryStream\n   #71 = Utf8               Filter\n {\n   private final org.apache.commons.io.file.PathFilter pathFilter;\n     descriptor: Lorg/apache/commons/io/file/PathFilter;\n@@ -86,91 +86,88 @@\n \n   public org.apache.commons.io.file.DirectoryStreamFilter(org.apache.commons.io.file.PathFilter);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #12                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #7                  // String pathFilter\n-         8: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #15                 // class org/apache/commons/io/file/PathFilter\n-        14: putfield      #17                 // Field pathFilter:Lorg/apache/commons/io/file/PathFilter;\n+         6: ldc           #15                 // String pathFilter\n+         8: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #22                 // class org/apache/commons/io/file/PathFilter\n+        14: putfield      #24                 // Field pathFilter:Lorg/apache/commons/io/file/PathFilter;\n         17: return\n       LineNumberTable:\n         line 44: 0\n         line 46: 4\n         line 47: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/io/file/DirectoryStreamFilter;\n             0      18     1 pathFilter   Lorg/apache/commons/io/file/PathFilter;\n \n   public boolean accept(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #17                 // Field pathFilter:Lorg/apache/commons/io/file/PathFilter;\n+         1: getfield      #24                 // Field pathFilter:Lorg/apache/commons/io/file/PathFilter;\n          4: aload_1\n          5: aload_1\n-         6: getstatic     #22                 // Field org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         9: invokestatic  #28                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        12: invokeinterface #32,  3           // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        17: getstatic     #36                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-        20: if_acmpne     27\n+         6: getstatic     #35                 // Field org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         9: invokestatic  #41                 // Method org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        12: invokeinterface #45,  3           // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        17: getstatic     #48                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        20: if_acmpne     25\n         23: iconst_1\n-        24: goto          28\n-        27: iconst_0\n-        28: ireturn\n+        24: ireturn\n+        25: iconst_0\n+        26: ireturn\n       LineNumberTable:\n         line 51: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      29     0  this   Lorg/apache/commons/io/file/DirectoryStreamFilter;\n-            0      29     1  path   Ljava/nio/file/Path;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 27 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n+            0      27     0  this   Lorg/apache/commons/io/file/DirectoryStreamFilter;\n+            0      27     1  path   Ljava/nio/file/Path;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 25 /* same */\n \n   public org.apache.commons.io.file.PathFilter getPathFilter();\n     descriptor: ()Lorg/apache/commons/io/file/PathFilter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field pathFilter:Lorg/apache/commons/io/file/PathFilter;\n+         1: getfield      #24                 // Field pathFilter:Lorg/apache/commons/io/file/PathFilter;\n          4: areturn\n       LineNumberTable:\n         line 60: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/DirectoryStreamFilter;\n \n   public boolean accept(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #42                 // class java/nio/file/Path\n-         5: invokevirtual #44                 // Method accept:(Ljava/nio/file/Path;)Z\n+         2: checkcast     #60                 // class java/nio/file/Path\n+         5: invokevirtual #62                 // Method accept:(Ljava/nio/file/Path;)Z\n          8: ireturn\n       LineNumberTable:\n-        line 35: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       9     0  this   Lorg/apache/commons/io/file/DirectoryStreamFilter;\n-    Exceptions:\n-      throws java.io.IOException\n }\n-Signature: #65                          // Ljava/lang/Object;Ljava/nio/file/DirectoryStream$Filter<Ljava/nio/file/Path;>;\n SourceFile: \"DirectoryStreamFilter.java\"\n+Signature: #67                          // Ljava/lang/Object;Ljava/nio/file/DirectoryStream$Filter<Ljava/nio/file/Path;>;\n InnerClasses:\n-  public static #71= #47 of #69;          // Filter=class java/nio/file/DirectoryStream$Filter of class java/nio/file/DirectoryStream\n+  public static #71= #5 of #69;           // Filter=class java/nio/file/DirectoryStream$Filter of class java/nio/file/DirectoryStream\n"}]}
