{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorOutputStream.class", "source2": "second/ZstdCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,44 +6,44 @@\n import com.github.luben.zstd.ZstdOutputStream;\n import org.apache.commons.compress.compressors.CompressorOutputStream;\n \n public class ZstdCompressorOutputStream extends CompressorOutputStream\n {\n     private final ZstdOutputStream encOS;\n     \n-    public ZstdCompressorOutputStream(final OutputStream outStream) throws IOException {\n-        this.encOS = new ZstdOutputStream(outStream);\n+    public ZstdCompressorOutputStream(final OutputStream outputStream) throws IOException {\n+        this.encOS = new ZstdOutputStream(outputStream);\n     }\n     \n-    public ZstdCompressorOutputStream(final OutputStream outStream, final int level) throws IOException {\n-        this.encOS = new ZstdOutputStream(outStream, level);\n+    public ZstdCompressorOutputStream(final OutputStream outputStream, final int n) throws IOException {\n+        this.encOS = new ZstdOutputStream(outputStream, n);\n     }\n     \n-    public ZstdCompressorOutputStream(final OutputStream outStream, final int level, final boolean closeFrameOnFlush) throws IOException {\n-        (this.encOS = new ZstdOutputStream(outStream, level)).setCloseFrameOnFlush(closeFrameOnFlush);\n+    public ZstdCompressorOutputStream(final OutputStream outputStream, final int n, final boolean closeFrameOnFlush) throws IOException {\n+        (this.encOS = new ZstdOutputStream(outputStream, n)).setCloseFrameOnFlush(closeFrameOnFlush);\n     }\n     \n-    public ZstdCompressorOutputStream(final OutputStream outStream, final int level, final boolean closeFrameOnFlush, final boolean useChecksum) throws IOException {\n-        (this.encOS = new ZstdOutputStream(outStream, level)).setCloseFrameOnFlush(closeFrameOnFlush);\n-        this.encOS.setChecksum(useChecksum);\n+    public ZstdCompressorOutputStream(final OutputStream outputStream, final int n, final boolean closeFrameOnFlush, final boolean checksum) throws IOException {\n+        (this.encOS = new ZstdOutputStream(outputStream, n)).setCloseFrameOnFlush(closeFrameOnFlush);\n+        this.encOS.setChecksum(checksum);\n     }\n     \n     public void close() throws IOException {\n         this.encOS.close();\n     }\n     \n     public void flush() throws IOException {\n         this.encOS.flush();\n     }\n     \n     public String toString() {\n         return this.encOS.toString();\n     }\n     \n-    public void write(final byte[] buf, final int off, final int len) throws IOException {\n-        this.encOS.write(buf, off, len);\n+    public void write(final byte[] array, final int n, final int n2) throws IOException {\n+        this.encOS.write(array, n, n2);\n     }\n     \n-    public void write(final int b) throws IOException {\n-        this.encOS.write(b);\n+    public void write(final int n) throws IOException {\n+        this.encOS.write(n);\n     }\n }\n"}]}
