{"diffoscope-json-version": 1, "source1": "first/Article.class", "source2": "second/Article.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -20,52 +20,52 @@\n     public Article kid;\n     public Article next;\n     \n     public static void printThread(final Article article) {\n         printThread(article, 0, System.out);\n     }\n     \n-    public static void printThread(final Article article, final int depth) {\n-        printThread(article, depth, System.out);\n+    public static void printThread(final Article article, final int n) {\n+        printThread(article, n, System.out);\n     }\n     \n-    public static void printThread(final Article article, final int depth, final PrintStream ps) {\n-        for (int i = 0; i < depth; ++i) {\n-            ps.print(\"==>\");\n+    public static void printThread(final Article article, final int n, final PrintStream printStream) {\n+        for (int i = 0; i < n; ++i) {\n+            printStream.print(\"==>\");\n         }\n-        ps.println(article.getSubject() + \"\\t\" + article.getFrom() + \"\\t\" + article.getArticleId());\n+        printStream.println(article.getSubject() + \"\\t\" + article.getFrom() + \"\\t\" + article.getArticleId());\n         if (article.kid != null) {\n-            printThread(article.kid, depth + 1);\n+            printThread(article.kid, n + 1);\n         }\n         if (article.next != null) {\n-            printThread(article.next, depth);\n+            printThread(article.next, n);\n         }\n     }\n     \n-    public static void printThread(final Article article, final PrintStream ps) {\n-        printThread(article, 0, ps);\n+    public static void printThread(final Article article, final PrintStream printStream) {\n+        printThread(article, 0, printStream);\n     }\n     \n     public Article() {\n         this.articleNumber = -1L;\n     }\n     \n     @Deprecated\n-    public void addHeaderField(final String name, final String val) {\n+    public void addHeaderField(final String s, final String s2) {\n     }\n     \n-    public void addReference(final String msgId) {\n-        if (msgId == null || msgId.isEmpty()) {\n+    public void addReference(final String s) {\n+        if (s == null || s.isEmpty()) {\n             return;\n         }\n         if (this.references == null) {\n             this.references = new ArrayList<String>();\n         }\n         this.isReply = true;\n-        Collections.addAll(this.references, msgId.split(\" \"));\n+        Collections.addAll(this.references, s.split(\" \"));\n     }\n     \n     private void flushSubjectCache() {\n         this.simplifiedSubject = null;\n     }\n     \n     public String getArticleId() {\n@@ -112,90 +112,90 @@\n         return this.articleId;\n     }\n     \n     public String[] messageThreadReferences() {\n         return this.getReferences();\n     }\n     \n-    public void setArticleId(final String string) {\n-        this.articleId = string;\n+    public void setArticleId(final String articleId) {\n+        this.articleId = articleId;\n     }\n     \n     @Deprecated\n-    public void setArticleNumber(final int a) {\n-        this.articleNumber = a;\n+    public void setArticleNumber(final int n) {\n+        this.articleNumber = n;\n     }\n     \n-    public void setArticleNumber(final long l) {\n-        this.articleNumber = l;\n+    public void setArticleNumber(final long articleNumber) {\n+        this.articleNumber = articleNumber;\n     }\n     \n-    public void setChild(final Threadable child) {\n-        this.kid = (Article)child;\n+    public void setChild(final Threadable threadable) {\n+        this.kid = (Article)threadable;\n         this.flushSubjectCache();\n     }\n     \n-    public void setDate(final String string) {\n-        this.date = string;\n+    public void setDate(final String date) {\n+        this.date = date;\n     }\n     \n-    public void setFrom(final String string) {\n-        this.from = string;\n+    public void setFrom(final String from) {\n+        this.from = from;\n     }\n     \n-    public void setNext(final Threadable next) {\n-        this.next = (Article)next;\n+    public void setNext(final Threadable threadable) {\n+        this.next = (Article)threadable;\n         this.flushSubjectCache();\n     }\n     \n-    public void setSubject(final String string) {\n-        this.subject = string;\n+    public void setSubject(final String subject) {\n+        this.subject = subject;\n     }\n     \n     public String simplifiedSubject() {\n         if (this.simplifiedSubject == null) {\n             this.simplifySubject();\n         }\n         return this.simplifiedSubject;\n     }\n     \n     private void simplifySubject() {\n-        int start = 0;\n+        int n = 0;\n         final String subject = this.getSubject();\n-        final int len = subject.length();\n-        boolean done = false;\n-        while (!done) {\n-            done = true;\n-            while (start < len && subject.charAt(start) == ' ') {\n-                ++start;\n+        final int length = subject.length();\n+        int i = 0;\n+        while (i == 0) {\n+            i = 1;\n+            while (n < length && subject.charAt(n) == ' ') {\n+                ++n;\n             }\n-            if (start < len - 2 && (subject.charAt(start) == 'r' || subject.charAt(start) == 'R') && (subject.charAt(start + 1) == 'e' || subject.charAt(start + 1) == 'E')) {\n-                if (subject.charAt(start + 2) == ':') {\n-                    start += 3;\n-                    done = false;\n+            if (n < length - 2 && (subject.charAt(n) == 'r' || subject.charAt(n) == 'R') && (subject.charAt(n + 1) == 'e' || subject.charAt(n + 1) == 'E')) {\n+                if (subject.charAt(n + 2) == ':') {\n+                    n += 3;\n+                    i = 0;\n                 }\n-                else if (start < len - 2 && (subject.charAt(start + 2) == '[' || subject.charAt(start + 2) == '(')) {\n-                    int i;\n-                    for (i = start + 3; i < len && subject.charAt(i) >= '0' && subject.charAt(i) <= '9'; ++i) {}\n-                    if (i < len - 1 && (subject.charAt(i) == ']' || subject.charAt(i) == ')') && subject.charAt(i + 1) == ':') {\n-                        start = i + 2;\n-                        done = false;\n+                else if (n < length - 2 && (subject.charAt(n + 2) == '[' || subject.charAt(n + 2) == '(')) {\n+                    int n2;\n+                    for (n2 = n + 3; n2 < length && subject.charAt(n2) >= '0' && subject.charAt(n2) <= '9'; ++n2) {}\n+                    if (n2 < length - 1 && (subject.charAt(n2) == ']' || subject.charAt(n2) == ')') && subject.charAt(n2 + 1) == ':') {\n+                        n = n2 + 2;\n+                        i = 0;\n                     }\n                 }\n             }\n             if (\"(no subject)\".equals(this.simplifiedSubject)) {\n                 this.simplifiedSubject = \"\";\n             }\n-            int end;\n-            for (end = len; end > start && subject.charAt(end - 1) < ' '; --end) {}\n-            if (start == 0 && end == len) {\n+            int endIndex;\n+            for (endIndex = length; endIndex > n && subject.charAt(endIndex - 1) < ' '; --endIndex) {}\n+            if (n == 0 && endIndex == length) {\n                 this.simplifiedSubject = subject;\n             }\n             else {\n-                this.simplifiedSubject = subject.substring(start, end);\n+                this.simplifiedSubject = subject.substring(n, endIndex);\n             }\n         }\n     }\n     \n     public boolean subjectIsReply() {\n         return this.isReply;\n     }\n"}]}
