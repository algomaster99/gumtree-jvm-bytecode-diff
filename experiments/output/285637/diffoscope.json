{"diffoscope-json-version": 1, "source1": "first/Pass2Verifier$CPESSC_Visitor.class", "source2": "second/Pass2Verifier$CPESSC_Visitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,350 +1,350 @@\n-  SHA-256 checksum 338ae74e97f82074459a9bd41e2578770a99b9b3514db90a40d4a0df58cd995d\n+  SHA-256 checksum d729a81c76c5841281d884eff71f731410b5f7e6e7af8cab5837ea894d892145\n   Compiled from \"Pass2Verifier.java\"\n final class org.apache.bcel.verifier.statics.Pass2Verifier$CPESSC_Visitor extends org.apache.bcel.classfile.EmptyVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #332                        // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n   super_class: #333                       // org/apache/bcel/classfile/EmptyVisitor\n   interfaces: 0, fields: 16, methods: 33, attributes: 3\n Constant pool:\n-    #1 = Methodref          #332.#467     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n-    #2 = Fieldref           #332.#468     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n-    #3 = Methodref          #333.#469     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n-    #4 = Class              #470          // java/util/HashSet\n-    #5 = Methodref          #4.#469       // java/util/HashSet.\"<init>\":()V\n-    #6 = Fieldref           #332.#471     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.fieldNames:Ljava/util/Set;\n-    #7 = Fieldref           #332.#472     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.fieldNamesAndDesc:Ljava/util/Set;\n-    #8 = Fieldref           #332.#473     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.methodNamesAndDesc:Ljava/util/Set;\n-    #9 = Fieldref           #332.#474     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.jc:Lorg/apache/bcel/classfile/JavaClass;\n-   #10 = Methodref          #475.#476     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #11 = Fieldref           #332.#477     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cp:Lorg/apache/bcel/classfile/ConstantPool;\n-   #12 = Methodref          #478.#479     // org/apache/bcel/classfile/ConstantPool.getLength:()I\n-   #13 = Fieldref           #332.#480     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cplen:I\n-   #14 = Class              #481          // org/apache/bcel/classfile/ConstantClass\n-   #15 = Fieldref           #332.#482     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Class:Ljava/lang/Class;\n-   #16 = Class              #483          // org/apache/bcel/classfile/ConstantString\n-   #17 = Fieldref           #332.#484     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_String:Ljava/lang/Class;\n-   #18 = Class              #485          // org/apache/bcel/classfile/ConstantInteger\n-   #19 = Fieldref           #332.#486     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Integer:Ljava/lang/Class;\n-   #20 = Class              #487          // org/apache/bcel/classfile/ConstantFloat\n-   #21 = Fieldref           #332.#488     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Float:Ljava/lang/Class;\n-   #22 = Class              #489          // org/apache/bcel/classfile/ConstantLong\n-   #23 = Fieldref           #332.#490     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Long:Ljava/lang/Class;\n-   #24 = Class              #491          // org/apache/bcel/classfile/ConstantDouble\n-   #25 = Fieldref           #332.#492     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Double:Ljava/lang/Class;\n-   #26 = Class              #493          // org/apache/bcel/classfile/ConstantNameAndType\n-   #27 = Fieldref           #332.#494     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_NameAndType:Ljava/lang/Class;\n-   #28 = Class              #495          // org/apache/bcel/classfile/ConstantUtf8\n-   #29 = Fieldref           #332.#496     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Utf8:Ljava/lang/Class;\n-   #30 = Class              #497          // org/apache/bcel/classfile/DescendingVisitor\n-   #31 = Methodref          #30.#498      // org/apache/bcel/classfile/DescendingVisitor.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n-   #32 = Fieldref           #332.#499     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n-   #33 = Methodref          #30.#500      // org/apache/bcel/classfile/DescendingVisitor.visit:()V\n-   #34 = Class              #501          // org/apache/bcel/verifier/exc/ClassConstraintException\n-   #35 = Class              #502          // java/lang/StringBuilder\n-   #36 = Methodref          #35.#469      // java/lang/StringBuilder.\"<init>\":()V\n-   #37 = String             #503          // Invalid index \\'\n-   #38 = Methodref          #35.#504      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #39 = Methodref          #35.#505      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #40 = String             #506          // \\' used by \\'\n-   #41 = Methodref          #507.#508     // org/apache/bcel/verifier/statics/Pass2Verifier.access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-   #42 = String             #509          // \\'.\n-   #43 = Methodref          #35.#510      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Methodref          #34.#511      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #478.#512     // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #46 = Methodref          #513.#514     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #47 = String             #515          // Illegal constant \\'\n-   #48 = String             #516          // \\' at index \\'\n-   #49 = String             #517          // \\'. \\'\n-   #50 = String             #518          // \\' expects a \\'\n-   #51 = Methodref          #35.#519      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #52 = Methodref          #296.#520     // org/apache/bcel/classfile/Code.getNameIndex:()I\n-   #53 = Methodref          #332.#521     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n-   #54 = Methodref          #28.#522      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+    #1 = Methodref          #332.#455     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n+    #2 = Fieldref           #332.#456     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n+    #3 = Methodref          #333.#457     // org/apache/bcel/classfile/EmptyVisitor.\"<init>\":()V\n+    #4 = Class              #458          // java/util/HashSet\n+    #5 = Methodref          #4.#457       // java/util/HashSet.\"<init>\":()V\n+    #6 = Fieldref           #332.#459     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.fieldNames:Ljava/util/Set;\n+    #7 = Fieldref           #332.#460     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.fieldNamesAndDesc:Ljava/util/Set;\n+    #8 = Fieldref           #332.#461     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.methodNamesAndDesc:Ljava/util/Set;\n+    #9 = Fieldref           #332.#462     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.jc:Lorg/apache/bcel/classfile/JavaClass;\n+   #10 = Methodref          #380.#463     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #11 = Fieldref           #332.#464     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cp:Lorg/apache/bcel/classfile/ConstantPool;\n+   #12 = Methodref          #465.#466     // org/apache/bcel/classfile/ConstantPool.getLength:()I\n+   #13 = Fieldref           #332.#467     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.cplen:I\n+   #14 = Class              #468          // org/apache/bcel/classfile/ConstantClass\n+   #15 = Fieldref           #332.#469     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Class:Ljava/lang/Class;\n+   #16 = Class              #470          // org/apache/bcel/classfile/ConstantString\n+   #17 = Fieldref           #332.#471     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_String:Ljava/lang/Class;\n+   #18 = Class              #472          // org/apache/bcel/classfile/ConstantInteger\n+   #19 = Fieldref           #332.#473     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Integer:Ljava/lang/Class;\n+   #20 = Class              #474          // org/apache/bcel/classfile/ConstantFloat\n+   #21 = Fieldref           #332.#475     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Float:Ljava/lang/Class;\n+   #22 = Class              #476          // org/apache/bcel/classfile/ConstantLong\n+   #23 = Fieldref           #332.#477     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Long:Ljava/lang/Class;\n+   #24 = Class              #478          // org/apache/bcel/classfile/ConstantDouble\n+   #25 = Fieldref           #332.#479     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Double:Ljava/lang/Class;\n+   #26 = Class              #480          // org/apache/bcel/classfile/ConstantNameAndType\n+   #27 = Fieldref           #332.#481     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_NameAndType:Ljava/lang/Class;\n+   #28 = Class              #482          // org/apache/bcel/classfile/ConstantUtf8\n+   #29 = Fieldref           #332.#483     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.CONST_Utf8:Ljava/lang/Class;\n+   #30 = Class              #484          // org/apache/bcel/classfile/DescendingVisitor\n+   #31 = Methodref          #30.#485      // org/apache/bcel/classfile/DescendingVisitor.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n+   #32 = Fieldref           #332.#486     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n+   #33 = Methodref          #30.#487      // org/apache/bcel/classfile/DescendingVisitor.visit:()V\n+   #34 = Class              #488          // org/apache/bcel/verifier/exc/ClassConstraintException\n+   #35 = Class              #489          // java/lang/StringBuilder\n+   #36 = Methodref          #35.#457      // java/lang/StringBuilder.\"<init>\":()V\n+   #37 = String             #490          // Invalid index \\'\n+   #38 = Methodref          #35.#491      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #39 = Methodref          #35.#492      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #40 = String             #493          // \\' used by \\'\n+   #41 = Methodref          #494.#495     // org/apache/bcel/verifier/statics/Pass2Verifier.access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+   #42 = String             #496          // \\'.\n+   #43 = Methodref          #35.#497      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = Methodref          #34.#498      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #45 = Methodref          #465.#499     // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #46 = Methodref          #500.#501     // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+   #47 = String             #502          // Illegal constant \\'\n+   #48 = String             #503          // \\' at index \\'\n+   #49 = String             #504          // \\'. \\'\n+   #50 = String             #505          // \\' expects a \\'\n+   #51 = Methodref          #35.#506      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #52 = Methodref          #296.#507     // org/apache/bcel/classfile/Code.getNameIndex:()I\n+   #53 = Methodref          #332.#508     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n+   #54 = Methodref          #28.#509      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n    #55 = String             #362          // Code\n-   #56 = Methodref          #523.#524     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #57 = String             #525          // The Code attribute \\'\n-   #58 = String             #526          // \\' is not correctly named \\'Code\\' but \\'\n-   #59 = Methodref          #30.#527      // org/apache/bcel/classfile/DescendingVisitor.predecessor:()Ljava/lang/Object;\n-   #60 = Class              #528          // org/apache/bcel/classfile/Method\n-   #61 = String             #529          // Code attribute \\'\n-   #62 = String             #530          // \\' is not declared in a method_info structure but in \\'\n-   #63 = String             #531          // \\'. Ignored.\n-   #64 = Methodref          #507.#532     // org/apache/bcel/verifier/statics/Pass2Verifier.addMessage:(Ljava/lang/String;)V\n-   #65 = Methodref          #296.#533     // org/apache/bcel/classfile/Code.getCode:()[B\n-   #66 = String             #534          // Code array of Code attribute \\'\n-   #67 = String             #535          // \\' (method \\'\n-   #68 = String             #536          // \\') must not be empty.\n-   #69 = Methodref          #296.#537     // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-   #70 = Methodref          #538.#539     // org/apache/bcel/classfile/CodeException.getCatchType:()I\n-   #71 = Methodref          #14.#520      // org/apache/bcel/classfile/ConstantClass.getNameIndex:()I\n-   #72 = Methodref          #540.#541     // org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n-   #73 = Methodref          #542.#543     // org/apache/bcel/verifier/VerifierFactory.getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n-   #74 = Methodref          #544.#545     // org/apache/bcel/verifier/Verifier.doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n-   #75 = Fieldref           #546.#547     // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-   #76 = String             #548          // \\') has an exception_table entry \\'\n-   #77 = String             #549          // \\' that references \\'\n-   #78 = String             #550          // \\' as an Exception but it does not pass verification pass 1:\n-   #79 = Methodref          #551.#552     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-   #80 = Fieldref           #553.#554     // org/apache/bcel/generic/Type.THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n-   #81 = Methodref          #262.#555     // org/apache/bcel/generic/ObjectType.getClassName:()Ljava/lang/String;\n-   #82 = Fieldref           #553.#556     // org/apache/bcel/generic/Type.OBJECT:Lorg/apache/bcel/generic/ObjectType;\n-   #83 = Methodref          #475.#557     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n-   #84 = String             #558          // \\' as an Exception but \\'\n-   #85 = String             #559          // \\' in the ancestor hierachy does not pass verification pass 1:\n-   #86 = String             #560          // \\' as an Exception but it is not a subclass of \\'\n-   #87 = Methodref          #475.#555     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n-   #88 = Methodref          #507.#561     // org/apache/bcel/verifier/statics/Pass2Verifier.access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n-   #89 = Methodref          #544.#555     // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n-   #90 = Methodref          #475.#562     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #91 = Methodref          #60.#563      // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n-   #92 = Class              #564          // org/apache/bcel/verifier/exc/AssertionViolatedException\n-   #93 = String             #565          // Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n-   #94 = Methodref          #92.#511      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-   #95 = Methodref          #507.#566     // org/apache/bcel/verifier/statics/Pass2Verifier.access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n-   #96 = Class              #567          // org/apache/bcel/verifier/statics/LocalVariablesInfo\n-   #97 = Methodref          #296.#568     // org/apache/bcel/classfile/Code.getMaxLocals:()I\n-   #98 = Methodref          #96.#569      // org/apache/bcel/verifier/statics/LocalVariablesInfo.\"<init>\":(I)V\n-   #99 = Methodref          #296.#570     // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #100 = Class              #571          // org/apache/bcel/classfile/LineNumberTable\n-  #101 = Class              #572          // org/apache/bcel/classfile/LocalVariableTable\n-  #102 = String             #573          // Attribute \\'\n-  #103 = String             #574          // \\' as an attribute of Code attribute \\'\n-  #104 = String             #575          // \\') is unknown and will therefore be ignored.\n-  #105 = String             #576          // \\') will effectively be ignored and is only useful for debuggers and such.\n-  #106 = Methodref          #101.#520     // org/apache/bcel/classfile/LocalVariableTable.getNameIndex:()I\n-  #107 = String             #577          // LocalVariableTable\n-  #108 = String             #578          // The LocalVariableTable attribute \\'\n-  #109 = String             #579          // \\' is not correctly named \\'LocalVariableTable\\' but \\'\n-  #110 = Methodref          #101.#580     // org/apache/bcel/classfile/LocalVariableTable.getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n-  #111 = Methodref          #581.#520     // org/apache/bcel/classfile/LocalVariable.getNameIndex:()I\n-  #112 = Methodref          #507.#582     // org/apache/bcel/verifier/statics/Pass2Verifier.access$300:(Ljava/lang/String;)Z\n-  #113 = String             #583          // LocalVariableTable \\'\n-  #114 = String             #584          // \\' references a local variable by the name \\'\n-  #115 = String             #585          // \\' which is not a legal Java simple name.\n-  #116 = Methodref          #581.#586     // org/apache/bcel/classfile/LocalVariable.getSignatureIndex:()I\n-  #117 = Methodref          #553.#587     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #118 = Class              #588          // org/apache/bcel/classfile/ClassFormatException\n-  #119 = String             #589          // Illegal descriptor (==signature) \\'\n-  #120 = String             #590          // \\' used by LocalVariable \\'\n-  #121 = String             #591          // \\' referenced by \\'\n-  #122 = Methodref          #34.#592      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #123 = Methodref          #581.#593     // org/apache/bcel/classfile/LocalVariable.getIndex:()I\n-  #124 = Fieldref           #553.#594     // org/apache/bcel/generic/Type.LONG:Lorg/apache/bcel/generic/BasicType;\n-  #125 = Fieldref           #553.#595     // org/apache/bcel/generic/Type.DOUBLE:Lorg/apache/bcel/generic/BasicType;\n-  #126 = String             #596          // LocalVariableTable attribute \\'\n-  #127 = String             #597          // \\' references a LocalVariable \\'\n-  #128 = String             #598          // \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n-  #129 = Methodref          #581.#599     // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n-  #130 = Methodref          #581.#479     // org/apache/bcel/classfile/LocalVariable.getLength:()I\n-  #131 = Methodref          #96.#600      // org/apache/bcel/verifier/statics/LocalVariablesInfo.add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-  #132 = Class              #601          // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-  #133 = String             #602          // Conflicting information in LocalVariableTable \\'\n-  #134 = String             #603          // \\' found in Code attribute \\'\n-  #135 = String             #604          // \\').\n-  #136 = Methodref          #132.#605     // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.getMessage:()Ljava/lang/String;\n-  #137 = Methodref          #60.#606      // org/apache/bcel/classfile/Method.isStatic:()Z\n-  #138 = String             #607          // Number of LocalVariableTable attributes of Code attribute \\'\n-  #139 = String             #608          // \\') exceeds number of local variable slots \\'\n-  #140 = String             #609          // \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n-  #141 = Class              #610          // java/lang/ClassNotFoundException\n-  #142 = String             #611          // Missing class:\n-  #143 = Methodref          #92.#592      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #144 = Methodref          #14.#612      // org/apache/bcel/classfile/ConstantClass.getTag:()B\n-  #145 = Class              #613          // org/apache/bcel/Const\n-  #146 = String             #614          // Wrong constant tag in \\'\n-  #147 = Methodref          #24.#612      // org/apache/bcel/classfile/ConstantDouble.getTag:()B\n-  #148 = Methodref          #615.#612     // org/apache/bcel/classfile/ConstantFieldref.getTag:()B\n-  #149 = Methodref          #615.#616     // org/apache/bcel/classfile/ConstantFieldref.getClassIndex:()I\n-  #150 = Methodref          #615.#617     // org/apache/bcel/classfile/ConstantFieldref.getNameAndTypeIndex:()I\n-  #151 = Methodref          #20.#612      // org/apache/bcel/classfile/ConstantFloat.getTag:()B\n-  #152 = Methodref          #18.#612      // org/apache/bcel/classfile/ConstantInteger.getTag:()B\n-  #153 = Methodref          #618.#612     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getTag:()B\n-  #154 = Methodref          #618.#616     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getClassIndex:()I\n-  #155 = Methodref          #618.#617     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getNameAndTypeIndex:()I\n-  #156 = Methodref          #22.#612      // org/apache/bcel/classfile/ConstantLong.getTag:()B\n-  #157 = Methodref          #619.#612     // org/apache/bcel/classfile/ConstantMethodref.getTag:()B\n-  #158 = Methodref          #619.#616     // org/apache/bcel/classfile/ConstantMethodref.getClassIndex:()I\n-  #159 = Methodref          #619.#617     // org/apache/bcel/classfile/ConstantMethodref.getNameAndTypeIndex:()I\n-  #160 = Methodref          #26.#612      // org/apache/bcel/classfile/ConstantNameAndType.getTag:()B\n-  #161 = Methodref          #26.#520      // org/apache/bcel/classfile/ConstantNameAndType.getNameIndex:()I\n-  #162 = Methodref          #26.#586      // org/apache/bcel/classfile/ConstantNameAndType.getSignatureIndex:()I\n-  #163 = Methodref          #16.#612      // org/apache/bcel/classfile/ConstantString.getTag:()B\n-  #164 = Methodref          #16.#620      // org/apache/bcel/classfile/ConstantString.getStringIndex:()I\n-  #165 = Methodref          #28.#612      // org/apache/bcel/classfile/ConstantUtf8.getTag:()B\n-  #166 = Methodref          #223.#520     // org/apache/bcel/classfile/ConstantValue.getNameIndex:()I\n-  #167 = String             #621          // ConstantValue\n-  #168 = String             #622          // The ConstantValue attribute \\'\n-  #169 = String             #623          // \\' is not correctly named \\'ConstantValue\\' but \\'\n-  #170 = Class              #624          // org/apache/bcel/classfile/Field\n-  #171 = Methodref          #170.#586     // org/apache/bcel/classfile/Field.getSignatureIndex:()I\n-  #172 = Methodref          #223.#625     // org/apache/bcel/classfile/ConstantValue.getConstantValueIndex:()I\n-  #173 = Methodref          #553.#524     // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-  #174 = Fieldref           #553.#626     // org/apache/bcel/generic/Type.FLOAT:Lorg/apache/bcel/generic/BasicType;\n-  #175 = Fieldref           #553.#627     // org/apache/bcel/generic/Type.INT:Lorg/apache/bcel/generic/BasicType;\n-  #176 = Fieldref           #553.#628     // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #177 = Fieldref           #553.#629     // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #178 = Fieldref           #553.#630     // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #179 = Fieldref           #553.#631     // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-  #180 = Fieldref           #553.#632     // org/apache/bcel/generic/Type.STRING:Lorg/apache/bcel/generic/ObjectType;\n-  #181 = String             #633          // Illegal type of ConstantValue \\'\n-  #182 = String             #634          // \\' embedding Constant \\'\n-  #183 = String             #635          // \\'. It is referenced by field \\'\n-  #184 = String             #636          // \\' expecting a different type: \\'\n-  #185 = Methodref          #225.#520     // org/apache/bcel/classfile/Deprecated.getNameIndex:()I\n-  #186 = String             #637          // Deprecated\n-  #187 = String             #638          // The Deprecated attribute \\'\n-  #188 = String             #639          // \\' is not correctly named \\'Deprecated\\' but \\'\n-  #189 = Methodref          #297.#520     // org/apache/bcel/classfile/ExceptionTable.getNameIndex:()I\n-  #190 = String             #640          // Exceptions\n-  #191 = String             #641          // The Exceptions attribute \\'\n-  #192 = String             #642          // \\' is not correctly named \\'Exceptions\\' but \\'\n-  #193 = Methodref          #297.#643     // org/apache/bcel/classfile/ExceptionTable.getExceptionIndexTable:()[I\n-  #194 = String             #644          // Exceptions attribute \\'\n-  #195 = String             #645          // \\' references \\'\n-  #196 = Methodref          #475.#646     // org/apache/bcel/classfile/JavaClass.isClass:()Z\n-  #197 = Methodref          #170.#647     // org/apache/bcel/classfile/Field.isPrivate:()Z\n-  #198 = Methodref          #170.#648     // org/apache/bcel/classfile/Field.isProtected:()Z\n-  #199 = Methodref          #170.#649     // org/apache/bcel/classfile/Field.isPublic:()Z\n-  #200 = String             #650          // Field \\'\n-  #201 = String             #651          // \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n-  #202 = Methodref          #170.#652     // org/apache/bcel/classfile/Field.isFinal:()Z\n-  #203 = Methodref          #170.#653     // org/apache/bcel/classfile/Field.isVolatile:()Z\n-  #204 = String             #654          // \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n-  #205 = String             #655          // Interface field \\'\n-  #206 = String             #656          // \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n-  #207 = Methodref          #170.#606     // org/apache/bcel/classfile/Field.isStatic:()Z\n-  #208 = String             #657          // \\' must have the ACC_STATIC modifier set but hasn\\'t!\n-  #209 = String             #658          // \\' must have the ACC_FINAL modifier set but hasn\\'t!\n-  #210 = Methodref          #170.#659     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n-  #211 = String             #660          // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n-  #212 = Methodref          #170.#520     // org/apache/bcel/classfile/Field.getNameIndex:()I\n-  #213 = Methodref          #170.#563     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n-  #214 = Methodref          #507.#661     // org/apache/bcel/verifier/statics/Pass2Verifier.access$400:(Ljava/lang/String;)Z\n-  #215 = String             #662          // \\' has illegal name \\'\n-  #216 = InterfaceMethodref #663.#664     // java/util/Set.contains:(Ljava/lang/Object;)Z\n-  #217 = String             #665          // No two fields (like \\'\n-  #218 = String             #666          // \\') are allowed have same names and descriptors!\n-  #219 = String             #667          // More than one field of name \\'\n-  #220 = String             #668          // \\' detected (but with different type descriptors). This is very unusual.\n-  #221 = InterfaceMethodref #663.#669     // java/util/Set.add:(Ljava/lang/Object;)Z\n-  #222 = Methodref          #170.#570     // org/apache/bcel/classfile/Field.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #223 = Class              #670          // org/apache/bcel/classfile/ConstantValue\n-  #224 = Class              #671          // org/apache/bcel/classfile/Synthetic\n-  #225 = Class              #672          // org/apache/bcel/classfile/Deprecated\n-  #226 = String             #673          // \\' as an attribute of Field \\'\n-  #227 = String             #674          // \\' is unknown and will therefore be ignored.\n-  #228 = String             #675          // \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n-  #229 = Methodref          #240.#520     // org/apache/bcel/classfile/InnerClasses.getNameIndex:()I\n-  #230 = String             #463          // InnerClasses\n-  #231 = String             #676          // The InnerClasses attribute \\'\n-  #232 = String             #677          // \\' is not correctly named \\'InnerClasses\\' but \\'\n-  #233 = InvokeDynamic      #0:#683       // #0:accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n-  #234 = Methodref          #240.#684     // org/apache/bcel/classfile/InnerClasses.forEach:(Ljava/util/function/Consumer;)V\n-  #235 = Methodref          #475.#570     // org/apache/bcel/classfile/JavaClass.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #236 = Class              #685          // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n-  #237 = Methodref          #236.#687     // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n-  #238 = Methodref          #236.#688     // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.innerClassReferenced:()Z\n-  #239 = Class              #689          // org/apache/bcel/classfile/SourceFile\n-  #240 = Class              #690          // org/apache/bcel/classfile/InnerClasses\n-  #241 = String             #691          // \\' as an attribute of the ClassFile structure \\'\n-  #242 = String             #692          // A ClassFile structure (like \\'\n-  #243 = String             #693          // \\') may have no more than one SourceFile attribute.\n-  #244 = String             #694          // A Classfile structure (like \\'\n-  #245 = String             #695          // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n-  #246 = String             #696          // No referenced Inner Class found, but InnerClasses attribute \\'\n-  #247 = String             #697          // \\' found. Strongly suggest removal of that attribute.\n-  #248 = String             #698          // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n-  #249 = Methodref          #100.#520     // org/apache/bcel/classfile/LineNumberTable.getNameIndex:()I\n+   #56 = Methodref          #375.#510     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #57 = String             #511          // The Code attribute \\'\n+   #58 = String             #512          // \\' is not correctly named \\'Code\\' but \\'\n+   #59 = Methodref          #30.#513      // org/apache/bcel/classfile/DescendingVisitor.predecessor:()Ljava/lang/Object;\n+   #60 = Class              #514          // org/apache/bcel/classfile/Method\n+   #61 = String             #515          // Code attribute \\'\n+   #62 = String             #516          // \\' is not declared in a method_info structure but in \\'\n+   #63 = String             #517          // \\'. Ignored.\n+   #64 = Methodref          #494.#518     // org/apache/bcel/verifier/statics/Pass2Verifier.addMessage:(Ljava/lang/String;)V\n+   #65 = Methodref          #296.#519     // org/apache/bcel/classfile/Code.getCode:()[B\n+   #66 = String             #520          // Code array of Code attribute \\'\n+   #67 = String             #521          // \\' (method \\'\n+   #68 = String             #522          // \\') must not be empty.\n+   #69 = Methodref          #296.#523     // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+   #70 = Methodref          #377.#524     // org/apache/bcel/classfile/CodeException.getCatchType:()I\n+   #71 = Methodref          #14.#507      // org/apache/bcel/classfile/ConstantClass.getNameIndex:()I\n+   #72 = Methodref          #525.#526     // org/apache/bcel/classfile/Utility.pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+   #73 = Methodref          #527.#528     // org/apache/bcel/verifier/VerifierFactory.getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n+   #74 = Methodref          #378.#529     // org/apache/bcel/verifier/Verifier.doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n+   #75 = Fieldref           #379.#530     // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+   #76 = String             #531          // \\') has an exception_table entry \\'\n+   #77 = String             #532          // \\' that references \\'\n+   #78 = String             #533          // \\' as an Exception but it does not pass verification pass 1:\n+   #79 = Methodref          #534.#535     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+   #80 = Fieldref           #386.#536     // org/apache/bcel/generic/Type.THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n+   #81 = Methodref          #262.#537     // org/apache/bcel/generic/ObjectType.getClassName:()Ljava/lang/String;\n+   #82 = Fieldref           #386.#538     // org/apache/bcel/generic/Type.OBJECT:Lorg/apache/bcel/generic/ObjectType;\n+   #83 = Methodref          #380.#539     // org/apache/bcel/classfile/JavaClass.getSuperclassName:()Ljava/lang/String;\n+   #84 = String             #540          // \\' as an Exception but \\'\n+   #85 = String             #541          // \\' in the ancestor hierachy does not pass verification pass 1:\n+   #86 = String             #542          // \\' as an Exception but it is not a subclass of \\'\n+   #87 = Methodref          #380.#537     // org/apache/bcel/classfile/JavaClass.getClassName:()Ljava/lang/String;\n+   #88 = Methodref          #494.#543     // org/apache/bcel/verifier/statics/Pass2Verifier.access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n+   #89 = Methodref          #378.#537     // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n+   #90 = Methodref          #380.#544     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #91 = Methodref          #60.#545      // org/apache/bcel/classfile/Method.getName:()Ljava/lang/String;\n+   #92 = Class              #546          // org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #93 = String             #547          // Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n+   #94 = Methodref          #92.#498      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+   #95 = Methodref          #494.#548     // org/apache/bcel/verifier/statics/Pass2Verifier.access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n+   #96 = Class              #549          // org/apache/bcel/verifier/statics/LocalVariablesInfo\n+   #97 = Methodref          #296.#550     // org/apache/bcel/classfile/Code.getMaxLocals:()I\n+   #98 = Methodref          #96.#551      // org/apache/bcel/verifier/statics/LocalVariablesInfo.\"<init>\":(I)V\n+   #99 = Methodref          #296.#552     // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #100 = Class              #553          // org/apache/bcel/classfile/LineNumberTable\n+  #101 = Class              #554          // org/apache/bcel/classfile/LocalVariableTable\n+  #102 = String             #555          // Attribute \\'\n+  #103 = String             #556          // \\' as an attribute of Code attribute \\'\n+  #104 = String             #557          // \\') is unknown and will therefore be ignored.\n+  #105 = String             #558          // \\') will effectively be ignored and is only useful for debuggers and such.\n+  #106 = Methodref          #101.#507     // org/apache/bcel/classfile/LocalVariableTable.getNameIndex:()I\n+  #107 = String             #559          // LocalVariableTable\n+  #108 = String             #560          // The LocalVariableTable attribute \\'\n+  #109 = String             #561          // \\' is not correctly named \\'LocalVariableTable\\' but \\'\n+  #110 = Methodref          #101.#562     // org/apache/bcel/classfile/LocalVariableTable.getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n+  #111 = Methodref          #385.#507     // org/apache/bcel/classfile/LocalVariable.getNameIndex:()I\n+  #112 = Methodref          #494.#563     // org/apache/bcel/verifier/statics/Pass2Verifier.access$300:(Ljava/lang/String;)Z\n+  #113 = String             #564          // LocalVariableTable \\'\n+  #114 = String             #565          // \\' references a local variable by the name \\'\n+  #115 = String             #566          // \\' which is not a legal Java simple name.\n+  #116 = Methodref          #385.#567     // org/apache/bcel/classfile/LocalVariable.getSignatureIndex:()I\n+  #117 = Methodref          #386.#568     // org/apache/bcel/generic/Type.getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #118 = Class              #569          // org/apache/bcel/classfile/ClassFormatException\n+  #119 = String             #570          // Illegal descriptor (==signature) \\'\n+  #120 = String             #571          // \\' used by LocalVariable \\'\n+  #121 = String             #572          // \\' referenced by \\'\n+  #122 = Methodref          #34.#573      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #123 = Methodref          #385.#574     // org/apache/bcel/classfile/LocalVariable.getIndex:()I\n+  #124 = Fieldref           #386.#575     // org/apache/bcel/generic/Type.LONG:Lorg/apache/bcel/generic/BasicType;\n+  #125 = Fieldref           #386.#576     // org/apache/bcel/generic/Type.DOUBLE:Lorg/apache/bcel/generic/BasicType;\n+  #126 = String             #577          // LocalVariableTable attribute \\'\n+  #127 = String             #578          // \\' references a LocalVariable \\'\n+  #128 = String             #579          // \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n+  #129 = Methodref          #385.#580     // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n+  #130 = Methodref          #385.#466     // org/apache/bcel/classfile/LocalVariable.getLength:()I\n+  #131 = Methodref          #96.#581      // org/apache/bcel/verifier/statics/LocalVariablesInfo.add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+  #132 = Class              #582          // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+  #133 = String             #583          // Conflicting information in LocalVariableTable \\'\n+  #134 = String             #584          // \\' found in Code attribute \\'\n+  #135 = String             #585          // \\').\n+  #136 = Methodref          #132.#586     // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.getMessage:()Ljava/lang/String;\n+  #137 = Methodref          #60.#587      // org/apache/bcel/classfile/Method.isStatic:()Z\n+  #138 = String             #588          // Number of LocalVariableTable attributes of Code attribute \\'\n+  #139 = String             #589          // \\') exceeds number of local variable slots \\'\n+  #140 = String             #590          // \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n+  #141 = Class              #591          // java/lang/ClassNotFoundException\n+  #142 = String             #592          // Missing class:\n+  #143 = Methodref          #92.#573      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #144 = Methodref          #14.#593      // org/apache/bcel/classfile/ConstantClass.getTag:()B\n+  #145 = Class              #594          // org/apache/bcel/Const\n+  #146 = String             #595          // Wrong constant tag in \\'\n+  #147 = Methodref          #24.#593      // org/apache/bcel/classfile/ConstantDouble.getTag:()B\n+  #148 = Methodref          #596.#593     // org/apache/bcel/classfile/ConstantFieldref.getTag:()B\n+  #149 = Methodref          #596.#597     // org/apache/bcel/classfile/ConstantFieldref.getClassIndex:()I\n+  #150 = Methodref          #596.#598     // org/apache/bcel/classfile/ConstantFieldref.getNameAndTypeIndex:()I\n+  #151 = Methodref          #20.#593      // org/apache/bcel/classfile/ConstantFloat.getTag:()B\n+  #152 = Methodref          #18.#593      // org/apache/bcel/classfile/ConstantInteger.getTag:()B\n+  #153 = Methodref          #599.#593     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getTag:()B\n+  #154 = Methodref          #599.#597     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getClassIndex:()I\n+  #155 = Methodref          #599.#598     // org/apache/bcel/classfile/ConstantInterfaceMethodref.getNameAndTypeIndex:()I\n+  #156 = Methodref          #22.#593      // org/apache/bcel/classfile/ConstantLong.getTag:()B\n+  #157 = Methodref          #600.#593     // org/apache/bcel/classfile/ConstantMethodref.getTag:()B\n+  #158 = Methodref          #600.#597     // org/apache/bcel/classfile/ConstantMethodref.getClassIndex:()I\n+  #159 = Methodref          #600.#598     // org/apache/bcel/classfile/ConstantMethodref.getNameAndTypeIndex:()I\n+  #160 = Methodref          #26.#593      // org/apache/bcel/classfile/ConstantNameAndType.getTag:()B\n+  #161 = Methodref          #26.#507      // org/apache/bcel/classfile/ConstantNameAndType.getNameIndex:()I\n+  #162 = Methodref          #26.#567      // org/apache/bcel/classfile/ConstantNameAndType.getSignatureIndex:()I\n+  #163 = Methodref          #16.#593      // org/apache/bcel/classfile/ConstantString.getTag:()B\n+  #164 = Methodref          #16.#601      // org/apache/bcel/classfile/ConstantString.getStringIndex:()I\n+  #165 = Methodref          #28.#593      // org/apache/bcel/classfile/ConstantUtf8.getTag:()B\n+  #166 = Methodref          #223.#507     // org/apache/bcel/classfile/ConstantValue.getNameIndex:()I\n+  #167 = String             #602          // ConstantValue\n+  #168 = String             #603          // The ConstantValue attribute \\'\n+  #169 = String             #604          // \\' is not correctly named \\'ConstantValue\\' but \\'\n+  #170 = Class              #605          // org/apache/bcel/classfile/Field\n+  #171 = Methodref          #170.#567     // org/apache/bcel/classfile/Field.getSignatureIndex:()I\n+  #172 = Methodref          #223.#606     // org/apache/bcel/classfile/ConstantValue.getConstantValueIndex:()I\n+  #173 = Methodref          #386.#510     // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+  #174 = Fieldref           #386.#607     // org/apache/bcel/generic/Type.FLOAT:Lorg/apache/bcel/generic/BasicType;\n+  #175 = Fieldref           #386.#608     // org/apache/bcel/generic/Type.INT:Lorg/apache/bcel/generic/BasicType;\n+  #176 = Fieldref           #386.#609     // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #177 = Fieldref           #386.#610     // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #178 = Fieldref           #386.#611     // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #179 = Fieldref           #386.#612     // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+  #180 = Fieldref           #386.#613     // org/apache/bcel/generic/Type.STRING:Lorg/apache/bcel/generic/ObjectType;\n+  #181 = String             #614          // Illegal type of ConstantValue \\'\n+  #182 = String             #615          // \\' embedding Constant \\'\n+  #183 = String             #616          // \\'. It is referenced by field \\'\n+  #184 = String             #617          // \\' expecting a different type: \\'\n+  #185 = Methodref          #225.#507     // org/apache/bcel/classfile/Deprecated.getNameIndex:()I\n+  #186 = String             #618          // Deprecated\n+  #187 = String             #619          // The Deprecated attribute \\'\n+  #188 = String             #620          // \\' is not correctly named \\'Deprecated\\' but \\'\n+  #189 = Methodref          #297.#507     // org/apache/bcel/classfile/ExceptionTable.getNameIndex:()I\n+  #190 = String             #621          // Exceptions\n+  #191 = String             #622          // The Exceptions attribute \\'\n+  #192 = String             #623          // \\' is not correctly named \\'Exceptions\\' but \\'\n+  #193 = Methodref          #297.#624     // org/apache/bcel/classfile/ExceptionTable.getExceptionIndexTable:()[I\n+  #194 = String             #625          // Exceptions attribute \\'\n+  #195 = String             #626          // \\' references \\'\n+  #196 = Methodref          #380.#627     // org/apache/bcel/classfile/JavaClass.isClass:()Z\n+  #197 = Methodref          #170.#628     // org/apache/bcel/classfile/Field.isPrivate:()Z\n+  #198 = Methodref          #170.#629     // org/apache/bcel/classfile/Field.isProtected:()Z\n+  #199 = Methodref          #170.#630     // org/apache/bcel/classfile/Field.isPublic:()Z\n+  #200 = String             #631          // Field \\'\n+  #201 = String             #632          // \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n+  #202 = Methodref          #170.#633     // org/apache/bcel/classfile/Field.isFinal:()Z\n+  #203 = Methodref          #170.#634     // org/apache/bcel/classfile/Field.isVolatile:()Z\n+  #204 = String             #635          // \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n+  #205 = String             #636          // Interface field \\'\n+  #206 = String             #637          // \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n+  #207 = Methodref          #170.#587     // org/apache/bcel/classfile/Field.isStatic:()Z\n+  #208 = String             #638          // \\' must have the ACC_STATIC modifier set but hasn\\'t!\n+  #209 = String             #639          // \\' must have the ACC_FINAL modifier set but hasn\\'t!\n+  #210 = Methodref          #170.#640     // org/apache/bcel/classfile/Field.getAccessFlags:()I\n+  #211 = String             #641          // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n+  #212 = Methodref          #170.#507     // org/apache/bcel/classfile/Field.getNameIndex:()I\n+  #213 = Methodref          #170.#545     // org/apache/bcel/classfile/Field.getName:()Ljava/lang/String;\n+  #214 = Methodref          #494.#642     // org/apache/bcel/verifier/statics/Pass2Verifier.access$400:(Ljava/lang/String;)Z\n+  #215 = String             #643          // \\' has illegal name \\'\n+  #216 = InterfaceMethodref #644.#645     // java/util/Set.contains:(Ljava/lang/Object;)Z\n+  #217 = String             #646          // No two fields (like \\'\n+  #218 = String             #647          // \\') are allowed have same names and descriptors!\n+  #219 = String             #648          // More than one field of name \\'\n+  #220 = String             #649          // \\' detected (but with different type descriptors). This is very unusual.\n+  #221 = InterfaceMethodref #644.#650     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #222 = Methodref          #170.#552     // org/apache/bcel/classfile/Field.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #223 = Class              #651          // org/apache/bcel/classfile/ConstantValue\n+  #224 = Class              #652          // org/apache/bcel/classfile/Synthetic\n+  #225 = Class              #653          // org/apache/bcel/classfile/Deprecated\n+  #226 = String             #654          // \\' as an attribute of Field \\'\n+  #227 = String             #655          // \\' is unknown and will therefore be ignored.\n+  #228 = String             #656          // \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n+  #229 = Methodref          #240.#507     // org/apache/bcel/classfile/InnerClasses.getNameIndex:()I\n+  #230 = String             #451          // InnerClasses\n+  #231 = String             #657          // The InnerClasses attribute \\'\n+  #232 = String             #658          // \\' is not correctly named \\'InnerClasses\\' but \\'\n+  #233 = InvokeDynamic      #0:#664       // #0:accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n+  #234 = Methodref          #240.#665     // org/apache/bcel/classfile/InnerClasses.forEach:(Ljava/util/function/Consumer;)V\n+  #235 = Methodref          #380.#552     // org/apache/bcel/classfile/JavaClass.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #236 = Class              #666          // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n+  #237 = Methodref          #236.#668     // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.\"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n+  #238 = Methodref          #236.#669     // org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector.innerClassReferenced:()Z\n+  #239 = Class              #670          // org/apache/bcel/classfile/SourceFile\n+  #240 = Class              #671          // org/apache/bcel/classfile/InnerClasses\n+  #241 = String             #672          // \\' as an attribute of the ClassFile structure \\'\n+  #242 = String             #673          // A ClassFile structure (like \\'\n+  #243 = String             #674          // \\') may have no more than one SourceFile attribute.\n+  #244 = String             #675          // A Classfile structure (like \\'\n+  #245 = String             #676          // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n+  #246 = String             #677          // No referenced Inner Class found, but InnerClasses attribute \\'\n+  #247 = String             #678          // \\' found. Strongly suggest removal of that attribute.\n+  #248 = String             #679          // \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n+  #249 = Methodref          #100.#507     // org/apache/bcel/classfile/LineNumberTable.getNameIndex:()I\n   #250 = String             #363          // LineNumberTable\n-  #251 = String             #699          // The LineNumberTable attribute \\'\n-  #252 = String             #700          // \\' is not correctly named \\'LineNumberTable\\' but \\'\n-  #253 = Methodref          #60.#520      // org/apache/bcel/classfile/Method.getNameIndex:()I\n-  #254 = Methodref          #507.#701     // org/apache/bcel/verifier/statics/Pass2Verifier.access$500:(Ljava/lang/String;Z)Z\n-  #255 = String             #702          // Method \\'\n-  #256 = Methodref          #60.#586      // org/apache/bcel/classfile/Method.getSignatureIndex:()I\n-  #257 = Methodref          #553.#703     // org/apache/bcel/generic/Type.getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #258 = Methodref          #553.#704     // org/apache/bcel/generic/Type.getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n-  #259 = String             #705          // \\' used by Method \\'\n-  #260 = Class              #706          // org/apache/bcel/generic/ArrayType\n-  #261 = Methodref          #260.#707     // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n-  #262 = Class              #708          // org/apache/bcel/generic/ObjectType\n-  #263 = String             #709          // \\' has a return type that does not pass verification pass 1: \\'\n-  #264 = String             #710          // \\' has an argument type that does not pass verification pass 1: \\'\n-  #265 = String             #711          // <clinit>\n-  #266 = String             #712          // \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n-  #267 = Methodref          #60.#647      // org/apache/bcel/classfile/Method.isPrivate:()Z\n-  #268 = Methodref          #60.#648      // org/apache/bcel/classfile/Method.isProtected:()Z\n-  #269 = Methodref          #60.#649      // org/apache/bcel/classfile/Method.isPublic:()Z\n-  #270 = Methodref          #60.#713      // org/apache/bcel/classfile/Method.isAbstract:()Z\n-  #271 = Methodref          #60.#652      // org/apache/bcel/classfile/Method.isFinal:()Z\n-  #272 = String             #714          // Abstract method \\'\n-  #273 = String             #715          // \\' must not have the ACC_FINAL modifier set.\n-  #274 = Methodref          #60.#716      // org/apache/bcel/classfile/Method.isNative:()Z\n-  #275 = String             #717          // \\' must not have the ACC_NATIVE modifier set.\n-  #276 = String             #718          // \\' must not have the ACC_PRIVATE modifier set.\n-  #277 = String             #719          // \\' must not have the ACC_STATIC modifier set.\n-  #278 = Methodref          #60.#720      // org/apache/bcel/classfile/Method.isStrictfp:()Z\n-  #279 = String             #721          // \\' must not have the ACC_STRICT modifier set.\n-  #280 = Methodref          #60.#722      // org/apache/bcel/classfile/Method.isSynchronized:()Z\n-  #281 = String             #723          // \\' must not have the ACC_SYNCHRONIZED modifier set.\n+  #251 = String             #680          // The LineNumberTable attribute \\'\n+  #252 = String             #681          // \\' is not correctly named \\'LineNumberTable\\' but \\'\n+  #253 = Methodref          #60.#507      // org/apache/bcel/classfile/Method.getNameIndex:()I\n+  #254 = Methodref          #494.#682     // org/apache/bcel/verifier/statics/Pass2Verifier.access$500:(Ljava/lang/String;Z)Z\n+  #255 = String             #683          // Method \\'\n+  #256 = Methodref          #60.#567      // org/apache/bcel/classfile/Method.getSignatureIndex:()I\n+  #257 = Methodref          #386.#684     // org/apache/bcel/generic/Type.getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #258 = Methodref          #386.#685     // org/apache/bcel/generic/Type.getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n+  #259 = String             #686          // \\' used by Method \\'\n+  #260 = Class              #687          // org/apache/bcel/generic/ArrayType\n+  #261 = Methodref          #260.#688     // org/apache/bcel/generic/ArrayType.getBasicType:()Lorg/apache/bcel/generic/Type;\n+  #262 = Class              #689          // org/apache/bcel/generic/ObjectType\n+  #263 = String             #690          // \\' has a return type that does not pass verification pass 1: \\'\n+  #264 = String             #691          // \\' has an argument type that does not pass verification pass 1: \\'\n+  #265 = String             #692          // <clinit>\n+  #266 = String             #693          // \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n+  #267 = Methodref          #60.#628      // org/apache/bcel/classfile/Method.isPrivate:()Z\n+  #268 = Methodref          #60.#629      // org/apache/bcel/classfile/Method.isProtected:()Z\n+  #269 = Methodref          #60.#630      // org/apache/bcel/classfile/Method.isPublic:()Z\n+  #270 = Methodref          #60.#694      // org/apache/bcel/classfile/Method.isAbstract:()Z\n+  #271 = Methodref          #60.#633      // org/apache/bcel/classfile/Method.isFinal:()Z\n+  #272 = String             #695          // Abstract method \\'\n+  #273 = String             #696          // \\' must not have the ACC_FINAL modifier set.\n+  #274 = Methodref          #60.#697      // org/apache/bcel/classfile/Method.isNative:()Z\n+  #275 = String             #698          // \\' must not have the ACC_NATIVE modifier set.\n+  #276 = String             #699          // \\' must not have the ACC_PRIVATE modifier set.\n+  #277 = String             #700          // \\' must not have the ACC_STATIC modifier set.\n+  #278 = Methodref          #60.#701      // org/apache/bcel/classfile/Method.isStrictfp:()Z\n+  #279 = String             #702          // \\' must not have the ACC_STRICT modifier set.\n+  #280 = Methodref          #60.#703      // org/apache/bcel/classfile/Method.isSynchronized:()Z\n+  #281 = String             #704          // \\' must not have the ACC_SYNCHRONIZED modifier set.\n   #282 = String             #360          // <init>\n-  #283 = String             #724          // Instance initialization method \\'\n-  #284 = String             #725          // \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n-  #285 = Methodref          #475.#726     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n-  #286 = String             #727          // Interface method \\'\n-  #287 = String             #728          // \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n-  #288 = String             #729          // \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n-  #289 = String             #730          // \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n-  #290 = String             #731          // \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n-  #291 = Methodref          #60.#659      // org/apache/bcel/classfile/Method.getAccessFlags:()I\n-  #292 = String             #732          // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n-  #293 = String             #733          // No two methods (like \\'\n-  #294 = String             #734          // \\') are allowed have same names and desciptors!\n-  #295 = Methodref          #60.#570      // org/apache/bcel/classfile/Method.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #296 = Class              #735          // org/apache/bcel/classfile/Code\n-  #297 = Class              #736          // org/apache/bcel/classfile/ExceptionTable\n-  #298 = String             #737          // \\' as an attribute of Method \\'\n-  #299 = String             #738          // \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n-  #300 = String             #739          // Native or abstract methods like \\'\n-  #301 = String             #740          // \\' must not have a Code attribute like \\'\n-  #302 = String             #741          // Non-native, non-abstract methods like \\'\n-  #303 = String             #742          // \\' must have exactly one Code attribute (found:\n-  #304 = String             #743          // ).\n-  #305 = Methodref          #239.#520     // org/apache/bcel/classfile/SourceFile.getNameIndex:()I\n-  #306 = String             #465          // SourceFile\n-  #307 = String             #744          // The SourceFile attribute \\'\n-  #308 = String             #745          // \\' is not correctly named \\'SourceFile\\' but \\'\n-  #309 = Methodref          #239.#746     // org/apache/bcel/classfile/SourceFile.getSourceFileIndex:()I\n-  #310 = Fieldref           #747.#748     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-  #311 = Methodref          #523.#749     // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #312 = Methodref          #523.#750     // java/lang/String.indexOf:(I)I\n-  #313 = String             #751          // .java\n-  #314 = Methodref          #523.#752     // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-  #315 = String             #753          // SourceFile attribute \\'\n-  #316 = String             #754          // \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n-  #317 = String             #755          // \\') is considered an unqualified (simple) file name only.\n-  #318 = Methodref          #224.#520     // org/apache/bcel/classfile/Synthetic.getNameIndex:()I\n-  #319 = String             #756          // Synthetic\n-  #320 = String             #757          // The Synthetic attribute \\'\n-  #321 = String             #758          // \\' is not correctly named \\'Synthetic\\' but \\'\n-  #322 = Methodref          #759.#520     // org/apache/bcel/classfile/Unknown.getNameIndex:()I\n-  #323 = String             #760          // Unknown attribute \\'\n-  #324 = String             #761          // \\'. This attribute is not known in any context!\n-  #325 = Methodref          #762.#763     // org/apache/bcel/classfile/InnerClass.getInnerClassIndex:()I\n-  #326 = Methodref          #762.#764     // org/apache/bcel/classfile/InnerClass.getOuterClassIndex:()I\n-  #327 = Methodref          #762.#765     // org/apache/bcel/classfile/InnerClass.getInnerNameIndex:()I\n-  #328 = Methodref          #762.#766     // org/apache/bcel/classfile/InnerClass.getInnerAccessFlags:()I\n-  #329 = String             #767          // Unknown access flag for inner class \\'\n-  #330 = String             #768          // \\' set (InnerClasses attribute \\'\n-  #331 = String             #769          // \\').\n-  #332 = Class              #770          // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n-  #333 = Class              #772          // org/apache/bcel/classfile/EmptyVisitor\n+  #283 = String             #705          // Instance initialization method \\'\n+  #284 = String             #706          // \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n+  #285 = Methodref          #380.#707     // org/apache/bcel/classfile/JavaClass.getMajor:()I\n+  #286 = String             #708          // Interface method \\'\n+  #287 = String             #709          // \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n+  #288 = String             #710          // \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n+  #289 = String             #711          // \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n+  #290 = String             #712          // \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n+  #291 = Methodref          #60.#640      // org/apache/bcel/classfile/Method.getAccessFlags:()I\n+  #292 = String             #713          // \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n+  #293 = String             #714          // No two methods (like \\'\n+  #294 = String             #715          // \\') are allowed have same names and desciptors!\n+  #295 = Methodref          #60.#552      // org/apache/bcel/classfile/Method.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #296 = Class              #716          // org/apache/bcel/classfile/Code\n+  #297 = Class              #717          // org/apache/bcel/classfile/ExceptionTable\n+  #298 = String             #718          // \\' as an attribute of Method \\'\n+  #299 = String             #719          // \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n+  #300 = String             #720          // Native or abstract methods like \\'\n+  #301 = String             #721          // \\' must not have a Code attribute like \\'\n+  #302 = String             #722          // Non-native, non-abstract methods like \\'\n+  #303 = String             #723          // \\' must have exactly one Code attribute (found:\n+  #304 = String             #724          // ).\n+  #305 = Methodref          #239.#507     // org/apache/bcel/classfile/SourceFile.getNameIndex:()I\n+  #306 = String             #453          // SourceFile\n+  #307 = String             #725          // The SourceFile attribute \\'\n+  #308 = String             #726          // \\' is not correctly named \\'SourceFile\\' but \\'\n+  #309 = Methodref          #239.#727     // org/apache/bcel/classfile/SourceFile.getSourceFileIndex:()I\n+  #310 = Fieldref           #728.#729     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+  #311 = Methodref          #375.#730     // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #312 = Methodref          #375.#731     // java/lang/String.indexOf:(I)I\n+  #313 = String             #732          // .java\n+  #314 = Methodref          #375.#733     // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+  #315 = String             #734          // SourceFile attribute \\'\n+  #316 = String             #735          // \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n+  #317 = String             #736          // \\') is considered an unqualified (simple) file name only.\n+  #318 = Methodref          #224.#507     // org/apache/bcel/classfile/Synthetic.getNameIndex:()I\n+  #319 = String             #737          // Synthetic\n+  #320 = String             #738          // The Synthetic attribute \\'\n+  #321 = String             #739          // \\' is not correctly named \\'Synthetic\\' but \\'\n+  #322 = Methodref          #740.#507     // org/apache/bcel/classfile/Unknown.getNameIndex:()I\n+  #323 = String             #741          // Unknown attribute \\'\n+  #324 = String             #742          // \\'. This attribute is not known in any context!\n+  #325 = Methodref          #743.#744     // org/apache/bcel/classfile/InnerClass.getInnerClassIndex:()I\n+  #326 = Methodref          #743.#745     // org/apache/bcel/classfile/InnerClass.getOuterClassIndex:()I\n+  #327 = Methodref          #743.#746     // org/apache/bcel/classfile/InnerClass.getInnerNameIndex:()I\n+  #328 = Methodref          #743.#747     // org/apache/bcel/classfile/InnerClass.getInnerAccessFlags:()I\n+  #329 = String             #748          // Unknown access flag for inner class \\'\n+  #330 = String             #749          // \\' set (InnerClasses attribute \\'\n+  #331 = String             #750          // \\').\n+  #332 = Class              #751          // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n+  #333 = Class              #753          // org/apache/bcel/classfile/EmptyVisitor\n   #334 = Utf8               CONST_Class\n   #335 = Utf8               Ljava/lang/Class;\n   #336 = Utf8               Signature\n   #337 = Utf8               Ljava/lang/Class<*>;\n   #338 = Utf8               CONST_String\n   #339 = Utf8               CONST_Integer\n   #340 = Utf8               CONST_Float\n@@ -371,592 +371,573 @@\n   #361 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n   #362 = Utf8               Code\n   #363 = Utf8               LineNumberTable\n   #364 = Utf8               MethodParameters\n   #365 = Utf8               checkIndex\n   #366 = Utf8               (Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n   #367 = Utf8               StackMapTable\n-  #368 = Class              #773          // org/apache/bcel/classfile/Constant\n+  #368 = Class              #754          // org/apache/bcel/classfile/Constant\n   #369 = Utf8               referrer\n   #370 = Utf8               index\n   #371 = Utf8               shouldbe\n   #372 = Utf8               (Lorg/apache/bcel/classfile/Node;ILjava/lang/Class<*>;)V\n   #373 = Utf8               visitCode\n   #374 = Utf8               (Lorg/apache/bcel/classfile/Code;)V\n-  #375 = Class              #774          // java/lang/String\n-  #376 = Class              #528          // org/apache/bcel/classfile/Method\n-  #377 = Class              #770          // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n-  #378 = Class              #735          // org/apache/bcel/classfile/Code\n-  #379 = Class              #775          // \"[Lorg/apache/bcel/classfile/CodeException;\"\n-  #380 = Class              #776          // org/apache/bcel/classfile/CodeException\n-  #381 = Class              #481          // org/apache/bcel/classfile/ConstantClass\n-  #382 = Class              #777          // org/apache/bcel/verifier/Verifier\n-  #383 = Class              #778          // org/apache/bcel/verifier/VerificationResult\n-  #384 = Class              #779          // org/apache/bcel/classfile/JavaClass\n-  #385 = Class              #780          // \"[Lorg/apache/bcel/classfile/Method;\"\n-  #386 = Class              #781          // \"[Lorg/apache/bcel/classfile/Attribute;\"\n-  #387 = Class              #782          // org/apache/bcel/classfile/Attribute\n-  #388 = Class              #572          // org/apache/bcel/classfile/LocalVariableTable\n-  #389 = Class              #783          // \"[Lorg/apache/bcel/classfile/LocalVariable;\"\n-  #390 = Class              #784          // org/apache/bcel/classfile/LocalVariable\n-  #391 = Class              #588          // org/apache/bcel/classfile/ClassFormatException\n-  #392 = Class              #785          // org/apache/bcel/generic/Type\n-  #393 = Class              #601          // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-  #394 = Class              #610          // java/lang/ClassNotFoundException\n-  #395 = Utf8               obj\n-  #396 = Utf8               visitCodeException\n-  #397 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n-  #398 = Utf8               visitConstantClass\n-  #399 = Utf8               (Lorg/apache/bcel/classfile/ConstantClass;)V\n-  #400 = Utf8               visitConstantDouble\n-  #401 = Utf8               (Lorg/apache/bcel/classfile/ConstantDouble;)V\n-  #402 = Utf8               visitConstantFieldref\n-  #403 = Utf8               (Lorg/apache/bcel/classfile/ConstantFieldref;)V\n-  #404 = Utf8               visitConstantFloat\n-  #405 = Utf8               (Lorg/apache/bcel/classfile/ConstantFloat;)V\n-  #406 = Utf8               visitConstantInteger\n-  #407 = Utf8               (Lorg/apache/bcel/classfile/ConstantInteger;)V\n-  #408 = Utf8               visitConstantInterfaceMethodref\n-  #409 = Utf8               (Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;)V\n-  #410 = Utf8               visitConstantLong\n-  #411 = Utf8               (Lorg/apache/bcel/classfile/ConstantLong;)V\n-  #412 = Utf8               visitConstantMethodref\n-  #413 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodref;)V\n-  #414 = Utf8               visitConstantNameAndType\n-  #415 = Utf8               (Lorg/apache/bcel/classfile/ConstantNameAndType;)V\n-  #416 = Utf8               visitConstantPool\n-  #417 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #418 = Utf8               visitConstantString\n-  #419 = Utf8               (Lorg/apache/bcel/classfile/ConstantString;)V\n-  #420 = Utf8               visitConstantUtf8\n-  #421 = Utf8               (Lorg/apache/bcel/classfile/ConstantUtf8;)V\n-  #422 = Utf8               visitConstantValue\n-  #423 = Utf8               (Lorg/apache/bcel/classfile/ConstantValue;)V\n-  #424 = Class              #670          // org/apache/bcel/classfile/ConstantValue\n-  #425 = Class              #786          // java/lang/Object\n-  #426 = Class              #624          // org/apache/bcel/classfile/Field\n-  #427 = Utf8               visitDeprecated\n-  #428 = Utf8               (Lorg/apache/bcel/classfile/Deprecated;)V\n-  #429 = Utf8               visitExceptionTable\n-  #430 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)V\n-  #431 = Class              #736          // org/apache/bcel/classfile/ExceptionTable\n-  #432 = Class              #787          // \"[I\"\n-  #433 = Utf8               visitField\n-  #434 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n-  #435 = Utf8               visitInnerClass\n-  #436 = Utf8               (Lorg/apache/bcel/classfile/InnerClass;)V\n-  #437 = Utf8               visitInnerClasses\n-  #438 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;)V\n-  #439 = Utf8               innerClasses\n-  #440 = Utf8               visitJavaClass\n-  #441 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n-  #442 = Utf8               visitLineNumber\n-  #443 = Utf8               (Lorg/apache/bcel/classfile/LineNumber;)V\n-  #444 = Utf8               visitLineNumberTable\n-  #445 = Utf8               (Lorg/apache/bcel/classfile/LineNumberTable;)V\n-  #446 = Utf8               visitLocalVariable\n-  #447 = Utf8               (Lorg/apache/bcel/classfile/LocalVariable;)V\n-  #448 = Utf8               visitLocalVariableTable\n-  #449 = Utf8               (Lorg/apache/bcel/classfile/LocalVariableTable;)V\n-  #450 = Utf8               visitMethod\n-  #451 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n-  #452 = Class              #788          // \"[Lorg/apache/bcel/generic/Type;\"\n-  #453 = Utf8               visitSourceFile\n-  #454 = Utf8               (Lorg/apache/bcel/classfile/SourceFile;)V\n-  #455 = Utf8               visitSynthetic\n-  #456 = Utf8               (Lorg/apache/bcel/classfile/Synthetic;)V\n-  #457 = Utf8               visitUnknown\n-  #458 = Utf8               (Lorg/apache/bcel/classfile/Unknown;)V\n-  #459 = Utf8               lambda$visitInnerClasses$0\n-  #460 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-  #461 = Utf8               ic\n-  #462 = Class              #789          // org/apache/bcel/verifier/statics/Pass2Verifier$1\n-  #463 = Utf8               InnerClasses\n-  #464 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n-  #465 = Utf8               SourceFile\n-  #466 = Utf8               Pass2Verifier.java\n-  #467 = NameAndType        #360:#361     // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n-  #468 = NameAndType        #358:#359     // this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n-  #469 = NameAndType        #360:#790     // \"<init>\":()V\n-  #470 = Utf8               java/util/HashSet\n-  #471 = NameAndType        #353:#354     // fieldNames:Ljava/util/Set;\n-  #472 = NameAndType        #356:#354     // fieldNamesAndDesc:Ljava/util/Set;\n-  #473 = NameAndType        #357:#354     // methodNamesAndDesc:Ljava/util/Set;\n-  #474 = NameAndType        #345:#346     // jc:Lorg/apache/bcel/classfile/JavaClass;\n-  #475 = Class              #779          // org/apache/bcel/classfile/JavaClass\n-  #476 = NameAndType        #791:#792     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #477 = NameAndType        #347:#348     // cp:Lorg/apache/bcel/classfile/ConstantPool;\n-  #478 = Class              #793          // org/apache/bcel/classfile/ConstantPool\n-  #479 = NameAndType        #794:#795     // getLength:()I\n-  #480 = NameAndType        #349:#350     // cplen:I\n-  #481 = Utf8               org/apache/bcel/classfile/ConstantClass\n-  #482 = NameAndType        #334:#335     // CONST_Class:Ljava/lang/Class;\n-  #483 = Utf8               org/apache/bcel/classfile/ConstantString\n-  #484 = NameAndType        #338:#335     // CONST_String:Ljava/lang/Class;\n-  #485 = Utf8               org/apache/bcel/classfile/ConstantInteger\n-  #486 = NameAndType        #339:#335     // CONST_Integer:Ljava/lang/Class;\n-  #487 = Utf8               org/apache/bcel/classfile/ConstantFloat\n-  #488 = NameAndType        #340:#335     // CONST_Float:Ljava/lang/Class;\n-  #489 = Utf8               org/apache/bcel/classfile/ConstantLong\n-  #490 = NameAndType        #341:#335     // CONST_Long:Ljava/lang/Class;\n-  #491 = Utf8               org/apache/bcel/classfile/ConstantDouble\n-  #492 = NameAndType        #342:#335     // CONST_Double:Ljava/lang/Class;\n-  #493 = Utf8               org/apache/bcel/classfile/ConstantNameAndType\n-  #494 = NameAndType        #343:#335     // CONST_NameAndType:Ljava/lang/Class;\n-  #495 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #496 = NameAndType        #344:#335     // CONST_Utf8:Ljava/lang/Class;\n-  #497 = Utf8               org/apache/bcel/classfile/DescendingVisitor\n-  #498 = NameAndType        #360:#796     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n-  #499 = NameAndType        #351:#352     // carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n-  #500 = NameAndType        #797:#790     // visit:()V\n-  #501 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n-  #502 = Utf8               java/lang/StringBuilder\n-  #503 = Utf8               Invalid index \\'\n-  #504 = NameAndType        #798:#799     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #505 = NameAndType        #798:#800     // append:(I)Ljava/lang/StringBuilder;\n-  #506 = Utf8               \\' used by \\'\n-  #507 = Class              #801          // org/apache/bcel/verifier/statics/Pass2Verifier\n-  #508 = NameAndType        #802:#803     // access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-  #509 = Utf8               \\'.\n-  #510 = NameAndType        #804:#805     // toString:()Ljava/lang/String;\n-  #511 = NameAndType        #360:#806     // \"<init>\":(Ljava/lang/String;)V\n-  #512 = NameAndType        #807:#808     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #513 = Class              #809          // java/lang/Class\n-  #514 = NameAndType        #810:#811     // isInstance:(Ljava/lang/Object;)Z\n-  #515 = Utf8               Illegal constant \\'\n-  #516 = Utf8               \\' at index \\'\n-  #517 = Utf8               \\'. \\'\n-  #518 = Utf8               \\' expects a \\'\n-  #519 = NameAndType        #798:#812     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #520 = NameAndType        #813:#795     // getNameIndex:()I\n-  #521 = NameAndType        #365:#366     // checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n-  #522 = NameAndType        #814:#805     // getBytes:()Ljava/lang/String;\n-  #523 = Class              #774          // java/lang/String\n-  #524 = NameAndType        #815:#811     // equals:(Ljava/lang/Object;)Z\n-  #525 = Utf8               The Code attribute \\'\n-  #526 = Utf8               \\' is not correctly named \\'Code\\' but \\'\n-  #527 = NameAndType        #816:#817     // predecessor:()Ljava/lang/Object;\n-  #528 = Utf8               org/apache/bcel/classfile/Method\n-  #529 = Utf8               Code attribute \\'\n-  #530 = Utf8               \\' is not declared in a method_info structure but in \\'\n-  #531 = Utf8               \\'. Ignored.\n-  #532 = NameAndType        #818:#806     // addMessage:(Ljava/lang/String;)V\n-  #533 = NameAndType        #819:#820     // getCode:()[B\n-  #534 = Utf8               Code array of Code attribute \\'\n-  #535 = Utf8               \\' (method \\'\n-  #536 = Utf8               \\') must not be empty.\n-  #537 = NameAndType        #821:#822     // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-  #538 = Class              #776          // org/apache/bcel/classfile/CodeException\n-  #539 = NameAndType        #823:#795     // getCatchType:()I\n-  #540 = Class              #824          // org/apache/bcel/classfile/Utility\n-  #541 = NameAndType        #825:#826     // pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n-  #542 = Class              #827          // org/apache/bcel/verifier/VerifierFactory\n-  #543 = NameAndType        #828:#829     // getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n-  #544 = Class              #777          // org/apache/bcel/verifier/Verifier\n-  #545 = NameAndType        #830:#831     // doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n-  #546 = Class              #778          // org/apache/bcel/verifier/VerificationResult\n-  #547 = NameAndType        #832:#833     // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-  #548 = Utf8               \\') has an exception_table entry \\'\n-  #549 = Utf8               \\' that references \\'\n-  #550 = Utf8               \\' as an Exception but it does not pass verification pass 1:\n-  #551 = Class              #834          // org/apache/bcel/Repository\n-  #552 = NameAndType        #835:#836     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #553 = Class              #785          // org/apache/bcel/generic/Type\n-  #554 = NameAndType        #837:#838     // THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n-  #555 = NameAndType        #839:#805     // getClassName:()Ljava/lang/String;\n-  #556 = NameAndType        #840:#838     // OBJECT:Lorg/apache/bcel/generic/ObjectType;\n-  #557 = NameAndType        #841:#805     // getSuperclassName:()Ljava/lang/String;\n-  #558 = Utf8               \\' as an Exception but \\'\n-  #559 = Utf8               \\' in the ancestor hierachy does not pass verification pass 1:\n-  #560 = Utf8               \\' as an Exception but it is not a subclass of \\'\n-  #561 = NameAndType        #842:#843     // access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n-  #562 = NameAndType        #844:#845     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-  #563 = NameAndType        #846:#805     // getName:()Ljava/lang/String;\n-  #564 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #565 = Utf8               Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n-  #566 = NameAndType        #847:#848     // access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n-  #567 = Utf8               org/apache/bcel/verifier/statics/LocalVariablesInfo\n-  #568 = NameAndType        #849:#795     // getMaxLocals:()I\n-  #569 = NameAndType        #360:#850     // \"<init>\":(I)V\n-  #570 = NameAndType        #851:#852     // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #571 = Utf8               org/apache/bcel/classfile/LineNumberTable\n-  #572 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n-  #573 = Utf8               Attribute \\'\n-  #574 = Utf8               \\' as an attribute of Code attribute \\'\n-  #575 = Utf8               \\') is unknown and will therefore be ignored.\n-  #576 = Utf8               \\') will effectively be ignored and is only useful for debuggers and such.\n-  #577 = Utf8               LocalVariableTable\n-  #578 = Utf8               The LocalVariableTable attribute \\'\n-  #579 = Utf8               \\' is not correctly named \\'LocalVariableTable\\' but \\'\n-  #580 = NameAndType        #853:#854     // getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n-  #581 = Class              #784          // org/apache/bcel/classfile/LocalVariable\n-  #582 = NameAndType        #855:#856     // access$300:(Ljava/lang/String;)Z\n-  #583 = Utf8               LocalVariableTable \\'\n-  #584 = Utf8               \\' references a local variable by the name \\'\n-  #585 = Utf8               \\' which is not a legal Java simple name.\n-  #586 = NameAndType        #857:#795     // getSignatureIndex:()I\n-  #587 = NameAndType        #858:#859     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #588 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #589 = Utf8               Illegal descriptor (==signature) \\'\n-  #590 = Utf8               \\' used by LocalVariable \\'\n-  #591 = Utf8               \\' referenced by \\'\n-  #592 = NameAndType        #360:#860     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #593 = NameAndType        #861:#795     // getIndex:()I\n-  #594 = NameAndType        #862:#863     // LONG:Lorg/apache/bcel/generic/BasicType;\n-  #595 = NameAndType        #864:#863     // DOUBLE:Lorg/apache/bcel/generic/BasicType;\n-  #596 = Utf8               LocalVariableTable attribute \\'\n-  #597 = Utf8               \\' references a LocalVariable \\'\n-  #598 = Utf8               \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n-  #599 = NameAndType        #865:#795     // getStartPC:()I\n-  #600 = NameAndType        #866:#867     // add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-  #601 = Utf8               org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-  #602 = Utf8               Conflicting information in LocalVariableTable \\'\n-  #603 = Utf8               \\' found in Code attribute \\'\n-  #604 = Utf8               \\').\n-  #605 = NameAndType        #868:#805     // getMessage:()Ljava/lang/String;\n-  #606 = NameAndType        #869:#870     // isStatic:()Z\n-  #607 = Utf8               Number of LocalVariableTable attributes of Code attribute \\'\n-  #608 = Utf8               \\') exceeds number of local variable slots \\'\n-  #609 = Utf8               \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n-  #610 = Utf8               java/lang/ClassNotFoundException\n-  #611 = Utf8               Missing class:\n-  #612 = NameAndType        #871:#872     // getTag:()B\n-  #613 = Utf8               org/apache/bcel/Const\n-  #614 = Utf8               Wrong constant tag in \\'\n-  #615 = Class              #873          // org/apache/bcel/classfile/ConstantFieldref\n-  #616 = NameAndType        #874:#795     // getClassIndex:()I\n-  #617 = NameAndType        #875:#795     // getNameAndTypeIndex:()I\n-  #618 = Class              #876          // org/apache/bcel/classfile/ConstantInterfaceMethodref\n-  #619 = Class              #877          // org/apache/bcel/classfile/ConstantMethodref\n-  #620 = NameAndType        #878:#795     // getStringIndex:()I\n-  #621 = Utf8               ConstantValue\n-  #622 = Utf8               The ConstantValue attribute \\'\n-  #623 = Utf8               \\' is not correctly named \\'ConstantValue\\' but \\'\n-  #624 = Utf8               org/apache/bcel/classfile/Field\n-  #625 = NameAndType        #879:#795     // getConstantValueIndex:()I\n-  #626 = NameAndType        #880:#863     // FLOAT:Lorg/apache/bcel/generic/BasicType;\n-  #627 = NameAndType        #881:#863     // INT:Lorg/apache/bcel/generic/BasicType;\n-  #628 = NameAndType        #882:#863     // SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #629 = NameAndType        #883:#863     // CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #630 = NameAndType        #884:#863     // BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #631 = NameAndType        #885:#863     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-  #632 = NameAndType        #886:#838     // STRING:Lorg/apache/bcel/generic/ObjectType;\n-  #633 = Utf8               Illegal type of ConstantValue \\'\n-  #634 = Utf8               \\' embedding Constant \\'\n-  #635 = Utf8               \\'. It is referenced by field \\'\n-  #636 = Utf8               \\' expecting a different type: \\'\n-  #637 = Utf8               Deprecated\n-  #638 = Utf8               The Deprecated attribute \\'\n-  #639 = Utf8               \\' is not correctly named \\'Deprecated\\' but \\'\n-  #640 = Utf8               Exceptions\n-  #641 = Utf8               The Exceptions attribute \\'\n-  #642 = Utf8               \\' is not correctly named \\'Exceptions\\' but \\'\n-  #643 = NameAndType        #887:#888     // getExceptionIndexTable:()[I\n-  #644 = Utf8               Exceptions attribute \\'\n-  #645 = Utf8               \\' references \\'\n-  #646 = NameAndType        #889:#870     // isClass:()Z\n-  #647 = NameAndType        #890:#870     // isPrivate:()Z\n-  #648 = NameAndType        #891:#870     // isProtected:()Z\n-  #649 = NameAndType        #892:#870     // isPublic:()Z\n-  #650 = Utf8               Field \\'\n-  #651 = Utf8               \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n-  #652 = NameAndType        #893:#870     // isFinal:()Z\n-  #653 = NameAndType        #894:#870     // isVolatile:()Z\n-  #654 = Utf8               \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n-  #655 = Utf8               Interface field \\'\n-  #656 = Utf8               \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n-  #657 = Utf8               \\' must have the ACC_STATIC modifier set but hasn\\'t!\n-  #658 = Utf8               \\' must have the ACC_FINAL modifier set but hasn\\'t!\n-  #659 = NameAndType        #895:#795     // getAccessFlags:()I\n-  #660 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n-  #661 = NameAndType        #896:#856     // access$400:(Ljava/lang/String;)Z\n-  #662 = Utf8               \\' has illegal name \\'\n-  #663 = Class              #897          // java/util/Set\n-  #664 = NameAndType        #898:#811     // contains:(Ljava/lang/Object;)Z\n-  #665 = Utf8               No two fields (like \\'\n-  #666 = Utf8               \\') are allowed have same names and descriptors!\n-  #667 = Utf8               More than one field of name \\'\n-  #668 = Utf8               \\' detected (but with different type descriptors). This is very unusual.\n-  #669 = NameAndType        #866:#811     // add:(Ljava/lang/Object;)Z\n-  #670 = Utf8               org/apache/bcel/classfile/ConstantValue\n-  #671 = Utf8               org/apache/bcel/classfile/Synthetic\n-  #672 = Utf8               org/apache/bcel/classfile/Deprecated\n-  #673 = Utf8               \\' as an attribute of Field \\'\n-  #674 = Utf8               \\' is unknown and will therefore be ignored.\n-  #675 = Utf8               \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n-  #676 = Utf8               The InnerClasses attribute \\'\n-  #677 = Utf8               \\' is not correctly named \\'InnerClasses\\' but \\'\n-  #678 = Utf8               BootstrapMethods\n-  #679 = MethodHandle       6:#899        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #680 = MethodType         #900          //  (Ljava/lang/Object;)V\n-  #681 = MethodHandle       7:#901        // REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-  #682 = MethodType         #436          //  (Lorg/apache/bcel/classfile/InnerClass;)V\n-  #683 = NameAndType        #902:#903     // accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n-  #684 = NameAndType        #904:#905     // forEach:(Ljava/util/function/Consumer;)V\n-  #685 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n-  #686 = Utf8               InnerClassDetector\n-  #687 = NameAndType        #360:#441     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n-  #688 = NameAndType        #906:#870     // innerClassReferenced:()Z\n-  #689 = Utf8               org/apache/bcel/classfile/SourceFile\n-  #690 = Utf8               org/apache/bcel/classfile/InnerClasses\n-  #691 = Utf8               \\' as an attribute of the ClassFile structure \\'\n-  #692 = Utf8               A ClassFile structure (like \\'\n-  #693 = Utf8               \\') may have no more than one SourceFile attribute.\n-  #694 = Utf8               A Classfile structure (like \\'\n-  #695 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n-  #696 = Utf8               No referenced Inner Class found, but InnerClasses attribute \\'\n-  #697 = Utf8               \\' found. Strongly suggest removal of that attribute.\n-  #698 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n-  #699 = Utf8               The LineNumberTable attribute \\'\n-  #700 = Utf8               \\' is not correctly named \\'LineNumberTable\\' but \\'\n-  #701 = NameAndType        #907:#908     // access$500:(Ljava/lang/String;Z)Z\n-  #702 = Utf8               Method \\'\n-  #703 = NameAndType        #909:#859     // getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #704 = NameAndType        #910:#911     // getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n-  #705 = Utf8               \\' used by Method \\'\n-  #706 = Utf8               org/apache/bcel/generic/ArrayType\n-  #707 = NameAndType        #912:#913     // getBasicType:()Lorg/apache/bcel/generic/Type;\n-  #708 = Utf8               org/apache/bcel/generic/ObjectType\n-  #709 = Utf8               \\' has a return type that does not pass verification pass 1: \\'\n-  #710 = Utf8               \\' has an argument type that does not pass verification pass 1: \\'\n-  #711 = Utf8               <clinit>\n-  #712 = Utf8               \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n-  #713 = NameAndType        #914:#870     // isAbstract:()Z\n-  #714 = Utf8               Abstract method \\'\n-  #715 = Utf8               \\' must not have the ACC_FINAL modifier set.\n-  #716 = NameAndType        #915:#870     // isNative:()Z\n-  #717 = Utf8               \\' must not have the ACC_NATIVE modifier set.\n-  #718 = Utf8               \\' must not have the ACC_PRIVATE modifier set.\n-  #719 = Utf8               \\' must not have the ACC_STATIC modifier set.\n-  #720 = NameAndType        #916:#870     // isStrictfp:()Z\n-  #721 = Utf8               \\' must not have the ACC_STRICT modifier set.\n-  #722 = NameAndType        #917:#870     // isSynchronized:()Z\n-  #723 = Utf8               \\' must not have the ACC_SYNCHRONIZED modifier set.\n-  #724 = Utf8               Instance initialization method \\'\n-  #725 = Utf8               \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n-  #726 = NameAndType        #918:#795     // getMajor:()I\n-  #727 = Utf8               Interface method \\'\n-  #728 = Utf8               \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n-  #729 = Utf8               \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n-  #730 = Utf8               \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n-  #731 = Utf8               \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n-  #732 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n-  #733 = Utf8               No two methods (like \\'\n-  #734 = Utf8               \\') are allowed have same names and desciptors!\n-  #735 = Utf8               org/apache/bcel/classfile/Code\n-  #736 = Utf8               org/apache/bcel/classfile/ExceptionTable\n-  #737 = Utf8               \\' as an attribute of Method \\'\n-  #738 = Utf8               \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n-  #739 = Utf8               Native or abstract methods like \\'\n-  #740 = Utf8               \\' must not have a Code attribute like \\'\n-  #741 = Utf8               Non-native, non-abstract methods like \\'\n-  #742 = Utf8               \\' must have exactly one Code attribute (found:\n-  #743 = Utf8               ).\n-  #744 = Utf8               The SourceFile attribute \\'\n-  #745 = Utf8               \\' is not correctly named \\'SourceFile\\' but \\'\n-  #746 = NameAndType        #919:#795     // getSourceFileIndex:()I\n-  #747 = Class              #920          // java/util/Locale\n-  #748 = NameAndType        #921:#922     // ENGLISH:Ljava/util/Locale;\n-  #749 = NameAndType        #923:#924     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #750 = NameAndType        #925:#926     // indexOf:(I)I\n-  #751 = Utf8               .java\n-  #752 = NameAndType        #927:#928     // lastIndexOf:(Ljava/lang/String;)I\n-  #753 = Utf8               SourceFile attribute \\'\n-  #754 = Utf8               \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n-  #755 = Utf8               \\') is considered an unqualified (simple) file name only.\n-  #756 = Utf8               Synthetic\n-  #757 = Utf8               The Synthetic attribute \\'\n-  #758 = Utf8               \\' is not correctly named \\'Synthetic\\' but \\'\n-  #759 = Class              #929          // org/apache/bcel/classfile/Unknown\n-  #760 = Utf8               Unknown attribute \\'\n-  #761 = Utf8               \\'. This attribute is not known in any context!\n-  #762 = Class              #930          // org/apache/bcel/classfile/InnerClass\n-  #763 = NameAndType        #931:#795     // getInnerClassIndex:()I\n-  #764 = NameAndType        #932:#795     // getOuterClassIndex:()I\n-  #765 = NameAndType        #933:#795     // getInnerNameIndex:()I\n-  #766 = NameAndType        #934:#795     // getInnerAccessFlags:()I\n-  #767 = Utf8               Unknown access flag for inner class \\'\n-  #768 = Utf8               \\' set (InnerClasses attribute \\'\n-  #769 = Utf8               \\').\n-  #770 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n-  #771 = Utf8               CPESSC_Visitor\n-  #772 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n-  #773 = Utf8               org/apache/bcel/classfile/Constant\n-  #774 = Utf8               java/lang/String\n-  #775 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n-  #776 = Utf8               org/apache/bcel/classfile/CodeException\n-  #777 = Utf8               org/apache/bcel/verifier/Verifier\n-  #778 = Utf8               org/apache/bcel/verifier/VerificationResult\n-  #779 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #780 = Utf8               [Lorg/apache/bcel/classfile/Method;\n-  #781 = Utf8               [Lorg/apache/bcel/classfile/Attribute;\n-  #782 = Utf8               org/apache/bcel/classfile/Attribute\n-  #783 = Utf8               [Lorg/apache/bcel/classfile/LocalVariable;\n-  #784 = Utf8               org/apache/bcel/classfile/LocalVariable\n-  #785 = Utf8               org/apache/bcel/generic/Type\n-  #786 = Utf8               java/lang/Object\n-  #787 = Utf8               [I\n-  #788 = Utf8               [Lorg/apache/bcel/generic/Type;\n-  #789 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$1\n-  #790 = Utf8               ()V\n-  #791 = Utf8               getConstantPool\n-  #792 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #793 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #794 = Utf8               getLength\n-  #795 = Utf8               ()I\n-  #796 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n-  #797 = Utf8               visit\n-  #798 = Utf8               append\n-  #799 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #800 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #801 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier\n-  #802 = Utf8               access$000\n-  #803 = Utf8               (Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n-  #804 = Utf8               toString\n-  #805 = Utf8               ()Ljava/lang/String;\n-  #806 = Utf8               (Ljava/lang/String;)V\n-  #807 = Utf8               getConstant\n-  #808 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #809 = Utf8               java/lang/Class\n-  #810 = Utf8               isInstance\n-  #811 = Utf8               (Ljava/lang/Object;)Z\n-  #812 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #813 = Utf8               getNameIndex\n-  #814 = Utf8               getBytes\n-  #815 = Utf8               equals\n-  #816 = Utf8               predecessor\n-  #817 = Utf8               ()Ljava/lang/Object;\n-  #818 = Utf8               addMessage\n-  #819 = Utf8               getCode\n-  #820 = Utf8               ()[B\n-  #821 = Utf8               getExceptionTable\n-  #822 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n-  #823 = Utf8               getCatchType\n-  #824 = Utf8               org/apache/bcel/classfile/Utility\n-  #825 = Utf8               pathToPackage\n-  #826 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #827 = Utf8               org/apache/bcel/verifier/VerifierFactory\n-  #828 = Utf8               getVerifier\n-  #829 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n-  #830 = Utf8               doPass1\n-  #831 = Utf8               ()Lorg/apache/bcel/verifier/VerificationResult;\n-  #832 = Utf8               VR_OK\n-  #833 = Utf8               Lorg/apache/bcel/verifier/VerificationResult;\n-  #834 = Utf8               org/apache/bcel/Repository\n-  #835 = Utf8               lookupClass\n-  #836 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #837 = Utf8               THROWABLE\n-  #838 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n-  #839 = Utf8               getClassName\n-  #840 = Utf8               OBJECT\n-  #841 = Utf8               getSuperclassName\n-  #842 = Utf8               access$100\n-  #843 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n-  #844 = Utf8               getMethods\n-  #845 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-  #846 = Utf8               getName\n-  #847 = Utf8               access$200\n-  #848 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n-  #849 = Utf8               getMaxLocals\n-  #850 = Utf8               (I)V\n-  #851 = Utf8               getAttributes\n-  #852 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n-  #853 = Utf8               getLocalVariableTable\n-  #854 = Utf8               ()[Lorg/apache/bcel/classfile/LocalVariable;\n-  #855 = Utf8               access$300\n-  #856 = Utf8               (Ljava/lang/String;)Z\n-  #857 = Utf8               getSignatureIndex\n-  #858 = Utf8               getType\n-  #859 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n-  #860 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #861 = Utf8               getIndex\n-  #862 = Utf8               LONG\n-  #863 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-  #864 = Utf8               DOUBLE\n-  #865 = Utf8               getStartPC\n-  #866 = Utf8               add\n-  #867 = Utf8               (ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-  #868 = Utf8               getMessage\n-  #869 = Utf8               isStatic\n-  #870 = Utf8               ()Z\n-  #871 = Utf8               getTag\n-  #872 = Utf8               ()B\n-  #873 = Utf8               org/apache/bcel/classfile/ConstantFieldref\n-  #874 = Utf8               getClassIndex\n-  #875 = Utf8               getNameAndTypeIndex\n-  #876 = Utf8               org/apache/bcel/classfile/ConstantInterfaceMethodref\n-  #877 = Utf8               org/apache/bcel/classfile/ConstantMethodref\n-  #878 = Utf8               getStringIndex\n-  #879 = Utf8               getConstantValueIndex\n-  #880 = Utf8               FLOAT\n-  #881 = Utf8               INT\n-  #882 = Utf8               SHORT\n-  #883 = Utf8               CHAR\n-  #884 = Utf8               BYTE\n-  #885 = Utf8               BOOLEAN\n-  #886 = Utf8               STRING\n-  #887 = Utf8               getExceptionIndexTable\n-  #888 = Utf8               ()[I\n-  #889 = Utf8               isClass\n-  #890 = Utf8               isPrivate\n-  #891 = Utf8               isProtected\n-  #892 = Utf8               isPublic\n-  #893 = Utf8               isFinal\n-  #894 = Utf8               isVolatile\n-  #895 = Utf8               getAccessFlags\n-  #896 = Utf8               access$400\n-  #897 = Utf8               java/util/Set\n-  #898 = Utf8               contains\n-  #899 = Methodref          #935.#936     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #900 = Utf8               (Ljava/lang/Object;)V\n-  #901 = Methodref          #332.#937     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-  #902 = Utf8               accept\n-  #903 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n-  #904 = Utf8               forEach\n-  #905 = Utf8               (Ljava/util/function/Consumer;)V\n-  #906 = Utf8               innerClassReferenced\n-  #907 = Utf8               access$500\n-  #908 = Utf8               (Ljava/lang/String;Z)Z\n-  #909 = Utf8               getReturnType\n-  #910 = Utf8               getArgumentTypes\n-  #911 = Utf8               (Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n-  #912 = Utf8               getBasicType\n-  #913 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #914 = Utf8               isAbstract\n-  #915 = Utf8               isNative\n-  #916 = Utf8               isStrictfp\n-  #917 = Utf8               isSynchronized\n-  #918 = Utf8               getMajor\n-  #919 = Utf8               getSourceFileIndex\n-  #920 = Utf8               java/util/Locale\n-  #921 = Utf8               ENGLISH\n-  #922 = Utf8               Ljava/util/Locale;\n-  #923 = Utf8               toLowerCase\n-  #924 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #925 = Utf8               indexOf\n-  #926 = Utf8               (I)I\n-  #927 = Utf8               lastIndexOf\n-  #928 = Utf8               (Ljava/lang/String;)I\n-  #929 = Utf8               org/apache/bcel/classfile/Unknown\n-  #930 = Utf8               org/apache/bcel/classfile/InnerClass\n-  #931 = Utf8               getInnerClassIndex\n-  #932 = Utf8               getOuterClassIndex\n-  #933 = Utf8               getInnerNameIndex\n-  #934 = Utf8               getInnerAccessFlags\n-  #935 = Class              #938          // java/lang/invoke/LambdaMetafactory\n-  #936 = NameAndType        #939:#942     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #937 = NameAndType        #459:#460     // lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-  #938 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #939 = Utf8               metafactory\n-  #940 = Class              #944          // java/lang/invoke/MethodHandles$Lookup\n-  #941 = Utf8               Lookup\n-  #942 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #943 = Class              #945          // java/lang/invoke/MethodHandles\n-  #944 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #945 = Utf8               java/lang/invoke/MethodHandles\n+  #375 = Class              #755          // java/lang/String\n+  #376 = Class              #756          // \"[Lorg/apache/bcel/classfile/CodeException;\"\n+  #377 = Class              #757          // org/apache/bcel/classfile/CodeException\n+  #378 = Class              #758          // org/apache/bcel/verifier/Verifier\n+  #379 = Class              #759          // org/apache/bcel/verifier/VerificationResult\n+  #380 = Class              #760          // org/apache/bcel/classfile/JavaClass\n+  #381 = Class              #761          // \"[Lorg/apache/bcel/classfile/Method;\"\n+  #382 = Class              #762          // \"[Lorg/apache/bcel/classfile/Attribute;\"\n+  #383 = Class              #763          // org/apache/bcel/classfile/Attribute\n+  #384 = Class              #764          // \"[Lorg/apache/bcel/classfile/LocalVariable;\"\n+  #385 = Class              #765          // org/apache/bcel/classfile/LocalVariable\n+  #386 = Class              #766          // org/apache/bcel/generic/Type\n+  #387 = Utf8               obj\n+  #388 = Utf8               visitCodeException\n+  #389 = Utf8               (Lorg/apache/bcel/classfile/CodeException;)V\n+  #390 = Utf8               visitConstantClass\n+  #391 = Utf8               (Lorg/apache/bcel/classfile/ConstantClass;)V\n+  #392 = Utf8               visitConstantDouble\n+  #393 = Utf8               (Lorg/apache/bcel/classfile/ConstantDouble;)V\n+  #394 = Utf8               visitConstantFieldref\n+  #395 = Utf8               (Lorg/apache/bcel/classfile/ConstantFieldref;)V\n+  #396 = Utf8               visitConstantFloat\n+  #397 = Utf8               (Lorg/apache/bcel/classfile/ConstantFloat;)V\n+  #398 = Utf8               visitConstantInteger\n+  #399 = Utf8               (Lorg/apache/bcel/classfile/ConstantInteger;)V\n+  #400 = Utf8               visitConstantInterfaceMethodref\n+  #401 = Utf8               (Lorg/apache/bcel/classfile/ConstantInterfaceMethodref;)V\n+  #402 = Utf8               visitConstantLong\n+  #403 = Utf8               (Lorg/apache/bcel/classfile/ConstantLong;)V\n+  #404 = Utf8               visitConstantMethodref\n+  #405 = Utf8               (Lorg/apache/bcel/classfile/ConstantMethodref;)V\n+  #406 = Utf8               visitConstantNameAndType\n+  #407 = Utf8               (Lorg/apache/bcel/classfile/ConstantNameAndType;)V\n+  #408 = Utf8               visitConstantPool\n+  #409 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #410 = Utf8               visitConstantString\n+  #411 = Utf8               (Lorg/apache/bcel/classfile/ConstantString;)V\n+  #412 = Utf8               visitConstantUtf8\n+  #413 = Utf8               (Lorg/apache/bcel/classfile/ConstantUtf8;)V\n+  #414 = Utf8               visitConstantValue\n+  #415 = Utf8               (Lorg/apache/bcel/classfile/ConstantValue;)V\n+  #416 = Class              #767          // java/lang/Object\n+  #417 = Utf8               visitDeprecated\n+  #418 = Utf8               (Lorg/apache/bcel/classfile/Deprecated;)V\n+  #419 = Utf8               visitExceptionTable\n+  #420 = Utf8               (Lorg/apache/bcel/classfile/ExceptionTable;)V\n+  #421 = Class              #768          // \"[I\"\n+  #422 = Utf8               visitField\n+  #423 = Utf8               (Lorg/apache/bcel/classfile/Field;)V\n+  #424 = Utf8               visitInnerClass\n+  #425 = Utf8               (Lorg/apache/bcel/classfile/InnerClass;)V\n+  #426 = Utf8               visitInnerClasses\n+  #427 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;)V\n+  #428 = Utf8               innerClasses\n+  #429 = Utf8               visitJavaClass\n+  #430 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;)V\n+  #431 = Utf8               visitLineNumber\n+  #432 = Utf8               (Lorg/apache/bcel/classfile/LineNumber;)V\n+  #433 = Utf8               visitLineNumberTable\n+  #434 = Utf8               (Lorg/apache/bcel/classfile/LineNumberTable;)V\n+  #435 = Utf8               visitLocalVariable\n+  #436 = Utf8               (Lorg/apache/bcel/classfile/LocalVariable;)V\n+  #437 = Utf8               visitLocalVariableTable\n+  #438 = Utf8               (Lorg/apache/bcel/classfile/LocalVariableTable;)V\n+  #439 = Utf8               visitMethod\n+  #440 = Utf8               (Lorg/apache/bcel/classfile/Method;)V\n+  #441 = Class              #769          // \"[Lorg/apache/bcel/generic/Type;\"\n+  #442 = Utf8               visitSourceFile\n+  #443 = Utf8               (Lorg/apache/bcel/classfile/SourceFile;)V\n+  #444 = Utf8               visitSynthetic\n+  #445 = Utf8               (Lorg/apache/bcel/classfile/Synthetic;)V\n+  #446 = Utf8               visitUnknown\n+  #447 = Utf8               (Lorg/apache/bcel/classfile/Unknown;)V\n+  #448 = Utf8               lambda$visitInnerClasses$0\n+  #449 = Utf8               (Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+  #450 = Class              #770          // org/apache/bcel/verifier/statics/Pass2Verifier$1\n+  #451 = Utf8               InnerClasses\n+  #452 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n+  #453 = Utf8               SourceFile\n+  #454 = Utf8               Pass2Verifier.java\n+  #455 = NameAndType        #360:#361     // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n+  #456 = NameAndType        #358:#359     // this$0:Lorg/apache/bcel/verifier/statics/Pass2Verifier;\n+  #457 = NameAndType        #360:#771     // \"<init>\":()V\n+  #458 = Utf8               java/util/HashSet\n+  #459 = NameAndType        #353:#354     // fieldNames:Ljava/util/Set;\n+  #460 = NameAndType        #356:#354     // fieldNamesAndDesc:Ljava/util/Set;\n+  #461 = NameAndType        #357:#354     // methodNamesAndDesc:Ljava/util/Set;\n+  #462 = NameAndType        #345:#346     // jc:Lorg/apache/bcel/classfile/JavaClass;\n+  #463 = NameAndType        #772:#773     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #464 = NameAndType        #347:#348     // cp:Lorg/apache/bcel/classfile/ConstantPool;\n+  #465 = Class              #774          // org/apache/bcel/classfile/ConstantPool\n+  #466 = NameAndType        #775:#776     // getLength:()I\n+  #467 = NameAndType        #349:#350     // cplen:I\n+  #468 = Utf8               org/apache/bcel/classfile/ConstantClass\n+  #469 = NameAndType        #334:#335     // CONST_Class:Ljava/lang/Class;\n+  #470 = Utf8               org/apache/bcel/classfile/ConstantString\n+  #471 = NameAndType        #338:#335     // CONST_String:Ljava/lang/Class;\n+  #472 = Utf8               org/apache/bcel/classfile/ConstantInteger\n+  #473 = NameAndType        #339:#335     // CONST_Integer:Ljava/lang/Class;\n+  #474 = Utf8               org/apache/bcel/classfile/ConstantFloat\n+  #475 = NameAndType        #340:#335     // CONST_Float:Ljava/lang/Class;\n+  #476 = Utf8               org/apache/bcel/classfile/ConstantLong\n+  #477 = NameAndType        #341:#335     // CONST_Long:Ljava/lang/Class;\n+  #478 = Utf8               org/apache/bcel/classfile/ConstantDouble\n+  #479 = NameAndType        #342:#335     // CONST_Double:Ljava/lang/Class;\n+  #480 = Utf8               org/apache/bcel/classfile/ConstantNameAndType\n+  #481 = NameAndType        #343:#335     // CONST_NameAndType:Ljava/lang/Class;\n+  #482 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #483 = NameAndType        #344:#335     // CONST_Utf8:Ljava/lang/Class;\n+  #484 = Utf8               org/apache/bcel/classfile/DescendingVisitor\n+  #485 = NameAndType        #360:#777     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n+  #486 = NameAndType        #351:#352     // carrier:Lorg/apache/bcel/classfile/DescendingVisitor;\n+  #487 = NameAndType        #778:#771     // visit:()V\n+  #488 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n+  #489 = Utf8               java/lang/StringBuilder\n+  #490 = Utf8               Invalid index \\'\n+  #491 = NameAndType        #779:#780     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #492 = NameAndType        #779:#781     // append:(I)Ljava/lang/StringBuilder;\n+  #493 = Utf8               \\' used by \\'\n+  #494 = Class              #782          // org/apache/bcel/verifier/statics/Pass2Verifier\n+  #495 = NameAndType        #783:#784     // access$000:(Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+  #496 = Utf8               \\'.\n+  #497 = NameAndType        #785:#786     // toString:()Ljava/lang/String;\n+  #498 = NameAndType        #360:#787     // \"<init>\":(Ljava/lang/String;)V\n+  #499 = NameAndType        #788:#789     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #500 = Class              #790          // java/lang/Class\n+  #501 = NameAndType        #791:#792     // isInstance:(Ljava/lang/Object;)Z\n+  #502 = Utf8               Illegal constant \\'\n+  #503 = Utf8               \\' at index \\'\n+  #504 = Utf8               \\'. \\'\n+  #505 = Utf8               \\' expects a \\'\n+  #506 = NameAndType        #779:#793     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #507 = NameAndType        #794:#776     // getNameIndex:()I\n+  #508 = NameAndType        #365:#366     // checkIndex:(Lorg/apache/bcel/classfile/Node;ILjava/lang/Class;)V\n+  #509 = NameAndType        #795:#786     // getBytes:()Ljava/lang/String;\n+  #510 = NameAndType        #796:#792     // equals:(Ljava/lang/Object;)Z\n+  #511 = Utf8               The Code attribute \\'\n+  #512 = Utf8               \\' is not correctly named \\'Code\\' but \\'\n+  #513 = NameAndType        #797:#798     // predecessor:()Ljava/lang/Object;\n+  #514 = Utf8               org/apache/bcel/classfile/Method\n+  #515 = Utf8               Code attribute \\'\n+  #516 = Utf8               \\' is not declared in a method_info structure but in \\'\n+  #517 = Utf8               \\'. Ignored.\n+  #518 = NameAndType        #799:#787     // addMessage:(Ljava/lang/String;)V\n+  #519 = NameAndType        #800:#801     // getCode:()[B\n+  #520 = Utf8               Code array of Code attribute \\'\n+  #521 = Utf8               \\' (method \\'\n+  #522 = Utf8               \\') must not be empty.\n+  #523 = NameAndType        #802:#803     // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+  #524 = NameAndType        #804:#776     // getCatchType:()I\n+  #525 = Class              #805          // org/apache/bcel/classfile/Utility\n+  #526 = NameAndType        #806:#807     // pathToPackage:(Ljava/lang/String;)Ljava/lang/String;\n+  #527 = Class              #808          // org/apache/bcel/verifier/VerifierFactory\n+  #528 = NameAndType        #809:#810     // getVerifier:(Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n+  #529 = NameAndType        #811:#812     // doPass1:()Lorg/apache/bcel/verifier/VerificationResult;\n+  #530 = NameAndType        #813:#814     // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+  #531 = Utf8               \\') has an exception_table entry \\'\n+  #532 = Utf8               \\' that references \\'\n+  #533 = Utf8               \\' as an Exception but it does not pass verification pass 1:\n+  #534 = Class              #815          // org/apache/bcel/Repository\n+  #535 = NameAndType        #816:#817     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #536 = NameAndType        #818:#819     // THROWABLE:Lorg/apache/bcel/generic/ObjectType;\n+  #537 = NameAndType        #820:#786     // getClassName:()Ljava/lang/String;\n+  #538 = NameAndType        #821:#819     // OBJECT:Lorg/apache/bcel/generic/ObjectType;\n+  #539 = NameAndType        #822:#786     // getSuperclassName:()Ljava/lang/String;\n+  #540 = Utf8               \\' as an Exception but \\'\n+  #541 = Utf8               \\' in the ancestor hierachy does not pass verification pass 1:\n+  #542 = Utf8               \\' as an Exception but it is not a subclass of \\'\n+  #543 = NameAndType        #823:#824     // access$100:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n+  #544 = NameAndType        #825:#826     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+  #545 = NameAndType        #827:#786     // getName:()Ljava/lang/String;\n+  #546 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+  #547 = Utf8               Could not find a known BCEL Method object in the corresponding BCEL JavaClass object.\n+  #548 = NameAndType        #828:#829     // access$200:(Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n+  #549 = Utf8               org/apache/bcel/verifier/statics/LocalVariablesInfo\n+  #550 = NameAndType        #830:#776     // getMaxLocals:()I\n+  #551 = NameAndType        #360:#831     // \"<init>\":(I)V\n+  #552 = NameAndType        #832:#833     // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #553 = Utf8               org/apache/bcel/classfile/LineNumberTable\n+  #554 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n+  #555 = Utf8               Attribute \\'\n+  #556 = Utf8               \\' as an attribute of Code attribute \\'\n+  #557 = Utf8               \\') is unknown and will therefore be ignored.\n+  #558 = Utf8               \\') will effectively be ignored and is only useful for debuggers and such.\n+  #559 = Utf8               LocalVariableTable\n+  #560 = Utf8               The LocalVariableTable attribute \\'\n+  #561 = Utf8               \\' is not correctly named \\'LocalVariableTable\\' but \\'\n+  #562 = NameAndType        #834:#835     // getLocalVariableTable:()[Lorg/apache/bcel/classfile/LocalVariable;\n+  #563 = NameAndType        #836:#837     // access$300:(Ljava/lang/String;)Z\n+  #564 = Utf8               LocalVariableTable \\'\n+  #565 = Utf8               \\' references a local variable by the name \\'\n+  #566 = Utf8               \\' which is not a legal Java simple name.\n+  #567 = NameAndType        #838:#776     // getSignatureIndex:()I\n+  #568 = NameAndType        #839:#840     // getType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #569 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+  #570 = Utf8               Illegal descriptor (==signature) \\'\n+  #571 = Utf8               \\' used by LocalVariable \\'\n+  #572 = Utf8               \\' referenced by \\'\n+  #573 = NameAndType        #360:#841     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #574 = NameAndType        #842:#776     // getIndex:()I\n+  #575 = NameAndType        #843:#844     // LONG:Lorg/apache/bcel/generic/BasicType;\n+  #576 = NameAndType        #845:#844     // DOUBLE:Lorg/apache/bcel/generic/BasicType;\n+  #577 = Utf8               LocalVariableTable attribute \\'\n+  #578 = Utf8               \\' references a LocalVariable \\'\n+  #579 = Utf8               \\' with an index that exceeds the surrounding Code attribute\\'s max_locals value of \\'\n+  #580 = NameAndType        #846:#776     // getStartPC:()I\n+  #581 = NameAndType        #847:#848     // add:(ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+  #582 = Utf8               org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+  #583 = Utf8               Conflicting information in LocalVariableTable \\'\n+  #584 = Utf8               \\' found in Code attribute \\'\n+  #585 = Utf8               \\').\n+  #586 = NameAndType        #849:#786     // getMessage:()Ljava/lang/String;\n+  #587 = NameAndType        #850:#851     // isStatic:()Z\n+  #588 = Utf8               Number of LocalVariableTable attributes of Code attribute \\'\n+  #589 = Utf8               \\') exceeds number of local variable slots \\'\n+  #590 = Utf8               \\' (\\'There may be at most one LocalVariableTable attribute per local variable in the Code attribute.\\').\n+  #591 = Utf8               java/lang/ClassNotFoundException\n+  #592 = Utf8               Missing class:\n+  #593 = NameAndType        #852:#853     // getTag:()B\n+  #594 = Utf8               org/apache/bcel/Const\n+  #595 = Utf8               Wrong constant tag in \\'\n+  #596 = Class              #854          // org/apache/bcel/classfile/ConstantFieldref\n+  #597 = NameAndType        #855:#776     // getClassIndex:()I\n+  #598 = NameAndType        #856:#776     // getNameAndTypeIndex:()I\n+  #599 = Class              #857          // org/apache/bcel/classfile/ConstantInterfaceMethodref\n+  #600 = Class              #858          // org/apache/bcel/classfile/ConstantMethodref\n+  #601 = NameAndType        #859:#776     // getStringIndex:()I\n+  #602 = Utf8               ConstantValue\n+  #603 = Utf8               The ConstantValue attribute \\'\n+  #604 = Utf8               \\' is not correctly named \\'ConstantValue\\' but \\'\n+  #605 = Utf8               org/apache/bcel/classfile/Field\n+  #606 = NameAndType        #860:#776     // getConstantValueIndex:()I\n+  #607 = NameAndType        #861:#844     // FLOAT:Lorg/apache/bcel/generic/BasicType;\n+  #608 = NameAndType        #862:#844     // INT:Lorg/apache/bcel/generic/BasicType;\n+  #609 = NameAndType        #863:#844     // SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #610 = NameAndType        #864:#844     // CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #611 = NameAndType        #865:#844     // BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #612 = NameAndType        #866:#844     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+  #613 = NameAndType        #867:#819     // STRING:Lorg/apache/bcel/generic/ObjectType;\n+  #614 = Utf8               Illegal type of ConstantValue \\'\n+  #615 = Utf8               \\' embedding Constant \\'\n+  #616 = Utf8               \\'. It is referenced by field \\'\n+  #617 = Utf8               \\' expecting a different type: \\'\n+  #618 = Utf8               Deprecated\n+  #619 = Utf8               The Deprecated attribute \\'\n+  #620 = Utf8               \\' is not correctly named \\'Deprecated\\' but \\'\n+  #621 = Utf8               Exceptions\n+  #622 = Utf8               The Exceptions attribute \\'\n+  #623 = Utf8               \\' is not correctly named \\'Exceptions\\' but \\'\n+  #624 = NameAndType        #868:#869     // getExceptionIndexTable:()[I\n+  #625 = Utf8               Exceptions attribute \\'\n+  #626 = Utf8               \\' references \\'\n+  #627 = NameAndType        #870:#851     // isClass:()Z\n+  #628 = NameAndType        #871:#851     // isPrivate:()Z\n+  #629 = NameAndType        #872:#851     // isProtected:()Z\n+  #630 = NameAndType        #873:#851     // isPublic:()Z\n+  #631 = Utf8               Field \\'\n+  #632 = Utf8               \\' must only have at most one of its ACC_PRIVATE, ACC_PROTECTED, ACC_PUBLIC modifiers set.\n+  #633 = NameAndType        #874:#851     // isFinal:()Z\n+  #634 = NameAndType        #875:#851     // isVolatile:()Z\n+  #635 = Utf8               \\' must only have at most one of its ACC_FINAL, ACC_VOLATILE modifiers set.\n+  #636 = Utf8               Interface field \\'\n+  #637 = Utf8               \\' must have the ACC_PUBLIC modifier set but hasn\\'t!\n+  #638 = Utf8               \\' must have the ACC_STATIC modifier set but hasn\\'t!\n+  #639 = Utf8               \\' must have the ACC_FINAL modifier set but hasn\\'t!\n+  #640 = NameAndType        #876:#776     // getAccessFlags:()I\n+  #641 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_VOLATILE, ACC_TRANSIENT set (ignored).\n+  #642 = NameAndType        #877:#837     // access$400:(Ljava/lang/String;)Z\n+  #643 = Utf8               \\' has illegal name \\'\n+  #644 = Class              #878          // java/util/Set\n+  #645 = NameAndType        #879:#792     // contains:(Ljava/lang/Object;)Z\n+  #646 = Utf8               No two fields (like \\'\n+  #647 = Utf8               \\') are allowed have same names and descriptors!\n+  #648 = Utf8               More than one field of name \\'\n+  #649 = Utf8               \\' detected (but with different type descriptors). This is very unusual.\n+  #650 = NameAndType        #847:#792     // add:(Ljava/lang/Object;)Z\n+  #651 = Utf8               org/apache/bcel/classfile/ConstantValue\n+  #652 = Utf8               org/apache/bcel/classfile/Synthetic\n+  #653 = Utf8               org/apache/bcel/classfile/Deprecated\n+  #654 = Utf8               \\' as an attribute of Field \\'\n+  #655 = Utf8               \\' is unknown and will therefore be ignored.\n+  #656 = Utf8               \\' is not a ConstantValue and is therefore only of use for debuggers and such.\n+  #657 = Utf8               The InnerClasses attribute \\'\n+  #658 = Utf8               \\' is not correctly named \\'InnerClasses\\' but \\'\n+  #659 = Utf8               BootstrapMethods\n+  #660 = MethodHandle       6:#880        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #661 = MethodType         #881          //  (Ljava/lang/Object;)V\n+  #662 = MethodHandle       7:#882        // REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+  #663 = MethodType         #425          //  (Lorg/apache/bcel/classfile/InnerClass;)V\n+  #664 = NameAndType        #883:#884     // accept:(Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n+  #665 = NameAndType        #885:#886     // forEach:(Ljava/util/function/Consumer;)V\n+  #666 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector\n+  #667 = Utf8               InnerClassDetector\n+  #668 = NameAndType        #360:#430     // \"<init>\":(Lorg/apache/bcel/classfile/JavaClass;)V\n+  #669 = NameAndType        #887:#851     // innerClassReferenced:()Z\n+  #670 = Utf8               org/apache/bcel/classfile/SourceFile\n+  #671 = Utf8               org/apache/bcel/classfile/InnerClasses\n+  #672 = Utf8               \\' as an attribute of the ClassFile structure \\'\n+  #673 = Utf8               A ClassFile structure (like \\'\n+  #674 = Utf8               \\') may have no more than one SourceFile attribute.\n+  #675 = Utf8               A Classfile structure (like \\'\n+  #676 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). More than one InnerClasses attribute was found.\n+  #677 = Utf8               No referenced Inner Class found, but InnerClasses attribute \\'\n+  #678 = Utf8               \\' found. Strongly suggest removal of that attribute.\n+  #679 = Utf8               \\') must have exactly one InnerClasses attribute if at least one Inner Class is referenced (which is the case). No InnerClasses attribute was found.\n+  #680 = Utf8               The LineNumberTable attribute \\'\n+  #681 = Utf8               \\' is not correctly named \\'LineNumberTable\\' but \\'\n+  #682 = NameAndType        #888:#889     // access$500:(Ljava/lang/String;Z)Z\n+  #683 = Utf8               Method \\'\n+  #684 = NameAndType        #890:#840     // getReturnType:(Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #685 = NameAndType        #891:#892     // getArgumentTypes:(Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n+  #686 = Utf8               \\' used by Method \\'\n+  #687 = Utf8               org/apache/bcel/generic/ArrayType\n+  #688 = NameAndType        #893:#894     // getBasicType:()Lorg/apache/bcel/generic/Type;\n+  #689 = Utf8               org/apache/bcel/generic/ObjectType\n+  #690 = Utf8               \\' has a return type that does not pass verification pass 1: \\'\n+  #691 = Utf8               \\' has an argument type that does not pass verification pass 1: \\'\n+  #692 = Utf8               <clinit>\n+  #693 = Utf8               \\'. Its name resembles the class or interface initialization method which it isn\\'t because of its arguments (==descriptor).\n+  #694 = NameAndType        #895:#851     // isAbstract:()Z\n+  #695 = Utf8               Abstract method \\'\n+  #696 = Utf8               \\' must not have the ACC_FINAL modifier set.\n+  #697 = NameAndType        #896:#851     // isNative:()Z\n+  #698 = Utf8               \\' must not have the ACC_NATIVE modifier set.\n+  #699 = Utf8               \\' must not have the ACC_PRIVATE modifier set.\n+  #700 = Utf8               \\' must not have the ACC_STATIC modifier set.\n+  #701 = NameAndType        #897:#851     // isStrictfp:()Z\n+  #702 = Utf8               \\' must not have the ACC_STRICT modifier set.\n+  #703 = NameAndType        #898:#851     // isSynchronized:()Z\n+  #704 = Utf8               \\' must not have the ACC_SYNCHRONIZED modifier set.\n+  #705 = Utf8               Instance initialization method \\'\n+  #706 = Utf8               \\' must not have any of the ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT modifiers set.\n+  #707 = NameAndType        #899:#776     // getMajor:()I\n+  #708 = Utf8               Interface method \\'\n+  #709 = Utf8               \\' must have exactly one of its ACC_PUBLIC and ACC_PRIVATE modifiers set.\n+  #710 = Utf8               \\' must not have any of the ACC_PROTECTED, ACC_FINAL, ACC_SYNCHRONIZED, or ACC_NATIVE modifiers set.\n+  #711 = Utf8               \\' must have the ACC_ABSTRACT modifier set but hasn\\'t!\n+  #712 = Utf8               \\' must not have any of the ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT modifiers set.\n+  #713 = Utf8               \\' has access flag(s) other than ACC_PUBLIC, ACC_PRIVATE, ACC_PROTECTED, ACC_STATIC, ACC_FINAL, ACC_SYNCHRONIZED, ACC_NATIVE, ACC_ABSTRACT, ACC_STRICT set (ignored).\n+  #714 = Utf8               No two methods (like \\'\n+  #715 = Utf8               \\') are allowed have same names and desciptors!\n+  #716 = Utf8               org/apache/bcel/classfile/Code\n+  #717 = Utf8               org/apache/bcel/classfile/ExceptionTable\n+  #718 = Utf8               \\' as an attribute of Method \\'\n+  #719 = Utf8               \\' is neither Code nor Exceptions and is therefore only of use for debuggers and such.\n+  #720 = Utf8               Native or abstract methods like \\'\n+  #721 = Utf8               \\' must not have a Code attribute like \\'\n+  #722 = Utf8               Non-native, non-abstract methods like \\'\n+  #723 = Utf8               \\' must have exactly one Code attribute (found:\n+  #724 = Utf8               ).\n+  #725 = Utf8               The SourceFile attribute \\'\n+  #726 = Utf8               \\' is not correctly named \\'SourceFile\\' but \\'\n+  #727 = NameAndType        #900:#776     // getSourceFileIndex:()I\n+  #728 = Class              #901          // java/util/Locale\n+  #729 = NameAndType        #902:#903     // ENGLISH:Ljava/util/Locale;\n+  #730 = NameAndType        #904:#905     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #731 = NameAndType        #906:#907     // indexOf:(I)I\n+  #732 = Utf8               .java\n+  #733 = NameAndType        #908:#909     // lastIndexOf:(Ljava/lang/String;)I\n+  #734 = Utf8               SourceFile attribute \\'\n+  #735 = Utf8               \\' has a funny name: remember not to confuse certain parsers working on javap\\'s output. Also, this name (\\'\n+  #736 = Utf8               \\') is considered an unqualified (simple) file name only.\n+  #737 = Utf8               Synthetic\n+  #738 = Utf8               The Synthetic attribute \\'\n+  #739 = Utf8               \\' is not correctly named \\'Synthetic\\' but \\'\n+  #740 = Class              #910          // org/apache/bcel/classfile/Unknown\n+  #741 = Utf8               Unknown attribute \\'\n+  #742 = Utf8               \\'. This attribute is not known in any context!\n+  #743 = Class              #911          // org/apache/bcel/classfile/InnerClass\n+  #744 = NameAndType        #912:#776     // getInnerClassIndex:()I\n+  #745 = NameAndType        #913:#776     // getOuterClassIndex:()I\n+  #746 = NameAndType        #914:#776     // getInnerNameIndex:()I\n+  #747 = NameAndType        #915:#776     // getInnerAccessFlags:()I\n+  #748 = Utf8               Unknown access flag for inner class \\'\n+  #749 = Utf8               \\' set (InnerClasses attribute \\'\n+  #750 = Utf8               \\').\n+  #751 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor\n+  #752 = Utf8               CPESSC_Visitor\n+  #753 = Utf8               org/apache/bcel/classfile/EmptyVisitor\n+  #754 = Utf8               org/apache/bcel/classfile/Constant\n+  #755 = Utf8               java/lang/String\n+  #756 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n+  #757 = Utf8               org/apache/bcel/classfile/CodeException\n+  #758 = Utf8               org/apache/bcel/verifier/Verifier\n+  #759 = Utf8               org/apache/bcel/verifier/VerificationResult\n+  #760 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #761 = Utf8               [Lorg/apache/bcel/classfile/Method;\n+  #762 = Utf8               [Lorg/apache/bcel/classfile/Attribute;\n+  #763 = Utf8               org/apache/bcel/classfile/Attribute\n+  #764 = Utf8               [Lorg/apache/bcel/classfile/LocalVariable;\n+  #765 = Utf8               org/apache/bcel/classfile/LocalVariable\n+  #766 = Utf8               org/apache/bcel/generic/Type\n+  #767 = Utf8               java/lang/Object\n+  #768 = Utf8               [I\n+  #769 = Utf8               [Lorg/apache/bcel/generic/Type;\n+  #770 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier$1\n+  #771 = Utf8               ()V\n+  #772 = Utf8               getConstantPool\n+  #773 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #774 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #775 = Utf8               getLength\n+  #776 = Utf8               ()I\n+  #777 = Utf8               (Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/classfile/Visitor;)V\n+  #778 = Utf8               visit\n+  #779 = Utf8               append\n+  #780 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #781 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #782 = Utf8               org/apache/bcel/verifier/statics/Pass2Verifier\n+  #783 = Utf8               access$000\n+  #784 = Utf8               (Lorg/apache/bcel/classfile/Node;)Ljava/lang/String;\n+  #785 = Utf8               toString\n+  #786 = Utf8               ()Ljava/lang/String;\n+  #787 = Utf8               (Ljava/lang/String;)V\n+  #788 = Utf8               getConstant\n+  #789 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #790 = Utf8               java/lang/Class\n+  #791 = Utf8               isInstance\n+  #792 = Utf8               (Ljava/lang/Object;)Z\n+  #793 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #794 = Utf8               getNameIndex\n+  #795 = Utf8               getBytes\n+  #796 = Utf8               equals\n+  #797 = Utf8               predecessor\n+  #798 = Utf8               ()Ljava/lang/Object;\n+  #799 = Utf8               addMessage\n+  #800 = Utf8               getCode\n+  #801 = Utf8               ()[B\n+  #802 = Utf8               getExceptionTable\n+  #803 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n+  #804 = Utf8               getCatchType\n+  #805 = Utf8               org/apache/bcel/classfile/Utility\n+  #806 = Utf8               pathToPackage\n+  #807 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #808 = Utf8               org/apache/bcel/verifier/VerifierFactory\n+  #809 = Utf8               getVerifier\n+  #810 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/verifier/Verifier;\n+  #811 = Utf8               doPass1\n+  #812 = Utf8               ()Lorg/apache/bcel/verifier/VerificationResult;\n+  #813 = Utf8               VR_OK\n+  #814 = Utf8               Lorg/apache/bcel/verifier/VerificationResult;\n+  #815 = Utf8               org/apache/bcel/Repository\n+  #816 = Utf8               lookupClass\n+  #817 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #818 = Utf8               THROWABLE\n+  #819 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n+  #820 = Utf8               getClassName\n+  #821 = Utf8               OBJECT\n+  #822 = Utf8               getSuperclassName\n+  #823 = Utf8               access$100\n+  #824 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)Lorg/apache/bcel/verifier/Verifier;\n+  #825 = Utf8               getMethods\n+  #826 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+  #827 = Utf8               getName\n+  #828 = Utf8               access$200\n+  #829 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier;)[Lorg/apache/bcel/verifier/statics/LocalVariablesInfo;\n+  #830 = Utf8               getMaxLocals\n+  #831 = Utf8               (I)V\n+  #832 = Utf8               getAttributes\n+  #833 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n+  #834 = Utf8               getLocalVariableTable\n+  #835 = Utf8               ()[Lorg/apache/bcel/classfile/LocalVariable;\n+  #836 = Utf8               access$300\n+  #837 = Utf8               (Ljava/lang/String;)Z\n+  #838 = Utf8               getSignatureIndex\n+  #839 = Utf8               getType\n+  #840 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/generic/Type;\n+  #841 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #842 = Utf8               getIndex\n+  #843 = Utf8               LONG\n+  #844 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+  #845 = Utf8               DOUBLE\n+  #846 = Utf8               getStartPC\n+  #847 = Utf8               add\n+  #848 = Utf8               (ILjava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+  #849 = Utf8               getMessage\n+  #850 = Utf8               isStatic\n+  #851 = Utf8               ()Z\n+  #852 = Utf8               getTag\n+  #853 = Utf8               ()B\n+  #854 = Utf8               org/apache/bcel/classfile/ConstantFieldref\n+  #855 = Utf8               getClassIndex\n+  #856 = Utf8               getNameAndTypeIndex\n+  #857 = Utf8               org/apache/bcel/classfile/ConstantInterfaceMethodref\n+  #858 = Utf8               org/apache/bcel/classfile/ConstantMethodref\n+  #859 = Utf8               getStringIndex\n+  #860 = Utf8               getConstantValueIndex\n+  #861 = Utf8               FLOAT\n+  #862 = Utf8               INT\n+  #863 = Utf8               SHORT\n+  #864 = Utf8               CHAR\n+  #865 = Utf8               BYTE\n+  #866 = Utf8               BOOLEAN\n+  #867 = Utf8               STRING\n+  #868 = Utf8               getExceptionIndexTable\n+  #869 = Utf8               ()[I\n+  #870 = Utf8               isClass\n+  #871 = Utf8               isPrivate\n+  #872 = Utf8               isProtected\n+  #873 = Utf8               isPublic\n+  #874 = Utf8               isFinal\n+  #875 = Utf8               isVolatile\n+  #876 = Utf8               getAccessFlags\n+  #877 = Utf8               access$400\n+  #878 = Utf8               java/util/Set\n+  #879 = Utf8               contains\n+  #880 = Methodref          #916.#917     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #881 = Utf8               (Ljava/lang/Object;)V\n+  #882 = Methodref          #332.#918     // org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+  #883 = Utf8               accept\n+  #884 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor;Lorg/apache/bcel/classfile/InnerClasses;)Ljava/util/function/Consumer;\n+  #885 = Utf8               forEach\n+  #886 = Utf8               (Ljava/util/function/Consumer;)V\n+  #887 = Utf8               innerClassReferenced\n+  #888 = Utf8               access$500\n+  #889 = Utf8               (Ljava/lang/String;Z)Z\n+  #890 = Utf8               getReturnType\n+  #891 = Utf8               getArgumentTypes\n+  #892 = Utf8               (Ljava/lang/String;)[Lorg/apache/bcel/generic/Type;\n+  #893 = Utf8               getBasicType\n+  #894 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+  #895 = Utf8               isAbstract\n+  #896 = Utf8               isNative\n+  #897 = Utf8               isStrictfp\n+  #898 = Utf8               isSynchronized\n+  #899 = Utf8               getMajor\n+  #900 = Utf8               getSourceFileIndex\n+  #901 = Utf8               java/util/Locale\n+  #902 = Utf8               ENGLISH\n+  #903 = Utf8               Ljava/util/Locale;\n+  #904 = Utf8               toLowerCase\n+  #905 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #906 = Utf8               indexOf\n+  #907 = Utf8               (I)I\n+  #908 = Utf8               lastIndexOf\n+  #909 = Utf8               (Ljava/lang/String;)I\n+  #910 = Utf8               org/apache/bcel/classfile/Unknown\n+  #911 = Utf8               org/apache/bcel/classfile/InnerClass\n+  #912 = Utf8               getInnerClassIndex\n+  #913 = Utf8               getOuterClassIndex\n+  #914 = Utf8               getInnerNameIndex\n+  #915 = Utf8               getInnerAccessFlags\n+  #916 = Class              #919          // java/lang/invoke/LambdaMetafactory\n+  #917 = NameAndType        #920:#923     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #918 = NameAndType        #448:#449     // lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+  #919 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #920 = Utf8               metafactory\n+  #921 = Class              #925          // java/lang/invoke/MethodHandles$Lookup\n+  #922 = Utf8               Lookup\n+  #923 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #924 = Class              #926          // java/lang/invoke/MethodHandles\n+  #925 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #926 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final java.lang.Class<?> CONST_Class;\n     descriptor: Ljava/lang/Class;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #337                         // Ljava/lang/Class<*>;\n \n   private final java.lang.Class<?> CONST_String;\n@@ -5187,18 +5168,14 @@\n           locals = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 21\n           locals = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 67\n           locals = [ int ]\n-    MethodParameters:\n-      Name                           Flags\n-      innerClasses                   final synthetic\n-      ic                             synthetic\n \n   org.apache.bcel.verifier.statics.Pass2Verifier$CPESSC_Visitor(org.apache.bcel.verifier.statics.Pass2Verifier, org.apache.bcel.classfile.JavaClass, org.apache.bcel.verifier.statics.Pass2Verifier$1);\n     descriptor: (Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;Lorg/apache/bcel/verifier/statics/Pass2Verifier$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n@@ -5207,17 +5184,17 @@\n          3: invokespecial #1                  // Method \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass2Verifier;Lorg/apache/bcel/classfile/JavaClass;)V\n          6: return\n       LineNumberTable:\n         line 90: 0\n }\n SourceFile: \"Pass2Verifier.java\"\n InnerClasses:\n-  static #462;                            // class org/apache/bcel/verifier/statics/Pass2Verifier$1\n-  private static #686= #236 of #507;      // InnerClassDetector=class org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector of class org/apache/bcel/verifier/statics/Pass2Verifier\n-  private final #771= #332 of #507;       // CPESSC_Visitor=class org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor of class org/apache/bcel/verifier/statics/Pass2Verifier\n-  public static final #941= #940 of #943; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  static #450;                            // class org/apache/bcel/verifier/statics/Pass2Verifier$1\n+  private static #667= #236 of #494;      // InnerClassDetector=class org/apache/bcel/verifier/statics/Pass2Verifier$InnerClassDetector of class org/apache/bcel/verifier/statics/Pass2Verifier\n+  private final #752= #332 of #494;       // CPESSC_Visitor=class org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor of class org/apache/bcel/verifier/statics/Pass2Verifier\n+  public static final #922= #921 of #924; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #679 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #660 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #680 (Ljava/lang/Object;)V\n-      #681 REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n-      #682 (Lorg/apache/bcel/classfile/InnerClass;)V\n+      #661 (Ljava/lang/Object;)V\n+      #662 REF_invokeSpecial org/apache/bcel/verifier/statics/Pass2Verifier$CPESSC_Visitor.lambda$visitInnerClasses$0:(Lorg/apache/bcel/classfile/InnerClasses;Lorg/apache/bcel/classfile/InnerClass;)V\n+      #663 (Lorg/apache/bcel/classfile/InnerClass;)V\n"}]}
