{"diffoscope-json-version": 1, "source1": "first/Coders$BCJDecoder.class", "source2": "second/Coders$BCJDecoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,37 +1,37 @@\n-  SHA-256 checksum 38400f42568f6939e0181d85cbd5a9f87b215c68240a7592c1fb6259e0646302\n+  SHA-256 checksum a0a6c6a3b0978210d858a260535a7f33b130a1258123bdea30234c8e86b678fe\n   Compiled from \"Coders.java\"\n class org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #19                         // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n   super_class: #20                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n   interfaces: 0, fields: 1, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Class              #57            // java/lang/Class\n-   #2 = Methodref          #20.#58        // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-   #3 = Fieldref           #19.#59        // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder.opts:Lorg/tukaani/xz/FilterOptions;\n-   #4 = Methodref          #60.#61        // org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n-   #5 = Class              #62            // java/lang/AssertionError\n-   #6 = Class              #63            // java/io/IOException\n-   #7 = Class              #64            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#65         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #66            // BCJ filter used in\n-  #10 = Methodref          #7.#67         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = String             #68            //  needs XZ for Java > 1.4 - see http://commons.apache.org/proper/commons-compress/limitations.html#7Z\n-  #12 = Methodref          #7.#69         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #13 = Methodref          #6.#70         // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #14 = Class              #71            // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #15 = Class              #72            // org/tukaani/xz/FinishableWrapperOutputStream\n-  #16 = Methodref          #15.#73        // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #17 = Methodref          #60.#74        // org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #18 = Methodref          #14.#73        // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #19 = Class              #76            // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n-  #20 = Class              #77            // org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #1 = Class              #56            // java/lang/Class\n+   #2 = Methodref          #20.#57        // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+   #3 = Fieldref           #19.#58        // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder.opts:Lorg/tukaani/xz/FilterOptions;\n+   #4 = Methodref          #59.#60        // org/tukaani/xz/FilterOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+   #5 = Class              #61            // java/lang/AssertionError\n+   #6 = Class              #62            // java/io/IOException\n+   #7 = Class              #63            // java/lang/StringBuilder\n+   #8 = Methodref          #7.#64         // java/lang/StringBuilder.\"<init>\":()V\n+   #9 = String             #65            // BCJ filter used in\n+  #10 = Methodref          #7.#66         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #11 = String             #67            //  needs XZ for Java > 1.4 - see http://commons.apache.org/proper/commons-compress/limitations.html#7Z\n+  #12 = Methodref          #7.#68         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #13 = Methodref          #6.#69         // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #14 = Class              #70            // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+  #15 = Class              #71            // org/tukaani/xz/FinishableWrapperOutputStream\n+  #16 = Methodref          #15.#72        // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #17 = Methodref          #59.#73        // org/tukaani/xz/FilterOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #18 = Methodref          #14.#72        // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #19 = Class              #75            // org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n+  #20 = Class              #76            // org/apache/commons/compress/archivers/sevenz/CoderBase\n   #21 = Utf8               opts\n   #22 = Utf8               Lorg/tukaani/xz/FilterOptions;\n   #23 = Utf8               <init>\n   #24 = Utf8               (Lorg/tukaani/xz/FilterOptions;)V\n   #25 = Utf8               Code\n   #26 = Utf8               LineNumberTable\n   #27 = Utf8               LocalVariableTable\n@@ -50,59 +50,58 @@\n   #40 = Utf8               uncompressedLength\n   #41 = Utf8               J\n   #42 = Utf8               coder\n   #43 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n   #44 = Utf8               password\n   #45 = Utf8               [B\n   #46 = Utf8               StackMapTable\n-  #47 = Class              #62            // java/lang/AssertionError\n-  #48 = Utf8               Exceptions\n-  #49 = Utf8               encode\n-  #50 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-  #51 = Utf8               out\n-  #52 = Utf8               Ljava/io/OutputStream;\n-  #53 = Utf8               options\n-  #54 = Utf8               Ljava/lang/Object;\n-  #55 = Utf8               SourceFile\n-  #56 = Utf8               Coders.java\n-  #57 = Utf8               java/lang/Class\n-  #58 = NameAndType        #23:#78        // \"<init>\":([Ljava/lang/Class;)V\n-  #59 = NameAndType        #21:#22        // opts:Lorg/tukaani/xz/FilterOptions;\n-  #60 = Class              #79            // org/tukaani/xz/FilterOptions\n-  #61 = NameAndType        #80:#81        // getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #62 = Utf8               java/lang/AssertionError\n-  #63 = Utf8               java/io/IOException\n-  #64 = Utf8               java/lang/StringBuilder\n-  #65 = NameAndType        #23:#82        // \"<init>\":()V\n-  #66 = Utf8               BCJ filter used in\n-  #67 = NameAndType        #83:#84        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #68 = Utf8                needs XZ for Java > 1.4 - see http://commons.apache.org/proper/commons-compress/limitations.html#7Z\n-  #69 = NameAndType        #85:#86        // toString:()Ljava/lang/String;\n-  #70 = NameAndType        #23:#87        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #71 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #72 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n-  #73 = NameAndType        #23:#88        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #74 = NameAndType        #89:#90        // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #75 = Class              #91            // org/apache/commons/compress/archivers/sevenz/Coders\n-  #76 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n-  #77 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #78 = Utf8               ([Ljava/lang/Class;)V\n-  #79 = Utf8               org/tukaani/xz/FilterOptions\n-  #80 = Utf8               getInputStream\n-  #81 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n-  #82 = Utf8               ()V\n-  #83 = Utf8               append\n-  #84 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #85 = Utf8               toString\n-  #86 = Utf8               ()Ljava/lang/String;\n-  #87 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #88 = Utf8               (Ljava/io/OutputStream;)V\n-  #89 = Utf8               getOutputStream\n-  #90 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-  #91 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders\n+  #47 = Utf8               Exceptions\n+  #48 = Utf8               encode\n+  #49 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+  #50 = Utf8               out\n+  #51 = Utf8               Ljava/io/OutputStream;\n+  #52 = Utf8               options\n+  #53 = Utf8               Ljava/lang/Object;\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               Coders.java\n+  #56 = Utf8               java/lang/Class\n+  #57 = NameAndType        #23:#77        // \"<init>\":([Ljava/lang/Class;)V\n+  #58 = NameAndType        #21:#22        // opts:Lorg/tukaani/xz/FilterOptions;\n+  #59 = Class              #78            // org/tukaani/xz/FilterOptions\n+  #60 = NameAndType        #79:#80        // getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #61 = Utf8               java/lang/AssertionError\n+  #62 = Utf8               java/io/IOException\n+  #63 = Utf8               java/lang/StringBuilder\n+  #64 = NameAndType        #23:#81        // \"<init>\":()V\n+  #65 = Utf8               BCJ filter used in\n+  #66 = NameAndType        #82:#83        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #67 = Utf8                needs XZ for Java > 1.4 - see http://commons.apache.org/proper/commons-compress/limitations.html#7Z\n+  #68 = NameAndType        #84:#85        // toString:()Ljava/lang/String;\n+  #69 = NameAndType        #23:#86        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #70 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+  #71 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n+  #72 = NameAndType        #23:#87        // \"<init>\":(Ljava/io/OutputStream;)V\n+  #73 = NameAndType        #88:#89        // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #74 = Class              #90            // org/apache/commons/compress/archivers/sevenz/Coders\n+  #75 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder\n+  #76 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+  #77 = Utf8               ([Ljava/lang/Class;)V\n+  #78 = Utf8               org/tukaani/xz/FilterOptions\n+  #79 = Utf8               getInputStream\n+  #80 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #81 = Utf8               ()V\n+  #82 = Utf8               append\n+  #83 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #84 = Utf8               toString\n+  #85 = Utf8               ()Ljava/lang/String;\n+  #86 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #87 = Utf8               (Ljava/io/OutputStream;)V\n+  #88 = Utf8               getOutputStream\n+  #89 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+  #90 = Utf8               org/apache/commons/compress/archivers/sevenz/Coders\n {\n   private final org.tukaani.xz.FilterOptions opts;\n     descriptor: Lorg/tukaani/xz/FilterOptions;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   org.apache.commons.compress.archivers.sevenz.Coders$BCJDecoder(org.tukaani.xz.FilterOptions);\n     descriptor: (Lorg/tukaani/xz/FilterOptions;)V\n@@ -196,8 +195,8 @@\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder;\n             0      23     1   out   Ljava/io/OutputStream;\n             0      23     2 options   Ljava/lang/Object;\n }\n SourceFile: \"Coders.java\"\n InnerClasses:\n-  static #29= #19 of #75;                 // BCJDecoder=class org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder of class org/apache/commons/compress/archivers/sevenz/Coders\n+  static #29= #19 of #74;                 // BCJDecoder=class org/apache/commons/compress/archivers/sevenz/Coders$BCJDecoder of class org/apache/commons/compress/archivers/sevenz/Coders\n"}]}
