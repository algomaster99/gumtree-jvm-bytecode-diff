{"diffoscope-json-version": 1, "source1": "first/StackMapType.class", "source2": "second/StackMapType.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,53 +1,53 @@\n-  SHA-256 checksum 379612c2d714e32fbae97295b6c1142a7189b863f6b7bfe23111d5c5b428551c\n+  SHA-256 checksum e1801afa16beadabf1fcf218514044d1784686aa644f955d8fbb17f7e48cd157\n   Compiled from \"StackMapType.java\"\n public final class org.apache.bcel.classfile.StackMapType implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #20                         // org/apache/bcel/classfile/StackMapType\n   super_class: #35                        // java/lang/Object\n   interfaces: 1, fields: 4, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #35.#91       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #20.#92       // org/apache/bcel/classfile/StackMapType.index:I\n-    #3 = Methodref          #20.#93       // org/apache/bcel/classfile/StackMapType.checkType:(B)B\n-    #4 = Fieldref           #20.#94       // org/apache/bcel/classfile/StackMapType.type:B\n-    #5 = Fieldref           #20.#95       // org/apache/bcel/classfile/StackMapType.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-    #6 = InterfaceMethodref #96.#97       // java/io/DataInput.readByte:()B\n-    #7 = Methodref          #20.#98       // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-    #8 = Methodref          #20.#99       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-    #9 = InterfaceMethodref #96.#100      // java/io/DataInput.readUnsignedShort:()I\n-   #10 = Class              #101          // org/apache/bcel/Const\n-   #11 = Class              #102          // org/apache/bcel/classfile/ClassFormatException\n-   #12 = Class              #103          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#91       // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #104          // Illegal type for StackMapType:\n-   #15 = Methodref          #12.#105      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#106      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #12.#107      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#108      // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #35.#109      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #20 = Class              #110          // org/apache/bcel/classfile/StackMapType\n-   #21 = Class              #111          // java/lang/CloneNotSupportedException\n-   #22 = Methodref          #112.#113     // java/io/DataOutputStream.writeByte:(I)V\n-   #23 = Methodref          #20.#114      // org/apache/bcel/classfile/StackMapType.getIndex:()I\n-   #24 = Methodref          #112.#115     // java/io/DataOutputStream.writeShort:(I)V\n-   #25 = String             #116          // , class=<unknown>\n-   #26 = String             #117          // , class=\n-   #27 = Methodref          #118.#119     // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #28 = String             #120          // , offset=\n-   #29 = String             #121          //\n-   #30 = String             #122          // (type=\n-   #31 = Methodref          #10.#123      // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n-   #32 = Methodref          #20.#124      // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n-   #33 = String             #125          // )\n-   #34 = Fieldref           #20.#126      // org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-   #35 = Class              #127          // java/lang/Object\n-   #36 = Class              #128          // java/lang/Cloneable\n+    #1 = Methodref          #35.#89       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #20.#90       // org/apache/bcel/classfile/StackMapType.index:I\n+    #3 = Methodref          #20.#91       // org/apache/bcel/classfile/StackMapType.checkType:(B)B\n+    #4 = Fieldref           #20.#92       // org/apache/bcel/classfile/StackMapType.type:B\n+    #5 = Fieldref           #20.#93       // org/apache/bcel/classfile/StackMapType.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+    #6 = InterfaceMethodref #57.#94       // java/io/DataInput.readByte:()B\n+    #7 = Methodref          #20.#95       // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+    #8 = Methodref          #20.#96       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+    #9 = InterfaceMethodref #57.#97       // java/io/DataInput.readUnsignedShort:()I\n+   #10 = Class              #98           // org/apache/bcel/Const\n+   #11 = Class              #99           // org/apache/bcel/classfile/ClassFormatException\n+   #12 = Class              #100          // java/lang/StringBuilder\n+   #13 = Methodref          #12.#89       // java/lang/StringBuilder.\"<init>\":()V\n+   #14 = String             #101          // Illegal type for StackMapType:\n+   #15 = Methodref          #12.#102      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #12.#103      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #17 = Methodref          #12.#104      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #18 = Methodref          #11.#105      // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #19 = Methodref          #35.#106      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #20 = Class              #107          // org/apache/bcel/classfile/StackMapType\n+   #21 = Class              #108          // java/lang/CloneNotSupportedException\n+   #22 = Methodref          #109.#110     // java/io/DataOutputStream.writeByte:(I)V\n+   #23 = Methodref          #20.#111      // org/apache/bcel/classfile/StackMapType.getIndex:()I\n+   #24 = Methodref          #109.#112     // java/io/DataOutputStream.writeShort:(I)V\n+   #25 = String             #113          // , class=<unknown>\n+   #26 = String             #114          // , class=\n+   #27 = Methodref          #58.#115      // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+   #28 = String             #116          // , offset=\n+   #29 = String             #117          //\n+   #30 = String             #118          // (type=\n+   #31 = Methodref          #10.#119      // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n+   #32 = Methodref          #20.#120      // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n+   #33 = String             #121          // )\n+   #34 = Fieldref           #20.#122      // org/apache/bcel/classfile/StackMapType.EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+   #35 = Class              #123          // java/lang/Object\n+   #36 = Class              #124          // java/lang/Cloneable\n    #37 = Utf8               EMPTY_ARRAY\n    #38 = Utf8               [Lorg/apache/bcel/classfile/StackMapType;\n    #39 = Utf8               type\n    #40 = Utf8               B\n    #41 = Utf8               index\n    #42 = Utf8               I\n    #43 = Utf8               constantPool\n@@ -60,104 +60,100 @@\n    #50 = Utf8               this\n    #51 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n    #52 = Utf8               MethodParameters\n    #53 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n    #54 = Utf8               file\n    #55 = Utf8               Ljava/io/DataInput;\n    #56 = Utf8               StackMapTable\n-   #57 = Class              #110          // org/apache/bcel/classfile/StackMapType\n-   #58 = Class              #129          // java/io/DataInput\n-   #59 = Class              #130          // org/apache/bcel/classfile/ConstantPool\n-   #60 = Utf8               Exceptions\n-   #61 = Class              #131          // java/io/IOException\n-   #62 = Utf8               checkType\n-   #63 = Utf8               (B)B\n-   #64 = Utf8               copy\n-   #65 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n-   #66 = Class              #111          // java/lang/CloneNotSupportedException\n-   #67 = Utf8               dump\n-   #68 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #69 = Utf8               Ljava/io/DataOutputStream;\n-   #70 = Utf8               getConstantPool\n-   #71 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-   #72 = Utf8               getIndex\n-   #73 = Utf8               ()I\n-   #74 = Utf8               getType\n-   #75 = Utf8               ()B\n-   #76 = Utf8               hasIndex\n-   #77 = Utf8               ()Z\n-   #78 = Utf8               printIndex\n-   #79 = Utf8               ()Ljava/lang/String;\n-   #80 = Utf8               setConstantPool\n-   #81 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #82 = Utf8               setIndex\n-   #83 = Utf8               (I)V\n-   #84 = Utf8               setType\n-   #85 = Utf8               (B)V\n-   #86 = Utf8               toString\n-   #87 = Utf8               <clinit>\n-   #88 = Utf8               ()V\n-   #89 = Utf8               SourceFile\n-   #90 = Utf8               StackMapType.java\n-   #91 = NameAndType        #45:#88       // \"<init>\":()V\n-   #92 = NameAndType        #41:#42       // index:I\n-   #93 = NameAndType        #62:#63       // checkType:(B)B\n-   #94 = NameAndType        #39:#40       // type:B\n-   #95 = NameAndType        #43:#44       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #96 = Class              #129          // java/io/DataInput\n-   #97 = NameAndType        #132:#75      // readByte:()B\n-   #98 = NameAndType        #45:#46       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #99 = NameAndType        #76:#77       // hasIndex:()Z\n-  #100 = NameAndType        #133:#73      // readUnsignedShort:()I\n-  #101 = Utf8               org/apache/bcel/Const\n-  #102 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #103 = Utf8               java/lang/StringBuilder\n-  #104 = Utf8               Illegal type for StackMapType:\n-  #105 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #106 = NameAndType        #134:#136     // append:(I)Ljava/lang/StringBuilder;\n-  #107 = NameAndType        #86:#79       // toString:()Ljava/lang/String;\n-  #108 = NameAndType        #45:#137      // \"<init>\":(Ljava/lang/String;)V\n-  #109 = NameAndType        #138:#139     // clone:()Ljava/lang/Object;\n-  #110 = Utf8               org/apache/bcel/classfile/StackMapType\n-  #111 = Utf8               java/lang/CloneNotSupportedException\n-  #112 = Class              #140          // java/io/DataOutputStream\n-  #113 = NameAndType        #141:#83      // writeByte:(I)V\n-  #114 = NameAndType        #72:#73       // getIndex:()I\n-  #115 = NameAndType        #142:#83      // writeShort:(I)V\n-  #116 = Utf8               , class=<unknown>\n-  #117 = Utf8               , class=\n-  #118 = Class              #130          // org/apache/bcel/classfile/ConstantPool\n-  #119 = NameAndType        #143:#144     // constantToString:(IB)Ljava/lang/String;\n-  #120 = Utf8               , offset=\n-  #121 = Utf8\n-  #122 = Utf8               (type=\n-  #123 = NameAndType        #145:#146     // getItemName:(I)Ljava/lang/String;\n-  #124 = NameAndType        #78:#79       // printIndex:()Ljava/lang/String;\n-  #125 = Utf8               )\n-  #126 = NameAndType        #37:#38       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n-  #127 = Utf8               java/lang/Object\n-  #128 = Utf8               java/lang/Cloneable\n-  #129 = Utf8               java/io/DataInput\n-  #130 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #131 = Utf8               java/io/IOException\n-  #132 = Utf8               readByte\n-  #133 = Utf8               readUnsignedShort\n-  #134 = Utf8               append\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #137 = Utf8               (Ljava/lang/String;)V\n-  #138 = Utf8               clone\n-  #139 = Utf8               ()Ljava/lang/Object;\n-  #140 = Utf8               java/io/DataOutputStream\n-  #141 = Utf8               writeByte\n-  #142 = Utf8               writeShort\n-  #143 = Utf8               constantToString\n-  #144 = Utf8               (IB)Ljava/lang/String;\n-  #145 = Utf8               getItemName\n-  #146 = Utf8               (I)Ljava/lang/String;\n+   #57 = Class              #125          // java/io/DataInput\n+   #58 = Class              #126          // org/apache/bcel/classfile/ConstantPool\n+   #59 = Utf8               Exceptions\n+   #60 = Class              #127          // java/io/IOException\n+   #61 = Utf8               checkType\n+   #62 = Utf8               (B)B\n+   #63 = Utf8               copy\n+   #64 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+   #65 = Utf8               dump\n+   #66 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #67 = Utf8               Ljava/io/DataOutputStream;\n+   #68 = Utf8               getConstantPool\n+   #69 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+   #70 = Utf8               getIndex\n+   #71 = Utf8               ()I\n+   #72 = Utf8               getType\n+   #73 = Utf8               ()B\n+   #74 = Utf8               hasIndex\n+   #75 = Utf8               ()Z\n+   #76 = Utf8               printIndex\n+   #77 = Utf8               ()Ljava/lang/String;\n+   #78 = Utf8               setConstantPool\n+   #79 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #80 = Utf8               setIndex\n+   #81 = Utf8               (I)V\n+   #82 = Utf8               setType\n+   #83 = Utf8               (B)V\n+   #84 = Utf8               toString\n+   #85 = Utf8               <clinit>\n+   #86 = Utf8               ()V\n+   #87 = Utf8               SourceFile\n+   #88 = Utf8               StackMapType.java\n+   #89 = NameAndType        #45:#86       // \"<init>\":()V\n+   #90 = NameAndType        #41:#42       // index:I\n+   #91 = NameAndType        #61:#62       // checkType:(B)B\n+   #92 = NameAndType        #39:#40       // type:B\n+   #93 = NameAndType        #43:#44       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #94 = NameAndType        #128:#73      // readByte:()B\n+   #95 = NameAndType        #45:#46       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #96 = NameAndType        #74:#75       // hasIndex:()Z\n+   #97 = NameAndType        #129:#71      // readUnsignedShort:()I\n+   #98 = Utf8               org/apache/bcel/Const\n+   #99 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+  #100 = Utf8               java/lang/StringBuilder\n+  #101 = Utf8               Illegal type for StackMapType:\n+  #102 = NameAndType        #130:#131     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #103 = NameAndType        #130:#132     // append:(I)Ljava/lang/StringBuilder;\n+  #104 = NameAndType        #84:#77       // toString:()Ljava/lang/String;\n+  #105 = NameAndType        #45:#133      // \"<init>\":(Ljava/lang/String;)V\n+  #106 = NameAndType        #134:#135     // clone:()Ljava/lang/Object;\n+  #107 = Utf8               org/apache/bcel/classfile/StackMapType\n+  #108 = Utf8               java/lang/CloneNotSupportedException\n+  #109 = Class              #136          // java/io/DataOutputStream\n+  #110 = NameAndType        #137:#81      // writeByte:(I)V\n+  #111 = NameAndType        #70:#71       // getIndex:()I\n+  #112 = NameAndType        #138:#81      // writeShort:(I)V\n+  #113 = Utf8               , class=<unknown>\n+  #114 = Utf8               , class=\n+  #115 = NameAndType        #139:#140     // constantToString:(IB)Ljava/lang/String;\n+  #116 = Utf8               , offset=\n+  #117 = Utf8\n+  #118 = Utf8               (type=\n+  #119 = NameAndType        #141:#142     // getItemName:(I)Ljava/lang/String;\n+  #120 = NameAndType        #76:#77       // printIndex:()Ljava/lang/String;\n+  #121 = Utf8               )\n+  #122 = NameAndType        #37:#38       // EMPTY_ARRAY:[Lorg/apache/bcel/classfile/StackMapType;\n+  #123 = Utf8               java/lang/Object\n+  #124 = Utf8               java/lang/Cloneable\n+  #125 = Utf8               java/io/DataInput\n+  #126 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #127 = Utf8               java/io/IOException\n+  #128 = Utf8               readByte\n+  #129 = Utf8               readUnsignedShort\n+  #130 = Utf8               append\n+  #131 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #132 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #133 = Utf8               (Ljava/lang/String;)V\n+  #134 = Utf8               clone\n+  #135 = Utf8               ()Ljava/lang/Object;\n+  #136 = Utf8               java/io/DataOutputStream\n+  #137 = Utf8               writeByte\n+  #138 = Utf8               writeShort\n+  #139 = Utf8               constantToString\n+  #140 = Utf8               (IB)Ljava/lang/String;\n+  #141 = Utf8               getItemName\n+  #142 = Utf8               (I)Ljava/lang/String;\n {\n   public static final org.apache.bcel.classfile.StackMapType[] EMPTY_ARRAY;\n     descriptor: [Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private byte type;\n     descriptor: B\n"}]}
