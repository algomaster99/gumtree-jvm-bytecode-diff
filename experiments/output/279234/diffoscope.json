{"diffoscope-json-version": 1, "source1": "first/ExtraFieldUtils$UnparseableExtraField.class", "source2": "second/ExtraFieldUtils$UnparseableExtraField.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,36 +9,36 @@\n     public static final int SKIP_KEY = 1;\n     public static final int READ_KEY = 2;\n     public static final UnparseableExtraField THROW;\n     public static final UnparseableExtraField SKIP;\n     public static final UnparseableExtraField READ;\n     private final int key;\n     \n-    private UnparseableExtraField(final int k) {\n-        this.key = k;\n+    private UnparseableExtraField(final int key) {\n+        this.key = key;\n     }\n     \n     public int getKey() {\n         return this.key;\n     }\n     \n-    public ZipExtraField onUnparseableExtraField(final byte[] data, final int off, final int len, final boolean local, final int claimedLength) throws ZipException {\n+    public ZipExtraField onUnparseableExtraField(final byte[] array, final int i, final int n, final boolean b, final int j) throws ZipException {\n         switch (this.key) {\n             case 0: {\n-                throw new ZipException(\"Bad extra field starting at \" + off + \".  Block length of \" + claimedLength + \" bytes exceeds remaining data of \" + (len - 4) + \" bytes.\");\n+                throw new ZipException(\"Bad extra field starting at \" + i + \".  Block length of \" + j + \" bytes exceeds remaining data of \" + (n - 4) + \" bytes.\");\n             }\n             case 2: {\n-                final UnparseableExtraFieldData field = new UnparseableExtraFieldData();\n-                if (local) {\n-                    field.parseFromLocalFileData(data, off, len);\n+                final UnparseableExtraFieldData unparseableExtraFieldData = new UnparseableExtraFieldData();\n+                if (b) {\n+                    unparseableExtraFieldData.parseFromLocalFileData(array, i, n);\n                 }\n                 else {\n-                    field.parseFromCentralDirectoryData(data, off, len);\n+                    unparseableExtraFieldData.parseFromCentralDirectoryData(array, i, n);\n                 }\n-                return (ZipExtraField)field;\n+                return (ZipExtraField)unparseableExtraFieldData;\n             }\n             case 1: {\n                 return null;\n             }\n             default: {\n                 throw new ZipException(\"Unknown UnparseableExtraField key: \" + this.key);\n             }\n"}]}
