{"diffoscope-json-version": 1, "source1": "first/RegexFileFilter.class", "source2": "second/RegexFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,107 +1,104 @@\n-  SHA-256 checksum fc1eba14d1348326bd46ca4e9a10763b8672655f2b4b3bd7035e5bf6f51f475b\n+  SHA-256 checksum c98698aded847d6e630a8f817520d100440d61c2571110ba050059b932216cf7\n   Compiled from \"RegexFileFilter.java\"\n public class org.apache.commons.io.filefilter.RegexFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #14                         // org/apache/commons/io/filefilter/RegexFileFilter\n   super_class: #15                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #15.#56        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #57            // java/lang/IllegalArgumentException\n-   #3 = String             #58            // Pattern is missing\n-   #4 = Methodref          #2.#59         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #5 = Fieldref           #14.#60        // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n-   #6 = Methodref          #9.#61         // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #7 = Methodref          #9.#62         // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #8 = Methodref          #63.#64        // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n-   #9 = Class              #65            // java/util/regex/Pattern\n-  #10 = Methodref          #9.#66         // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #11 = Methodref          #67.#68        // java/util/regex/Matcher.matches:()Z\n-  #12 = InterfaceMethodref #69.#70        // java/nio/file/Path.toString:()Ljava/lang/String;\n-  #13 = Methodref          #14.#71        // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #14 = Class              #72            // org/apache/commons/io/filefilter/RegexFileFilter\n-  #15 = Class              #73            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #16 = Class              #74            // java/io/Serializable\n+   #1 = Methodref          #15.#54        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #55            // java/lang/IllegalArgumentException\n+   #3 = String             #56            // Pattern is missing\n+   #4 = Methodref          #2.#57         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #5 = Fieldref           #14.#58        // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n+   #6 = Methodref          #9.#59         // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #7 = Methodref          #9.#60         // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #8 = Methodref          #41.#61        // org/apache/commons/io/IOCase.isCaseSensitive:()Z\n+   #9 = Class              #62            // java/util/regex/Pattern\n+  #10 = Methodref          #9.#63         // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #11 = Methodref          #64.#65        // java/util/regex/Matcher.matches:()Z\n+  #12 = InterfaceMethodref #66.#67        // java/nio/file/Path.toString:()Ljava/lang/String;\n+  #13 = Methodref          #14.#68        // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #14 = Class              #69            // org/apache/commons/io/filefilter/RegexFileFilter\n+  #15 = Class              #70            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #16 = Class              #71            // java/io/Serializable\n   #17 = Utf8               serialVersionUID\n   #18 = Utf8               J\n   #19 = Utf8               ConstantValue\n   #20 = Long               4269646126155225062l\n   #22 = Utf8               pattern\n   #23 = Utf8               Ljava/util/regex/Pattern;\n   #24 = Utf8               <init>\n   #25 = Utf8               (Ljava/util/regex/Pattern;)V\n   #26 = Utf8               Code\n   #27 = Utf8               LineNumberTable\n   #28 = Utf8               LocalVariableTable\n   #29 = Utf8               this\n   #30 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n   #31 = Utf8               StackMapTable\n-  #32 = Class              #72            // org/apache/commons/io/filefilter/RegexFileFilter\n-  #33 = Class              #65            // java/util/regex/Pattern\n-  #34 = Utf8               (Ljava/lang/String;)V\n-  #35 = Utf8               Ljava/lang/String;\n-  #36 = Class              #75            // java/lang/String\n-  #37 = Utf8               (Ljava/lang/String;I)V\n-  #38 = Utf8               flags\n-  #39 = Utf8               I\n-  #40 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #41 = Utf8               caseSensitivity\n-  #42 = Utf8               Lorg/apache/commons/io/IOCase;\n-  #43 = Class              #76            // org/apache/commons/io/IOCase\n-  #44 = Utf8               accept\n-  #45 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #46 = Utf8               dir\n-  #47 = Utf8               Ljava/io/File;\n-  #48 = Utf8               name\n-  #49 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #50 = Utf8               path\n-  #51 = Utf8               Ljava/nio/file/Path;\n-  #52 = Utf8               attributes\n-  #53 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #54 = Utf8               SourceFile\n-  #55 = Utf8               RegexFileFilter.java\n-  #56 = NameAndType        #24:#77        // \"<init>\":()V\n-  #57 = Utf8               java/lang/IllegalArgumentException\n-  #58 = Utf8               Pattern is missing\n-  #59 = NameAndType        #24:#34        // \"<init>\":(Ljava/lang/String;)V\n-  #60 = NameAndType        #22:#23        // pattern:Ljava/util/regex/Pattern;\n-  #61 = NameAndType        #78:#79        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #62 = NameAndType        #78:#80        // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #63 = Class              #76            // org/apache/commons/io/IOCase\n-  #64 = NameAndType        #81:#82        // isCaseSensitive:()Z\n-  #65 = Utf8               java/util/regex/Pattern\n-  #66 = NameAndType        #83:#84        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #67 = Class              #85            // java/util/regex/Matcher\n-  #68 = NameAndType        #86:#82        // matches:()Z\n-  #69 = Class              #87            // java/nio/file/Path\n-  #70 = NameAndType        #88:#89        // toString:()Ljava/lang/String;\n-  #71 = NameAndType        #90:#91        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #72 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n-  #73 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #74 = Utf8               java/io/Serializable\n-  #75 = Utf8               java/lang/String\n-  #76 = Utf8               org/apache/commons/io/IOCase\n-  #77 = Utf8               ()V\n-  #78 = Utf8               compile\n-  #79 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #80 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #81 = Utf8               isCaseSensitive\n-  #82 = Utf8               ()Z\n-  #83 = Utf8               matcher\n-  #84 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #85 = Utf8               java/util/regex/Matcher\n-  #86 = Utf8               matches\n-  #87 = Utf8               java/nio/file/Path\n-  #88 = Utf8               toString\n-  #89 = Utf8               ()Ljava/lang/String;\n-  #90 = Utf8               toFileVisitResult\n-  #91 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #32 = Utf8               (Ljava/lang/String;)V\n+  #33 = Utf8               Ljava/lang/String;\n+  #34 = Class              #72            // java/lang/String\n+  #35 = Utf8               (Ljava/lang/String;I)V\n+  #36 = Utf8               flags\n+  #37 = Utf8               I\n+  #38 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #39 = Utf8               caseSensitivity\n+  #40 = Utf8               Lorg/apache/commons/io/IOCase;\n+  #41 = Class              #73            // org/apache/commons/io/IOCase\n+  #42 = Utf8               accept\n+  #43 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #44 = Utf8               dir\n+  #45 = Utf8               Ljava/io/File;\n+  #46 = Utf8               name\n+  #47 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #48 = Utf8               path\n+  #49 = Utf8               Ljava/nio/file/Path;\n+  #50 = Utf8               attributes\n+  #51 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               RegexFileFilter.java\n+  #54 = NameAndType        #24:#74        // \"<init>\":()V\n+  #55 = Utf8               java/lang/IllegalArgumentException\n+  #56 = Utf8               Pattern is missing\n+  #57 = NameAndType        #24:#32        // \"<init>\":(Ljava/lang/String;)V\n+  #58 = NameAndType        #22:#23        // pattern:Ljava/util/regex/Pattern;\n+  #59 = NameAndType        #75:#76        // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #60 = NameAndType        #75:#77        // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #61 = NameAndType        #78:#79        // isCaseSensitive:()Z\n+  #62 = Utf8               java/util/regex/Pattern\n+  #63 = NameAndType        #80:#81        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #64 = Class              #82            // java/util/regex/Matcher\n+  #65 = NameAndType        #83:#79        // matches:()Z\n+  #66 = Class              #84            // java/nio/file/Path\n+  #67 = NameAndType        #85:#86        // toString:()Ljava/lang/String;\n+  #68 = NameAndType        #87:#88        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #69 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n+  #70 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #71 = Utf8               java/io/Serializable\n+  #72 = Utf8               java/lang/String\n+  #73 = Utf8               org/apache/commons/io/IOCase\n+  #74 = Utf8               ()V\n+  #75 = Utf8               compile\n+  #76 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #77 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+  #78 = Utf8               isCaseSensitive\n+  #79 = Utf8               ()Z\n+  #80 = Utf8               matcher\n+  #81 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #82 = Utf8               java/util/regex/Matcher\n+  #83 = Utf8               matches\n+  #84 = Utf8               java/nio/file/Path\n+  #85 = Utf8               toString\n+  #86 = Utf8               ()Ljava/lang/String;\n+  #87 = Utf8               toFileVisitResult\n+  #88 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n {\n   private static final long serialVersionUID = 4269646126155225062l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 4269646126155225062l\n \n   private final java.util.regex.Pattern pattern;\n"}]}
