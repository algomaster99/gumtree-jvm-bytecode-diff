{"diffoscope-json-version": 1, "source1": "first/ArArchiveEntry.class", "source2": "second/ArArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,54 +1,54 @@\n-  SHA-256 checksum f8f5170487fcde808100954ccb081ba204f6f85371022d89e36c9511b7846164\n+  SHA-256 checksum ad05ed11fd398ff6b841295dbe1259340ea6285ed8c858b0d1a35227441c5941\n   Compiled from \"ArArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.ar.ArArchiveEntry implements org.apache.commons.compress.archivers.ArchiveEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n   super_class: #28                        // java/lang/Object\n   interfaces: 1, fields: 9, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Class              #82           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+    #1 = Class              #81           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n     #2 = Integer            33188\n-    #3 = Methodref          #83.#84       // java/lang/System.currentTimeMillis:()J\n+    #3 = Methodref          #82.#83       // java/lang/System.currentTimeMillis:()J\n     #4 = Long               1000l\n-    #6 = Methodref          #1.#85        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n-    #7 = Methodref          #28.#86       // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #1.#87        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.name:Ljava/lang/String;\n-    #9 = Class              #88           // java/lang/IllegalArgumentException\n-   #10 = String             #89           // length must not be negative\n-   #11 = Methodref          #9.#90        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #1.#91        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.length:J\n-   #13 = Fieldref           #1.#92        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.userId:I\n-   #14 = Fieldref           #1.#93        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.groupId:I\n-   #15 = Fieldref           #1.#94        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.mode:I\n-   #16 = Fieldref           #1.#95        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.lastModified:J\n-   #17 = Methodref          #96.#97       // java/io/File.isFile:()Z\n-   #18 = Methodref          #96.#98       // java/io/File.length:()J\n-   #19 = Methodref          #96.#99       // java/io/File.lastModified:()J\n-   #20 = Methodref          #100.#101     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #21 = Methodref          #100.#102     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-   #22 = Methodref          #100.#103     // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #23 = Methodref          #104.#105     // java/nio/file/attribute/FileTime.toMillis:()J\n-   #24 = Methodref          #1.#106       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n-   #25 = Class              #107          // java/util/Date\n-   #26 = Methodref          #1.#108       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n-   #27 = Methodref          #25.#109      // java/util/Date.\"<init>\":(J)V\n-   #28 = Class              #110          // java/lang/Object\n-   #29 = Methodref          #111.#112     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-   #30 = Methodref          #28.#113      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #31 = Methodref          #114.#115     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #32 = Class              #116          // org/apache/commons/compress/archivers/ArchiveEntry\n+    #6 = Methodref          #1.#84        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.\"<init>\":(Ljava/lang/String;JIIIJ)V\n+    #7 = Methodref          #28.#85       // java/lang/Object.\"<init>\":()V\n+    #8 = Fieldref           #1.#86        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.name:Ljava/lang/String;\n+    #9 = Class              #87           // java/lang/IllegalArgumentException\n+   #10 = String             #88           // length must not be negative\n+   #11 = Methodref          #9.#89        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #1.#90        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.length:J\n+   #13 = Fieldref           #1.#91        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.userId:I\n+   #14 = Fieldref           #1.#92        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.groupId:I\n+   #15 = Fieldref           #1.#93        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.mode:I\n+   #16 = Fieldref           #1.#94        // org/apache/commons/compress/archivers/ar/ArArchiveEntry.lastModified:J\n+   #17 = Methodref          #56.#95       // java/io/File.isFile:()Z\n+   #18 = Methodref          #56.#96       // java/io/File.length:()J\n+   #19 = Methodref          #56.#97       // java/io/File.lastModified:()J\n+   #20 = Methodref          #98.#99       // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #21 = Methodref          #98.#100      // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #22 = Methodref          #98.#101      // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #23 = Methodref          #102.#103     // java/nio/file/attribute/FileTime.toMillis:()J\n+   #24 = Methodref          #1.#104       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLength:()J\n+   #25 = Class              #105          // java/util/Date\n+   #26 = Methodref          #1.#106       // org/apache/commons/compress/archivers/ar/ArArchiveEntry.getLastModified:()J\n+   #27 = Methodref          #25.#107      // java/util/Date.\"<init>\":(J)V\n+   #28 = Class              #108          // java/lang/Object\n+   #29 = Methodref          #109.#110     // java/util/Objects.hash:([Ljava/lang/Object;)I\n+   #30 = Methodref          #28.#111      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #31 = Methodref          #54.#112      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #32 = Class              #113          // org/apache/commons/compress/archivers/ArchiveEntry\n    #33 = Utf8               HEADER\n    #34 = Utf8               Ljava/lang/String;\n    #35 = Utf8               ConstantValue\n-   #36 = String             #117          // !<arch>\\n\n+   #36 = String             #114          // !<arch>\\n\n    #37 = Utf8               TRAILER\n-   #38 = String             #118          // `\\n\n+   #38 = String             #115          // `\\n\n    #39 = Utf8               name\n    #40 = Utf8               userId\n    #41 = Utf8               I\n    #42 = Utf8               groupId\n    #43 = Utf8               mode\n    #44 = Utf8               DEFAULT_MODE\n    #45 = Utf8               lastModified\n@@ -56,104 +56,101 @@\n    #47 = Utf8               length\n    #48 = Utf8               <init>\n    #49 = Utf8               (Ljava/lang/String;J)V\n    #50 = Utf8               Code\n    #51 = Utf8               LineNumberTable\n    #52 = Utf8               (Ljava/lang/String;JIIIJ)V\n    #53 = Utf8               StackMapTable\n-   #54 = Class              #82           // org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-   #55 = Class              #119          // java/lang/String\n-   #56 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #57 = Class              #120          // java/io/File\n-   #58 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n-   #59 = Class              #121          // java/nio/file/Path\n-   #60 = Class              #122          // \"[Ljava/nio/file/LinkOption;\"\n-   #61 = Utf8               Exceptions\n-   #62 = Class              #123          // java/io/IOException\n-   #63 = Utf8               getSize\n-   #64 = Utf8               ()J\n-   #65 = Utf8               getName\n-   #66 = Utf8               ()Ljava/lang/String;\n-   #67 = Utf8               getUserId\n-   #68 = Utf8               ()I\n-   #69 = Utf8               getGroupId\n-   #70 = Utf8               getMode\n-   #71 = Utf8               getLastModified\n-   #72 = Utf8               getLastModifiedDate\n-   #73 = Utf8               ()Ljava/util/Date;\n-   #74 = Utf8               getLength\n-   #75 = Utf8               isDirectory\n-   #76 = Utf8               ()Z\n-   #77 = Utf8               hashCode\n-   #78 = Utf8               equals\n-   #79 = Utf8               (Ljava/lang/Object;)Z\n-   #80 = Utf8               SourceFile\n-   #81 = Utf8               ArArchiveEntry.java\n-   #82 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n-   #83 = Class              #124          // java/lang/System\n-   #84 = NameAndType        #125:#64      // currentTimeMillis:()J\n-   #85 = NameAndType        #48:#52       // \"<init>\":(Ljava/lang/String;JIIIJ)V\n-   #86 = NameAndType        #48:#126      // \"<init>\":()V\n-   #87 = NameAndType        #39:#34       // name:Ljava/lang/String;\n-   #88 = Utf8               java/lang/IllegalArgumentException\n-   #89 = Utf8               length must not be negative\n-   #90 = NameAndType        #48:#127      // \"<init>\":(Ljava/lang/String;)V\n-   #91 = NameAndType        #47:#46       // length:J\n-   #92 = NameAndType        #40:#41       // userId:I\n-   #93 = NameAndType        #42:#41       // groupId:I\n-   #94 = NameAndType        #43:#41       // mode:I\n-   #95 = NameAndType        #45:#46       // lastModified:J\n-   #96 = Class              #120          // java/io/File\n-   #97 = NameAndType        #128:#76      // isFile:()Z\n-   #98 = NameAndType        #47:#64       // length:()J\n-   #99 = NameAndType        #45:#64       // lastModified:()J\n-  #100 = Class              #129          // java/nio/file/Files\n-  #101 = NameAndType        #130:#131     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #102 = NameAndType        #132:#133     // size:(Ljava/nio/file/Path;)J\n-  #103 = NameAndType        #134:#135     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #104 = Class              #136          // java/nio/file/attribute/FileTime\n-  #105 = NameAndType        #137:#64      // toMillis:()J\n-  #106 = NameAndType        #74:#64       // getLength:()J\n-  #107 = Utf8               java/util/Date\n-  #108 = NameAndType        #71:#64       // getLastModified:()J\n-  #109 = NameAndType        #48:#138      // \"<init>\":(J)V\n-  #110 = Utf8               java/lang/Object\n-  #111 = Class              #139          // java/util/Objects\n-  #112 = NameAndType        #140:#141     // hash:([Ljava/lang/Object;)I\n-  #113 = NameAndType        #142:#143     // getClass:()Ljava/lang/Class;\n-  #114 = Class              #119          // java/lang/String\n-  #115 = NameAndType        #78:#79       // equals:(Ljava/lang/Object;)Z\n-  #116 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #117 = Utf8               !<arch>\\n\n-  #118 = Utf8               `\\n\n-  #119 = Utf8               java/lang/String\n-  #120 = Utf8               java/io/File\n-  #121 = Utf8               java/nio/file/Path\n-  #122 = Utf8               [Ljava/nio/file/LinkOption;\n-  #123 = Utf8               java/io/IOException\n-  #124 = Utf8               java/lang/System\n-  #125 = Utf8               currentTimeMillis\n-  #126 = Utf8               ()V\n-  #127 = Utf8               (Ljava/lang/String;)V\n-  #128 = Utf8               isFile\n-  #129 = Utf8               java/nio/file/Files\n-  #130 = Utf8               isRegularFile\n-  #131 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #132 = Utf8               size\n-  #133 = Utf8               (Ljava/nio/file/Path;)J\n-  #134 = Utf8               getLastModifiedTime\n-  #135 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-  #136 = Utf8               java/nio/file/attribute/FileTime\n-  #137 = Utf8               toMillis\n-  #138 = Utf8               (J)V\n-  #139 = Utf8               java/util/Objects\n-  #140 = Utf8               hash\n-  #141 = Utf8               ([Ljava/lang/Object;)I\n-  #142 = Utf8               getClass\n-  #143 = Utf8               ()Ljava/lang/Class;\n+   #54 = Class              #116          // java/lang/String\n+   #55 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #56 = Class              #117          // java/io/File\n+   #57 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)V\n+   #58 = Class              #118          // java/nio/file/Path\n+   #59 = Class              #119          // \"[Ljava/nio/file/LinkOption;\"\n+   #60 = Utf8               Exceptions\n+   #61 = Class              #120          // java/io/IOException\n+   #62 = Utf8               getSize\n+   #63 = Utf8               ()J\n+   #64 = Utf8               getName\n+   #65 = Utf8               ()Ljava/lang/String;\n+   #66 = Utf8               getUserId\n+   #67 = Utf8               ()I\n+   #68 = Utf8               getGroupId\n+   #69 = Utf8               getMode\n+   #70 = Utf8               getLastModified\n+   #71 = Utf8               getLastModifiedDate\n+   #72 = Utf8               ()Ljava/util/Date;\n+   #73 = Utf8               getLength\n+   #74 = Utf8               isDirectory\n+   #75 = Utf8               ()Z\n+   #76 = Utf8               hashCode\n+   #77 = Utf8               equals\n+   #78 = Utf8               (Ljava/lang/Object;)Z\n+   #79 = Utf8               SourceFile\n+   #80 = Utf8               ArArchiveEntry.java\n+   #81 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveEntry\n+   #82 = Class              #121          // java/lang/System\n+   #83 = NameAndType        #122:#63      // currentTimeMillis:()J\n+   #84 = NameAndType        #48:#52       // \"<init>\":(Ljava/lang/String;JIIIJ)V\n+   #85 = NameAndType        #48:#123      // \"<init>\":()V\n+   #86 = NameAndType        #39:#34       // name:Ljava/lang/String;\n+   #87 = Utf8               java/lang/IllegalArgumentException\n+   #88 = Utf8               length must not be negative\n+   #89 = NameAndType        #48:#124      // \"<init>\":(Ljava/lang/String;)V\n+   #90 = NameAndType        #47:#46       // length:J\n+   #91 = NameAndType        #40:#41       // userId:I\n+   #92 = NameAndType        #42:#41       // groupId:I\n+   #93 = NameAndType        #43:#41       // mode:I\n+   #94 = NameAndType        #45:#46       // lastModified:J\n+   #95 = NameAndType        #125:#75      // isFile:()Z\n+   #96 = NameAndType        #47:#63       // length:()J\n+   #97 = NameAndType        #45:#63       // lastModified:()J\n+   #98 = Class              #126          // java/nio/file/Files\n+   #99 = NameAndType        #127:#128     // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #100 = NameAndType        #129:#130     // size:(Ljava/nio/file/Path;)J\n+  #101 = NameAndType        #131:#132     // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #102 = Class              #133          // java/nio/file/attribute/FileTime\n+  #103 = NameAndType        #134:#63      // toMillis:()J\n+  #104 = NameAndType        #73:#63       // getLength:()J\n+  #105 = Utf8               java/util/Date\n+  #106 = NameAndType        #70:#63       // getLastModified:()J\n+  #107 = NameAndType        #48:#135      // \"<init>\":(J)V\n+  #108 = Utf8               java/lang/Object\n+  #109 = Class              #136          // java/util/Objects\n+  #110 = NameAndType        #137:#138     // hash:([Ljava/lang/Object;)I\n+  #111 = NameAndType        #139:#140     // getClass:()Ljava/lang/Class;\n+  #112 = NameAndType        #77:#78       // equals:(Ljava/lang/Object;)Z\n+  #113 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #114 = Utf8               !<arch>\\n\n+  #115 = Utf8               `\\n\n+  #116 = Utf8               java/lang/String\n+  #117 = Utf8               java/io/File\n+  #118 = Utf8               java/nio/file/Path\n+  #119 = Utf8               [Ljava/nio/file/LinkOption;\n+  #120 = Utf8               java/io/IOException\n+  #121 = Utf8               java/lang/System\n+  #122 = Utf8               currentTimeMillis\n+  #123 = Utf8               ()V\n+  #124 = Utf8               (Ljava/lang/String;)V\n+  #125 = Utf8               isFile\n+  #126 = Utf8               java/nio/file/Files\n+  #127 = Utf8               isRegularFile\n+  #128 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #129 = Utf8               size\n+  #130 = Utf8               (Ljava/nio/file/Path;)J\n+  #131 = Utf8               getLastModifiedTime\n+  #132 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+  #133 = Utf8               java/nio/file/attribute/FileTime\n+  #134 = Utf8               toMillis\n+  #135 = Utf8               (J)V\n+  #136 = Utf8               java/util/Objects\n+  #137 = Utf8               hash\n+  #138 = Utf8               ([Ljava/lang/Object;)I\n+  #139 = Utf8               getClass\n+  #140 = Utf8               ()Ljava/lang/Class;\n {\n   public static final java.lang.String HEADER = \"!<arch>\\n\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String !<arch>\\n\n \n   public static final java.lang.String TRAILER = \"`\\n\";\n"}]}
