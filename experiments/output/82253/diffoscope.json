{"diffoscope-json-version": 1, "source1": "first/ZipArchiveEntryRequest.class", "source2": "second/ZipArchiveEntryRequest.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,60 +1,60 @@\n-  SHA-256 checksum 8dae1c0dffa4b5b3d6556da517b5e552494b3b7c8a20905a4707a71df77bf67f\n+  SHA-256 checksum 888db343099596c3236f12ad84fb8c1d275fd7a07afc32b105343db6f121dc13\n   Compiled from \"ZipArchiveEntryRequest.java\"\n public class org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-  super_class: #8                         // java/lang/Object\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 5, attributes: 1\n Constant pool:\n    #1 = Class              #2             // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n    #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n-   #3 = Methodref          #1.#4          // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-   #4 = NameAndType        #5:#6          // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n-   #7 = Methodref          #8.#9          // java/lang/Object.\"<init>\":()V\n-   #8 = Class              #10            // java/lang/Object\n-   #9 = NameAndType        #5:#11         // \"<init>\":()V\n-  #10 = Utf8               java/lang/Object\n-  #11 = Utf8               ()V\n-  #12 = Fieldref           #1.#13         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #13 = NameAndType        #14:#15        // zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #14 = Utf8               zipArchiveEntry\n-  #15 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #16 = Fieldref           #1.#17         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-  #17 = NameAndType        #18:#19        // payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-  #18 = Utf8               payloadSupplier\n-  #19 = Utf8               Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-  #20 = Methodref          #21.#22        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-  #21 = Class              #23            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #22 = NameAndType        #24:#25        // getMethod:()I\n-  #23 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #24 = Utf8               getMethod\n-  #25 = Utf8               ()I\n-  #26 = Fieldref           #1.#27         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.method:I\n-  #27 = NameAndType        #28:#29        // method:I\n-  #28 = Utf8               method\n-  #29 = Utf8               I\n-  #30 = InterfaceMethodref #31.#32        // org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n-  #31 = Class              #33            // org/apache/commons/compress/parallel/InputStreamSupplier\n-  #32 = NameAndType        #34:#35        // get:()Ljava/io/InputStream;\n-  #33 = Utf8               org/apache/commons/compress/parallel/InputStreamSupplier\n-  #34 = Utf8               get\n-  #35 = Utf8               ()Ljava/io/InputStream;\n-  #36 = Utf8               createZipArchiveEntryRequest\n-  #37 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #38 = Utf8               Code\n-  #39 = Utf8               LineNumberTable\n-  #40 = Utf8               LocalVariableTable\n-  #41 = Utf8               this\n-  #42 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n-  #43 = Utf8               getPayloadStream\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               zipArchiveEntry\n+   #6 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #7 = Utf8               payloadSupplier\n+   #8 = Utf8               Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+   #9 = Utf8               method\n+  #10 = Utf8               I\n+  #11 = Utf8               createZipArchiveEntryRequest\n+  #12 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #13 = Utf8               Code\n+  #14 = Methodref          #1.#15         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #15 = NameAndType        #16:#17        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #16 = Utf8               <init>\n+  #17 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+  #18 = Utf8               LineNumberTable\n+  #19 = Utf8               LocalVariableTable\n+  #20 = Methodref          #3.#21         // java/lang/Object.\"<init>\":()V\n+  #21 = NameAndType        #16:#22        // \"<init>\":()V\n+  #22 = Utf8               ()V\n+  #23 = Fieldref           #1.#24         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #24 = NameAndType        #5:#6          // zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #25 = Fieldref           #1.#26         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+  #26 = NameAndType        #7:#8          // payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+  #27 = Methodref          #28.#30        // org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+  #28 = Class              #29            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #29 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #30 = NameAndType        #31:#32        // getMethod:()I\n+  #31 = Utf8               getMethod\n+  #32 = Utf8               ()I\n+  #33 = Fieldref           #1.#34         // org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest.method:I\n+  #34 = NameAndType        #9:#10         // method:I\n+  #35 = Utf8               this\n+  #36 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n+  #37 = Utf8               getPayloadStream\n+  #38 = Utf8               ()Ljava/io/InputStream;\n+  #39 = InterfaceMethodref #40.#42        // org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n+  #40 = Class              #41            // org/apache/commons/compress/parallel/InputStreamSupplier\n+  #41 = Utf8               org/apache/commons/compress/parallel/InputStreamSupplier\n+  #42 = NameAndType        #43:#38        // get:()Ljava/io/InputStream;\n+  #43 = Utf8               get\n   #44 = Utf8               getZipArchiveEntry\n   #45 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n   #46 = Utf8               SourceFile\n   #47 = Utf8               ZipArchiveEntryRequest.java\n {\n   private final org.apache.commons.compress.archivers.zip.ZipArchiveEntry zipArchiveEntry;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n@@ -73,40 +73,40 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: new           #1                  // class org/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest\n          3: dup\n          4: aload_0\n          5: aload_1\n-         6: invokespecial #3                  // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n+         6: invokespecial #14                 // Method \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n          9: areturn\n       LineNumberTable:\n         line 38: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 zipArchiveEntry   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n             0      10     1 payloadSupplier   Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n \n   private org.apache.commons.compress.archivers.zip.ZipArchiveEntryRequest(org.apache.commons.compress.archivers.zip.ZipArchiveEntry, org.apache.commons.compress.parallel.InputStreamSupplier);\n     descriptor: (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;Lorg/apache/commons/compress/parallel/InputStreamSupplier;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #20                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #12                 // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         6: putfield      #23                 // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #16                 // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+        11: putfield      #25                 // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n         14: aload_0\n         15: aload_1\n-        16: invokevirtual #20                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n-        19: putfield      #26                 // Field method:I\n+        16: invokevirtual #27                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveEntry.getMethod:()I\n+        19: putfield      #33                 // Field method:I\n         22: return\n       LineNumberTable:\n         line 51: 0\n         line 53: 4\n         line 54: 9\n         line 55: 14\n         line 56: 22\n@@ -118,44 +118,44 @@\n \n   public int getMethod();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field method:I\n+         1: getfield      #33                 // Field method:I\n          4: ireturn\n       LineNumberTable:\n         line 63: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n \n   public java.io.InputStream getPayloadStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n-         4: invokeinterface #30,  1           // InterfaceMethod org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n+         1: getfield      #25                 // Field payloadSupplier:Lorg/apache/commons/compress/parallel/InputStreamSupplier;\n+         4: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/compress/parallel/InputStreamSupplier.get:()Ljava/io/InputStream;\n          9: areturn\n       LineNumberTable:\n         line 71: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n \n   org.apache.commons.compress.archivers.zip.ZipArchiveEntry getZipArchiveEntry();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+         1: getfield      #23                 // Field zipArchiveEntry:Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n          4: areturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntryRequest;\n }\n"}]}
