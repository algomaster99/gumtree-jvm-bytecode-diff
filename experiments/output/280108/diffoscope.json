{"diffoscope-json-version": 1, "source1": "first/ConfigurationNodePointerFactory.class", "source2": "second/ConfigurationNodePointerFactory.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,27 +11,27 @@\n {\n     public static final int CONFIGURATION_NODE_POINTER_FACTORY_ORDER = 200;\n     \n     public int getOrder() {\n         return 200;\n     }\n     \n-    public NodePointer createNodePointer(final QName name, final Object bean, final Locale locale) {\n-        if (bean instanceof ConfigurationNodePointerFactory.NodeWrapper) {\n-            final ConfigurationNodePointerFactory.NodeWrapper<Object> wrapper = (ConfigurationNodePointerFactory.NodeWrapper<Object>)bean;\n-            return (NodePointer)new ConfigurationNodePointer(wrapper.getNode(), locale, wrapper.getNodeHandler());\n+    public NodePointer createNodePointer(final QName qName, final Object o, final Locale locale) {\n+        if (o instanceof ConfigurationNodePointerFactory.NodeWrapper) {\n+            final ConfigurationNodePointerFactory.NodeWrapper nodeWrapper = (ConfigurationNodePointerFactory.NodeWrapper)o;\n+            return (NodePointer)new ConfigurationNodePointer(nodeWrapper.getNode(), locale, nodeWrapper.getNodeHandler());\n         }\n         return null;\n     }\n     \n-    public NodePointer createNodePointer(final NodePointer parent, final QName name, final Object bean) {\n-        if (bean instanceof ConfigurationNodePointerFactory.NodeWrapper) {\n-            final ConfigurationNodePointerFactory.NodeWrapper<Object> wrapper = (ConfigurationNodePointerFactory.NodeWrapper<Object>)bean;\n-            return (NodePointer)new ConfigurationNodePointer((ConfigurationNodePointer)parent, wrapper.getNode(), wrapper.getNodeHandler());\n+    public NodePointer createNodePointer(final NodePointer nodePointer, final QName qName, final Object o) {\n+        if (o instanceof ConfigurationNodePointerFactory.NodeWrapper) {\n+            final ConfigurationNodePointerFactory.NodeWrapper nodeWrapper = (ConfigurationNodePointerFactory.NodeWrapper)o;\n+            return (NodePointer)new ConfigurationNodePointer((ConfigurationNodePointer)nodePointer, nodeWrapper.getNode(), nodeWrapper.getNodeHandler());\n         }\n         return null;\n     }\n     \n-    public static <T> Object wrapNode(final T node, final NodeHandler<T> handler) {\n-        return new ConfigurationNodePointerFactory.NodeWrapper((Object)node, (NodeHandler)handler);\n+    public static <T> Object wrapNode(final T t, final NodeHandler<T> nodeHandler) {\n+        return new ConfigurationNodePointerFactory.NodeWrapper((Object)t, (NodeHandler)nodeHandler);\n     }\n }\n"}]}
