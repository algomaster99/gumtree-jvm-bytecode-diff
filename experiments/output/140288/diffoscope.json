{"diffoscope-json-version": 1, "source1": "first/MainFrameModel.class", "source2": "second/MainFrameModel.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -78,25 +78,27 @@\n                 this.reloadActionEnabled = true;\n                 DetailAST parseTree;\n                 if (this.parseMode == MainFrameModel.ParseMode.PLAIN_JAVA) {\n                     parseTree = JavaParser.parseFile(file, JavaParser.Options.WITHOUT_COMMENTS);\n                 }\n                 else {\n                     if (this.parseMode != MainFrameModel.ParseMode.JAVA_WITH_COMMENTS && this.parseMode != MainFrameModel.ParseMode.JAVA_WITH_JAVADOC_AND_COMMENTS) {\n-                        throw new IllegalArgumentException(\"Unknown mode: \" + String.valueOf((Object)this.parseMode));\n+                        throw new IllegalArgumentException(\"Unknown mode: \" + this.parseMode);\n                     }\n                     parseTree = JavaParser.parseFile(file, JavaParser.Options.WITH_COMMENTS);\n                 }\n                 this.parseTreeTableModel.setParseTree(parseTree);\n                 this.parseTreeTableModel.setParseMode(this.parseMode);\n                 final String[] sourceLines = getFileText(file).toLinesArray();\n                 final List<Integer> linesToPositionTemp = new ArrayList<Integer>(sourceLines.length + 1);\n                 linesToPositionTemp.add(Integer.valueOf(0));\n                 final StringBuilder sb = new StringBuilder(1024);\n-                for (final String element : sourceLines) {\n+                String[] array;\n+                for (int length = (array = sourceLines).length, i = 0; i < length; ++i) {\n+                    final String element = array[i];\n                     linesToPositionTemp.add(Integer.valueOf(sb.length()));\n                     sb.append(element).append(System.lineSeparator());\n                 }\n                 this.linesToPosition = linesToPositionTemp;\n                 this.text = sb.toString();\n             }\n             catch (final IOException ex) {\n"}]}
