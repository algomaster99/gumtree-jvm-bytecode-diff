{"diffoscope-json-version": 1, "source1": "first/ClosedOutputStream.class", "source2": "second/ClosedOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,64 +1,64 @@\n-  SHA-256 checksum dd2048ccfce1020e7571fa9c7e410578c7a1d019495c54c14b4e7e185064ed47\n+  SHA-256 checksum 2bd98ab83947047f970e6fe97fdcf2036800ce61f03af9ec9487f20d0ef5d07c\n   Compiled from \"ClosedOutputStream.java\"\n public class org.apache.commons.io.output.ClosedOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/io/output/ClosedOutputStream\n-  super_class: #15                        // java/io/OutputStream\n+  this_class: #32                         // org/apache/commons/io/output/ClosedOutputStream\n+  super_class: #2                         // java/io/OutputStream\n   interfaces: 0, fields: 1, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #15.#29        // java/io/OutputStream.\"<init>\":()V\n-   #2 = Class              #30            // java/io/IOException\n-   #3 = Class              #31            // java/lang/StringBuilder\n-   #4 = Methodref          #3.#29         // java/lang/StringBuilder.\"<init>\":()V\n-   #5 = String             #32            // write(\n-   #6 = Methodref          #3.#33         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #7 = Methodref          #3.#34         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #8 = String             #35            // ) failed: stream is closed\n-   #9 = Methodref          #3.#36         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Methodref          #2.#37         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #11 = String             #38            // flush() failed: stream is closed\n-  #12 = Class              #39            // org/apache/commons/io/output/ClosedOutputStream\n-  #13 = Methodref          #12.#29        // org/apache/commons/io/output/ClosedOutputStream.\"<init>\":()V\n-  #14 = Fieldref           #12.#40        // org/apache/commons/io/output/ClosedOutputStream.CLOSED_OUTPUT_STREAM:Lorg/apache/commons/io/output/ClosedOutputStream;\n-  #15 = Class              #41            // java/io/OutputStream\n-  #16 = Utf8               CLOSED_OUTPUT_STREAM\n-  #17 = Utf8               Lorg/apache/commons/io/output/ClosedOutputStream;\n-  #18 = Utf8               <init>\n-  #19 = Utf8               ()V\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               write\n-  #23 = Utf8               (I)V\n-  #24 = Utf8               Exceptions\n-  #25 = Utf8               flush\n-  #26 = Utf8               <clinit>\n-  #27 = Utf8               SourceFile\n-  #28 = Utf8               ClosedOutputStream.java\n-  #29 = NameAndType        #18:#19        // \"<init>\":()V\n-  #30 = Utf8               java/io/IOException\n-  #31 = Utf8               java/lang/StringBuilder\n-  #32 = Utf8               write(\n-  #33 = NameAndType        #42:#43        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #34 = NameAndType        #42:#44        // append:(I)Ljava/lang/StringBuilder;\n-  #35 = Utf8               ) failed: stream is closed\n-  #36 = NameAndType        #45:#46        // toString:()Ljava/lang/String;\n-  #37 = NameAndType        #18:#47        // \"<init>\":(Ljava/lang/String;)V\n-  #38 = Utf8               flush() failed: stream is closed\n-  #39 = Utf8               org/apache/commons/io/output/ClosedOutputStream\n-  #40 = NameAndType        #16:#17        // CLOSED_OUTPUT_STREAM:Lorg/apache/commons/io/output/ClosedOutputStream;\n-  #41 = Utf8               java/io/OutputStream\n-  #42 = Utf8               append\n-  #43 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #44 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #45 = Utf8               toString\n-  #46 = Utf8               ()Ljava/lang/String;\n-  #47 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // java/io/OutputStream.\"<init>\":()V\n+   #2 = Class              #4             // java/io/OutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/OutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/io/IOException\n+   #8 = Utf8               java/io/IOException\n+   #9 = Class              #10            // java/lang/StringBuilder\n+  #10 = Utf8               java/lang/StringBuilder\n+  #11 = Methodref          #9.#3          // java/lang/StringBuilder.\"<init>\":()V\n+  #12 = String             #13            // write(\n+  #13 = Utf8               write(\n+  #14 = Methodref          #9.#15         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #15 = NameAndType        #16:#17        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #16 = Utf8               append\n+  #17 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #18 = Methodref          #9.#19         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #19 = NameAndType        #16:#20        // append:(I)Ljava/lang/StringBuilder;\n+  #20 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #21 = String             #22            // ) failed: stream is closed\n+  #22 = Utf8               ) failed: stream is closed\n+  #23 = Methodref          #9.#24         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #24 = NameAndType        #25:#26        // toString:()Ljava/lang/String;\n+  #25 = Utf8               toString\n+  #26 = Utf8               ()Ljava/lang/String;\n+  #27 = Methodref          #7.#28         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #28 = NameAndType        #5:#29         // \"<init>\":(Ljava/lang/String;)V\n+  #29 = Utf8               (Ljava/lang/String;)V\n+  #30 = String             #31            // flush() failed: stream is closed\n+  #31 = Utf8               flush() failed: stream is closed\n+  #32 = Class              #33            // org/apache/commons/io/output/ClosedOutputStream\n+  #33 = Utf8               org/apache/commons/io/output/ClosedOutputStream\n+  #34 = Methodref          #32.#3         // org/apache/commons/io/output/ClosedOutputStream.\"<init>\":()V\n+  #35 = Fieldref           #32.#36        // org/apache/commons/io/output/ClosedOutputStream.CLOSED_OUTPUT_STREAM:Lorg/apache/commons/io/output/ClosedOutputStream;\n+  #36 = NameAndType        #37:#38        // CLOSED_OUTPUT_STREAM:Lorg/apache/commons/io/output/ClosedOutputStream;\n+  #37 = Utf8               CLOSED_OUTPUT_STREAM\n+  #38 = Utf8               Lorg/apache/commons/io/output/ClosedOutputStream;\n+  #39 = Utf8               Code\n+  #40 = Utf8               LineNumberTable\n+  #41 = Utf8               write\n+  #42 = Utf8               (I)V\n+  #43 = Utf8               Exceptions\n+  #44 = Utf8               flush\n+  #45 = Utf8               <clinit>\n+  #46 = Utf8               SourceFile\n+  #47 = Utf8               ClosedOutputStream.java\n {\n   public static final org.apache.commons.io.output.ClosedOutputStream CLOSED_OUTPUT_STREAM;\n     descriptor: Lorg/apache/commons/io/output/ClosedOutputStream;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public org.apache.commons.io.output.ClosedOutputStream();\n     descriptor: ()V\n@@ -72,55 +72,55 @@\n         line 31: 0\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #2                  // class java/io/IOException\n+         0: new           #7                  // class java/io/IOException\n          3: dup\n-         4: new           #3                  // class java/lang/StringBuilder\n+         4: new           #9                  // class java/lang/StringBuilder\n          7: dup\n-         8: invokespecial #4                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        11: ldc           #5                  // String write(\n-        13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         8: invokespecial #11                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        11: ldc           #12                 // String write(\n+        13: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: iload_1\n-        17: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        20: ldc           #8                  // String ) failed: stream is closed\n-        22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        28: invokespecial #10                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        17: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        20: ldc           #21                 // String ) failed: stream is closed\n+        22: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        28: invokespecial #27                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n       LineNumberTable:\n         line 46: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #2                  // class java/io/IOException\n+         0: new           #7                  // class java/io/IOException\n          3: dup\n-         4: ldc           #11                 // String flush() failed: stream is closed\n-         6: invokespecial #10                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #30                 // String flush() failed: stream is closed\n+         6: invokespecial #27                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 56: 0\n     Exceptions:\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #12                 // class org/apache/commons/io/output/ClosedOutputStream\n+         0: new           #32                 // class org/apache/commons/io/output/ClosedOutputStream\n          3: dup\n-         4: invokespecial #13                 // Method \"<init>\":()V\n-         7: putstatic     #14                 // Field CLOSED_OUTPUT_STREAM:Lorg/apache/commons/io/output/ClosedOutputStream;\n+         4: invokespecial #34                 // Method \"<init>\":()V\n+         7: putstatic     #35                 // Field CLOSED_OUTPUT_STREAM:Lorg/apache/commons/io/output/ClosedOutputStream;\n         10: return\n       LineNumberTable:\n         line 36: 0\n }\n SourceFile: \"ClosedOutputStream.java\"\n"}]}
