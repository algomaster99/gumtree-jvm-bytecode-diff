{"diffoscope-json-version": 1, "source1": "first/StackMapType.class", "source2": "second/StackMapType.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,51 +1,51 @@\n-  SHA-256 checksum d75e9758956c1c4aa6350ecf4743344715f5da35736b9b4e1c111165814a4d8f\n+  SHA-256 checksum 77bbe1da99b8eb742cf97f389a91da25c7ba90e0a8ce8e28ddb4f32a6feeb242\n   Compiled from \"StackMapType.java\"\n public final class org.apache.bcel.classfile.StackMapType implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #31                         // org/apache/bcel/classfile/StackMapType\n   super_class: #33                        // java/lang/Object\n   interfaces: 1, fields: 3, methods: 13, attributes: 1\n Constant pool:\n-    #1 = InterfaceMethodref #83.#84       // java/io/DataInput.readByte:()B\n-    #2 = Methodref          #31.#85       // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-    #3 = Methodref          #31.#86       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-    #4 = InterfaceMethodref #83.#87       // java/io/DataInput.readShort:()S\n-    #5 = Fieldref           #31.#88       // org/apache/bcel/classfile/StackMapType.index:I\n-    #6 = Fieldref           #31.#89       // org/apache/bcel/classfile/StackMapType.constant_pool:Lorg/apache/bcel/classfile/ConstantPool;\n-    #7 = Methodref          #33.#90       // java/lang/Object.\"<init>\":()V\n-    #8 = Class              #91           // org/apache/bcel/Const\n-    #9 = Class              #92           // java/lang/RuntimeException\n-   #10 = Class              #93           // java/lang/StringBuilder\n-   #11 = Methodref          #10.#90       // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #94           // Illegal type for StackMapType:\n-   #13 = Methodref          #10.#95       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#96       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #10.#97       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #9.#98        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Fieldref           #31.#99       // org/apache/bcel/classfile/StackMapType.type:B\n-   #18 = Methodref          #100.#101     // java/io/DataOutputStream.writeByte:(I)V\n-   #19 = Methodref          #31.#102      // org/apache/bcel/classfile/StackMapType.getIndex:()I\n-   #20 = Methodref          #100.#103     // java/io/DataOutputStream.writeShort:(I)V\n-   #21 = String             #104          // , class=<unknown>\n-   #22 = String             #105          // , class=\n-   #23 = Methodref          #106.#107     // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #24 = String             #108          // , offset=\n-   #25 = String             #109          //\n-   #26 = String             #110          // (type=\n-   #27 = Methodref          #8.#111       // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n-   #28 = Methodref          #31.#112      // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n-   #29 = String             #113          // )\n-   #30 = Methodref          #33.#114      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #31 = Class              #115          // org/apache/bcel/classfile/StackMapType\n-   #32 = Class              #116          // java/lang/CloneNotSupportedException\n-   #33 = Class              #117          // java/lang/Object\n-   #34 = Class              #118          // java/lang/Cloneable\n+    #1 = InterfaceMethodref #51.#81       // java/io/DataInput.readByte:()B\n+    #2 = Methodref          #31.#82       // org/apache/bcel/classfile/StackMapType.\"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+    #3 = Methodref          #31.#83       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+    #4 = InterfaceMethodref #51.#84       // java/io/DataInput.readShort:()S\n+    #5 = Fieldref           #31.#85       // org/apache/bcel/classfile/StackMapType.index:I\n+    #6 = Fieldref           #31.#86       // org/apache/bcel/classfile/StackMapType.constant_pool:Lorg/apache/bcel/classfile/ConstantPool;\n+    #7 = Methodref          #33.#87       // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #88           // org/apache/bcel/Const\n+    #9 = Class              #89           // java/lang/RuntimeException\n+   #10 = Class              #90           // java/lang/StringBuilder\n+   #11 = Methodref          #10.#87       // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #91           // Illegal type for StackMapType:\n+   #13 = Methodref          #10.#92       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#93       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #10.#94       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #9.#95        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Fieldref           #31.#96       // org/apache/bcel/classfile/StackMapType.type:B\n+   #18 = Methodref          #97.#98       // java/io/DataOutputStream.writeByte:(I)V\n+   #19 = Methodref          #31.#99       // org/apache/bcel/classfile/StackMapType.getIndex:()I\n+   #20 = Methodref          #97.#100      // java/io/DataOutputStream.writeShort:(I)V\n+   #21 = String             #101          // , class=<unknown>\n+   #22 = String             #102          // , class=\n+   #23 = Methodref          #52.#103      // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+   #24 = String             #104          // , offset=\n+   #25 = String             #105          //\n+   #26 = String             #106          // (type=\n+   #27 = Methodref          #8.#107       // org/apache/bcel/Const.getItemName:(I)Ljava/lang/String;\n+   #28 = Methodref          #31.#108      // org/apache/bcel/classfile/StackMapType.printIndex:()Ljava/lang/String;\n+   #29 = String             #109          // )\n+   #30 = Methodref          #33.#110      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #31 = Class              #111          // org/apache/bcel/classfile/StackMapType\n+   #32 = Class              #112          // java/lang/CloneNotSupportedException\n+   #33 = Class              #113          // java/lang/Object\n+   #34 = Class              #114          // java/lang/Cloneable\n    #35 = Utf8               type\n    #36 = Utf8               B\n    #37 = Utf8               index\n    #38 = Utf8               I\n    #39 = Utf8               constant_pool\n    #40 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n    #41 = Utf8               <init>\n@@ -54,102 +54,98 @@\n    #44 = Utf8               LineNumberTable\n    #45 = Utf8               LocalVariableTable\n    #46 = Utf8               this\n    #47 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n    #48 = Utf8               file\n    #49 = Utf8               Ljava/io/DataInput;\n    #50 = Utf8               StackMapTable\n-   #51 = Class              #115          // org/apache/bcel/classfile/StackMapType\n-   #52 = Class              #119          // java/io/DataInput\n-   #53 = Class              #120          // org/apache/bcel/classfile/ConstantPool\n-   #54 = Utf8               Exceptions\n-   #55 = Class              #121          // java/io/IOException\n-   #56 = Utf8               (BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #57 = Utf8               setType\n-   #58 = Utf8               (B)V\n-   #59 = Utf8               t\n-   #60 = Utf8               getType\n-   #61 = Utf8               ()B\n-   #62 = Utf8               setIndex\n-   #63 = Utf8               (I)V\n-   #64 = Utf8               getIndex\n-   #65 = Utf8               ()I\n-   #66 = Utf8               dump\n-   #67 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #68 = Utf8               Ljava/io/DataOutputStream;\n-   #69 = Utf8               hasIndex\n-   #70 = Utf8               ()Z\n-   #71 = Utf8               printIndex\n-   #72 = Utf8               ()Ljava/lang/String;\n-   #73 = Utf8               toString\n-   #74 = Utf8               copy\n-   #75 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n-   #76 = Class              #116          // java/lang/CloneNotSupportedException\n-   #77 = Utf8               getConstantPool\n-   #78 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-   #79 = Utf8               setConstantPool\n-   #80 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #81 = Utf8               SourceFile\n-   #82 = Utf8               StackMapType.java\n-   #83 = Class              #119          // java/io/DataInput\n-   #84 = NameAndType        #122:#61      // readByte:()B\n-   #85 = NameAndType        #41:#56       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n-   #86 = NameAndType        #69:#70       // hasIndex:()Z\n-   #87 = NameAndType        #123:#124     // readShort:()S\n-   #88 = NameAndType        #37:#38       // index:I\n-   #89 = NameAndType        #39:#40       // constant_pool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #90 = NameAndType        #41:#125      // \"<init>\":()V\n-   #91 = Utf8               org/apache/bcel/Const\n-   #92 = Utf8               java/lang/RuntimeException\n-   #93 = Utf8               java/lang/StringBuilder\n-   #94 = Utf8               Illegal type for StackMapType:\n-   #95 = NameAndType        #126:#127     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #96 = NameAndType        #126:#128     // append:(I)Ljava/lang/StringBuilder;\n-   #97 = NameAndType        #73:#72       // toString:()Ljava/lang/String;\n-   #98 = NameAndType        #41:#129      // \"<init>\":(Ljava/lang/String;)V\n-   #99 = NameAndType        #35:#36       // type:B\n-  #100 = Class              #130          // java/io/DataOutputStream\n-  #101 = NameAndType        #131:#63      // writeByte:(I)V\n-  #102 = NameAndType        #64:#65       // getIndex:()I\n-  #103 = NameAndType        #132:#63      // writeShort:(I)V\n-  #104 = Utf8               , class=<unknown>\n-  #105 = Utf8               , class=\n-  #106 = Class              #120          // org/apache/bcel/classfile/ConstantPool\n-  #107 = NameAndType        #133:#134     // constantToString:(IB)Ljava/lang/String;\n-  #108 = Utf8               , offset=\n-  #109 = Utf8\n-  #110 = Utf8               (type=\n-  #111 = NameAndType        #135:#136     // getItemName:(I)Ljava/lang/String;\n-  #112 = NameAndType        #71:#72       // printIndex:()Ljava/lang/String;\n-  #113 = Utf8               )\n-  #114 = NameAndType        #137:#138     // clone:()Ljava/lang/Object;\n-  #115 = Utf8               org/apache/bcel/classfile/StackMapType\n-  #116 = Utf8               java/lang/CloneNotSupportedException\n-  #117 = Utf8               java/lang/Object\n-  #118 = Utf8               java/lang/Cloneable\n-  #119 = Utf8               java/io/DataInput\n-  #120 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #121 = Utf8               java/io/IOException\n-  #122 = Utf8               readByte\n-  #123 = Utf8               readShort\n-  #124 = Utf8               ()S\n-  #125 = Utf8               ()V\n-  #126 = Utf8               append\n-  #127 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #128 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #129 = Utf8               (Ljava/lang/String;)V\n-  #130 = Utf8               java/io/DataOutputStream\n-  #131 = Utf8               writeByte\n-  #132 = Utf8               writeShort\n-  #133 = Utf8               constantToString\n-  #134 = Utf8               (IB)Ljava/lang/String;\n-  #135 = Utf8               getItemName\n-  #136 = Utf8               (I)Ljava/lang/String;\n-  #137 = Utf8               clone\n-  #138 = Utf8               ()Ljava/lang/Object;\n+   #51 = Class              #115          // java/io/DataInput\n+   #52 = Class              #116          // org/apache/bcel/classfile/ConstantPool\n+   #53 = Utf8               Exceptions\n+   #54 = Class              #117          // java/io/IOException\n+   #55 = Utf8               (BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #56 = Utf8               setType\n+   #57 = Utf8               (B)V\n+   #58 = Utf8               t\n+   #59 = Utf8               getType\n+   #60 = Utf8               ()B\n+   #61 = Utf8               setIndex\n+   #62 = Utf8               (I)V\n+   #63 = Utf8               getIndex\n+   #64 = Utf8               ()I\n+   #65 = Utf8               dump\n+   #66 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #67 = Utf8               Ljava/io/DataOutputStream;\n+   #68 = Utf8               hasIndex\n+   #69 = Utf8               ()Z\n+   #70 = Utf8               printIndex\n+   #71 = Utf8               ()Ljava/lang/String;\n+   #72 = Utf8               toString\n+   #73 = Utf8               copy\n+   #74 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+   #75 = Utf8               getConstantPool\n+   #76 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+   #77 = Utf8               setConstantPool\n+   #78 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #79 = Utf8               SourceFile\n+   #80 = Utf8               StackMapType.java\n+   #81 = NameAndType        #118:#60      // readByte:()B\n+   #82 = NameAndType        #41:#55       // \"<init>\":(BILorg/apache/bcel/classfile/ConstantPool;)V\n+   #83 = NameAndType        #68:#69       // hasIndex:()Z\n+   #84 = NameAndType        #119:#120     // readShort:()S\n+   #85 = NameAndType        #37:#38       // index:I\n+   #86 = NameAndType        #39:#40       // constant_pool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #87 = NameAndType        #41:#121      // \"<init>\":()V\n+   #88 = Utf8               org/apache/bcel/Const\n+   #89 = Utf8               java/lang/RuntimeException\n+   #90 = Utf8               java/lang/StringBuilder\n+   #91 = Utf8               Illegal type for StackMapType:\n+   #92 = NameAndType        #122:#123     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #93 = NameAndType        #122:#124     // append:(I)Ljava/lang/StringBuilder;\n+   #94 = NameAndType        #72:#71       // toString:()Ljava/lang/String;\n+   #95 = NameAndType        #41:#125      // \"<init>\":(Ljava/lang/String;)V\n+   #96 = NameAndType        #35:#36       // type:B\n+   #97 = Class              #126          // java/io/DataOutputStream\n+   #98 = NameAndType        #127:#62      // writeByte:(I)V\n+   #99 = NameAndType        #63:#64       // getIndex:()I\n+  #100 = NameAndType        #128:#62      // writeShort:(I)V\n+  #101 = Utf8               , class=<unknown>\n+  #102 = Utf8               , class=\n+  #103 = NameAndType        #129:#130     // constantToString:(IB)Ljava/lang/String;\n+  #104 = Utf8               , offset=\n+  #105 = Utf8\n+  #106 = Utf8               (type=\n+  #107 = NameAndType        #131:#132     // getItemName:(I)Ljava/lang/String;\n+  #108 = NameAndType        #70:#71       // printIndex:()Ljava/lang/String;\n+  #109 = Utf8               )\n+  #110 = NameAndType        #133:#134     // clone:()Ljava/lang/Object;\n+  #111 = Utf8               org/apache/bcel/classfile/StackMapType\n+  #112 = Utf8               java/lang/CloneNotSupportedException\n+  #113 = Utf8               java/lang/Object\n+  #114 = Utf8               java/lang/Cloneable\n+  #115 = Utf8               java/io/DataInput\n+  #116 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #117 = Utf8               java/io/IOException\n+  #118 = Utf8               readByte\n+  #119 = Utf8               readShort\n+  #120 = Utf8               ()S\n+  #121 = Utf8               ()V\n+  #122 = Utf8               append\n+  #123 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #125 = Utf8               (Ljava/lang/String;)V\n+  #126 = Utf8               java/io/DataOutputStream\n+  #127 = Utf8               writeByte\n+  #128 = Utf8               writeShort\n+  #129 = Utf8               constantToString\n+  #130 = Utf8               (IB)Ljava/lang/String;\n+  #131 = Utf8               getItemName\n+  #132 = Utf8               (I)Ljava/lang/String;\n+  #133 = Utf8               clone\n+  #134 = Utf8               ()Ljava/lang/Object;\n {\n   private byte type;\n     descriptor: B\n     flags: (0x0002) ACC_PRIVATE\n \n   private int index;\n     descriptor: I\n"}]}
