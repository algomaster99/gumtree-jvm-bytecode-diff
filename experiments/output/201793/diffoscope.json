{"diffoscope-json-version": 1, "source1": "first/SevenZArchiveEntry.class", "source2": "second/SevenZArchiveEntry.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -74,22 +74,22 @@\n     public Date getCreationDate() {\n         if (this.hasCreationDate) {\n             return ntfsTimeToJavaTime(this.creationDate);\n         }\n         throw new UnsupportedOperationException(\"The entry doesn't have this timestamp\");\n     }\n     \n-    public void setCreationDate(final long ntfsCreationDate) {\n-        this.creationDate = ntfsCreationDate;\n+    public void setCreationDate(final long creationDate) {\n+        this.creationDate = creationDate;\n     }\n     \n-    public void setCreationDate(final Date creationDate) {\n-        this.hasCreationDate = (creationDate != null);\n+    public void setCreationDate(final Date date) {\n+        this.hasCreationDate = (date != null);\n         if (this.hasCreationDate) {\n-            this.creationDate = javaTimeToNtfsTime(creationDate);\n+            this.creationDate = javaTimeToNtfsTime(date);\n         }\n     }\n     \n     public boolean getHasLastModifiedDate() {\n         return this.hasLastModifiedDate;\n     }\n     \n@@ -100,48 +100,48 @@\n     public Date getLastModifiedDate() {\n         if (this.hasLastModifiedDate) {\n             return ntfsTimeToJavaTime(this.lastModifiedDate);\n         }\n         throw new UnsupportedOperationException(\"The entry doesn't have this timestamp\");\n     }\n     \n-    public void setLastModifiedDate(final long ntfsLastModifiedDate) {\n-        this.lastModifiedDate = ntfsLastModifiedDate;\n+    public void setLastModifiedDate(final long lastModifiedDate) {\n+        this.lastModifiedDate = lastModifiedDate;\n     }\n     \n-    public void setLastModifiedDate(final Date lastModifiedDate) {\n-        this.hasLastModifiedDate = (lastModifiedDate != null);\n+    public void setLastModifiedDate(final Date date) {\n+        this.hasLastModifiedDate = (date != null);\n         if (this.hasLastModifiedDate) {\n-            this.lastModifiedDate = javaTimeToNtfsTime(lastModifiedDate);\n+            this.lastModifiedDate = javaTimeToNtfsTime(date);\n         }\n     }\n     \n     public boolean getHasAccessDate() {\n         return this.hasAccessDate;\n     }\n     \n-    public void setHasAccessDate(final boolean hasAcessDate) {\n-        this.hasAccessDate = hasAcessDate;\n+    public void setHasAccessDate(final boolean hasAccessDate) {\n+        this.hasAccessDate = hasAccessDate;\n     }\n     \n     public Date getAccessDate() {\n         if (this.hasAccessDate) {\n             return ntfsTimeToJavaTime(this.accessDate);\n         }\n         throw new UnsupportedOperationException(\"The entry doesn't have this timestamp\");\n     }\n     \n-    public void setAccessDate(final long ntfsAccessDate) {\n-        this.accessDate = ntfsAccessDate;\n+    public void setAccessDate(final long accessDate) {\n+        this.accessDate = accessDate;\n     }\n     \n-    public void setAccessDate(final Date accessDate) {\n-        this.hasAccessDate = (accessDate != null);\n+    public void setAccessDate(final Date date) {\n+        this.hasAccessDate = (date != null);\n         if (this.hasAccessDate) {\n-            this.accessDate = javaTimeToNtfsTime(accessDate);\n+            this.accessDate = javaTimeToNtfsTime(date);\n         }\n     }\n     \n     public boolean getHasWindowsAttributes() {\n         return this.hasWindowsAttributes;\n     }\n     \n@@ -167,16 +167,16 @@\n     \n     @Deprecated\n     public int getCrc() {\n         return (int)this.crc;\n     }\n     \n     @Deprecated\n-    public void setCrc(final int crc) {\n-        this.crc = crc;\n+    public void setCrc(final int n) {\n+        this.crc = n;\n     }\n     \n     public long getCrcValue() {\n         return this.crc;\n     }\n     \n     public void setCrcValue(final long crc) {\n@@ -185,69 +185,69 @@\n     \n     @Deprecated\n     int getCompressedCrc() {\n         return (int)this.compressedCrc;\n     }\n     \n     @Deprecated\n-    void setCompressedCrc(final int crc) {\n-        this.compressedCrc = crc;\n+    void setCompressedCrc(final int n) {\n+        this.compressedCrc = n;\n     }\n     \n     long getCompressedCrcValue() {\n         return this.compressedCrc;\n     }\n     \n-    void setCompressedCrcValue(final long crc) {\n-        this.compressedCrc = crc;\n+    void setCompressedCrcValue(final long compressedCrc) {\n+        this.compressedCrc = compressedCrc;\n     }\n     \n     public long getSize() {\n         return this.size;\n     }\n     \n     public void setSize(final long size) {\n         this.size = size;\n     }\n     \n     long getCompressedSize() {\n         return this.compressedSize;\n     }\n     \n-    void setCompressedSize(final long size) {\n-        this.compressedSize = size;\n+    void setCompressedSize(final long compressedSize) {\n+        this.compressedSize = compressedSize;\n     }\n     \n-    public void setContentMethods(final Iterable<? extends SevenZMethodConfiguration> methods) {\n-        if (methods != null) {\n-            final LinkedList<SevenZMethodConfiguration> l = new LinkedList<SevenZMethodConfiguration>();\n-            for (final SevenZMethodConfiguration m : methods) {\n-                l.addLast(m);\n+    public void setContentMethods(final Iterable<? extends SevenZMethodConfiguration> iterable) {\n+        if (iterable != null) {\n+            final LinkedList list = new LinkedList();\n+            final Iterator<? extends SevenZMethodConfiguration> iterator = iterable.iterator();\n+            while (iterator.hasNext()) {\n+                list.addLast(iterator.next());\n             }\n-            this.contentMethods = (Iterable<? extends SevenZMethodConfiguration>)Collections.unmodifiableList((List<?>)l);\n+            this.contentMethods = (Iterable<? extends SevenZMethodConfiguration>)Collections.unmodifiableList((List<?>)list);\n         }\n         else {\n             this.contentMethods = null;\n         }\n     }\n     \n     public Iterable<? extends SevenZMethodConfiguration> getContentMethods() {\n         return this.contentMethods;\n     }\n     \n-    public static Date ntfsTimeToJavaTime(final long ntfsTime) {\n-        final Calendar ntfsEpoch = Calendar.getInstance();\n-        ntfsEpoch.setTimeZone(TimeZone.getTimeZone(\"GMT+0\"));\n-        ntfsEpoch.set(1601, 0, 1, 0, 0, 0);\n-        ntfsEpoch.set(14, 0);\n-        final long realTime = ntfsEpoch.getTimeInMillis() + ntfsTime / 10000L;\n-        return new Date(realTime);\n+    public static Date ntfsTimeToJavaTime(final long n) {\n+        final Calendar instance = Calendar.getInstance();\n+        instance.setTimeZone(TimeZone.getTimeZone(\"GMT+0\"));\n+        instance.set(1601, 0, 1, 0, 0, 0);\n+        instance.set(14, 0);\n+        return new Date(instance.getTimeInMillis() + n / 10000L);\n     }\n     \n     public static long javaTimeToNtfsTime(final Date date) {\n-        final Calendar ntfsEpoch = Calendar.getInstance();\n-        ntfsEpoch.setTimeZone(TimeZone.getTimeZone(\"GMT+0\"));\n-        ntfsEpoch.set(1601, 0, 1, 0, 0, 0);\n-        ntfsEpoch.set(14, 0);\n-        return (date.getTime() - ntfsEpoch.getTimeInMillis()) * 1000L * 10L;\n+        final Calendar instance = Calendar.getInstance();\n+        instance.setTimeZone(TimeZone.getTimeZone(\"GMT+0\"));\n+        instance.set(1601, 0, 1, 0, 0, 0);\n+        instance.set(14, 0);\n+        return (date.getTime() - instance.getTimeInMillis()) * 1000L * 10L;\n     }\n }\n"}]}
