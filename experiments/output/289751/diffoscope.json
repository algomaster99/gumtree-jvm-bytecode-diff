{"diffoscope-json-version": 1, "source1": "first/ReversedLinesFileReader.class", "source2": "second/ReversedLinesFileReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum 450338ec1ee90de771bd2437d7f2bf4440a206f732e586f3e8965324520600e7\n+  SHA-256 checksum 7a6692e033777133daf75f9fc0a7a49ed137326172b096e85fcc0731e0abeae2\n   Compiled from \"ReversedLinesFileReader.java\"\n public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/io/input/ReversedLinesFileReader\n   super_class: #72                        // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Class              #144          // org/apache/commons/io/IOUtils\n-    #2 = Fieldref           #8.#145       // org/apache/commons/io/input/ReversedLinesFileReader.byteDecrement:I\n-    #3 = Fieldref           #8.#146       // org/apache/commons/io/input/ReversedLinesFileReader.charset:Ljava/nio/charset/Charset;\n-    #4 = Fieldref           #8.#147       // org/apache/commons/io/input/ReversedLinesFileReader.avoidNewlineSplitBufferSize:I\n-    #5 = Fieldref           #8.#148       // org/apache/commons/io/input/ReversedLinesFileReader.newLineSequences:[[B\n-    #6 = Fieldref           #8.#149       // org/apache/commons/io/input/ReversedLinesFileReader.channel:Ljava/nio/channels/SeekableByteChannel;\n-    #7 = Fieldref           #8.#150       // org/apache/commons/io/input/ReversedLinesFileReader.blockSize:I\n-    #8 = Class              #151          // org/apache/commons/io/input/ReversedLinesFileReader\n-    #9 = Methodref          #152.#153     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #10 = Methodref          #8.#154       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n-   #11 = Methodref          #155.#156     // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #12 = Methodref          #8.#157       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-   #13 = Methodref          #8.#158       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-   #14 = Methodref          #8.#159       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n-   #15 = Methodref          #72.#160      // java/lang/Object.\"<init>\":()V\n-   #16 = Methodref          #161.#162     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #17 = Methodref          #152.#163     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #18 = Methodref          #164.#165     // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n-   #19 = Fieldref           #166.#167     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #20 = String             #168          // Shift_JIS\n-   #21 = Methodref          #152.#169     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #22 = String             #170          // windows-31j\n-   #23 = String             #171          // x-windows-949\n-   #24 = String             #172          // gbk\n-   #25 = String             #173          // x-windows-950\n-   #26 = Fieldref           #166.#174     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #27 = Fieldref           #166.#175     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #28 = Fieldref           #166.#176     // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-   #29 = Class              #177          // java/io/UnsupportedEncodingException\n-   #30 = String             #178          // For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-   #31 = Methodref          #29.#179      // java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Class              #180          // java/lang/StringBuilder\n-   #33 = Methodref          #32.#160      // java/lang/StringBuilder.\"<init>\":()V\n-   #34 = String             #181          // Encoding\n-   #35 = Methodref          #32.#182      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #36 = Methodref          #32.#183      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #37 = String             #184          //  is not supported yet (feel free to submit a patch)\n-   #38 = Methodref          #32.#185      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #39 = Class              #186          // \"[B\"\n-   #40 = Fieldref           #187.#188     // org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n-   #41 = Methodref          #187.#189     // org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #42 = Fieldref           #187.#190     // org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n-   #43 = Fieldref           #187.#191     // org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n-   #44 = Class              #192          // java/nio/file/OpenOption\n-   #45 = Fieldref           #193.#194     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n-   #46 = Methodref          #195.#196     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-   #47 = InterfaceMethodref #197.#198     // java/nio/channels/SeekableByteChannel.size:()J\n-   #48 = Fieldref           #8.#199       // org/apache/commons/io/input/ReversedLinesFileReader.totalByteLength:J\n-   #49 = Fieldref           #8.#200       // org/apache/commons/io/input/ReversedLinesFileReader.totalBlockCount:J\n-   #50 = Class              #201          // org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n-   #51 = Methodref          #50.#202      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-   #52 = Fieldref           #8.#203       // org/apache/commons/io/input/ReversedLinesFileReader.currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #53 = Methodref          #161.#204     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #54 = InterfaceMethodref #197.#205     // java/nio/channels/SeekableByteChannel.close:()V\n-   #55 = Methodref          #50.#206      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-   #56 = Methodref          #50.#207      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #57 = String             #208          //\n-   #58 = Methodref          #209.#210     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = Fieldref           #8.#211       // org/apache/commons/io/input/ReversedLinesFileReader.trailingNewlineOfFileSkipped:Z\n-   #60 = Methodref          #8.#212       // org/apache/commons/io/input/ReversedLinesFileReader.readLine:()Ljava/lang/String;\n-   #61 = Class              #213          // java/lang/IllegalArgumentException\n-   #62 = String             #214          // lineCount < 0\n-   #63 = Methodref          #61.#179      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #64 = Class              #215          // java/util/ArrayList\n-   #65 = Methodref          #64.#216      // java/util/ArrayList.\"<init>\":(I)V\n-   #66 = Methodref          #64.#217      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #67 = Methodref          #8.#218       // org/apache/commons/io/input/ReversedLinesFileReader.readLines:(I)Ljava/util/List;\n-   #68 = Methodref          #219.#220     // java/util/Collections.reverse:(Ljava/util/List;)V\n-   #69 = InterfaceMethodref #221.#222     // java/util/List.isEmpty:()Z\n-   #70 = Methodref          #223.#224     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #71 = Methodref          #209.#225     // java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-   #72 = Class              #226          // java/lang/Object\n-   #73 = Class              #227          // java/io/Closeable\n-   #74 = Class              #228          // org/apache/commons/io/input/ReversedLinesFileReader$1\n+    #1 = Class              #142          // org/apache/commons/io/IOUtils\n+    #2 = Fieldref           #8.#143       // org/apache/commons/io/input/ReversedLinesFileReader.byteDecrement:I\n+    #3 = Fieldref           #8.#144       // org/apache/commons/io/input/ReversedLinesFileReader.charset:Ljava/nio/charset/Charset;\n+    #4 = Fieldref           #8.#145       // org/apache/commons/io/input/ReversedLinesFileReader.avoidNewlineSplitBufferSize:I\n+    #5 = Fieldref           #8.#146       // org/apache/commons/io/input/ReversedLinesFileReader.newLineSequences:[[B\n+    #6 = Fieldref           #8.#147       // org/apache/commons/io/input/ReversedLinesFileReader.channel:Ljava/nio/channels/SeekableByteChannel;\n+    #7 = Fieldref           #8.#148       // org/apache/commons/io/input/ReversedLinesFileReader.blockSize:I\n+    #8 = Class              #149          // org/apache/commons/io/input/ReversedLinesFileReader\n+    #9 = Methodref          #115.#150     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #10 = Methodref          #8.#151       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+   #11 = Methodref          #152.#153     // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #12 = Methodref          #8.#154       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+   #13 = Methodref          #8.#155       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+   #14 = Methodref          #8.#156       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+   #15 = Methodref          #72.#157      // java/lang/Object.\"<init>\":()V\n+   #16 = Methodref          #158.#159     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #17 = Methodref          #115.#160     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #18 = Methodref          #116.#161     // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n+   #19 = Fieldref           #162.#163     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #20 = String             #164          // Shift_JIS\n+   #21 = Methodref          #115.#165     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #22 = String             #166          // windows-31j\n+   #23 = String             #167          // x-windows-949\n+   #24 = String             #168          // gbk\n+   #25 = String             #169          // x-windows-950\n+   #26 = Fieldref           #162.#170     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #27 = Fieldref           #162.#171     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #28 = Fieldref           #162.#172     // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #29 = Class              #173          // java/io/UnsupportedEncodingException\n+   #30 = String             #174          // For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+   #31 = Methodref          #29.#175      // java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n+   #32 = Class              #176          // java/lang/StringBuilder\n+   #33 = Methodref          #32.#157      // java/lang/StringBuilder.\"<init>\":()V\n+   #34 = String             #177          // Encoding\n+   #35 = Methodref          #32.#178      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #36 = Methodref          #32.#179      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #37 = String             #180          //  is not supported yet (feel free to submit a patch)\n+   #38 = Methodref          #32.#181      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #39 = Class              #182          // \"[B\"\n+   #40 = Fieldref           #183.#184     // org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+   #41 = Methodref          #183.#185     // org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #42 = Fieldref           #183.#186     // org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n+   #43 = Fieldref           #183.#187     // org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n+   #44 = Class              #188          // java/nio/file/OpenOption\n+   #45 = Fieldref           #189.#190     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+   #46 = Methodref          #191.#192     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+   #47 = InterfaceMethodref #193.#194     // java/nio/channels/SeekableByteChannel.size:()J\n+   #48 = Fieldref           #8.#195       // org/apache/commons/io/input/ReversedLinesFileReader.totalByteLength:J\n+   #49 = Fieldref           #8.#196       // org/apache/commons/io/input/ReversedLinesFileReader.totalBlockCount:J\n+   #50 = Class              #197          // org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+   #51 = Methodref          #50.#198      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+   #52 = Fieldref           #8.#199       // org/apache/commons/io/input/ReversedLinesFileReader.currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+   #53 = Methodref          #158.#200     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #54 = InterfaceMethodref #193.#201     // java/nio/channels/SeekableByteChannel.close:()V\n+   #55 = Methodref          #50.#202      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+   #56 = Methodref          #50.#203      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+   #57 = String             #204          //\n+   #58 = Methodref          #122.#205     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #59 = Fieldref           #8.#206       // org/apache/commons/io/input/ReversedLinesFileReader.trailingNewlineOfFileSkipped:Z\n+   #60 = Methodref          #8.#207       // org/apache/commons/io/input/ReversedLinesFileReader.readLine:()Ljava/lang/String;\n+   #61 = Class              #208          // java/lang/IllegalArgumentException\n+   #62 = String             #209          // lineCount < 0\n+   #63 = Methodref          #61.#175      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #64 = Class              #210          // java/util/ArrayList\n+   #65 = Methodref          #64.#211      // java/util/ArrayList.\"<init>\":(I)V\n+   #66 = Methodref          #64.#212      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+   #67 = Methodref          #8.#213       // org/apache/commons/io/input/ReversedLinesFileReader.readLines:(I)Ljava/util/List;\n+   #68 = Methodref          #214.#215     // java/util/Collections.reverse:(Ljava/util/List;)V\n+   #69 = InterfaceMethodref #129.#216     // java/util/List.isEmpty:()Z\n+   #70 = Methodref          #217.#218     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+   #71 = Methodref          #122.#219     // java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+   #72 = Class              #220          // java/lang/Object\n+   #73 = Class              #221          // java/io/Closeable\n+   #74 = Class              #222          // org/apache/commons/io/input/ReversedLinesFileReader$1\n    #75 = Utf8               InnerClasses\n    #76 = Utf8               FilePart\n    #77 = Utf8               EMPTY_STRING\n    #78 = Utf8               Ljava/lang/String;\n    #79 = Utf8               ConstantValue\n    #80 = Utf8               DEFAULT_BLOCK_SIZE\n    #81 = Utf8               I\n@@ -107,202 +107,196 @@\n    #97 = Utf8               trailingNewlineOfFileSkipped\n    #98 = Utf8               Z\n    #99 = Utf8               <init>\n   #100 = Utf8               (Ljava/io/File;)V\n   #101 = Utf8               Code\n   #102 = Utf8               LineNumberTable\n   #103 = Utf8               Exceptions\n-  #104 = Class              #229          // java/io/IOException\n+  #104 = Class              #223          // java/io/IOException\n   #105 = Utf8               Deprecated\n   #106 = Utf8               RuntimeVisibleAnnotations\n   #107 = Utf8               Ljava/lang/Deprecated;\n   #108 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n   #109 = Utf8               (Ljava/io/File;ILjava/nio/charset/Charset;)V\n   #110 = Utf8               (Ljava/io/File;ILjava/lang/String;)V\n   #111 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n   #112 = Utf8               (Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n   #113 = Utf8               StackMapTable\n-  #114 = Class              #151          // org/apache/commons/io/input/ReversedLinesFileReader\n-  #115 = Class              #230          // java/nio/file/Path\n-  #116 = Class              #231          // java/nio/charset/Charset\n-  #117 = Class              #232          // java/nio/charset/CharsetEncoder\n-  #118 = Utf8               (Ljava/nio/file/Path;ILjava/lang/String;)V\n-  #119 = Utf8               close\n-  #120 = Utf8               ()V\n-  #121 = Utf8               readLine\n-  #122 = Utf8               ()Ljava/lang/String;\n-  #123 = Class              #233          // java/lang/String\n-  #124 = Utf8               readLines\n-  #125 = Utf8               (I)Ljava/util/List;\n-  #126 = Class              #215          // java/util/ArrayList\n-  #127 = Utf8               Signature\n-  #128 = Utf8               (I)Ljava/util/List<Ljava/lang/String;>;\n-  #129 = Utf8               toString\n-  #130 = Utf8               (I)Ljava/lang/String;\n-  #131 = Class              #234          // java/util/List\n-  #132 = Utf8               access$000\n-  #133 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n-  #134 = Utf8               access$100\n-  #135 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n-  #136 = Utf8               access$200\n-  #137 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n-  #138 = Utf8               access$300\n-  #139 = Utf8               access$400\n-  #140 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n-  #141 = Utf8               access$500\n-  #142 = Utf8               SourceFile\n-  #143 = Utf8               ReversedLinesFileReader.java\n-  #144 = Utf8               org/apache/commons/io/IOUtils\n-  #145 = NameAndType        #94:#81       // byteDecrement:I\n-  #146 = NameAndType        #84:#85       // charset:Ljava/nio/charset/Charset;\n-  #147 = NameAndType        #93:#81       // avoidNewlineSplitBufferSize:I\n-  #148 = NameAndType        #91:#92       // newLineSequences:[[B\n-  #149 = NameAndType        #86:#87       // channel:Ljava/nio/channels/SeekableByteChannel;\n-  #150 = NameAndType        #83:#81       // blockSize:I\n-  #151 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader\n-  #152 = Class              #231          // java/nio/charset/Charset\n-  #153 = NameAndType        #235:#236     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #154 = NameAndType        #99:#109      // \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n-  #155 = Class              #237          // java/io/File\n-  #156 = NameAndType        #238:#239     // toPath:()Ljava/nio/file/Path;\n-  #157 = NameAndType        #99:#111      // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-  #158 = NameAndType        #99:#112      // \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-  #159 = NameAndType        #99:#118      // \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n-  #160 = NameAndType        #99:#120      // \"<init>\":()V\n-  #161 = Class              #240          // org/apache/commons/io/Charsets\n-  #162 = NameAndType        #241:#242     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #163 = NameAndType        #243:#244     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-  #164 = Class              #232          // java/nio/charset/CharsetEncoder\n-  #165 = NameAndType        #245:#246     // maxBytesPerChar:()F\n-  #166 = Class              #247          // java/nio/charset/StandardCharsets\n-  #167 = NameAndType        #248:#85      // UTF_8:Ljava/nio/charset/Charset;\n-  #168 = Utf8               Shift_JIS\n-  #169 = NameAndType        #249:#250     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #170 = Utf8               windows-31j\n-  #171 = Utf8               x-windows-949\n-  #172 = Utf8               gbk\n-  #173 = Utf8               x-windows-950\n-  #174 = NameAndType        #251:#85      // UTF_16BE:Ljava/nio/charset/Charset;\n-  #175 = NameAndType        #252:#85      // UTF_16LE:Ljava/nio/charset/Charset;\n-  #176 = NameAndType        #253:#85      // UTF_16:Ljava/nio/charset/Charset;\n-  #177 = Utf8               java/io/UnsupportedEncodingException\n-  #178 = Utf8               For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-  #179 = NameAndType        #99:#254      // \"<init>\":(Ljava/lang/String;)V\n-  #180 = Utf8               java/lang/StringBuilder\n-  #181 = Utf8               Encoding\n-  #182 = NameAndType        #255:#256     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #183 = NameAndType        #255:#257     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #184 = Utf8                is not supported yet (feel free to submit a patch)\n-  #185 = NameAndType        #129:#122     // toString:()Ljava/lang/String;\n-  #186 = Utf8               [B\n-  #187 = Class              #258          // org/apache/commons/io/StandardLineSeparator\n-  #188 = NameAndType        #259:#260     // CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n-  #189 = NameAndType        #261:#262     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #190 = NameAndType        #263:#260     // LF:Lorg/apache/commons/io/StandardLineSeparator;\n-  #191 = NameAndType        #264:#260     // CR:Lorg/apache/commons/io/StandardLineSeparator;\n-  #192 = Utf8               java/nio/file/OpenOption\n-  #193 = Class              #265          // java/nio/file/StandardOpenOption\n-  #194 = NameAndType        #266:#267     // READ:Ljava/nio/file/StandardOpenOption;\n-  #195 = Class              #268          // java/nio/file/Files\n-  #196 = NameAndType        #269:#270     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #197 = Class              #271          // java/nio/channels/SeekableByteChannel\n-  #198 = NameAndType        #272:#273     // size:()J\n-  #199 = NameAndType        #88:#89       // totalByteLength:J\n-  #200 = NameAndType        #90:#89       // totalBlockCount:J\n-  #201 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n-  #202 = NameAndType        #99:#274      // \"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-  #203 = NameAndType        #95:#96       // currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #204 = NameAndType        #241:#250     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #205 = NameAndType        #119:#120     // close:()V\n-  #206 = NameAndType        #275:#276     // access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-  #207 = NameAndType        #277:#278     // access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #208 = Utf8\n-  #209 = Class              #233          // java/lang/String\n-  #210 = NameAndType        #279:#280     // equals:(Ljava/lang/Object;)Z\n-  #211 = NameAndType        #97:#98       // trailingNewlineOfFileSkipped:Z\n-  #212 = NameAndType        #121:#122     // readLine:()Ljava/lang/String;\n-  #213 = Utf8               java/lang/IllegalArgumentException\n-  #214 = Utf8               lineCount < 0\n-  #215 = Utf8               java/util/ArrayList\n-  #216 = NameAndType        #99:#281      // \"<init>\":(I)V\n-  #217 = NameAndType        #282:#280     // add:(Ljava/lang/Object;)Z\n-  #218 = NameAndType        #124:#125     // readLines:(I)Ljava/util/List;\n-  #219 = Class              #283          // java/util/Collections\n-  #220 = NameAndType        #284:#285     // reverse:(Ljava/util/List;)V\n-  #221 = Class              #234          // java/util/List\n-  #222 = NameAndType        #286:#287     // isEmpty:()Z\n-  #223 = Class              #288          // java/lang/System\n-  #224 = NameAndType        #289:#122     // lineSeparator:()Ljava/lang/String;\n-  #225 = NameAndType        #290:#291     // join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-  #226 = Utf8               java/lang/Object\n-  #227 = Utf8               java/io/Closeable\n-  #228 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$1\n-  #229 = Utf8               java/io/IOException\n-  #230 = Utf8               java/nio/file/Path\n-  #231 = Utf8               java/nio/charset/Charset\n-  #232 = Utf8               java/nio/charset/CharsetEncoder\n-  #233 = Utf8               java/lang/String\n-  #234 = Utf8               java/util/List\n-  #235 = Utf8               defaultCharset\n-  #236 = Utf8               ()Ljava/nio/charset/Charset;\n-  #237 = Utf8               java/io/File\n-  #238 = Utf8               toPath\n-  #239 = Utf8               ()Ljava/nio/file/Path;\n-  #240 = Utf8               org/apache/commons/io/Charsets\n-  #241 = Utf8               toCharset\n-  #242 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #243 = Utf8               newEncoder\n-  #244 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n-  #245 = Utf8               maxBytesPerChar\n-  #246 = Utf8               ()F\n-  #247 = Utf8               java/nio/charset/StandardCharsets\n-  #248 = Utf8               UTF_8\n-  #249 = Utf8               forName\n-  #250 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #251 = Utf8               UTF_16BE\n-  #252 = Utf8               UTF_16LE\n-  #253 = Utf8               UTF_16\n-  #254 = Utf8               (Ljava/lang/String;)V\n-  #255 = Utf8               append\n-  #256 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #257 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #258 = Utf8               org/apache/commons/io/StandardLineSeparator\n-  #259 = Utf8               CRLF\n-  #260 = Utf8               Lorg/apache/commons/io/StandardLineSeparator;\n-  #261 = Utf8               getBytes\n-  #262 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #263 = Utf8               LF\n-  #264 = Utf8               CR\n-  #265 = Utf8               java/nio/file/StandardOpenOption\n-  #266 = Utf8               READ\n-  #267 = Utf8               Ljava/nio/file/StandardOpenOption;\n-  #268 = Utf8               java/nio/file/Files\n-  #269 = Utf8               newByteChannel\n-  #270 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #271 = Utf8               java/nio/channels/SeekableByteChannel\n-  #272 = Utf8               size\n-  #273 = Utf8               ()J\n-  #274 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-  #275 = Utf8               access$700\n-  #276 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-  #277 = Utf8               access$800\n-  #278 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #279 = Utf8               equals\n-  #280 = Utf8               (Ljava/lang/Object;)Z\n-  #281 = Utf8               (I)V\n-  #282 = Utf8               add\n-  #283 = Utf8               java/util/Collections\n-  #284 = Utf8               reverse\n-  #285 = Utf8               (Ljava/util/List;)V\n-  #286 = Utf8               isEmpty\n-  #287 = Utf8               ()Z\n-  #288 = Utf8               java/lang/System\n-  #289 = Utf8               lineSeparator\n-  #290 = Utf8               join\n-  #291 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #114 = Class              #224          // java/nio/file/Path\n+  #115 = Class              #225          // java/nio/charset/Charset\n+  #116 = Class              #226          // java/nio/charset/CharsetEncoder\n+  #117 = Utf8               (Ljava/nio/file/Path;ILjava/lang/String;)V\n+  #118 = Utf8               close\n+  #119 = Utf8               ()V\n+  #120 = Utf8               readLine\n+  #121 = Utf8               ()Ljava/lang/String;\n+  #122 = Class              #227          // java/lang/String\n+  #123 = Utf8               readLines\n+  #124 = Utf8               (I)Ljava/util/List;\n+  #125 = Utf8               Signature\n+  #126 = Utf8               (I)Ljava/util/List<Ljava/lang/String;>;\n+  #127 = Utf8               toString\n+  #128 = Utf8               (I)Ljava/lang/String;\n+  #129 = Class              #228          // java/util/List\n+  #130 = Utf8               access$000\n+  #131 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n+  #132 = Utf8               access$100\n+  #133 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n+  #134 = Utf8               access$200\n+  #135 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n+  #136 = Utf8               access$300\n+  #137 = Utf8               access$400\n+  #138 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n+  #139 = Utf8               access$500\n+  #140 = Utf8               SourceFile\n+  #141 = Utf8               ReversedLinesFileReader.java\n+  #142 = Utf8               org/apache/commons/io/IOUtils\n+  #143 = NameAndType        #94:#81       // byteDecrement:I\n+  #144 = NameAndType        #84:#85       // charset:Ljava/nio/charset/Charset;\n+  #145 = NameAndType        #93:#81       // avoidNewlineSplitBufferSize:I\n+  #146 = NameAndType        #91:#92       // newLineSequences:[[B\n+  #147 = NameAndType        #86:#87       // channel:Ljava/nio/channels/SeekableByteChannel;\n+  #148 = NameAndType        #83:#81       // blockSize:I\n+  #149 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader\n+  #150 = NameAndType        #229:#230     // defaultCharset:()Ljava/nio/charset/Charset;\n+  #151 = NameAndType        #99:#109      // \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+  #152 = Class              #231          // java/io/File\n+  #153 = NameAndType        #232:#233     // toPath:()Ljava/nio/file/Path;\n+  #154 = NameAndType        #99:#111      // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+  #155 = NameAndType        #99:#112      // \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+  #156 = NameAndType        #99:#117      // \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+  #157 = NameAndType        #99:#119      // \"<init>\":()V\n+  #158 = Class              #234          // org/apache/commons/io/Charsets\n+  #159 = NameAndType        #235:#236     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #160 = NameAndType        #237:#238     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+  #161 = NameAndType        #239:#240     // maxBytesPerChar:()F\n+  #162 = Class              #241          // java/nio/charset/StandardCharsets\n+  #163 = NameAndType        #242:#85      // UTF_8:Ljava/nio/charset/Charset;\n+  #164 = Utf8               Shift_JIS\n+  #165 = NameAndType        #243:#244     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #166 = Utf8               windows-31j\n+  #167 = Utf8               x-windows-949\n+  #168 = Utf8               gbk\n+  #169 = Utf8               x-windows-950\n+  #170 = NameAndType        #245:#85      // UTF_16BE:Ljava/nio/charset/Charset;\n+  #171 = NameAndType        #246:#85      // UTF_16LE:Ljava/nio/charset/Charset;\n+  #172 = NameAndType        #247:#85      // UTF_16:Ljava/nio/charset/Charset;\n+  #173 = Utf8               java/io/UnsupportedEncodingException\n+  #174 = Utf8               For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+  #175 = NameAndType        #99:#248      // \"<init>\":(Ljava/lang/String;)V\n+  #176 = Utf8               java/lang/StringBuilder\n+  #177 = Utf8               Encoding\n+  #178 = NameAndType        #249:#250     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #179 = NameAndType        #249:#251     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #180 = Utf8                is not supported yet (feel free to submit a patch)\n+  #181 = NameAndType        #127:#121     // toString:()Ljava/lang/String;\n+  #182 = Utf8               [B\n+  #183 = Class              #252          // org/apache/commons/io/StandardLineSeparator\n+  #184 = NameAndType        #253:#254     // CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #185 = NameAndType        #255:#256     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #186 = NameAndType        #257:#254     // LF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #187 = NameAndType        #258:#254     // CR:Lorg/apache/commons/io/StandardLineSeparator;\n+  #188 = Utf8               java/nio/file/OpenOption\n+  #189 = Class              #259          // java/nio/file/StandardOpenOption\n+  #190 = NameAndType        #260:#261     // READ:Ljava/nio/file/StandardOpenOption;\n+  #191 = Class              #262          // java/nio/file/Files\n+  #192 = NameAndType        #263:#264     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #193 = Class              #265          // java/nio/channels/SeekableByteChannel\n+  #194 = NameAndType        #266:#267     // size:()J\n+  #195 = NameAndType        #88:#89       // totalByteLength:J\n+  #196 = NameAndType        #90:#89       // totalBlockCount:J\n+  #197 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+  #198 = NameAndType        #99:#268      // \"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #199 = NameAndType        #95:#96       // currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #200 = NameAndType        #235:#244     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #201 = NameAndType        #118:#119     // close:()V\n+  #202 = NameAndType        #269:#270     // access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #203 = NameAndType        #271:#272     // access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #204 = Utf8\n+  #205 = NameAndType        #273:#274     // equals:(Ljava/lang/Object;)Z\n+  #206 = NameAndType        #97:#98       // trailingNewlineOfFileSkipped:Z\n+  #207 = NameAndType        #120:#121     // readLine:()Ljava/lang/String;\n+  #208 = Utf8               java/lang/IllegalArgumentException\n+  #209 = Utf8               lineCount < 0\n+  #210 = Utf8               java/util/ArrayList\n+  #211 = NameAndType        #99:#275      // \"<init>\":(I)V\n+  #212 = NameAndType        #276:#274     // add:(Ljava/lang/Object;)Z\n+  #213 = NameAndType        #123:#124     // readLines:(I)Ljava/util/List;\n+  #214 = Class              #277          // java/util/Collections\n+  #215 = NameAndType        #278:#279     // reverse:(Ljava/util/List;)V\n+  #216 = NameAndType        #280:#281     // isEmpty:()Z\n+  #217 = Class              #282          // java/lang/System\n+  #218 = NameAndType        #283:#121     // lineSeparator:()Ljava/lang/String;\n+  #219 = NameAndType        #284:#285     // join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #220 = Utf8               java/lang/Object\n+  #221 = Utf8               java/io/Closeable\n+  #222 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$1\n+  #223 = Utf8               java/io/IOException\n+  #224 = Utf8               java/nio/file/Path\n+  #225 = Utf8               java/nio/charset/Charset\n+  #226 = Utf8               java/nio/charset/CharsetEncoder\n+  #227 = Utf8               java/lang/String\n+  #228 = Utf8               java/util/List\n+  #229 = Utf8               defaultCharset\n+  #230 = Utf8               ()Ljava/nio/charset/Charset;\n+  #231 = Utf8               java/io/File\n+  #232 = Utf8               toPath\n+  #233 = Utf8               ()Ljava/nio/file/Path;\n+  #234 = Utf8               org/apache/commons/io/Charsets\n+  #235 = Utf8               toCharset\n+  #236 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #237 = Utf8               newEncoder\n+  #238 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n+  #239 = Utf8               maxBytesPerChar\n+  #240 = Utf8               ()F\n+  #241 = Utf8               java/nio/charset/StandardCharsets\n+  #242 = Utf8               UTF_8\n+  #243 = Utf8               forName\n+  #244 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #245 = Utf8               UTF_16BE\n+  #246 = Utf8               UTF_16LE\n+  #247 = Utf8               UTF_16\n+  #248 = Utf8               (Ljava/lang/String;)V\n+  #249 = Utf8               append\n+  #250 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #251 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #252 = Utf8               org/apache/commons/io/StandardLineSeparator\n+  #253 = Utf8               CRLF\n+  #254 = Utf8               Lorg/apache/commons/io/StandardLineSeparator;\n+  #255 = Utf8               getBytes\n+  #256 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #257 = Utf8               LF\n+  #258 = Utf8               CR\n+  #259 = Utf8               java/nio/file/StandardOpenOption\n+  #260 = Utf8               READ\n+  #261 = Utf8               Ljava/nio/file/StandardOpenOption;\n+  #262 = Utf8               java/nio/file/Files\n+  #263 = Utf8               newByteChannel\n+  #264 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #265 = Utf8               java/nio/channels/SeekableByteChannel\n+  #266 = Utf8               size\n+  #267 = Utf8               ()J\n+  #268 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #269 = Utf8               access$700\n+  #270 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #271 = Utf8               access$800\n+  #272 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #273 = Utf8               equals\n+  #274 = Utf8               (Ljava/lang/Object;)Z\n+  #275 = Utf8               (I)V\n+  #276 = Utf8               add\n+  #277 = Utf8               java/util/Collections\n+  #278 = Utf8               reverse\n+  #279 = Utf8               (Ljava/util/List;)V\n+  #280 = Utf8               isEmpty\n+  #281 = Utf8               ()Z\n+  #282 = Utf8               java/lang/System\n+  #283 = Utf8               lineSeparator\n+  #284 = Utf8               join\n+  #285 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n {\n   private static final java.lang.String EMPTY_STRING = \"\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String\n \n   private static final int DEFAULT_BLOCK_SIZE = 8192;\n@@ -839,15 +833,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 12\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #128                         // (I)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #126                         // (I)Ljava/util/List<Ljava/lang/String;>;\n \n   public java.lang.String toString(int) throws java.io.IOException;\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n"}]}
