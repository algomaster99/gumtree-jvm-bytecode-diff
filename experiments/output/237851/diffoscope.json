{"diffoscope-json-version": 1, "source1": "first/ComparableUtils$ComparableCheckBuilder.class", "source2": "second/ComparableUtils$ComparableCheckBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,43 +5,43 @@\n {\n     private final A a;\n     \n     private ComparableCheckBuilder(final A a) {\n         this.a = a;\n     }\n     \n-    public boolean between(final A b, final A c) {\n-        return this.betweenOrdered((Comparable)b, (Comparable)c) || this.betweenOrdered((Comparable)c, (Comparable)b);\n+    public boolean between(final A a, final A a2) {\n+        return this.betweenOrdered((Comparable)a, (Comparable)a2) || this.betweenOrdered((Comparable)a2, (Comparable)a);\n     }\n     \n-    public boolean betweenExclusive(final A b, final A c) {\n-        return this.betweenOrderedExclusive((Comparable)b, (Comparable)c) || this.betweenOrderedExclusive((Comparable)c, (Comparable)b);\n+    public boolean betweenExclusive(final A a, final A a2) {\n+        return this.betweenOrderedExclusive((Comparable)a, (Comparable)a2) || this.betweenOrderedExclusive((Comparable)a2, (Comparable)a);\n     }\n     \n-    private boolean betweenOrdered(final A b, final A c) {\n-        return this.greaterThanOrEqualTo((Comparable)b) && this.lessThanOrEqualTo((Comparable)c);\n+    private boolean betweenOrdered(final A a, final A a2) {\n+        return this.greaterThanOrEqualTo((Comparable)a) && this.lessThanOrEqualTo((Comparable)a2);\n     }\n     \n-    private boolean betweenOrderedExclusive(final A b, final A c) {\n-        return this.greaterThan((Comparable)b) && this.lessThan((Comparable)c);\n+    private boolean betweenOrderedExclusive(final A a, final A a2) {\n+        return this.greaterThan((Comparable)a) && this.lessThan((Comparable)a2);\n     }\n     \n-    public boolean equalTo(final A b) {\n-        return this.a.compareTo(b) == 0;\n+    public boolean equalTo(final A a) {\n+        return this.a.compareTo(a) == 0;\n     }\n     \n-    public boolean greaterThan(final A b) {\n-        return this.a.compareTo(b) > 0;\n+    public boolean greaterThan(final A a) {\n+        return this.a.compareTo(a) > 0;\n     }\n     \n-    public boolean greaterThanOrEqualTo(final A b) {\n-        return this.a.compareTo(b) >= 0;\n+    public boolean greaterThanOrEqualTo(final A a) {\n+        return this.a.compareTo(a) >= 0;\n     }\n     \n-    public boolean lessThan(final A b) {\n-        return this.a.compareTo(b) < 0;\n+    public boolean lessThan(final A a) {\n+        return this.a.compareTo(a) < 0;\n     }\n     \n-    public boolean lessThanOrEqualTo(final A b) {\n-        return this.a.compareTo(b) <= 0;\n+    public boolean lessThanOrEqualTo(final A a) {\n+        return this.a.compareTo(a) <= 0;\n     }\n }\n"}]}
