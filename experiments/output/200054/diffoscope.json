{"diffoscope-json-version": 1, "source1": "first/BranchHandle.class", "source2": "second/BranchHandle.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,51 +1,51 @@\n \n package org.apache.bcel.generic;\n \n public final class BranchHandle extends InstructionHandle\n {\n     private BranchInstruction bi;\n     \n-    static BranchHandle getBranchHandle(final BranchInstruction i) {\n-        return new BranchHandle(i);\n+    static BranchHandle getBranchHandle(final BranchInstruction branchInstruction) {\n+        return new BranchHandle(branchInstruction);\n     }\n     \n-    private BranchHandle(final BranchInstruction i) {\n-        super((Instruction)i);\n-        this.bi = i;\n+    private BranchHandle(final BranchInstruction bi) {\n+        super((Instruction)bi);\n+        this.bi = bi;\n     }\n     \n     public int getPosition() {\n         return this.bi.getPosition();\n     }\n     \n     public InstructionHandle getTarget() {\n         return this.bi.getTarget();\n     }\n     \n-    public void setInstruction(final Instruction i) {\n-        super.setInstruction(i);\n-        if (!(i instanceof BranchInstruction)) {\n-            throw new ClassGenException(\"Assigning \" + i + \" to branch handle which is not a branch instruction\");\n+    public void setInstruction(final Instruction instruction) {\n+        super.setInstruction(instruction);\n+        if (!(instruction instanceof BranchInstruction)) {\n+            throw new ClassGenException(\"Assigning \" + instruction + \" to branch handle which is not a branch instruction\");\n         }\n-        this.bi = (BranchInstruction)i;\n+        this.bi = (BranchInstruction)instruction;\n     }\n     \n-    void setPosition(final int pos) {\n-        this.bi.setPosition(pos);\n-        super.setPosition(pos);\n+    void setPosition(final int n) {\n+        this.bi.setPosition(n);\n+        super.setPosition(n);\n     }\n     \n-    public void setTarget(final InstructionHandle ih) {\n-        this.bi.setTarget(ih);\n+    public void setTarget(final InstructionHandle target) {\n+        this.bi.setTarget(target);\n     }\n     \n-    protected int updatePosition(final int offset, final int maxOffset) {\n-        final int x = this.bi.updatePosition(offset, maxOffset);\n+    protected int updatePosition(final int n, final int n2) {\n+        final int updatePosition = this.bi.updatePosition(n, n2);\n         super.setPosition(this.bi.getPosition());\n-        return x;\n+        return updatePosition;\n     }\n     \n-    public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh) {\n-        this.bi.updateTarget(oldIh, newIh);\n+    public void updateTarget(final InstructionHandle instructionHandle, final InstructionHandle instructionHandle2) {\n+        this.bi.updateTarget(instructionHandle, instructionHandle2);\n     }\n }\n"}]}
