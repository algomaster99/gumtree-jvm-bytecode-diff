{"diffoscope-json-version": 1, "source1": "first/BlockSort.class", "source2": "second/BlockSort.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -26,14 +26,19 @@\n     private static final int[] INCS;\n     private static final int SMALL_THRESH = 20;\n     private static final int DEPTH_THRESH = 10;\n     private static final int WORK_FACTOR = 30;\n     private static final int SETMASK = 2097152;\n     private static final int CLEARMASK = -2097153;\n     \n+    static {\n+        STACK_SIZE = Math.max(1000, 100);\n+        INCS = new int[] { 1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484 };\n+    }\n+    \n     BlockSort(final BZip2CompressorOutputStream.Data data) {\n         this.stack_ll = new int[BlockSort.STACK_SIZE];\n         this.stack_hh = new int[BlockSort.STACK_SIZE];\n         this.stack_dd = new int[1000];\n         this.mainSort_runningOrder = new int[256];\n         this.mainSort_copy = new int[256];\n         this.mainSort_bigDone = new boolean[256];\n@@ -154,45 +159,45 @@\n                 else {\n                     med = eclass[fmap[hi]];\n                 }\n                 int unLo;\n                 int ltLo = unLo = lo;\n                 int unHi;\n                 int gtHi = unHi = hi;\n-            Label_0275_Outer:\n+            Label_0273_Outer:\n                 while (true) {\n                     if (unLo <= unHi) {\n                         final int n = eclass[fmap[unLo]] - (int)med;\n                         if (n == 0) {\n                             this.fswap(fmap, unLo, ltLo);\n                             ++ltLo;\n                             ++unLo;\n-                            continue Label_0275_Outer;\n+                            continue Label_0273_Outer;\n                         }\n                         if (n <= 0) {\n                             ++unLo;\n-                            continue Label_0275_Outer;\n+                            continue Label_0273_Outer;\n                         }\n                     }\n                     while (true) {\n                         while (unLo <= unHi) {\n                             final int n = eclass[fmap[unHi]] - (int)med;\n                             if (n == 0) {\n                                 this.fswap(fmap, unHi, gtHi);\n                                 --gtHi;\n                                 --unHi;\n                             }\n                             else if (n < 0) {\n                                 if (unLo > unHi) {\n-                                    break Label_0275_Outer;\n+                                    break Label_0273_Outer;\n                                 }\n                                 this.fswap(fmap, unLo, unHi);\n                                 ++unLo;\n                                 --unHi;\n-                                continue Label_0275_Outer;\n+                                continue Label_0273_Outer;\n                             }\n                             else {\n                                 --unHi;\n                             }\n                         }\n                         continue;\n                     }\n@@ -311,27 +316,27 @@\n         final int[] fmap = dataShadow.fmap;\n         final char[] quadrant = this.quadrant;\n         final byte[] block = dataShadow.block;\n         final int lastPlus1 = lastShadow + 1;\n         final boolean firstAttemptShadow = this.firstAttempt;\n         final int workLimitShadow = this.workLimit;\n         int workDoneShadow = this.workDone;\n-    Label_0905:\n+    Label_0912:\n         while (--hp >= 0) {\n             final int h = BlockSort.INCS[hp];\n             final int mj = lo + h - 1;\n             int i = lo + h;\n             while (i <= hi) {\n                 for (int k = 3; i <= hi && --k >= 0; ++i) {\n                     final int v = fmap[i];\n                     final int vd = v + d;\n                     int j = i;\n                     boolean onceRunned = false;\n                     int a = 0;\n-                Label_0176:\n+                Label_0155:\n                     while (true) {\n                         if (onceRunned) {\n                             fmap[j] = a;\n                             if ((j -= h) <= mj) {\n                                 break;\n                             }\n                         }\n@@ -371,64 +376,64 @@\n                                                                                     if (i3 >= lastPlus1) {\n                                                                                         i3 -= lastPlus1;\n                                                                                     }\n                                                                                     ++workDoneShadow;\n                                                                                 }\n                                                                                 else {\n                                                                                     if (quadrant[i2 + 3] > quadrant[i3 + 3]) {\n-                                                                                        continue Label_0176;\n+                                                                                        continue Label_0155;\n                                                                                     }\n                                                                                     break;\n                                                                                 }\n                                                                             }\n                                                                             else {\n                                                                                 if ((block[i2 + 4] & 0xFF) > (block[i3 + 4] & 0xFF)) {\n-                                                                                    continue Label_0176;\n+                                                                                    continue Label_0155;\n                                                                                 }\n                                                                                 break;\n                                                                             }\n                                                                         }\n                                                                         else {\n                                                                             if (quadrant[i2 + 2] > quadrant[i3 + 2]) {\n-                                                                                continue Label_0176;\n+                                                                                continue Label_0155;\n                                                                             }\n                                                                             break;\n                                                                         }\n                                                                     }\n                                                                     else {\n                                                                         if ((block[i2 + 3] & 0xFF) > (block[i3 + 3] & 0xFF)) {\n-                                                                            continue Label_0176;\n+                                                                            continue Label_0155;\n                                                                         }\n                                                                         break;\n                                                                     }\n                                                                 }\n                                                                 else {\n                                                                     if (quadrant[i2 + 1] > quadrant[i3 + 1]) {\n-                                                                        continue Label_0176;\n+                                                                        continue Label_0155;\n                                                                     }\n                                                                     break;\n                                                                 }\n                                                             }\n                                                             else {\n                                                                 if ((block[i2 + 2] & 0xFF) > (block[i3 + 2] & 0xFF)) {\n-                                                                    continue Label_0176;\n+                                                                    continue Label_0155;\n                                                                 }\n                                                                 break;\n                                                             }\n                                                         }\n                                                         else {\n                                                             if (quadrant[i2] > quadrant[i3]) {\n-                                                                continue Label_0176;\n+                                                                continue Label_0155;\n                                                             }\n                                                             break;\n                                                         }\n                                                     }\n                                                     else {\n                                                         if ((block[i2 + 1] & 0xFF) > (block[i3 + 1] & 0xFF)) {\n-                                                            continue Label_0176;\n+                                                            continue Label_0155;\n                                                         }\n                                                         break;\n                                                     }\n                                                 }\n                                                 break;\n                                             }\n                                             if ((block[i2] & 0xFF) > (block[i3] & 0xFF)) {\n@@ -470,15 +475,15 @@\n                             }\n                             break;\n                         }\n                     }\n                     fmap[j] = v;\n                 }\n                 if (firstAttemptShadow && i <= hi && workDoneShadow > workLimitShadow) {\n-                    break Label_0905;\n+                    break Label_0912;\n                 }\n             }\n         }\n         this.workDone = workDoneShadow;\n         return firstAttemptShadow && workDoneShadow > workLimitShadow;\n     }\n     \n@@ -517,28 +522,24 @@\n                 final int d2 = d + 1;\n                 final int med = med3(block[fmap[lo] + d2] & 0xFF, block[fmap[hi] + d2] & 0xFF, block[fmap[lo + hi >>> 1] + d2] & 0xFF);\n                 int unLo = lo;\n                 int unHi = hi;\n                 int ltLo = lo;\n                 int gtHi = hi;\n                 while (true) {\n-                    Label_0265: {\n-                        if (unLo <= unHi) {\n-                            final int n = (block[fmap[unLo] + d2] & 0xFF) - med;\n-                            if (n == 0) {\n-                                final int temp = fmap[unLo];\n-                                fmap[unLo++] = fmap[ltLo];\n-                                fmap[ltLo++] = temp;\n-                            }\n-                            else {\n-                                if (n >= 0) {\n-                                    break Label_0265;\n-                                }\n-                                ++unLo;\n-                            }\n+                    if (unLo <= unHi) {\n+                        final int n = (block[fmap[unLo] + d2] & 0xFF) - med;\n+                        if (n == 0) {\n+                            final int temp = fmap[unLo];\n+                            fmap[unLo++] = fmap[ltLo];\n+                            fmap[ltLo++] = temp;\n+                            continue;\n+                        }\n+                        if (n < 0) {\n+                            ++unLo;\n                             continue;\n                         }\n                     }\n                     while (unLo <= unHi) {\n                         final int n = (block[fmap[unHi] + d2] & 0xFF) - med;\n                         if (n == 0) {\n                             final int temp = fmap[unHi];\n@@ -706,13 +707,8 @@\n                     if (a2update < 20) {\n                         quadrant[a2update + lastShadow + 1] = qVal;\n                     }\n                 }\n             }\n         }\n     }\n-    \n-    static {\n-        STACK_SIZE = Math.max(1000, 100);\n-        INCS = new int[] { 1, 4, 13, 40, 121, 364, 1093, 3280, 9841, 29524, 88573, 265720, 797161, 2391484 };\n-    }\n }\n"}]}
