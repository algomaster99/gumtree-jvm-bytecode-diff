{"diffoscope-json-version": 1, "source1": "first/BoundedSeekableByteChannelInputStream.class", "source2": "second/BoundedSeekableByteChannelInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,22 +5,22 @@\n import java.nio.ByteBuffer;\n import java.nio.channels.SeekableByteChannel;\n \n public class BoundedSeekableByteChannelInputStream extends BoundedArchiveInputStream\n {\n     private final SeekableByteChannel channel;\n     \n-    public BoundedSeekableByteChannelInputStream(final long start, final long remaining, final SeekableByteChannel channel) {\n-        super(start, remaining);\n+    public BoundedSeekableByteChannelInputStream(final long n, final long n2, final SeekableByteChannel channel) {\n+        super(n, n2);\n         this.channel = channel;\n     }\n     \n-    protected int read(final long pos, final ByteBuffer buf) throws IOException {\n+    protected int read(final long n, final ByteBuffer byteBuffer) throws IOException {\n         final int read;\n         synchronized (this.channel) {\n-            this.channel.position(pos);\n-            read = this.channel.read(buf);\n+            this.channel.position(n);\n+            read = this.channel.read(byteBuffer);\n         }\n-        buf.flip();\n+        byteBuffer.flip();\n         return read;\n     }\n }\n"}]}
