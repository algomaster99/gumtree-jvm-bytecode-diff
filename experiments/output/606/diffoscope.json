{"diffoscope-json-version": 1, "source1": "first/ArrayElementValueGen.class", "source2": "second/ArrayElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,53 +1,53 @@\n-  SHA-256 checksum c85d2854d95d03a9f1856290c55a90a54d806a4486cf17436a515b8ad7eafd5a\n+  SHA-256 checksum 19a9502304b166ca67b35a587f36622a731bbfb6d7f4358ccc884ff33c14579a\n   Compiled from \"ArrayElementValueGen.java\"\n public class org.apache.bcel.generic.ArrayElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #36                         // org/apache/bcel/generic/ArrayElementValueGen\n   super_class: #1                         // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 1, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Class              #100          // org/apache/bcel/generic/ElementValueGen\n-    #2 = Methodref          #1.#101       // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #3 = Class              #102          // java/util/ArrayList\n-    #4 = Methodref          #3.#103       // java/util/ArrayList.\"<init>\":()V\n-    #5 = Fieldref           #36.#104      // org/apache/bcel/generic/ArrayElementValueGen.evalues:Ljava/util/List;\n-    #6 = Methodref          #27.#105      // org/apache/bcel/classfile/ArrayElementValue.getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n-    #7 = Methodref          #1.#106       // org/apache/bcel/generic/ElementValueGen.copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n-    #8 = InterfaceMethodref #107.#108     // java/util/List.add:(Ljava/lang/Object;)Z\n-    #9 = Class              #109          // java/lang/IllegalArgumentException\n-   #10 = Class              #110          // java/lang/StringBuilder\n-   #11 = Methodref          #10.#103      // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #111          // Only element values of type array can be built with this ctor - type specified:\n-   #13 = Methodref          #10.#112      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#113      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #10.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #9.#115       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #1.#116       // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #18 = Methodref          #117.#118     // java/io/DataOutputStream.writeByte:(I)V\n-   #19 = InterfaceMethodref #107.#119     // java/util/List.size:()I\n-   #20 = Methodref          #117.#120     // java/io/DataOutputStream.writeShort:(I)V\n-   #21 = InterfaceMethodref #107.#121     // java/util/List.iterator:()Ljava/util/Iterator;\n-   #22 = InterfaceMethodref #122.#123     // java/util/Iterator.hasNext:()Z\n-   #23 = InterfaceMethodref #122.#124     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #24 = Methodref          #1.#125       // org/apache/bcel/generic/ElementValueGen.dump:(Ljava/io/DataOutputStream;)V\n-   #25 = Class              #126          // org/apache/bcel/classfile/ElementValue\n-   #26 = Methodref          #1.#127       // org/apache/bcel/generic/ElementValueGen.getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n-   #27 = Class              #128          // org/apache/bcel/classfile/ArrayElementValue\n-   #28 = Methodref          #36.#129      // org/apache/bcel/generic/ArrayElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #29 = Methodref          #130.#131     // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #30 = Methodref          #27.#132      // org/apache/bcel/classfile/ArrayElementValue.\"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #31 = String             #133          // [\n-   #32 = String             #134          //\n-   #33 = String             #135          // ,\n-   #34 = Methodref          #1.#136       // org/apache/bcel/generic/ElementValueGen.stringifyValue:()Ljava/lang/String;\n-   #35 = String             #137          // ]\n-   #36 = Class              #138          // org/apache/bcel/generic/ArrayElementValueGen\n+    #1 = Class              #97           // org/apache/bcel/generic/ElementValueGen\n+    #2 = Methodref          #1.#98        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #3 = Class              #99           // java/util/ArrayList\n+    #4 = Methodref          #3.#100       // java/util/ArrayList.\"<init>\":()V\n+    #5 = Fieldref           #36.#101      // org/apache/bcel/generic/ArrayElementValueGen.evalues:Ljava/util/List;\n+    #6 = Methodref          #27.#102      // org/apache/bcel/classfile/ArrayElementValue.getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n+    #7 = Methodref          #1.#103       // org/apache/bcel/generic/ElementValueGen.copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n+    #8 = InterfaceMethodref #104.#105     // java/util/List.add:(Ljava/lang/Object;)Z\n+    #9 = Class              #106          // java/lang/IllegalArgumentException\n+   #10 = Class              #107          // java/lang/StringBuilder\n+   #11 = Methodref          #10.#100      // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #108          // Only element values of type array can be built with this ctor - type specified:\n+   #13 = Methodref          #10.#109      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#110      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #10.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #9.#112       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #1.#113       // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #18 = Methodref          #114.#115     // java/io/DataOutputStream.writeByte:(I)V\n+   #19 = InterfaceMethodref #104.#116     // java/util/List.size:()I\n+   #20 = Methodref          #114.#117     // java/io/DataOutputStream.writeShort:(I)V\n+   #21 = InterfaceMethodref #104.#118     // java/util/List.iterator:()Ljava/util/Iterator;\n+   #22 = InterfaceMethodref #76.#119      // java/util/Iterator.hasNext:()Z\n+   #23 = InterfaceMethodref #76.#120      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #24 = Methodref          #1.#121       // org/apache/bcel/generic/ElementValueGen.dump:(Ljava/io/DataOutputStream;)V\n+   #25 = Class              #122          // org/apache/bcel/classfile/ElementValue\n+   #26 = Methodref          #1.#123       // org/apache/bcel/generic/ElementValueGen.getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n+   #27 = Class              #124          // org/apache/bcel/classfile/ArrayElementValue\n+   #28 = Methodref          #36.#125      // org/apache/bcel/generic/ArrayElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #29 = Methodref          #59.#126      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #30 = Methodref          #27.#127      // org/apache/bcel/classfile/ArrayElementValue.\"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #31 = String             #128          // [\n+   #32 = String             #129          //\n+   #33 = String             #130          // ,\n+   #34 = Methodref          #1.#131       // org/apache/bcel/generic/ElementValueGen.stringifyValue:()Ljava/lang/String;\n+   #35 = String             #132          // ]\n+   #36 = Class              #133          // org/apache/bcel/generic/ArrayElementValueGen\n    #37 = Utf8               evalues\n    #38 = Utf8               Ljava/util/List;\n    #39 = Utf8               Signature\n    #40 = Utf8               Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n    #41 = Utf8               <init>\n    #42 = Utf8               (Lorg/apache/bcel/classfile/ArrayElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n    #43 = Utf8               Code\n@@ -62,128 +62,123 @@\n    #52 = Utf8               cpool\n    #53 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n    #54 = Utf8               copyPoolEntries\n    #55 = Utf8               Z\n    #56 = Utf8               in\n    #57 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n    #58 = Utf8               StackMapTable\n-   #59 = Class              #138          // org/apache/bcel/generic/ArrayElementValueGen\n-   #60 = Class              #128          // org/apache/bcel/classfile/ArrayElementValue\n-   #61 = Class              #139          // org/apache/bcel/generic/ConstantPoolGen\n-   #62 = Class              #57           // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n-   #63 = Utf8               (Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #64 = Utf8               cp\n-   #65 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #66 = Utf8               datum\n-   #67 = Utf8               type\n-   #68 = Utf8               I\n-   #69 = Utf8               datums\n-   #70 = Utf8               addElement\n-   #71 = Utf8               (Lorg/apache/bcel/generic/ElementValueGen;)V\n-   #72 = Utf8               gen\n-   #73 = Utf8               Lorg/apache/bcel/generic/ElementValueGen;\n-   #74 = Utf8               dump\n-   #75 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #76 = Utf8               dos\n-   #77 = Utf8               Ljava/io/DataOutputStream;\n-   #78 = Class              #140          // java/util/Iterator\n-   #79 = Utf8               Exceptions\n-   #80 = Class              #141          // java/io/IOException\n-   #81 = Utf8               getElementValue\n-   #82 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #83 = Utf8               immutableData\n-   #84 = Utf8               i\n-   #85 = Utf8               getElementValues\n-   #86 = Utf8               ()Ljava/util/List;\n-   #87 = Utf8               ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n-   #88 = Utf8               getElementValuesSize\n-   #89 = Utf8               ()I\n-   #90 = Utf8               stringifyValue\n-   #91 = Utf8               ()Ljava/lang/String;\n-   #92 = Utf8               sb\n-   #93 = Utf8               Ljava/lang/StringBuilder;\n-   #94 = Utf8               comma\n-   #95 = Utf8               Ljava/lang/String;\n-   #96 = Class              #110          // java/lang/StringBuilder\n-   #97 = Class              #142          // java/lang/String\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               ArrayElementValueGen.java\n-  #100 = Utf8               org/apache/bcel/generic/ElementValueGen\n-  #101 = NameAndType        #41:#143      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #102 = Utf8               java/util/ArrayList\n-  #103 = NameAndType        #41:#144      // \"<init>\":()V\n-  #104 = NameAndType        #37:#38       // evalues:Ljava/util/List;\n-  #105 = NameAndType        #145:#146     // getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n-  #106 = NameAndType        #147:#148     // copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n-  #107 = Class              #149          // java/util/List\n-  #108 = NameAndType        #150:#151     // add:(Ljava/lang/Object;)Z\n-  #109 = Utf8               java/lang/IllegalArgumentException\n-  #110 = Utf8               java/lang/StringBuilder\n-  #111 = Utf8               Only element values of type array can be built with this ctor - type specified:\n-  #112 = NameAndType        #152:#153     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #113 = NameAndType        #152:#154     // append:(I)Ljava/lang/StringBuilder;\n-  #114 = NameAndType        #155:#91      // toString:()Ljava/lang/String;\n-  #115 = NameAndType        #41:#156      // \"<init>\":(Ljava/lang/String;)V\n-  #116 = NameAndType        #157:#89      // getElementValueType:()I\n-  #117 = Class              #158          // java/io/DataOutputStream\n-  #118 = NameAndType        #159:#160     // writeByte:(I)V\n-  #119 = NameAndType        #161:#89      // size:()I\n-  #120 = NameAndType        #162:#160     // writeShort:(I)V\n-  #121 = NameAndType        #163:#164     // iterator:()Ljava/util/Iterator;\n-  #122 = Class              #140          // java/util/Iterator\n-  #123 = NameAndType        #165:#166     // hasNext:()Z\n-  #124 = NameAndType        #167:#168     // next:()Ljava/lang/Object;\n-  #125 = NameAndType        #74:#75       // dump:(Ljava/io/DataOutputStream;)V\n-  #126 = Utf8               org/apache/bcel/classfile/ElementValue\n-  #127 = NameAndType        #81:#82       // getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n-  #128 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n-  #129 = NameAndType        #169:#170     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #130 = Class              #139          // org/apache/bcel/generic/ConstantPoolGen\n-  #131 = NameAndType        #169:#171     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #132 = NameAndType        #41:#172      // \"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #133 = Utf8               [\n-  #134 = Utf8\n-  #135 = Utf8               ,\n-  #136 = NameAndType        #90:#91       // stringifyValue:()Ljava/lang/String;\n-  #137 = Utf8               ]\n-  #138 = Utf8               org/apache/bcel/generic/ArrayElementValueGen\n-  #139 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #140 = Utf8               java/util/Iterator\n-  #141 = Utf8               java/io/IOException\n-  #142 = Utf8               java/lang/String\n-  #143 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #144 = Utf8               ()V\n-  #145 = Utf8               getElementValuesArray\n-  #146 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n-  #147 = Utf8               copy\n-  #148 = Utf8               (Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n-  #149 = Utf8               java/util/List\n-  #150 = Utf8               add\n-  #151 = Utf8               (Ljava/lang/Object;)Z\n-  #152 = Utf8               append\n-  #153 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #154 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #155 = Utf8               toString\n-  #156 = Utf8               (Ljava/lang/String;)V\n-  #157 = Utf8               getElementValueType\n-  #158 = Utf8               java/io/DataOutputStream\n-  #159 = Utf8               writeByte\n-  #160 = Utf8               (I)V\n-  #161 = Utf8               size\n-  #162 = Utf8               writeShort\n-  #163 = Utf8               iterator\n-  #164 = Utf8               ()Ljava/util/Iterator;\n-  #165 = Utf8               hasNext\n-  #166 = Utf8               ()Z\n-  #167 = Utf8               next\n-  #168 = Utf8               ()Ljava/lang/Object;\n-  #169 = Utf8               getConstantPool\n-  #170 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #171 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #172 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #59 = Class              #134          // org/apache/bcel/generic/ConstantPoolGen\n+   #60 = Class              #57           // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n+   #61 = Utf8               (Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #62 = Utf8               cp\n+   #63 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #64 = Utf8               datum\n+   #65 = Utf8               type\n+   #66 = Utf8               I\n+   #67 = Utf8               datums\n+   #68 = Utf8               addElement\n+   #69 = Utf8               (Lorg/apache/bcel/generic/ElementValueGen;)V\n+   #70 = Utf8               gen\n+   #71 = Utf8               Lorg/apache/bcel/generic/ElementValueGen;\n+   #72 = Utf8               dump\n+   #73 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #74 = Utf8               dos\n+   #75 = Utf8               Ljava/io/DataOutputStream;\n+   #76 = Class              #135          // java/util/Iterator\n+   #77 = Utf8               Exceptions\n+   #78 = Class              #136          // java/io/IOException\n+   #79 = Utf8               getElementValue\n+   #80 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+   #81 = Utf8               immutableData\n+   #82 = Utf8               i\n+   #83 = Utf8               getElementValues\n+   #84 = Utf8               ()Ljava/util/List;\n+   #85 = Utf8               ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n+   #86 = Utf8               getElementValuesSize\n+   #87 = Utf8               ()I\n+   #88 = Utf8               stringifyValue\n+   #89 = Utf8               ()Ljava/lang/String;\n+   #90 = Utf8               sb\n+   #91 = Utf8               Ljava/lang/StringBuilder;\n+   #92 = Utf8               comma\n+   #93 = Utf8               Ljava/lang/String;\n+   #94 = Class              #137          // java/lang/String\n+   #95 = Utf8               SourceFile\n+   #96 = Utf8               ArrayElementValueGen.java\n+   #97 = Utf8               org/apache/bcel/generic/ElementValueGen\n+   #98 = NameAndType        #41:#138      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #99 = Utf8               java/util/ArrayList\n+  #100 = NameAndType        #41:#139      // \"<init>\":()V\n+  #101 = NameAndType        #37:#38       // evalues:Ljava/util/List;\n+  #102 = NameAndType        #140:#141     // getElementValuesArray:()[Lorg/apache/bcel/classfile/ElementValue;\n+  #103 = NameAndType        #142:#143     // copy:(Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n+  #104 = Class              #144          // java/util/List\n+  #105 = NameAndType        #145:#146     // add:(Ljava/lang/Object;)Z\n+  #106 = Utf8               java/lang/IllegalArgumentException\n+  #107 = Utf8               java/lang/StringBuilder\n+  #108 = Utf8               Only element values of type array can be built with this ctor - type specified:\n+  #109 = NameAndType        #147:#148     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #110 = NameAndType        #147:#149     // append:(I)Ljava/lang/StringBuilder;\n+  #111 = NameAndType        #150:#89      // toString:()Ljava/lang/String;\n+  #112 = NameAndType        #41:#151      // \"<init>\":(Ljava/lang/String;)V\n+  #113 = NameAndType        #152:#87      // getElementValueType:()I\n+  #114 = Class              #153          // java/io/DataOutputStream\n+  #115 = NameAndType        #154:#155     // writeByte:(I)V\n+  #116 = NameAndType        #156:#87      // size:()I\n+  #117 = NameAndType        #157:#155     // writeShort:(I)V\n+  #118 = NameAndType        #158:#159     // iterator:()Ljava/util/Iterator;\n+  #119 = NameAndType        #160:#161     // hasNext:()Z\n+  #120 = NameAndType        #162:#163     // next:()Ljava/lang/Object;\n+  #121 = NameAndType        #72:#73       // dump:(Ljava/io/DataOutputStream;)V\n+  #122 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #123 = NameAndType        #79:#80       // getElementValue:()Lorg/apache/bcel/classfile/ElementValue;\n+  #124 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n+  #125 = NameAndType        #164:#165     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #126 = NameAndType        #164:#166     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #127 = NameAndType        #41:#167      // \"<init>\":(I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #128 = Utf8               [\n+  #129 = Utf8\n+  #130 = Utf8               ,\n+  #131 = NameAndType        #88:#89       // stringifyValue:()Ljava/lang/String;\n+  #132 = Utf8               ]\n+  #133 = Utf8               org/apache/bcel/generic/ArrayElementValueGen\n+  #134 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #135 = Utf8               java/util/Iterator\n+  #136 = Utf8               java/io/IOException\n+  #137 = Utf8               java/lang/String\n+  #138 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #139 = Utf8               ()V\n+  #140 = Utf8               getElementValuesArray\n+  #141 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n+  #142 = Utf8               copy\n+  #143 = Utf8               (Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)Lorg/apache/bcel/generic/ElementValueGen;\n+  #144 = Utf8               java/util/List\n+  #145 = Utf8               add\n+  #146 = Utf8               (Ljava/lang/Object;)Z\n+  #147 = Utf8               append\n+  #148 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #149 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #150 = Utf8               toString\n+  #151 = Utf8               (Ljava/lang/String;)V\n+  #152 = Utf8               getElementValueType\n+  #153 = Utf8               java/io/DataOutputStream\n+  #154 = Utf8               writeByte\n+  #155 = Utf8               (I)V\n+  #156 = Utf8               size\n+  #157 = Utf8               writeShort\n+  #158 = Utf8               iterator\n+  #159 = Utf8               ()Ljava/util/Iterator;\n+  #160 = Utf8               hasNext\n+  #161 = Utf8               ()Z\n+  #162 = Utf8               next\n+  #163 = Utf8               ()Ljava/lang/Object;\n+  #164 = Utf8               getConstantPool\n+  #165 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #166 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #167 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n {\n   private final java.util.List<org.apache.bcel.generic.ElementValueGen> evalues;\n     descriptor: Ljava/util/List;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     Signature: #40                          // Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n \n   public org.apache.bcel.generic.ArrayElementValueGen(org.apache.bcel.classfile.ArrayElementValue, org.apache.bcel.generic.ConstantPoolGen, boolean);\n@@ -496,15 +491,15 @@\n          1: getfield      #5                  // Field evalues:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 92: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/generic/ArrayElementValueGen;\n-    Signature: #87                          // ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n+    Signature: #85                          // ()Ljava/util/List<Lorg/apache/bcel/generic/ElementValueGen;>;\n \n   public int getElementValuesSize();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
