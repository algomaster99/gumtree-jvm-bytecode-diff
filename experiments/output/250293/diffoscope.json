{"diffoscope-json-version": 1, "source1": "first/JavaLanguageParser$SwitchRulesContext.class", "source2": "second/JavaLanguageParser$SwitchRulesContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,22 +7,22 @@\n \n public static class SwitchRulesContext extends JavaLanguageParser.SwitchBlockContext\n {\n     public List<JavaLanguageParser.SwitchLabeledRuleContext> switchLabeledRule() {\n         return this.getRuleContexts((Class)JavaLanguageParser.SwitchLabeledRuleContext.class);\n     }\n     \n-    public JavaLanguageParser.SwitchLabeledRuleContext switchLabeledRule(final int i) {\n-        return (JavaLanguageParser.SwitchLabeledRuleContext)this.getRuleContext((Class)JavaLanguageParser.SwitchLabeledRuleContext.class, i);\n+    public JavaLanguageParser.SwitchLabeledRuleContext switchLabeledRule(final int n) {\n+        return (JavaLanguageParser.SwitchLabeledRuleContext)this.getRuleContext((Class)JavaLanguageParser.SwitchLabeledRuleContext.class, n);\n     }\n     \n-    public SwitchRulesContext(final JavaLanguageParser.SwitchBlockContext ctx) {\n-        this.copyFrom(ctx);\n+    public SwitchRulesContext(final JavaLanguageParser.SwitchBlockContext switchBlockContext) {\n+        this.copyFrom(switchBlockContext);\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavaLanguageParserVisitor) {\n-            return (T)((JavaLanguageParserVisitor)visitor).visitSwitchRules(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavaLanguageParserVisitor) {\n+            return (T)((JavaLanguageParserVisitor)parseTreeVisitor).visitSwitchRules(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
