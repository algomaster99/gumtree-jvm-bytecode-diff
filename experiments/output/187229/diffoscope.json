{"diffoscope-json-version": 1, "source1": "first/TarUtils.class", "source2": "second/TarUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,315 +1,315 @@\n-  SHA-256 checksum c1bff6b0694badbc4329329ceeba8f2318b8d0022273b7a1d1b1b21fbbaa48fc\n+  SHA-256 checksum 82cbe0a6734283458bd57442a16d5458458a44f7e221ca8767c413bc5bdc0e5e\n   Compiled from \"TarUtils.java\"\n public class org.apache.commons.compress.archivers.tar.TarUtils\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #68                         // org/apache/commons/compress/archivers/tar/TarUtils\n-  super_class: #72                        // java/lang/Object\n+  this_class: #19                         // org/apache/commons/compress/archivers/tar/TarUtils\n+  super_class: #4                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 22, attributes: 3\n Constant pool:\n-    #1 = Class              #173          // org/apache/commons/compress/archivers/tar/TarConstants\n-    #2 = Methodref          #72.#174      // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #175          // java/lang/IllegalArgumentException\n-    #4 = InvokeDynamic      #0:#179       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-    #5 = Methodref          #3.#180       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #6 = Methodref          #68.#181      // org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage:([BIIIB)Ljava/lang/String;\n-    #7 = Methodref          #68.#182      // org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n-    #8 = Methodref          #68.#183      // org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong:([BIIZ)J\n-    #9 = Methodref          #68.#184      // org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger:([BIIZ)J\n-   #10 = InvokeDynamic      #1:#186       // #1:makeConcatWithConstants:(II)Ljava/lang/String;\n-   #11 = Double             2.0d\n-   #13 = Double             8.0d\n-   #15 = Methodref          #187.#188     // java/lang/Math.pow:(DD)D\n-   #16 = Methodref          #189.#190     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #17 = Class              #191          // java/math/BigInteger\n-   #18 = Methodref          #17.#192      // java/math/BigInteger.\"<init>\":([B)V\n-   #19 = Long               -1l\n-   #21 = Methodref          #17.#193      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #22 = Methodref          #17.#194      // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-   #23 = Methodref          #17.#195      // java/math/BigInteger.not:()Ljava/math/BigInteger;\n-   #24 = Methodref          #17.#196      // java/math/BigInteger.bitLength:()I\n-   #25 = Methodref          #17.#197      // java/math/BigInteger.longValue:()J\n-   #26 = Class              #198          // java/lang/String\n-   #27 = Methodref          #26.#199      // java/lang/String.\"<init>\":([BII)V\n-   #28 = String             #200          // \\u0000\n-   #29 = String             #201          // {NUL}\n-   #30 = Methodref          #26.#202      // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #31 = InvokeDynamic      #2:#204       // #2:makeConcatWithConstants:(BILjava/lang/String;I)Ljava/lang/String;\n-   #32 = Fieldref           #68.#205      // org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #33 = Methodref          #68.#206      // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-   #34 = Class              #207          // java/io/IOException\n-   #35 = Fieldref           #68.#208      // org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #36 = Class              #209          // java/lang/RuntimeException\n-   #37 = Methodref          #36.#210      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #38 = InterfaceMethodref #211.#212     // org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n-   #39 = String             #213          //\n-   #40 = Methodref          #68.#214      // org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n-   #41 = Class              #215          // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-   #42 = Methodref          #41.#216      // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.\"<init>\":(JJ)V\n-   #43 = Methodref          #68.#217      // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-   #44 = Methodref          #26.#218      // java/lang/String.length:()I\n-   #45 = InterfaceMethodref #211.#219     // org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-   #46 = Methodref          #141.#220     // java/nio/ByteBuffer.limit:()I\n-   #47 = Methodref          #26.#221      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #48 = Methodref          #141.#222     // java/nio/ByteBuffer.position:()I\n-   #49 = Methodref          #141.#223     // java/nio/ByteBuffer.array:()[B\n-   #50 = Methodref          #141.#224     // java/nio/ByteBuffer.arrayOffset:()I\n-   #51 = Long               7l\n-   #53 = Methodref          #225.#226     // java/lang/Long.toOctalString:(J)Ljava/lang/String;\n-   #54 = InvokeDynamic      #3:#228       // #3:makeConcatWithConstants:(JLjava/lang/String;I)Ljava/lang/String;\n-   #55 = Methodref          #68.#229      // org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString:(J[BII)V\n-   #56 = Long               2097151l\n-   #58 = Long               8589934591l\n-   #60 = Methodref          #68.#230      // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n-   #61 = Methodref          #68.#231      // org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary:(J[BIIZ)V\n-   #62 = Methodref          #68.#232      // org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary:(J[BIIZ)V\n-   #63 = Methodref          #187.#233     // java/lang/Math.abs:(J)J\n-   #64 = InvokeDynamic      #4:#235       // #4:makeConcatWithConstants:(JI)Ljava/lang/String;\n-   #65 = Long               255l\n-   #67 = Methodref          #17.#236      // java/math/BigInteger.toByteArray:()[B\n-   #68 = Class              #237          // org/apache/commons/compress/archivers/tar/TarUtils\n-   #69 = Methodref          #238.#239     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #70 = Class              #240          // org/apache/commons/compress/archivers/tar/TarUtils$1\n-   #71 = Methodref          #70.#174      // org/apache/commons/compress/archivers/tar/TarUtils$1.\"<init>\":()V\n-   #72 = Class              #241          // java/lang/Object\n-   #73 = Utf8               InnerClasses\n-   #74 = Utf8               BYTE_MASK\n-   #75 = Utf8               I\n-   #76 = Utf8               ConstantValue\n-   #77 = Integer            255\n-   #78 = Utf8               DEFAULT_ENCODING\n-   #79 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #80 = Utf8               FALLBACK_ENCODING\n-   #81 = Utf8               <init>\n-   #82 = Utf8               ()V\n-   #83 = Utf8               Code\n-   #84 = Utf8               LineNumberTable\n-   #85 = Utf8               LocalVariableTable\n-   #86 = Utf8               this\n-   #87 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarUtils;\n-   #88 = Utf8               parseOctal\n-   #89 = Utf8               ([BII)J\n-   #90 = Utf8               currentByte\n-   #91 = Utf8               B\n-   #92 = Utf8               buffer\n-   #93 = Utf8               [B\n-   #94 = Utf8               offset\n-   #95 = Utf8               length\n-   #96 = Utf8               result\n-   #97 = Utf8               J\n-   #98 = Utf8               end\n-   #99 = Utf8               start\n-  #100 = Utf8               trailer\n-  #101 = Utf8               StackMapTable\n-  #102 = Utf8               parseOctalOrBinary\n-  #103 = Utf8               negative\n-  #104 = Utf8               Z\n-  #105 = Utf8               parseBinaryLong\n-  #106 = Utf8               ([BIIZ)J\n-  #107 = Utf8               i\n-  #108 = Utf8               val\n-  #109 = Utf8               parseBinaryBigInteger\n-  #110 = Utf8               remainder\n-  #111 = Utf8               Ljava/math/BigInteger;\n-  #112 = Class              #93           // \"[B\"\n-  #113 = Utf8               parseBoolean\n-  #114 = Utf8               ([BI)Z\n-  #115 = Utf8               exceptionMessage\n-  #116 = Utf8               ([BIIIB)Ljava/lang/String;\n-  #117 = Utf8               current\n-  #118 = Utf8               string\n-  #119 = Utf8               Ljava/lang/String;\n-  #120 = Utf8               parseName\n-  #121 = Utf8               ([BII)Ljava/lang/String;\n-  #122 = Utf8               ex2\n-  #123 = Utf8               Ljava/io/IOException;\n-  #124 = Utf8               ex\n-  #125 = Utf8               ([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #126 = Utf8               b\n-  #127 = Utf8               encoding\n-  #128 = Utf8               len\n-  #129 = Utf8               Exceptions\n-  #130 = Utf8               parseSparse\n-  #131 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n-  #132 = Utf8               sparseOffset\n-  #133 = Utf8               sparseNumbytes\n-  #134 = Utf8               formatNameBytes\n-  #135 = Utf8               (Ljava/lang/String;[BII)I\n-  #136 = Utf8               name\n-  #137 = Utf8               buf\n-  #138 = Utf8               (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #139 = Utf8               Ljava/nio/ByteBuffer;\n-  #140 = Utf8               limit\n-  #141 = Class              #242          // java/nio/ByteBuffer\n-  #142 = Utf8               formatUnsignedOctalString\n-  #143 = Utf8               (J[BII)V\n-  #144 = Utf8               value\n-  #145 = Utf8               remaining\n-  #146 = Utf8               formatOctalBytes\n-  #147 = Utf8               (J[BII)I\n-  #148 = Utf8               idx\n-  #149 = Utf8               formatLongOctalBytes\n-  #150 = Utf8               formatLongOctalOrBinaryBytes\n-  #151 = Utf8               maxAsOctalChar\n-  #152 = Utf8               formatLongBinary\n-  #153 = Utf8               (J[BIIZ)V\n-  #154 = Utf8               bits\n-  #155 = Utf8               max\n-  #156 = Utf8               formatBigIntegerBinary\n-  #157 = Utf8               off\n-  #158 = Utf8               fill\n-  #159 = Utf8               formatCheckSumOctalBytes\n-  #160 = Utf8               computeCheckSum\n-  #161 = Utf8               ([B)J\n-  #162 = Utf8               element\n-  #163 = Utf8               sum\n-  #164 = Utf8               verifyCheckSum\n-  #165 = Utf8               ([B)Z\n-  #166 = Utf8               header\n-  #167 = Utf8               storedSum\n-  #168 = Utf8               unsignedSum\n-  #169 = Utf8               signedSum\n-  #170 = Utf8               <clinit>\n-  #171 = Utf8               SourceFile\n-  #172 = Utf8               TarUtils.java\n-  #173 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n-  #174 = NameAndType        #81:#82       // \"<init>\":()V\n-  #175 = Utf8               java/lang/IllegalArgumentException\n-  #176 = Utf8               BootstrapMethods\n-  #177 = MethodHandle       6:#243        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #178 = String             #244          // Length \\u0001 must be at least 2\n-  #179 = NameAndType        #245:#246     // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #180 = NameAndType        #81:#247      // \"<init>\":(Ljava/lang/String;)V\n-  #181 = NameAndType        #115:#116     // exceptionMessage:([BIIIB)Ljava/lang/String;\n-  #182 = NameAndType        #88:#89       // parseOctal:([BII)J\n-  #183 = NameAndType        #105:#106     // parseBinaryLong:([BIIZ)J\n-  #184 = NameAndType        #109:#106     // parseBinaryBigInteger:([BIIZ)J\n-  #185 = String             #248          // At offset \\u0001, \\u0001 byte binary number exceeds maximum signed long value\n-  #186 = NameAndType        #245:#249     // makeConcatWithConstants:(II)Ljava/lang/String;\n-  #187 = Class              #250          // java/lang/Math\n-  #188 = NameAndType        #251:#252     // pow:(DD)D\n-  #189 = Class              #253          // java/lang/System\n-  #190 = NameAndType        #254:#255     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #191 = Utf8               java/math/BigInteger\n-  #192 = NameAndType        #81:#256      // \"<init>\":([B)V\n-  #193 = NameAndType        #257:#258     // valueOf:(J)Ljava/math/BigInteger;\n-  #194 = NameAndType        #259:#260     // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #195 = NameAndType        #261:#262     // not:()Ljava/math/BigInteger;\n-  #196 = NameAndType        #263:#264     // bitLength:()I\n-  #197 = NameAndType        #265:#266     // longValue:()J\n-  #198 = Utf8               java/lang/String\n-  #199 = NameAndType        #81:#267      // \"<init>\":([BII)V\n-  #200 = Utf8               \\u0000\n-  #201 = Utf8               {NUL}\n-  #202 = NameAndType        #268:#269     // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #203 = String             #270          // Invalid byte \\u0001 at offset \\u0001 in \\'\\u0001\\' len=\\u0001\n-  #204 = NameAndType        #245:#271     // makeConcatWithConstants:(BILjava/lang/String;I)Ljava/lang/String;\n-  #205 = NameAndType        #78:#79       // DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #206 = NameAndType        #120:#125     // parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #207 = Utf8               java/io/IOException\n-  #208 = NameAndType        #80:#79       // FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #209 = Utf8               java/lang/RuntimeException\n-  #210 = NameAndType        #81:#272      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #211 = Class              #273          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #212 = NameAndType        #274:#275     // decode:([B)Ljava/lang/String;\n-  #213 = Utf8\n-  #214 = NameAndType        #102:#89      // parseOctalOrBinary:([BII)J\n-  #215 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-  #216 = NameAndType        #81:#276      // \"<init>\":(JJ)V\n-  #217 = NameAndType        #134:#138     // formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #218 = NameAndType        #95:#264      // length:()I\n-  #219 = NameAndType        #277:#278     // encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #220 = NameAndType        #140:#264     // limit:()I\n-  #221 = NameAndType        #279:#249     // substring:(II)Ljava/lang/String;\n-  #222 = NameAndType        #280:#264     // position:()I\n-  #223 = NameAndType        #281:#282     // array:()[B\n-  #224 = NameAndType        #283:#264     // arrayOffset:()I\n-  #225 = Class              #284          // java/lang/Long\n-  #226 = NameAndType        #285:#286     // toOctalString:(J)Ljava/lang/String;\n-  #227 = String             #287          // \\u0001=\\u0001 will not fit in octal number buffer of length \\u0001\n-  #228 = NameAndType        #245:#288     // makeConcatWithConstants:(JLjava/lang/String;I)Ljava/lang/String;\n-  #229 = NameAndType        #142:#143     // formatUnsignedOctalString:(J[BII)V\n-  #230 = NameAndType        #149:#147     // formatLongOctalBytes:(J[BII)I\n-  #231 = NameAndType        #152:#153     // formatLongBinary:(J[BIIZ)V\n-  #232 = NameAndType        #156:#153     // formatBigIntegerBinary:(J[BIIZ)V\n-  #233 = NameAndType        #289:#290     // abs:(J)J\n-  #234 = String             #291          // Value \\u0001 is too large for \\u0001 byte field.\n-  #235 = NameAndType        #245:#292     // makeConcatWithConstants:(JI)Ljava/lang/String;\n-  #236 = NameAndType        #293:#282     // toByteArray:()[B\n-  #237 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n-  #238 = Class              #294          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #239 = NameAndType        #295:#296     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #240 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils$1\n-  #241 = Utf8               java/lang/Object\n-  #242 = Utf8               java/nio/ByteBuffer\n-  #243 = Methodref          #297.#298     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #244 = Utf8               Length \\u0001 must be at least 2\n-  #245 = Utf8               makeConcatWithConstants\n-  #246 = Utf8               (I)Ljava/lang/String;\n-  #247 = Utf8               (Ljava/lang/String;)V\n-  #248 = Utf8               At offset \\u0001, \\u0001 byte binary number exceeds maximum signed long value\n-  #249 = Utf8               (II)Ljava/lang/String;\n-  #250 = Utf8               java/lang/Math\n-  #251 = Utf8               pow\n-  #252 = Utf8               (DD)D\n-  #253 = Utf8               java/lang/System\n-  #254 = Utf8               arraycopy\n-  #255 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #256 = Utf8               ([B)V\n-  #257 = Utf8               valueOf\n-  #258 = Utf8               (J)Ljava/math/BigInteger;\n-  #259 = Utf8               add\n-  #260 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-  #261 = Utf8               not\n-  #262 = Utf8               ()Ljava/math/BigInteger;\n-  #263 = Utf8               bitLength\n-  #264 = Utf8               ()I\n-  #265 = Utf8               longValue\n-  #266 = Utf8               ()J\n-  #267 = Utf8               ([BII)V\n-  #268 = Utf8               replaceAll\n-  #269 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #270 = Utf8               Invalid byte \\u0001 at offset \\u0001 in \\'\\u0001\\' len=\\u0001\n-  #271 = Utf8               (BILjava/lang/String;I)Ljava/lang/String;\n-  #272 = Utf8               (Ljava/lang/Throwable;)V\n-  #273 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #274 = Utf8               decode\n-  #275 = Utf8               ([B)Ljava/lang/String;\n-  #276 = Utf8               (JJ)V\n-  #277 = Utf8               encode\n-  #278 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n-  #279 = Utf8               substring\n-  #280 = Utf8               position\n-  #281 = Utf8               array\n-  #282 = Utf8               ()[B\n-  #283 = Utf8               arrayOffset\n-  #284 = Utf8               java/lang/Long\n-  #285 = Utf8               toOctalString\n-  #286 = Utf8               (J)Ljava/lang/String;\n-  #287 = Utf8               \\u0001=\\u0001 will not fit in octal number buffer of length \\u0001\n-  #288 = Utf8               (JLjava/lang/String;I)Ljava/lang/String;\n-  #289 = Utf8               abs\n-  #290 = Utf8               (J)J\n-  #291 = Utf8               Value \\u0001 is too large for \\u0001 byte field.\n-  #292 = Utf8               (JI)Ljava/lang/String;\n-  #293 = Utf8               toByteArray\n-  #294 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  #295 = Utf8               getZipEncoding\n-  #296 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #297 = Class              #299          // java/lang/invoke/StringConcatFactory\n-  #298 = NameAndType        #245:#302     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #299 = Utf8               java/lang/invoke/StringConcatFactory\n-  #300 = Class              #304          // java/lang/invoke/MethodHandles$Lookup\n-  #301 = Utf8               Lookup\n-  #302 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #303 = Class              #305          // java/lang/invoke/MethodHandles\n-  #304 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #305 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/tar/TarConstants\n+    #2 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n+    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n+    #4 = Class              #6            // java/lang/Object\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/lang/Object\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Class              #10           // java/lang/IllegalArgumentException\n+   #10 = Utf8               java/lang/IllegalArgumentException\n+   #11 = InvokeDynamic      #0:#12        // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #12 = NameAndType        #13:#14       // makeConcatWithConstants:(I)Ljava/lang/String;\n+   #13 = Utf8               makeConcatWithConstants\n+   #14 = Utf8               (I)Ljava/lang/String;\n+   #15 = Methodref          #9.#16        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = NameAndType        #7:#17        // \"<init>\":(Ljava/lang/String;)V\n+   #17 = Utf8               (Ljava/lang/String;)V\n+   #18 = Methodref          #19.#20       // org/apache/commons/compress/archivers/tar/TarUtils.exceptionMessage:([BIIIB)Ljava/lang/String;\n+   #19 = Class              #21           // org/apache/commons/compress/archivers/tar/TarUtils\n+   #20 = NameAndType        #22:#23       // exceptionMessage:([BIIIB)Ljava/lang/String;\n+   #21 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n+   #22 = Utf8               exceptionMessage\n+   #23 = Utf8               ([BIIIB)Ljava/lang/String;\n+   #24 = Methodref          #19.#25       // org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n+   #25 = NameAndType        #26:#27       // parseOctal:([BII)J\n+   #26 = Utf8               parseOctal\n+   #27 = Utf8               ([BII)J\n+   #28 = Methodref          #19.#29       // org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryLong:([BIIZ)J\n+   #29 = NameAndType        #30:#31       // parseBinaryLong:([BIIZ)J\n+   #30 = Utf8               parseBinaryLong\n+   #31 = Utf8               ([BIIZ)J\n+   #32 = Methodref          #19.#33       // org/apache/commons/compress/archivers/tar/TarUtils.parseBinaryBigInteger:([BIIZ)J\n+   #33 = NameAndType        #34:#31       // parseBinaryBigInteger:([BIIZ)J\n+   #34 = Utf8               parseBinaryBigInteger\n+   #35 = InvokeDynamic      #1:#36        // #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+   #36 = NameAndType        #13:#37       // makeConcatWithConstants:(II)Ljava/lang/String;\n+   #37 = Utf8               (II)Ljava/lang/String;\n+   #38 = Double             2.0d\n+   #40 = Double             8.0d\n+   #42 = Methodref          #43.#44       // java/lang/Math.pow:(DD)D\n+   #43 = Class              #45           // java/lang/Math\n+   #44 = NameAndType        #46:#47       // pow:(DD)D\n+   #45 = Utf8               java/lang/Math\n+   #46 = Utf8               pow\n+   #47 = Utf8               (DD)D\n+   #48 = Methodref          #49.#50       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #49 = Class              #51           // java/lang/System\n+   #50 = NameAndType        #52:#53       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #51 = Utf8               java/lang/System\n+   #52 = Utf8               arraycopy\n+   #53 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #54 = Class              #55           // java/math/BigInteger\n+   #55 = Utf8               java/math/BigInteger\n+   #56 = Methodref          #54.#57       // java/math/BigInteger.\"<init>\":([B)V\n+   #57 = NameAndType        #7:#58        // \"<init>\":([B)V\n+   #58 = Utf8               ([B)V\n+   #59 = Long               -1l\n+   #61 = Methodref          #54.#62       // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+   #62 = NameAndType        #63:#64       // valueOf:(J)Ljava/math/BigInteger;\n+   #63 = Utf8               valueOf\n+   #64 = Utf8               (J)Ljava/math/BigInteger;\n+   #65 = Methodref          #54.#66       // java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #66 = NameAndType        #67:#68       // add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #67 = Utf8               add\n+   #68 = Utf8               (Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+   #69 = Methodref          #54.#70       // java/math/BigInteger.not:()Ljava/math/BigInteger;\n+   #70 = NameAndType        #71:#72       // not:()Ljava/math/BigInteger;\n+   #71 = Utf8               not\n+   #72 = Utf8               ()Ljava/math/BigInteger;\n+   #73 = Methodref          #54.#74       // java/math/BigInteger.bitLength:()I\n+   #74 = NameAndType        #75:#76       // bitLength:()I\n+   #75 = Utf8               bitLength\n+   #76 = Utf8               ()I\n+   #77 = Methodref          #54.#78       // java/math/BigInteger.longValue:()J\n+   #78 = NameAndType        #79:#80       // longValue:()J\n+   #79 = Utf8               longValue\n+   #80 = Utf8               ()J\n+   #81 = Class              #82           // java/lang/String\n+   #82 = Utf8               java/lang/String\n+   #83 = Methodref          #81.#84       // java/lang/String.\"<init>\":([BII)V\n+   #84 = NameAndType        #7:#85        // \"<init>\":([BII)V\n+   #85 = Utf8               ([BII)V\n+   #86 = String             #87           // \\u0000\n+   #87 = Utf8               \\u0000\n+   #88 = String             #89           // {NUL}\n+   #89 = Utf8               {NUL}\n+   #90 = Methodref          #81.#91       // java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #91 = NameAndType        #92:#93       // replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #92 = Utf8               replaceAll\n+   #93 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #94 = InvokeDynamic      #2:#95        // #2:makeConcatWithConstants:(BILjava/lang/String;I)Ljava/lang/String;\n+   #95 = NameAndType        #13:#96       // makeConcatWithConstants:(BILjava/lang/String;I)Ljava/lang/String;\n+   #96 = Utf8               (BILjava/lang/String;I)Ljava/lang/String;\n+   #97 = Fieldref           #19.#98       // org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #98 = NameAndType        #99:#100      // DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #99 = Utf8               DEFAULT_ENCODING\n+  #100 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #101 = Methodref          #19.#102      // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #102 = NameAndType        #103:#104     // parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #103 = Utf8               parseName\n+  #104 = Utf8               ([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #105 = Class              #106          // java/io/IOException\n+  #106 = Utf8               java/io/IOException\n+  #107 = Fieldref           #19.#108      // org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #108 = NameAndType        #109:#100     // FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #109 = Utf8               FALLBACK_ENCODING\n+  #110 = Class              #111          // java/lang/RuntimeException\n+  #111 = Utf8               java/lang/RuntimeException\n+  #112 = Methodref          #110.#113     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #113 = NameAndType        #7:#114       // \"<init>\":(Ljava/lang/Throwable;)V\n+  #114 = Utf8               (Ljava/lang/Throwable;)V\n+  #115 = InterfaceMethodref #116.#117     // org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n+  #116 = Class              #118          // org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #117 = NameAndType        #119:#120     // decode:([B)Ljava/lang/String;\n+  #118 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #119 = Utf8               decode\n+  #120 = Utf8               ([B)Ljava/lang/String;\n+  #121 = String             #122          //\n+  #122 = Utf8\n+  #123 = Methodref          #19.#124      // org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n+  #124 = NameAndType        #125:#27      // parseOctalOrBinary:([BII)J\n+  #125 = Utf8               parseOctalOrBinary\n+  #126 = Class              #127          // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+  #127 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+  #128 = Methodref          #126.#129     // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.\"<init>\":(JJ)V\n+  #129 = NameAndType        #7:#130       // \"<init>\":(JJ)V\n+  #130 = Utf8               (JJ)V\n+  #131 = Methodref          #19.#132      // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #132 = NameAndType        #133:#134     // formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #133 = Utf8               formatNameBytes\n+  #134 = Utf8               (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #135 = Methodref          #81.#136      // java/lang/String.length:()I\n+  #136 = NameAndType        #137:#76      // length:()I\n+  #137 = Utf8               length\n+  #138 = InterfaceMethodref #116.#139     // org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #139 = NameAndType        #140:#141     // encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #140 = Utf8               encode\n+  #141 = Utf8               (Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+  #142 = Methodref          #143.#144     // java/nio/ByteBuffer.limit:()I\n+  #143 = Class              #145          // java/nio/ByteBuffer\n+  #144 = NameAndType        #146:#76      // limit:()I\n+  #145 = Utf8               java/nio/ByteBuffer\n+  #146 = Utf8               limit\n+  #147 = Methodref          #81.#148      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #148 = NameAndType        #149:#37      // substring:(II)Ljava/lang/String;\n+  #149 = Utf8               substring\n+  #150 = Methodref          #143.#151     // java/nio/ByteBuffer.position:()I\n+  #151 = NameAndType        #152:#76      // position:()I\n+  #152 = Utf8               position\n+  #153 = Methodref          #143.#154     // java/nio/ByteBuffer.array:()[B\n+  #154 = NameAndType        #155:#156     // array:()[B\n+  #155 = Utf8               array\n+  #156 = Utf8               ()[B\n+  #157 = Methodref          #143.#158     // java/nio/ByteBuffer.arrayOffset:()I\n+  #158 = NameAndType        #159:#76      // arrayOffset:()I\n+  #159 = Utf8               arrayOffset\n+  #160 = Long               7l\n+  #162 = Methodref          #163.#164     // java/lang/Long.toOctalString:(J)Ljava/lang/String;\n+  #163 = Class              #165          // java/lang/Long\n+  #164 = NameAndType        #166:#167     // toOctalString:(J)Ljava/lang/String;\n+  #165 = Utf8               java/lang/Long\n+  #166 = Utf8               toOctalString\n+  #167 = Utf8               (J)Ljava/lang/String;\n+  #168 = InvokeDynamic      #3:#169       // #3:makeConcatWithConstants:(JLjava/lang/String;I)Ljava/lang/String;\n+  #169 = NameAndType        #13:#170      // makeConcatWithConstants:(JLjava/lang/String;I)Ljava/lang/String;\n+  #170 = Utf8               (JLjava/lang/String;I)Ljava/lang/String;\n+  #171 = Methodref          #19.#172      // org/apache/commons/compress/archivers/tar/TarUtils.formatUnsignedOctalString:(J[BII)V\n+  #172 = NameAndType        #173:#174     // formatUnsignedOctalString:(J[BII)V\n+  #173 = Utf8               formatUnsignedOctalString\n+  #174 = Utf8               (J[BII)V\n+  #175 = Long               2097151l\n+  #177 = Long               8589934591l\n+  #179 = Methodref          #19.#180      // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n+  #180 = NameAndType        #181:#182     // formatLongOctalBytes:(J[BII)I\n+  #181 = Utf8               formatLongOctalBytes\n+  #182 = Utf8               (J[BII)I\n+  #183 = Methodref          #19.#184      // org/apache/commons/compress/archivers/tar/TarUtils.formatLongBinary:(J[BIIZ)V\n+  #184 = NameAndType        #185:#186     // formatLongBinary:(J[BIIZ)V\n+  #185 = Utf8               formatLongBinary\n+  #186 = Utf8               (J[BIIZ)V\n+  #187 = Methodref          #19.#188      // org/apache/commons/compress/archivers/tar/TarUtils.formatBigIntegerBinary:(J[BIIZ)V\n+  #188 = NameAndType        #189:#186     // formatBigIntegerBinary:(J[BIIZ)V\n+  #189 = Utf8               formatBigIntegerBinary\n+  #190 = Methodref          #43.#191      // java/lang/Math.abs:(J)J\n+  #191 = NameAndType        #192:#193     // abs:(J)J\n+  #192 = Utf8               abs\n+  #193 = Utf8               (J)J\n+  #194 = InvokeDynamic      #4:#195       // #4:makeConcatWithConstants:(JI)Ljava/lang/String;\n+  #195 = NameAndType        #13:#196      // makeConcatWithConstants:(JI)Ljava/lang/String;\n+  #196 = Utf8               (JI)Ljava/lang/String;\n+  #197 = Long               255l\n+  #199 = Methodref          #54.#200      // java/math/BigInteger.toByteArray:()[B\n+  #200 = NameAndType        #201:#156     // toByteArray:()[B\n+  #201 = Utf8               toByteArray\n+  #202 = Methodref          #203.#204     // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #203 = Class              #205          // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #204 = NameAndType        #206:#207     // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #205 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  #206 = Utf8               getZipEncoding\n+  #207 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #208 = Class              #209          // org/apache/commons/compress/archivers/tar/TarUtils$1\n+  #209 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils$1\n+  #210 = Methodref          #208.#5       // org/apache/commons/compress/archivers/tar/TarUtils$1.\"<init>\":()V\n+  #211 = Utf8               BYTE_MASK\n+  #212 = Utf8               I\n+  #213 = Utf8               ConstantValue\n+  #214 = Integer            255\n+  #215 = Utf8               Code\n+  #216 = Utf8               LineNumberTable\n+  #217 = Utf8               LocalVariableTable\n+  #218 = Utf8               this\n+  #219 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarUtils;\n+  #220 = Utf8               currentByte\n+  #221 = Utf8               B\n+  #222 = Utf8               buffer\n+  #223 = Utf8               [B\n+  #224 = Utf8               offset\n+  #225 = Utf8               result\n+  #226 = Utf8               J\n+  #227 = Utf8               end\n+  #228 = Utf8               start\n+  #229 = Utf8               trailer\n+  #230 = Utf8               StackMapTable\n+  #231 = Utf8               negative\n+  #232 = Utf8               Z\n+  #233 = Utf8               i\n+  #234 = Utf8               val\n+  #235 = Utf8               remainder\n+  #236 = Utf8               Ljava/math/BigInteger;\n+  #237 = Class              #223          // \"[B\"\n+  #238 = Utf8               parseBoolean\n+  #239 = Utf8               ([BI)Z\n+  #240 = Utf8               current\n+  #241 = Utf8               string\n+  #242 = Utf8               Ljava/lang/String;\n+  #243 = Utf8               ([BII)Ljava/lang/String;\n+  #244 = Utf8               ex2\n+  #245 = Utf8               Ljava/io/IOException;\n+  #246 = Utf8               ex\n+  #247 = Utf8               b\n+  #248 = Utf8               encoding\n+  #249 = Utf8               len\n+  #250 = Utf8               Exceptions\n+  #251 = Utf8               parseSparse\n+  #252 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n+  #253 = Utf8               sparseOffset\n+  #254 = Utf8               sparseNumbytes\n+  #255 = Utf8               (Ljava/lang/String;[BII)I\n+  #256 = Utf8               name\n+  #257 = Utf8               buf\n+  #258 = Utf8               Ljava/nio/ByteBuffer;\n+  #259 = Utf8               value\n+  #260 = Utf8               remaining\n+  #261 = Utf8               formatOctalBytes\n+  #262 = Utf8               idx\n+  #263 = Utf8               formatLongOctalOrBinaryBytes\n+  #264 = Utf8               maxAsOctalChar\n+  #265 = Utf8               bits\n+  #266 = Utf8               max\n+  #267 = Utf8               off\n+  #268 = Utf8               fill\n+  #269 = Utf8               formatCheckSumOctalBytes\n+  #270 = Utf8               computeCheckSum\n+  #271 = Utf8               ([B)J\n+  #272 = Utf8               element\n+  #273 = Utf8               sum\n+  #274 = Utf8               verifyCheckSum\n+  #275 = Utf8               ([B)Z\n+  #276 = Utf8               header\n+  #277 = Utf8               storedSum\n+  #278 = Utf8               unsignedSum\n+  #279 = Utf8               signedSum\n+  #280 = Utf8               <clinit>\n+  #281 = Utf8               SourceFile\n+  #282 = Utf8               TarUtils.java\n+  #283 = Utf8               BootstrapMethods\n+  #284 = MethodHandle       6:#285        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #285 = Methodref          #286.#287     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #286 = Class              #288          // java/lang/invoke/StringConcatFactory\n+  #287 = NameAndType        #13:#289      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #288 = Utf8               java/lang/invoke/StringConcatFactory\n+  #289 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #290 = String             #291          // Length \\u0001 must be at least 2\n+  #291 = Utf8               Length \\u0001 must be at least 2\n+  #292 = String             #293          // At offset \\u0001, \\u0001 byte binary number exceeds maximum signed long value\n+  #293 = Utf8               At offset \\u0001, \\u0001 byte binary number exceeds maximum signed long value\n+  #294 = String             #295          // Invalid byte \\u0001 at offset \\u0001 in \\'\\u0001\\' len=\\u0001\n+  #295 = Utf8               Invalid byte \\u0001 at offset \\u0001 in \\'\\u0001\\' len=\\u0001\n+  #296 = String             #297          // \\u0001=\\u0001 will not fit in octal number buffer of length \\u0001\n+  #297 = Utf8               \\u0001=\\u0001 will not fit in octal number buffer of length \\u0001\n+  #298 = String             #299          // Value \\u0001 is too large for \\u0001 byte field.\n+  #299 = Utf8               Value \\u0001 is too large for \\u0001 byte field.\n+  #300 = Utf8               InnerClasses\n+  #301 = Class              #302          // java/lang/invoke/MethodHandles$Lookup\n+  #302 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #303 = Class              #304          // java/lang/invoke/MethodHandles\n+  #304 = Utf8               java/lang/invoke/MethodHandles\n+  #305 = Utf8               Lookup\n {\n   private static final int BYTE_MASK = 255;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 255\n \n   static final org.apache.commons.compress.archivers.zip.ZipEncoding DEFAULT_ENCODING;\n@@ -322,15 +322,15 @@\n \n   private org.apache.commons.compress.archivers.tar.TarUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/tar/TarUtils;\n@@ -347,19 +347,19 @@\n          4: iadd\n          5: istore        5\n          7: iload_1\n          8: istore        6\n         10: iload_2\n         11: iconst_2\n         12: if_icmpge     29\n-        15: new           #3                  // class java/lang/IllegalArgumentException\n+        15: new           #9                  // class java/lang/IllegalArgumentException\n         18: dup\n         19: iload_2\n-        20: invokedynamic #4,  0              // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        25: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: invokedynamic #11,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+        25: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         28: athrow\n         29: aload_0\n         30: iload         6\n         32: baload\n         33: ifne          38\n         36: lconst_0\n         37: lreturn\n@@ -404,23 +404,23 @@\n        112: istore        8\n        114: iload         8\n        116: bipush        48\n        118: if_icmplt     128\n        121: iload         8\n        123: bipush        55\n        125: if_icmple     146\n-       128: new           #3                  // class java/lang/IllegalArgumentException\n+       128: new           #9                  // class java/lang/IllegalArgumentException\n        131: dup\n        132: aload_0\n        133: iload_1\n        134: iload_2\n        135: iload         6\n        137: iload         8\n-       139: invokestatic  #6                  // Method exceptionMessage:([BIIIB)Ljava/lang/String;\n-       142: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       139: invokestatic  #18                 // Method exceptionMessage:([BIIIB)Ljava/lang/String;\n+       142: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        145: athrow\n        146: lload_3\n        147: iconst_3\n        148: lshl\n        149: iload         8\n        151: bipush        48\n        153: isub\n@@ -492,15 +492,15 @@\n          2: baload\n          3: sipush        128\n          6: iand\n          7: ifne          17\n         10: aload_0\n         11: iload_1\n         12: iload_2\n-        13: invokestatic  #7                  // Method parseOctal:([BII)J\n+        13: invokestatic  #24                 // Method parseOctal:([BII)J\n         16: lreturn\n         17: aload_0\n         18: iload_1\n         19: baload\n         20: iconst_m1\n         21: if_icmpne     28\n         24: iconst_1\n@@ -510,21 +510,21 @@\n         30: iload_2\n         31: bipush        9\n         33: if_icmpge     44\n         36: aload_0\n         37: iload_1\n         38: iload_2\n         39: iload_3\n-        40: invokestatic  #8                  // Method parseBinaryLong:([BIIZ)J\n+        40: invokestatic  #28                 // Method parseBinaryLong:([BIIZ)J\n         43: lreturn\n         44: aload_0\n         45: iload_1\n         46: iload_2\n         47: iload_3\n-        48: invokestatic  #9                  // Method parseBinaryBigInteger:([BIIZ)J\n+        48: invokestatic  #32                 // Method parseBinaryBigInteger:([BIIZ)J\n         51: lreturn\n       LineNumberTable:\n         line 172: 0\n         line 173: 10\n         line 175: 17\n         line 176: 30\n         line 177: 36\n@@ -548,20 +548,20 @@\n     descriptor: ([BIIZ)J\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=8, locals=7, args_size=4\n          0: iload_2\n          1: bipush        9\n          3: if_icmplt     21\n-         6: new           #3                  // class java/lang/IllegalArgumentException\n+         6: new           #9                  // class java/lang/IllegalArgumentException\n          9: dup\n         10: iload_1\n         11: iload_2\n-        12: invokedynamic #10,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n-        17: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: invokedynamic #35,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+        17: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: lconst_0\n         22: lstore        4\n         24: iconst_1\n         25: istore        6\n         27: iload         6\n         29: iload_2\n@@ -584,22 +584,22 @@\n         58: iload_3\n         59: ifeq          90\n         62: lload         4\n         64: lconst_1\n         65: lsub\n         66: lstore        4\n         68: lload         4\n-        70: ldc2_w        #11                 // double 2.0d\n+        70: ldc2_w        #38                 // double 2.0d\n         73: iload_2\n         74: iconst_1\n         75: isub\n         76: i2d\n-        77: ldc2_w        #13                 // double 8.0d\n+        77: ldc2_w        #40                 // double 8.0d\n         80: dmul\n-        81: invokestatic  #15                 // Method java/lang/Math.pow:(DD)D\n+        81: invokestatic  #42                 // Method java/lang/Math.pow:(DD)D\n         84: d2l\n         85: lconst_1\n         86: lsub\n         87: lxor\n         88: lstore        4\n         90: iload_3\n         91: ifeq          100\n@@ -654,47 +654,47 @@\n          9: iconst_1\n         10: iadd\n         11: aload         4\n         13: iconst_0\n         14: iload_2\n         15: iconst_1\n         16: isub\n-        17: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        20: new           #17                 // class java/math/BigInteger\n+        17: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        20: new           #54                 // class java/math/BigInteger\n         23: dup\n         24: aload         4\n-        26: invokespecial #18                 // Method java/math/BigInteger.\"<init>\":([B)V\n+        26: invokespecial #56                 // Method java/math/BigInteger.\"<init>\":([B)V\n         29: astore        5\n         31: iload_3\n         32: ifeq          51\n         35: aload         5\n-        37: ldc2_w        #19                 // long -1l\n-        40: invokestatic  #21                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-        43: invokevirtual #22                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n-        46: invokevirtual #23                 // Method java/math/BigInteger.not:()Ljava/math/BigInteger;\n+        37: ldc2_w        #59                 // long -1l\n+        40: invokestatic  #61                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+        43: invokevirtual #65                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;\n+        46: invokevirtual #69                 // Method java/math/BigInteger.not:()Ljava/math/BigInteger;\n         49: astore        5\n         51: aload         5\n-        53: invokevirtual #24                 // Method java/math/BigInteger.bitLength:()I\n+        53: invokevirtual #73                 // Method java/math/BigInteger.bitLength:()I\n         56: bipush        63\n         58: if_icmple     76\n-        61: new           #3                  // class java/lang/IllegalArgumentException\n+        61: new           #9                  // class java/lang/IllegalArgumentException\n         64: dup\n         65: iload_1\n         66: iload_2\n-        67: invokedynamic #10,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n-        72: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        67: invokedynamic #35,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+        72: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         75: athrow\n         76: iload_3\n         77: ifeq          89\n         80: aload         5\n-        82: invokevirtual #25                 // Method java/math/BigInteger.longValue:()J\n+        82: invokevirtual #77                 // Method java/math/BigInteger.longValue:()J\n         85: lneg\n         86: goto          94\n         89: aload         5\n-        91: invokevirtual #25                 // Method java/math/BigInteger.longValue:()J\n+        91: invokevirtual #77                 // Method java/math/BigInteger.longValue:()J\n         94: lreturn\n       LineNumberTable:\n         line 207: 0\n         line 208: 7\n         line 209: 20\n         line 210: 31\n         line 212: 35\n@@ -744,33 +744,33 @@\n           stack = [ int ]\n \n   private static java.lang.String exceptionMessage(byte[], int, int, int, byte);\n     descriptor: ([BIIIB)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=5, locals=6, args_size=5\n-         0: new           #26                 // class java/lang/String\n+         0: new           #81                 // class java/lang/String\n          3: dup\n          4: aload_0\n          5: iload_1\n          6: iload_2\n-         7: invokespecial #27                 // Method java/lang/String.\"<init>\":([BII)V\n+         7: invokespecial #83                 // Method java/lang/String.\"<init>\":([BII)V\n         10: astore        5\n         12: aload         5\n-        14: ldc           #28                 // String \\u0000\n-        16: ldc           #29                 // String {NUL}\n-        18: invokevirtual #30                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        14: ldc           #86                 // String \\u0000\n+        16: ldc           #88                 // String {NUL}\n+        18: invokevirtual #90                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n         21: astore        5\n         23: iload         4\n         25: iload_3\n         26: iload_1\n         27: isub\n         28: aload         5\n         30: iload_2\n-        31: invokedynamic #31,  0             // InvokeDynamic #2:makeConcatWithConstants:(BILjava/lang/String;I)Ljava/lang/String;\n+        31: invokedynamic #94,  0             // InvokeDynamic #2:makeConcatWithConstants:(BILjava/lang/String;I)Ljava/lang/String;\n         36: areturn\n       LineNumberTable:\n         line 247: 0\n         line 249: 12\n         line 250: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -785,29 +785,29 @@\n     descriptor: ([BII)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: getstatic     #32                 // Field DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-         6: invokestatic  #33                 // Method parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+         3: getstatic     #97                 // Field DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         6: invokestatic  #101                // Method parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n          9: areturn\n         10: astore_3\n         11: aload_0\n         12: iload_1\n         13: iload_2\n-        14: getstatic     #35                 // Field FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-        17: invokestatic  #33                 // Method parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+        14: getstatic     #107                // Field FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        17: invokestatic  #101                // Method parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n         20: areturn\n         21: astore        4\n-        23: new           #36                 // class java/lang/RuntimeException\n+        23: new           #110                // class java/lang/RuntimeException\n         26: dup\n         27: aload         4\n-        29: invokespecial #37                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        29: invokespecial #112                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         32: athrow\n       Exception table:\n          from    to  target type\n              0     9    10   Class java/io/IOException\n             11    20    21   Class java/io/IOException\n       LineNumberTable:\n         line 265: 0\n@@ -855,20 +855,20 @@\n         35: newarray       byte\n         37: astore        5\n         39: aload_0\n         40: iload_1\n         41: aload         5\n         43: iconst_0\n         44: iload         4\n-        46: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        46: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         49: aload_3\n         50: aload         5\n-        52: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n+        52: invokeinterface #115,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.decode:([B)Ljava/lang/String;\n         57: areturn\n-        58: ldc           #39                 // String\n+        58: ldc           #121                // String\n         60: areturn\n       LineNumberTable:\n         line 294: 0\n         line 295: 3\n         line 296: 19\n         line 295: 22\n         line 298: 28\n@@ -899,28 +899,28 @@\n     descriptor: ([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=2\n          0: aload_0\n          1: iload_1\n          2: bipush        12\n-         4: invokestatic  #40                 // Method parseOctalOrBinary:([BII)J\n+         4: invokestatic  #123                // Method parseOctalOrBinary:([BII)J\n          7: lstore_2\n          8: aload_0\n          9: iload_1\n         10: bipush        12\n         12: iadd\n         13: bipush        12\n-        15: invokestatic  #40                 // Method parseOctalOrBinary:([BII)J\n+        15: invokestatic  #123                // Method parseOctalOrBinary:([BII)J\n         18: lstore        4\n-        20: new           #41                 // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+        20: new           #126                // class org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n         23: dup\n         24: lload_2\n         25: lload         4\n-        27: invokespecial #42                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.\"<init>\":(JJ)V\n+        27: invokespecial #128                // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.\"<init>\":(JJ)V\n         30: areturn\n       LineNumberTable:\n         line 314: 0\n         line 315: 8\n         line 317: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -934,30 +934,30 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=6, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: getstatic     #32                 // Field DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-         7: invokestatic  #43                 // Method formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+         4: getstatic     #97                 // Field DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         7: invokestatic  #131                // Method formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n         10: ireturn\n         11: astore        4\n         13: aload_0\n         14: aload_1\n         15: iload_2\n         16: iload_3\n-        17: getstatic     #35                 // Field FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-        20: invokestatic  #43                 // Method formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+        17: getstatic     #107                // Field FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        20: invokestatic  #131                // Method formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n         23: ireturn\n         24: astore        5\n-        26: new           #36                 // class java/lang/RuntimeException\n+        26: new           #110                // class java/lang/RuntimeException\n         29: dup\n         30: aload         5\n-        32: invokespecial #37                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        32: invokespecial #112                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         35: athrow\n       Exception table:\n          from    to  target type\n              0    10    11   Class java/io/IOException\n             13    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 337: 0\n@@ -983,49 +983,49 @@\n \n   public static int formatNameBytes(java.lang.String, byte[], int, int, org.apache.commons.compress.archivers.zip.ZipEncoding) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=9, args_size=5\n          0: aload_0\n-         1: invokevirtual #44                 // Method java/lang/String.length:()I\n+         1: invokevirtual #135                // Method java/lang/String.length:()I\n          4: istore        5\n          6: aload         4\n          8: aload_0\n-         9: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+         9: invokeinterface #138,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n         14: astore        6\n         16: aload         6\n-        18: invokevirtual #46                 // Method java/nio/ByteBuffer.limit:()I\n+        18: invokevirtual #142                // Method java/nio/ByteBuffer.limit:()I\n         21: iload_3\n         22: if_icmple     52\n         25: iload         5\n         27: ifle          52\n         30: aload         4\n         32: aload_0\n         33: iconst_0\n         34: iinc          5, -1\n         37: iload         5\n-        39: invokevirtual #47                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        42: invokeinterface #45,  2           // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n+        39: invokevirtual #147                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        42: invokeinterface #138,  2          // InterfaceMethod org/apache/commons/compress/archivers/zip/ZipEncoding.encode:(Ljava/lang/String;)Ljava/nio/ByteBuffer;\n         47: astore        6\n         49: goto          16\n         52: aload         6\n-        54: invokevirtual #46                 // Method java/nio/ByteBuffer.limit:()I\n+        54: invokevirtual #142                // Method java/nio/ByteBuffer.limit:()I\n         57: aload         6\n-        59: invokevirtual #48                 // Method java/nio/ByteBuffer.position:()I\n+        59: invokevirtual #150                // Method java/nio/ByteBuffer.position:()I\n         62: isub\n         63: istore        7\n         65: aload         6\n-        67: invokevirtual #49                 // Method java/nio/ByteBuffer.array:()[B\n+        67: invokevirtual #153                // Method java/nio/ByteBuffer.array:()[B\n         70: aload         6\n-        72: invokevirtual #50                 // Method java/nio/ByteBuffer.arrayOffset:()I\n+        72: invokevirtual #157                // Method java/nio/ByteBuffer.arrayOffset:()I\n         75: aload_1\n         76: iload_2\n         77: iload         7\n-        79: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        79: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         82: iload         7\n         84: istore        8\n         86: iload         8\n         88: iload_3\n         89: if_icmpge     105\n         92: aload_1\n         93: iload_2\n@@ -1104,15 +1104,15 @@\n         39: ifeq          72\n         42: aload_2\n         43: iload_3\n         44: iload         5\n         46: iadd\n         47: bipush        48\n         49: lload         6\n-        51: ldc2_w        #51                 // long 7l\n+        51: ldc2_w        #160                // long 7l\n         54: land\n         55: l2i\n         56: i2b\n         57: iadd\n         58: i2b\n         59: bastore\n         60: lload         6\n@@ -1121,22 +1121,22 @@\n         64: lstore        6\n         66: iinc          5, -1\n         69: goto          30\n         72: lload         6\n         74: lconst_0\n         75: lcmp\n         76: ifeq          99\n-        79: new           #3                  // class java/lang/IllegalArgumentException\n+        79: new           #9                  // class java/lang/IllegalArgumentException\n         82: dup\n         83: lload_0\n         84: lload_0\n-        85: invokestatic  #53                 // Method java/lang/Long.toOctalString:(J)Ljava/lang/String;\n+        85: invokestatic  #162                // Method java/lang/Long.toOctalString:(J)Ljava/lang/String;\n         88: iload         4\n-        90: invokedynamic #54,  0             // InvokeDynamic #3:makeConcatWithConstants:(JLjava/lang/String;I)Ljava/lang/String;\n-        95: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        90: invokedynamic #168,  0            // InvokeDynamic #3:makeConcatWithConstants:(JLjava/lang/String;I)Ljava/lang/String;\n+        95: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         98: athrow\n         99: iload         5\n        101: iflt          118\n        104: aload_2\n        105: iload_3\n        106: iload         5\n        108: iadd\n@@ -1191,15 +1191,15 @@\n          2: iconst_2\n          3: isub\n          4: istore        5\n          6: lload_0\n          7: aload_2\n          8: iload_3\n          9: iload         5\n-        11: invokestatic  #55                 // Method formatUnsignedOctalString:(J[BII)V\n+        11: invokestatic  #171                // Method formatUnsignedOctalString:(J[BII)V\n         14: aload_2\n         15: iload_3\n         16: iload         5\n         18: iinc          5, 1\n         21: iadd\n         22: bipush        32\n         24: bastore\n@@ -1236,15 +1236,15 @@\n          2: iconst_1\n          3: isub\n          4: istore        5\n          6: lload_0\n          7: aload_2\n          8: iload_3\n          9: iload         5\n-        11: invokestatic  #55                 // Method formatUnsignedOctalString:(J[BII)V\n+        11: invokestatic  #171                // Method formatUnsignedOctalString:(J[BII)V\n         14: aload_2\n         15: iload_3\n         16: iload         5\n         18: iadd\n         19: bipush        32\n         21: bastore\n         22: iload_3\n@@ -1268,17 +1268,17 @@\n     descriptor: (J[BII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=8, args_size=4\n          0: iload         4\n          2: bipush        8\n          4: if_icmpne     13\n-         7: ldc2_w        #56                 // long 2097151l\n+         7: ldc2_w        #175                // long 2097151l\n         10: goto          16\n-        13: ldc2_w        #58                 // long 8589934591l\n+        13: ldc2_w        #177                // long 8589934591l\n         16: lstore        5\n         18: lload_0\n         19: lconst_0\n         20: lcmp\n         21: ifge          28\n         24: iconst_1\n         25: goto          29\n@@ -1290,32 +1290,32 @@\n         37: lload         5\n         39: lcmp\n         40: ifgt          52\n         43: lload_0\n         44: aload_2\n         45: iload_3\n         46: iload         4\n-        48: invokestatic  #60                 // Method formatLongOctalBytes:(J[BII)I\n+        48: invokestatic  #179                // Method formatLongOctalBytes:(J[BII)I\n         51: ireturn\n         52: iload         4\n         54: bipush        9\n         56: if_icmpge     72\n         59: lload_0\n         60: aload_2\n         61: iload_3\n         62: iload         4\n         64: iload         7\n-        66: invokestatic  #61                 // Method formatLongBinary:(J[BIIZ)V\n+        66: invokestatic  #183                // Method formatLongBinary:(J[BIIZ)V\n         69: goto          82\n         72: lload_0\n         73: aload_2\n         74: iload_3\n         75: iload         4\n         77: iload         7\n-        79: invokestatic  #62                 // Method formatBigIntegerBinary:(J[BIIZ)V\n+        79: invokestatic  #187                // Method formatBigIntegerBinary:(J[BIIZ)V\n         82: aload_2\n         83: iload_3\n         84: iload         7\n         86: ifeq          95\n         89: sipush        255\n         92: goto          98\n         95: sipush        128\n@@ -1378,45 +1378,45 @@\n          6: imul\n          7: istore        6\n          9: lconst_1\n         10: iload         6\n         12: lshl\n         13: lstore        7\n         15: lload_0\n-        16: invokestatic  #63                 // Method java/lang/Math.abs:(J)J\n+        16: invokestatic  #190                // Method java/lang/Math.abs:(J)J\n         19: lstore        9\n         21: lload         9\n         23: lconst_0\n         24: lcmp\n         25: iflt          36\n         28: lload         9\n         30: lload         7\n         32: lcmp\n         33: iflt          52\n-        36: new           #3                  // class java/lang/IllegalArgumentException\n+        36: new           #9                  // class java/lang/IllegalArgumentException\n         39: dup\n         40: lload_0\n         41: iload         4\n-        43: invokedynamic #64,  0             // InvokeDynamic #4:makeConcatWithConstants:(JI)Ljava/lang/String;\n-        48: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        43: invokedynamic #194,  0            // InvokeDynamic #4:makeConcatWithConstants:(JI)Ljava/lang/String;\n+        48: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         51: athrow\n         52: iload         5\n         54: ifeq          83\n         57: lload         9\n         59: lload         7\n         61: lconst_1\n         62: lsub\n         63: lxor\n         64: lstore        9\n         66: lload         9\n         68: lconst_1\n         69: ladd\n         70: lstore        9\n         72: lload         9\n-        74: ldc2_w        #65                 // long 255l\n+        74: ldc2_w        #197                // long 255l\n         77: iload         6\n         79: lshl\n         80: lor\n         81: lstore        9\n         83: iload_3\n         84: iload         4\n         86: iadd\n@@ -1479,46 +1479,46 @@\n \n   private static void formatBigIntegerBinary(long, byte[], int, int, boolean);\n     descriptor: (J[BIIZ)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=5, locals=12, args_size=5\n          0: lload_0\n-         1: invokestatic  #21                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+         1: invokestatic  #61                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n          4: astore        6\n          6: aload         6\n-         8: invokevirtual #67                 // Method java/math/BigInteger.toByteArray:()[B\n+         8: invokevirtual #199                // Method java/math/BigInteger.toByteArray:()[B\n         11: astore        7\n         13: aload         7\n         15: arraylength\n         16: istore        8\n         18: iload         8\n         20: iload         4\n         22: iconst_1\n         23: isub\n         24: if_icmple     43\n-        27: new           #3                  // class java/lang/IllegalArgumentException\n+        27: new           #9                  // class java/lang/IllegalArgumentException\n         30: dup\n         31: lload_0\n         32: iload         4\n-        34: invokedynamic #64,  0             // InvokeDynamic #4:makeConcatWithConstants:(JI)Ljava/lang/String;\n-        39: invokespecial #5                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokedynamic #194,  0            // InvokeDynamic #4:makeConcatWithConstants:(JI)Ljava/lang/String;\n+        39: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         42: athrow\n         43: iload_3\n         44: iload         4\n         46: iadd\n         47: iload         8\n         49: isub\n         50: istore        9\n         52: aload         7\n         54: iconst_0\n         55: aload_2\n         56: iload         9\n         58: iload         8\n-        60: invokestatic  #16                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        60: invokestatic  #48                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         63: iload         5\n         65: ifeq          74\n         68: sipush        255\n         71: goto          75\n         74: iconst_0\n         75: i2b\n         76: istore        10\n@@ -1586,15 +1586,15 @@\n          2: iconst_2\n          3: isub\n          4: istore        5\n          6: lload_0\n          7: aload_2\n          8: iload_3\n          9: iload         5\n-        11: invokestatic  #55                 // Method formatUnsignedOctalString:(J[BII)V\n+        11: invokestatic  #171                // Method formatUnsignedOctalString:(J[BII)V\n         14: aload_2\n         15: iload_3\n         16: iload         5\n         18: iinc          5, 1\n         21: iadd\n         22: iconst_0\n         23: bastore\n@@ -1677,15 +1677,15 @@\n     descriptor: ([B)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=9, args_size=1\n          0: aload_0\n          1: sipush        148\n          4: bipush        8\n-         6: invokestatic  #7                  // Method parseOctal:([BII)J\n+         6: invokestatic  #24                 // Method parseOctal:([BII)J\n          9: lstore_1\n         10: lconst_0\n         11: lstore_3\n         12: lconst_0\n         13: lstore        5\n         15: iconst_0\n         16: istore        7\n@@ -1768,39 +1768,39 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: aconst_null\n-         1: invokestatic  #69                 // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-         4: putstatic     #32                 // Field DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-         7: new           #70                 // class org/apache/commons/compress/archivers/tar/TarUtils$1\n+         1: invokestatic  #202                // Method org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         4: putstatic     #97                 // Field DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         7: new           #208                // class org/apache/commons/compress/archivers/tar/TarUtils$1\n         10: dup\n-        11: invokespecial #71                 // Method org/apache/commons/compress/archivers/tar/TarUtils$1.\"<init>\":()V\n-        14: putstatic     #35                 // Field FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+        11: invokespecial #210                // Method org/apache/commons/compress/archivers/tar/TarUtils$1.\"<init>\":()V\n+        14: putstatic     #107                // Field FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n         17: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 1\n         line 49: 7\n }\n SourceFile: \"TarUtils.java\"\n-InnerClasses:\n-  #70;                                    // class org/apache/commons/compress/archivers/tar/TarUtils$1\n-  public static final #301= #300 of #303; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #177 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #284 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #178 Length \\u0001 must be at least 2\n-  1: #177 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #290 Length \\u0001 must be at least 2\n+  1: #284 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #185 At offset \\u0001, \\u0001 byte binary number exceeds maximum signed long value\n-  2: #177 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #292 At offset \\u0001, \\u0001 byte binary number exceeds maximum signed long value\n+  2: #284 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #203 Invalid byte \\u0001 at offset \\u0001 in \\'\\u0001\\' len=\\u0001\n-  3: #177 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #294 Invalid byte \\u0001 at offset \\u0001 in \\'\\u0001\\' len=\\u0001\n+  3: #284 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #227 \\u0001=\\u0001 will not fit in octal number buffer of length \\u0001\n-  4: #177 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+      #296 \\u0001=\\u0001 will not fit in octal number buffer of length \\u0001\n+  4: #284 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #234 Value \\u0001 is too large for \\u0001 byte field.\n+      #298 Value \\u0001 is too large for \\u0001 byte field.\n+InnerClasses:\n+  #208;                                   // class org/apache/commons/compress/archivers/tar/TarUtils$1\n+  public static final #305= #301 of #303; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
