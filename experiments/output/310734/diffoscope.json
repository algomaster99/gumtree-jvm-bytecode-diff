{"diffoscope-json-version": 1, "source1": "first/ExceptionsAttribute.class", "source2": "second/ExceptionsAttribute.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,125 +1,125 @@\n-  SHA-256 checksum b920ad5a03d4408e7a5d74d97703421896ffa08a96e1d628de78b64e7b635f72\n+  SHA-256 checksum cbc3799d3f2a2da5417915b009c65fe3549b7460a606130a1a8962c37abc6899\n   Compiled from \"ExceptionsAttribute.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute extends org.apache.commons.compress.harmony.unpack200.bytecode.Attribute\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n-  super_class: #25                        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+  this_class: #8                          // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+  super_class: #14                        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n   interfaces: 0, fields: 3, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #59.#60       // java/lang/Object.hashCode:()I\n-    #2 = Fieldref           #7.#61        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-    #3 = Methodref          #25.#62       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-    #4 = Fieldref           #7.#63        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-    #5 = Methodref          #25.#64       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n-    #6 = Methodref          #59.#65       // java/lang/Object.getClass:()Ljava/lang/Class;\n-    #7 = Class              #66           // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n-    #8 = Methodref          #67.#68       // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-    #9 = Class              #69           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #10 = Methodref          #7.#70        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #11 = Methodref          #25.#60       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n-   #12 = Methodref          #7.#71        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.hashCode:([Ljava/lang/Object;)I\n-   #13 = Methodref          #25.#72       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #14 = Fieldref           #7.#73        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptionIndexes:[I\n-   #15 = Methodref          #74.#72       // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #16 = Methodref          #75.#76       // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-   #17 = Class              #77           // java/lang/StringBuffer\n-   #18 = Methodref          #17.#78       // java/lang/StringBuffer.\"<init>\":()V\n-   #19 = String             #79           // Exceptions:\n-   #20 = Methodref          #17.#80       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-   #21 = Methodref          #17.#81       // java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n-   #22 = Methodref          #17.#82       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n-   #23 = Methodref          #17.#83       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #24 = Methodref          #84.#85       // java/io/DataOutputStream.writeShort:(I)V\n-   #25 = Class              #86           // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-   #26 = Utf8               attributeName\n-   #27 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #28 = Utf8               exceptionIndexes\n-   #29 = Utf8               [I\n-   #30 = Utf8               exceptions\n-   #31 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #32 = Utf8               hashCode\n-   #33 = Utf8               ([Ljava/lang/Object;)I\n-   #34 = Utf8               Code\n-   #35 = Utf8               LineNumberTable\n-   #36 = Utf8               StackMapTable\n-   #37 = Class              #87           // \"[Ljava/lang/Object;\"\n-   #38 = Utf8               <init>\n-   #39 = Utf8               ([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n-   #40 = Utf8               equals\n-   #41 = Utf8               (Ljava/lang/Object;)Z\n-   #42 = Utf8               getLength\n-   #43 = Utf8               ()I\n-   #44 = Utf8               getNestedClassFileEntries\n-   #45 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #46 = Class              #88           // \"[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\"\n-   #47 = Utf8               resolve\n-   #48 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #49 = Utf8               toString\n-   #50 = Utf8               ()Ljava/lang/String;\n-   #51 = Utf8               writeBody\n-   #52 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #53 = Utf8               Exceptions\n-   #54 = Class              #89           // java/io/IOException\n-   #55 = Utf8               setAttributeName\n-   #56 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-   #57 = Utf8               SourceFile\n-   #58 = Utf8               ExceptionsAttribute.java\n-   #59 = Class              #90           // java/lang/Object\n-   #60 = NameAndType        #32:#43       // hashCode:()I\n-   #61 = NameAndType        #26:#27       // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #62 = NameAndType        #38:#56       // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-   #63 = NameAndType        #30:#31       // exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-   #64 = NameAndType        #40:#41       // equals:(Ljava/lang/Object;)Z\n-   #65 = NameAndType        #91:#92       // getClass:()Ljava/lang/Class;\n-   #66 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n-   #67 = Class              #93           // java/util/Arrays\n-   #68 = NameAndType        #40:#94       // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #69 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-   #70 = NameAndType        #95:#96       // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #71 = NameAndType        #32:#33       // hashCode:([Ljava/lang/Object;)I\n-   #72 = NameAndType        #47:#48       // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-   #73 = NameAndType        #28:#29       // exceptionIndexes:[I\n-   #74 = Class              #97           // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-   #75 = Class              #98           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-   #76 = NameAndType        #99:#100      // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-   #77 = Utf8               java/lang/StringBuffer\n-   #78 = NameAndType        #38:#101      // \"<init>\":()V\n-   #79 = Utf8               Exceptions:\n-   #80 = NameAndType        #102:#103     // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n-   #81 = NameAndType        #102:#104     // append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n-   #82 = NameAndType        #102:#105     // append:(C)Ljava/lang/StringBuffer;\n-   #83 = NameAndType        #49:#50       // toString:()Ljava/lang/String;\n-   #84 = Class              #106          // java/io/DataOutputStream\n-   #85 = NameAndType        #107:#108     // writeShort:(I)V\n-   #86 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-   #87 = Utf8               [Ljava/lang/Object;\n-   #88 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #89 = Utf8               java/io/IOException\n-   #90 = Utf8               java/lang/Object\n-   #91 = Utf8               getClass\n-   #92 = Utf8               ()Ljava/lang/Class;\n-   #93 = Utf8               java/util/Arrays\n-   #94 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #95 = Utf8               getAttributeName\n-   #96 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #97 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n-   #98 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-   #99 = Utf8               indexOf\n-  #100 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #101 = Utf8               ()V\n-  #102 = Utf8               append\n-  #103 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n-  #104 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuffer;\n-  #105 = Utf8               (C)Ljava/lang/StringBuffer;\n-  #106 = Utf8               java/io/DataOutputStream\n-  #107 = Utf8               writeShort\n-  #108 = Utf8               (I)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.hashCode:()I\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // hashCode:()I\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               hashCode\n+    #6 = Utf8               ()I\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+    #8 = Class              #10           // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+    #9 = NameAndType        #11:#12       // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+   #11 = Utf8               attributeName\n+   #12 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #13 = Methodref          #14.#15       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #14 = Class              #16           // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+   #15 = NameAndType        #17:#18       // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #16 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+   #17 = Utf8               <init>\n+   #18 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+   #19 = Fieldref           #8.#20        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #20 = NameAndType        #21:#22       // exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #21 = Utf8               exceptions\n+   #22 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+   #23 = Methodref          #14.#24       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n+   #24 = NameAndType        #25:#26       // equals:(Ljava/lang/Object;)Z\n+   #25 = Utf8               equals\n+   #26 = Utf8               (Ljava/lang/Object;)Z\n+   #27 = Methodref          #2.#28        // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #28 = NameAndType        #29:#30       // getClass:()Ljava/lang/Class;\n+   #29 = Utf8               getClass\n+   #30 = Utf8               ()Ljava/lang/Class;\n+   #31 = Methodref          #32.#33       // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #32 = Class              #34           // java/util/Arrays\n+   #33 = NameAndType        #25:#35       // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #34 = Utf8               java/util/Arrays\n+   #35 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+   #36 = Class              #37           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #37 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #38 = Methodref          #8.#39        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #39 = NameAndType        #40:#41       // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #40 = Utf8               getAttributeName\n+   #41 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #42 = Methodref          #14.#3        // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n+   #43 = Methodref          #8.#44        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.hashCode:([Ljava/lang/Object;)I\n+   #44 = NameAndType        #5:#45        // hashCode:([Ljava/lang/Object;)I\n+   #45 = Utf8               ([Ljava/lang/Object;)I\n+   #46 = Methodref          #14.#47       // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #47 = NameAndType        #48:#49       // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #48 = Utf8               resolve\n+   #49 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #50 = Fieldref           #8.#51        // org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute.exceptionIndexes:[I\n+   #51 = NameAndType        #52:#53       // exceptionIndexes:[I\n+   #52 = Utf8               exceptionIndexes\n+   #53 = Utf8               [I\n+   #54 = Methodref          #55.#47       // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+   #55 = Class              #56           // org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+   #56 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPClass\n+   #57 = Methodref          #58.#59       // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #58 = Class              #60           // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+   #59 = NameAndType        #61:#62       // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #60 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+   #61 = Utf8               indexOf\n+   #62 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #63 = Class              #64           // java/lang/StringBuffer\n+   #64 = Utf8               java/lang/StringBuffer\n+   #65 = Methodref          #63.#66       // java/lang/StringBuffer.\"<init>\":()V\n+   #66 = NameAndType        #17:#67       // \"<init>\":()V\n+   #67 = Utf8               ()V\n+   #68 = String             #69           // Exceptions:\n+   #69 = Utf8               Exceptions:\n+   #70 = Methodref          #63.#71       // java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #71 = NameAndType        #72:#73       // append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #72 = Utf8               append\n+   #73 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuffer;\n+   #74 = Methodref          #63.#75       // java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n+   #75 = NameAndType        #72:#76       // append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n+   #76 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuffer;\n+   #77 = Methodref          #63.#78       // java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+   #78 = NameAndType        #72:#79       // append:(C)Ljava/lang/StringBuffer;\n+   #79 = Utf8               (C)Ljava/lang/StringBuffer;\n+   #80 = Methodref          #63.#81       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+   #81 = NameAndType        #82:#83       // toString:()Ljava/lang/String;\n+   #82 = Utf8               toString\n+   #83 = Utf8               ()Ljava/lang/String;\n+   #84 = Methodref          #85.#86       // java/io/DataOutputStream.writeShort:(I)V\n+   #85 = Class              #87           // java/io/DataOutputStream\n+   #86 = NameAndType        #88:#89       // writeShort:(I)V\n+   #87 = Utf8               java/io/DataOutputStream\n+   #88 = Utf8               writeShort\n+   #89 = Utf8               (I)V\n+   #90 = Utf8               Code\n+   #91 = Utf8               LineNumberTable\n+   #92 = Utf8               StackMapTable\n+   #93 = Class              #94           // \"[Ljava/lang/Object;\"\n+   #94 = Utf8               [Ljava/lang/Object;\n+   #95 = Utf8               ([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n+   #96 = Utf8               getLength\n+   #97 = Utf8               getNestedClassFileEntries\n+   #98 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+   #99 = Class              #100          // \"[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\"\n+  #100 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #101 = Utf8               writeBody\n+  #102 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #103 = Utf8               Exceptions\n+  #104 = Class              #105          // java/io/IOException\n+  #105 = Utf8               java/io/IOException\n+  #106 = Utf8               setAttributeName\n+  #107 = Utf8               SourceFile\n+  #108 = Utf8               ExceptionsAttribute.java\n {\n   private static org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;\n     descriptor: Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n \n   private transient int[] exceptionIndexes;\n     descriptor: [I\n@@ -129,79 +129,79 @@\n     descriptor: [Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static int hashCode(java.lang.Object[]);\n     descriptor: ([Ljava/lang/Object;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n-      stack=3, locals=4, args_size=1\n+      stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: iconst_1\n-         7: istore_2\n+         7: istore_1\n          8: iconst_0\n-         9: istore_3\n-        10: iload_3\n+         9: istore_2\n+        10: iload_2\n         11: aload_0\n         12: arraylength\n         13: if_icmpge     44\n         16: bipush        31\n-        18: iload_2\n+        18: iload_1\n         19: imul\n         20: aload_0\n-        21: iload_3\n+        21: iload_2\n         22: aaload\n         23: ifnonnull     30\n         26: iconst_0\n         27: goto          36\n         30: aload_0\n-        31: iload_3\n+        31: iload_2\n         32: aaload\n         33: invokevirtual #1                  // Method java/lang/Object.hashCode:()I\n         36: iadd\n-        37: istore_2\n-        38: iinc          3, 1\n+        37: istore_1\n+        38: iinc          2, 1\n         41: goto          10\n-        44: iload_2\n+        44: iload_1\n         45: ireturn\n       LineNumberTable:\n         line 32: 0\n         line 33: 4\n         line 35: 6\n         line 36: 8\n         line 37: 16\n         line 36: 38\n         line 39: 44\n       StackMapTable: number_of_entries = 5\n         frame_type = 6 /* same */\n-        frame_type = 254 /* append */\n+        frame_type = 253 /* append */\n           offset_delta = 3\n-          locals = [ top, int, int ]\n+          locals = [ int, int ]\n         frame_type = 83 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n-          locals = [ class \"[Ljava/lang/Object;\", top, int, int ]\n+          locals = [ class \"[Ljava/lang/Object;\", int, int ]\n           stack = [ int, int ]\n         frame_type = 250 /* chop */\n           offset_delta = 7\n \n   public org.apache.commons.compress.harmony.unpack200.bytecode.ExceptionsAttribute(org.apache.commons.compress.harmony.unpack200.bytecode.CPClass[]);\n     descriptor: ([Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getstatic     #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-         4: invokespecial #3                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+         1: getstatic     #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         4: invokespecial #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n          7: aload_0\n          8: aload_1\n-         9: putfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         9: putfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         12: return\n       LineNumberTable:\n         line 47: 0\n         line 48: 7\n         line 49: 12\n \n   public boolean equals(java.lang.Object);\n@@ -212,33 +212,33 @@\n          0: aload_0\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #5                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n+         9: invokespecial #23                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.equals:(Ljava/lang/Object;)Z\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n-        18: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        18: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         21: aload_1\n-        22: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        22: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         25: if_acmpeq     30\n         28: iconst_0\n         29: ireturn\n         30: aload_1\n-        31: checkcast     #7                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n+        31: checkcast     #8                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ExceptionsAttribute\n         34: astore_2\n         35: aload_0\n-        36: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        36: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         39: aload_2\n-        40: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        43: invokestatic  #8                  // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+        40: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        43: invokestatic  #31                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n         46: ifne          51\n         49: iconst_0\n         50: ireturn\n         51: iconst_1\n         52: ireturn\n       LineNumberTable:\n         line 53: 0\n@@ -263,56 +263,56 @@\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iconst_2\n          1: iconst_2\n          2: aload_0\n-         3: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         3: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          6: arraylength\n          7: imul\n          8: iadd\n          9: ireturn\n       LineNumberTable:\n         line 71: 0\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         1: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n          4: arraylength\n          5: iconst_1\n          6: iadd\n-         7: anewarray     #9                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         7: anewarray     #36                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n         10: astore_1\n         11: iconst_0\n         12: istore_2\n         13: iload_2\n         14: aload_0\n-        15: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        15: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         18: arraylength\n         19: if_icmpge     37\n         22: aload_1\n         23: iload_2\n         24: aload_0\n-        25: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        25: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         28: iload_2\n         29: aaload\n         30: aastore\n         31: iinc          2, 1\n         34: goto          13\n         37: aload_1\n         38: aload_0\n-        39: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        39: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         42: arraylength\n         43: aload_0\n-        44: invokevirtual #10                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        44: invokevirtual #38                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         47: aastore\n         48: aload_1\n         49: areturn\n       LineNumberTable:\n         line 76: 0\n         line 77: 11\n         line 78: 22\n@@ -326,69 +326,69 @@\n         frame_type = 250 /* chop */\n           offset_delta = 23\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=3, args_size=1\n+      stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #11                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n-         4: istore_2\n+         1: invokespecial #42                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.hashCode:()I\n+         4: istore_1\n          5: bipush        31\n-         7: iload_2\n+         7: iload_1\n          8: imul\n          9: aload_0\n-        10: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n-        13: invokestatic  #12                 // Method hashCode:([Ljava/lang/Object;)I\n+        10: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        13: invokestatic  #43                 // Method hashCode:([Ljava/lang/Object;)I\n         16: iadd\n-        17: istore_2\n-        18: iload_2\n+        17: istore_1\n+        18: iload_1\n         19: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 5\n         line 89: 18\n \n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+         2: invokespecial #46                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n          5: aload_0\n          6: aload_0\n-         7: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+         7: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         10: arraylength\n         11: newarray       int\n-        13: putfield      #14                 // Field exceptionIndexes:[I\n+        13: putfield      #50                 // Field exceptionIndexes:[I\n         16: iconst_0\n         17: istore_2\n         18: iload_2\n         19: aload_0\n-        20: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        20: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         23: arraylength\n         24: if_icmpge     59\n         27: aload_0\n-        28: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        28: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         31: iload_2\n         32: aaload\n         33: aload_1\n-        34: invokevirtual #15                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+        34: invokevirtual #54                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPClass.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n         37: aload_0\n-        38: getfield      #14                 // Field exceptionIndexes:[I\n+        38: getfield      #50                 // Field exceptionIndexes:[I\n         41: iload_2\n         42: aload_1\n         43: aload_0\n-        44: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        44: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         47: iload_2\n         48: aaload\n-        49: invokevirtual #16                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        49: invokevirtual #57                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n         52: iastore\n         53: iinc          2, 1\n         56: goto          18\n         59: return\n       LineNumberTable:\n         line 94: 0\n         line 95: 5\n@@ -405,44 +405,44 @@\n           offset_delta = 40\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #17                 // class java/lang/StringBuffer\n+         0: new           #63                 // class java/lang/StringBuffer\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuffer.\"<init>\":()V\n+         4: invokespecial #65                 // Method java/lang/StringBuffer.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #19                 // String Exceptions:\n-        11: invokevirtual #20                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n+         9: ldc           #68                 // String Exceptions:\n+        11: invokevirtual #70                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;\n         14: pop\n         15: iconst_0\n         16: istore_2\n         17: iload_2\n         18: aload_0\n-        19: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        19: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         22: arraylength\n         23: if_icmpge     50\n         26: aload_1\n         27: aload_0\n-        28: getfield      #4                  // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n+        28: getfield      #19                 // Field exceptions:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPClass;\n         31: iload_2\n         32: aaload\n-        33: invokevirtual #21                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n+        33: invokevirtual #74                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;\n         36: pop\n         37: aload_1\n         38: bipush        32\n-        40: invokevirtual #22                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n+        40: invokevirtual #77                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;\n         43: pop\n         44: iinc          2, 1\n         47: goto          17\n         50: aload_1\n-        51: invokevirtual #23                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n+        51: invokevirtual #80                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n         54: areturn\n       LineNumberTable:\n         line 104: 0\n         line 105: 8\n         line 106: 15\n         line 107: 26\n         line 108: 37\n@@ -458,30 +458,30 @@\n   protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #14                 // Field exceptionIndexes:[I\n+         2: getfield      #50                 // Field exceptionIndexes:[I\n          5: arraylength\n-         6: invokevirtual #24                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         6: invokevirtual #84                 // Method java/io/DataOutputStream.writeShort:(I)V\n          9: iconst_0\n         10: istore_2\n         11: iload_2\n         12: aload_0\n-        13: getfield      #14                 // Field exceptionIndexes:[I\n+        13: getfield      #50                 // Field exceptionIndexes:[I\n         16: arraylength\n         17: if_icmpge     36\n         20: aload_1\n         21: aload_0\n-        22: getfield      #14                 // Field exceptionIndexes:[I\n+        22: getfield      #50                 // Field exceptionIndexes:[I\n         25: iload_2\n         26: iaload\n-        27: invokevirtual #24                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        27: invokevirtual #84                 // Method java/io/DataOutputStream.writeShort:(I)V\n         30: iinc          2, 1\n         33: goto          11\n         36: return\n       LineNumberTable:\n         line 115: 0\n         line 116: 9\n         line 117: 20\n@@ -498,14 +498,14 @@\n \n   public static void setAttributeName(org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: putstatic     #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         1: putstatic     #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n          4: return\n       LineNumberTable:\n         line 122: 0\n         line 123: 4\n }\n SourceFile: \"ExceptionsAttribute.java\"\n"}]}
