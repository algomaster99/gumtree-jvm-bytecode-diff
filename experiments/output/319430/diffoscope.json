{"diffoscope-json-version": 1, "source1": "first/TimeStamp.class", "source2": "second/TimeStamp.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,230 +1,230 @@\n-  SHA-256 checksum 3caa1cc2f638b4a53c3791a4a68797ce5531bceaaa34dcaf3de35e68fe807eed\n+  SHA-256 checksum 909335f0af4df5171b9a31bf525de9e0d4f63af134c08ee74ae1042e35d99c8f\n   Compiled from \"TimeStamp.java\"\n public class org.apache.commons.net.ntp.TimeStamp extends java.lang.Object implements java.io.Serializable, java.lang.Comparable<org.apache.commons.net.ntp.TimeStamp>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #15                         // org/apache/commons/net/ntp/TimeStamp\n-  super_class: #66                        // java/lang/Object\n+  this_class: #56                         // org/apache/commons/net/ntp/TimeStamp\n+  super_class: #106                       // java/lang/Object\n   interfaces: 2, fields: 7, methods: 25, attributes: 2\n Constant pool:\n-    #1 = Methodref          #130.#131     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-    #2 = Methodref          #87.#132      // java/lang/String.length:()I\n-    #3 = Methodref          #36.#133      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #4 = Methodref          #36.#134      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #5 = Class              #135          // java/lang/NumberFormatException\n-    #6 = String             #136          // null\n-    #7 = Methodref          #5.#137       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-    #8 = Methodref          #87.#138      // java/lang/String.indexOf:(I)I\n-    #9 = Methodref          #87.#139      // java/lang/String.isEmpty:()Z\n-   #10 = Methodref          #130.#140     // java/lang/Long.parseLong:(Ljava/lang/String;I)J\n-   #11 = Methodref          #87.#141      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #12 = Methodref          #87.#142      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #13 = Methodref          #143.#144     // java/lang/System.currentTimeMillis:()J\n-   #14 = Methodref          #15.#145      // org/apache/commons/net/ntp/TimeStamp.getNtpTime:(J)Lorg/apache/commons/net/ntp/TimeStamp;\n-   #15 = Class              #146          // org/apache/commons/net/ntp/TimeStamp\n-   #16 = Methodref          #15.#147      // org/apache/commons/net/ntp/TimeStamp.toNtpTime:(J)J\n-   #17 = Methodref          #15.#148      // org/apache/commons/net/ntp/TimeStamp.\"<init>\":(J)V\n-   #18 = Long               4294967295l\n-   #20 = Double             1000.0d\n-   #22 = Double             4.294967296E9d\n-   #24 = Methodref          #149.#150     // java/lang/Math.round:(D)J\n-   #25 = Long               2147483648l\n-   #27 = Long               2085978496000l\n-   #29 = Long               1000l\n-   #31 = Long               -2208988800000l\n-   #33 = Methodref          #15.#151      // org/apache/commons/net/ntp/TimeStamp.decodeNtpHexString:(Ljava/lang/String;)J\n-   #34 = Long               4294967296l\n-   #36 = Class              #152          // java/lang/StringBuilder\n-   #37 = Methodref          #36.#153      // java/lang/StringBuilder.\"<init>\":()V\n-   #38 = Methodref          #15.#154      // org/apache/commons/net/ntp/TimeStamp.appendHexString:(Ljava/lang/StringBuilder;J)V\n-   #39 = Methodref          #36.#155      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #40 = Methodref          #66.#153      // java/lang/Object.\"<init>\":()V\n-   #41 = Methodref          #45.#156      // java/util/Date.getTime:()J\n-   #42 = Fieldref           #15.#157      // org/apache/commons/net/ntp/TimeStamp.ntpTime:J\n-   #43 = Methodref          #130.#158     // java/lang/Long.compare:(JJ)I\n-   #44 = Methodref          #15.#159      // org/apache/commons/net/ntp/TimeStamp.ntpValue:()J\n-   #45 = Class              #160          // java/util/Date\n-   #46 = Methodref          #15.#161      // org/apache/commons/net/ntp/TimeStamp.getTime:(J)J\n-   #47 = Methodref          #45.#148      // java/util/Date.\"<init>\":(J)V\n-   #48 = Class              #162          // java/lang/UnsupportedOperationException\n-   #49 = String             #163          // Serialization is not supported\n-   #50 = Methodref          #48.#137      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #51 = Fieldref           #15.#164      // org/apache/commons/net/ntp/TimeStamp.simpleFormatter:Ljava/text/DateFormat;\n-   #52 = Class              #165          // java/text/SimpleDateFormat\n-   #53 = String             #166          // EEE, MMM dd yyyy HH:mm:ss.SSS\n-   #54 = Fieldref           #167.#168     // java/util/Locale.US:Ljava/util/Locale;\n-   #55 = Methodref          #52.#169      // java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n-   #56 = Methodref          #170.#171     // java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n-   #57 = Methodref          #172.#173     // java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n-   #58 = Methodref          #15.#174      // org/apache/commons/net/ntp/TimeStamp.getDate:()Ljava/util/Date;\n-   #59 = Methodref          #172.#175     // java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;\n-   #60 = Methodref          #15.#176      // org/apache/commons/net/ntp/TimeStamp.toString:(J)Ljava/lang/String;\n-   #61 = Fieldref           #15.#177      // org/apache/commons/net/ntp/TimeStamp.utcFormatter:Ljava/text/DateFormat;\n-   #62 = String             #178          // EEE, MMM dd yyyy HH:mm:ss.SSS \\'UTC\\'\n-   #63 = String             #179          // UTC\n-   #64 = Methodref          #170.#180     // java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n-   #65 = Methodref          #15.#181      // org/apache/commons/net/ntp/TimeStamp.compareTo:(Lorg/apache/commons/net/ntp/TimeStamp;)I\n-   #66 = Class              #182          // java/lang/Object\n-   #67 = Class              #183          // java/io/Serializable\n-   #68 = Class              #184          // java/lang/Comparable\n-   #69 = Utf8               serialVersionUID\n-   #70 = Utf8               J\n-   #71 = Utf8               ConstantValue\n-   #72 = Long               8139806907588338737l\n-   #74 = Utf8               msb0baseTime\n-   #75 = Utf8               msb1baseTime\n-   #76 = Utf8               NTP_DATE_FORMAT\n-   #77 = Utf8               Ljava/lang/String;\n-   #78 = Utf8               ntpTime\n-   #79 = Utf8               simpleFormatter\n-   #80 = Utf8               Ljava/text/DateFormat;\n-   #81 = Utf8               utcFormatter\n-   #82 = Utf8               appendHexString\n-   #83 = Utf8               (Ljava/lang/StringBuilder;J)V\n-   #84 = Utf8               Code\n-   #85 = Utf8               LineNumberTable\n-   #86 = Utf8               StackMapTable\n-   #87 = Class              #185          // java/lang/String\n-   #88 = Utf8               decodeNtpHexString\n-   #89 = Utf8               (Ljava/lang/String;)J\n-   #90 = Utf8               Exceptions\n-   #91 = Utf8               getCurrentTime\n-   #92 = Utf8               ()Lorg/apache/commons/net/ntp/TimeStamp;\n-   #93 = Utf8               getNtpTime\n-   #94 = Utf8               (J)Lorg/apache/commons/net/ntp/TimeStamp;\n-   #95 = Utf8               getTime\n-   #96 = Utf8               (J)J\n-   #97 = Utf8               parseNtpString\n-   #98 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/net/ntp/TimeStamp;\n-   #99 = Utf8               toNtpTime\n-  #100 = Utf8               toString\n-  #101 = Utf8               (J)Ljava/lang/String;\n-  #102 = Utf8               <init>\n-  #103 = Utf8               (Ljava/util/Date;)V\n-  #104 = Utf8               (J)V\n-  #105 = Utf8               (Ljava/lang/String;)V\n-  #106 = Utf8               compareTo\n-  #107 = Utf8               (Lorg/apache/commons/net/ntp/TimeStamp;)I\n-  #108 = Utf8               equals\n-  #109 = Utf8               (Ljava/lang/Object;)Z\n-  #110 = Utf8               getDate\n-  #111 = Utf8               ()Ljava/util/Date;\n-  #112 = Utf8               getFraction\n-  #113 = Utf8               ()J\n-  #114 = Utf8               getSeconds\n-  #115 = Utf8               hashCode\n-  #116 = Utf8               ()I\n-  #117 = Utf8               ntpValue\n-  #118 = Utf8               readObject\n-  #119 = Utf8               (Ljava/io/ObjectInputStream;)V\n-  #120 = Utf8               toDateString\n-  #121 = Utf8               ()Ljava/lang/String;\n-  #122 = Utf8               toUTCString\n-  #123 = Utf8               writeObject\n-  #124 = Utf8               (Ljava/io/ObjectOutputStream;)V\n-  #125 = Utf8               (Ljava/lang/Object;)I\n-  #126 = Utf8               Signature\n-  #127 = Utf8               Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/Comparable<Lorg/apache/commons/net/ntp/TimeStamp;>;\n-  #128 = Utf8               SourceFile\n-  #129 = Utf8               TimeStamp.java\n-  #130 = Class              #186          // java/lang/Long\n-  #131 = NameAndType        #187:#101     // toHexString:(J)Ljava/lang/String;\n-  #132 = NameAndType        #188:#116     // length:()I\n-  #133 = NameAndType        #189:#190     // append:(C)Ljava/lang/StringBuilder;\n-  #134 = NameAndType        #189:#191     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #135 = Utf8               java/lang/NumberFormatException\n-  #136 = Utf8               null\n-  #137 = NameAndType        #102:#105     // \"<init>\":(Ljava/lang/String;)V\n-  #138 = NameAndType        #192:#193     // indexOf:(I)I\n-  #139 = NameAndType        #194:#195     // isEmpty:()Z\n-  #140 = NameAndType        #196:#197     // parseLong:(Ljava/lang/String;I)J\n-  #141 = NameAndType        #198:#199     // substring:(II)Ljava/lang/String;\n-  #142 = NameAndType        #198:#200     // substring:(I)Ljava/lang/String;\n-  #143 = Class              #201          // java/lang/System\n-  #144 = NameAndType        #202:#113     // currentTimeMillis:()J\n-  #145 = NameAndType        #93:#94       // getNtpTime:(J)Lorg/apache/commons/net/ntp/TimeStamp;\n-  #146 = Utf8               org/apache/commons/net/ntp/TimeStamp\n-  #147 = NameAndType        #99:#96       // toNtpTime:(J)J\n-  #148 = NameAndType        #102:#104     // \"<init>\":(J)V\n-  #149 = Class              #203          // java/lang/Math\n-  #150 = NameAndType        #204:#205     // round:(D)J\n-  #151 = NameAndType        #88:#89       // decodeNtpHexString:(Ljava/lang/String;)J\n-  #152 = Utf8               java/lang/StringBuilder\n-  #153 = NameAndType        #102:#206     // \"<init>\":()V\n-  #154 = NameAndType        #82:#83       // appendHexString:(Ljava/lang/StringBuilder;J)V\n-  #155 = NameAndType        #100:#121     // toString:()Ljava/lang/String;\n-  #156 = NameAndType        #95:#113      // getTime:()J\n-  #157 = NameAndType        #78:#70       // ntpTime:J\n-  #158 = NameAndType        #207:#208     // compare:(JJ)I\n-  #159 = NameAndType        #117:#113     // ntpValue:()J\n-  #160 = Utf8               java/util/Date\n-  #161 = NameAndType        #95:#96       // getTime:(J)J\n-  #162 = Utf8               java/lang/UnsupportedOperationException\n-  #163 = Utf8               Serialization is not supported\n-  #164 = NameAndType        #79:#80       // simpleFormatter:Ljava/text/DateFormat;\n-  #165 = Utf8               java/text/SimpleDateFormat\n-  #166 = Utf8               EEE, MMM dd yyyy HH:mm:ss.SSS\n-  #167 = Class              #209          // java/util/Locale\n-  #168 = NameAndType        #210:#211     // US:Ljava/util/Locale;\n-  #169 = NameAndType        #102:#212     // \"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n-  #170 = Class              #213          // java/util/TimeZone\n-  #171 = NameAndType        #214:#215     // getDefault:()Ljava/util/TimeZone;\n-  #172 = Class              #216          // java/text/DateFormat\n-  #173 = NameAndType        #217:#218     // setTimeZone:(Ljava/util/TimeZone;)V\n-  #174 = NameAndType        #110:#111     // getDate:()Ljava/util/Date;\n-  #175 = NameAndType        #219:#220     // format:(Ljava/util/Date;)Ljava/lang/String;\n-  #176 = NameAndType        #100:#101     // toString:(J)Ljava/lang/String;\n-  #177 = NameAndType        #81:#80       // utcFormatter:Ljava/text/DateFormat;\n-  #178 = Utf8               EEE, MMM dd yyyy HH:mm:ss.SSS \\'UTC\\'\n-  #179 = Utf8               UTC\n-  #180 = NameAndType        #221:#222     // getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n-  #181 = NameAndType        #106:#107     // compareTo:(Lorg/apache/commons/net/ntp/TimeStamp;)I\n-  #182 = Utf8               java/lang/Object\n-  #183 = Utf8               java/io/Serializable\n-  #184 = Utf8               java/lang/Comparable\n-  #185 = Utf8               java/lang/String\n-  #186 = Utf8               java/lang/Long\n-  #187 = Utf8               toHexString\n-  #188 = Utf8               length\n-  #189 = Utf8               append\n-  #190 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #191 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #192 = Utf8               indexOf\n-  #193 = Utf8               (I)I\n-  #194 = Utf8               isEmpty\n-  #195 = Utf8               ()Z\n-  #196 = Utf8               parseLong\n-  #197 = Utf8               (Ljava/lang/String;I)J\n-  #198 = Utf8               substring\n-  #199 = Utf8               (II)Ljava/lang/String;\n-  #200 = Utf8               (I)Ljava/lang/String;\n-  #201 = Utf8               java/lang/System\n-  #202 = Utf8               currentTimeMillis\n-  #203 = Utf8               java/lang/Math\n-  #204 = Utf8               round\n-  #205 = Utf8               (D)J\n-  #206 = Utf8               ()V\n-  #207 = Utf8               compare\n-  #208 = Utf8               (JJ)I\n-  #209 = Utf8               java/util/Locale\n-  #210 = Utf8               US\n-  #211 = Utf8               Ljava/util/Locale;\n-  #212 = Utf8               (Ljava/lang/String;Ljava/util/Locale;)V\n-  #213 = Utf8               java/util/TimeZone\n-  #214 = Utf8               getDefault\n-  #215 = Utf8               ()Ljava/util/TimeZone;\n-  #216 = Utf8               java/text/DateFormat\n-  #217 = Utf8               setTimeZone\n-  #218 = Utf8               (Ljava/util/TimeZone;)V\n-  #219 = Utf8               format\n-  #220 = Utf8               (Ljava/util/Date;)Ljava/lang/String;\n-  #221 = Utf8               getTimeZone\n-  #222 = Utf8               (Ljava/lang/String;)Ljava/util/TimeZone;\n+    #1 = Methodref          #2.#3         // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+    #2 = Class              #4            // java/lang/Long\n+    #3 = NameAndType        #5:#6         // toHexString:(J)Ljava/lang/String;\n+    #4 = Utf8               java/lang/Long\n+    #5 = Utf8               toHexString\n+    #6 = Utf8               (J)Ljava/lang/String;\n+    #7 = Methodref          #8.#9         // java/lang/String.length:()I\n+    #8 = Class              #10           // java/lang/String\n+    #9 = NameAndType        #11:#12       // length:()I\n+   #10 = Utf8               java/lang/String\n+   #11 = Utf8               length\n+   #12 = Utf8               ()I\n+   #13 = Methodref          #14.#15       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #14 = Class              #16           // java/lang/StringBuilder\n+   #15 = NameAndType        #17:#18       // append:(C)Ljava/lang/StringBuilder;\n+   #16 = Utf8               java/lang/StringBuilder\n+   #17 = Utf8               append\n+   #18 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #19 = Methodref          #14.#20       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = NameAndType        #17:#21       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #21 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #22 = Class              #23           // java/lang/NumberFormatException\n+   #23 = Utf8               java/lang/NumberFormatException\n+   #24 = String             #25           // null\n+   #25 = Utf8               null\n+   #26 = Methodref          #22.#27       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = NameAndType        #28:#29       // \"<init>\":(Ljava/lang/String;)V\n+   #28 = Utf8               <init>\n+   #29 = Utf8               (Ljava/lang/String;)V\n+   #30 = Methodref          #8.#31        // java/lang/String.indexOf:(I)I\n+   #31 = NameAndType        #32:#33       // indexOf:(I)I\n+   #32 = Utf8               indexOf\n+   #33 = Utf8               (I)I\n+   #34 = Methodref          #8.#35        // java/lang/String.isEmpty:()Z\n+   #35 = NameAndType        #36:#37       // isEmpty:()Z\n+   #36 = Utf8               isEmpty\n+   #37 = Utf8               ()Z\n+   #38 = Methodref          #2.#39        // java/lang/Long.parseLong:(Ljava/lang/String;I)J\n+   #39 = NameAndType        #40:#41       // parseLong:(Ljava/lang/String;I)J\n+   #40 = Utf8               parseLong\n+   #41 = Utf8               (Ljava/lang/String;I)J\n+   #42 = Methodref          #8.#43        // java/lang/String.substring:(II)Ljava/lang/String;\n+   #43 = NameAndType        #44:#45       // substring:(II)Ljava/lang/String;\n+   #44 = Utf8               substring\n+   #45 = Utf8               (II)Ljava/lang/String;\n+   #46 = Methodref          #8.#47        // java/lang/String.substring:(I)Ljava/lang/String;\n+   #47 = NameAndType        #44:#48       // substring:(I)Ljava/lang/String;\n+   #48 = Utf8               (I)Ljava/lang/String;\n+   #49 = Methodref          #50.#51       // java/lang/System.currentTimeMillis:()J\n+   #50 = Class              #52           // java/lang/System\n+   #51 = NameAndType        #53:#54       // currentTimeMillis:()J\n+   #52 = Utf8               java/lang/System\n+   #53 = Utf8               currentTimeMillis\n+   #54 = Utf8               ()J\n+   #55 = Methodref          #56.#57       // org/apache/commons/net/ntp/TimeStamp.getNtpTime:(J)Lorg/apache/commons/net/ntp/TimeStamp;\n+   #56 = Class              #58           // org/apache/commons/net/ntp/TimeStamp\n+   #57 = NameAndType        #59:#60       // getNtpTime:(J)Lorg/apache/commons/net/ntp/TimeStamp;\n+   #58 = Utf8               org/apache/commons/net/ntp/TimeStamp\n+   #59 = Utf8               getNtpTime\n+   #60 = Utf8               (J)Lorg/apache/commons/net/ntp/TimeStamp;\n+   #61 = Methodref          #56.#62       // org/apache/commons/net/ntp/TimeStamp.toNtpTime:(J)J\n+   #62 = NameAndType        #63:#64       // toNtpTime:(J)J\n+   #63 = Utf8               toNtpTime\n+   #64 = Utf8               (J)J\n+   #65 = Methodref          #56.#66       // org/apache/commons/net/ntp/TimeStamp.\"<init>\":(J)V\n+   #66 = NameAndType        #28:#67       // \"<init>\":(J)V\n+   #67 = Utf8               (J)V\n+   #68 = Long               4294967295l\n+   #70 = Double             1000.0d\n+   #72 = Double             4.294967296E9d\n+   #74 = Methodref          #75.#76       // java/lang/Math.round:(D)J\n+   #75 = Class              #77           // java/lang/Math\n+   #76 = NameAndType        #78:#79       // round:(D)J\n+   #77 = Utf8               java/lang/Math\n+   #78 = Utf8               round\n+   #79 = Utf8               (D)J\n+   #80 = Long               2147483648l\n+   #82 = Long               2085978496000l\n+   #84 = Long               1000l\n+   #86 = Long               -2208988800000l\n+   #88 = Methodref          #56.#89       // org/apache/commons/net/ntp/TimeStamp.decodeNtpHexString:(Ljava/lang/String;)J\n+   #89 = NameAndType        #90:#91       // decodeNtpHexString:(Ljava/lang/String;)J\n+   #90 = Utf8               decodeNtpHexString\n+   #91 = Utf8               (Ljava/lang/String;)J\n+   #92 = Long               4294967296l\n+   #94 = Methodref          #14.#95       // java/lang/StringBuilder.\"<init>\":()V\n+   #95 = NameAndType        #28:#96       // \"<init>\":()V\n+   #96 = Utf8               ()V\n+   #97 = Methodref          #56.#98       // org/apache/commons/net/ntp/TimeStamp.appendHexString:(Ljava/lang/StringBuilder;J)V\n+   #98 = NameAndType        #99:#100      // appendHexString:(Ljava/lang/StringBuilder;J)V\n+   #99 = Utf8               appendHexString\n+  #100 = Utf8               (Ljava/lang/StringBuilder;J)V\n+  #101 = Methodref          #14.#102      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #102 = NameAndType        #103:#104     // toString:()Ljava/lang/String;\n+  #103 = Utf8               toString\n+  #104 = Utf8               ()Ljava/lang/String;\n+  #105 = Methodref          #106.#95      // java/lang/Object.\"<init>\":()V\n+  #106 = Class              #107          // java/lang/Object\n+  #107 = Utf8               java/lang/Object\n+  #108 = Methodref          #109.#110     // java/util/Date.getTime:()J\n+  #109 = Class              #111          // java/util/Date\n+  #110 = NameAndType        #112:#54      // getTime:()J\n+  #111 = Utf8               java/util/Date\n+  #112 = Utf8               getTime\n+  #113 = Fieldref           #56.#114      // org/apache/commons/net/ntp/TimeStamp.ntpTime:J\n+  #114 = NameAndType        #115:#116     // ntpTime:J\n+  #115 = Utf8               ntpTime\n+  #116 = Utf8               J\n+  #117 = Methodref          #2.#118       // java/lang/Long.compare:(JJ)I\n+  #118 = NameAndType        #119:#120     // compare:(JJ)I\n+  #119 = Utf8               compare\n+  #120 = Utf8               (JJ)I\n+  #121 = Methodref          #56.#122      // org/apache/commons/net/ntp/TimeStamp.ntpValue:()J\n+  #122 = NameAndType        #123:#54      // ntpValue:()J\n+  #123 = Utf8               ntpValue\n+  #124 = Methodref          #56.#125      // org/apache/commons/net/ntp/TimeStamp.getTime:(J)J\n+  #125 = NameAndType        #112:#64      // getTime:(J)J\n+  #126 = Methodref          #109.#66      // java/util/Date.\"<init>\":(J)V\n+  #127 = Class              #128          // java/lang/UnsupportedOperationException\n+  #128 = Utf8               java/lang/UnsupportedOperationException\n+  #129 = String             #130          // Serialization is not supported\n+  #130 = Utf8               Serialization is not supported\n+  #131 = Methodref          #127.#27      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+  #132 = Fieldref           #56.#133      // org/apache/commons/net/ntp/TimeStamp.simpleFormatter:Ljava/text/DateFormat;\n+  #133 = NameAndType        #134:#135     // simpleFormatter:Ljava/text/DateFormat;\n+  #134 = Utf8               simpleFormatter\n+  #135 = Utf8               Ljava/text/DateFormat;\n+  #136 = Class              #137          // java/text/SimpleDateFormat\n+  #137 = Utf8               java/text/SimpleDateFormat\n+  #138 = String             #139          // EEE, MMM dd yyyy HH:mm:ss.SSS\n+  #139 = Utf8               EEE, MMM dd yyyy HH:mm:ss.SSS\n+  #140 = Fieldref           #141.#142     // java/util/Locale.US:Ljava/util/Locale;\n+  #141 = Class              #143          // java/util/Locale\n+  #142 = NameAndType        #144:#145     // US:Ljava/util/Locale;\n+  #143 = Utf8               java/util/Locale\n+  #144 = Utf8               US\n+  #145 = Utf8               Ljava/util/Locale;\n+  #146 = Methodref          #136.#147     // java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n+  #147 = NameAndType        #28:#148      // \"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n+  #148 = Utf8               (Ljava/lang/String;Ljava/util/Locale;)V\n+  #149 = Methodref          #150.#151     // java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n+  #150 = Class              #152          // java/util/TimeZone\n+  #151 = NameAndType        #153:#154     // getDefault:()Ljava/util/TimeZone;\n+  #152 = Utf8               java/util/TimeZone\n+  #153 = Utf8               getDefault\n+  #154 = Utf8               ()Ljava/util/TimeZone;\n+  #155 = Methodref          #156.#157     // java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n+  #156 = Class              #158          // java/text/DateFormat\n+  #157 = NameAndType        #159:#160     // setTimeZone:(Ljava/util/TimeZone;)V\n+  #158 = Utf8               java/text/DateFormat\n+  #159 = Utf8               setTimeZone\n+  #160 = Utf8               (Ljava/util/TimeZone;)V\n+  #161 = Methodref          #56.#162      // org/apache/commons/net/ntp/TimeStamp.getDate:()Ljava/util/Date;\n+  #162 = NameAndType        #163:#164     // getDate:()Ljava/util/Date;\n+  #163 = Utf8               getDate\n+  #164 = Utf8               ()Ljava/util/Date;\n+  #165 = Methodref          #156.#166     // java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;\n+  #166 = NameAndType        #167:#168     // format:(Ljava/util/Date;)Ljava/lang/String;\n+  #167 = Utf8               format\n+  #168 = Utf8               (Ljava/util/Date;)Ljava/lang/String;\n+  #169 = Methodref          #56.#170      // org/apache/commons/net/ntp/TimeStamp.toString:(J)Ljava/lang/String;\n+  #170 = NameAndType        #103:#6       // toString:(J)Ljava/lang/String;\n+  #171 = Fieldref           #56.#172      // org/apache/commons/net/ntp/TimeStamp.utcFormatter:Ljava/text/DateFormat;\n+  #172 = NameAndType        #173:#135     // utcFormatter:Ljava/text/DateFormat;\n+  #173 = Utf8               utcFormatter\n+  #174 = String             #175          // EEE, MMM dd yyyy HH:mm:ss.SSS \\'UTC\\'\n+  #175 = Utf8               EEE, MMM dd yyyy HH:mm:ss.SSS \\'UTC\\'\n+  #176 = String             #177          // UTC\n+  #177 = Utf8               UTC\n+  #178 = Methodref          #150.#179     // java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n+  #179 = NameAndType        #180:#181     // getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n+  #180 = Utf8               getTimeZone\n+  #181 = Utf8               (Ljava/lang/String;)Ljava/util/TimeZone;\n+  #182 = Methodref          #56.#183      // org/apache/commons/net/ntp/TimeStamp.compareTo:(Lorg/apache/commons/net/ntp/TimeStamp;)I\n+  #183 = NameAndType        #184:#185     // compareTo:(Lorg/apache/commons/net/ntp/TimeStamp;)I\n+  #184 = Utf8               compareTo\n+  #185 = Utf8               (Lorg/apache/commons/net/ntp/TimeStamp;)I\n+  #186 = Class              #187          // java/io/Serializable\n+  #187 = Utf8               java/io/Serializable\n+  #188 = Class              #189          // java/lang/Comparable\n+  #189 = Utf8               java/lang/Comparable\n+  #190 = Utf8               serialVersionUID\n+  #191 = Utf8               ConstantValue\n+  #192 = Long               8139806907588338737l\n+  #194 = Utf8               msb0baseTime\n+  #195 = Utf8               msb1baseTime\n+  #196 = Utf8               NTP_DATE_FORMAT\n+  #197 = Utf8               Ljava/lang/String;\n+  #198 = Utf8               Code\n+  #199 = Utf8               LineNumberTable\n+  #200 = Utf8               StackMapTable\n+  #201 = Utf8               Exceptions\n+  #202 = Utf8               getCurrentTime\n+  #203 = Utf8               ()Lorg/apache/commons/net/ntp/TimeStamp;\n+  #204 = Utf8               parseNtpString\n+  #205 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/net/ntp/TimeStamp;\n+  #206 = Utf8               (Ljava/util/Date;)V\n+  #207 = Utf8               equals\n+  #208 = Utf8               (Ljava/lang/Object;)Z\n+  #209 = Utf8               getFraction\n+  #210 = Utf8               getSeconds\n+  #211 = Utf8               hashCode\n+  #212 = Utf8               readObject\n+  #213 = Utf8               (Ljava/io/ObjectInputStream;)V\n+  #214 = Utf8               toDateString\n+  #215 = Utf8               toUTCString\n+  #216 = Utf8               writeObject\n+  #217 = Utf8               (Ljava/io/ObjectOutputStream;)V\n+  #218 = Utf8               (Ljava/lang/Object;)I\n+  #219 = Utf8               Signature\n+  #220 = Utf8               Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/Comparable<Lorg/apache/commons/net/ntp/TimeStamp;>;\n+  #221 = Utf8               SourceFile\n+  #222 = Utf8               TimeStamp.java\n {\n   private static final long serialVersionUID = 8139806907588338737l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 8139806907588338737l\n \n   protected static final long msb0baseTime = 2085978496000l;\n@@ -259,28 +259,28 @@\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=5, args_size=2\n          0: lload_1\n          1: invokestatic  #1                  // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n          4: astore_3\n          5: aload_3\n-         6: invokevirtual #2                  // Method java/lang/String.length:()I\n+         6: invokevirtual #7                  // Method java/lang/String.length:()I\n          9: istore        4\n         11: iload         4\n         13: bipush        8\n         15: if_icmpge     31\n         18: aload_0\n         19: bipush        48\n-        21: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        21: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         24: pop\n         25: iinc          4, 1\n         28: goto          11\n         31: aload_0\n         32: aload_3\n-        33: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: pop\n         37: return\n       LineNumberTable:\n         line 64: 0\n         line 65: 5\n         line 66: 18\n         line 65: 25\n@@ -296,52 +296,52 @@\n   protected static long decodeNtpHexString(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #5                  // class java/lang/NumberFormatException\n+         4: new           #22                 // class java/lang/NumberFormatException\n          7: dup\n-         8: ldc           #6                  // String null\n-        10: invokespecial #7                  // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #24                 // String null\n+        10: invokespecial #26                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n         15: bipush        46\n-        17: invokevirtual #8                  // Method java/lang/String.indexOf:(I)I\n+        17: invokevirtual #30                 // Method java/lang/String.indexOf:(I)I\n         20: istore_1\n         21: iload_1\n         22: iconst_m1\n         23: if_icmpne     45\n         26: aload_0\n-        27: invokevirtual #9                  // Method java/lang/String.isEmpty:()Z\n+        27: invokevirtual #34                 // Method java/lang/String.isEmpty:()Z\n         30: ifeq          35\n         33: lconst_0\n         34: lreturn\n         35: aload_0\n         36: bipush        16\n-        38: invokestatic  #10                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J\n+        38: invokestatic  #38                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J\n         41: bipush        32\n         43: lshl\n         44: lreturn\n         45: aload_0\n         46: iconst_0\n         47: iload_1\n-        48: invokevirtual #11                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        48: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         51: bipush        16\n-        53: invokestatic  #10                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J\n+        53: invokestatic  #38                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J\n         56: bipush        32\n         58: lshl\n         59: aload_0\n         60: iload_1\n         61: iconst_1\n         62: iadd\n-        63: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        63: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n         66: bipush        16\n-        68: invokestatic  #10                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J\n+        68: invokestatic  #38                 // Method java/lang/Long.parseLong:(Ljava/lang/String;I)J\n         71: lor\n         72: lreturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 4\n         line 83: 14\n         line 84: 21\n@@ -359,76 +359,76 @@\n       throws java.lang.NumberFormatException\n \n   public static org.apache.commons.net.ntp.TimeStamp getCurrentTime();\n     descriptor: ()Lorg/apache/commons/net/ntp/TimeStamp;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: invokestatic  #13                 // Method java/lang/System.currentTimeMillis:()J\n-         3: invokestatic  #14                 // Method getNtpTime:(J)Lorg/apache/commons/net/ntp/TimeStamp;\n+         0: invokestatic  #49                 // Method java/lang/System.currentTimeMillis:()J\n+         3: invokestatic  #55                 // Method getNtpTime:(J)Lorg/apache/commons/net/ntp/TimeStamp;\n          6: areturn\n       LineNumberTable:\n         line 101: 0\n \n   public static org.apache.commons.net.ntp.TimeStamp getNtpTime(long);\n     descriptor: (J)Lorg/apache/commons/net/ntp/TimeStamp;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n-         0: new           #15                 // class org/apache/commons/net/ntp/TimeStamp\n+         0: new           #56                 // class org/apache/commons/net/ntp/TimeStamp\n          3: dup\n          4: lload_0\n-         5: invokestatic  #16                 // Method toNtpTime:(J)J\n-         8: invokespecial #17                 // Method \"<init>\":(J)V\n+         5: invokestatic  #61                 // Method toNtpTime:(J)J\n+         8: invokespecial #65                 // Method \"<init>\":(J)V\n         11: areturn\n       LineNumberTable:\n         line 120: 0\n \n   public static long getTime(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=8, args_size=1\n          0: lload_0\n          1: bipush        32\n          3: lushr\n-         4: ldc2_w        #18                 // long 4294967295l\n+         4: ldc2_w        #68                 // long 4294967295l\n          7: land\n          8: lstore_2\n          9: lload_0\n-        10: ldc2_w        #18                 // long 4294967295l\n+        10: ldc2_w        #68                 // long 4294967295l\n         13: land\n         14: lstore        4\n-        16: ldc2_w        #20                 // double 1000.0d\n+        16: ldc2_w        #70                 // double 1000.0d\n         19: lload         4\n         21: l2d\n         22: dmul\n-        23: ldc2_w        #22                 // double 4.294967296E9d\n+        23: ldc2_w        #72                 // double 4.294967296E9d\n         26: ddiv\n-        27: invokestatic  #24                 // Method java/lang/Math.round:(D)J\n+        27: invokestatic  #74                 // Method java/lang/Math.round:(D)J\n         30: lstore        4\n         32: lload_2\n-        33: ldc2_w        #25                 // long 2147483648l\n+        33: ldc2_w        #80                 // long 2147483648l\n         36: land\n         37: lstore        6\n         39: lload         6\n         41: lconst_0\n         42: lcmp\n         43: ifne          59\n-        46: ldc2_w        #27                 // long 2085978496000l\n+        46: ldc2_w        #82                 // long 2085978496000l\n         49: lload_2\n-        50: ldc2_w        #29                 // long 1000l\n+        50: ldc2_w        #84                 // long 1000l\n         53: lmul\n         54: ladd\n         55: lload         4\n         57: ladd\n         58: lreturn\n-        59: ldc2_w        #31                 // long -2208988800000l\n+        59: ldc2_w        #86                 // long -2208988800000l\n         62: lload_2\n-        63: ldc2_w        #29                 // long 1000l\n+        63: ldc2_w        #84                 // long 1000l\n         66: lmul\n         67: ladd\n         68: lload         4\n         70: ladd\n         71: lreturn\n       LineNumberTable:\n         line 134: 0\n@@ -444,65 +444,65 @@\n           locals = [ long, long, long ]\n \n   public static org.apache.commons.net.ntp.TimeStamp parseNtpString(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/net/ntp/TimeStamp;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #15                 // class org/apache/commons/net/ntp/TimeStamp\n+         0: new           #56                 // class org/apache/commons/net/ntp/TimeStamp\n          3: dup\n          4: aload_0\n-         5: invokestatic  #33                 // Method decodeNtpHexString:(Ljava/lang/String;)J\n-         8: invokespecial #17                 // Method \"<init>\":(J)V\n+         5: invokestatic  #88                 // Method decodeNtpHexString:(Ljava/lang/String;)J\n+         8: invokespecial #65                 // Method \"<init>\":(J)V\n         11: areturn\n       LineNumberTable:\n         line 163: 0\n     Exceptions:\n       throws java.lang.NumberFormatException\n \n   protected static long toNtpTime(long);\n     descriptor: (J)J\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n       stack=4, locals=9, args_size=1\n          0: lload_0\n-         1: ldc2_w        #27                 // long 2085978496000l\n+         1: ldc2_w        #82                 // long 2085978496000l\n          4: lcmp\n          5: ifge          12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: istore_2\n         14: iload_2\n         15: ifeq          27\n         18: lload_0\n-        19: ldc2_w        #31                 // long -2208988800000l\n+        19: ldc2_w        #86                 // long -2208988800000l\n         22: lsub\n         23: lstore_3\n         24: goto          33\n         27: lload_0\n-        28: ldc2_w        #27                 // long 2085978496000l\n+        28: ldc2_w        #82                 // long 2085978496000l\n         31: lsub\n         32: lstore_3\n         33: lload_3\n-        34: ldc2_w        #29                 // long 1000l\n+        34: ldc2_w        #84                 // long 1000l\n         37: ldiv\n         38: lstore        5\n         40: lload_3\n-        41: ldc2_w        #29                 // long 1000l\n+        41: ldc2_w        #84                 // long 1000l\n         44: lrem\n-        45: ldc2_w        #34                 // long 4294967296l\n+        45: ldc2_w        #92                 // long 4294967296l\n         48: lmul\n-        49: ldc2_w        #29                 // long 1000l\n+        49: ldc2_w        #84                 // long 1000l\n         52: ldiv\n         53: lstore        7\n         55: iload_2\n         56: ifeq          67\n         59: lload         5\n-        61: ldc2_w        #25                 // long 2147483648l\n+        61: ldc2_w        #80                 // long 2147483648l\n         64: lor\n         65: lstore        5\n         67: lload         5\n         69: bipush        32\n         71: lshl\n         72: lload         7\n         74: lor\n@@ -532,60 +532,60 @@\n           locals = [ long, long ]\n \n   public static java.lang.String toString(long);\n     descriptor: (J)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=1\n-         0: new           #36                 // class java/lang/StringBuilder\n+         0: new           #14                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #94                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_2\n          8: aload_2\n          9: lload_0\n         10: bipush        32\n         12: lushr\n-        13: ldc2_w        #18                 // long 4294967295l\n+        13: ldc2_w        #68                 // long 4294967295l\n         16: land\n-        17: invokestatic  #38                 // Method appendHexString:(Ljava/lang/StringBuilder;J)V\n+        17: invokestatic  #97                 // Method appendHexString:(Ljava/lang/StringBuilder;J)V\n         20: aload_2\n         21: bipush        46\n-        23: invokevirtual #3                  // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        23: invokevirtual #13                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         26: pop\n         27: aload_2\n         28: lload_0\n-        29: ldc2_w        #18                 // long 4294967295l\n+        29: ldc2_w        #68                 // long 4294967295l\n         32: land\n-        33: invokestatic  #38                 // Method appendHexString:(Ljava/lang/StringBuilder;J)V\n+        33: invokestatic  #97                 // Method appendHexString:(Ljava/lang/StringBuilder;J)V\n         36: aload_2\n-        37: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         40: areturn\n       LineNumberTable:\n         line 201: 0\n         line 203: 8\n         line 206: 20\n         line 207: 27\n         line 209: 36\n \n   public org.apache.commons.net.ntp.TimeStamp(java.util.Date);\n     descriptor: (Ljava/util/Date;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #40                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #105                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: ifnonnull     13\n          9: lconst_0\n         10: goto          20\n         13: aload_1\n-        14: invokevirtual #41                 // Method java/util/Date.getTime:()J\n-        17: invokestatic  #16                 // Method toNtpTime:(J)J\n-        20: putfield      #42                 // Field ntpTime:J\n+        14: invokevirtual #108                // Method java/util/Date.getTime:()J\n+        17: invokestatic  #61                 // Method toNtpTime:(J)J\n+        20: putfield      #113                // Field ntpTime:J\n         23: return\n       LineNumberTable:\n         line 227: 0\n         line 228: 4\n         line 229: 23\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n@@ -599,76 +599,76 @@\n \n   public org.apache.commons.net.ntp.TimeStamp(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #40                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #105                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: lload_1\n-         6: putfield      #42                 // Field ntpTime:J\n+         6: putfield      #113                // Field ntpTime:J\n          9: return\n       LineNumberTable:\n         line 236: 0\n         line 237: 4\n         line 238: 9\n \n   public org.apache.commons.net.ntp.TimeStamp(java.lang.String) throws java.lang.NumberFormatException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #40                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #105                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #33                 // Method decodeNtpHexString:(Ljava/lang/String;)J\n-         9: putfield      #42                 // Field ntpTime:J\n+         6: invokestatic  #88                 // Method decodeNtpHexString:(Ljava/lang/String;)J\n+         9: putfield      #113                // Field ntpTime:J\n         12: return\n       LineNumberTable:\n         line 247: 0\n         line 248: 4\n         line 249: 12\n     Exceptions:\n       throws java.lang.NumberFormatException\n \n   public int compareTo(org.apache.commons.net.ntp.TimeStamp);\n     descriptor: (Lorg/apache/commons/net/ntp/TimeStamp;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n+         1: getfield      #113                // Field ntpTime:J\n          4: lstore_2\n          5: aload_1\n-         6: getfield      #42                 // Field ntpTime:J\n+         6: getfield      #113                // Field ntpTime:J\n          9: lstore        4\n         11: lload_2\n         12: lload         4\n-        14: invokestatic  #43                 // Method java/lang/Long.compare:(JJ)I\n+        14: invokestatic  #117                // Method java/lang/Long.compare:(JJ)I\n         17: ireturn\n       LineNumberTable:\n         line 261: 0\n         line 262: 5\n         line 263: 11\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #15                 // class org/apache/commons/net/ntp/TimeStamp\n+         1: instanceof    #56                 // class org/apache/commons/net/ntp/TimeStamp\n          4: ifeq          28\n          7: aload_0\n-         8: getfield      #42                 // Field ntpTime:J\n+         8: getfield      #113                // Field ntpTime:J\n         11: aload_1\n-        12: checkcast     #15                 // class org/apache/commons/net/ntp/TimeStamp\n-        15: invokevirtual #44                 // Method ntpValue:()J\n+        12: checkcast     #56                 // class org/apache/commons/net/ntp/TimeStamp\n+        15: invokevirtual #121                // Method ntpValue:()J\n         18: lcmp\n         19: ifne          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: ireturn\n         28: iconst_0\n@@ -684,131 +684,131 @@\n         frame_type = 0 /* same */\n \n   public java.util.Date getDate();\n     descriptor: ()Ljava/util/Date;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #45                 // class java/util/Date\n+         0: new           #109                // class java/util/Date\n          3: dup\n          4: aload_0\n-         5: getfield      #42                 // Field ntpTime:J\n-         8: invokestatic  #46                 // Method getTime:(J)J\n-        11: invokespecial #47                 // Method java/util/Date.\"<init>\":(J)V\n+         5: getfield      #113                // Field ntpTime:J\n+         8: invokestatic  #124                // Method getTime:(J)J\n+        11: invokespecial #126                // Method java/util/Date.\"<init>\":(J)V\n         14: areturn\n       LineNumberTable:\n         line 287: 0\n \n   public long getFraction();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n-         4: ldc2_w        #18                 // long 4294967295l\n+         1: getfield      #113                // Field ntpTime:J\n+         4: ldc2_w        #68                 // long 4294967295l\n          7: land\n          8: lreturn\n       LineNumberTable:\n         line 296: 0\n \n   public long getSeconds();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n+         1: getfield      #113                // Field ntpTime:J\n          4: bipush        32\n          6: lushr\n-         7: ldc2_w        #18                 // long 4294967295l\n+         7: ldc2_w        #68                 // long 4294967295l\n         10: land\n         11: lreturn\n       LineNumberTable:\n         line 305: 0\n \n   public long getTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n-         4: invokestatic  #46                 // Method getTime:(J)J\n+         1: getfield      #113                // Field ntpTime:J\n+         4: invokestatic  #124                // Method getTime:(J)J\n          7: lreturn\n       LineNumberTable:\n         line 314: 0\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n+         1: getfield      #113                // Field ntpTime:J\n          4: aload_0\n-         5: getfield      #42                 // Field ntpTime:J\n+         5: getfield      #113                // Field ntpTime:J\n          8: bipush        32\n         10: lushr\n         11: lxor\n         12: l2i\n         13: ireturn\n       LineNumberTable:\n         line 333: 0\n \n   public long ntpValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n+         1: getfield      #113                // Field ntpTime:J\n          4: lreturn\n       LineNumberTable:\n         line 342: 0\n \n   private void readObject(java.io.ObjectInputStream);\n     descriptor: (Ljava/io/ObjectInputStream;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #48                 // class java/lang/UnsupportedOperationException\n+         0: new           #127                // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: ldc           #49                 // String Serialization is not supported\n-         6: invokespecial #50                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #129                // String Serialization is not supported\n+         6: invokespecial #131                // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 346: 0\n \n   public java.lang.String toDateString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #51                 // Field simpleFormatter:Ljava/text/DateFormat;\n+         1: getfield      #132                // Field simpleFormatter:Ljava/text/DateFormat;\n          4: ifnonnull     33\n          7: aload_0\n-         8: new           #52                 // class java/text/SimpleDateFormat\n+         8: new           #136                // class java/text/SimpleDateFormat\n         11: dup\n-        12: ldc           #53                 // String EEE, MMM dd yyyy HH:mm:ss.SSS\n-        14: getstatic     #54                 // Field java/util/Locale.US:Ljava/util/Locale;\n-        17: invokespecial #55                 // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n-        20: putfield      #51                 // Field simpleFormatter:Ljava/text/DateFormat;\n+        12: ldc           #138                // String EEE, MMM dd yyyy HH:mm:ss.SSS\n+        14: getstatic     #140                // Field java/util/Locale.US:Ljava/util/Locale;\n+        17: invokespecial #146                // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n+        20: putfield      #132                // Field simpleFormatter:Ljava/text/DateFormat;\n         23: aload_0\n-        24: getfield      #51                 // Field simpleFormatter:Ljava/text/DateFormat;\n-        27: invokestatic  #56                 // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n-        30: invokevirtual #57                 // Method java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n+        24: getfield      #132                // Field simpleFormatter:Ljava/text/DateFormat;\n+        27: invokestatic  #149                // Method java/util/TimeZone.getDefault:()Ljava/util/TimeZone;\n+        30: invokevirtual #155                // Method java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n         33: aload_0\n-        34: invokevirtual #58                 // Method getDate:()Ljava/util/Date;\n+        34: invokevirtual #161                // Method getDate:()Ljava/util/Date;\n         37: astore_1\n         38: aload_0\n-        39: getfield      #51                 // Field simpleFormatter:Ljava/text/DateFormat;\n+        39: getfield      #132                // Field simpleFormatter:Ljava/text/DateFormat;\n         42: aload_1\n-        43: invokevirtual #59                 // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;\n+        43: invokevirtual #165                // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;\n         46: areturn\n       LineNumberTable:\n         line 361: 0\n         line 362: 7\n         line 363: 23\n         line 365: 33\n         line 366: 38\n@@ -817,47 +817,47 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #42                 // Field ntpTime:J\n-         4: invokestatic  #60                 // Method toString:(J)Ljava/lang/String;\n+         1: getfield      #113                // Field ntpTime:J\n+         4: invokestatic  #169                // Method toString:(J)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 377: 0\n \n   public java.lang.String toUTCString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #61                 // Field utcFormatter:Ljava/text/DateFormat;\n+         1: getfield      #171                // Field utcFormatter:Ljava/text/DateFormat;\n          4: ifnonnull     35\n          7: aload_0\n-         8: new           #52                 // class java/text/SimpleDateFormat\n+         8: new           #136                // class java/text/SimpleDateFormat\n         11: dup\n-        12: ldc           #62                 // String EEE, MMM dd yyyy HH:mm:ss.SSS \\'UTC\\'\n-        14: getstatic     #54                 // Field java/util/Locale.US:Ljava/util/Locale;\n-        17: invokespecial #55                 // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n-        20: putfield      #61                 // Field utcFormatter:Ljava/text/DateFormat;\n+        12: ldc           #174                // String EEE, MMM dd yyyy HH:mm:ss.SSS \\'UTC\\'\n+        14: getstatic     #140                // Field java/util/Locale.US:Ljava/util/Locale;\n+        17: invokespecial #146                // Method java/text/SimpleDateFormat.\"<init>\":(Ljava/lang/String;Ljava/util/Locale;)V\n+        20: putfield      #171                // Field utcFormatter:Ljava/text/DateFormat;\n         23: aload_0\n-        24: getfield      #61                 // Field utcFormatter:Ljava/text/DateFormat;\n-        27: ldc           #63                 // String UTC\n-        29: invokestatic  #64                 // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n-        32: invokevirtual #57                 // Method java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n+        24: getfield      #171                // Field utcFormatter:Ljava/text/DateFormat;\n+        27: ldc           #176                // String UTC\n+        29: invokestatic  #178                // Method java/util/TimeZone.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;\n+        32: invokevirtual #155                // Method java/text/DateFormat.setTimeZone:(Ljava/util/TimeZone;)V\n         35: aload_0\n-        36: invokevirtual #58                 // Method getDate:()Ljava/util/Date;\n+        36: invokevirtual #161                // Method getDate:()Ljava/util/Date;\n         39: astore_1\n         40: aload_0\n-        41: getfield      #61                 // Field utcFormatter:Ljava/text/DateFormat;\n+        41: getfield      #171                // Field utcFormatter:Ljava/text/DateFormat;\n         44: aload_1\n-        45: invokevirtual #59                 // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;\n+        45: invokevirtual #165                // Method java/text/DateFormat.format:(Ljava/util/Date;)Ljava/lang/String;\n         48: areturn\n       LineNumberTable:\n         line 396: 0\n         line 397: 7\n         line 398: 23\n         line 400: 35\n         line 401: 40\n@@ -865,30 +865,30 @@\n         frame_type = 35 /* same */\n \n   private void writeObject(java.io.ObjectOutputStream);\n     descriptor: (Ljava/io/ObjectOutputStream;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #48                 // class java/lang/UnsupportedOperationException\n+         0: new           #127                // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: ldc           #49                 // String Serialization is not supported\n-         6: invokespecial #50                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #129                // String Serialization is not supported\n+         6: invokespecial #131                // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 405: 0\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #15                 // class org/apache/commons/net/ntp/TimeStamp\n-         5: invokevirtual #65                 // Method compareTo:(Lorg/apache/commons/net/ntp/TimeStamp;)I\n+         2: checkcast     #56                 // class org/apache/commons/net/ntp/TimeStamp\n+         5: invokevirtual #182                // Method compareTo:(Lorg/apache/commons/net/ntp/TimeStamp;)I\n          8: ireturn\n       LineNumberTable:\n         line 39: 0\n }\n-Signature: #127                         // Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/Comparable<Lorg/apache/commons/net/ntp/TimeStamp;>;\n+Signature: #220                         // Ljava/lang/Object;Ljava/io/Serializable;Ljava/lang/Comparable<Lorg/apache/commons/net/ntp/TimeStamp;>;\n SourceFile: \"TimeStamp.java\"\n"}]}
