{"diffoscope-json-version": 1, "source1": "first/CharsetDecoders.class", "source2": "second/CharsetDecoders.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 7864e35413e8b00c8ad62de47c2eeaf90bdc884f87360111293378442568e799\n+  SHA-256 checksum a609fe6398035915691e13f662f3e82efd1b5050520a28f5e7bb16ba832a04be\n   Compiled from \"CharsetDecoders.java\"\n public final class org.apache.commons.io.charset.CharsetDecoders\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #17                         // org/apache/commons/io/charset/CharsetDecoders\n   super_class: #12                        // java/lang/Object\n@@ -26,24 +26,19 @@\n   #16 = Utf8               ()V\n   #17 = Class              #18            // org/apache/commons/io/charset/CharsetDecoders\n   #18 = Utf8               org/apache/commons/io/charset/CharsetDecoders\n   #19 = Utf8               toCharsetDecoder\n   #20 = Utf8               (Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n   #21 = Utf8               Code\n   #22 = Utf8               LineNumberTable\n-  #23 = Utf8               LocalVariableTable\n-  #24 = Utf8               charsetDecoder\n-  #25 = Utf8               Ljava/nio/charset/CharsetDecoder;\n-  #26 = Utf8               StackMapTable\n-  #27 = Class              #28            // java/nio/charset/CharsetDecoder\n-  #28 = Utf8               java/nio/charset/CharsetDecoder\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/io/charset/CharsetDecoders;\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               CharsetDecoders.java\n+  #23 = Utf8               StackMapTable\n+  #24 = Class              #25            // java/nio/charset/CharsetDecoder\n+  #25 = Utf8               java/nio/charset/CharsetDecoder\n+  #26 = Utf8               SourceFile\n+  #27 = Utf8               CharsetDecoders.java\n {\n   public static java.nio.charset.CharsetDecoder toCharsetDecoder(java.nio.charset.CharsetDecoder);\n     descriptor: (Ljava/nio/charset/CharsetDecoder;)Ljava/nio/charset/CharsetDecoder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -51,17 +46,14 @@\n          4: aload_0\n          5: goto          14\n          8: invokestatic  #1                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n         11: invokevirtual #7                  // Method java/nio/charset/Charset.newDecoder:()Ljava/nio/charset/CharsetDecoder;\n         14: areturn\n       LineNumberTable:\n         line 37: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      15     0 charsetDecoder   Ljava/nio/charset/CharsetDecoder;\n       StackMapTable: number_of_entries = 2\n         frame_type = 8 /* same */\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/nio/charset/CharsetDecoder ]\n \n   private org.apache.commons.io.charset.CharsetDecoders();\n     descriptor: ()V\n@@ -70,12 +62,9 @@\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #11                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 41: 0\n         line 43: 4\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/io/charset/CharsetDecoders;\n }\n SourceFile: \"CharsetDecoders.java\"\n"}]}
