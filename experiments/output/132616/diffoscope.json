{"diffoscope-json-version": 1, "source1": "first/RandomStringUtils.class", "source2": "second/RandomStringUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,14 +3,18 @@\n \n import java.util.Random;\n \n public class RandomStringUtils\n {\n     private static final Random RANDOM;\n     \n+    static {\n+        RANDOM = new Random();\n+    }\n+    \n     public static String random(final int count) {\n         return random(count, false, false);\n     }\n     \n     public static String randomAscii(final int count) {\n         return random(count, 32, 127, false, false);\n     }\n@@ -95,15 +99,15 @@\n         }\n         else if (end <= start) {\n             throw new IllegalArgumentException(\"Parameter end (\" + end + \") must be greater than start (\" + start + \")\");\n         }\n         final int zero_digit_ascii = 48;\n         final int first_letter_ascii = 65;\n         if (chars == null && ((numbers && end <= 48) || (letters && end <= 65))) {\n-            throw new IllegalArgumentException(\"Parameter end (\" + end + \") must be greater then (\" + 48 + \") for generating digits or greater then (\" + 65 + \") for generating letters.\");\n+            throw new IllegalArgumentException(\"Parameter end (\" + end + \") must be greater then (\" + 48 + \") for generating digits \" + \"or greater then (\" + 65 + \") for generating letters.\");\n         }\n         final StringBuilder builder = new StringBuilder(count);\n         final int gap = end - start;\n         while (count-- != 0) {\n             int codePoint;\n             if (chars == null) {\n                 codePoint = random.nextInt(gap) + start;\n@@ -146,12 +150,8 @@\n     \n     public static String random(final int count, final char... chars) {\n         if (chars == null) {\n             return random(count, 0, 0, false, false, null, RandomStringUtils.RANDOM);\n         }\n         return random(count, 0, chars.length, false, false, chars, RandomStringUtils.RANDOM);\n     }\n-    \n-    static {\n-        RANDOM = new Random();\n-    }\n }\n"}]}
