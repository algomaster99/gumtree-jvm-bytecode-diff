{"diffoscope-json-version": 1, "source1": "first/StackMapEntry.class", "source2": "second/StackMapEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,252 +1,252 @@\n-  SHA-256 checksum a9d75013693f8cfd6dbfa5e174d8e8adc96664994a61438b42551985370c035a\n+  SHA-256 checksum dbb7f3c3b7e38e891eb16f8dbf1bb3a6a18ab619a46175418272964fc75c2d7b\n   Compiled from \"StackMapEntry.java\"\n public final class org.apache.bcel.classfile.StackMapEntry implements org.apache.bcel.classfile.Node,java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #53                         // org/apache/bcel/classfile/StackMapEntry\n-  super_class: #60                        // java/lang/Object\n+  this_class: #8                          // org/apache/bcel/classfile/StackMapEntry\n+  super_class: #62                        // java/lang/Object\n   interfaces: 2, fields: 5, methods: 23, attributes: 1\n Constant pool:\n-    #1 = InterfaceMethodref #84.#148      // java/io/DataInput.readByte:()B\n-    #2 = Methodref          #53.#149      // org/apache/bcel/classfile/StackMapEntry.\"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #3 = Fieldref           #53.#150      // org/apache/bcel/classfile/StackMapEntry.frameType:I\n-    #4 = Class              #151          // org/apache/bcel/Const\n-    #5 = Fieldref           #53.#152      // org/apache/bcel/classfile/StackMapEntry.byteCodeOffset:I\n-    #6 = Class              #153          // org/apache/bcel/classfile/StackMapType\n-    #7 = Fieldref           #53.#154      // org/apache/bcel/classfile/StackMapEntry.typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n-    #8 = Methodref          #6.#155       // org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-    #9 = InterfaceMethodref #84.#156      // java/io/DataInput.readShort:()S\n-   #10 = Fieldref           #53.#157      // org/apache/bcel/classfile/StackMapEntry.typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n-   #11 = Class              #158          // org/apache/bcel/classfile/ClassFormatException\n-   #12 = Class              #159          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#160      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #161          // Invalid frame type found while parsing stack map table:\n-   #15 = Methodref          #12.#162      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#163      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #12.#164      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#165      // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #60.#160      // java/lang/Object.\"<init>\":()V\n-   #20 = Fieldref           #53.#166      // org/apache/bcel/classfile/StackMapEntry.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-   #21 = Methodref          #167.#168     // java/io/DataOutputStream.write:(I)V\n-   #22 = Methodref          #6.#169       // org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n-   #23 = Methodref          #167.#170     // java/io/DataOutputStream.writeShort:(I)V\n-   #24 = String             #171          // Invalid Stack map table tag:\n-   #25 = Methodref          #12.#172      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #26 = String             #173          // (\n-   #27 = String             #174          // SAME\n-   #28 = String             #175          // SAME_LOCALS_1_STACK\n-   #29 = String             #176          // SAME_LOCALS_1_STACK_EXTENDED\n-   #30 = String             #177          // CHOP\n-   #31 = Methodref          #178.#179     // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #32 = String             #180          // SAME_EXTENDED\n-   #33 = String             #181          // APPEND\n-   #34 = String             #182          // FULL\n-   #35 = String             #183          // UNKNOWN (\n-   #36 = String             #184          // )\n-   #37 = String             #185          // , offset delta=\n-   #38 = String             #186          // , locals={\n-   #39 = Methodref          #12.#187      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #40 = String             #188          // ,\n-   #41 = String             #189          // }\n-   #42 = String             #190          // , stack items={\n-   #43 = Methodref          #6.#191       // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n-   #44 = Class              #192          // java/lang/IllegalStateException\n-   #45 = String             #193          // Invalid StackMap frameType:\n-   #46 = Methodref          #44.#165      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #47 = Class              #194          // java/lang/IllegalArgumentException\n-   #48 = String             #195          // Invalid StackMap frameType\n-   #49 = Methodref          #47.#165      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #50 = String             #196          // Invalid StackMap offset:\n-   #51 = Methodref          #53.#197      // org/apache/bcel/classfile/StackMapEntry.setByteCodeOffset:(I)V\n-   #52 = Methodref          #60.#198      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #53 = Class              #199          // org/apache/bcel/classfile/StackMapEntry\n-   #54 = Class              #200          // java/lang/CloneNotSupportedException\n-   #55 = Class              #201          // java/lang/Error\n-   #56 = String             #202          // Clone Not Supported\n-   #57 = Methodref          #55.#165      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #58 = Methodref          #6.#203       // org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n-   #59 = InterfaceMethodref #204.#205     // org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n-   #60 = Class              #206          // java/lang/Object\n-   #61 = Class              #207          // org/apache/bcel/classfile/Node\n-   #62 = Class              #208          // java/lang/Cloneable\n-   #63 = Utf8               frameType\n-   #64 = Utf8               I\n-   #65 = Utf8               byteCodeOffset\n-   #66 = Utf8               typesOfLocals\n-   #67 = Utf8               [Lorg/apache/bcel/classfile/StackMapType;\n-   #68 = Utf8               typesOfStackItems\n-   #69 = Utf8               constantPool\n-   #70 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #71 = Utf8               <init>\n-   #72 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #73 = Utf8               Code\n-   #74 = Utf8               LineNumberTable\n-   #75 = Utf8               LocalVariableTable\n-   #76 = Utf8               i\n-   #77 = Utf8               number_of_locals\n-   #78 = Utf8               number_of_stack_items\n-   #79 = Utf8               this\n-   #80 = Utf8               Lorg/apache/bcel/classfile/StackMapEntry;\n-   #81 = Utf8               input\n-   #82 = Utf8               Ljava/io/DataInput;\n-   #83 = Utf8               StackMapTable\n-   #84 = Class              #209          // java/io/DataInput\n-   #85 = Class              #210          // org/apache/bcel/classfile/ConstantPool\n-   #86 = Utf8               Exceptions\n-   #87 = Class              #211          // java/io/IOException\n-   #88 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #89 = Utf8               numberOfLocals\n-   #90 = Utf8               numberOfStackItems\n-   #91 = Class              #67           // \"[Lorg/apache/bcel/classfile/StackMapType;\"\n-   #92 = Utf8               Deprecated\n-   #93 = Utf8               RuntimeVisibleAnnotations\n-   #94 = Utf8               Ljava/lang/Deprecated;\n-   #95 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-   #96 = Utf8               tag\n-   #97 = Utf8               dump\n-   #98 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #99 = Utf8               type\n-  #100 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n-  #101 = Utf8               file\n-  #102 = Utf8               Ljava/io/DataOutputStream;\n-  #103 = Utf8               toString\n-  #104 = Utf8               ()Ljava/lang/String;\n-  #105 = Utf8               buf\n-  #106 = Utf8               Ljava/lang/StringBuilder;\n-  #107 = Utf8               getMapEntrySize\n-  #108 = Utf8               ()I\n-  #109 = Utf8               types_of_local\n-  #110 = Utf8               len\n-  #111 = Utf8               types_of_stack_item\n-  #112 = Utf8               setFrameType\n-  #113 = Utf8               (I)V\n-  #114 = Utf8               f\n-  #115 = Utf8               getFrameType\n-  #116 = Utf8               setByteCodeOffset\n-  #117 = Utf8               new_offset\n-  #118 = Utf8               updateByteCodeOffset\n-  #119 = Utf8               delta\n-  #120 = Utf8               getByteCodeOffset\n-  #121 = Utf8               setNumberOfLocals\n-  #122 = Utf8               n\n-  #123 = Utf8               getNumberOfLocals\n-  #124 = Utf8               setTypesOfLocals\n-  #125 = Utf8               ([Lorg/apache/bcel/classfile/StackMapType;)V\n-  #126 = Utf8               types\n-  #127 = Utf8               getTypesOfLocals\n-  #128 = Utf8               ()[Lorg/apache/bcel/classfile/StackMapType;\n-  #129 = Utf8               setNumberOfStackItems\n-  #130 = Utf8               getNumberOfStackItems\n-  #131 = Utf8               setTypesOfStackItems\n-  #132 = Utf8               getTypesOfStackItems\n-  #133 = Utf8               copy\n-  #134 = Utf8               ()Lorg/apache/bcel/classfile/StackMapEntry;\n-  #135 = Utf8               e\n-  #136 = Utf8               ex\n-  #137 = Utf8               Ljava/lang/CloneNotSupportedException;\n-  #138 = Utf8               accept\n-  #139 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-  #140 = Utf8               v\n-  #141 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n-  #142 = Utf8               getConstantPool\n-  #143 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #144 = Utf8               setConstantPool\n-  #145 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #146 = Utf8               SourceFile\n-  #147 = Utf8               StackMapEntry.java\n-  #148 = NameAndType        #212:#213     // readByte:()B\n-  #149 = NameAndType        #71:#95       // \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #150 = NameAndType        #63:#64       // frameType:I\n-  #151 = Utf8               org/apache/bcel/Const\n-  #152 = NameAndType        #65:#64       // byteCodeOffset:I\n-  #153 = Utf8               org/apache/bcel/classfile/StackMapType\n-  #154 = NameAndType        #68:#67       // typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n-  #155 = NameAndType        #71:#72       // \"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #156 = NameAndType        #214:#215     // readShort:()S\n-  #157 = NameAndType        #66:#67       // typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n-  #158 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #159 = Utf8               java/lang/StringBuilder\n-  #160 = NameAndType        #71:#216      // \"<init>\":()V\n-  #161 = Utf8               Invalid frame type found while parsing stack map table:\n-  #162 = NameAndType        #217:#218     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #163 = NameAndType        #217:#219     // append:(I)Ljava/lang/StringBuilder;\n-  #164 = NameAndType        #103:#104     // toString:()Ljava/lang/String;\n-  #165 = NameAndType        #71:#220      // \"<init>\":(Ljava/lang/String;)V\n-  #166 = NameAndType        #69:#70       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n-  #167 = Class              #221          // java/io/DataOutputStream\n-  #168 = NameAndType        #222:#113     // write:(I)V\n-  #169 = NameAndType        #97:#98       // dump:(Ljava/io/DataOutputStream;)V\n-  #170 = NameAndType        #223:#113     // writeShort:(I)V\n-  #171 = Utf8               Invalid Stack map table tag:\n-  #172 = NameAndType        #71:#113      // \"<init>\":(I)V\n-  #173 = Utf8               (\n-  #174 = Utf8               SAME\n-  #175 = Utf8               SAME_LOCALS_1_STACK\n-  #176 = Utf8               SAME_LOCALS_1_STACK_EXTENDED\n-  #177 = Utf8               CHOP\n-  #178 = Class              #224          // java/lang/String\n-  #179 = NameAndType        #225:#226     // valueOf:(I)Ljava/lang/String;\n-  #180 = Utf8               SAME_EXTENDED\n-  #181 = Utf8               APPEND\n-  #182 = Utf8               FULL\n-  #183 = Utf8               UNKNOWN (\n-  #184 = Utf8               )\n-  #185 = Utf8               , offset delta=\n-  #186 = Utf8               , locals={\n-  #187 = NameAndType        #217:#227     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #188 = Utf8               ,\n-  #189 = Utf8               }\n-  #190 = Utf8               , stack items={\n-  #191 = NameAndType        #228:#229     // hasIndex:()Z\n-  #192 = Utf8               java/lang/IllegalStateException\n-  #193 = Utf8               Invalid StackMap frameType:\n-  #194 = Utf8               java/lang/IllegalArgumentException\n-  #195 = Utf8               Invalid StackMap frameType\n-  #196 = Utf8               Invalid StackMap offset:\n-  #197 = NameAndType        #116:#113     // setByteCodeOffset:(I)V\n-  #198 = NameAndType        #230:#231     // clone:()Ljava/lang/Object;\n-  #199 = Utf8               org/apache/bcel/classfile/StackMapEntry\n-  #200 = Utf8               java/lang/CloneNotSupportedException\n-  #201 = Utf8               java/lang/Error\n-  #202 = Utf8               Clone Not Supported\n-  #203 = NameAndType        #133:#232     // copy:()Lorg/apache/bcel/classfile/StackMapType;\n-  #204 = Class              #233          // org/apache/bcel/classfile/Visitor\n-  #205 = NameAndType        #234:#235     // visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n-  #206 = Utf8               java/lang/Object\n-  #207 = Utf8               org/apache/bcel/classfile/Node\n-  #208 = Utf8               java/lang/Cloneable\n-  #209 = Utf8               java/io/DataInput\n-  #210 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #211 = Utf8               java/io/IOException\n-  #212 = Utf8               readByte\n-  #213 = Utf8               ()B\n-  #214 = Utf8               readShort\n-  #215 = Utf8               ()S\n-  #216 = Utf8               ()V\n-  #217 = Utf8               append\n-  #218 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #219 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #220 = Utf8               (Ljava/lang/String;)V\n-  #221 = Utf8               java/io/DataOutputStream\n-  #222 = Utf8               write\n-  #223 = Utf8               writeShort\n-  #224 = Utf8               java/lang/String\n-  #225 = Utf8               valueOf\n-  #226 = Utf8               (I)Ljava/lang/String;\n-  #227 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #228 = Utf8               hasIndex\n-  #229 = Utf8               ()Z\n-  #230 = Utf8               clone\n-  #231 = Utf8               ()Ljava/lang/Object;\n-  #232 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n-  #233 = Utf8               org/apache/bcel/classfile/Visitor\n-  #234 = Utf8               visitStackMapEntry\n-  #235 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)V\n+    #1 = InterfaceMethodref #2.#3         // java/io/DataInput.readByte:()B\n+    #2 = Class              #4            // java/io/DataInput\n+    #3 = NameAndType        #5:#6         // readByte:()B\n+    #4 = Utf8               java/io/DataInput\n+    #5 = Utf8               readByte\n+    #6 = Utf8               ()B\n+    #7 = Methodref          #8.#9         // org/apache/bcel/classfile/StackMapEntry.\"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+    #8 = Class              #10           // org/apache/bcel/classfile/StackMapEntry\n+    #9 = NameAndType        #11:#12       // \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #10 = Utf8               org/apache/bcel/classfile/StackMapEntry\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #13 = Fieldref           #8.#14        // org/apache/bcel/classfile/StackMapEntry.frameType:I\n+   #14 = NameAndType        #15:#16       // frameType:I\n+   #15 = Utf8               frameType\n+   #16 = Utf8               I\n+   #17 = Class              #18           // org/apache/bcel/Const\n+   #18 = Utf8               org/apache/bcel/Const\n+   #19 = Fieldref           #8.#20        // org/apache/bcel/classfile/StackMapEntry.byteCodeOffset:I\n+   #20 = NameAndType        #21:#16       // byteCodeOffset:I\n+   #21 = Utf8               byteCodeOffset\n+   #22 = Class              #23           // org/apache/bcel/classfile/StackMapType\n+   #23 = Utf8               org/apache/bcel/classfile/StackMapType\n+   #24 = Fieldref           #8.#25        // org/apache/bcel/classfile/StackMapEntry.typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+   #25 = NameAndType        #26:#27       // typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+   #26 = Utf8               typesOfStackItems\n+   #27 = Utf8               [Lorg/apache/bcel/classfile/StackMapType;\n+   #28 = Methodref          #22.#29       // org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #29 = NameAndType        #11:#30       // \"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #30 = Utf8               (Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+   #31 = InterfaceMethodref #2.#32        // java/io/DataInput.readShort:()S\n+   #32 = NameAndType        #33:#34       // readShort:()S\n+   #33 = Utf8               readShort\n+   #34 = Utf8               ()S\n+   #35 = Fieldref           #8.#36        // org/apache/bcel/classfile/StackMapEntry.typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+   #36 = NameAndType        #37:#27       // typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+   #37 = Utf8               typesOfLocals\n+   #38 = Class              #39           // org/apache/bcel/classfile/ClassFormatException\n+   #39 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+   #40 = Class              #41           // java/lang/StringBuilder\n+   #41 = Utf8               java/lang/StringBuilder\n+   #42 = Methodref          #40.#43       // java/lang/StringBuilder.\"<init>\":()V\n+   #43 = NameAndType        #11:#44       // \"<init>\":()V\n+   #44 = Utf8               ()V\n+   #45 = String             #46           // Invalid frame type found while parsing stack map table:\n+   #46 = Utf8               Invalid frame type found while parsing stack map table:\n+   #47 = Methodref          #40.#48       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #48 = NameAndType        #49:#50       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #49 = Utf8               append\n+   #50 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = Methodref          #40.#52       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #52 = NameAndType        #49:#53       // append:(I)Ljava/lang/StringBuilder;\n+   #53 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #54 = Methodref          #40.#55       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #55 = NameAndType        #56:#57       // toString:()Ljava/lang/String;\n+   #56 = Utf8               toString\n+   #57 = Utf8               ()Ljava/lang/String;\n+   #58 = Methodref          #38.#59       // org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #59 = NameAndType        #11:#60       // \"<init>\":(Ljava/lang/String;)V\n+   #60 = Utf8               (Ljava/lang/String;)V\n+   #61 = Methodref          #62.#43       // java/lang/Object.\"<init>\":()V\n+   #62 = Class              #63           // java/lang/Object\n+   #63 = Utf8               java/lang/Object\n+   #64 = Fieldref           #8.#65        // org/apache/bcel/classfile/StackMapEntry.constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #65 = NameAndType        #66:#67       // constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+   #66 = Utf8               constantPool\n+   #67 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+   #68 = Methodref          #69.#70       // java/io/DataOutputStream.write:(I)V\n+   #69 = Class              #71           // java/io/DataOutputStream\n+   #70 = NameAndType        #72:#73       // write:(I)V\n+   #71 = Utf8               java/io/DataOutputStream\n+   #72 = Utf8               write\n+   #73 = Utf8               (I)V\n+   #74 = Methodref          #22.#75       // org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+   #75 = NameAndType        #76:#77       // dump:(Ljava/io/DataOutputStream;)V\n+   #76 = Utf8               dump\n+   #77 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #78 = Methodref          #69.#79       // java/io/DataOutputStream.writeShort:(I)V\n+   #79 = NameAndType        #80:#73       // writeShort:(I)V\n+   #80 = Utf8               writeShort\n+   #81 = String             #82           // Invalid Stack map table tag:\n+   #82 = Utf8               Invalid Stack map table tag:\n+   #83 = Methodref          #40.#84       // java/lang/StringBuilder.\"<init>\":(I)V\n+   #84 = NameAndType        #11:#73       // \"<init>\":(I)V\n+   #85 = String             #86           // (\n+   #86 = Utf8               (\n+   #87 = String             #88           // SAME\n+   #88 = Utf8               SAME\n+   #89 = String             #90           // SAME_LOCALS_1_STACK\n+   #90 = Utf8               SAME_LOCALS_1_STACK\n+   #91 = String             #92           // SAME_LOCALS_1_STACK_EXTENDED\n+   #92 = Utf8               SAME_LOCALS_1_STACK_EXTENDED\n+   #93 = String             #94           // CHOP\n+   #94 = Utf8               CHOP\n+   #95 = Methodref          #96.#97       // java/lang/String.valueOf:(I)Ljava/lang/String;\n+   #96 = Class              #98           // java/lang/String\n+   #97 = NameAndType        #99:#100      // valueOf:(I)Ljava/lang/String;\n+   #98 = Utf8               java/lang/String\n+   #99 = Utf8               valueOf\n+  #100 = Utf8               (I)Ljava/lang/String;\n+  #101 = String             #102          // SAME_EXTENDED\n+  #102 = Utf8               SAME_EXTENDED\n+  #103 = String             #104          // APPEND\n+  #104 = Utf8               APPEND\n+  #105 = String             #106          // FULL\n+  #106 = Utf8               FULL\n+  #107 = String             #108          // UNKNOWN (\n+  #108 = Utf8               UNKNOWN (\n+  #109 = String             #110          // )\n+  #110 = Utf8               )\n+  #111 = String             #112          // , offset delta=\n+  #112 = Utf8               , offset delta=\n+  #113 = String             #114          // , locals={\n+  #114 = Utf8               , locals={\n+  #115 = Methodref          #40.#116      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #116 = NameAndType        #49:#117      // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #117 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #118 = String             #119          // ,\n+  #119 = Utf8               ,\n+  #120 = String             #121          // }\n+  #121 = Utf8               }\n+  #122 = String             #123          // , stack items={\n+  #123 = Utf8               , stack items={\n+  #124 = Methodref          #22.#125      // org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+  #125 = NameAndType        #126:#127     // hasIndex:()Z\n+  #126 = Utf8               hasIndex\n+  #127 = Utf8               ()Z\n+  #128 = Class              #129          // java/lang/IllegalStateException\n+  #129 = Utf8               java/lang/IllegalStateException\n+  #130 = String             #131          // Invalid StackMap frameType:\n+  #131 = Utf8               Invalid StackMap frameType:\n+  #132 = Methodref          #128.#59      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #133 = Class              #134          // java/lang/IllegalArgumentException\n+  #134 = Utf8               java/lang/IllegalArgumentException\n+  #135 = String             #136          // Invalid StackMap frameType\n+  #136 = Utf8               Invalid StackMap frameType\n+  #137 = Methodref          #133.#59      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #138 = String             #139          // Invalid StackMap offset:\n+  #139 = Utf8               Invalid StackMap offset:\n+  #140 = Methodref          #8.#141       // org/apache/bcel/classfile/StackMapEntry.setByteCodeOffset:(I)V\n+  #141 = NameAndType        #142:#73      // setByteCodeOffset:(I)V\n+  #142 = Utf8               setByteCodeOffset\n+  #143 = Methodref          #62.#144      // java/lang/Object.clone:()Ljava/lang/Object;\n+  #144 = NameAndType        #145:#146     // clone:()Ljava/lang/Object;\n+  #145 = Utf8               clone\n+  #146 = Utf8               ()Ljava/lang/Object;\n+  #147 = Class              #148          // java/lang/CloneNotSupportedException\n+  #148 = Utf8               java/lang/CloneNotSupportedException\n+  #149 = Class              #150          // java/lang/Error\n+  #150 = Utf8               java/lang/Error\n+  #151 = String             #152          // Clone Not Supported\n+  #152 = Utf8               Clone Not Supported\n+  #153 = Methodref          #149.#59      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+  #154 = Methodref          #22.#155      // org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+  #155 = NameAndType        #156:#157     // copy:()Lorg/apache/bcel/classfile/StackMapType;\n+  #156 = Utf8               copy\n+  #157 = Utf8               ()Lorg/apache/bcel/classfile/StackMapType;\n+  #158 = InterfaceMethodref #159.#160     // org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+  #159 = Class              #161          // org/apache/bcel/classfile/Visitor\n+  #160 = NameAndType        #162:#163     // visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+  #161 = Utf8               org/apache/bcel/classfile/Visitor\n+  #162 = Utf8               visitStackMapEntry\n+  #163 = Utf8               (Lorg/apache/bcel/classfile/StackMapEntry;)V\n+  #164 = Class              #165          // org/apache/bcel/classfile/Node\n+  #165 = Utf8               org/apache/bcel/classfile/Node\n+  #166 = Class              #167          // java/lang/Cloneable\n+  #167 = Utf8               java/lang/Cloneable\n+  #168 = Utf8               Code\n+  #169 = Utf8               LineNumberTable\n+  #170 = Utf8               LocalVariableTable\n+  #171 = Utf8               i\n+  #172 = Utf8               number_of_locals\n+  #173 = Utf8               number_of_stack_items\n+  #174 = Utf8               this\n+  #175 = Utf8               Lorg/apache/bcel/classfile/StackMapEntry;\n+  #176 = Utf8               input\n+  #177 = Utf8               Ljava/io/DataInput;\n+  #178 = Utf8               StackMapTable\n+  #179 = Class              #180          // org/apache/bcel/classfile/ConstantPool\n+  #180 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #181 = Utf8               Exceptions\n+  #182 = Class              #183          // java/io/IOException\n+  #183 = Utf8               java/io/IOException\n+  #184 = Utf8               (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #185 = Utf8               numberOfLocals\n+  #186 = Utf8               numberOfStackItems\n+  #187 = Class              #27           // \"[Lorg/apache/bcel/classfile/StackMapType;\"\n+  #188 = Utf8               Deprecated\n+  #189 = Utf8               RuntimeVisibleAnnotations\n+  #190 = Utf8               Ljava/lang/Deprecated;\n+  #191 = Utf8               tag\n+  #192 = Utf8               type\n+  #193 = Utf8               Lorg/apache/bcel/classfile/StackMapType;\n+  #194 = Utf8               file\n+  #195 = Utf8               Ljava/io/DataOutputStream;\n+  #196 = Utf8               buf\n+  #197 = Utf8               Ljava/lang/StringBuilder;\n+  #198 = Utf8               getMapEntrySize\n+  #199 = Utf8               ()I\n+  #200 = Utf8               types_of_local\n+  #201 = Utf8               len\n+  #202 = Utf8               types_of_stack_item\n+  #203 = Utf8               setFrameType\n+  #204 = Utf8               f\n+  #205 = Utf8               getFrameType\n+  #206 = Utf8               new_offset\n+  #207 = Utf8               updateByteCodeOffset\n+  #208 = Utf8               delta\n+  #209 = Utf8               getByteCodeOffset\n+  #210 = Utf8               setNumberOfLocals\n+  #211 = Utf8               n\n+  #212 = Utf8               getNumberOfLocals\n+  #213 = Utf8               setTypesOfLocals\n+  #214 = Utf8               ([Lorg/apache/bcel/classfile/StackMapType;)V\n+  #215 = Utf8               types\n+  #216 = Utf8               getTypesOfLocals\n+  #217 = Utf8               ()[Lorg/apache/bcel/classfile/StackMapType;\n+  #218 = Utf8               setNumberOfStackItems\n+  #219 = Utf8               getNumberOfStackItems\n+  #220 = Utf8               setTypesOfStackItems\n+  #221 = Utf8               getTypesOfStackItems\n+  #222 = Utf8               ()Lorg/apache/bcel/classfile/StackMapEntry;\n+  #223 = Utf8               e\n+  #224 = Utf8               ex\n+  #225 = Utf8               Ljava/lang/CloneNotSupportedException;\n+  #226 = Utf8               accept\n+  #227 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #228 = Utf8               v\n+  #229 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n+  #230 = Utf8               getConstantPool\n+  #231 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #232 = Utf8               setConstantPool\n+  #233 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #234 = Utf8               SourceFile\n+  #235 = Utf8               StackMapEntry.java\n {\n   private int frameType;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int byteCodeOffset;\n     descriptor: I\n@@ -274,206 +274,206 @@\n          2: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readByte:()B\n          7: sipush        255\n         10: iand\n         11: iconst_m1\n         12: aconst_null\n         13: aconst_null\n         14: aload_2\n-        15: invokespecial #2                  // Method \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n+        15: invokespecial #7                  // Method \"<init>\":(II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n         18: aload_0\n-        19: getfield      #3                  // Field frameType:I\n+        19: getfield      #13                 // Field frameType:I\n         22: iflt          47\n         25: aload_0\n-        26: getfield      #3                  // Field frameType:I\n+        26: getfield      #13                 // Field frameType:I\n         29: bipush        63\n         31: if_icmpgt     47\n         34: aload_0\n         35: aload_0\n-        36: getfield      #3                  // Field frameType:I\n+        36: getfield      #13                 // Field frameType:I\n         39: iconst_0\n         40: isub\n-        41: putfield      #5                  // Field byteCodeOffset:I\n+        41: putfield      #19                 // Field byteCodeOffset:I\n         44: goto          433\n         47: aload_0\n-        48: getfield      #3                  // Field frameType:I\n+        48: getfield      #13                 // Field frameType:I\n         51: bipush        64\n         53: if_icmplt     102\n         56: aload_0\n-        57: getfield      #3                  // Field frameType:I\n+        57: getfield      #13                 // Field frameType:I\n         60: bipush        127\n         62: if_icmpgt     102\n         65: aload_0\n         66: aload_0\n-        67: getfield      #3                  // Field frameType:I\n+        67: getfield      #13                 // Field frameType:I\n         70: bipush        64\n         72: isub\n-        73: putfield      #5                  // Field byteCodeOffset:I\n+        73: putfield      #19                 // Field byteCodeOffset:I\n         76: aload_0\n         77: iconst_1\n-        78: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        81: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        78: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        81: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         84: aload_0\n-        85: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        85: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         88: iconst_0\n-        89: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+        89: new           #22                 // class org/apache/bcel/classfile/StackMapType\n         92: dup\n         93: aload_1\n         94: aload_2\n-        95: invokespecial #8                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+        95: invokespecial #28                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n         98: aastore\n         99: goto          433\n        102: aload_0\n-       103: getfield      #3                  // Field frameType:I\n+       103: getfield      #13                 // Field frameType:I\n        106: sipush        247\n        109: if_icmpne     148\n        112: aload_0\n        113: aload_1\n-       114: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n-       119: putfield      #5                  // Field byteCodeOffset:I\n+       114: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+       119: putfield      #19                 // Field byteCodeOffset:I\n        122: aload_0\n        123: iconst_1\n-       124: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       127: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       124: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       127: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        130: aload_0\n-       131: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       131: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        134: iconst_0\n-       135: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       135: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        138: dup\n        139: aload_1\n        140: aload_2\n-       141: invokespecial #8                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       141: invokespecial #28                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        144: aastore\n        145: goto          433\n        148: aload_0\n-       149: getfield      #3                  // Field frameType:I\n+       149: getfield      #13                 // Field frameType:I\n        152: sipush        248\n        155: if_icmplt     181\n        158: aload_0\n-       159: getfield      #3                  // Field frameType:I\n+       159: getfield      #13                 // Field frameType:I\n        162: sipush        250\n        165: if_icmpgt     181\n        168: aload_0\n        169: aload_1\n-       170: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n-       175: putfield      #5                  // Field byteCodeOffset:I\n+       170: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+       175: putfield      #19                 // Field byteCodeOffset:I\n        178: goto          433\n        181: aload_0\n-       182: getfield      #3                  // Field frameType:I\n+       182: getfield      #13                 // Field frameType:I\n        185: sipush        251\n        188: if_icmpne     204\n        191: aload_0\n        192: aload_1\n-       193: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n-       198: putfield      #5                  // Field byteCodeOffset:I\n+       193: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+       198: putfield      #19                 // Field byteCodeOffset:I\n        201: goto          433\n        204: aload_0\n-       205: getfield      #3                  // Field frameType:I\n+       205: getfield      #13                 // Field frameType:I\n        208: sipush        252\n        211: if_icmplt     285\n        214: aload_0\n-       215: getfield      #3                  // Field frameType:I\n+       215: getfield      #13                 // Field frameType:I\n        218: sipush        254\n        221: if_icmpgt     285\n        224: aload_0\n        225: aload_1\n-       226: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n-       231: putfield      #5                  // Field byteCodeOffset:I\n+       226: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+       231: putfield      #19                 // Field byteCodeOffset:I\n        234: aload_0\n-       235: getfield      #3                  // Field frameType:I\n+       235: getfield      #13                 // Field frameType:I\n        238: sipush        251\n        241: isub\n        242: istore_3\n        243: aload_0\n        244: iload_3\n-       245: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       248: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       245: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       248: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        251: iconst_0\n        252: istore        4\n        254: iload         4\n        256: iload_3\n        257: if_icmpge     282\n        260: aload_0\n-       261: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       261: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        264: iload         4\n-       266: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       266: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        269: dup\n        270: aload_1\n        271: aload_2\n-       272: invokespecial #8                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       272: invokespecial #28                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        275: aastore\n        276: iinc          4, 1\n        279: goto          254\n        282: goto          433\n        285: aload_0\n-       286: getfield      #3                  // Field frameType:I\n+       286: getfield      #13                 // Field frameType:I\n        289: sipush        255\n        292: if_icmpne     403\n        295: aload_0\n        296: aload_1\n-       297: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n-       302: putfield      #5                  // Field byteCodeOffset:I\n+       297: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n+       302: putfield      #19                 // Field byteCodeOffset:I\n        305: aload_1\n-       306: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n+       306: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n        311: istore_3\n        312: aload_0\n        313: iload_3\n-       314: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       317: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       314: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       317: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        320: iconst_0\n        321: istore        4\n        323: iload         4\n        325: iload_3\n        326: if_icmpge     351\n        329: aload_0\n-       330: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       330: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        333: iload         4\n-       335: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       335: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        338: dup\n        339: aload_1\n        340: aload_2\n-       341: invokespecial #8                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       341: invokespecial #28                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        344: aastore\n        345: iinc          4, 1\n        348: goto          323\n        351: aload_1\n-       352: invokeinterface #9,  1            // InterfaceMethod java/io/DataInput.readShort:()S\n+       352: invokeinterface #31,  1           // InterfaceMethod java/io/DataInput.readShort:()S\n        357: istore        4\n        359: aload_0\n        360: iload         4\n-       362: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-       365: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       362: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+       365: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        368: iconst_0\n        369: istore        5\n        371: iload         5\n        373: iload         4\n        375: if_icmpge     400\n        378: aload_0\n-       379: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       379: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        382: iload         5\n-       384: new           #6                  // class org/apache/bcel/classfile/StackMapType\n+       384: new           #22                 // class org/apache/bcel/classfile/StackMapType\n        387: dup\n        388: aload_1\n        389: aload_2\n-       390: invokespecial #8                  // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n+       390: invokespecial #28                 // Method org/apache/bcel/classfile/StackMapType.\"<init>\":(Ljava/io/DataInput;Lorg/apache/bcel/classfile/ConstantPool;)V\n        393: aastore\n        394: iinc          5, 1\n        397: goto          371\n        400: goto          433\n-       403: new           #11                 // class org/apache/bcel/classfile/ClassFormatException\n+       403: new           #38                 // class org/apache/bcel/classfile/ClassFormatException\n        406: dup\n-       407: new           #12                 // class java/lang/StringBuilder\n+       407: new           #40                 // class java/lang/StringBuilder\n        410: dup\n-       411: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       414: ldc           #14                 // String Invalid frame type found while parsing stack map table:\n-       416: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       411: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       414: ldc           #45                 // String Invalid frame type found while parsing stack map table:\n+       416: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        419: aload_0\n-       420: getfield      #3                  // Field frameType:I\n-       423: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       426: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       429: invokespecial #18                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+       420: getfield      #13                 // Field frameType:I\n+       423: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       426: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       429: invokespecial #58                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n        432: athrow\n        433: return\n       LineNumberTable:\n         line 50: 0\n         line 52: 18\n         line 53: 34\n         line 54: 47\n@@ -553,37 +553,37 @@\n \n   public org.apache.bcel.classfile.StackMapEntry(int, int, org.apache.bcel.classfile.StackMapType[], int, org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.ConstantPool);\n     descriptor: (II[Lorg/apache/bcel/classfile/StackMapType;I[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=7, args_size=7\n          0: aload_0\n-         1: invokespecial #19                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #61                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #5                  // Field byteCodeOffset:I\n+         6: putfield      #19                 // Field byteCodeOffset:I\n          9: aload_0\n         10: aload_3\n         11: ifnull        18\n         14: aload_3\n         15: goto          22\n         18: iconst_0\n-        19: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        22: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        19: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        22: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         25: aload_0\n         26: aload         5\n         28: ifnull        36\n         31: aload         5\n         33: goto          40\n         36: iconst_0\n-        37: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        40: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        37: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        40: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         43: aload_0\n         44: aload         6\n-        46: putfield      #20                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        46: putfield      #64                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n         49: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 4\n         line 109: 9\n         line 110: 25\n         line 111: 43\n@@ -610,49 +610,49 @@\n           stack = [ class org/apache/bcel/classfile/StackMapEntry ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 3\n           locals = [ class org/apache/bcel/classfile/StackMapEntry, int, int, class \"[Lorg/apache/bcel/classfile/StackMapType;\", int, class \"[Lorg/apache/bcel/classfile/StackMapType;\", class org/apache/bcel/classfile/ConstantPool ]\n           stack = [ class org/apache/bcel/classfile/StackMapEntry, class \"[Lorg/apache/bcel/classfile/StackMapType;\" ]\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #94()\n+      0: #190()\n         java.lang.Deprecated\n \n   public org.apache.bcel.classfile.StackMapEntry(int, int, org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.StackMapType[], org.apache.bcel.classfile.ConstantPool);\n     descriptor: (II[Lorg/apache/bcel/classfile/StackMapType;[Lorg/apache/bcel/classfile/StackMapType;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=6\n          0: aload_0\n-         1: invokespecial #19                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #61                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #3                  // Field frameType:I\n+         6: putfield      #13                 // Field frameType:I\n          9: aload_0\n         10: iload_2\n-        11: putfield      #5                  // Field byteCodeOffset:I\n+        11: putfield      #19                 // Field byteCodeOffset:I\n         14: aload_0\n         15: aload_3\n         16: ifnull        23\n         19: aload_3\n         20: goto          27\n         23: iconst_0\n-        24: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        27: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        24: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        27: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         30: aload_0\n         31: aload         4\n         33: ifnull        41\n         36: aload         4\n         38: goto          45\n         41: iconst_0\n-        42: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        45: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        42: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        45: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         48: aload_0\n         49: aload         5\n-        51: putfield      #20                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+        51: putfield      #64                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n         54: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 4\n         line 127: 9\n         line 128: 14\n         line 129: 30\n@@ -685,90 +685,90 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field frameType:I\n-         5: invokevirtual #21                 // Method java/io/DataOutputStream.write:(I)V\n+         2: getfield      #13                 // Field frameType:I\n+         5: invokevirtual #68                 // Method java/io/DataOutputStream.write:(I)V\n          8: aload_0\n-         9: getfield      #3                  // Field frameType:I\n+         9: getfield      #13                 // Field frameType:I\n         12: iflt          27\n         15: aload_0\n-        16: getfield      #3                  // Field frameType:I\n+        16: getfield      #13                 // Field frameType:I\n         19: bipush        63\n         21: if_icmpgt     27\n         24: goto          346\n         27: aload_0\n-        28: getfield      #3                  // Field frameType:I\n+        28: getfield      #13                 // Field frameType:I\n         31: bipush        64\n         33: if_icmplt     58\n         36: aload_0\n-        37: getfield      #3                  // Field frameType:I\n+        37: getfield      #13                 // Field frameType:I\n         40: bipush        127\n         42: if_icmpgt     58\n         45: aload_0\n-        46: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        46: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         49: iconst_0\n         50: aaload\n         51: aload_1\n-        52: invokevirtual #22                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+        52: invokevirtual #74                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n         55: goto          346\n         58: aload_0\n-        59: getfield      #3                  // Field frameType:I\n+        59: getfield      #13                 // Field frameType:I\n         62: sipush        247\n         65: if_icmpne     89\n         68: aload_1\n         69: aload_0\n-        70: getfield      #5                  // Field byteCodeOffset:I\n-        73: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        70: getfield      #19                 // Field byteCodeOffset:I\n+        73: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n         76: aload_0\n-        77: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        77: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         80: iconst_0\n         81: aaload\n         82: aload_1\n-        83: invokevirtual #22                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+        83: invokevirtual #74                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n         86: goto          346\n         89: aload_0\n-        90: getfield      #3                  // Field frameType:I\n+        90: getfield      #13                 // Field frameType:I\n         93: sipush        248\n         96: if_icmplt     120\n         99: aload_0\n-       100: getfield      #3                  // Field frameType:I\n+       100: getfield      #13                 // Field frameType:I\n        103: sipush        250\n        106: if_icmpgt     120\n        109: aload_1\n        110: aload_0\n-       111: getfield      #5                  // Field byteCodeOffset:I\n-       114: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       111: getfield      #19                 // Field byteCodeOffset:I\n+       114: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n        117: goto          346\n        120: aload_0\n-       121: getfield      #3                  // Field frameType:I\n+       121: getfield      #13                 // Field frameType:I\n        124: sipush        251\n        127: if_icmpne     141\n        130: aload_1\n        131: aload_0\n-       132: getfield      #5                  // Field byteCodeOffset:I\n-       135: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       132: getfield      #19                 // Field byteCodeOffset:I\n+       135: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n        138: goto          346\n        141: aload_0\n-       142: getfield      #3                  // Field frameType:I\n+       142: getfield      #13                 // Field frameType:I\n        145: sipush        252\n        148: if_icmplt     207\n        151: aload_0\n-       152: getfield      #3                  // Field frameType:I\n+       152: getfield      #13                 // Field frameType:I\n        155: sipush        254\n        158: if_icmpgt     207\n        161: aload_1\n        162: aload_0\n-       163: getfield      #5                  // Field byteCodeOffset:I\n-       166: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       163: getfield      #19                 // Field byteCodeOffset:I\n+       166: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n        169: aload_0\n-       170: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       170: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        173: astore_2\n        174: aload_2\n        175: arraylength\n        176: istore_3\n        177: iconst_0\n        178: istore        4\n        180: iload         4\n@@ -776,33 +776,33 @@\n        183: if_icmpge     204\n        186: aload_2\n        187: iload         4\n        189: aaload\n        190: astore        5\n        192: aload         5\n        194: aload_1\n-       195: invokevirtual #22                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+       195: invokevirtual #74                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n        198: iinc          4, 1\n        201: goto          180\n        204: goto          346\n        207: aload_0\n-       208: getfield      #3                  // Field frameType:I\n+       208: getfield      #13                 // Field frameType:I\n        211: sipush        255\n        214: if_icmpne     316\n        217: aload_1\n        218: aload_0\n-       219: getfield      #5                  // Field byteCodeOffset:I\n-       222: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       219: getfield      #19                 // Field byteCodeOffset:I\n+       222: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n        225: aload_1\n        226: aload_0\n-       227: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       227: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        230: arraylength\n-       231: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       231: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n        234: aload_0\n-       235: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       235: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        238: astore_2\n        239: aload_2\n        240: arraylength\n        241: istore_3\n        242: iconst_0\n        243: istore        4\n        245: iload         4\n@@ -810,24 +810,24 @@\n        248: if_icmpge     269\n        251: aload_2\n        252: iload         4\n        254: aaload\n        255: astore        5\n        257: aload         5\n        259: aload_1\n-       260: invokevirtual #22                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+       260: invokevirtual #74                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n        263: iinc          4, 1\n        266: goto          245\n        269: aload_1\n        270: aload_0\n-       271: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       271: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        274: arraylength\n-       275: invokevirtual #23                 // Method java/io/DataOutputStream.writeShort:(I)V\n+       275: invokevirtual #78                 // Method java/io/DataOutputStream.writeShort:(I)V\n        278: aload_0\n-       279: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       279: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        282: astore_2\n        283: aload_2\n        284: arraylength\n        285: istore_3\n        286: iconst_0\n        287: istore        4\n        289: iload         4\n@@ -835,30 +835,30 @@\n        292: if_icmpge     313\n        295: aload_2\n        296: iload         4\n        298: aaload\n        299: astore        5\n        301: aload         5\n        303: aload_1\n-       304: invokevirtual #22                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n+       304: invokevirtual #74                 // Method org/apache/bcel/classfile/StackMapType.dump:(Ljava/io/DataOutputStream;)V\n        307: iinc          4, 1\n        310: goto          289\n        313: goto          346\n-       316: new           #11                 // class org/apache/bcel/classfile/ClassFormatException\n+       316: new           #38                 // class org/apache/bcel/classfile/ClassFormatException\n        319: dup\n-       320: new           #12                 // class java/lang/StringBuilder\n+       320: new           #40                 // class java/lang/StringBuilder\n        323: dup\n-       324: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       327: ldc           #24                 // String Invalid Stack map table tag:\n-       329: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       324: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       327: ldc           #81                 // String Invalid Stack map table tag:\n+       329: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        332: aload_0\n-       333: getfield      #3                  // Field frameType:I\n-       336: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       339: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       342: invokespecial #18                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n+       333: getfield      #13                 // Field frameType:I\n+       336: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       339: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       342: invokespecial #58                 // Method org/apache/bcel/classfile/ClassFormatException.\"<init>\":(Ljava/lang/String;)V\n        345: athrow\n        346: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 8\n         line 144: 27\n         line 146: 45\n@@ -921,213 +921,213 @@\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #12                 // class java/lang/StringBuilder\n+         0: new           #40                 // class java/lang/StringBuilder\n          3: dup\n          4: bipush        64\n-         6: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n+         6: invokespecial #83                 // Method java/lang/StringBuilder.\"<init>\":(I)V\n          9: astore_1\n         10: aload_1\n-        11: ldc           #26                 // String (\n-        13: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        11: ldc           #85                 // String (\n+        13: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         16: pop\n         17: aload_0\n-        18: getfield      #3                  // Field frameType:I\n+        18: getfield      #13                 // Field frameType:I\n         21: iflt          43\n         24: aload_0\n-        25: getfield      #3                  // Field frameType:I\n+        25: getfield      #13                 // Field frameType:I\n         28: bipush        63\n         30: if_icmpgt     43\n         33: aload_1\n-        34: ldc           #27                 // String SAME\n-        36: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: ldc           #87                 // String SAME\n+        36: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         39: pop\n         40: goto          238\n         43: aload_0\n-        44: getfield      #3                  // Field frameType:I\n+        44: getfield      #13                 // Field frameType:I\n         47: bipush        64\n         49: if_icmplt     71\n         52: aload_0\n-        53: getfield      #3                  // Field frameType:I\n+        53: getfield      #13                 // Field frameType:I\n         56: bipush        127\n         58: if_icmpgt     71\n         61: aload_1\n-        62: ldc           #28                 // String SAME_LOCALS_1_STACK\n-        64: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: ldc           #89                 // String SAME_LOCALS_1_STACK\n+        64: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         67: pop\n         68: goto          238\n         71: aload_0\n-        72: getfield      #3                  // Field frameType:I\n+        72: getfield      #13                 // Field frameType:I\n         75: sipush        247\n         78: if_icmpne     91\n         81: aload_1\n-        82: ldc           #29                 // String SAME_LOCALS_1_STACK_EXTENDED\n-        84: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        82: ldc           #91                 // String SAME_LOCALS_1_STACK_EXTENDED\n+        84: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         87: pop\n         88: goto          238\n         91: aload_0\n-        92: getfield      #3                  // Field frameType:I\n+        92: getfield      #13                 // Field frameType:I\n         95: sipush        248\n         98: if_icmplt     135\n        101: aload_0\n-       102: getfield      #3                  // Field frameType:I\n+       102: getfield      #13                 // Field frameType:I\n        105: sipush        250\n        108: if_icmpgt     135\n        111: aload_1\n-       112: ldc           #30                 // String CHOP\n-       114: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       112: ldc           #93                 // String CHOP\n+       114: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        117: sipush        251\n        120: aload_0\n-       121: getfield      #3                  // Field frameType:I\n+       121: getfield      #13                 // Field frameType:I\n        124: isub\n-       125: invokestatic  #31                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n-       128: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       125: invokestatic  #95                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+       128: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        131: pop\n        132: goto          238\n        135: aload_0\n-       136: getfield      #3                  // Field frameType:I\n+       136: getfield      #13                 // Field frameType:I\n        139: sipush        251\n        142: if_icmpne     155\n        145: aload_1\n-       146: ldc           #32                 // String SAME_EXTENDED\n-       148: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       146: ldc           #101                // String SAME_EXTENDED\n+       148: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        151: pop\n        152: goto          238\n        155: aload_0\n-       156: getfield      #3                  // Field frameType:I\n+       156: getfield      #13                 // Field frameType:I\n        159: sipush        252\n        162: if_icmplt     199\n        165: aload_0\n-       166: getfield      #3                  // Field frameType:I\n+       166: getfield      #13                 // Field frameType:I\n        169: sipush        254\n        172: if_icmpgt     199\n        175: aload_1\n-       176: ldc           #33                 // String APPEND\n-       178: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       176: ldc           #103                // String APPEND\n+       178: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        181: aload_0\n-       182: getfield      #3                  // Field frameType:I\n+       182: getfield      #13                 // Field frameType:I\n        185: sipush        251\n        188: isub\n-       189: invokestatic  #31                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n-       192: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       189: invokestatic  #95                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+       192: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        195: pop\n        196: goto          238\n        199: aload_0\n-       200: getfield      #3                  // Field frameType:I\n+       200: getfield      #13                 // Field frameType:I\n        203: sipush        255\n        206: if_icmpne     219\n        209: aload_1\n-       210: ldc           #34                 // String FULL\n-       212: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       210: ldc           #105                // String FULL\n+       212: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        215: pop\n        216: goto          238\n        219: aload_1\n-       220: ldc           #35                 // String UNKNOWN (\n-       222: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       220: ldc           #107                // String UNKNOWN (\n+       222: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        225: aload_0\n-       226: getfield      #3                  // Field frameType:I\n-       229: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       232: ldc           #36                 // String )\n-       234: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       226: getfield      #13                 // Field frameType:I\n+       229: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       232: ldc           #109                // String )\n+       234: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        237: pop\n        238: aload_1\n-       239: ldc           #37                 // String , offset delta=\n-       241: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       239: ldc           #111                // String , offset delta=\n+       241: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        244: aload_0\n-       245: getfield      #5                  // Field byteCodeOffset:I\n-       248: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       245: getfield      #19                 // Field byteCodeOffset:I\n+       248: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n        251: pop\n        252: aload_0\n-       253: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       253: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        256: arraylength\n        257: ifle          320\n        260: aload_1\n-       261: ldc           #38                 // String , locals={\n-       263: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       261: ldc           #113                // String , locals={\n+       263: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        266: pop\n        267: iconst_0\n        268: istore_2\n        269: iload_2\n        270: aload_0\n-       271: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       271: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        274: arraylength\n        275: if_icmpge     313\n        278: aload_1\n        279: aload_0\n-       280: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       280: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        283: iload_2\n        284: aaload\n-       285: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       285: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        288: pop\n        289: iload_2\n        290: aload_0\n-       291: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       291: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        294: arraylength\n        295: iconst_1\n        296: isub\n        297: if_icmpge     307\n        300: aload_1\n-       301: ldc           #40                 // String ,\n-       303: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       301: ldc           #118                // String ,\n+       303: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        306: pop\n        307: iinc          2, 1\n        310: goto          269\n        313: aload_1\n-       314: ldc           #41                 // String }\n-       316: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       314: ldc           #120                // String }\n+       316: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        319: pop\n        320: aload_0\n-       321: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       321: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        324: arraylength\n        325: ifle          388\n        328: aload_1\n-       329: ldc           #42                 // String , stack items={\n-       331: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       329: ldc           #122                // String , stack items={\n+       331: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        334: pop\n        335: iconst_0\n        336: istore_2\n        337: iload_2\n        338: aload_0\n-       339: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       339: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        342: arraylength\n        343: if_icmpge     381\n        346: aload_1\n        347: aload_0\n-       348: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       348: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        351: iload_2\n        352: aaload\n-       353: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       353: invokevirtual #115                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        356: pop\n        357: iload_2\n        358: aload_0\n-       359: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       359: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        362: arraylength\n        363: iconst_1\n        364: isub\n        365: if_icmpge     375\n        368: aload_1\n-       369: ldc           #40                 // String ,\n-       371: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       369: ldc           #118                // String ,\n+       371: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        374: pop\n        375: iinc          2, 1\n        378: goto          337\n        381: aload_1\n-       382: ldc           #41                 // String }\n-       384: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       382: ldc           #120                // String }\n+       384: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        387: pop\n        388: aload_1\n-       389: ldc           #36                 // String )\n-       391: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       389: ldc           #109                // String )\n+       391: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        394: pop\n        395: aload_1\n-       396: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       396: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        399: areturn\n       LineNumberTable:\n         line 181: 0\n         line 182: 10\n         line 183: 17\n         line 184: 33\n         line 185: 43\n@@ -1196,86 +1196,86 @@\n \n   int getMapEntrySize();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field frameType:I\n+         1: getfield      #13                 // Field frameType:I\n          4: iflt          18\n          7: aload_0\n-         8: getfield      #3                  // Field frameType:I\n+         8: getfield      #13                 // Field frameType:I\n         11: bipush        63\n         13: if_icmpgt     18\n         16: iconst_1\n         17: ireturn\n         18: aload_0\n-        19: getfield      #3                  // Field frameType:I\n+        19: getfield      #13                 // Field frameType:I\n         22: bipush        64\n         24: if_icmplt     56\n         27: aload_0\n-        28: getfield      #3                  // Field frameType:I\n+        28: getfield      #13                 // Field frameType:I\n         31: bipush        127\n         33: if_icmpgt     56\n         36: iconst_1\n         37: aload_0\n-        38: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        38: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         41: iconst_0\n         42: aaload\n-        43: invokevirtual #43                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+        43: invokevirtual #124                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n         46: ifeq          53\n         49: iconst_3\n         50: goto          54\n         53: iconst_1\n         54: iadd\n         55: ireturn\n         56: aload_0\n-        57: getfield      #3                  // Field frameType:I\n+        57: getfield      #13                 // Field frameType:I\n         60: sipush        247\n         63: if_icmpne     86\n         66: iconst_3\n         67: aload_0\n-        68: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        68: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         71: iconst_0\n         72: aaload\n-        73: invokevirtual #43                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+        73: invokevirtual #124                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n         76: ifeq          83\n         79: iconst_3\n         80: goto          84\n         83: iconst_1\n         84: iadd\n         85: ireturn\n         86: aload_0\n-        87: getfield      #3                  // Field frameType:I\n+        87: getfield      #13                 // Field frameType:I\n         90: sipush        248\n         93: if_icmplt     108\n         96: aload_0\n-        97: getfield      #3                  // Field frameType:I\n+        97: getfield      #13                 // Field frameType:I\n        100: sipush        250\n        103: if_icmpgt     108\n        106: iconst_3\n        107: ireturn\n        108: aload_0\n-       109: getfield      #3                  // Field frameType:I\n+       109: getfield      #13                 // Field frameType:I\n        112: sipush        251\n        115: if_icmpne     120\n        118: iconst_3\n        119: ireturn\n        120: aload_0\n-       121: getfield      #3                  // Field frameType:I\n+       121: getfield      #13                 // Field frameType:I\n        124: sipush        252\n        127: if_icmplt     189\n        130: aload_0\n-       131: getfield      #3                  // Field frameType:I\n+       131: getfield      #13                 // Field frameType:I\n        134: sipush        254\n        137: if_icmpgt     189\n        140: iconst_3\n        141: istore_1\n        142: aload_0\n-       143: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       143: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        146: astore_2\n        147: aload_2\n        148: arraylength\n        149: istore_3\n        150: iconst_0\n        151: istore        4\n        153: iload         4\n@@ -1283,33 +1283,33 @@\n        156: if_icmpge     187\n        159: aload_2\n        160: iload         4\n        162: aaload\n        163: astore        5\n        165: iload_1\n        166: aload         5\n-       168: invokevirtual #43                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+       168: invokevirtual #124                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n        171: ifeq          178\n        174: iconst_3\n        175: goto          179\n        178: iconst_1\n        179: iadd\n        180: istore_1\n        181: iinc          4, 1\n        184: goto          153\n        187: iload_1\n        188: ireturn\n        189: aload_0\n-       190: getfield      #3                  // Field frameType:I\n+       190: getfield      #13                 // Field frameType:I\n        193: sipush        255\n        196: if_icmpne     294\n        199: bipush        7\n        201: istore_1\n        202: aload_0\n-       203: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+       203: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n        206: astore_2\n        207: aload_2\n        208: arraylength\n        209: istore_3\n        210: iconst_0\n        211: istore        4\n        213: iload         4\n@@ -1317,25 +1317,25 @@\n        216: if_icmpge     247\n        219: aload_2\n        220: iload         4\n        222: aaload\n        223: astore        5\n        225: iload_1\n        226: aload         5\n-       228: invokevirtual #43                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+       228: invokevirtual #124                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n        231: ifeq          238\n        234: iconst_3\n        235: goto          239\n        238: iconst_1\n        239: iadd\n        240: istore_1\n        241: iinc          4, 1\n        244: goto          213\n        247: aload_0\n-       248: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+       248: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n        251: astore_2\n        252: aload_2\n        253: arraylength\n        254: istore_3\n        255: iconst_0\n        256: istore        4\n        258: iload         4\n@@ -1343,37 +1343,37 @@\n        261: if_icmpge     292\n        264: aload_2\n        265: iload         4\n        267: aaload\n        268: astore        5\n        270: iload_1\n        271: aload         5\n-       273: invokevirtual #43                 // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n+       273: invokevirtual #124                // Method org/apache/bcel/classfile/StackMapType.hasIndex:()Z\n        276: ifeq          283\n        279: iconst_3\n        280: goto          284\n        283: iconst_1\n        284: iadd\n        285: istore_1\n        286: iinc          4, 1\n        289: goto          258\n        292: iload_1\n        293: ireturn\n-       294: new           #44                 // class java/lang/IllegalStateException\n+       294: new           #128                // class java/lang/IllegalStateException\n        297: dup\n-       298: new           #12                 // class java/lang/StringBuilder\n+       298: new           #40                 // class java/lang/StringBuilder\n        301: dup\n-       302: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       305: ldc           #45                 // String Invalid StackMap frameType:\n-       307: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       302: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       305: ldc           #130                // String Invalid StackMap frameType:\n+       307: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        310: aload_0\n-       311: getfield      #3                  // Field frameType:I\n-       314: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       317: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       320: invokespecial #46                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       311: getfield      #13                 // Field frameType:I\n+       314: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       317: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       320: invokespecial #132                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        323: athrow\n       LineNumberTable:\n         line 232: 0\n         line 233: 16\n         line 234: 18\n         line 236: 36\n         line 237: 56\n@@ -1486,27 +1486,27 @@\n          4: iload_1\n          5: bipush        63\n          7: if_icmpgt     20\n         10: aload_0\n         11: iload_1\n         12: iconst_0\n         13: isub\n-        14: putfield      #5                  // Field byteCodeOffset:I\n+        14: putfield      #19                 // Field byteCodeOffset:I\n         17: goto          117\n         20: iload_1\n         21: bipush        64\n         23: if_icmplt     43\n         26: iload_1\n         27: bipush        127\n         29: if_icmpgt     43\n         32: aload_0\n         33: iload_1\n         34: bipush        64\n         36: isub\n-        37: putfield      #5                  // Field byteCodeOffset:I\n+        37: putfield      #19                 // Field byteCodeOffset:I\n         40: goto          117\n         43: iload_1\n         44: sipush        247\n         47: if_icmpne     53\n         50: goto          117\n         53: iload_1\n         54: sipush        248\n@@ -1526,22 +1526,22 @@\n         88: sipush        254\n         91: if_icmpgt     97\n         94: goto          117\n         97: iload_1\n         98: sipush        255\n        101: if_icmpne     107\n        104: goto          117\n-       107: new           #47                 // class java/lang/IllegalArgumentException\n+       107: new           #133                // class java/lang/IllegalArgumentException\n        110: dup\n-       111: ldc           #48                 // String Invalid StackMap frameType\n-       113: invokespecial #49                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       111: ldc           #135                // String Invalid StackMap frameType\n+       113: invokespecial #137                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        116: athrow\n        117: aload_0\n        118: iload_1\n-       119: putfield      #3                  // Field frameType:I\n+       119: putfield      #13                 // Field frameType:I\n        122: return\n       LineNumberTable:\n         line 265: 0\n         line 266: 10\n         line 267: 20\n         line 269: 32\n         line 270: 43\n@@ -1568,15 +1568,15 @@\n \n   public int getFrameType();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field frameType:I\n+         1: getfield      #13                 // Field frameType:I\n          4: ireturn\n       LineNumberTable:\n         line 283: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n \n@@ -1586,114 +1586,114 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iflt          11\n          4: iload_1\n          5: sipush        32767\n          8: if_icmple     38\n-        11: new           #47                 // class java/lang/IllegalArgumentException\n+        11: new           #133                // class java/lang/IllegalArgumentException\n         14: dup\n-        15: new           #12                 // class java/lang/StringBuilder\n+        15: new           #40                 // class java/lang/StringBuilder\n         18: dup\n-        19: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        22: ldc           #50                 // String Invalid StackMap offset:\n-        24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        19: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        22: ldc           #138                // String Invalid StackMap offset:\n+        24: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         27: iload_1\n-        28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        31: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        34: invokespecial #49                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        28: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        31: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: invokespecial #137                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n-        39: getfield      #3                  // Field frameType:I\n+        39: getfield      #13                 // Field frameType:I\n         42: iflt          78\n         45: aload_0\n-        46: getfield      #3                  // Field frameType:I\n+        46: getfield      #13                 // Field frameType:I\n         49: bipush        63\n         51: if_icmpgt     78\n         54: iload_1\n         55: bipush        63\n         57: if_icmple     70\n         60: aload_0\n         61: sipush        251\n-        64: putfield      #3                  // Field frameType:I\n+        64: putfield      #13                 // Field frameType:I\n         67: goto          238\n         70: aload_0\n         71: iload_1\n-        72: putfield      #3                  // Field frameType:I\n+        72: putfield      #13                 // Field frameType:I\n         75: goto          238\n         78: aload_0\n-        79: getfield      #3                  // Field frameType:I\n+        79: getfield      #13                 // Field frameType:I\n         82: bipush        64\n         84: if_icmplt     123\n         87: aload_0\n-        88: getfield      #3                  // Field frameType:I\n+        88: getfield      #13                 // Field frameType:I\n         91: bipush        127\n         93: if_icmpgt     123\n         96: iload_1\n         97: bipush        63\n         99: if_icmple     112\n        102: aload_0\n        103: sipush        247\n-       106: putfield      #3                  // Field frameType:I\n+       106: putfield      #13                 // Field frameType:I\n        109: goto          238\n        112: aload_0\n        113: bipush        64\n        115: iload_1\n        116: iadd\n-       117: putfield      #3                  // Field frameType:I\n+       117: putfield      #13                 // Field frameType:I\n        120: goto          238\n        123: aload_0\n-       124: getfield      #3                  // Field frameType:I\n+       124: getfield      #13                 // Field frameType:I\n        127: sipush        247\n        130: if_icmpne     136\n        133: goto          238\n        136: aload_0\n-       137: getfield      #3                  // Field frameType:I\n+       137: getfield      #13                 // Field frameType:I\n        140: sipush        248\n        143: if_icmplt     159\n        146: aload_0\n-       147: getfield      #3                  // Field frameType:I\n+       147: getfield      #13                 // Field frameType:I\n        150: sipush        250\n        153: if_icmpgt     159\n        156: goto          238\n        159: aload_0\n-       160: getfield      #3                  // Field frameType:I\n+       160: getfield      #13                 // Field frameType:I\n        163: sipush        251\n        166: if_icmpne     172\n        169: goto          238\n        172: aload_0\n-       173: getfield      #3                  // Field frameType:I\n+       173: getfield      #13                 // Field frameType:I\n        176: sipush        252\n        179: if_icmplt     195\n        182: aload_0\n-       183: getfield      #3                  // Field frameType:I\n+       183: getfield      #13                 // Field frameType:I\n        186: sipush        254\n        189: if_icmpgt     195\n        192: goto          238\n        195: aload_0\n-       196: getfield      #3                  // Field frameType:I\n+       196: getfield      #13                 // Field frameType:I\n        199: sipush        255\n        202: if_icmpne     208\n        205: goto          238\n-       208: new           #44                 // class java/lang/IllegalStateException\n+       208: new           #128                // class java/lang/IllegalStateException\n        211: dup\n-       212: new           #12                 // class java/lang/StringBuilder\n+       212: new           #40                 // class java/lang/StringBuilder\n        215: dup\n-       216: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       219: ldc           #45                 // String Invalid StackMap frameType:\n-       221: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       216: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       219: ldc           #130                // String Invalid StackMap frameType:\n+       221: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        224: aload_0\n-       225: getfield      #3                  // Field frameType:I\n-       228: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       231: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       234: invokespecial #46                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       225: getfield      #13                 // Field frameType:I\n+       228: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       231: invokevirtual #54                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       234: invokespecial #132                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        237: athrow\n        238: aload_0\n        239: iload_1\n-       240: putfield      #5                  // Field byteCodeOffset:I\n+       240: putfield      #19                 // Field byteCodeOffset:I\n        243: return\n       LineNumberTable:\n         line 288: 0\n         line 289: 11\n         line 292: 38\n         line 294: 54\n         line 295: 60\n@@ -1731,18 +1731,18 @@\n   public void updateByteCodeOffset(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #5                  // Field byteCodeOffset:I\n+         2: getfield      #19                 // Field byteCodeOffset:I\n          5: iload_1\n          6: iadd\n-         7: invokevirtual #51                 // Method setByteCodeOffset:(I)V\n+         7: invokevirtual #140                // Method setByteCodeOffset:(I)V\n         10: return\n       LineNumberTable:\n         line 328: 0\n         line 329: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n@@ -1750,15 +1750,15 @@\n \n   public int getByteCodeOffset();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field byteCodeOffset:I\n+         1: getfield      #19                 // Field byteCodeOffset:I\n          4: ireturn\n       LineNumberTable:\n         line 333: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n \n@@ -1772,24 +1772,24 @@\n         line 343: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n             0       1     1     n   I\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #94()\n+      0: #190()\n         java.lang.Deprecated\n \n   public int getNumberOfLocals();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 347: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n@@ -1801,16 +1801,16 @@\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          13\n          9: iconst_0\n-        10: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        13: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        10: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        13: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         16: return\n       LineNumberTable:\n         line 352: 0\n         line 353: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n@@ -1825,15 +1825,15 @@\n \n   public org.apache.bcel.classfile.StackMapType[] getTypesOfLocals();\n     descriptor: ()[Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n          4: areturn\n       LineNumberTable:\n         line 357: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n \n@@ -1847,24 +1847,24 @@\n         line 367: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n             0       1     1     n   I\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #94()\n+      0: #190()\n         java.lang.Deprecated\n \n   public int getNumberOfStackItems();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 371: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n@@ -1876,16 +1876,16 @@\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        9\n          5: aload_1\n          6: goto          13\n          9: iconst_0\n-        10: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        13: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        10: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        13: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         16: return\n       LineNumberTable:\n         line 376: 0\n         line 377: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n@@ -1900,83 +1900,83 @@\n \n   public org.apache.bcel.classfile.StackMapType[] getTypesOfStackItems();\n     descriptor: ()[Lorg/apache/bcel/classfile/StackMapType;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+         1: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n          4: areturn\n       LineNumberTable:\n         line 381: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n \n   public org.apache.bcel.classfile.StackMapEntry copy();\n     descriptor: ()Lorg/apache/bcel/classfile/StackMapEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #52                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #53                 // class org/apache/bcel/classfile/StackMapEntry\n+         1: invokevirtual #143                // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #8                  // class org/apache/bcel/classfile/StackMapEntry\n          7: astore_1\n          8: goto          22\n         11: astore_2\n-        12: new           #55                 // class java/lang/Error\n+        12: new           #149                // class java/lang/Error\n         15: dup\n-        16: ldc           #56                 // String Clone Not Supported\n-        18: invokespecial #57                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #151                // String Clone Not Supported\n+        18: invokespecial #153                // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: aload_1\n         23: aload_0\n-        24: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        24: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         27: arraylength\n-        28: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        31: putfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        28: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        31: putfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         34: iconst_0\n         35: istore_2\n         36: iload_2\n         37: aload_0\n-        38: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        38: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         41: arraylength\n         42: if_icmpge     66\n         45: aload_1\n-        46: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        46: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         49: iload_2\n         50: aload_0\n-        51: getfield      #10                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n+        51: getfield      #35                 // Field typesOfLocals:[Lorg/apache/bcel/classfile/StackMapType;\n         54: iload_2\n         55: aaload\n-        56: invokevirtual #58                 // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+        56: invokevirtual #154                // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n         59: aastore\n         60: iinc          2, 1\n         63: goto          36\n         66: aload_1\n         67: aload_0\n-        68: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        68: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         71: arraylength\n-        72: anewarray     #6                  // class org/apache/bcel/classfile/StackMapType\n-        75: putfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        72: anewarray     #22                 // class org/apache/bcel/classfile/StackMapType\n+        75: putfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         78: iconst_0\n         79: istore_2\n         80: iload_2\n         81: aload_0\n-        82: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        82: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         85: arraylength\n         86: if_icmpge     110\n         89: aload_1\n-        90: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        90: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         93: iload_2\n         94: aload_0\n-        95: getfield      #7                  // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n+        95: getfield      #24                 // Field typesOfStackItems:[Lorg/apache/bcel/classfile/StackMapType;\n         98: iload_2\n         99: aaload\n-       100: invokevirtual #58                 // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n+       100: invokevirtual #154                // Method org/apache/bcel/classfile/StackMapType.copy:()Lorg/apache/bcel/classfile/StackMapType;\n        103: aastore\n        104: iinc          2, 1\n        107: goto          80\n        110: aload_1\n        111: areturn\n       Exception table:\n          from    to  target type\n@@ -2023,15 +2023,15 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #59,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n+         2: invokeinterface #158,  2          // InterfaceMethod org/apache/bcel/classfile/Visitor.visitStackMapEntry:(Lorg/apache/bcel/classfile/StackMapEntry;)V\n          7: return\n       LineNumberTable:\n         line 417: 0\n         line 418: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n@@ -2039,30 +2039,30 @@\n \n   public org.apache.bcel.classfile.ConstantPool getConstantPool();\n     descriptor: ()Lorg/apache/bcel/classfile/ConstantPool;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         1: getfield      #64                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          4: areturn\n       LineNumberTable:\n         line 425: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n \n   public void setConstantPool(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #20                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n+         2: putfield      #64                 // Field constantPool:Lorg/apache/bcel/classfile/ConstantPool;\n          5: return\n       LineNumberTable:\n         line 433: 0\n         line 434: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/StackMapEntry;\n"}]}
