{"diffoscope-json-version": 1, "source1": "first/ClassImportRule.class", "source2": "second/ClassImportRule.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,61 +1,61 @@\n-  SHA-256 checksum 43bae5d67b61ec97dea5500b995ef066470525fcdfa5640b669bf149dc246ddf\n+  SHA-256 checksum 4d2533705b67ac4e9ecdd0317709c3841e398649de346505d2c2d36eb0131a4d\n   Compiled from \"ClassImportRule.java\"\n class com.puppycrawl.tools.checkstyle.checks.imports.ClassImportRule extends com.puppycrawl.tools.checkstyle.checks.imports.AbstractImportRule\n   minor version: 0\n   major version: 55\n   flags: (0x0020) ACC_SUPER\n-  this_class: #8                          // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule\n-  super_class: #2                         // com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule\n+  this_class: #1                          // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule\n+  super_class: #3                         // com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule\n   interfaces: 0, fields: 1, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule.\"<init>\":(ZZZ)V\n-   #2 = Class              #4             // com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule\n-   #3 = NameAndType        #5:#6          // \"<init>\":(ZZZ)V\n+   #1 = Class              #2             // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule\n+   #2 = Utf8               com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule\n+   #3 = Class              #4             // com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule\n    #4 = Utf8               com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (ZZZ)V\n-   #7 = Fieldref           #8.#9          // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule.className:Ljava/lang/String;\n-   #8 = Class              #10            // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule\n-   #9 = NameAndType        #11:#12        // className:Ljava/lang/String;\n-  #10 = Utf8               com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule\n-  #11 = Utf8               className\n-  #12 = Utf8               Ljava/lang/String;\n-  #13 = Methodref          #8.#14         // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule.isRegExp:()Z\n-  #14 = NameAndType        #15:#16        // isRegExp:()Z\n-  #15 = Utf8               isRegExp\n-  #16 = Utf8               ()Z\n-  #17 = Methodref          #18.#19        // java/lang/String.matches:(Ljava/lang/String;)Z\n-  #18 = Class              #20            // java/lang/String\n-  #19 = NameAndType        #21:#22        // matches:(Ljava/lang/String;)Z\n-  #20 = Utf8               java/lang/String\n-  #21 = Utf8               matches\n-  #22 = Utf8               (Ljava/lang/String;)Z\n-  #23 = Methodref          #18.#24        // java/lang/String.equals:(Ljava/lang/Object;)Z\n-  #24 = NameAndType        #25:#26        // equals:(Ljava/lang/Object;)Z\n-  #25 = Utf8               equals\n-  #26 = Utf8               (Ljava/lang/Object;)Z\n-  #27 = Methodref          #8.#28         // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule.calculateResult:(Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n-  #28 = NameAndType        #29:#30        // calculateResult:(Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n-  #29 = Utf8               calculateResult\n-  #30 = Utf8               (Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n-  #31 = Utf8               (ZZLjava/lang/String;Z)V\n-  #32 = Utf8               Code\n-  #33 = Utf8               LineNumberTable\n-  #34 = Utf8               LocalVariableTable\n-  #35 = Utf8               this\n-  #36 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule;\n-  #37 = Utf8               allow\n-  #38 = Utf8               Z\n-  #39 = Utf8               localOnly\n-  #40 = Utf8               regExp\n-  #41 = Utf8               verifyImport\n-  #42 = Utf8               (Ljava/lang/String;)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n-  #43 = Utf8               classMatch\n-  #44 = Utf8               forImport\n+   #5 = Utf8               className\n+   #6 = Utf8               Ljava/lang/String;\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (ZZLjava/lang/String;Z)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule.\"<init>\":(ZZZ)V\n+  #11 = NameAndType        #7:#12         // \"<init>\":(ZZZ)V\n+  #12 = Utf8               (ZZZ)V\n+  #13 = Fieldref           #1.#14         // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule.className:Ljava/lang/String;\n+  #14 = NameAndType        #5:#6          // className:Ljava/lang/String;\n+  #15 = Utf8               LineNumberTable\n+  #16 = Utf8               LocalVariableTable\n+  #17 = Utf8               this\n+  #18 = Utf8               Lcom/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule;\n+  #19 = Utf8               allow\n+  #20 = Utf8               Z\n+  #21 = Utf8               localOnly\n+  #22 = Utf8               regExp\n+  #23 = Utf8               verifyImport\n+  #24 = Utf8               (Ljava/lang/String;)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n+  #25 = Methodref          #1.#26         // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule.isRegExp:()Z\n+  #26 = NameAndType        #27:#28        // isRegExp:()Z\n+  #27 = Utf8               isRegExp\n+  #28 = Utf8               ()Z\n+  #29 = Methodref          #30.#32        // java/lang/String.matches:(Ljava/lang/String;)Z\n+  #30 = Class              #31            // java/lang/String\n+  #31 = Utf8               java/lang/String\n+  #32 = NameAndType        #33:#34        // matches:(Ljava/lang/String;)Z\n+  #33 = Utf8               matches\n+  #34 = Utf8               (Ljava/lang/String;)Z\n+  #35 = Methodref          #30.#36        // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #36 = NameAndType        #37:#38        // equals:(Ljava/lang/Object;)Z\n+  #37 = Utf8               equals\n+  #38 = Utf8               (Ljava/lang/Object;)Z\n+  #39 = Methodref          #1.#40         // com/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule.calculateResult:(Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n+  #40 = NameAndType        #41:#42        // calculateResult:(Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n+  #41 = Utf8               calculateResult\n+  #42 = Utf8               (Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n+  #43 = Utf8               forImport\n+  #44 = Utf8               classMatch\n   #45 = Utf8               StackMapTable\n   #46 = Utf8               SourceFile\n   #47 = Utf8               ClassImportRule.java\n {\n   private final java.lang.String className;\n     descriptor: Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n@@ -65,18 +65,18 @@\n     flags: (0x0000)\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: iload         4\n-         5: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule.\"<init>\":(ZZZ)V\n+         5: invokespecial #10                 // Method com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportRule.\"<init>\":(ZZZ)V\n          8: aload_0\n          9: aload_3\n-        10: putfield      #7                  // Field className:Ljava/lang/String;\n+        10: putfield      #13                 // Field className:Ljava/lang/String;\n         13: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 8\n         line 43: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -88,41 +88,42 @@\n \n   public com.puppycrawl.tools.checkstyle.checks.imports.AccessResult verifyImport(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #13                 // Method isRegExp:()Z\n+         1: invokevirtual #25                 // Method isRegExp:()Z\n          4: ifeq          19\n          7: aload_1\n          8: aload_0\n-         9: getfield      #7                  // Field className:Ljava/lang/String;\n-        12: invokevirtual #17                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n+         9: getfield      #13                 // Field className:Ljava/lang/String;\n+        12: invokevirtual #29                 // Method java/lang/String.matches:(Ljava/lang/String;)Z\n         15: istore_2\n         16: goto          28\n         19: aload_1\n         20: aload_0\n-        21: getfield      #7                  // Field className:Ljava/lang/String;\n-        24: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        21: getfield      #13                 // Field className:Ljava/lang/String;\n+        24: invokevirtual #35                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         27: istore_2\n         28: aload_0\n         29: iload_2\n-        30: invokevirtual #27                 // Method calculateResult:(Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n+        30: invokevirtual #39                 // Method calculateResult:(Z)Lcom/puppycrawl/tools/checkstyle/checks/imports/AccessResult;\n         33: areturn\n       LineNumberTable:\n         line 55: 0\n         line 56: 7\n+        line 57: 16\n         line 59: 19\n         line 62: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           16       3     2 classMatch   Z\n             0      34     0  this   Lcom/puppycrawl/tools/checkstyle/checks/imports/ClassImportRule;\n             0      34     1 forImport   Ljava/lang/String;\n+           16       3     2 classMatch   Z\n            28       6     2 classMatch   Z\n       StackMapTable: number_of_entries = 2\n         frame_type = 19 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ int ]\n }\n"}]}
