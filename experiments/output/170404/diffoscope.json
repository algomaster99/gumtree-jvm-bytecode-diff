{"diffoscope-json-version": 1, "source1": "first/Base64Variant.class", "source2": "second/Base64Variant.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,100 +1,100 @@\n-  SHA-256 checksum 070b4b64b927bff9455bb14664f9efdd65aecef75edd92dd9fa572cef6d5aa04\n+  SHA-256 checksum 220bf5b0830090bf36cfbe5c3f3cae31caf38fa5576fd475ce7835a7c2f49dea\n   Compiled from \"Base64Variant.java\"\n public final class com.fasterxml.jackson.core.Base64Variant implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #20                         // com/fasterxml/jackson/core/Base64Variant\n   super_class: #77                        // java/lang/Object\n   interfaces: 1, fields: 13, methods: 45, attributes: 2\n Constant pool:\n-    #1 = Methodref          #77.#243      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #20.#244      // com/fasterxml/jackson/core/Base64Variant._asciiToBase64:[I\n-    #3 = Fieldref           #20.#245      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiC:[C\n-    #4 = Fieldref           #20.#246      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiB:[B\n-    #5 = Fieldref           #20.#247      // com/fasterxml/jackson/core/Base64Variant._name:Ljava/lang/String;\n-    #6 = Fieldref           #20.#248      // com/fasterxml/jackson/core/Base64Variant._writePadding:Z\n-    #7 = Fieldref           #20.#249      // com/fasterxml/jackson/core/Base64Variant._paddingChar:C\n-    #8 = Fieldref           #20.#250      // com/fasterxml/jackson/core/Base64Variant._maxLineLength:I\n-    #9 = Methodref          #251.#252     // java/lang/String.length:()I\n-   #10 = Class              #253          // java/lang/IllegalArgumentException\n-   #11 = Class              #254          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#243      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #255          // Base64Alphabet length must be exactly 64 (was\n-   #14 = Methodref          #11.#256      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#257      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #16 = String             #258          // )\n-   #17 = Methodref          #11.#259      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #10.#260      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #251.#261     // java/lang/String.getChars:(II[CI)V\n-   #20 = Class              #262          // com/fasterxml/jackson/core/Base64Variant\n-   #21 = Methodref          #263.#264     // java/util/Arrays.fill:([II)V\n-   #22 = Fieldref           #83.#265      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #23 = Fieldref           #83.#266      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #24 = Fieldref           #20.#267      // com/fasterxml/jackson/core/Base64Variant._paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #25 = Methodref          #20.#268      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n-   #26 = Methodref          #20.#269      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n-   #27 = Methodref          #270.#271     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #28 = Fieldref           #83.#272      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-   #29 = Methodref          #20.#273      // com/fasterxml/jackson/core/Base64Variant.withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n-   #30 = Methodref          #20.#274      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n-   #31 = Methodref          #275.#276     // com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n-   #32 = Methodref          #11.#277      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #33 = Methodref          #20.#278      // com/fasterxml/jackson/core/Base64Variant.usesPadding:()Z\n-   #34 = Methodref          #20.#279      // com/fasterxml/jackson/core/Base64Variant.encode:([BZ)Ljava/lang/String;\n-   #35 = Methodref          #11.#280      // java/lang/StringBuilder.\"<init>\":(I)V\n-   #36 = Methodref          #20.#281      // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n-   #37 = Methodref          #20.#282      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n-   #38 = Methodref          #20.#283      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n-   #39 = Class              #284          // com/fasterxml/jackson/core/util/ByteArrayBuilder\n-   #40 = Methodref          #39.#243      // com/fasterxml/jackson/core/util/ByteArrayBuilder.\"<init>\":()V\n-   #41 = Methodref          #20.#285      // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-   #42 = Methodref          #39.#286      // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n-   #43 = Methodref          #251.#287     // java/lang/String.charAt:(I)C\n-   #44 = Methodref          #20.#288      // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(C)I\n-   #45 = Methodref          #20.#289      // com/fasterxml/jackson/core/Base64Variant._reportInvalidBase64:(CILjava/lang/String;)V\n-   #46 = Methodref          #20.#290      // com/fasterxml/jackson/core/Base64Variant._reportBase64EOF:()V\n-   #47 = Methodref          #20.#291      // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n-   #48 = Methodref          #39.#292      // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n-   #49 = Methodref          #20.#293      // com/fasterxml/jackson/core/Base64Variant.acceptsPaddingOnRead:()Z\n-   #50 = Methodref          #20.#294      // com/fasterxml/jackson/core/Base64Variant._reportBase64UnexpectedPadding:()V\n-   #51 = Methodref          #20.#295      // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(C)Z\n-   #52 = String             #296          // expected padding character \\'\n-   #53 = Methodref          #20.#297      // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n-   #54 = String             #298          // \\'\n-   #55 = Methodref          #39.#299      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n-   #56 = Methodref          #39.#300      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n-   #57 = Methodref          #77.#301      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #58 = Methodref          #251.#302     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = Methodref          #251.#303     // java/lang/String.hashCode:()I\n-   #60 = String             #304          // Illegal white space character (code 0x\n-   #61 = Methodref          #305.#306     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #62 = String             #307          // ) as character #\n-   #63 = String             #308          //  of 4-char base64 unit: can only used between units\n-   #64 = String             #309          // Unexpected padding character (\\'\n-   #65 = String             #310          // \\') as character #\n-   #66 = String             #311          //  of 4-char base64 unit: padding only legal as 3rd or 4th character\n-   #67 = Methodref          #312.#313     // java/lang/Character.isDefined:(C)Z\n-   #68 = Methodref          #312.#314     // java/lang/Character.isISOControl:(C)Z\n-   #69 = String             #315          // Illegal character (code 0x\n-   #70 = String             #316          // ) in base64 content\n-   #71 = String             #317          // Illegal character \\'\n-   #72 = String             #318          // \\' (code 0x\n-   #73 = String             #319          // :\n-   #74 = Methodref          #20.#320      // com/fasterxml/jackson/core/Base64Variant.missingPaddingMessage:()Ljava/lang/String;\n-   #75 = Methodref          #20.#321      // com/fasterxml/jackson/core/Base64Variant.unexpectedPaddingMessage:()Ljava/lang/String;\n-   #76 = String             #322          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n-   #77 = Class              #323          // java/lang/Object\n-   #78 = Methodref          #20.#324      // com/fasterxml/jackson/core/Base64Variant.getName:()Ljava/lang/String;\n-   #79 = Methodref          #251.#325     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #80 = String             #326          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n-   #81 = Methodref          #312.#327     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #82 = Class              #328          // java/io/Serializable\n-   #83 = Class              #329          // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n+    #1 = Methodref          #77.#240      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #20.#241      // com/fasterxml/jackson/core/Base64Variant._asciiToBase64:[I\n+    #3 = Fieldref           #20.#242      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiC:[C\n+    #4 = Fieldref           #20.#243      // com/fasterxml/jackson/core/Base64Variant._base64ToAsciiB:[B\n+    #5 = Fieldref           #20.#244      // com/fasterxml/jackson/core/Base64Variant._name:Ljava/lang/String;\n+    #6 = Fieldref           #20.#245      // com/fasterxml/jackson/core/Base64Variant._writePadding:Z\n+    #7 = Fieldref           #20.#246      // com/fasterxml/jackson/core/Base64Variant._paddingChar:C\n+    #8 = Fieldref           #20.#247      // com/fasterxml/jackson/core/Base64Variant._maxLineLength:I\n+    #9 = Methodref          #131.#248     // java/lang/String.length:()I\n+   #10 = Class              #249          // java/lang/IllegalArgumentException\n+   #11 = Class              #250          // java/lang/StringBuilder\n+   #12 = Methodref          #11.#240      // java/lang/StringBuilder.\"<init>\":()V\n+   #13 = String             #251          // Base64Alphabet length must be exactly 64 (was\n+   #14 = Methodref          #11.#252      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #11.#253      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #16 = String             #254          // )\n+   #17 = Methodref          #11.#255      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #18 = Methodref          #10.#256      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #19 = Methodref          #131.#257     // java/lang/String.getChars:(II[CI)V\n+   #20 = Class              #258          // com/fasterxml/jackson/core/Base64Variant\n+   #21 = Methodref          #259.#260     // java/util/Arrays.fill:([II)V\n+   #22 = Fieldref           #83.#261      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #23 = Fieldref           #83.#262      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #24 = Fieldref           #20.#263      // com/fasterxml/jackson/core/Base64Variant._paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #25 = Methodref          #20.#264      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+   #26 = Methodref          #20.#265      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+   #27 = Methodref          #266.#267     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #28 = Fieldref           #83.#268      // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour.PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+   #29 = Methodref          #20.#269      // com/fasterxml/jackson/core/Base64Variant.withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+   #30 = Methodref          #20.#270      // com/fasterxml/jackson/core/Base64Variant.\"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+   #31 = Methodref          #271.#272     // com/fasterxml/jackson/core/Base64Variants.valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+   #32 = Methodref          #11.#273      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #33 = Methodref          #20.#274      // com/fasterxml/jackson/core/Base64Variant.usesPadding:()Z\n+   #34 = Methodref          #20.#275      // com/fasterxml/jackson/core/Base64Variant.encode:([BZ)Ljava/lang/String;\n+   #35 = Methodref          #11.#276      // java/lang/StringBuilder.\"<init>\":(I)V\n+   #36 = Methodref          #20.#277      // com/fasterxml/jackson/core/Base64Variant.getMaxLineLength:()I\n+   #37 = Methodref          #20.#278      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n+   #38 = Methodref          #20.#279      // com/fasterxml/jackson/core/Base64Variant.encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n+   #39 = Class              #280          // com/fasterxml/jackson/core/util/ByteArrayBuilder\n+   #40 = Methodref          #39.#240      // com/fasterxml/jackson/core/util/ByteArrayBuilder.\"<init>\":()V\n+   #41 = Methodref          #20.#281      // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+   #42 = Methodref          #39.#282      // com/fasterxml/jackson/core/util/ByteArrayBuilder.toByteArray:()[B\n+   #43 = Methodref          #131.#283     // java/lang/String.charAt:(I)C\n+   #44 = Methodref          #20.#284      // com/fasterxml/jackson/core/Base64Variant.decodeBase64Char:(C)I\n+   #45 = Methodref          #20.#285      // com/fasterxml/jackson/core/Base64Variant._reportInvalidBase64:(CILjava/lang/String;)V\n+   #46 = Methodref          #20.#286      // com/fasterxml/jackson/core/Base64Variant._reportBase64EOF:()V\n+   #47 = Methodref          #20.#287      // com/fasterxml/jackson/core/Base64Variant.requiresPaddingOnRead:()Z\n+   #48 = Methodref          #39.#288      // com/fasterxml/jackson/core/util/ByteArrayBuilder.append:(I)V\n+   #49 = Methodref          #20.#289      // com/fasterxml/jackson/core/Base64Variant.acceptsPaddingOnRead:()Z\n+   #50 = Methodref          #20.#290      // com/fasterxml/jackson/core/Base64Variant._reportBase64UnexpectedPadding:()V\n+   #51 = Methodref          #20.#291      // com/fasterxml/jackson/core/Base64Variant.usesPaddingChar:(C)Z\n+   #52 = String             #292          // expected padding character \\'\n+   #53 = Methodref          #20.#293      // com/fasterxml/jackson/core/Base64Variant.getPaddingChar:()C\n+   #54 = String             #294          // \\'\n+   #55 = Methodref          #39.#295      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendTwoBytes:(I)V\n+   #56 = Methodref          #39.#296      // com/fasterxml/jackson/core/util/ByteArrayBuilder.appendThreeBytes:(I)V\n+   #57 = Methodref          #77.#297      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #58 = Methodref          #131.#298     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #59 = Methodref          #131.#299     // java/lang/String.hashCode:()I\n+   #60 = String             #300          // Illegal white space character (code 0x\n+   #61 = Methodref          #301.#302     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+   #62 = String             #303          // ) as character #\n+   #63 = String             #304          //  of 4-char base64 unit: can only used between units\n+   #64 = String             #305          // Unexpected padding character (\\'\n+   #65 = String             #306          // \\') as character #\n+   #66 = String             #307          //  of 4-char base64 unit: padding only legal as 3rd or 4th character\n+   #67 = Methodref          #308.#309     // java/lang/Character.isDefined:(C)Z\n+   #68 = Methodref          #308.#310     // java/lang/Character.isISOControl:(C)Z\n+   #69 = String             #311          // Illegal character (code 0x\n+   #70 = String             #312          // ) in base64 content\n+   #71 = String             #313          // Illegal character \\'\n+   #72 = String             #314          // \\' (code 0x\n+   #73 = String             #315          // :\n+   #74 = Methodref          #20.#316      // com/fasterxml/jackson/core/Base64Variant.missingPaddingMessage:()Ljava/lang/String;\n+   #75 = Methodref          #20.#317      // com/fasterxml/jackson/core/Base64Variant.unexpectedPaddingMessage:()Ljava/lang/String;\n+   #76 = String             #318          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n+   #77 = Class              #319          // java/lang/Object\n+   #78 = Methodref          #20.#320      // com/fasterxml/jackson/core/Base64Variant.getName:()Ljava/lang/String;\n+   #79 = Methodref          #131.#321     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #80 = String             #322          // Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n+   #81 = Methodref          #308.#323     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #82 = Class              #324          // java/io/Serializable\n+   #83 = Class              #325          // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n    #84 = Utf8               PaddingReadBehaviour\n    #85 = Utf8               InnerClasses\n    #86 = Utf8               INT_SPACE\n    #87 = Utf8               I\n    #88 = Utf8               ConstantValue\n    #89 = Integer            32\n    #90 = Utf8               serialVersionUID\n@@ -133,251 +133,247 @@\n   #124 = Utf8               name\n   #125 = Utf8               base64Alphabet\n   #126 = Utf8               writePadding\n   #127 = Utf8               paddingChar\n   #128 = Utf8               maxLineLength\n   #129 = Utf8               alphaLen\n   #130 = Utf8               StackMapTable\n-  #131 = Class              #262          // com/fasterxml/jackson/core/Base64Variant\n-  #132 = Class              #330          // java/lang/String\n-  #133 = Class              #329          // com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n-  #134 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V\n-  #135 = Utf8               base\n-  #136 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n-  #137 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n-  #138 = Utf8               paddingReadBehaviour\n-  #139 = Utf8               srcB\n-  #140 = Utf8               srcC\n-  #141 = Utf8               srcV\n-  #142 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n-  #143 = Utf8               withPaddingAllowed\n-  #144 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #145 = Utf8               withPaddingRequired\n-  #146 = Utf8               withPaddingForbidden\n-  #147 = Utf8               withReadPadding\n-  #148 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #149 = Utf8               readPadding\n-  #150 = Utf8               withWritePadding\n-  #151 = Utf8               (Z)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #152 = Utf8               readResolve\n-  #153 = Utf8               ()Ljava/lang/Object;\n-  #154 = Utf8               getName\n-  #155 = Utf8               ()Ljava/lang/String;\n-  #156 = Utf8               usesPadding\n-  #157 = Utf8               ()Z\n-  #158 = Utf8               requiresPaddingOnRead\n-  #159 = Utf8               acceptsPaddingOnRead\n-  #160 = Utf8               usesPaddingChar\n-  #161 = Utf8               (C)Z\n-  #162 = Utf8               c\n-  #163 = Utf8               (I)Z\n-  #164 = Utf8               ch\n-  #165 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #166 = Utf8               getPaddingChar\n-  #167 = Utf8               ()C\n-  #168 = Utf8               getPaddingByte\n-  #169 = Utf8               ()B\n-  #170 = Utf8               getMaxLineLength\n-  #171 = Utf8               ()I\n-  #172 = Utf8               decodeBase64Char\n-  #173 = Utf8               (C)I\n-  #174 = Utf8               (I)I\n-  #175 = Utf8               decodeBase64Byte\n-  #176 = Utf8               (B)I\n-  #177 = Utf8               b\n-  #178 = Utf8               B\n-  #179 = Utf8               encodeBase64BitsAsChar\n-  #180 = Utf8               (I)C\n-  #181 = Utf8               value\n-  #182 = Utf8               encodeBase64Chunk\n-  #183 = Utf8               (I[CI)I\n-  #184 = Utf8               b24\n-  #185 = Utf8               buffer\n-  #186 = Utf8               outPtr\n-  #187 = Utf8               (Ljava/lang/StringBuilder;I)V\n-  #188 = Utf8               sb\n-  #189 = Utf8               Ljava/lang/StringBuilder;\n-  #190 = Utf8               encodeBase64Partial\n-  #191 = Utf8               (II[CI)I\n-  #192 = Utf8               bits\n-  #193 = Utf8               outputBytes\n-  #194 = Class              #104          // \"[C\"\n-  #195 = Utf8               (Ljava/lang/StringBuilder;II)V\n-  #196 = Class              #254          // java/lang/StringBuilder\n-  #197 = Utf8               encodeBase64BitsAsByte\n-  #198 = Utf8               (I)B\n-  #199 = Utf8               (I[BI)I\n-  #200 = Utf8               (II[BI)I\n-  #201 = Utf8               pb\n-  #202 = Class              #106          // \"[B\"\n-  #203 = Utf8               encode\n-  #204 = Utf8               ([B)Ljava/lang/String;\n-  #205 = Utf8               input\n-  #206 = Utf8               ([BZ)Ljava/lang/String;\n-  #207 = Utf8               addQuotes\n-  #208 = Utf8               inputEnd\n-  #209 = Utf8               chunksBeforeLF\n-  #210 = Utf8               inputPtr\n-  #211 = Utf8               safeInputEnd\n-  #212 = Utf8               inputLeft\n-  #213 = Utf8               ([BZLjava/lang/String;)Ljava/lang/String;\n-  #214 = Utf8               linefeed\n-  #215 = Utf8               decode\n-  #216 = Utf8               (Ljava/lang/String;)[B\n-  #217 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #218 = Utf8               Exceptions\n-  #219 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #220 = Utf8               decodedData\n-  #221 = Utf8               str\n-  #222 = Utf8               builder\n-  #223 = Utf8               ptr\n-  #224 = Utf8               len\n-  #225 = Utf8               toString\n-  #226 = Utf8               equals\n-  #227 = Utf8               (Ljava/lang/Object;)Z\n-  #228 = Utf8               o\n-  #229 = Utf8               Ljava/lang/Object;\n-  #230 = Utf8               other\n-  #231 = Utf8               hashCode\n-  #232 = Utf8               _reportInvalidBase64\n-  #233 = Utf8               (CILjava/lang/String;)V\n-  #234 = Utf8               bindex\n-  #235 = Utf8               msg\n-  #236 = Utf8               _reportBase64EOF\n-  #237 = Utf8               ()V\n-  #238 = Utf8               _reportBase64UnexpectedPadding\n-  #239 = Utf8               unexpectedPaddingMessage\n-  #240 = Utf8               missingPaddingMessage\n-  #241 = Utf8               SourceFile\n-  #242 = Utf8               Base64Variant.java\n-  #243 = NameAndType        #115:#237     // \"<init>\":()V\n-  #244 = NameAndType        #101:#102     // _asciiToBase64:[I\n-  #245 = NameAndType        #103:#104     // _base64ToAsciiC:[C\n-  #246 = NameAndType        #105:#106     // _base64ToAsciiB:[B\n-  #247 = NameAndType        #107:#108     // _name:Ljava/lang/String;\n-  #248 = NameAndType        #111:#112     // _writePadding:Z\n-  #249 = NameAndType        #109:#95      // _paddingChar:C\n-  #250 = NameAndType        #110:#87      // _maxLineLength:I\n-  #251 = Class              #330          // java/lang/String\n-  #252 = NameAndType        #331:#171     // length:()I\n-  #253 = Utf8               java/lang/IllegalArgumentException\n-  #254 = Utf8               java/lang/StringBuilder\n-  #255 = Utf8               Base64Alphabet length must be exactly 64 (was\n-  #256 = NameAndType        #332:#333     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #257 = NameAndType        #332:#334     // append:(I)Ljava/lang/StringBuilder;\n-  #258 = Utf8               )\n-  #259 = NameAndType        #225:#155     // toString:()Ljava/lang/String;\n-  #260 = NameAndType        #115:#335     // \"<init>\":(Ljava/lang/String;)V\n-  #261 = NameAndType        #336:#337     // getChars:(II[CI)V\n-  #262 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-  #263 = Class              #338          // java/util/Arrays\n-  #264 = NameAndType        #339:#340     // fill:([II)V\n-  #265 = NameAndType        #341:#114     // PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #266 = NameAndType        #342:#114     // PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #267 = NameAndType        #113:#114     // _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #268 = NameAndType        #115:#136     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n-  #269 = NameAndType        #115:#137     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n-  #270 = Class              #343          // java/lang/System\n-  #271 = NameAndType        #344:#345     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #272 = NameAndType        #346:#114     // PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n-  #273 = NameAndType        #147:#148     // withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #274 = NameAndType        #115:#142     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n-  #275 = Class              #347          // com/fasterxml/jackson/core/Base64Variants\n-  #276 = NameAndType        #348:#349     // valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #277 = NameAndType        #332:#350     // append:(C)Ljava/lang/StringBuilder;\n-  #278 = NameAndType        #156:#157     // usesPadding:()Z\n-  #279 = NameAndType        #203:#206     // encode:([BZ)Ljava/lang/String;\n-  #280 = NameAndType        #115:#351     // \"<init>\":(I)V\n-  #281 = NameAndType        #170:#171     // getMaxLineLength:()I\n-  #282 = NameAndType        #182:#187     // encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n-  #283 = NameAndType        #190:#195     // encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n-  #284 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n-  #285 = NameAndType        #215:#219     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #286 = NameAndType        #352:#353     // toByteArray:()[B\n-  #287 = NameAndType        #354:#180     // charAt:(I)C\n-  #288 = NameAndType        #172:#173     // decodeBase64Char:(C)I\n-  #289 = NameAndType        #232:#233     // _reportInvalidBase64:(CILjava/lang/String;)V\n-  #290 = NameAndType        #236:#237     // _reportBase64EOF:()V\n-  #291 = NameAndType        #158:#157     // requiresPaddingOnRead:()Z\n-  #292 = NameAndType        #332:#351     // append:(I)V\n-  #293 = NameAndType        #159:#157     // acceptsPaddingOnRead:()Z\n-  #294 = NameAndType        #238:#237     // _reportBase64UnexpectedPadding:()V\n-  #295 = NameAndType        #160:#161     // usesPaddingChar:(C)Z\n-  #296 = Utf8               expected padding character \\'\n-  #297 = NameAndType        #166:#167     // getPaddingChar:()C\n-  #298 = Utf8               \\'\n-  #299 = NameAndType        #355:#351     // appendTwoBytes:(I)V\n-  #300 = NameAndType        #356:#351     // appendThreeBytes:(I)V\n-  #301 = NameAndType        #357:#358     // getClass:()Ljava/lang/Class;\n-  #302 = NameAndType        #226:#227     // equals:(Ljava/lang/Object;)Z\n-  #303 = NameAndType        #231:#171     // hashCode:()I\n-  #304 = Utf8               Illegal white space character (code 0x\n-  #305 = Class              #359          // java/lang/Integer\n-  #306 = NameAndType        #360:#361     // toHexString:(I)Ljava/lang/String;\n-  #307 = Utf8               ) as character #\n-  #308 = Utf8                of 4-char base64 unit: can only used between units\n-  #309 = Utf8               Unexpected padding character (\\'\n-  #310 = Utf8               \\') as character #\n-  #311 = Utf8                of 4-char base64 unit: padding only legal as 3rd or 4th character\n-  #312 = Class              #362          // java/lang/Character\n-  #313 = NameAndType        #363:#161     // isDefined:(C)Z\n-  #314 = NameAndType        #364:#161     // isISOControl:(C)Z\n-  #315 = Utf8               Illegal character (code 0x\n-  #316 = Utf8               ) in base64 content\n-  #317 = Utf8               Illegal character \\'\n-  #318 = Utf8               \\' (code 0x\n-  #319 = Utf8               :\n-  #320 = NameAndType        #240:#155     // missingPaddingMessage:()Ljava/lang/String;\n-  #321 = NameAndType        #239:#155     // unexpectedPaddingMessage:()Ljava/lang/String;\n-  #322 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n-  #323 = Utf8               java/lang/Object\n-  #324 = NameAndType        #154:#155     // getName:()Ljava/lang/String;\n-  #325 = NameAndType        #365:#366     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #326 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n-  #327 = NameAndType        #348:#367     // valueOf:(C)Ljava/lang/Character;\n-  #328 = Utf8               java/io/Serializable\n-  #329 = Utf8               com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n-  #330 = Utf8               java/lang/String\n-  #331 = Utf8               length\n-  #332 = Utf8               append\n-  #333 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #334 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #335 = Utf8               (Ljava/lang/String;)V\n-  #336 = Utf8               getChars\n-  #337 = Utf8               (II[CI)V\n-  #338 = Utf8               java/util/Arrays\n-  #339 = Utf8               fill\n-  #340 = Utf8               ([II)V\n-  #341 = Utf8               PADDING_REQUIRED\n-  #342 = Utf8               PADDING_FORBIDDEN\n-  #343 = Utf8               java/lang/System\n-  #344 = Utf8               arraycopy\n-  #345 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #346 = Utf8               PADDING_ALLOWED\n-  #347 = Utf8               com/fasterxml/jackson/core/Base64Variants\n-  #348 = Utf8               valueOf\n-  #349 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n-  #350 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #351 = Utf8               (I)V\n-  #352 = Utf8               toByteArray\n-  #353 = Utf8               ()[B\n-  #354 = Utf8               charAt\n-  #355 = Utf8               appendTwoBytes\n-  #356 = Utf8               appendThreeBytes\n-  #357 = Utf8               getClass\n-  #358 = Utf8               ()Ljava/lang/Class;\n-  #359 = Utf8               java/lang/Integer\n-  #360 = Utf8               toHexString\n-  #361 = Utf8               (I)Ljava/lang/String;\n-  #362 = Utf8               java/lang/Character\n-  #363 = Utf8               isDefined\n-  #364 = Utf8               isISOControl\n-  #365 = Utf8               format\n-  #366 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #367 = Utf8               (C)Ljava/lang/Character;\n+  #131 = Class              #326          // java/lang/String\n+  #132 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;I)V\n+  #133 = Utf8               base\n+  #134 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+  #135 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+  #136 = Utf8               paddingReadBehaviour\n+  #137 = Utf8               srcB\n+  #138 = Utf8               srcC\n+  #139 = Utf8               srcV\n+  #140 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+  #141 = Utf8               withPaddingAllowed\n+  #142 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #143 = Utf8               withPaddingRequired\n+  #144 = Utf8               withPaddingForbidden\n+  #145 = Utf8               withReadPadding\n+  #146 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #147 = Utf8               readPadding\n+  #148 = Utf8               withWritePadding\n+  #149 = Utf8               (Z)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #150 = Utf8               readResolve\n+  #151 = Utf8               ()Ljava/lang/Object;\n+  #152 = Utf8               getName\n+  #153 = Utf8               ()Ljava/lang/String;\n+  #154 = Utf8               usesPadding\n+  #155 = Utf8               ()Z\n+  #156 = Utf8               requiresPaddingOnRead\n+  #157 = Utf8               acceptsPaddingOnRead\n+  #158 = Utf8               usesPaddingChar\n+  #159 = Utf8               (C)Z\n+  #160 = Utf8               c\n+  #161 = Utf8               (I)Z\n+  #162 = Utf8               ch\n+  #163 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #164 = Utf8               getPaddingChar\n+  #165 = Utf8               ()C\n+  #166 = Utf8               getPaddingByte\n+  #167 = Utf8               ()B\n+  #168 = Utf8               getMaxLineLength\n+  #169 = Utf8               ()I\n+  #170 = Utf8               decodeBase64Char\n+  #171 = Utf8               (C)I\n+  #172 = Utf8               (I)I\n+  #173 = Utf8               decodeBase64Byte\n+  #174 = Utf8               (B)I\n+  #175 = Utf8               b\n+  #176 = Utf8               B\n+  #177 = Utf8               encodeBase64BitsAsChar\n+  #178 = Utf8               (I)C\n+  #179 = Utf8               value\n+  #180 = Utf8               encodeBase64Chunk\n+  #181 = Utf8               (I[CI)I\n+  #182 = Utf8               b24\n+  #183 = Utf8               buffer\n+  #184 = Utf8               outPtr\n+  #185 = Utf8               (Ljava/lang/StringBuilder;I)V\n+  #186 = Utf8               sb\n+  #187 = Utf8               Ljava/lang/StringBuilder;\n+  #188 = Utf8               encodeBase64Partial\n+  #189 = Utf8               (II[CI)I\n+  #190 = Utf8               bits\n+  #191 = Utf8               outputBytes\n+  #192 = Class              #104          // \"[C\"\n+  #193 = Utf8               (Ljava/lang/StringBuilder;II)V\n+  #194 = Utf8               encodeBase64BitsAsByte\n+  #195 = Utf8               (I)B\n+  #196 = Utf8               (I[BI)I\n+  #197 = Utf8               (II[BI)I\n+  #198 = Utf8               pb\n+  #199 = Class              #106          // \"[B\"\n+  #200 = Utf8               encode\n+  #201 = Utf8               ([B)Ljava/lang/String;\n+  #202 = Utf8               input\n+  #203 = Utf8               ([BZ)Ljava/lang/String;\n+  #204 = Utf8               addQuotes\n+  #205 = Utf8               inputEnd\n+  #206 = Utf8               chunksBeforeLF\n+  #207 = Utf8               inputPtr\n+  #208 = Utf8               safeInputEnd\n+  #209 = Utf8               inputLeft\n+  #210 = Utf8               ([BZLjava/lang/String;)Ljava/lang/String;\n+  #211 = Utf8               linefeed\n+  #212 = Utf8               decode\n+  #213 = Utf8               (Ljava/lang/String;)[B\n+  #214 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #215 = Utf8               Exceptions\n+  #216 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #217 = Utf8               decodedData\n+  #218 = Utf8               str\n+  #219 = Utf8               builder\n+  #220 = Utf8               ptr\n+  #221 = Utf8               len\n+  #222 = Utf8               toString\n+  #223 = Utf8               equals\n+  #224 = Utf8               (Ljava/lang/Object;)Z\n+  #225 = Utf8               o\n+  #226 = Utf8               Ljava/lang/Object;\n+  #227 = Utf8               other\n+  #228 = Utf8               hashCode\n+  #229 = Utf8               _reportInvalidBase64\n+  #230 = Utf8               (CILjava/lang/String;)V\n+  #231 = Utf8               bindex\n+  #232 = Utf8               msg\n+  #233 = Utf8               _reportBase64EOF\n+  #234 = Utf8               ()V\n+  #235 = Utf8               _reportBase64UnexpectedPadding\n+  #236 = Utf8               unexpectedPaddingMessage\n+  #237 = Utf8               missingPaddingMessage\n+  #238 = Utf8               SourceFile\n+  #239 = Utf8               Base64Variant.java\n+  #240 = NameAndType        #115:#234     // \"<init>\":()V\n+  #241 = NameAndType        #101:#102     // _asciiToBase64:[I\n+  #242 = NameAndType        #103:#104     // _base64ToAsciiC:[C\n+  #243 = NameAndType        #105:#106     // _base64ToAsciiB:[B\n+  #244 = NameAndType        #107:#108     // _name:Ljava/lang/String;\n+  #245 = NameAndType        #111:#112     // _writePadding:Z\n+  #246 = NameAndType        #109:#95      // _paddingChar:C\n+  #247 = NameAndType        #110:#87      // _maxLineLength:I\n+  #248 = NameAndType        #327:#169     // length:()I\n+  #249 = Utf8               java/lang/IllegalArgumentException\n+  #250 = Utf8               java/lang/StringBuilder\n+  #251 = Utf8               Base64Alphabet length must be exactly 64 (was\n+  #252 = NameAndType        #328:#329     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #253 = NameAndType        #328:#330     // append:(I)Ljava/lang/StringBuilder;\n+  #254 = Utf8               )\n+  #255 = NameAndType        #222:#153     // toString:()Ljava/lang/String;\n+  #256 = NameAndType        #115:#331     // \"<init>\":(Ljava/lang/String;)V\n+  #257 = NameAndType        #332:#333     // getChars:(II[CI)V\n+  #258 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+  #259 = Class              #334          // java/util/Arrays\n+  #260 = NameAndType        #335:#336     // fill:([II)V\n+  #261 = NameAndType        #337:#114     // PADDING_REQUIRED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #262 = NameAndType        #338:#114     // PADDING_FORBIDDEN:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #263 = NameAndType        #113:#114     // _paddingReadBehaviour:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #264 = NameAndType        #115:#134     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n+  #265 = NameAndType        #115:#135     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCLcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;I)V\n+  #266 = Class              #339          // java/lang/System\n+  #267 = NameAndType        #340:#341     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #268 = NameAndType        #342:#114     // PADDING_ALLOWED:Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n+  #269 = NameAndType        #145:#146     // withReadPadding:(Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #270 = NameAndType        #115:#140     // \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n+  #271 = Class              #343          // com/fasterxml/jackson/core/Base64Variants\n+  #272 = NameAndType        #344:#345     // valueOf:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #273 = NameAndType        #328:#346     // append:(C)Ljava/lang/StringBuilder;\n+  #274 = NameAndType        #154:#155     // usesPadding:()Z\n+  #275 = NameAndType        #200:#203     // encode:([BZ)Ljava/lang/String;\n+  #276 = NameAndType        #115:#347     // \"<init>\":(I)V\n+  #277 = NameAndType        #168:#169     // getMaxLineLength:()I\n+  #278 = NameAndType        #180:#185     // encodeBase64Chunk:(Ljava/lang/StringBuilder;I)V\n+  #279 = NameAndType        #188:#193     // encodeBase64Partial:(Ljava/lang/StringBuilder;II)V\n+  #280 = Utf8               com/fasterxml/jackson/core/util/ByteArrayBuilder\n+  #281 = NameAndType        #212:#216     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #282 = NameAndType        #348:#349     // toByteArray:()[B\n+  #283 = NameAndType        #350:#178     // charAt:(I)C\n+  #284 = NameAndType        #170:#171     // decodeBase64Char:(C)I\n+  #285 = NameAndType        #229:#230     // _reportInvalidBase64:(CILjava/lang/String;)V\n+  #286 = NameAndType        #233:#234     // _reportBase64EOF:()V\n+  #287 = NameAndType        #156:#155     // requiresPaddingOnRead:()Z\n+  #288 = NameAndType        #328:#347     // append:(I)V\n+  #289 = NameAndType        #157:#155     // acceptsPaddingOnRead:()Z\n+  #290 = NameAndType        #235:#234     // _reportBase64UnexpectedPadding:()V\n+  #291 = NameAndType        #158:#159     // usesPaddingChar:(C)Z\n+  #292 = Utf8               expected padding character \\'\n+  #293 = NameAndType        #164:#165     // getPaddingChar:()C\n+  #294 = Utf8               \\'\n+  #295 = NameAndType        #351:#347     // appendTwoBytes:(I)V\n+  #296 = NameAndType        #352:#347     // appendThreeBytes:(I)V\n+  #297 = NameAndType        #353:#354     // getClass:()Ljava/lang/Class;\n+  #298 = NameAndType        #223:#224     // equals:(Ljava/lang/Object;)Z\n+  #299 = NameAndType        #228:#169     // hashCode:()I\n+  #300 = Utf8               Illegal white space character (code 0x\n+  #301 = Class              #355          // java/lang/Integer\n+  #302 = NameAndType        #356:#357     // toHexString:(I)Ljava/lang/String;\n+  #303 = Utf8               ) as character #\n+  #304 = Utf8                of 4-char base64 unit: can only used between units\n+  #305 = Utf8               Unexpected padding character (\\'\n+  #306 = Utf8               \\') as character #\n+  #307 = Utf8                of 4-char base64 unit: padding only legal as 3rd or 4th character\n+  #308 = Class              #358          // java/lang/Character\n+  #309 = NameAndType        #359:#159     // isDefined:(C)Z\n+  #310 = NameAndType        #360:#159     // isISOControl:(C)Z\n+  #311 = Utf8               Illegal character (code 0x\n+  #312 = Utf8               ) in base64 content\n+  #313 = Utf8               Illegal character \\'\n+  #314 = Utf8               \\' (code 0x\n+  #315 = Utf8               :\n+  #316 = NameAndType        #237:#153     // missingPaddingMessage:()Ljava/lang/String;\n+  #317 = NameAndType        #236:#153     // unexpectedPaddingMessage:()Ljava/lang/String;\n+  #318 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects no padding at the end while decoding. This Base64Variant might have been incorrectly configured\n+  #319 = Utf8               java/lang/Object\n+  #320 = NameAndType        #152:#153     // getName:()Ljava/lang/String;\n+  #321 = NameAndType        #361:#362     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #322 = Utf8               Unexpected end of base64-encoded String: base64 variant \\'%s\\' expects padding (one or more \\'%c\\' characters) at the end. This Base64Variant might have been incorrectly configured\n+  #323 = NameAndType        #344:#363     // valueOf:(C)Ljava/lang/Character;\n+  #324 = Utf8               java/io/Serializable\n+  #325 = Utf8               com/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour\n+  #326 = Utf8               java/lang/String\n+  #327 = Utf8               length\n+  #328 = Utf8               append\n+  #329 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #330 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #331 = Utf8               (Ljava/lang/String;)V\n+  #332 = Utf8               getChars\n+  #333 = Utf8               (II[CI)V\n+  #334 = Utf8               java/util/Arrays\n+  #335 = Utf8               fill\n+  #336 = Utf8               ([II)V\n+  #337 = Utf8               PADDING_REQUIRED\n+  #338 = Utf8               PADDING_FORBIDDEN\n+  #339 = Utf8               java/lang/System\n+  #340 = Utf8               arraycopy\n+  #341 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #342 = Utf8               PADDING_ALLOWED\n+  #343 = Utf8               com/fasterxml/jackson/core/Base64Variants\n+  #344 = Utf8               valueOf\n+  #345 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/Base64Variant;\n+  #346 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #347 = Utf8               (I)V\n+  #348 = Utf8               toByteArray\n+  #349 = Utf8               ()[B\n+  #350 = Utf8               charAt\n+  #351 = Utf8               appendTwoBytes\n+  #352 = Utf8               appendThreeBytes\n+  #353 = Utf8               getClass\n+  #354 = Utf8               ()Ljava/lang/Class;\n+  #355 = Utf8               java/lang/Integer\n+  #356 = Utf8               toHexString\n+  #357 = Utf8               (I)Ljava/lang/String;\n+  #358 = Utf8               java/lang/Character\n+  #359 = Utf8               isDefined\n+  #360 = Utf8               isISOControl\n+  #361 = Utf8               format\n+  #362 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #363 = Utf8               (C)Ljava/lang/Character;\n {\n   private static final int INT_SPACE = 32;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 32\n \n   private static final long serialVersionUID = 1l;\n@@ -550,14 +546,16 @@\n         line 166: 127\n         line 167: 136\n         line 168: 146\n         line 165: 155\n         line 172: 161\n         line 173: 165\n         line 178: 174\n+        line 179: 179\n+        line 180: 185\n         line 181: 191\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           136      19     8 alpha   C\n           120      41     7     i   I\n             0     192     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n             0     192     1  name   Ljava/lang/String;\n@@ -821,14 +819,16 @@\n         15: dup\n         16: aload_0\n         17: aload_1\n         18: invokespecial #30                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;)V\n         21: areturn\n       LineNumberTable:\n         line 272: 0\n+        line 273: 12\n+        line 272: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n             0      22     1 readPadding   Lcom/fasterxml/jackson/core/Base64Variant$PaddingReadBehaviour;\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 72 /* same_locals_1_stack_item */\n@@ -855,14 +855,16 @@\n         23: getfield      #7                  // Field _paddingChar:C\n         26: aload_0\n         27: getfield      #8                  // Field _maxLineLength:I\n         30: invokespecial #25                 // Method \"<init>\":(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/lang/String;ZCI)V\n         33: areturn\n       LineNumberTable:\n         line 284: 0\n+        line 285: 12\n+        line 284: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      34     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n             0      34     1 writePadding   Z\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 84 /* same_locals_1_stack_item */\n@@ -1420,14 +1422,15 @@\n        114: iload         4\n        116: ireturn\n       LineNumberTable:\n         line 449: 0\n         line 450: 19\n         line 451: 38\n         line 452: 45\n+        line 453: 56\n         line 454: 76\n         line 456: 90\n         line 457: 95\n         line 460: 114\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     117     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n@@ -1516,14 +1519,16 @@\n        103: pop\n        104: return\n       LineNumberTable:\n         line 465: 0\n         line 466: 17\n         line 467: 34\n         line 468: 41\n+        line 469: 47\n+        line 468: 66\n         line 470: 70\n         line 472: 82\n         line 473: 87\n         line 476: 104\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     105     0  this   Lcom/fasterxml/jackson/core/Base64Variant;\n@@ -1701,14 +1706,15 @@\n        119: ireturn\n       LineNumberTable:\n         line 518: 0\n         line 519: 19\n         line 520: 38\n         line 521: 45\n         line 522: 52\n+        line 523: 63\n         line 524: 81\n         line 525: 90\n         line 526: 93\n         line 527: 98\n         line 530: 117\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
