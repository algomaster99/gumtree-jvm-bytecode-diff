{"diffoscope-json-version": 1, "source1": "first/PathUtils.class", "source2": "second/PathUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,1184 +1,1183 @@\n-  SHA-256 checksum 0b2e3a832f81788739dd4ccee3806c0a6ff60fc96fcb8ce3fbed22d3182f3985\n+  SHA-256 checksum 5e740a48ce412666923c4db869cda9807cde4876589004710afa99dfb301360a\n   Compiled from \"PathUtils.java\"\n public final class org.apache.commons.io.file.PathUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #275                        // org/apache/commons/io/file/PathUtils\n-  super_class: #217                       // java/lang/Object\n+  this_class: #2                          // org/apache/commons/io/file/PathUtils\n+  super_class: #697                       // java/lang/Object\n   interfaces: 0, fields: 10, methods: 104, attributes: 3\n Constant pool:\n-     #1 = Methodref          #275.#629    // org/apache/commons/io/file/PathUtils.accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-     #2 = Methodref          #5.#630      // org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-     #3 = Methodref          #275.#631    // org/apache/commons/io/file/PathUtils.toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n-     #4 = Methodref          #275.#632    // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-     #5 = Class              #633         // org/apache/commons/io/file/AccumulatorPathVisitor\n-     #6 = Fieldref           #275.#634    // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-     #7 = Methodref          #275.#635    // org/apache/commons/io/file/PathUtils.cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-     #8 = Class              #636         // org/apache/commons/io/file/CleaningPathVisitor\n-     #9 = Methodref          #637.#638    // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #10 = Class              #639         // java/lang/String\n-    #11 = Methodref          #8.#640      // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-    #12 = Methodref          #275.#641    // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-    #13 = Methodref          #8.#642      // org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #14 = Methodref          #275.#643    // org/apache/commons/io/file/PathUtils.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-    #15 = Methodref          #432.#644    // java/nio/file/attribute/FileTime.compareTo:(Ljava/nio/file/attribute/FileTime;)I\n-    #16 = InterfaceMethodref #332.#645    // org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n-    #17 = Class              #646         // java/io/InputStream\n-    #18 = Methodref          #647.#648    // java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-    #19 = Methodref          #17.#649     // java/io/InputStream.close:()V\n-    #20 = Class              #650         // java/lang/Throwable\n-    #21 = Methodref          #20.#651     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-    #22 = InterfaceMethodref #95.#652     // java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n-    #23 = Class              #653         // org/apache/commons/io/file/CopyDirectoryVisitor\n-    #24 = Methodref          #23.#654     // org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n-    #25 = Methodref          #23.#642     // org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #26 = Methodref          #655.#656    // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #27 = InvokeDynamic      #0:#662      // #0:get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n-    #28 = Methodref          #275.#663    // org/apache/commons/io/file/PathUtils.copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-    #29 = InterfaceMethodref #95.#664     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-    #30 = InterfaceMethodref #95.#665     // java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-    #31 = Methodref          #647.#666    // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-    #32 = Methodref          #667.#668    // java/net/URL.getFile:()Ljava/lang/String;\n-    #33 = Methodref          #669.#670    // org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n-    #34 = InterfaceMethodref #95.#671     // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-    #35 = Methodref          #36.#672     // org/apache/commons/io/file/CountingPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n-    #36 = Class              #673         // org/apache/commons/io/file/CountingPathVisitor\n-    #37 = Methodref          #36.#642     // org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #38 = Methodref          #36.#674     // org/apache/commons/io/file/CountingPathVisitor.withBigIntegerCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n-    #39 = Fieldref           #47.#675     // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-    #40 = Methodref          #275.#676    // org/apache/commons/io/file/PathUtils.createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-    #41 = Methodref          #275.#677    // org/apache/commons/io/file/PathUtils.getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-    #42 = Methodref          #275.#678    // org/apache/commons/io/file/PathUtils.readIfSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-    #43 = Methodref          #647.#679    // java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-    #44 = String             #680         // .\n-    #45 = Methodref          #681.#682    // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-    #46 = Methodref          #275.#683    // org/apache/commons/io/file/PathUtils.delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #47 = Class              #684         // java/nio/file/LinkOption\n-    #48 = Methodref          #647.#685    // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-    #49 = Methodref          #275.#686    // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #50 = Methodref          #275.#687    // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #51 = Methodref          #275.#688    // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #52 = Methodref          #275.#689    // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #53 = Methodref          #275.#690    // org/apache/commons/io/file/PathUtils.noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n-    #54 = Methodref          #275.#691    // org/apache/commons/io/file/PathUtils.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-    #55 = InvokeDynamic      #1:#695      // #1:apply:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n-    #56 = Methodref          #275.#696    // org/apache/commons/io/file/PathUtils.withPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n-    #57 = Class              #697         // org/apache/commons/io/file/Counters$PathCounters\n-    #58 = Class              #698         // org/apache/commons/io/file/DeletingPathVisitor\n-    #59 = Methodref          #58.#699     // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-    #60 = Methodref          #58.#642     // org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #61 = Class              #700         // java/nio/file/NoSuchFileException\n-    #62 = InterfaceMethodref #95.#701     // java/nio/file/Path.toString:()Ljava/lang/String;\n-    #63 = Methodref          #61.#702     // java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n-    #64 = Methodref          #275.#703    // org/apache/commons/io/file/PathUtils.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-    #65 = Methodref          #647.#704    // java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n-    #66 = Methodref          #647.#705    // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-    #67 = Methodref          #647.#706    // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-    #68 = InterfaceMethodref #57.#707     // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-    #69 = InterfaceMethodref #708.#709    // org/apache/commons/io/file/Counters$Counter.increment:()V\n-    #70 = InterfaceMethodref #57.#710     // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-    #71 = InterfaceMethodref #708.#711    // org/apache/commons/io/file/Counters$Counter.add:(J)V\n-    #72 = Class              #712         // java/nio/file/AccessDeniedException\n-    #73 = Methodref          #275.#713    // org/apache/commons/io/file/PathUtils.readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n-    #74 = Methodref          #275.#714    // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-    #75 = InterfaceMethodref #188.#715    // java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-    #76 = Methodref          #647.#716    // java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-    #77 = InterfaceMethodref #95.#717     // java/nio/file/Path.toFile:()Ljava/io/File;\n-    #78 = Class              #718         // java/io/File\n-    #79 = Methodref          #78.#719     // java/io/File.deleteOnExit:()V\n-    #80 = Fieldref           #275.#720    // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-    #81 = Fieldref           #275.#721    // org/apache/commons/io/file/PathUtils.EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-    #82 = Fieldref           #275.#722    // org/apache/commons/io/file/PathUtils.EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-    #83 = Methodref          #275.#723    // org/apache/commons/io/file/PathUtils.directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n-    #84 = Methodref          #275.#724    // org/apache/commons/io/file/PathUtils.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-    #85 = Class              #725         // org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n-    #86 = Class              #726         // java/lang/Integer\n-    #87 = Integer            2147483647\n-    #88 = Methodref          #85.#727     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-    #89 = Fieldref           #85.#728     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n-    #90 = Fieldref           #85.#729     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n-    #91 = Fieldref           #85.#730     // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n-    #92 = InterfaceMethodref #122.#731    // java/util/List.iterator:()Ljava/util/Iterator;\n-    #93 = InterfaceMethodref #393.#732    // java/util/Iterator.hasNext:()Z\n-    #94 = InterfaceMethodref #393.#733    // java/util/Iterator.next:()Ljava/lang/Object;\n-    #95 = Class              #734         // java/nio/file/Path\n-    #96 = Methodref          #735.#736    // java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n-    #97 = Class              #737         // java/lang/IllegalStateException\n-    #98 = String             #738         // Unexpected mismatch.\n-    #99 = Methodref          #97.#702     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #100 = Methodref          #275.#739    // org/apache/commons/io/file/PathUtils.fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-   #101 = Methodref          #275.#740    // org/apache/commons/io/file/PathUtils.directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #102 = String             #353         // path\n-   #103 = Methodref          #655.#741    // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #104 = Methodref          #647.#703    // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #105 = InterfaceMethodref #95.#742     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n-   #106 = Class              #743         // java/io/IOException\n-   #107 = Class              #744         // java/lang/StringBuilder\n-   #108 = Methodref          #107.#745    // java/lang/StringBuilder.\"<init>\":()V\n-   #109 = String             #746         // Can\\'t compare directories, only files:\n-   #110 = Methodref          #107.#747    // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #111 = Methodref          #107.#748    // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #112 = Methodref          #107.#701    // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #113 = Methodref          #106.#702    // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #114 = InterfaceMethodref #95.#749     // java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n-   #115 = Methodref          #647.#750    // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #116 = Methodref          #751.#752    // org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-   #117 = String             #404         // filter\n-   #118 = Fieldref           #275.#753    // org/apache/commons/io/file/PathUtils.EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-   #119 = InterfaceMethodref #520.#754    // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-   #120 = Methodref          #755.#756    // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-   #121 = Methodref          #275.#757    // org/apache/commons/io/file/PathUtils.filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #122 = Class              #758         // java/util/List\n-   #123 = InterfaceMethodref #122.#759    // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #124 = Class              #298         // \"[Ljava/nio/file/Path;\"\n-   #125 = String             #412         // collector\n-   #126 = InterfaceMethodref #520.#760    // java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n-   #127 = InterfaceMethodref #520.#761    // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #128 = InvokeDynamic      #2:#765      // #2:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-   #129 = InterfaceMethodref #520.#766    // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #130 = Methodref          #275.#767    // org/apache/commons/io/file/PathUtils.getAclFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n-   #131 = InterfaceMethodref #132.#768    // java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n-   #132 = Class              #769         // java/nio/file/attribute/AclFileAttributeView\n-   #133 = Methodref          #647.#770    // java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-   #134 = Class              #771         // java/nio/file/attribute/DosFileAttributeView\n-   #135 = Methodref          #78.#772     // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #136 = Methodref          #275.#773    // org/apache/commons/io/file/PathUtils.getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #137 = Methodref          #681.#774    // java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n-   #138 = Methodref          #667.#775    // java/net/URL.toURI:()Ljava/net/URI;\n-   #139 = Methodref          #275.#776    // org/apache/commons/io/file/PathUtils.getLastModifiedFileTime:(Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n-   #140 = Methodref          #647.#643    // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #141 = InterfaceMethodref #95.#777     // java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n-   #142 = Class              #778         // java/nio/file/attribute/PosixFileAttributeView\n-   #143 = Methodref          #779.#780    // org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n-   #144 = Methodref          #275.#781    // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-   #145 = Methodref          #275.#782    // org/apache/commons/io/file/PathUtils.isEmptyFile:(Ljava/nio/file/Path;)Z\n-   #146 = Methodref          #647.#783    // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-   #147 = InterfaceMethodref #453.#731    // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n-   #148 = InterfaceMethodref #453.#649    // java/nio/file/DirectoryStream.close:()V\n-   #149 = String             #457         // czdt\n-   #150 = InterfaceMethodref #784.#785    // java/time/chrono/ChronoZonedDateTime.toInstant:()Ljava/time/Instant;\n-   #151 = Methodref          #275.#786    // org/apache/commons/io/file/PathUtils.isNewer:(Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n-   #152 = Methodref          #275.#787    // org/apache/commons/io/file/PathUtils.compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n-   #153 = Methodref          #432.#788    // java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-   #154 = Methodref          #275.#789    // org/apache/commons/io/file/PathUtils.isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n-   #155 = Methodref          #432.#790    // java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n-   #156 = Methodref          #275.#791    // org/apache/commons/io/file/PathUtils.isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n-   #157 = Methodref          #647.#792    // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #158 = Class              #793         // org/apache/commons/io/file/DirectoryStreamFilter\n-   #159 = Methodref          #158.#794    // org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n-   #160 = Methodref          #647.#795    // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n-   #161 = Fieldref           #275.#796    // org/apache/commons/io/file/PathUtils.OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n-   #162 = Fieldref           #275.#797    // org/apache/commons/io/file/PathUtils.OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n-   #163 = Methodref          #275.#798    // org/apache/commons/io/file/PathUtils.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #164 = Fieldref           #275.#799    // org/apache/commons/io/file/PathUtils.NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n-   #165 = Class              #800         // java/nio/file/attribute/FileAttribute\n-   #166 = Class              #801         // java/util/ArrayList\n-   #167 = Methodref          #802.#803    // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #168 = Methodref          #166.#804    // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-   #169 = InterfaceMethodref #122.#805    // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #170 = Class              #280         // \"[Ljava/nio/file/OpenOption;\"\n-   #171 = Methodref          #647.#806    // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #172 = Fieldref           #275.#807    // org/apache/commons/io/file/PathUtils.NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-   #173 = Methodref          #808.#809    // \"[Ljava/nio/file/LinkOption;\".clone:()Ljava/lang/Object;\n-   #174 = Class              #289         // \"[Ljava/nio/file/LinkOption;\"\n-   #175 = Methodref          #647.#724    // java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #176 = InvokeDynamic      #3:#812      // #3:test:()Ljava/util/function/Predicate;\n-   #177 = InterfaceMethodref #520.#813    // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-   #178 = InvokeDynamic      #4:#817      // #4:apply:()Lorg/apache/commons/io/function/IOTriFunction;\n-   #179 = Methodref          #818.#819    // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #180 = Class              #820         // java/nio/file/attribute/BasicFileAttributes\n-   #181 = Class              #821         // java/lang/UnsupportedOperationException\n-   #182 = Methodref          #647.#822    // java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #183 = Methodref          #275.#822    // org/apache/commons/io/file/PathUtils.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #184 = Methodref          #275.#823    // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #185 = Class              #824         // java/nio/file/attribute/DosFileAttributes\n-   #186 = Methodref          #647.#825    // java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #187 = Methodref          #275.#826    // org/apache/commons/io/file/PathUtils.readDosFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n-   #188 = Class              #827         // java/nio/file/attribute/PosixFileAttributes\n-   #189 = Methodref          #647.#828    // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n-   #190 = Methodref          #829.#830    // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #191 = Methodref          #10.#831     // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n-   #192 = InterfaceMethodref #832.#833    // java/util/Collection.stream:()Ljava/util/stream/Stream;\n-   #193 = InvokeDynamic      #5:#836      // #5:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n-   #194 = InterfaceMethodref #520.#837    // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-   #195 = InterfaceMethodref #520.#838    // java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n-   #196 = InterfaceMethodref #520.#839    // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-   #197 = Class              #840         // java/lang/IllegalArgumentException\n-   #198 = String             #841         // File system element for parameter \\'\n-   #199 = String             #842         // \\' does not exist: \\'\n-   #200 = String             #843         // \\'\n-   #201 = Methodref          #197.#702    // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #202 = Methodref          #275.#844    // org/apache/commons/io/file/PathUtils.getDosFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n-   #203 = InterfaceMethodref #134.#845    // java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n-   #204 = String             #343         // sourceFile\n-   #205 = Methodref          #647.#846    // java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-   #206 = Class              #847         // java/nio/file/attribute/PosixFilePermission\n-   #207 = Fieldref           #206.#848    // java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-   #208 = Fieldref           #206.#849    // java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;\n-   #209 = Methodref          #275.#850    // org/apache/commons/io/file/PathUtils.setPosixPermissions:(Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n-   #210 = Methodref          #647.#851    // java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n-   #211 = InterfaceMethodref #234.#805    // java/util/Set.addAll:(Ljava/util/Collection;)Z\n-   #212 = InterfaceMethodref #234.#852    // java/util/Set.removeAll:(Ljava/util/Collection;)Z\n-   #213 = Fieldref           #206.#853    // java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;\n-   #214 = Methodref          #275.#854    // org/apache/commons/io/file/PathUtils.setDosReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-   #215 = Methodref          #275.#855    // org/apache/commons/io/file/PathUtils.isPosix:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #216 = String             #856         // DOS or POSIX file operations not available for \\'%s\\' %s\n-   #217 = Class              #857         // java/lang/Object\n-   #218 = Methodref          #802.#858    // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-   #219 = Methodref          #10.#859     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #220 = Methodref          #275.#860    // org/apache/commons/io/file/PathUtils.setPosixReadOnlyFile:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n-   #221 = Methodref          #275.#861    // org/apache/commons/io/file/PathUtils.setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-   #222 = Methodref          #275.#862    // org/apache/commons/io/file/PathUtils.requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #223 = Methodref          #275.#863    // org/apache/commons/io/file/PathUtils.sizeOfDirectory:(Ljava/nio/file/Path;)J\n-   #224 = Methodref          #275.#864    // org/apache/commons/io/file/PathUtils.sizeOfDirectoryAsBigInteger:(Ljava/nio/file/Path;)Ljava/math/BigInteger;\n-   #225 = Methodref          #554.#865    // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #226 = Methodref          #275.#866    // org/apache/commons/io/file/PathUtils.countDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #227 = InterfaceMethodref #708.#867    // org/apache/commons/io/file/Counters$Counter.getLong:()Ljava/lang/Long;\n-   #228 = Methodref          #868.#869    // java/lang/Long.longValue:()J\n-   #229 = Methodref          #275.#870    // org/apache/commons/io/file/PathUtils.countDirectoryAsBigInteger:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #230 = InterfaceMethodref #708.#871    // org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n-   #231 = Class              #872         // java/nio/file/FileVisitOption\n-   #232 = Methodref          #873.#874    // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-   #233 = Methodref          #755.#875    // java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n-   #234 = Class              #876         // java/util/Set\n-   #235 = String             #317         // file\n-   #236 = Methodref          #647.#877    // java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #237 = Methodref          #878.#879    // org/apache/commons/io/file/attribute/FileTimes.setLastModifiedTime:(Ljava/nio/file/Path;)V\n-   #238 = String             #304         // directory\n-   #239 = Methodref          #647.#880    // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-   #240 = Methodref          #647.#881    // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-   #241 = Methodref          #590.#882    // java/time/Instant.now:()Ljava/time/Instant;\n-   #242 = Methodref          #590.#883    // java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n-   #243 = Long               100l\n-   #245 = Methodref          #590.#884    // java/time/Instant.isAfter:(Ljava/time/Instant;)Z\n-   #246 = Methodref          #885.#886    // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #247 = Methodref          #885.#887    // java/lang/Thread.interrupt:()V\n-   #248 = Methodref          #590.#888    // java/time/Instant.toEpochMilli:()J\n-   #249 = Methodref          #590.#889    // java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n-   #250 = Methodref          #890.#891    // java/lang/Math.min:(JJ)J\n-   #251 = Methodref          #892.#893    // java/time/Duration.ofMillis:(J)Ljava/time/Duration;\n-   #252 = Methodref          #894.#895    // org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n-   #253 = Class              #896         // java/lang/InterruptedException\n-   #254 = Class              #897         // java/lang/Exception\n-   #255 = Methodref          #647.#898    // java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-   #256 = InvokeDynamic      #6:#900      // #6:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-   #257 = InterfaceMethodref #599.#901    // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #258 = String             #603         // charSequence\n-   #259 = Methodref          #10.#902     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-   #260 = Methodref          #10.#903     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #261 = Methodref          #647.#904    // java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n-   #262 = Methodref          #217.#745    // java/lang/Object.\"<init>\":()V\n-   #263 = Methodref          #275.#905    // org/apache/commons/io/file/PathUtils.readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #264 = InterfaceMethodref #611.#906    // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #265 = Fieldref           #907.#908    // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #266 = Fieldref           #909.#910    // org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n-   #267 = Methodref          #275.#911    // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #268 = Class              #912         // java/nio/file/OpenOption\n-   #269 = Fieldref           #913.#914    // java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;\n-   #270 = Fieldref           #913.#915    // java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;\n-   #271 = Fieldref           #913.#916    // java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;\n-   #272 = Class              #917         // java/nio/file/CopyOption\n-   #273 = Fieldref           #275.#918    // org/apache/commons/io/file/PathUtils.EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n-   #274 = Class              #919         // org/apache/commons/io/file/DeleteOption\n-   #275 = Class              #920         // org/apache/commons/io/file/PathUtils\n-   #276 = Class              #921         // org/apache/commons/io/file/PathUtils$1\n-   #277 = Utf8               InnerClasses\n-   #278 = Utf8               RelativeSortedPaths\n-   #279 = Utf8               OPEN_OPTIONS_TRUNCATE\n-   #280 = Utf8               [Ljava/nio/file/OpenOption;\n-   #281 = Utf8               OPEN_OPTIONS_APPEND\n-   #282 = Utf8               EMPTY_COPY_OPTIONS\n-   #283 = Utf8               [Ljava/nio/file/CopyOption;\n-   #284 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n-   #285 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n-   #286 = Utf8               EMPTY_FILE_VISIT_OPTION_ARRAY\n-   #287 = Utf8               [Ljava/nio/file/FileVisitOption;\n-   #288 = Utf8               EMPTY_LINK_OPTION_ARRAY\n-   #289 = Utf8               [Ljava/nio/file/LinkOption;\n-   #290 = Utf8               NOFOLLOW_LINK_OPTION_ARRAY\n-   #291 = Utf8               Deprecated\n-   #292 = Utf8               RuntimeVisibleAnnotations\n-   #293 = Utf8               Ljava/lang/Deprecated;\n-   #294 = Utf8               NULL_LINK_OPTION\n-   #295 = Utf8               Ljava/nio/file/LinkOption;\n-   #296 = Utf8               EMPTY_OPEN_OPTION_ARRAY\n-   #297 = Utf8               EMPTY_PATH_ARRAY\n-   #298 = Utf8               [Ljava/nio/file/Path;\n-   #299 = Utf8               accumulate\n-   #300 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #301 = Utf8               Code\n-   #302 = Utf8               LineNumberTable\n-   #303 = Utf8               LocalVariableTable\n-   #304 = Utf8               directory\n-   #305 = Utf8               Ljava/nio/file/Path;\n-   #306 = Utf8               maxDepth\n-   #307 = Utf8               I\n-   #308 = Utf8               fileVisitOptions\n-   #309 = Utf8               Exceptions\n-   #310 = Utf8               cleanDirectory\n-   #311 = Utf8               PathCounters\n-   #312 = Utf8               (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #313 = Utf8               (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #314 = Utf8               deleteOptions\n-   #315 = Utf8               compareLastModifiedTimeTo\n-   #316 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n-   #317 = Utf8               file\n-   #318 = Utf8               fileTime\n-   #319 = Utf8               Ljava/nio/file/attribute/FileTime;\n-   #320 = Utf8               options\n-   #321 = Utf8               copy\n-   #322 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-   #323 = Utf8               inputStream\n-   #324 = Utf8               Ljava/io/InputStream;\n-   #325 = Utf8               in\n-   #326 = Utf8               Lorg/apache/commons/io/function/IOSupplier;\n-   #327 = Utf8               target\n-   #328 = Utf8               copyOptions\n-   #329 = Utf8               LocalVariableTypeTable\n-   #330 = Utf8               Lorg/apache/commons/io/function/IOSupplier<Ljava/io/InputStream;>;\n-   #331 = Utf8               StackMapTable\n-   #332 = Class              #922         // org/apache/commons/io/function/IOSupplier\n-   #333 = Class              #283         // \"[Ljava/nio/file/CopyOption;\"\n-   #334 = Utf8               Signature\n-   #335 = Utf8               (Lorg/apache/commons/io/function/IOSupplier<Ljava/io/InputStream;>;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-   #336 = Utf8               copyDirectory\n-   #337 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #338 = Utf8               sourceDirectory\n-   #339 = Utf8               targetDirectory\n-   #340 = Utf8               absoluteSource\n-   #341 = Utf8               copyFile\n-   #342 = Utf8               (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-   #343 = Utf8               sourceFile\n-   #344 = Utf8               Ljava/net/URL;\n-   #345 = Utf8               targetFile\n-   #346 = Utf8               copyFileToDirectory\n-   #347 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-   #348 = Utf8               resolve\n-   #349 = Utf8               countDirectory\n-   #350 = Utf8               countDirectoryAsBigInteger\n-   #351 = Utf8               createParentDirectories\n-   #352 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #353 = Utf8               path\n-   #354 = Utf8               attrs\n-   #355 = Utf8               [Ljava/nio/file/attribute/FileAttribute;\n-   #356 = Utf8               [Ljava/nio/file/attribute/FileAttribute<*>;\n-   #357 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n-   #358 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #359 = Utf8               linkOption\n-   #360 = Utf8               parent\n-   #361 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n-   #362 = Utf8               current\n-   #363 = Utf8               ()Ljava/nio/file/Path;\n-   #364 = Utf8               delete\n-   #365 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #366 = Utf8               linkOptions\n-   #367 = Utf8               deleteDirectory\n-   #368 = Utf8               deleteFile\n-   #369 = Utf8               pathCounts\n-   #370 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #371 = Utf8               exists\n-   #372 = Utf8               Z\n-   #373 = Utf8               size\n-   #374 = Utf8               J\n-   #375 = Utf8               posixFileAttributes\n-   #376 = Utf8               Ljava/nio/file/attribute/PosixFileAttributes;\n-   #377 = Utf8               deleteOnExit\n-   #378 = Utf8               (Ljava/nio/file/Path;)V\n-   #379 = Utf8               directoryAndFileContentEquals\n-   #380 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n-   #381 = Utf8               path1\n-   #382 = Utf8               path2\n-   #383 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #384 = Utf8               binarySearch\n-   #385 = Utf8               openOptions\n-   #386 = Utf8               fileVisitOption\n-   #387 = Utf8               relativeSortedPaths\n-   #388 = Utf8               Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n-   #389 = Utf8               fileList1\n-   #390 = Utf8               Ljava/util/List;\n-   #391 = Utf8               fileList2\n-   #392 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n-   #393 = Class              #923         // java/util/Iterator\n-   #394 = Utf8               directoryContentEquals\n-   #395 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #396 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #397 = Utf8               fileContentEquals\n-   #398 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-   #399 = Utf8               inputStream2\n-   #400 = Utf8               inputStream1\n-   #401 = Utf8               nPath1\n-   #402 = Utf8               nPath2\n-   #403 = Utf8               path1Exists\n-   #404 = Utf8               filter\n-   #405 = Utf8               (Lorg/apache/commons/io/file/PathFilter;[Ljava/nio/file/Path;)[Ljava/nio/file/Path;\n-   #406 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n-   #407 = Utf8               paths\n+     #1 = Methodref          #2.#3        // org/apache/commons/io/file/PathUtils.accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+     #2 = Class              #4           // org/apache/commons/io/file/PathUtils\n+     #3 = NameAndType        #5:#6        // accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+     #4 = Utf8               org/apache/commons/io/file/PathUtils\n+     #5 = Utf8               accumulate\n+     #6 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+     #7 = Methodref          #8.#9        // org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+     #8 = Class              #10          // org/apache/commons/io/file/AccumulatorPathVisitor\n+     #9 = NameAndType        #11:#12      // withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+    #10 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n+    #11 = Utf8               withLongCounters\n+    #12 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+    #13 = Methodref          #2.#14       // org/apache/commons/io/file/PathUtils.toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+    #14 = NameAndType        #15:#16      // toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+    #15 = Utf8               toFileVisitOptionSet\n+    #16 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+    #17 = Methodref          #2.#18       // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+    #18 = NameAndType        #19:#20      // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+    #19 = Utf8               visitFileTree\n+    #20 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+    #21 = Fieldref           #2.#22       // org/apache/commons/io/file/PathUtils.EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+    #22 = NameAndType        #23:#24      // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+    #23 = Utf8               EMPTY_DELETE_OPTION_ARRAY\n+    #24 = Utf8               [Lorg/apache/commons/io/file/DeleteOption;\n+    #25 = Methodref          #2.#26       // org/apache/commons/io/file/PathUtils.cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #26 = NameAndType        #27:#28      // cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #27 = Utf8               cleanDirectory\n+    #28 = Utf8               (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #29 = Class              #30          // org/apache/commons/io/file/CleaningPathVisitor\n+    #30 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n+    #31 = Methodref          #32.#33      // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #32 = Class              #34          // org/apache/commons/io/file/Counters\n+    #33 = NameAndType        #35:#36      // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #34 = Utf8               org/apache/commons/io/file/Counters\n+    #35 = Utf8               longPathCounters\n+    #36 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #37 = Class              #38          // java/lang/String\n+    #38 = Utf8               java/lang/String\n+    #39 = Methodref          #29.#40      // org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+    #40 = NameAndType        #41:#42      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+    #41 = Utf8               <init>\n+    #42 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+    #43 = Methodref          #2.#44       // org/apache/commons/io/file/PathUtils.visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+    #44 = NameAndType        #19:#45      // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+    #45 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+    #46 = Methodref          #29.#47      // org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #47 = NameAndType        #48:#36      // getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #48 = Utf8               getPathCounters\n+    #49 = Methodref          #2.#50       // org/apache/commons/io/file/PathUtils.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+    #50 = NameAndType        #51:#52      // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+    #51 = Utf8               getLastModifiedTime\n+    #52 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+    #53 = Methodref          #54.#55      // java/nio/file/attribute/FileTime.compareTo:(Ljava/nio/file/attribute/FileTime;)I\n+    #54 = Class              #56          // java/nio/file/attribute/FileTime\n+    #55 = NameAndType        #57:#58      // compareTo:(Ljava/nio/file/attribute/FileTime;)I\n+    #56 = Utf8               java/nio/file/attribute/FileTime\n+    #57 = Utf8               compareTo\n+    #58 = Utf8               (Ljava/nio/file/attribute/FileTime;)I\n+    #59 = InterfaceMethodref #60.#61      // org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n+    #60 = Class              #62          // org/apache/commons/io/function/IOSupplier\n+    #61 = NameAndType        #63:#64      // get:()Ljava/lang/Object;\n+    #62 = Utf8               org/apache/commons/io/function/IOSupplier\n+    #63 = Utf8               get\n+    #64 = Utf8               ()Ljava/lang/Object;\n+    #65 = Class              #66          // java/io/InputStream\n+    #66 = Utf8               java/io/InputStream\n+    #67 = Methodref          #68.#69      // java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+    #68 = Class              #70          // java/nio/file/Files\n+    #69 = NameAndType        #71:#72      // copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+    #70 = Utf8               java/nio/file/Files\n+    #71 = Utf8               copy\n+    #72 = Utf8               (Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+    #73 = Methodref          #65.#74      // java/io/InputStream.close:()V\n+    #74 = NameAndType        #75:#76      // close:()V\n+    #75 = Utf8               close\n+    #76 = Utf8               ()V\n+    #77 = Class              #78          // java/lang/Throwable\n+    #78 = Utf8               java/lang/Throwable\n+    #79 = Methodref          #77.#80      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+    #80 = NameAndType        #81:#82      // addSuppressed:(Ljava/lang/Throwable;)V\n+    #81 = Utf8               addSuppressed\n+    #82 = Utf8               (Ljava/lang/Throwable;)V\n+    #83 = InterfaceMethodref #84.#85      // java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n+    #84 = Class              #86          // java/nio/file/Path\n+    #85 = NameAndType        #87:#88      // toAbsolutePath:()Ljava/nio/file/Path;\n+    #86 = Utf8               java/nio/file/Path\n+    #87 = Utf8               toAbsolutePath\n+    #88 = Utf8               ()Ljava/nio/file/Path;\n+    #89 = Class              #90          // org/apache/commons/io/file/CopyDirectoryVisitor\n+    #90 = Utf8               org/apache/commons/io/file/CopyDirectoryVisitor\n+    #91 = Methodref          #89.#92      // org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+    #92 = NameAndType        #41:#93      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+    #93 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+    #94 = Methodref          #89.#47      // org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #95 = Methodref          #96.#97      // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+    #96 = Class              #98          // java/util/Objects\n+    #97 = NameAndType        #99:#100     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+    #98 = Utf8               java/util/Objects\n+    #99 = Utf8               requireNonNull\n+   #100 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #101 = InvokeDynamic      #0:#102      // #0:get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n+   #102 = NameAndType        #63:#103     // get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n+   #103 = Utf8               (Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n+   #104 = Methodref          #2.#105      // org/apache/commons/io/file/PathUtils.copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #105 = NameAndType        #71:#106     // copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #106 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #107 = InterfaceMethodref #84.#108     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #108 = NameAndType        #109:#88     // getFileName:()Ljava/nio/file/Path;\n+   #109 = Utf8               getFileName\n+   #110 = InterfaceMethodref #84.#111     // java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #111 = NameAndType        #112:#113    // resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #112 = Utf8               resolve\n+   #113 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #114 = Methodref          #68.#115     // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #115 = NameAndType        #71:#116     // copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #116 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #117 = Methodref          #118.#119    // java/net/URL.getFile:()Ljava/lang/String;\n+   #118 = Class              #120         // java/net/URL\n+   #119 = NameAndType        #121:#122    // getFile:()Ljava/lang/String;\n+   #120 = Utf8               java/net/URL\n+   #121 = Utf8               getFile\n+   #122 = Utf8               ()Ljava/lang/String;\n+   #123 = Methodref          #124.#125    // org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n+   #124 = Class              #126         // org/apache/commons/io/FilenameUtils\n+   #125 = NameAndType        #127:#128    // getName:(Ljava/lang/String;)Ljava/lang/String;\n+   #126 = Utf8               org/apache/commons/io/FilenameUtils\n+   #127 = Utf8               getName\n+   #128 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #129 = InterfaceMethodref #84.#130     // java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #130 = NameAndType        #112:#131    // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+   #131 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n+   #132 = Methodref          #133.#134    // org/apache/commons/io/file/CountingPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n+   #133 = Class              #135         // org/apache/commons/io/file/CountingPathVisitor\n+   #134 = NameAndType        #11:#136     // withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n+   #135 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+   #136 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n+   #137 = Methodref          #133.#47     // org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #138 = Methodref          #133.#139    // org/apache/commons/io/file/CountingPathVisitor.withBigIntegerCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n+   #139 = NameAndType        #140:#136    // withBigIntegerCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n+   #140 = Utf8               withBigIntegerCounters\n+   #141 = Fieldref           #142.#143    // java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+   #142 = Class              #144         // java/nio/file/LinkOption\n+   #143 = NameAndType        #145:#146    // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+   #144 = Utf8               java/nio/file/LinkOption\n+   #145 = Utf8               NOFOLLOW_LINKS\n+   #146 = Utf8               Ljava/nio/file/LinkOption;\n+   #147 = Methodref          #2.#148      // org/apache/commons/io/file/PathUtils.createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #148 = NameAndType        #149:#150    // createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #149 = Utf8               createParentDirectories\n+   #150 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #151 = Methodref          #2.#152      // org/apache/commons/io/file/PathUtils.getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #152 = NameAndType        #153:#113    // getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #153 = Utf8               getParent\n+   #154 = Methodref          #2.#155      // org/apache/commons/io/file/PathUtils.readIfSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #155 = NameAndType        #156:#113    // readIfSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #156 = Utf8               readIfSymbolicLink\n+   #157 = Methodref          #68.#158     // java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #158 = NameAndType        #159:#160    // createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #159 = Utf8               createDirectories\n+   #160 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #161 = String             #162         // .\n+   #162 = Utf8               .\n+   #163 = Methodref          #164.#165    // java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+   #164 = Class              #166         // java/nio/file/Paths\n+   #165 = NameAndType        #63:#167     // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+   #166 = Utf8               java/nio/file/Paths\n+   #167 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+   #168 = Methodref          #2.#169      // org/apache/commons/io/file/PathUtils.delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #169 = NameAndType        #170:#28     // delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #170 = Utf8               delete\n+   #171 = Methodref          #68.#172     // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #172 = NameAndType        #173:#174    // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #173 = Utf8               isDirectory\n+   #174 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #175 = Methodref          #2.#176      // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #176 = NameAndType        #177:#28     // deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #177 = Utf8               deleteDirectory\n+   #178 = Methodref          #2.#179      // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #179 = NameAndType        #180:#28     // deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #180 = Utf8               deleteFile\n+   #181 = Methodref          #2.#182      // org/apache/commons/io/file/PathUtils.deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #182 = NameAndType        #177:#183    // deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #183 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #184 = Methodref          #2.#185      // org/apache/commons/io/file/PathUtils.deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #185 = NameAndType        #180:#183    // deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #186 = Methodref          #2.#187      // org/apache/commons/io/file/PathUtils.noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n+   #187 = NameAndType        #188:#189    // noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n+   #188 = Utf8               noFollowLinkOptionArray\n+   #189 = Utf8               ()[Ljava/nio/file/LinkOption;\n+   #190 = Methodref          #2.#191      // org/apache/commons/io/file/PathUtils.overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #191 = NameAndType        #192:#193    // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #192 = Utf8               overrideReadOnly\n+   #193 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n+   #194 = InvokeDynamic      #1:#195      // #1:apply:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n+   #195 = NameAndType        #196:#197    // apply:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n+   #196 = Utf8               apply\n+   #197 = Utf8               ([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n+   #198 = Methodref          #2.#199      // org/apache/commons/io/file/PathUtils.withPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n+   #199 = NameAndType        #200:#201    // withPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n+   #200 = Utf8               withPosixFileAttributes\n+   #201 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n+   #202 = Class              #203         // org/apache/commons/io/file/Counters$PathCounters\n+   #203 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+   #204 = Class              #205         // org/apache/commons/io/file/DeletingPathVisitor\n+   #205 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n+   #206 = Methodref          #204.#207    // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #207 = NameAndType        #41:#208     // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #208 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+   #209 = Methodref          #204.#47     // org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #210 = Class              #211         // java/nio/file/NoSuchFileException\n+   #211 = Utf8               java/nio/file/NoSuchFileException\n+   #212 = InterfaceMethodref #84.#213     // java/nio/file/Path.toString:()Ljava/lang/String;\n+   #213 = NameAndType        #214:#122    // toString:()Ljava/lang/String;\n+   #214 = Utf8               toString\n+   #215 = Methodref          #210.#216    // java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n+   #216 = NameAndType        #41:#217     // \"<init>\":(Ljava/lang/String;)V\n+   #217 = Utf8               (Ljava/lang/String;)V\n+   #218 = Methodref          #2.#219      // org/apache/commons/io/file/PathUtils.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #219 = NameAndType        #220:#174    // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #220 = Utf8               exists\n+   #221 = Methodref          #68.#222     // java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n+   #222 = NameAndType        #223:#224    // isSymbolicLink:(Ljava/nio/file/Path;)Z\n+   #223 = Utf8               isSymbolicLink\n+   #224 = Utf8               (Ljava/nio/file/Path;)Z\n+   #225 = Methodref          #68.#226     // java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+   #226 = NameAndType        #227:#228    // size:(Ljava/nio/file/Path;)J\n+   #227 = Utf8               size\n+   #228 = Utf8               (Ljava/nio/file/Path;)J\n+   #229 = Methodref          #68.#230     // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #230 = NameAndType        #231:#224    // deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #231 = Utf8               deleteIfExists\n+   #232 = InterfaceMethodref #202.#233    // org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #233 = NameAndType        #234:#235    // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #234 = Utf8               getFileCounter\n+   #235 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n+   #236 = InterfaceMethodref #237.#238    // org/apache/commons/io/file/Counters$Counter.increment:()V\n+   #237 = Class              #239         // org/apache/commons/io/file/Counters$Counter\n+   #238 = NameAndType        #240:#76     // increment:()V\n+   #239 = Utf8               org/apache/commons/io/file/Counters$Counter\n+   #240 = Utf8               increment\n+   #241 = InterfaceMethodref #202.#242    // org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #242 = NameAndType        #243:#235    // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+   #243 = Utf8               getByteCounter\n+   #244 = InterfaceMethodref #237.#245    // org/apache/commons/io/file/Counters$Counter.add:(J)V\n+   #245 = NameAndType        #246:#247    // add:(J)V\n+   #246 = Utf8               add\n+   #247 = Utf8               (J)V\n+   #248 = Class              #249         // java/nio/file/AccessDeniedException\n+   #249 = Utf8               java/nio/file/AccessDeniedException\n+   #250 = Methodref          #2.#251      // org/apache/commons/io/file/PathUtils.readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+   #251 = NameAndType        #252:#253    // readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+   #252 = Utf8               readPosixFileAttributes\n+   #253 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+   #254 = Methodref          #2.#255      // org/apache/commons/io/file/PathUtils.setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #255 = NameAndType        #256:#257    // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #256 = Utf8               setReadOnly\n+   #257 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #258 = InterfaceMethodref #259.#260    // java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+   #259 = Class              #261         // java/nio/file/attribute/PosixFileAttributes\n+   #260 = NameAndType        #262:#263    // permissions:()Ljava/util/Set;\n+   #261 = Utf8               java/nio/file/attribute/PosixFileAttributes\n+   #262 = Utf8               permissions\n+   #263 = Utf8               ()Ljava/util/Set;\n+   #264 = Methodref          #68.#265     // java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+   #265 = NameAndType        #266:#267    // setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+   #266 = Utf8               setPosixFilePermissions\n+   #267 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+   #268 = InterfaceMethodref #84.#269     // java/nio/file/Path.toFile:()Ljava/io/File;\n+   #269 = NameAndType        #270:#271    // toFile:()Ljava/io/File;\n+   #270 = Utf8               toFile\n+   #271 = Utf8               ()Ljava/io/File;\n+   #272 = Class              #273         // java/io/File\n+   #273 = Utf8               java/io/File\n+   #274 = Methodref          #272.#275    // java/io/File.deleteOnExit:()V\n+   #275 = NameAndType        #276:#76     // deleteOnExit:()V\n+   #276 = Utf8               deleteOnExit\n+   #277 = Fieldref           #2.#278      // org/apache/commons/io/file/PathUtils.EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+   #278 = NameAndType        #279:#280    // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+   #279 = Utf8               EMPTY_LINK_OPTION_ARRAY\n+   #280 = Utf8               [Ljava/nio/file/LinkOption;\n+   #281 = Fieldref           #2.#282      // org/apache/commons/io/file/PathUtils.EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+   #282 = NameAndType        #283:#284    // EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+   #283 = Utf8               EMPTY_OPEN_OPTION_ARRAY\n+   #284 = Utf8               [Ljava/nio/file/OpenOption;\n+   #285 = Fieldref           #2.#286      // org/apache/commons/io/file/PathUtils.EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+   #286 = NameAndType        #287:#288    // EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+   #287 = Utf8               EMPTY_FILE_VISIT_OPTION_ARRAY\n+   #288 = Utf8               [Ljava/nio/file/FileVisitOption;\n+   #289 = Methodref          #2.#290      // org/apache/commons/io/file/PathUtils.directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+   #290 = NameAndType        #291:#292    // directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+   #291 = Utf8               directoryAndFileContentEquals\n+   #292 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+   #293 = Methodref          #2.#294      // org/apache/commons/io/file/PathUtils.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #294 = NameAndType        #295:#174    // notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #295 = Utf8               notExists\n+   #296 = Class              #297         // org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+   #297 = Utf8               org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+   #298 = Class              #299         // java/lang/Integer\n+   #299 = Utf8               java/lang/Integer\n+   #300 = Integer            2147483647\n+   #301 = Methodref          #296.#302    // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+   #302 = NameAndType        #41:#303     // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+   #303 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+   #304 = Fieldref           #296.#305    // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n+   #305 = NameAndType        #306:#307    // equals:Z\n+   #306 = Utf8               equals\n+   #307 = Utf8               Z\n+   #308 = Fieldref           #296.#309    // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n+   #309 = NameAndType        #310:#311    // relativeFileList1:Ljava/util/List;\n+   #310 = Utf8               relativeFileList1\n+   #311 = Utf8               Ljava/util/List;\n+   #312 = Fieldref           #296.#313    // org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n+   #313 = NameAndType        #314:#311    // relativeFileList2:Ljava/util/List;\n+   #314 = Utf8               relativeFileList2\n+   #315 = InterfaceMethodref #316.#317    // java/util/List.iterator:()Ljava/util/Iterator;\n+   #316 = Class              #318         // java/util/List\n+   #317 = NameAndType        #319:#320    // iterator:()Ljava/util/Iterator;\n+   #318 = Utf8               java/util/List\n+   #319 = Utf8               iterator\n+   #320 = Utf8               ()Ljava/util/Iterator;\n+   #321 = InterfaceMethodref #322.#323    // java/util/Iterator.hasNext:()Z\n+   #322 = Class              #324         // java/util/Iterator\n+   #323 = NameAndType        #325:#326    // hasNext:()Z\n+   #324 = Utf8               java/util/Iterator\n+   #325 = Utf8               hasNext\n+   #326 = Utf8               ()Z\n+   #327 = InterfaceMethodref #322.#328    // java/util/Iterator.next:()Ljava/lang/Object;\n+   #328 = NameAndType        #329:#64     // next:()Ljava/lang/Object;\n+   #329 = Utf8               next\n+   #330 = Methodref          #331.#332    // java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n+   #331 = Class              #333         // java/util/Collections\n+   #332 = NameAndType        #334:#335    // binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n+   #333 = Utf8               java/util/Collections\n+   #334 = Utf8               binarySearch\n+   #335 = Utf8               (Ljava/util/List;Ljava/lang/Object;)I\n+   #336 = Class              #337         // java/lang/IllegalStateException\n+   #337 = Utf8               java/lang/IllegalStateException\n+   #338 = String             #339         // Unexpected mismatch.\n+   #339 = Utf8               Unexpected mismatch.\n+   #340 = Methodref          #336.#216    // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #341 = Methodref          #2.#342      // org/apache/commons/io/file/PathUtils.fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+   #342 = NameAndType        #343:#344    // fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+   #343 = Utf8               fileContentEquals\n+   #344 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+   #345 = Methodref          #2.#346      // org/apache/commons/io/file/PathUtils.directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+   #346 = NameAndType        #347:#348    // directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+   #347 = Utf8               directoryContentEquals\n+   #348 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+   #349 = String             #350         // path\n+   #350 = Utf8               path\n+   #351 = Methodref          #96.#352     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #352 = NameAndType        #99:#353     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #353 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #354 = Methodref          #68.#219     // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #355 = InterfaceMethodref #84.#356     // java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+   #356 = NameAndType        #357:#88     // normalize:()Ljava/nio/file/Path;\n+   #357 = Utf8               normalize\n+   #358 = Class              #359         // java/io/IOException\n+   #359 = Utf8               java/io/IOException\n+   #360 = Class              #361         // java/lang/StringBuilder\n+   #361 = Utf8               java/lang/StringBuilder\n+   #362 = Methodref          #360.#363    // java/lang/StringBuilder.\"<init>\":()V\n+   #363 = NameAndType        #41:#76      // \"<init>\":()V\n+   #364 = String             #365         // Can\\'t compare directories, only files:\n+   #365 = Utf8               Can\\'t compare directories, only files:\n+   #366 = Methodref          #360.#367    // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #367 = NameAndType        #368:#369    // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #368 = Utf8               append\n+   #369 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #370 = Methodref          #360.#371    // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #371 = NameAndType        #368:#372    // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #372 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #373 = Methodref          #360.#213    // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #374 = Methodref          #358.#216    // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #375 = InterfaceMethodref #84.#376     // java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n+   #376 = NameAndType        #306:#377    // equals:(Ljava/lang/Object;)Z\n+   #377 = Utf8               (Ljava/lang/Object;)Z\n+   #378 = Methodref          #68.#379     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #379 = NameAndType        #380:#381    // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #380 = Utf8               newInputStream\n+   #381 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+   #382 = Methodref          #383.#384    // org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+   #383 = Class              #385         // org/apache/commons/io/IOUtils\n+   #384 = NameAndType        #386:#387    // contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+   #385 = Utf8               org/apache/commons/io/IOUtils\n+   #386 = Utf8               contentEquals\n+   #387 = Utf8               (Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+   #388 = String             #389         // filter\n+   #389 = Utf8               filter\n+   #390 = Fieldref           #2.#391      // org/apache/commons/io/file/PathUtils.EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+   #391 = NameAndType        #392:#393    // EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+   #392 = Utf8               EMPTY_PATH_ARRAY\n+   #393 = Utf8               [Ljava/nio/file/Path;\n+   #394 = InterfaceMethodref #395.#396    // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #395 = Class              #397         // java/util/stream/Stream\n+   #396 = NameAndType        #398:#399    // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #397 = Utf8               java/util/stream/Stream\n+   #398 = Utf8               of\n+   #399 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #400 = Methodref          #401.#402    // java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+   #401 = Class              #403         // java/util/stream/Collectors\n+   #402 = NameAndType        #404:#405    // toList:()Ljava/util/stream/Collector;\n+   #403 = Utf8               java/util/stream/Collectors\n+   #404 = Utf8               toList\n+   #405 = Utf8               ()Ljava/util/stream/Collector;\n+   #406 = Methodref          #2.#407      // org/apache/commons/io/file/PathUtils.filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #407 = NameAndType        #408:#409    // filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n    #408 = Utf8               filterPaths\n    #409 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #410 = Utf8               stream\n-   #411 = Utf8               Ljava/util/stream/Stream;\n-   #412 = Utf8               collector\n-   #413 = Utf8               Ljava/util/stream/Collector;\n-   #414 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-   #415 = Utf8               Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n-   #416 = Utf8               <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n-   #417 = Utf8               getAclEntryList\n-   #418 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;\n-   #419 = Utf8               sourcePath\n-   #420 = Utf8               fileAttributeView\n-   #421 = Utf8               Ljava/nio/file/attribute/AclFileAttributeView;\n-   #422 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n-   #423 = Utf8               getAclFileAttributeView\n-   #424 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n-   #425 = Utf8               getDosFileAttributeView\n-   #426 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n-   #427 = Utf8               getLastModifiedFileTime\n-   #428 = Utf8               (Ljava/io/File;)Ljava/nio/file/attribute/FileTime;\n-   #429 = Utf8               Ljava/io/File;\n-   #430 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #431 = Utf8               defaultIfAbsent\n-   #432 = Class              #924         // java/nio/file/attribute/FileTime\n-   #433 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #434 = Utf8               (Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n-   #435 = Utf8               uri\n-   #436 = Utf8               Ljava/net/URI;\n-   #437 = Utf8               (Ljava/net/URL;)Ljava/nio/file/attribute/FileTime;\n-   #438 = Utf8               url\n-   #439 = Class              #925         // java/net/URISyntaxException\n-   #440 = Utf8               getLastModifiedTime\n-   #441 = Utf8               getParent\n-   #442 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #443 = Utf8               getPosixFileAttributeView\n-   #444 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributeView;\n-   #445 = Utf8               getTempDirectory\n-   #446 = Utf8               isDirectory\n-   #447 = Utf8               isEmpty\n-   #448 = Utf8               (Ljava/nio/file/Path;)Z\n-   #449 = Utf8               isEmptyDirectory\n-   #450 = Utf8               directoryStream\n-   #451 = Utf8               Ljava/nio/file/DirectoryStream;\n-   #452 = Utf8               Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n-   #453 = Class              #926         // java/nio/file/DirectoryStream\n-   #454 = Utf8               isEmptyFile\n-   #455 = Utf8               isNewer\n-   #456 = Utf8               (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime;[Ljava/nio/file/LinkOption;)Z\n-   #457 = Utf8               czdt\n-   #458 = Utf8               Ljava/time/chrono/ChronoZonedDateTime;\n-   #459 = Utf8               Ljava/time/chrono/ChronoZonedDateTime<*>;\n-   #460 = Utf8               (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime<*>;[Ljava/nio/file/LinkOption;)Z\n-   #461 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n-   #462 = Utf8               (Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n-   #463 = Utf8               instant\n-   #464 = Utf8               Ljava/time/Instant;\n-   #465 = Utf8               (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n-   #466 = Utf8               timeMillis\n-   #467 = Utf8               reference\n-   #468 = Utf8               isOlder\n-   #469 = Utf8               isPosix\n-   #470 = Utf8               test\n-   #471 = Utf8               isRegularFile\n-   #472 = Utf8               newDirectoryStream\n-   #473 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream;\n-   #474 = Utf8               dir\n-   #475 = Utf8               pathFilter\n-   #476 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n-   #477 = Utf8               newOutputStream\n-   #478 = Utf8               (Ljava/nio/file/Path;Z)Ljava/io/OutputStream;\n-   #479 = Utf8               append\n-   #480 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #481 = Utf8               list\n-   #482 = Utf8               Ljava/util/List<Ljava/nio/file/OpenOption;>;\n-   #483 = Utf8               noFollowLinkOptionArray\n-   #484 = Utf8               ()[Ljava/nio/file/LinkOption;\n-   #485 = Utf8               notExists\n-   #486 = Utf8               overrideReadOnly\n-   #487 = Utf8               ([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #488 = Utf8               readAttributes\n-   #489 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #490 = Utf8               e\n-   #491 = Utf8               Ljava/lang/UnsupportedOperationException;\n-   #492 = Utf8               type\n-   #493 = Utf8               Ljava/lang/Class;\n-   #494 = Utf8               Ljava/lang/Class<TA;>;\n-   #495 = Utf8               <A::Ljava/nio/file/attribute/BasicFileAttributes;>(Ljava/nio/file/Path;Ljava/lang/Class<TA;>;[Ljava/nio/file/LinkOption;)TA;\n-   #496 = Utf8               readBasicFileAttributes\n-   #497 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #498 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #499 = Utf8               readBasicFileAttributesUnchecked\n-   #500 = Utf8               readDosFileAttributes\n-   #501 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n-   #502 = Utf8               readIfSymbolicLink\n-   #503 = Utf8               readOsFileAttributes\n-   #504 = Utf8               fileAttributes\n-   #505 = Utf8               readPosixFileAttributes\n-   #506 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n-   #507 = Utf8               readString\n-   #508 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #509 = Utf8               charset\n-   #510 = Utf8               Ljava/nio/charset/Charset;\n-   #511 = Utf8               relativize\n-   #512 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n-   #513 = Utf8               collection\n-   #514 = Utf8               Ljava/util/Collection;\n-   #515 = Utf8               sort\n-   #516 = Utf8               comparator\n-   #517 = Utf8               Ljava/util/Comparator;\n-   #518 = Utf8               Ljava/util/Collection<Ljava/nio/file/Path;>;\n-   #519 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n-   #520 = Class              #927         // java/util/stream/Stream\n-   #521 = Utf8               (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n-   #522 = Utf8               requireExists\n-   #523 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #524 = Utf8               fileParamName\n-   #525 = Utf8               Ljava/lang/String;\n-   #526 = Utf8               setDosReadOnly\n-   #527 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-   #528 = Utf8               readOnly\n-   #529 = Utf8               dosFileAttributeView\n-   #530 = Utf8               Ljava/nio/file/attribute/DosFileAttributeView;\n-   #531 = Utf8               setLastModifiedTime\n-   #532 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)V\n-   #533 = Utf8               setPosixDeletePermissions\n-   #534 = Utf8               enableDeleteChildren\n-   #535 = Utf8               setPosixPermissions\n-   #536 = Utf8               (Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n-   #537 = Utf8               permissions\n-   #538 = Utf8               Ljava/util/Set;\n-   #539 = Utf8               addPermissions\n-   #540 = Utf8               updatePermissions\n-   #541 = Utf8               Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;\n-   #542 = Utf8               Ljava/util/List<Ljava/nio/file/attribute/PosixFilePermission;>;\n-   #543 = Utf8               (Ljava/nio/file/Path;ZLjava/util/List<Ljava/nio/file/attribute/PosixFilePermission;>;[Ljava/nio/file/LinkOption;)Z\n-   #544 = Utf8               setPosixReadOnlyFile\n-   #545 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n-   #546 = Utf8               readPermissions\n-   #547 = Utf8               writePermissions\n-   #548 = Utf8               setReadOnly\n-   #549 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #550 = Utf8               sizeOf\n-   #551 = Utf8               (Ljava/nio/file/Path;)J\n-   #552 = Utf8               sizeOfAsBigInteger\n-   #553 = Utf8               (Ljava/nio/file/Path;)Ljava/math/BigInteger;\n-   #554 = Class              #928         // java/math/BigInteger\n-   #555 = Utf8               sizeOfDirectory\n-   #556 = Utf8               sizeOfDirectoryAsBigInteger\n-   #557 = Utf8               toFileVisitOptionSet\n-   #558 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n-   #559 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n-   #560 = Utf8               touch\n-   #561 = Utf8               visitFileTree\n-   #562 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-   #563 = Utf8               visitor\n-   #564 = Utf8               Ljava/nio/file/FileVisitor;\n-   #565 = Utf8               TT;\n-   #566 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n-   #567 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-   #568 = Utf8               start\n-   #569 = Utf8               Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n-   #570 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n-   #571 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;\n-   #572 = Utf8               first\n-   #573 = Utf8               more\n-   #574 = Utf8               [Ljava/lang/String;\n-   #575 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n-   #576 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;\n-   #577 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n-   #578 = Utf8               waitFor\n-   #579 = Utf8               (Ljava/nio/file/Path;Ljava/time/Duration;[Ljava/nio/file/LinkOption;)Z\n-   #580 = Utf8               ignore\n-   #581 = Utf8               Ljava/lang/InterruptedException;\n-   #582 = Utf8               ex\n-   #583 = Utf8               Ljava/lang/Exception;\n-   #584 = Utf8               now\n-   #585 = Utf8               timeout\n-   #586 = Utf8               Ljava/time/Duration;\n-   #587 = Utf8               finishInstant\n-   #588 = Utf8               interrupted\n-   #589 = Utf8               minSleepMillis\n-   #590 = Class              #929         // java/time/Instant\n-   #591 = Utf8               walk\n-   #592 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-   #593 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-   #594 = Utf8               withPosixFileAttributes\n-   #595 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n-   #596 = Utf8               function\n-   #597 = Utf8               Lorg/apache/commons/io/function/IOFunction;\n-   #598 = Utf8               Lorg/apache/commons/io/function/IOFunction<Ljava/nio/file/attribute/PosixFileAttributes;TR;>;\n-   #599 = Class              #930         // org/apache/commons/io/function/IOFunction\n-   #600 = Utf8               <R:Ljava/lang/Object;>(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction<Ljava/nio/file/attribute/PosixFileAttributes;TR;>;)TR;\n-   #601 = Utf8               writeString\n-   #602 = Utf8               (Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n-   #603 = Utf8               charSequence\n-   #604 = Utf8               Ljava/lang/CharSequence;\n-   #605 = Utf8               <init>\n-   #606 = Utf8               ()V\n-   #607 = Utf8               this\n-   #608 = Utf8               Lorg/apache/commons/io/file/PathUtils;\n-   #609 = Utf8               lambda$walk$3\n-   #610 = Utf8               (Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-   #611 = Class              #931         // org/apache/commons/io/file/PathFilter\n-   #612 = Utf8               lambda$overrideReadOnly$2\n-   #613 = Utf8               (Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #614 = Utf8               Lorg/apache/commons/io/file/DeleteOption;\n-   #615 = Utf8               lambda$filterPaths$1\n-   #616 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-   #617 = Utf8               Ljava/io/IOException;\n-   #618 = Utf8               p\n-   #619 = Utf8               lambda$deleteDirectory$0\n-   #620 = Utf8               ([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #621 = Utf8               pfa\n-   #622 = Utf8               access$000\n-   #623 = Utf8               x0\n-   #624 = Utf8               x1\n-   #625 = Utf8               x2\n-   #626 = Utf8               <clinit>\n-   #627 = Utf8               SourceFile\n-   #628 = Utf8               PathUtils.java\n-   #629 = NameAndType        #299:#300    // accumulate:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #630 = NameAndType        #932:#933    // withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #631 = NameAndType        #557:#558    // toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n-   #632 = NameAndType        #561:#567    // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-   #633 = Utf8               org/apache/commons/io/file/AccumulatorPathVisitor\n-   #634 = NameAndType        #284:#285    // EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-   #635 = NameAndType        #310:#313    // cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #636 = Utf8               org/apache/commons/io/file/CleaningPathVisitor\n-   #637 = Class              #934         // org/apache/commons/io/file/Counters\n-   #638 = NameAndType        #935:#936    // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #639 = Utf8               java/lang/String\n-   #640 = NameAndType        #605:#937    // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #641 = NameAndType        #561:#562    // visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-   #642 = NameAndType        #938:#936    // getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #643 = NameAndType        #440:#433    // getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #644 = NameAndType        #939:#940    // compareTo:(Ljava/nio/file/attribute/FileTime;)I\n-   #645 = NameAndType        #941:#942    // get:()Ljava/lang/Object;\n-   #646 = Utf8               java/io/InputStream\n-   #647 = Class              #943         // java/nio/file/Files\n-   #648 = NameAndType        #321:#944    // copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-   #649 = NameAndType        #945:#606    // close:()V\n-   #650 = Utf8               java/lang/Throwable\n-   #651 = NameAndType        #946:#947    // addSuppressed:(Ljava/lang/Throwable;)V\n-   #652 = NameAndType        #948:#363    // toAbsolutePath:()Ljava/nio/file/Path;\n-   #653 = Utf8               org/apache/commons/io/file/CopyDirectoryVisitor\n-   #654 = NameAndType        #605:#949    // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n-   #655 = Class              #950         // java/util/Objects\n-   #656 = NameAndType        #951:#952    // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #657 = Utf8               BootstrapMethods\n-   #658 = MethodHandle       6:#953       // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #659 = MethodType         #942         //  ()Ljava/lang/Object;\n-   #660 = MethodHandle       5:#954       // REF_invokeVirtual java/net/URL.openStream:()Ljava/io/InputStream;\n-   #661 = MethodType         #955         //  ()Ljava/io/InputStream;\n-   #662 = NameAndType        #941:#956    // get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n-   #663 = NameAndType        #321:#322    // copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-   #664 = NameAndType        #957:#363    // getFileName:()Ljava/nio/file/Path;\n-   #665 = NameAndType        #348:#442    // resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #666 = NameAndType        #321:#347    // copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n-   #667 = Class              #958         // java/net/URL\n-   #668 = NameAndType        #959:#960    // getFile:()Ljava/lang/String;\n-   #669 = Class              #961         // org/apache/commons/io/FilenameUtils\n-   #670 = NameAndType        #962:#963    // getName:(Ljava/lang/String;)Ljava/lang/String;\n-   #671 = NameAndType        #348:#964    // resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n-   #672 = NameAndType        #932:#965    // withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n-   #673 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-   #674 = NameAndType        #966:#965    // withBigIntegerCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n-   #675 = NameAndType        #967:#295    // NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n-   #676 = NameAndType        #351:#358    // createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #677 = NameAndType        #441:#442    // getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #678 = NameAndType        #502:#442    // readIfSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #679 = NameAndType        #968:#352    // createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #680 = Utf8               .\n-   #681 = Class              #969         // java/nio/file/Paths\n-   #682 = NameAndType        #941:#970    // get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-   #683 = NameAndType        #364:#313    // delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #684 = Utf8               java/nio/file/LinkOption\n-   #685 = NameAndType        #446:#396    // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #686 = NameAndType        #367:#313    // deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #687 = NameAndType        #368:#313    // deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #688 = NameAndType        #367:#365    // deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #689 = NameAndType        #368:#365    // deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #690 = NameAndType        #483:#484    // noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n-   #691 = NameAndType        #486:#487    // overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #692 = MethodType         #952         //  (Ljava/lang/Object;)Ljava/lang/Object;\n-   #693 = MethodHandle       6:#971       // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #694 = MethodType         #972         //  (Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #695 = NameAndType        #973:#974    // apply:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n-   #696 = NameAndType        #594:#595    // withPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n-   #697 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-   #698 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n-   #699 = NameAndType        #605:#975    // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #700 = Utf8               java/nio/file/NoSuchFileException\n-   #701 = NameAndType        #976:#960    // toString:()Ljava/lang/String;\n-   #702 = NameAndType        #605:#977    // \"<init>\":(Ljava/lang/String;)V\n-   #703 = NameAndType        #371:#396    // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #704 = NameAndType        #978:#448    // isSymbolicLink:(Ljava/nio/file/Path;)Z\n-   #705 = NameAndType        #373:#551    // size:(Ljava/nio/file/Path;)J\n-   #706 = NameAndType        #979:#448    // deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #707 = NameAndType        #980:#982    // getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #708 = Class              #983         // org/apache/commons/io/file/Counters$Counter\n-   #709 = NameAndType        #984:#606    // increment:()V\n-   #710 = NameAndType        #985:#982    // getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-   #711 = NameAndType        #986:#987    // add:(J)V\n-   #712 = Utf8               java/nio/file/AccessDeniedException\n-   #713 = NameAndType        #505:#506    // readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n-   #714 = NameAndType        #548:#549    // setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #715 = NameAndType        #537:#988    // permissions:()Ljava/util/Set;\n-   #716 = NameAndType        #989:#990    // setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-   #717 = NameAndType        #991:#992    // toFile:()Ljava/io/File;\n-   #718 = Utf8               java/io/File\n-   #719 = NameAndType        #377:#606    // deleteOnExit:()V\n-   #720 = NameAndType        #288:#289    // EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-   #721 = NameAndType        #296:#280    // EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-   #722 = NameAndType        #286:#287    // EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-   #723 = NameAndType        #379:#383    // directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #724 = NameAndType        #485:#396    // notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #725 = Utf8               org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n-   #726 = Utf8               java/lang/Integer\n-   #727 = NameAndType        #605:#993    // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-   #728 = NameAndType        #994:#372    // equals:Z\n-   #729 = NameAndType        #995:#390    // relativeFileList1:Ljava/util/List;\n-   #730 = NameAndType        #996:#390    // relativeFileList2:Ljava/util/List;\n-   #731 = NameAndType        #997:#998    // iterator:()Ljava/util/Iterator;\n-   #732 = NameAndType        #999:#1000   // hasNext:()Z\n-   #733 = NameAndType        #1001:#942   // next:()Ljava/lang/Object;\n-   #734 = Utf8               java/nio/file/Path\n-   #735 = Class              #1002        // java/util/Collections\n-   #736 = NameAndType        #384:#1003   // binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n-   #737 = Utf8               java/lang/IllegalStateException\n-   #738 = Utf8               Unexpected mismatch.\n-   #739 = NameAndType        #397:#398    // fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-   #740 = NameAndType        #394:#395    // directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-   #741 = NameAndType        #951:#1004   // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #742 = NameAndType        #1005:#363   // normalize:()Ljava/nio/file/Path;\n-   #743 = Utf8               java/io/IOException\n-   #744 = Utf8               java/lang/StringBuilder\n-   #745 = NameAndType        #605:#606    // \"<init>\":()V\n-   #746 = Utf8               Can\\'t compare directories, only files:\n-   #747 = NameAndType        #479:#1006   // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #748 = NameAndType        #479:#1007   // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #749 = NameAndType        #994:#1008   // equals:(Ljava/lang/Object;)Z\n-   #750 = NameAndType        #1009:#1010  // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #751 = Class              #1011        // org/apache/commons/io/IOUtils\n-   #752 = NameAndType        #1012:#1013  // contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-   #753 = NameAndType        #297:#298    // EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-   #754 = NameAndType        #1014:#1015  // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-   #755 = Class              #1016        // java/util/stream/Collectors\n-   #756 = NameAndType        #1017:#1018  // toList:()Ljava/util/stream/Collector;\n-   #757 = NameAndType        #408:#409    // filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #758 = Utf8               java/util/List\n-   #759 = NameAndType        #1019:#1020  // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #760 = NameAndType        #1021:#1022  // empty:()Ljava/util/stream/Stream;\n-   #761 = NameAndType        #1023:#1024  // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-   #762 = MethodType         #1008        //  (Ljava/lang/Object;)Z\n-   #763 = MethodHandle       6:#1025      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-   #764 = MethodType         #448         //  (Ljava/nio/file/Path;)Z\n-   #765 = NameAndType        #470:#1026   // test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-   #766 = NameAndType        #404:#1027   // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-   #767 = NameAndType        #423:#424    // getAclFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n-   #768 = NameAndType        #1028:#1029  // getAcl:()Ljava/util/List;\n-   #769 = Utf8               java/nio/file/attribute/AclFileAttributeView\n-   #770 = NameAndType        #1030:#1031  // getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-   #771 = Utf8               java/nio/file/attribute/DosFileAttributeView\n-   #772 = NameAndType        #1032:#363   // toPath:()Ljava/nio/file/Path;\n-   #773 = NameAndType        #427:#430    // getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-   #774 = NameAndType        #941:#1033   // get:(Ljava/net/URI;)Ljava/nio/file/Path;\n-   #775 = NameAndType        #1034:#1035  // toURI:()Ljava/net/URI;\n-   #776 = NameAndType        #427:#434    // getLastModifiedFileTime:(Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n-   #777 = NameAndType        #441:#363    // getParent:()Ljava/nio/file/Path;\n-   #778 = Utf8               java/nio/file/attribute/PosixFileAttributeView\n-   #779 = Class              #1036        // org/apache/commons/io/FileUtils\n-   #780 = NameAndType        #1037:#960   // getTempDirectoryPath:()Ljava/lang/String;\n-   #781 = NameAndType        #449:#448    // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-   #782 = NameAndType        #454:#448    // isEmptyFile:(Ljava/nio/file/Path;)Z\n-   #783 = NameAndType        #472:#1038   // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-   #784 = Class              #1039        // java/time/chrono/ChronoZonedDateTime\n-   #785 = NameAndType        #1040:#1041  // toInstant:()Ljava/time/Instant;\n-   #786 = NameAndType        #455:#462    // isNewer:(Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n-   #787 = NameAndType        #315:#316    // compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n-   #788 = NameAndType        #1042:#1043  // from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-   #789 = NameAndType        #455:#461    // isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n-   #790 = NameAndType        #1044:#1045  // fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n-   #791 = NameAndType        #468:#461    // isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n-   #792 = NameAndType        #471:#396    // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #793 = Utf8               org/apache/commons/io/file/DirectoryStreamFilter\n-   #794 = NameAndType        #605:#1046   // \"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n-   #795 = NameAndType        #472:#1049   // newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n-   #796 = NameAndType        #281:#280    // OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n-   #797 = NameAndType        #279:#280    // OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n-   #798 = NameAndType        #477:#480    // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #799 = NameAndType        #294:#295    // NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n-   #800 = Utf8               java/nio/file/attribute/FileAttribute\n-   #801 = Utf8               java/util/ArrayList\n-   #802 = Class              #1050        // java/util/Arrays\n-   #803 = NameAndType        #1051:#1052  // asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #804 = NameAndType        #605:#1053   // \"<init>\":(Ljava/util/Collection;)V\n-   #805 = NameAndType        #1054:#1055  // addAll:(Ljava/util/Collection;)Z\n-   #806 = NameAndType        #477:#1056   // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #807 = NameAndType        #290:#289    // NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-   #808 = Class              #289         // \"[Ljava/nio/file/LinkOption;\"\n-   #809 = NameAndType        #1057:#942   // clone:()Ljava/lang/Object;\n-   #810 = MethodHandle       6:#1058      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #811 = MethodType         #613         //  (Lorg/apache/commons/io/file/DeleteOption;)Z\n-   #812 = NameAndType        #470:#1059   // test:()Ljava/util/function/Predicate;\n-   #813 = NameAndType        #1060:#1061  // anyMatch:(Ljava/util/function/Predicate;)Z\n-   #814 = MethodType         #1062        //  (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #815 = MethodHandle       6:#182       // REF_invokeStatic java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #816 = MethodType         #489         //  (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #817 = NameAndType        #973:#1063   // apply:()Lorg/apache/commons/io/function/IOTriFunction;\n-   #818 = Class              #1064        // org/apache/commons/io/function/Uncheck\n-   #819 = NameAndType        #973:#1065   // apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #820 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-   #821 = Utf8               java/lang/UnsupportedOperationException\n-   #822 = NameAndType        #488:#489    // readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #823 = NameAndType        #496:#498    // readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #824 = Utf8               java/nio/file/attribute/DosFileAttributes\n-   #825 = NameAndType        #1066:#442   // readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #826 = NameAndType        #500:#501    // readDosFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n-   #827 = Utf8               java/nio/file/attribute/PosixFileAttributes\n-   #828 = NameAndType        #1067:#1068  // readAllBytes:(Ljava/nio/file/Path;)[B\n-   #829 = Class              #1069        // org/apache/commons/io/Charsets\n-   #830 = NameAndType        #1070:#1071  // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #831 = NameAndType        #605:#1072   // \"<init>\":([BLjava/nio/charset/Charset;)V\n-   #832 = Class              #1073        // java/util/Collection\n-   #833 = NameAndType        #410:#1022   // stream:()Ljava/util/stream/Stream;\n-   #834 = MethodHandle       9:#1074      // REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #835 = MethodType         #442         //  (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-   #836 = NameAndType        #973:#1075   // apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n-   #837 = NameAndType        #1076:#1077  // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-   #838 = NameAndType        #1078:#1022  // sorted:()Ljava/util/stream/Stream;\n-   #839 = NameAndType        #1078:#1079  // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-   #840 = Utf8               java/lang/IllegalArgumentException\n-   #841 = Utf8               File system element for parameter \\'\n-   #842 = Utf8               \\' does not exist: \\'\n-   #843 = Utf8               \\'\n-   #844 = NameAndType        #425:#426    // getDosFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n-   #845 = NameAndType        #548:#1080   // setReadOnly:(Z)V\n-   #846 = NameAndType        #531:#1081   // setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-   #847 = Utf8               java/nio/file/attribute/PosixFilePermission\n-   #848 = NameAndType        #1082:#1083  // OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n-   #849 = NameAndType        #1084:#1083  // OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;\n-   #850 = NameAndType        #535:#536    // setPosixPermissions:(Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n-   #851 = NameAndType        #1085:#1086  // getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n-   #852 = NameAndType        #1087:#1055  // removeAll:(Ljava/util/Collection;)Z\n-   #853 = NameAndType        #1088:#1083  // OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;\n-   #854 = NameAndType        #526:#527    // setDosReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-   #855 = NameAndType        #469:#396    // isPosix:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #856 = Utf8               DOS or POSIX file operations not available for \\'%s\\' %s\n-   #857 = Utf8               java/lang/Object\n-   #858 = NameAndType        #976:#1089   // toString:([Ljava/lang/Object;)Ljava/lang/String;\n-   #859 = NameAndType        #1090:#1091  // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #860 = NameAndType        #544:#545    // setPosixReadOnlyFile:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n-   #861 = NameAndType        #533:#527    // setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-   #862 = NameAndType        #522:#523    // requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-   #863 = NameAndType        #555:#551    // sizeOfDirectory:(Ljava/nio/file/Path;)J\n-   #864 = NameAndType        #556:#553    // sizeOfDirectoryAsBigInteger:(Ljava/nio/file/Path;)Ljava/math/BigInteger;\n-   #865 = NameAndType        #1092:#1093  // valueOf:(J)Ljava/math/BigInteger;\n-   #866 = NameAndType        #349:#312    // countDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #867 = NameAndType        #1094:#1095  // getLong:()Ljava/lang/Long;\n-   #868 = Class              #1096        // java/lang/Long\n-   #869 = NameAndType        #1097:#1098  // longValue:()J\n-   #870 = NameAndType        #350:#312    // countDirectoryAsBigInteger:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #871 = NameAndType        #1099:#1100  // getBigInteger:()Ljava/math/BigInteger;\n-   #872 = Utf8               java/nio/file/FileVisitOption\n-   #873 = Class              #1101        // java/util/EnumSet\n-   #874 = NameAndType        #1102:#1103  // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-   #875 = NameAndType        #1104:#1018  // toSet:()Ljava/util/stream/Collector;\n-   #876 = Utf8               java/util/Set\n-   #877 = NameAndType        #1105:#352   // createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #878 = Class              #1106        // org/apache/commons/io/file/attribute/FileTimes\n-   #879 = NameAndType        #531:#378    // setLastModifiedTime:(Ljava/nio/file/Path;)V\n-   #880 = NameAndType        #1107:#1108  // walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-   #881 = NameAndType        #1107:#1109  // walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-   #882 = NameAndType        #584:#1041   // now:()Ljava/time/Instant;\n-   #883 = NameAndType        #1110:#1111  // plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n-   #884 = NameAndType        #1112:#1113  // isAfter:(Ljava/time/Instant;)Z\n-   #885 = Class              #1114        // java/lang/Thread\n-   #886 = NameAndType        #1115:#1116  // currentThread:()Ljava/lang/Thread;\n-   #887 = NameAndType        #1117:#606   // interrupt:()V\n-   #888 = NameAndType        #1118:#1098  // toEpochMilli:()J\n-   #889 = NameAndType        #1119:#1120  // minusMillis:(J)Ljava/time/Instant;\n-   #890 = Class              #1121        // java/lang/Math\n-   #891 = NameAndType        #1122:#1123  // min:(JJ)J\n-   #892 = Class              #1124        // java/time/Duration\n-   #893 = NameAndType        #1125:#1126  // ofMillis:(J)Ljava/time/Duration;\n-   #894 = Class              #1127        // org/apache/commons/io/ThreadUtils\n-   #895 = NameAndType        #1128:#1129  // sleep:(Ljava/time/Duration;)V\n-   #896 = Utf8               java/lang/InterruptedException\n-   #897 = Utf8               java/lang/Exception\n-   #898 = NameAndType        #591:#1130   // walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-   #899 = MethodHandle       6:#1131      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-   #900 = NameAndType        #470:#1132   // test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-   #901 = NameAndType        #973:#952    // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #902 = NameAndType        #1092:#1133  // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-   #903 = NameAndType        #1134:#1135  // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #904 = NameAndType        #1136:#1137  // write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n-   #905 = NameAndType        #499:#497    // readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #906 = NameAndType        #1138:#1139  // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #907 = Class              #1140        // java/nio/file/FileVisitResult\n-   #908 = NameAndType        #1141:#1142  // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #909 = Class              #1143        // org/apache/commons/io/file/StandardDeleteOption\n-   #910 = NameAndType        #1144:#1145  // OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n-   #911 = NameAndType        #496:#497    // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-   #912 = Utf8               java/nio/file/OpenOption\n-   #913 = Class              #1146        // java/nio/file/StandardOpenOption\n-   #914 = NameAndType        #1147:#1148  // CREATE:Ljava/nio/file/StandardOpenOption;\n-   #915 = NameAndType        #1149:#1148  // TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;\n-   #916 = NameAndType        #1150:#1148  // APPEND:Ljava/nio/file/StandardOpenOption;\n-   #917 = Utf8               java/nio/file/CopyOption\n-   #918 = NameAndType        #282:#283    // EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n-   #919 = Utf8               org/apache/commons/io/file/DeleteOption\n-   #920 = Utf8               org/apache/commons/io/file/PathUtils\n-   #921 = Utf8               org/apache/commons/io/file/PathUtils$1\n-   #922 = Utf8               org/apache/commons/io/function/IOSupplier\n-   #923 = Utf8               java/util/Iterator\n-   #924 = Utf8               java/nio/file/attribute/FileTime\n-   #925 = Utf8               java/net/URISyntaxException\n-   #926 = Utf8               java/nio/file/DirectoryStream\n-   #927 = Utf8               java/util/stream/Stream\n-   #928 = Utf8               java/math/BigInteger\n-   #929 = Utf8               java/time/Instant\n-   #930 = Utf8               org/apache/commons/io/function/IOFunction\n-   #931 = Utf8               org/apache/commons/io/file/PathFilter\n-   #932 = Utf8               withLongCounters\n-   #933 = Utf8               ()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n-   #934 = Utf8               org/apache/commons/io/file/Counters\n-   #935 = Utf8               longPathCounters\n-   #936 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #937 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #938 = Utf8               getPathCounters\n-   #939 = Utf8               compareTo\n-   #940 = Utf8               (Ljava/nio/file/attribute/FileTime;)I\n-   #941 = Utf8               get\n-   #942 = Utf8               ()Ljava/lang/Object;\n-   #943 = Utf8               java/nio/file/Files\n-   #944 = Utf8               (Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n-   #945 = Utf8               close\n-   #946 = Utf8               addSuppressed\n-   #947 = Utf8               (Ljava/lang/Throwable;)V\n-   #948 = Utf8               toAbsolutePath\n-   #949 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n-   #950 = Utf8               java/util/Objects\n-   #951 = Utf8               requireNonNull\n-   #952 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #953 = Methodref          #1151.#1152  // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #954 = Methodref          #667.#1153   // java/net/URL.openStream:()Ljava/io/InputStream;\n-   #955 = Utf8               ()Ljava/io/InputStream;\n-   #956 = Utf8               (Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n-   #957 = Utf8               getFileName\n-   #958 = Utf8               java/net/URL\n-   #959 = Utf8               getFile\n-   #960 = Utf8               ()Ljava/lang/String;\n-   #961 = Utf8               org/apache/commons/io/FilenameUtils\n-   #962 = Utf8               getName\n-   #963 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #964 = Utf8               (Ljava/lang/String;)Ljava/nio/file/Path;\n-   #965 = Utf8               ()Lorg/apache/commons/io/file/CountingPathVisitor;\n-   #966 = Utf8               withBigIntegerCounters\n-   #967 = Utf8               NOFOLLOW_LINKS\n-   #968 = Utf8               createDirectories\n-   #969 = Utf8               java/nio/file/Paths\n-   #970 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-   #971 = Methodref          #275.#1154   // org/apache/commons/io/file/PathUtils.lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #972 = Utf8               (Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #973 = Utf8               apply\n-   #974 = Utf8               ([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n-   #975 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n-   #976 = Utf8               toString\n-   #977 = Utf8               (Ljava/lang/String;)V\n-   #978 = Utf8               isSymbolicLink\n-   #979 = Utf8               deleteIfExists\n-   #980 = Utf8               getFileCounter\n-   #981 = Utf8               Counter\n-   #982 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n-   #983 = Utf8               org/apache/commons/io/file/Counters$Counter\n-   #984 = Utf8               increment\n-   #985 = Utf8               getByteCounter\n-   #986 = Utf8               add\n-   #987 = Utf8               (J)V\n-   #988 = Utf8               ()Ljava/util/Set;\n-   #989 = Utf8               setPosixFilePermissions\n-   #990 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n-   #991 = Utf8               toFile\n-   #992 = Utf8               ()Ljava/io/File;\n-   #993 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-   #994 = Utf8               equals\n-   #995 = Utf8               relativeFileList1\n-   #996 = Utf8               relativeFileList2\n-   #997 = Utf8               iterator\n-   #998 = Utf8               ()Ljava/util/Iterator;\n-   #999 = Utf8               hasNext\n-  #1000 = Utf8               ()Z\n-  #1001 = Utf8               next\n-  #1002 = Utf8               java/util/Collections\n-  #1003 = Utf8               (Ljava/util/List;Ljava/lang/Object;)I\n-  #1004 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #1005 = Utf8               normalize\n-  #1006 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #1007 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #1008 = Utf8               (Ljava/lang/Object;)Z\n-  #1009 = Utf8               newInputStream\n-  #1010 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #1011 = Utf8               org/apache/commons/io/IOUtils\n-  #1012 = Utf8               contentEquals\n-  #1013 = Utf8               (Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-  #1014 = Utf8               of\n-  #1015 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #1016 = Utf8               java/util/stream/Collectors\n-  #1017 = Utf8               toList\n-  #1018 = Utf8               ()Ljava/util/stream/Collector;\n-  #1019 = Utf8               toArray\n-  #1020 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #1021 = Utf8               empty\n-  #1022 = Utf8               ()Ljava/util/stream/Stream;\n-  #1023 = Utf8               collect\n-  #1024 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n-  #1025 = Methodref          #275.#1155   // org/apache/commons/io/file/PathUtils.lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-  #1026 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-  #1027 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-  #1028 = Utf8               getAcl\n-  #1029 = Utf8               ()Ljava/util/List;\n-  #1030 = Utf8               getFileAttributeView\n-  #1031 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-  #1032 = Utf8               toPath\n-  #1033 = Utf8               (Ljava/net/URI;)Ljava/nio/file/Path;\n-  #1034 = Utf8               toURI\n-  #1035 = Utf8               ()Ljava/net/URI;\n-  #1036 = Utf8               org/apache/commons/io/FileUtils\n-  #1037 = Utf8               getTempDirectoryPath\n-  #1038 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n-  #1039 = Utf8               java/time/chrono/ChronoZonedDateTime\n-  #1040 = Utf8               toInstant\n-  #1041 = Utf8               ()Ljava/time/Instant;\n-  #1042 = Utf8               from\n-  #1043 = Utf8               (Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n-  #1044 = Utf8               fromMillis\n-  #1045 = Utf8               (J)Ljava/nio/file/attribute/FileTime;\n-  #1046 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)V\n-  #1047 = Class              #1156        // java/nio/file/DirectoryStream$Filter\n-  #1048 = Utf8               Filter\n-  #1049 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n-  #1050 = Utf8               java/util/Arrays\n-  #1051 = Utf8               asList\n-  #1052 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #1053 = Utf8               (Ljava/util/Collection;)V\n-  #1054 = Utf8               addAll\n-  #1055 = Utf8               (Ljava/util/Collection;)Z\n-  #1056 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #1057 = Utf8               clone\n-  #1058 = Methodref          #275.#1157   // org/apache/commons/io/file/PathUtils.lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #1059 = Utf8               ()Ljava/util/function/Predicate;\n-  #1060 = Utf8               anyMatch\n-  #1061 = Utf8               (Ljava/util/function/Predicate;)Z\n-  #1062 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #1063 = Utf8               ()Lorg/apache/commons/io/function/IOTriFunction;\n-  #1064 = Utf8               org/apache/commons/io/function/Uncheck\n-  #1065 = Utf8               (Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #1066 = Utf8               readSymbolicLink\n-  #1067 = Utf8               readAllBytes\n-  #1068 = Utf8               (Ljava/nio/file/Path;)[B\n-  #1069 = Utf8               org/apache/commons/io/Charsets\n-  #1070 = Utf8               toCharset\n-  #1071 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #1072 = Utf8               ([BLjava/nio/charset/Charset;)V\n-  #1073 = Utf8               java/util/Collection\n-  #1074 = InterfaceMethodref #95.#1158    // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #1075 = Utf8               (Ljava/nio/file/Path;)Ljava/util/function/Function;\n-  #1076 = Utf8               map\n-  #1077 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n-  #1078 = Utf8               sorted\n-  #1079 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;\n-  #1080 = Utf8               (Z)V\n-  #1081 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-  #1082 = Utf8               OWNER_WRITE\n-  #1083 = Utf8               Ljava/nio/file/attribute/PosixFilePermission;\n-  #1084 = Utf8               OWNER_EXECUTE\n-  #1085 = Utf8               getPosixFilePermissions\n-  #1086 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n-  #1087 = Utf8               removeAll\n-  #1088 = Utf8               OWNER_READ\n-  #1089 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n-  #1090 = Utf8               format\n-  #1091 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #1092 = Utf8               valueOf\n-  #1093 = Utf8               (J)Ljava/math/BigInteger;\n-  #1094 = Utf8               getLong\n-  #1095 = Utf8               ()Ljava/lang/Long;\n-  #1096 = Utf8               java/lang/Long\n-  #1097 = Utf8               longValue\n-  #1098 = Utf8               ()J\n-  #1099 = Utf8               getBigInteger\n-  #1100 = Utf8               ()Ljava/math/BigInteger;\n-  #1101 = Utf8               java/util/EnumSet\n-  #1102 = Utf8               noneOf\n-  #1103 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;\n-  #1104 = Utf8               toSet\n-  #1105 = Utf8               createFile\n-  #1106 = Utf8               org/apache/commons/io/file/attribute/FileTimes\n-  #1107 = Utf8               walkFileTree\n-  #1108 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #1109 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-  #1110 = Utf8               plus\n-  #1111 = Utf8               (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n-  #1112 = Utf8               isAfter\n-  #1113 = Utf8               (Ljava/time/Instant;)Z\n-  #1114 = Utf8               java/lang/Thread\n-  #1115 = Utf8               currentThread\n-  #1116 = Utf8               ()Ljava/lang/Thread;\n-  #1117 = Utf8               interrupt\n-  #1118 = Utf8               toEpochMilli\n-  #1119 = Utf8               minusMillis\n-  #1120 = Utf8               (J)Ljava/time/Instant;\n-  #1121 = Utf8               java/lang/Math\n-  #1122 = Utf8               min\n-  #1123 = Utf8               (JJ)J\n-  #1124 = Utf8               java/time/Duration\n-  #1125 = Utf8               ofMillis\n-  #1126 = Utf8               (J)Ljava/time/Duration;\n-  #1127 = Utf8               org/apache/commons/io/ThreadUtils\n-  #1128 = Utf8               sleep\n-  #1129 = Utf8               (Ljava/time/Duration;)V\n-  #1130 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n-  #1131 = Methodref          #275.#1159   // org/apache/commons/io/file/PathUtils.lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-  #1132 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-  #1133 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n-  #1134 = Utf8               getBytes\n-  #1135 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #1136 = Utf8               write\n-  #1137 = Utf8               (Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n-  #1138 = Utf8               accept\n-  #1139 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #1140 = Utf8               java/nio/file/FileVisitResult\n-  #1141 = Utf8               CONTINUE\n-  #1142 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #1143 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n-  #1144 = Utf8               OVERRIDE_READ_ONLY\n-  #1145 = Utf8               Lorg/apache/commons/io/file/StandardDeleteOption;\n-  #1146 = Utf8               java/nio/file/StandardOpenOption\n-  #1147 = Utf8               CREATE\n-  #1148 = Utf8               Ljava/nio/file/StandardOpenOption;\n-  #1149 = Utf8               TRUNCATE_EXISTING\n-  #1150 = Utf8               APPEND\n-  #1151 = Class              #1160        // java/lang/invoke/LambdaMetafactory\n-  #1152 = NameAndType        #1161:#1164  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #1153 = NameAndType        #1165:#955   // openStream:()Ljava/io/InputStream;\n-  #1154 = NameAndType        #619:#620    // lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #1155 = NameAndType        #615:#616    // lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-  #1156 = Utf8               java/nio/file/DirectoryStream$Filter\n-  #1157 = NameAndType        #612:#613    // lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n-  #1158 = NameAndType        #511:#442    // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  #1159 = NameAndType        #609:#610    // lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-  #1160 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #1161 = Utf8               metafactory\n-  #1162 = Class              #1167        // java/lang/invoke/MethodHandles$Lookup\n-  #1163 = Utf8               Lookup\n-  #1164 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #1165 = Utf8               openStream\n-  #1166 = Class              #1168        // java/lang/invoke/MethodHandles\n-  #1167 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #1168 = Utf8               java/lang/invoke/MethodHandles\n+   #410 = InterfaceMethodref #316.#411    // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #411 = NameAndType        #412:#413    // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #412 = Utf8               toArray\n+   #413 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #414 = Class              #393         // \"[Ljava/nio/file/Path;\"\n+   #415 = String             #416         // collector\n+   #416 = Utf8               collector\n+   #417 = InterfaceMethodref #395.#418    // java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n+   #418 = NameAndType        #419:#420    // empty:()Ljava/util/stream/Stream;\n+   #419 = Utf8               empty\n+   #420 = Utf8               ()Ljava/util/stream/Stream;\n+   #421 = InterfaceMethodref #395.#422    // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #422 = NameAndType        #423:#424    // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #423 = Utf8               collect\n+   #424 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;\n+   #425 = InvokeDynamic      #2:#426      // #2:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+   #426 = NameAndType        #427:#428    // test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+   #427 = Utf8               test\n+   #428 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+   #429 = InterfaceMethodref #395.#430    // java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #430 = NameAndType        #389:#431    // filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #431 = Utf8               (Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+   #432 = Methodref          #2.#433      // org/apache/commons/io/file/PathUtils.getAclFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n+   #433 = NameAndType        #434:#435    // getAclFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n+   #434 = Utf8               getAclFileAttributeView\n+   #435 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n+   #436 = InterfaceMethodref #437.#438    // java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n+   #437 = Class              #439         // java/nio/file/attribute/AclFileAttributeView\n+   #438 = NameAndType        #440:#441    // getAcl:()Ljava/util/List;\n+   #439 = Utf8               java/nio/file/attribute/AclFileAttributeView\n+   #440 = Utf8               getAcl\n+   #441 = Utf8               ()Ljava/util/List;\n+   #442 = Methodref          #68.#443     // java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+   #443 = NameAndType        #444:#445    // getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+   #444 = Utf8               getFileAttributeView\n+   #445 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+   #446 = Class              #447         // java/nio/file/attribute/DosFileAttributeView\n+   #447 = Utf8               java/nio/file/attribute/DosFileAttributeView\n+   #448 = Methodref          #272.#449    // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #449 = NameAndType        #450:#88     // toPath:()Ljava/nio/file/Path;\n+   #450 = Utf8               toPath\n+   #451 = Methodref          #2.#452      // org/apache/commons/io/file/PathUtils.getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #452 = NameAndType        #453:#454    // getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #453 = Utf8               getLastModifiedFileTime\n+   #454 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #455 = Methodref          #164.#456    // java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+   #456 = NameAndType        #63:#457     // get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+   #457 = Utf8               (Ljava/net/URI;)Ljava/nio/file/Path;\n+   #458 = Methodref          #118.#459    // java/net/URL.toURI:()Ljava/net/URI;\n+   #459 = NameAndType        #460:#461    // toURI:()Ljava/net/URI;\n+   #460 = Utf8               toURI\n+   #461 = Utf8               ()Ljava/net/URI;\n+   #462 = Methodref          #2.#463      // org/apache/commons/io/file/PathUtils.getLastModifiedFileTime:(Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n+   #463 = NameAndType        #453:#464    // getLastModifiedFileTime:(Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n+   #464 = Utf8               (Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n+   #465 = Methodref          #68.#50      // java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+   #466 = InterfaceMethodref #84.#467     // java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n+   #467 = NameAndType        #153:#88     // getParent:()Ljava/nio/file/Path;\n+   #468 = Class              #469         // java/nio/file/attribute/PosixFileAttributeView\n+   #469 = Utf8               java/nio/file/attribute/PosixFileAttributeView\n+   #470 = Methodref          #471.#472    // org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n+   #471 = Class              #473         // org/apache/commons/io/FileUtils\n+   #472 = NameAndType        #474:#122    // getTempDirectoryPath:()Ljava/lang/String;\n+   #473 = Utf8               org/apache/commons/io/FileUtils\n+   #474 = Utf8               getTempDirectoryPath\n+   #475 = Methodref          #2.#476      // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+   #476 = NameAndType        #477:#224    // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+   #477 = Utf8               isEmptyDirectory\n+   #478 = Methodref          #2.#479      // org/apache/commons/io/file/PathUtils.isEmptyFile:(Ljava/nio/file/Path;)Z\n+   #479 = NameAndType        #480:#224    // isEmptyFile:(Ljava/nio/file/Path;)Z\n+   #480 = Utf8               isEmptyFile\n+   #481 = Methodref          #68.#482     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+   #482 = NameAndType        #483:#484    // newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+   #483 = Utf8               newDirectoryStream\n+   #484 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+   #485 = InterfaceMethodref #486.#317    // java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n+   #486 = Class              #487         // java/nio/file/DirectoryStream\n+   #487 = Utf8               java/nio/file/DirectoryStream\n+   #488 = InterfaceMethodref #486.#74     // java/nio/file/DirectoryStream.close:()V\n+   #489 = String             #490         // czdt\n+   #490 = Utf8               czdt\n+   #491 = InterfaceMethodref #492.#493    // java/time/chrono/ChronoZonedDateTime.toInstant:()Ljava/time/Instant;\n+   #492 = Class              #494         // java/time/chrono/ChronoZonedDateTime\n+   #493 = NameAndType        #495:#496    // toInstant:()Ljava/time/Instant;\n+   #494 = Utf8               java/time/chrono/ChronoZonedDateTime\n+   #495 = Utf8               toInstant\n+   #496 = Utf8               ()Ljava/time/Instant;\n+   #497 = Methodref          #2.#498      // org/apache/commons/io/file/PathUtils.isNewer:(Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n+   #498 = NameAndType        #499:#500    // isNewer:(Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n+   #499 = Utf8               isNewer\n+   #500 = Utf8               (Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n+   #501 = Methodref          #2.#502      // org/apache/commons/io/file/PathUtils.compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n+   #502 = NameAndType        #503:#504    // compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n+   #503 = Utf8               compareLastModifiedTimeTo\n+   #504 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n+   #505 = Methodref          #54.#506     // java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+   #506 = NameAndType        #507:#508    // from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+   #507 = Utf8               from\n+   #508 = Utf8               (Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+   #509 = Methodref          #2.#510      // org/apache/commons/io/file/PathUtils.isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+   #510 = NameAndType        #499:#511    // isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+   #511 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+   #512 = Methodref          #54.#513     // java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+   #513 = NameAndType        #514:#515    // fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+   #514 = Utf8               fromMillis\n+   #515 = Utf8               (J)Ljava/nio/file/attribute/FileTime;\n+   #516 = Methodref          #2.#517      // org/apache/commons/io/file/PathUtils.isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+   #517 = NameAndType        #518:#511    // isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+   #518 = Utf8               isOlder\n+   #519 = Methodref          #68.#520     // java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #520 = NameAndType        #521:#174    // isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #521 = Utf8               isRegularFile\n+   #522 = Class              #523         // org/apache/commons/io/file/DirectoryStreamFilter\n+   #523 = Utf8               org/apache/commons/io/file/DirectoryStreamFilter\n+   #524 = Methodref          #522.#525    // org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n+   #525 = NameAndType        #41:#526     // \"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n+   #526 = Utf8               (Lorg/apache/commons/io/file/PathFilter;)V\n+   #527 = Methodref          #68.#528     // java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+   #528 = NameAndType        #483:#529    // newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+   #529 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+   #530 = Fieldref           #2.#531      // org/apache/commons/io/file/PathUtils.OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n+   #531 = NameAndType        #532:#284    // OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n+   #532 = Utf8               OPEN_OPTIONS_APPEND\n+   #533 = Fieldref           #2.#534      // org/apache/commons/io/file/PathUtils.OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n+   #534 = NameAndType        #535:#284    // OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n+   #535 = Utf8               OPEN_OPTIONS_TRUNCATE\n+   #536 = Methodref          #2.#537      // org/apache/commons/io/file/PathUtils.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #537 = NameAndType        #538:#539    // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #538 = Utf8               newOutputStream\n+   #539 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #540 = Fieldref           #2.#541      // org/apache/commons/io/file/PathUtils.NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n+   #541 = NameAndType        #542:#146    // NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n+   #542 = Utf8               NULL_LINK_OPTION\n+   #543 = Class              #544         // java/nio/file/attribute/FileAttribute\n+   #544 = Utf8               java/nio/file/attribute/FileAttribute\n+   #545 = Class              #546         // java/util/ArrayList\n+   #546 = Utf8               java/util/ArrayList\n+   #547 = Methodref          #548.#549    // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #548 = Class              #550         // java/util/Arrays\n+   #549 = NameAndType        #551:#552    // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #550 = Utf8               java/util/Arrays\n+   #551 = Utf8               asList\n+   #552 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #553 = Methodref          #545.#554    // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+   #554 = NameAndType        #41:#555     // \"<init>\":(Ljava/util/Collection;)V\n+   #555 = Utf8               (Ljava/util/Collection;)V\n+   #556 = InterfaceMethodref #316.#557    // java/util/List.addAll:(Ljava/util/Collection;)Z\n+   #557 = NameAndType        #558:#559    // addAll:(Ljava/util/Collection;)Z\n+   #558 = Utf8               addAll\n+   #559 = Utf8               (Ljava/util/Collection;)Z\n+   #560 = Class              #284         // \"[Ljava/nio/file/OpenOption;\"\n+   #561 = Methodref          #68.#562     // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #562 = NameAndType        #538:#563    // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #563 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+   #564 = Fieldref           #2.#565      // org/apache/commons/io/file/PathUtils.NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+   #565 = NameAndType        #566:#280    // NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+   #566 = Utf8               NOFOLLOW_LINK_OPTION_ARRAY\n+   #567 = Methodref          #568.#569    // \"[Ljava/nio/file/LinkOption;\".clone:()Ljava/lang/Object;\n+   #568 = Class              #280         // \"[Ljava/nio/file/LinkOption;\"\n+   #569 = NameAndType        #570:#64     // clone:()Ljava/lang/Object;\n+   #570 = Utf8               clone\n+   #571 = Methodref          #68.#294     // java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #572 = InvokeDynamic      #3:#573      // #3:test:()Ljava/util/function/Predicate;\n+   #573 = NameAndType        #427:#574    // test:()Ljava/util/function/Predicate;\n+   #574 = Utf8               ()Ljava/util/function/Predicate;\n+   #575 = InterfaceMethodref #395.#576    // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #576 = NameAndType        #577:#578    // anyMatch:(Ljava/util/function/Predicate;)Z\n+   #577 = Utf8               anyMatch\n+   #578 = Utf8               (Ljava/util/function/Predicate;)Z\n+   #579 = InvokeDynamic      #4:#580      // #4:apply:()Lorg/apache/commons/io/function/IOTriFunction;\n+   #580 = NameAndType        #196:#581    // apply:()Lorg/apache/commons/io/function/IOTriFunction;\n+   #581 = Utf8               ()Lorg/apache/commons/io/function/IOTriFunction;\n+   #582 = Methodref          #583.#584    // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #583 = Class              #585         // org/apache/commons/io/function/Uncheck\n+   #584 = NameAndType        #196:#586    // apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #585 = Utf8               org/apache/commons/io/function/Uncheck\n+   #586 = Utf8               (Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #587 = Class              #588         // java/nio/file/attribute/BasicFileAttributes\n+   #588 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+   #589 = Class              #590         // java/lang/UnsupportedOperationException\n+   #590 = Utf8               java/lang/UnsupportedOperationException\n+   #591 = Methodref          #68.#592     // java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #592 = NameAndType        #593:#594    // readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #593 = Utf8               readAttributes\n+   #594 = Utf8               (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #595 = Methodref          #2.#592      // org/apache/commons/io/file/PathUtils.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #596 = Methodref          #2.#597      // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #597 = NameAndType        #598:#599    // readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #598 = Utf8               readBasicFileAttributes\n+   #599 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #600 = Class              #601         // java/nio/file/attribute/DosFileAttributes\n+   #601 = Utf8               java/nio/file/attribute/DosFileAttributes\n+   #602 = Methodref          #68.#603     // java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #603 = NameAndType        #604:#113    // readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+   #604 = Utf8               readSymbolicLink\n+   #605 = Methodref          #2.#606      // org/apache/commons/io/file/PathUtils.readDosFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n+   #606 = NameAndType        #607:#608    // readDosFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n+   #607 = Utf8               readDosFileAttributes\n+   #608 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n+   #609 = Methodref          #68.#610     // java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n+   #610 = NameAndType        #611:#612    // readAllBytes:(Ljava/nio/file/Path;)[B\n+   #611 = Utf8               readAllBytes\n+   #612 = Utf8               (Ljava/nio/file/Path;)[B\n+   #613 = Methodref          #614.#615    // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #614 = Class              #616         // org/apache/commons/io/Charsets\n+   #615 = NameAndType        #617:#618    // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #616 = Utf8               org/apache/commons/io/Charsets\n+   #617 = Utf8               toCharset\n+   #618 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #619 = Methodref          #37.#620     // java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+   #620 = NameAndType        #41:#621     // \"<init>\":([BLjava/nio/charset/Charset;)V\n+   #621 = Utf8               ([BLjava/nio/charset/Charset;)V\n+   #622 = InterfaceMethodref #623.#624    // java/util/Collection.stream:()Ljava/util/stream/Stream;\n+   #623 = Class              #625         // java/util/Collection\n+   #624 = NameAndType        #626:#420    // stream:()Ljava/util/stream/Stream;\n+   #625 = Utf8               java/util/Collection\n+   #626 = Utf8               stream\n+   #627 = InvokeDynamic      #5:#628      // #5:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n+   #628 = NameAndType        #196:#629    // apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n+   #629 = Utf8               (Ljava/nio/file/Path;)Ljava/util/function/Function;\n+   #630 = InterfaceMethodref #395.#631    // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #631 = NameAndType        #632:#633    // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #632 = Utf8               map\n+   #633 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+   #634 = InterfaceMethodref #395.#635    // java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n+   #635 = NameAndType        #636:#420    // sorted:()Ljava/util/stream/Stream;\n+   #636 = Utf8               sorted\n+   #637 = InterfaceMethodref #395.#638    // java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+   #638 = NameAndType        #636:#639    // sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+   #639 = Utf8               (Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+   #640 = Class              #641         // java/lang/IllegalArgumentException\n+   #641 = Utf8               java/lang/IllegalArgumentException\n+   #642 = String             #643         // File system element for parameter \\'\n+   #643 = Utf8               File system element for parameter \\'\n+   #644 = String             #645         // \\' does not exist: \\'\n+   #645 = Utf8               \\' does not exist: \\'\n+   #646 = String             #647         // \\'\n+   #647 = Utf8               \\'\n+   #648 = Methodref          #640.#216    // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #649 = Methodref          #2.#650      // org/apache/commons/io/file/PathUtils.getDosFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n+   #650 = NameAndType        #651:#652    // getDosFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n+   #651 = Utf8               getDosFileAttributeView\n+   #652 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n+   #653 = InterfaceMethodref #446.#654    // java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n+   #654 = NameAndType        #256:#655    // setReadOnly:(Z)V\n+   #655 = Utf8               (Z)V\n+   #656 = String             #657         // sourceFile\n+   #657 = Utf8               sourceFile\n+   #658 = Methodref          #68.#659     // java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #659 = NameAndType        #660:#661    // setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #660 = Utf8               setLastModifiedTime\n+   #661 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+   #662 = Class              #663         // java/nio/file/attribute/PosixFilePermission\n+   #663 = Utf8               java/nio/file/attribute/PosixFilePermission\n+   #664 = Fieldref           #662.#665    // java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+   #665 = NameAndType        #666:#667    // OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+   #666 = Utf8               OWNER_WRITE\n+   #667 = Utf8               Ljava/nio/file/attribute/PosixFilePermission;\n+   #668 = Fieldref           #662.#669    // java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;\n+   #669 = NameAndType        #670:#667    // OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;\n+   #670 = Utf8               OWNER_EXECUTE\n+   #671 = Methodref          #2.#672      // org/apache/commons/io/file/PathUtils.setPosixPermissions:(Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n+   #672 = NameAndType        #673:#674    // setPosixPermissions:(Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n+   #673 = Utf8               setPosixPermissions\n+   #674 = Utf8               (Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n+   #675 = Methodref          #68.#676     // java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n+   #676 = NameAndType        #677:#678    // getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n+   #677 = Utf8               getPosixFilePermissions\n+   #678 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n+   #679 = InterfaceMethodref #680.#557    // java/util/Set.addAll:(Ljava/util/Collection;)Z\n+   #680 = Class              #681         // java/util/Set\n+   #681 = Utf8               java/util/Set\n+   #682 = InterfaceMethodref #680.#683    // java/util/Set.removeAll:(Ljava/util/Collection;)Z\n+   #683 = NameAndType        #684:#559    // removeAll:(Ljava/util/Collection;)Z\n+   #684 = Utf8               removeAll\n+   #685 = Fieldref           #662.#686    // java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;\n+   #686 = NameAndType        #687:#667    // OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;\n+   #687 = Utf8               OWNER_READ\n+   #688 = Methodref          #2.#689      // org/apache/commons/io/file/PathUtils.setDosReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+   #689 = NameAndType        #690:#691    // setDosReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+   #690 = Utf8               setDosReadOnly\n+   #691 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+   #692 = Methodref          #2.#693      // org/apache/commons/io/file/PathUtils.isPosix:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #693 = NameAndType        #694:#174    // isPosix:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #694 = Utf8               isPosix\n+   #695 = String             #696         // DOS or POSIX file operations not available for \\'%s\\' %s\n+   #696 = Utf8               DOS or POSIX file operations not available for \\'%s\\' %s\n+   #697 = Class              #698         // java/lang/Object\n+   #698 = Utf8               java/lang/Object\n+   #699 = Methodref          #548.#700    // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+   #700 = NameAndType        #214:#701    // toString:([Ljava/lang/Object;)Ljava/lang/String;\n+   #701 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n+   #702 = Methodref          #37.#703     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #703 = NameAndType        #704:#705    // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #704 = Utf8               format\n+   #705 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #706 = Methodref          #2.#707      // org/apache/commons/io/file/PathUtils.setPosixReadOnlyFile:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n+   #707 = NameAndType        #708:#709    // setPosixReadOnlyFile:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n+   #708 = Utf8               setPosixReadOnlyFile\n+   #709 = Utf8               (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n+   #710 = Methodref          #2.#711      // org/apache/commons/io/file/PathUtils.setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+   #711 = NameAndType        #712:#691    // setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+   #712 = Utf8               setPosixDeletePermissions\n+   #713 = Methodref          #2.#714      // org/apache/commons/io/file/PathUtils.requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #714 = NameAndType        #715:#716    // requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #715 = Utf8               requireExists\n+   #716 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+   #717 = Methodref          #2.#718      // org/apache/commons/io/file/PathUtils.sizeOfDirectory:(Ljava/nio/file/Path;)J\n+   #718 = NameAndType        #719:#228    // sizeOfDirectory:(Ljava/nio/file/Path;)J\n+   #719 = Utf8               sizeOfDirectory\n+   #720 = Methodref          #2.#721      // org/apache/commons/io/file/PathUtils.sizeOfDirectoryAsBigInteger:(Ljava/nio/file/Path;)Ljava/math/BigInteger;\n+   #721 = NameAndType        #722:#723    // sizeOfDirectoryAsBigInteger:(Ljava/nio/file/Path;)Ljava/math/BigInteger;\n+   #722 = Utf8               sizeOfDirectoryAsBigInteger\n+   #723 = Utf8               (Ljava/nio/file/Path;)Ljava/math/BigInteger;\n+   #724 = Methodref          #725.#726    // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+   #725 = Class              #727         // java/math/BigInteger\n+   #726 = NameAndType        #728:#729    // valueOf:(J)Ljava/math/BigInteger;\n+   #727 = Utf8               java/math/BigInteger\n+   #728 = Utf8               valueOf\n+   #729 = Utf8               (J)Ljava/math/BigInteger;\n+   #730 = Methodref          #2.#731      // org/apache/commons/io/file/PathUtils.countDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #731 = NameAndType        #732:#733    // countDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #732 = Utf8               countDirectory\n+   #733 = Utf8               (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #734 = InterfaceMethodref #237.#735    // org/apache/commons/io/file/Counters$Counter.getLong:()Ljava/lang/Long;\n+   #735 = NameAndType        #736:#737    // getLong:()Ljava/lang/Long;\n+   #736 = Utf8               getLong\n+   #737 = Utf8               ()Ljava/lang/Long;\n+   #738 = Methodref          #739.#740    // java/lang/Long.longValue:()J\n+   #739 = Class              #741         // java/lang/Long\n+   #740 = NameAndType        #742:#743    // longValue:()J\n+   #741 = Utf8               java/lang/Long\n+   #742 = Utf8               longValue\n+   #743 = Utf8               ()J\n+   #744 = Methodref          #2.#745      // org/apache/commons/io/file/PathUtils.countDirectoryAsBigInteger:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #745 = NameAndType        #746:#733    // countDirectoryAsBigInteger:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #746 = Utf8               countDirectoryAsBigInteger\n+   #747 = InterfaceMethodref #237.#748    // org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n+   #748 = NameAndType        #749:#750    // getBigInteger:()Ljava/math/BigInteger;\n+   #749 = Utf8               getBigInteger\n+   #750 = Utf8               ()Ljava/math/BigInteger;\n+   #751 = Class              #752         // java/nio/file/FileVisitOption\n+   #752 = Utf8               java/nio/file/FileVisitOption\n+   #753 = Methodref          #754.#755    // java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+   #754 = Class              #756         // java/util/EnumSet\n+   #755 = NameAndType        #757:#758    // noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+   #756 = Utf8               java/util/EnumSet\n+   #757 = Utf8               noneOf\n+   #758 = Utf8               (Ljava/lang/Class;)Ljava/util/EnumSet;\n+   #759 = Methodref          #401.#760    // java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n+   #760 = NameAndType        #761:#405    // toSet:()Ljava/util/stream/Collector;\n+   #761 = Utf8               toSet\n+   #762 = String             #763         // file\n+   #763 = Utf8               file\n+   #764 = Methodref          #68.#765     // java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #765 = NameAndType        #766:#160    // createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #766 = Utf8               createFile\n+   #767 = Methodref          #768.#769    // org/apache/commons/io/file/attribute/FileTimes.setLastModifiedTime:(Ljava/nio/file/Path;)V\n+   #768 = Class              #770         // org/apache/commons/io/file/attribute/FileTimes\n+   #769 = NameAndType        #660:#771    // setLastModifiedTime:(Ljava/nio/file/Path;)V\n+   #770 = Utf8               org/apache/commons/io/file/attribute/FileTimes\n+   #771 = Utf8               (Ljava/nio/file/Path;)V\n+   #772 = String             #773         // directory\n+   #773 = Utf8               directory\n+   #774 = Methodref          #68.#775     // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+   #775 = NameAndType        #776:#777    // walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+   #776 = Utf8               walkFileTree\n+   #777 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+   #778 = Methodref          #68.#779     // java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+   #779 = NameAndType        #776:#780    // walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+   #780 = Utf8               (Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+   #781 = Methodref          #782.#783    // java/time/Instant.now:()Ljava/time/Instant;\n+   #782 = Class              #784         // java/time/Instant\n+   #783 = NameAndType        #785:#496    // now:()Ljava/time/Instant;\n+   #784 = Utf8               java/time/Instant\n+   #785 = Utf8               now\n+   #786 = Methodref          #782.#787    // java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n+   #787 = NameAndType        #788:#789    // plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n+   #788 = Utf8               plus\n+   #789 = Utf8               (Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n+   #790 = Long               100l\n+   #792 = Methodref          #782.#793    // java/time/Instant.isAfter:(Ljava/time/Instant;)Z\n+   #793 = NameAndType        #794:#795    // isAfter:(Ljava/time/Instant;)Z\n+   #794 = Utf8               isAfter\n+   #795 = Utf8               (Ljava/time/Instant;)Z\n+   #796 = Methodref          #797.#798    // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #797 = Class              #799         // java/lang/Thread\n+   #798 = NameAndType        #800:#801    // currentThread:()Ljava/lang/Thread;\n+   #799 = Utf8               java/lang/Thread\n+   #800 = Utf8               currentThread\n+   #801 = Utf8               ()Ljava/lang/Thread;\n+   #802 = Methodref          #797.#803    // java/lang/Thread.interrupt:()V\n+   #803 = NameAndType        #804:#76     // interrupt:()V\n+   #804 = Utf8               interrupt\n+   #805 = Methodref          #782.#806    // java/time/Instant.toEpochMilli:()J\n+   #806 = NameAndType        #807:#743    // toEpochMilli:()J\n+   #807 = Utf8               toEpochMilli\n+   #808 = Methodref          #782.#809    // java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n+   #809 = NameAndType        #810:#811    // minusMillis:(J)Ljava/time/Instant;\n+   #810 = Utf8               minusMillis\n+   #811 = Utf8               (J)Ljava/time/Instant;\n+   #812 = Methodref          #813.#814    // java/lang/Math.min:(JJ)J\n+   #813 = Class              #815         // java/lang/Math\n+   #814 = NameAndType        #816:#817    // min:(JJ)J\n+   #815 = Utf8               java/lang/Math\n+   #816 = Utf8               min\n+   #817 = Utf8               (JJ)J\n+   #818 = Methodref          #819.#820    // java/time/Duration.ofMillis:(J)Ljava/time/Duration;\n+   #819 = Class              #821         // java/time/Duration\n+   #820 = NameAndType        #822:#823    // ofMillis:(J)Ljava/time/Duration;\n+   #821 = Utf8               java/time/Duration\n+   #822 = Utf8               ofMillis\n+   #823 = Utf8               (J)Ljava/time/Duration;\n+   #824 = Methodref          #825.#826    // org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n+   #825 = Class              #827         // org/apache/commons/io/ThreadUtils\n+   #826 = NameAndType        #828:#829    // sleep:(Ljava/time/Duration;)V\n+   #827 = Utf8               org/apache/commons/io/ThreadUtils\n+   #828 = Utf8               sleep\n+   #829 = Utf8               (Ljava/time/Duration;)V\n+   #830 = Class              #831         // java/lang/InterruptedException\n+   #831 = Utf8               java/lang/InterruptedException\n+   #832 = Class              #833         // java/lang/Exception\n+   #833 = Utf8               java/lang/Exception\n+   #834 = Methodref          #68.#835     // java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+   #835 = NameAndType        #836:#837    // walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+   #836 = Utf8               walk\n+   #837 = Utf8               (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+   #838 = InvokeDynamic      #6:#839      // #6:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+   #839 = NameAndType        #427:#840    // test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+   #840 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+   #841 = InterfaceMethodref #842.#843    // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #842 = Class              #844         // org/apache/commons/io/function/IOFunction\n+   #843 = NameAndType        #196:#100    // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #844 = Utf8               org/apache/commons/io/function/IOFunction\n+   #845 = String             #846         // charSequence\n+   #846 = Utf8               charSequence\n+   #847 = Methodref          #37.#848     // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+   #848 = NameAndType        #728:#849    // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+   #849 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n+   #850 = Methodref          #37.#851     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #851 = NameAndType        #852:#853    // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #852 = Utf8               getBytes\n+   #853 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #854 = Methodref          #68.#855     // java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n+   #855 = NameAndType        #856:#857    // write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n+   #856 = Utf8               write\n+   #857 = Utf8               (Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n+   #858 = Methodref          #697.#363    // java/lang/Object.\"<init>\":()V\n+   #859 = Methodref          #2.#860      // org/apache/commons/io/file/PathUtils.readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #860 = NameAndType        #861:#862    // readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #861 = Utf8               readBasicFileAttributesUnchecked\n+   #862 = Utf8               (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #863 = InterfaceMethodref #864.#865    // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #864 = Class              #866         // org/apache/commons/io/file/PathFilter\n+   #865 = NameAndType        #867:#868    // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #866 = Utf8               org/apache/commons/io/file/PathFilter\n+   #867 = Utf8               accept\n+   #868 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #869 = Fieldref           #870.#871    // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #870 = Class              #872         // java/nio/file/FileVisitResult\n+   #871 = NameAndType        #873:#874    // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #872 = Utf8               java/nio/file/FileVisitResult\n+   #873 = Utf8               CONTINUE\n+   #874 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #875 = Fieldref           #876.#877    // org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n+   #876 = Class              #878         // org/apache/commons/io/file/StandardDeleteOption\n+   #877 = NameAndType        #879:#880    // OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n+   #878 = Utf8               org/apache/commons/io/file/StandardDeleteOption\n+   #879 = Utf8               OVERRIDE_READ_ONLY\n+   #880 = Utf8               Lorg/apache/commons/io/file/StandardDeleteOption;\n+   #881 = Methodref          #2.#882      // org/apache/commons/io/file/PathUtils.readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #882 = NameAndType        #598:#862    // readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+   #883 = Class              #884         // java/nio/file/OpenOption\n+   #884 = Utf8               java/nio/file/OpenOption\n+   #885 = Fieldref           #886.#887    // java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;\n+   #886 = Class              #888         // java/nio/file/StandardOpenOption\n+   #887 = NameAndType        #889:#890    // CREATE:Ljava/nio/file/StandardOpenOption;\n+   #888 = Utf8               java/nio/file/StandardOpenOption\n+   #889 = Utf8               CREATE\n+   #890 = Utf8               Ljava/nio/file/StandardOpenOption;\n+   #891 = Fieldref           #886.#892    // java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;\n+   #892 = NameAndType        #893:#890    // TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;\n+   #893 = Utf8               TRUNCATE_EXISTING\n+   #894 = Fieldref           #886.#895    // java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;\n+   #895 = NameAndType        #896:#890    // APPEND:Ljava/nio/file/StandardOpenOption;\n+   #896 = Utf8               APPEND\n+   #897 = Class              #898         // java/nio/file/CopyOption\n+   #898 = Utf8               java/nio/file/CopyOption\n+   #899 = Fieldref           #2.#900      // org/apache/commons/io/file/PathUtils.EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n+   #900 = NameAndType        #901:#902    // EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n+   #901 = Utf8               EMPTY_COPY_OPTIONS\n+   #902 = Utf8               [Ljava/nio/file/CopyOption;\n+   #903 = Class              #904         // org/apache/commons/io/file/DeleteOption\n+   #904 = Utf8               org/apache/commons/io/file/DeleteOption\n+   #905 = Utf8               Deprecated\n+   #906 = Utf8               RuntimeVisibleAnnotations\n+   #907 = Utf8               Ljava/lang/Deprecated;\n+   #908 = Utf8               Code\n+   #909 = Utf8               LineNumberTable\n+   #910 = Utf8               LocalVariableTable\n+   #911 = Utf8               Ljava/nio/file/Path;\n+   #912 = Utf8               maxDepth\n+   #913 = Utf8               I\n+   #914 = Utf8               fileVisitOptions\n+   #915 = Utf8               Exceptions\n+   #916 = Utf8               deleteOptions\n+   #917 = Utf8               fileTime\n+   #918 = Utf8               Ljava/nio/file/attribute/FileTime;\n+   #919 = Utf8               options\n+   #920 = Utf8               inputStream\n+   #921 = Utf8               Ljava/io/InputStream;\n+   #922 = Utf8               in\n+   #923 = Utf8               Lorg/apache/commons/io/function/IOSupplier;\n+   #924 = Utf8               target\n+   #925 = Utf8               copyOptions\n+   #926 = Utf8               LocalVariableTypeTable\n+   #927 = Utf8               Lorg/apache/commons/io/function/IOSupplier<Ljava/io/InputStream;>;\n+   #928 = Utf8               StackMapTable\n+   #929 = Class              #902         // \"[Ljava/nio/file/CopyOption;\"\n+   #930 = Utf8               Signature\n+   #931 = Utf8               (Lorg/apache/commons/io/function/IOSupplier<Ljava/io/InputStream;>;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+   #932 = Utf8               copyDirectory\n+   #933 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #934 = Utf8               sourceDirectory\n+   #935 = Utf8               targetDirectory\n+   #936 = Utf8               absoluteSource\n+   #937 = Utf8               copyFile\n+   #938 = Utf8               (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+   #939 = Utf8               Ljava/net/URL;\n+   #940 = Utf8               targetFile\n+   #941 = Utf8               copyFileToDirectory\n+   #942 = Utf8               attrs\n+   #943 = Utf8               [Ljava/nio/file/attribute/FileAttribute;\n+   #944 = Utf8               [Ljava/nio/file/attribute/FileAttribute<*>;\n+   #945 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n+   #946 = Utf8               linkOption\n+   #947 = Utf8               parent\n+   #948 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n+   #949 = Utf8               current\n+   #950 = Utf8               linkOptions\n+   #951 = Utf8               pathCounts\n+   #952 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #953 = Utf8               J\n+   #954 = Utf8               posixFileAttributes\n+   #955 = Utf8               Ljava/nio/file/attribute/PosixFileAttributes;\n+   #956 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n+   #957 = Utf8               path1\n+   #958 = Utf8               path2\n+   #959 = Utf8               openOptions\n+   #960 = Utf8               fileVisitOption\n+   #961 = Utf8               relativeSortedPaths\n+   #962 = Utf8               Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n+   #963 = Utf8               fileList1\n+   #964 = Utf8               fileList2\n+   #965 = Utf8               Ljava/util/List<Ljava/nio/file/Path;>;\n+   #966 = Utf8               inputStream2\n+   #967 = Utf8               inputStream1\n+   #968 = Utf8               nPath1\n+   #969 = Utf8               nPath2\n+   #970 = Utf8               path1Exists\n+   #971 = Utf8               (Lorg/apache/commons/io/file/PathFilter;[Ljava/nio/file/Path;)[Ljava/nio/file/Path;\n+   #972 = Utf8               Lorg/apache/commons/io/file/PathFilter;\n+   #973 = Utf8               paths\n+   #974 = Utf8               Ljava/util/stream/Stream;\n+   #975 = Utf8               Ljava/util/stream/Collector;\n+   #976 = Utf8               Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+   #977 = Utf8               Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n+   #978 = Utf8               <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n+   #979 = Utf8               getAclEntryList\n+   #980 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List;\n+   #981 = Utf8               sourcePath\n+   #982 = Utf8               fileAttributeView\n+   #983 = Utf8               Ljava/nio/file/attribute/AclFileAttributeView;\n+   #984 = Utf8               (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n+   #985 = Utf8               (Ljava/io/File;)Ljava/nio/file/attribute/FileTime;\n+   #986 = Utf8               Ljava/io/File;\n+   #987 = Utf8               defaultIfAbsent\n+   #988 = Utf8               uri\n+   #989 = Utf8               Ljava/net/URI;\n+   #990 = Utf8               (Ljava/net/URL;)Ljava/nio/file/attribute/FileTime;\n+   #991 = Utf8               url\n+   #992 = Class              #993         // java/net/URISyntaxException\n+   #993 = Utf8               java/net/URISyntaxException\n+   #994 = Utf8               getPosixFileAttributeView\n+   #995 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributeView;\n+   #996 = Utf8               getTempDirectory\n+   #997 = Utf8               isEmpty\n+   #998 = Utf8               directoryStream\n+   #999 = Utf8               Ljava/nio/file/DirectoryStream;\n+  #1000 = Utf8               Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n+  #1001 = Utf8               (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime;[Ljava/nio/file/LinkOption;)Z\n+  #1002 = Utf8               Ljava/time/chrono/ChronoZonedDateTime;\n+  #1003 = Utf8               Ljava/time/chrono/ChronoZonedDateTime<*>;\n+  #1004 = Utf8               (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime<*>;[Ljava/nio/file/LinkOption;)Z\n+  #1005 = Utf8               instant\n+  #1006 = Utf8               Ljava/time/Instant;\n+  #1007 = Utf8               (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n+  #1008 = Utf8               timeMillis\n+  #1009 = Utf8               reference\n+  #1010 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream;\n+  #1011 = Utf8               dir\n+  #1012 = Utf8               pathFilter\n+  #1013 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n+  #1014 = Utf8               (Ljava/nio/file/Path;Z)Ljava/io/OutputStream;\n+  #1015 = Utf8               list\n+  #1016 = Utf8               Ljava/util/List<Ljava/nio/file/OpenOption;>;\n+  #1017 = Utf8               e\n+  #1018 = Utf8               Ljava/lang/UnsupportedOperationException;\n+  #1019 = Utf8               type\n+  #1020 = Utf8               Ljava/lang/Class;\n+  #1021 = Utf8               Ljava/lang/Class<TA;>;\n+  #1022 = Utf8               <A::Ljava/nio/file/attribute/BasicFileAttributes;>(Ljava/nio/file/Path;Ljava/lang/Class<TA;>;[Ljava/nio/file/LinkOption;)TA;\n+  #1023 = Utf8               readOsFileAttributes\n+  #1024 = Utf8               fileAttributes\n+  #1025 = Utf8               readString\n+  #1026 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+  #1027 = Utf8               charset\n+  #1028 = Utf8               Ljava/nio/charset/Charset;\n+  #1029 = Utf8               relativize\n+  #1030 = Utf8               (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n+  #1031 = Utf8               collection\n+  #1032 = Utf8               Ljava/util/Collection;\n+  #1033 = Utf8               sort\n+  #1034 = Utf8               comparator\n+  #1035 = Utf8               Ljava/util/Comparator;\n+  #1036 = Utf8               Ljava/util/Collection<Ljava/nio/file/Path;>;\n+  #1037 = Utf8               Ljava/util/Comparator<-Ljava/nio/file/Path;>;\n+  #1038 = Utf8               (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+  #1039 = Utf8               fileParamName\n+  #1040 = Utf8               Ljava/lang/String;\n+  #1041 = Utf8               readOnly\n+  #1042 = Utf8               dosFileAttributeView\n+  #1043 = Utf8               Ljava/nio/file/attribute/DosFileAttributeView;\n+  #1044 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/Path;)V\n+  #1045 = Utf8               enableDeleteChildren\n+  #1046 = Utf8               Ljava/util/Set;\n+  #1047 = Utf8               addPermissions\n+  #1048 = Utf8               updatePermissions\n+  #1049 = Utf8               Ljava/util/Set<Ljava/nio/file/attribute/PosixFilePermission;>;\n+  #1050 = Utf8               Ljava/util/List<Ljava/nio/file/attribute/PosixFilePermission;>;\n+  #1051 = Utf8               (Ljava/nio/file/Path;ZLjava/util/List<Ljava/nio/file/attribute/PosixFilePermission;>;[Ljava/nio/file/LinkOption;)Z\n+  #1052 = Utf8               readPermissions\n+  #1053 = Utf8               writePermissions\n+  #1054 = Utf8               sizeOf\n+  #1055 = Utf8               sizeOfAsBigInteger\n+  #1056 = Utf8               ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n+  #1057 = Utf8               touch\n+  #1058 = Utf8               visitor\n+  #1059 = Utf8               Ljava/nio/file/FileVisitor;\n+  #1060 = Utf8               TT;\n+  #1061 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n+  #1062 = Utf8               start\n+  #1063 = Utf8               Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n+  #1064 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n+  #1065 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;\n+  #1066 = Utf8               first\n+  #1067 = Utf8               more\n+  #1068 = Utf8               [Ljava/lang/String;\n+  #1069 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n+  #1070 = Utf8               (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;\n+  #1071 = Utf8               <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n+  #1072 = Utf8               waitFor\n+  #1073 = Utf8               (Ljava/nio/file/Path;Ljava/time/Duration;[Ljava/nio/file/LinkOption;)Z\n+  #1074 = Utf8               ignore\n+  #1075 = Utf8               Ljava/lang/InterruptedException;\n+  #1076 = Utf8               ex\n+  #1077 = Utf8               Ljava/lang/Exception;\n+  #1078 = Utf8               timeout\n+  #1079 = Utf8               Ljava/time/Duration;\n+  #1080 = Utf8               finishInstant\n+  #1081 = Utf8               interrupted\n+  #1082 = Utf8               minSleepMillis\n+  #1083 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+  #1084 = Utf8               (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+  #1085 = Utf8               function\n+  #1086 = Utf8               Lorg/apache/commons/io/function/IOFunction;\n+  #1087 = Utf8               Lorg/apache/commons/io/function/IOFunction<Ljava/nio/file/attribute/PosixFileAttributes;TR;>;\n+  #1088 = Utf8               <R:Ljava/lang/Object;>(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction<Ljava/nio/file/attribute/PosixFileAttributes;TR;>;)TR;\n+  #1089 = Utf8               writeString\n+  #1090 = Utf8               (Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n+  #1091 = Utf8               Ljava/lang/CharSequence;\n+  #1092 = Utf8               this\n+  #1093 = Utf8               Lorg/apache/commons/io/file/PathUtils;\n+  #1094 = Utf8               lambda$walk$3\n+  #1095 = Utf8               (Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #1096 = Utf8               lambda$overrideReadOnly$2\n+  #1097 = Utf8               (Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #1098 = Utf8               Lorg/apache/commons/io/file/DeleteOption;\n+  #1099 = Utf8               lambda$filterPaths$1\n+  #1100 = Utf8               (Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #1101 = Utf8               Ljava/io/IOException;\n+  #1102 = Utf8               p\n+  #1103 = Utf8               lambda$deleteDirectory$0\n+  #1104 = Utf8               ([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #1105 = Utf8               pfa\n+  #1106 = Utf8               access$000\n+  #1107 = Utf8               x0\n+  #1108 = Utf8               x1\n+  #1109 = Utf8               x2\n+  #1110 = Utf8               <clinit>\n+  #1111 = Utf8               SourceFile\n+  #1112 = Utf8               PathUtils.java\n+  #1113 = Utf8               BootstrapMethods\n+  #1114 = MethodHandle       6:#1115      // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #1115 = Methodref          #1116.#1117  // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #1116 = Class              #1118        // java/lang/invoke/LambdaMetafactory\n+  #1117 = NameAndType        #1119:#1120  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #1118 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #1119 = Utf8               metafactory\n+  #1120 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #1121 = MethodType         #64          //  ()Ljava/lang/Object;\n+  #1122 = MethodHandle       5:#1123      // REF_invokeVirtual java/net/URL.openStream:()Ljava/io/InputStream;\n+  #1123 = Methodref          #118.#1124   // java/net/URL.openStream:()Ljava/io/InputStream;\n+  #1124 = NameAndType        #1125:#1126  // openStream:()Ljava/io/InputStream;\n+  #1125 = Utf8               openStream\n+  #1126 = Utf8               ()Ljava/io/InputStream;\n+  #1127 = MethodType         #1126        //  ()Ljava/io/InputStream;\n+  #1128 = MethodType         #100         //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #1129 = MethodHandle       6:#1130      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #1130 = Methodref          #2.#1131     // org/apache/commons/io/file/PathUtils.lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #1131 = NameAndType        #1103:#1104  // lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #1132 = MethodType         #1133        //  (Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #1133 = Utf8               (Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  #1134 = MethodType         #377         //  (Ljava/lang/Object;)Z\n+  #1135 = MethodHandle       6:#1136      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #1136 = Methodref          #2.#1137     // org/apache/commons/io/file/PathUtils.lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #1137 = NameAndType        #1099:#1100  // lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+  #1138 = MethodType         #224         //  (Ljava/nio/file/Path;)Z\n+  #1139 = MethodHandle       6:#1140      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #1140 = Methodref          #2.#1141     // org/apache/commons/io/file/PathUtils.lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #1141 = NameAndType        #1096:#1097  // lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #1142 = MethodType         #1097        //  (Lorg/apache/commons/io/file/DeleteOption;)Z\n+  #1143 = MethodType         #1144        //  (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #1144 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #1145 = MethodHandle       6:#591       // REF_invokeStatic java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #1146 = MethodType         #594         //  (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  #1147 = MethodHandle       9:#1148      // REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #1148 = InterfaceMethodref #84.#1149    // java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #1149 = NameAndType        #1029:#113   // relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #1150 = MethodType         #113         //  (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  #1151 = MethodHandle       6:#1152      // REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #1152 = Methodref          #2.#1153     // org/apache/commons/io/file/PathUtils.lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #1153 = NameAndType        #1094:#1095  // lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+  #1154 = Utf8               InnerClasses\n+  #1155 = Utf8               PathCounters\n+  #1156 = Utf8               Counter\n+  #1157 = Utf8               RelativeSortedPaths\n+  #1158 = Class              #1159        // org/apache/commons/io/file/PathUtils$1\n+  #1159 = Utf8               org/apache/commons/io/file/PathUtils$1\n+  #1160 = Class              #1161        // java/nio/file/DirectoryStream$Filter\n+  #1161 = Utf8               java/nio/file/DirectoryStream$Filter\n+  #1162 = Utf8               Filter\n+  #1163 = Class              #1164        // java/lang/invoke/MethodHandles$Lookup\n+  #1164 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #1165 = Class              #1166        // java/lang/invoke/MethodHandles\n+  #1166 = Utf8               java/lang/invoke/MethodHandles\n+  #1167 = Utf8               Lookup\n {\n   private static final java.nio.file.OpenOption[] OPEN_OPTIONS_TRUNCATE;\n     descriptor: [Ljava/nio/file/OpenOption;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.nio.file.OpenOption[] OPEN_OPTIONS_APPEND;\n     descriptor: [Ljava/nio/file/OpenOption;\n@@ -1201,15 +1200,15 @@\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final java.nio.file.LinkOption[] NOFOLLOW_LINK_OPTION_ARRAY;\n     descriptor: [Ljava/nio/file/LinkOption;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #293()\n+      0: #907()\n         java.lang.Deprecated\n \n   static final java.nio.file.LinkOption NULL_LINK_OPTION;\n     descriptor: Ljava/nio/file/LinkOption;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   public static final java.nio.file.OpenOption[] EMPTY_OPEN_OPTION_ARRAY;\n@@ -1221,21 +1220,21 @@\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static org.apache.commons.io.file.AccumulatorPathVisitor accumulate(java.nio.file.Path, int, java.nio.file.FileVisitOption[]) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n-         0: invokestatic  #2                  // Method org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n+         0: invokestatic  #7                  // Method org/apache/commons/io/file/AccumulatorPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/AccumulatorPathVisitor;\n          3: aload_0\n          4: aload_2\n-         5: invokestatic  #3                  // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n+         5: invokestatic  #13                 // Method toFileVisitOptionSet:([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n          8: iload_1\n-         9: invokestatic  #4                  // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n-        12: checkcast     #5                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n+         9: invokestatic  #17                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n+        12: checkcast     #8                  // class org/apache/commons/io/file/AccumulatorPathVisitor\n         15: areturn\n       LineNumberTable:\n         line 217: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 directory   Ljava/nio/file/Path;\n             0      16     1 maxDepth   I\n@@ -1245,41 +1244,41 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #7                  // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #25                 // Method cleanDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 228: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters cleanDirectory(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=2, args_size=2\n-         0: new           #8                  // class org/apache/commons/io/file/CleaningPathVisitor\n+         0: new           #29                 // class org/apache/commons/io/file/CleaningPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_1\n          8: iconst_0\n-         9: anewarray     #10                 // class java/lang/String\n-        12: invokespecial #11                 // Method org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+         9: anewarray     #37                 // class java/lang/String\n+        12: invokespecial #39                 // Method org/apache/commons/io/file/CleaningPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n         15: aload_0\n-        16: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        19: checkcast     #8                  // class org/apache/commons/io/file/CleaningPathVisitor\n-        22: invokevirtual #13                 // Method org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        16: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        19: checkcast     #29                 // class org/apache/commons/io/file/CleaningPathVisitor\n+        22: invokevirtual #46                 // Method org/apache/commons/io/file/CleaningPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         25: areturn\n       LineNumberTable:\n         line 241: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 directory   Ljava/nio/file/Path;\n             0      26     1 deleteOptions   [Lorg/apache/commons/io/file/DeleteOption;\n@@ -1289,17 +1288,17 @@\n   private static int compareLastModifiedTimeTo(java.nio.file.Path, java.nio.file.attribute.FileTime, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokestatic  #14                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+         2: invokestatic  #49                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n          5: aload_1\n-         6: invokevirtual #15                 // Method java/nio/file/attribute/FileTime.compareTo:(Ljava/nio/file/attribute/FileTime;)I\n+         6: invokevirtual #53                 // Method java/nio/file/attribute/FileTime.compareTo:(Ljava/nio/file/attribute/FileTime;)I\n          9: ireturn\n       LineNumberTable:\n         line 255: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  file   Ljava/nio/file/Path;\n             0      10     1 fileTime   Ljava/nio/file/attribute/FileTime;\n@@ -1309,38 +1308,38 @@\n \n   public static long copy(org.apache.commons.io.function.IOSupplier<java.io.InputStream>, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=6, args_size=3\n          0: aload_0\n-         1: invokeinterface #16,  1           // InterfaceMethod org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n-         6: checkcast     #17                 // class java/io/InputStream\n+         1: invokeinterface #59,  1           // InterfaceMethod org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n+         6: checkcast     #65                 // class java/io/InputStream\n          9: astore_3\n         10: aload_3\n         11: aload_1\n         12: aload_2\n-        13: invokestatic  #18                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+        13: invokestatic  #67                 // Method java/nio/file/Files.copy:(Ljava/io/InputStream;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n         16: lstore        4\n         18: aload_3\n         19: ifnull        26\n         22: aload_3\n-        23: invokevirtual #19                 // Method java/io/InputStream.close:()V\n+        23: invokevirtual #73                 // Method java/io/InputStream.close:()V\n         26: lload         4\n         28: lreturn\n         29: astore        4\n         31: aload_3\n         32: ifnull        51\n         35: aload_3\n-        36: invokevirtual #19                 // Method java/io/InputStream.close:()V\n+        36: invokevirtual #73                 // Method java/io/InputStream.close:()V\n         39: goto          51\n         42: astore        5\n         44: aload         4\n         46: aload         5\n-        48: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        48: invokevirtual #79                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         51: aload         4\n         53: athrow\n       Exception table:\n          from    to  target type\n             10    18    29   Class java/lang/Throwable\n             35    39    42   Class java/lang/Throwable\n       LineNumberTable:\n@@ -1369,35 +1368,35 @@\n         frame_type = 255 /* full_frame */\n           offset_delta = 12\n           locals = [ class org/apache/commons/io/function/IOSupplier, class java/nio/file/Path, class \"[Ljava/nio/file/CopyOption;\", class java/io/InputStream, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 8 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #335                         // (Lorg/apache/commons/io/function/IOSupplier<Ljava/io/InputStream;>;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+    Signature: #931                         // (Lorg/apache/commons/io/function/IOSupplier<Ljava/io/InputStream;>;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n \n   public static org.apache.commons.io.file.Counters$PathCounters copyDirectory(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=4, args_size=3\n          0: aload_0\n-         1: invokeinterface #22,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n+         1: invokeinterface #83,  1           // InterfaceMethod java/nio/file/Path.toAbsolutePath:()Ljava/nio/file/Path;\n          6: astore_3\n-         7: new           #23                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n+         7: new           #89                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n         10: dup\n-        11: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        11: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         14: aload_3\n         15: aload_1\n         16: aload_2\n-        17: invokespecial #24                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n+        17: invokespecial #91                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)V\n         20: aload_3\n-        21: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        24: checkcast     #23                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n-        27: invokevirtual #25                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        21: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        24: checkcast     #89                 // class org/apache/commons/io/file/CopyDirectoryVisitor\n+        27: invokevirtual #94                 // Method org/apache/commons/io/file/CopyDirectoryVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         30: areturn\n       LineNumberTable:\n         line 284: 0\n         line 285: 7\n         line 286: 27\n         line 285: 30\n       LocalVariableTable:\n@@ -1412,20 +1411,20 @@\n   public static java.nio.file.Path copyFile(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: dup\n-         2: invokestatic  #26                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         2: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          5: pop\n-         6: invokedynamic #27,  0             // InvokeDynamic #0:get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n+         6: invokedynamic #101,  0            // InvokeDynamic #0:get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n         11: aload_1\n         12: aload_2\n-        13: invokestatic  #28                 // Method copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+        13: invokestatic  #104                // Method copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n         16: pop2\n         17: aload_1\n         18: areturn\n       LineNumberTable:\n         line 300: 0\n         line 301: 17\n       LocalVariableTable:\n@@ -1440,18 +1439,18 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_0\n-         3: invokeinterface #29,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-         8: invokeinterface #30,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+         3: invokeinterface #107,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         8: invokeinterface #110,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n         13: aload_2\n-        14: invokestatic  #31                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n+        14: invokestatic  #114                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n         17: areturn\n       LineNumberTable:\n         line 315: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 sourceFile   Ljava/nio/file/Path;\n             0      18     1 targetDirectory   Ljava/nio/file/Path;\n@@ -1462,26 +1461,26 @@\n   public static java.nio.file.Path copyFileToDirectory(java.net.URL, java.nio.file.Path, java.nio.file.CopyOption...) throws java.io.IOException;\n     descriptor: (Ljava/net/URL;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #32                 // Method java/net/URL.getFile:()Ljava/lang/String;\n-         5: invokestatic  #33                 // Method org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n-         8: invokeinterface #34,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n+         2: invokevirtual #117                // Method java/net/URL.getFile:()Ljava/lang/String;\n+         5: invokestatic  #123                // Method org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n+         8: invokeinterface #129,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/lang/String;)Ljava/nio/file/Path;\n         13: astore_3\n         14: aload_0\n         15: dup\n-        16: invokestatic  #26                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        16: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         19: pop\n-        20: invokedynamic #27,  0             // InvokeDynamic #0:get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n+        20: invokedynamic #101,  0            // InvokeDynamic #0:get:(Ljava/net/URL;)Lorg/apache/commons/io/function/IOSupplier;\n         25: aload_3\n         26: aload_2\n-        27: invokestatic  #28                 // Method copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n+        27: invokestatic  #104                // Method copy:(Lorg/apache/commons/io/function/IOSupplier;Ljava/nio/file/Path;[Ljava/nio/file/CopyOption;)J\n         30: pop2\n         31: aload_3\n         32: areturn\n       LineNumberTable:\n         line 329: 0\n         line 330: 14\n         line 331: 31\n@@ -1495,38 +1494,38 @@\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters countDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: invokestatic  #35                 // Method org/apache/commons/io/file/CountingPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n+         0: invokestatic  #132                // Method org/apache/commons/io/file/CountingPathVisitor.withLongCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n          3: aload_0\n-         4: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-         7: checkcast     #36                 // class org/apache/commons/io/file/CountingPathVisitor\n-        10: invokevirtual #37                 // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+         7: checkcast     #133                // class org/apache/commons/io/file/CountingPathVisitor\n+        10: invokevirtual #137                // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         13: areturn\n       LineNumberTable:\n         line 342: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters countDirectoryAsBigInteger(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: invokestatic  #38                 // Method org/apache/commons/io/file/CountingPathVisitor.withBigIntegerCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n+         0: invokestatic  #138                // Method org/apache/commons/io/file/CountingPathVisitor.withBigIntegerCounters:()Lorg/apache/commons/io/file/CountingPathVisitor;\n          3: aload_0\n-         4: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-         7: checkcast     #36                 // class org/apache/commons/io/file/CountingPathVisitor\n-        10: invokevirtual #37                 // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+         7: checkcast     #133                // class org/apache/commons/io/file/CountingPathVisitor\n+        10: invokevirtual #137                // Method org/apache/commons/io/file/CountingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         13: areturn\n       LineNumberTable:\n         line 354: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n@@ -1534,54 +1533,54 @@\n \n   public static java.nio.file.Path createParentDirectories(java.nio.file.Path, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getstatic     #39                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+         1: getstatic     #141                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n          4: aload_1\n-         5: invokestatic  #40                 // Method createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+         5: invokestatic  #147                // Method createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n          8: areturn\n       LineNumberTable:\n         line 367: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  path   Ljava/nio/file/Path;\n             0       9     1 attrs   [Ljava/nio/file/attribute/FileAttribute;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     1 attrs   [Ljava/nio/file/attribute/FileAttribute<*>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #357                         // (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n+    Signature: #945                         // (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n \n   public static java.nio.file.Path createParentDirectories(java.nio.file.Path, java.nio.file.LinkOption, java.nio.file.attribute.FileAttribute<?>...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=4, args_size=3\n          0: aload_0\n-         1: invokestatic  #41                 // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+         1: invokestatic  #151                // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n          4: astore_3\n          5: aload_1\n-         6: getstatic     #39                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+         6: getstatic     #141                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n          9: if_acmpne     16\n         12: aload_3\n         13: goto          20\n         16: aload_3\n-        17: invokestatic  #42                 // Method readIfSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+        17: invokestatic  #154                // Method readIfSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n         20: astore_3\n         21: aload_3\n         22: ifnonnull     29\n         25: aconst_null\n         26: goto          34\n         29: aload_3\n         30: aload_2\n-        31: invokestatic  #43                 // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        31: invokestatic  #157                // Method java/nio/file/Files.createDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n         34: areturn\n       LineNumberTable:\n         line 381: 0\n         line 382: 5\n         line 383: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1599,37 +1598,37 @@\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/Path ]\n         frame_type = 8 /* same */\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/Path ]\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #361                         // (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n+    Signature: #948                         // (Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute<*>;)Ljava/nio/file/Path;\n \n   public static java.nio.file.Path current();\n     descriptor: ()Ljava/nio/file/Path;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: ldc           #44                 // String .\n+         0: ldc           #161                // String .\n          2: iconst_0\n-         3: anewarray     #10                 // class java/lang/String\n-         6: invokestatic  #45                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+         3: anewarray     #37                 // class java/lang/String\n+         6: invokestatic  #163                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n          9: areturn\n       LineNumberTable:\n         line 394: 0\n \n   public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #46                 // Method delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #168                // Method delete:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 413: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  path   Ljava/nio/file/Path;\n     Exceptions:\n@@ -1638,28 +1637,28 @@\n   public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: anewarray     #47                 // class java/nio/file/LinkOption\n+         2: anewarray     #142                // class java/nio/file/LinkOption\n          5: dup\n          6: iconst_0\n-         7: getstatic     #39                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+         7: getstatic     #141                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n         10: aastore\n-        11: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        11: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         14: ifeq          25\n         17: aload_0\n         18: aload_1\n-        19: invokestatic  #49                 // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        19: invokestatic  #175                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         22: goto          30\n         25: aload_0\n         26: aload_1\n-        27: invokestatic  #50                 // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        27: invokestatic  #178                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         30: areturn\n       LineNumberTable:\n         line 435: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  path   Ljava/nio/file/Path;\n             0      31     1 deleteOptions   [Lorg/apache/commons/io/file/DeleteOption;\n@@ -1673,25 +1672,25 @@\n   public static org.apache.commons.io.file.Counters$PathCounters delete(java.nio.file.Path, java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifeq          17\n          8: aload_0\n          9: aload_1\n         10: aload_2\n-        11: invokestatic  #51                 // Method deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        11: invokestatic  #181                // Method deleteDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         14: goto          23\n         17: aload_0\n         18: aload_1\n         19: aload_2\n-        20: invokestatic  #52                 // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+        20: invokestatic  #184                // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n         23: areturn\n       LineNumberTable:\n         line 458: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  path   Ljava/nio/file/Path;\n             0      24     1 linkOptions   [Ljava/nio/file/LinkOption;\n@@ -1705,43 +1704,43 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #49                 // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #175                // Method deleteDirectory:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 469: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=3, args_size=2\n-         0: invokestatic  #53                 // Method noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n+         0: invokestatic  #186                // Method noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n          3: astore_2\n          4: aload_0\n-         5: invokestatic  #41                 // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+         5: invokestatic  #151                // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n          8: aload_2\n          9: aload_1\n-        10: invokestatic  #54                 // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+        10: invokestatic  #190                // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n         13: aload_2\n         14: aload_1\n         15: aload_0\n-        16: invokedynamic #55,  0             // InvokeDynamic #1:apply:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n-        21: invokestatic  #56                 // Method withPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n-        24: checkcast     #57                 // class org/apache/commons/io/file/Counters$PathCounters\n+        16: invokedynamic #194,  0            // InvokeDynamic #1:apply:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;)Lorg/apache/commons/io/function/IOFunction;\n+        21: invokestatic  #198                // Method withPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n+        24: checkcast     #202                // class org/apache/commons/io/file/Counters$PathCounters\n         27: areturn\n       LineNumberTable:\n         line 482: 0\n         line 484: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      28     0 directory   Ljava/nio/file/Path;\n@@ -1751,26 +1750,26 @@\n       throws java.io.IOException\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteDirectory(java.nio.file.Path, java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=3, args_size=3\n-         0: new           #58                 // class org/apache/commons/io/file/DeletingPathVisitor\n+         0: new           #204                // class org/apache/commons/io/file/DeletingPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_1\n          8: aload_2\n          9: iconst_0\n-        10: anewarray     #10                 // class java/lang/String\n-        13: invokespecial #59                 // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+        10: anewarray     #37                 // class java/lang/String\n+        13: invokespecial #206                // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n         16: aload_0\n-        17: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        20: checkcast     #58                 // class org/apache/commons/io/file/DeletingPathVisitor\n-        23: invokevirtual #60                 // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        17: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        20: checkcast     #204                // class org/apache/commons/io/file/DeletingPathVisitor\n+        23: invokevirtual #209                // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         26: areturn\n       LineNumberTable:\n         line 499: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0 directory   Ljava/nio/file/Path;\n             0      27     1 linkOptions   [Ljava/nio/file/LinkOption;\n@@ -1780,16 +1779,16 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n-         4: invokestatic  #50                 // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         1: getstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+         4: invokestatic  #178                // Method deleteFile:(Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: areturn\n       LineNumberTable:\n         line 511: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  file   Ljava/nio/file/Path;\n     Exceptions:\n@@ -1797,17 +1796,17 @@\n \n   public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, org.apache.commons.io.file.DeleteOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokestatic  #53                 // Method noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n+         1: invokestatic  #186                // Method noFollowLinkOptionArray:()[Ljava/nio/file/LinkOption;\n          4: aload_1\n-         5: invokestatic  #52                 // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         5: invokestatic  #184                // Method deleteFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n          8: areturn\n       LineNumberTable:\n         line 526: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  file   Ljava/nio/file/Path;\n             0       9     1 deleteOptions   [Lorg/apache/commons/io/file/DeleteOption;\n@@ -1817,108 +1816,108 @@\n   public static org.apache.commons.io.file.Counters$PathCounters deleteFile(java.nio.file.Path, java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption...) throws java.nio.file.NoSuchFileException, java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=10, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifeq          22\n-         8: new           #61                 // class java/nio/file/NoSuchFileException\n+         8: new           #210                // class java/nio/file/NoSuchFileException\n         11: dup\n         12: aload_0\n-        13: invokeinterface #62,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n-        18: invokespecial #63                 // Method java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n+        13: invokeinterface #212,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+        18: invokespecial #215                // Method java/nio/file/NoSuchFileException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n-        22: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        22: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         25: astore_3\n         26: aload_0\n         27: aload_1\n-        28: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        28: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         31: istore        4\n         33: iload         4\n         35: ifeq          52\n         38: aload_0\n-        39: invokestatic  #65                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n+        39: invokestatic  #221                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n         42: ifne          52\n         45: aload_0\n-        46: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        46: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n         49: goto          53\n         52: lconst_0\n         53: lstore        5\n         55: aload_0\n-        56: invokestatic  #67                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+        56: invokestatic  #229                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n         59: ifeq          88\n         62: aload_3\n-        63: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-        68: invokeinterface #69,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V\n+        63: invokeinterface #232,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+        68: invokeinterface #236,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V\n         73: aload_3\n-        74: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+        74: invokeinterface #241,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n         79: lload         5\n-        81: invokeinterface #71,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V\n+        81: invokeinterface #244,  3          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V\n         86: aload_3\n         87: areturn\n         88: goto          93\n         91: astore        7\n         93: aload_0\n-        94: invokestatic  #41                 // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+        94: invokestatic  #151                // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n         97: astore        7\n         99: aconst_null\n        100: astore        8\n        102: aload_2\n-       103: invokestatic  #54                 // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n+       103: invokestatic  #190                // Method overrideReadOnly:([Lorg/apache/commons/io/file/DeleteOption;)Z\n        106: ifeq          124\n        109: aload         7\n        111: aload_1\n-       112: invokestatic  #73                 // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+       112: invokestatic  #250                // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n        115: astore        8\n        117: aload_0\n        118: iconst_0\n        119: aload_1\n-       120: invokestatic  #74                 // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+       120: invokestatic  #254                // Method setReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n        123: pop\n        124: aload_0\n        125: aload_1\n-       126: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+       126: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n        129: istore        4\n        131: iload         4\n        133: ifeq          150\n        136: aload_0\n-       137: invokestatic  #65                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n+       137: invokestatic  #221                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n        140: ifne          150\n        143: aload_0\n-       144: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+       144: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n        147: goto          151\n        150: lconst_0\n        151: lstore        5\n        153: aload_0\n-       154: invokestatic  #67                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+       154: invokestatic  #229                // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n        157: ifeq          184\n        160: aload_3\n-       161: invokeinterface #68,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-       166: invokeinterface #69,  1           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V\n+       161: invokeinterface #232,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getFileCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+       166: invokeinterface #236,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.increment:()V\n        171: aload_3\n-       172: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+       172: invokeinterface #241,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n        177: lload         5\n-       179: invokeinterface #71,  3           // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V\n+       179: invokeinterface #244,  3          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.add:(J)V\n        184: aload         8\n        186: ifnull        228\n        189: aload         7\n        191: aload         8\n-       193: invokeinterface #75,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-       198: invokestatic  #76                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+       193: invokeinterface #258,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+       198: invokestatic  #264                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n        201: pop\n        202: goto          228\n        205: astore        9\n        207: aload         8\n        209: ifnull        225\n        212: aload         7\n        214: aload         8\n-       216: invokeinterface #75,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-       221: invokestatic  #76                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+       216: invokeinterface #258,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+       221: invokestatic  #264                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n        224: pop\n        225: aload         9\n        227: athrow\n        228: aload_3\n        229: areturn\n       Exception table:\n          from    to  target type\n@@ -1995,18 +1994,18 @@\n \n   public static void deleteOnExit(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #77,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n-         6: invokestatic  #26                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-         9: checkcast     #78                 // class java/io/File\n-        12: invokevirtual #79                 // Method java/io/File.deleteOnExit:()V\n+         1: invokeinterface #268,  1          // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n+         6: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         9: checkcast     #272                // class java/io/File\n+        12: invokevirtual #274                // Method java/io/File.deleteOnExit:()V\n         15: return\n       LineNumberTable:\n         line 589: 0\n         line 590: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  path   Ljava/nio/file/Path;\n@@ -2014,18 +2013,18 @@\n   public static boolean directoryAndFileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         5: getstatic     #81                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-         8: getstatic     #82                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-        11: invokestatic  #83                 // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n+         2: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         5: getstatic     #281                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+         8: getstatic     #285                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+        11: invokestatic  #289                // Method directoryAndFileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;[Ljava/nio/file/FileVisitOption;)Z\n         14: ireturn\n       LineNumberTable:\n         line 602: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 path1   Ljava/nio/file/Path;\n             0      15     1 path2   Ljava/nio/file/Path;\n@@ -2047,131 +2046,131 @@\n         11: ifnull        18\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n         20: aload_0\n         21: iconst_0\n-        22: anewarray     #47                 // class java/nio/file/LinkOption\n-        25: invokestatic  #84                 // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        22: anewarray     #142                // class java/nio/file/LinkOption\n+        25: invokestatic  #293                // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         28: ifeq          44\n         31: aload_1\n         32: iconst_0\n-        33: anewarray     #47                 // class java/nio/file/LinkOption\n-        36: invokestatic  #84                 // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        33: anewarray     #142                // class java/nio/file/LinkOption\n+        36: invokestatic  #293                // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         39: ifeq          44\n         42: iconst_1\n         43: ireturn\n-        44: new           #85                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+        44: new           #296                // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n         47: dup\n         48: aload_0\n         49: aload_1\n-        50: ldc           #87                 // int 2147483647\n-        52: aload_2\n-        53: aload         4\n-        55: aconst_null\n-        56: invokespecial #88                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-        59: astore        5\n-        61: aload         5\n-        63: getfield      #89                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n-        66: ifne          71\n-        69: iconst_0\n-        70: ireturn\n-        71: aload         5\n-        73: getfield      #90                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n-        76: astore        6\n-        78: aload         5\n-        80: getfield      #91                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n-        83: astore        7\n-        85: aload         6\n-        87: invokeinterface #92,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n-        92: astore        8\n-        94: aload         8\n-        96: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       101: ifeq          170\n-       104: aload         8\n-       106: invokeinterface #94,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       111: checkcast     #95                 // class java/nio/file/Path\n-       114: astore        9\n-       116: aload         7\n-       118: aload         9\n-       120: invokestatic  #96                 // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n-       123: istore        10\n-       125: iload         10\n-       127: iconst_m1\n-       128: if_icmpgt     141\n-       131: new           #97                 // class java/lang/IllegalStateException\n-       134: dup\n-       135: ldc           #98                 // String Unexpected mismatch.\n-       137: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       140: athrow\n-       141: aload_0\n-       142: aload         9\n-       144: invokeinterface #30,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-       149: aload_1\n-       150: aload         9\n-       152: invokeinterface #30,  2           // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-       157: aload_2\n-       158: aload_3\n-       159: invokestatic  #100                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n-       162: ifne          167\n-       165: iconst_0\n-       166: ireturn\n-       167: goto          94\n-       170: iconst_1\n-       171: ireturn\n+        50: ldc_w         #300                // int 2147483647\n+        53: aload_2\n+        54: aload         4\n+        56: aconst_null\n+        57: invokespecial #301                // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+        60: astore        5\n+        62: aload         5\n+        64: getfield      #304                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n+        67: ifne          72\n+        70: iconst_0\n+        71: ireturn\n+        72: aload         5\n+        74: getfield      #308                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList1:Ljava/util/List;\n+        77: astore        6\n+        79: aload         5\n+        81: getfield      #312                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.relativeFileList2:Ljava/util/List;\n+        84: astore        7\n+        86: aload         6\n+        88: invokeinterface #315,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+        93: astore        8\n+        95: aload         8\n+        97: invokeinterface #321,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       102: ifeq          172\n+       105: aload         8\n+       107: invokeinterface #327,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       112: checkcast     #84                 // class java/nio/file/Path\n+       115: astore        9\n+       117: aload         7\n+       119: aload         9\n+       121: invokestatic  #330                // Method java/util/Collections.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I\n+       124: istore        10\n+       126: iload         10\n+       128: iconst_m1\n+       129: if_icmpgt     143\n+       132: new           #336                // class java/lang/IllegalStateException\n+       135: dup\n+       136: ldc_w         #338                // String Unexpected mismatch.\n+       139: invokespecial #340                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       142: athrow\n+       143: aload_0\n+       144: aload         9\n+       146: invokeinterface #110,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+       151: aload_1\n+       152: aload         9\n+       154: invokeinterface #110,  2          // InterfaceMethod java/nio/file/Path.resolve:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+       159: aload_2\n+       160: aload_3\n+       161: invokestatic  #341                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+       164: ifne          169\n+       167: iconst_0\n+       168: ireturn\n+       169: goto          95\n+       172: iconst_1\n+       173: ireturn\n       LineNumberTable:\n         line 620: 0\n         line 621: 8\n         line 623: 10\n         line 624: 18\n         line 626: 20\n         line 627: 42\n         line 629: 44\n-        line 631: 61\n-        line 632: 69\n-        line 635: 71\n-        line 636: 78\n-        line 637: 85\n-        line 638: 116\n-        line 639: 125\n-        line 640: 131\n-        line 642: 141\n-        line 643: 165\n-        line 645: 167\n-        line 646: 170\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          125      42    10 binarySearch   I\n-          116      51     9  path   Ljava/nio/file/Path;\n-            0     172     0 path1   Ljava/nio/file/Path;\n-            0     172     1 path2   Ljava/nio/file/Path;\n-            0     172     2 linkOptions   [Ljava/nio/file/LinkOption;\n-            0     172     3 openOptions   [Ljava/nio/file/OpenOption;\n-            0     172     4 fileVisitOption   [Ljava/nio/file/FileVisitOption;\n-           61     111     5 relativeSortedPaths   Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n-           78      94     6 fileList1   Ljava/util/List;\n-           85      87     7 fileList2   Ljava/util/List;\n+        line 631: 62\n+        line 632: 70\n+        line 635: 72\n+        line 636: 79\n+        line 637: 86\n+        line 638: 117\n+        line 639: 126\n+        line 640: 132\n+        line 642: 143\n+        line 643: 167\n+        line 645: 169\n+        line 646: 172\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          126      43    10 binarySearch   I\n+          117      52     9  path   Ljava/nio/file/Path;\n+            0     174     0 path1   Ljava/nio/file/Path;\n+            0     174     1 path2   Ljava/nio/file/Path;\n+            0     174     2 linkOptions   [Ljava/nio/file/LinkOption;\n+            0     174     3 openOptions   [Ljava/nio/file/OpenOption;\n+            0     174     4 fileVisitOption   [Ljava/nio/file/FileVisitOption;\n+           62     112     5 relativeSortedPaths   Lorg/apache/commons/io/file/PathUtils$RelativeSortedPaths;\n+           79      95     6 fileList1   Ljava/util/List;\n+           86      88     7 fileList2   Ljava/util/List;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-           78      94     6 fileList1   Ljava/util/List<Ljava/nio/file/Path;>;\n-           85      87     7 fileList2   Ljava/util/List<Ljava/nio/file/Path;>;\n+           79      95     6 fileList1   Ljava/util/List<Ljava/nio/file/Path;>;\n+           86      88     7 fileList2   Ljava/util/List<Ljava/nio/file/Path;>;\n       StackMapTable: number_of_entries = 9\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 1 /* same */\n         frame_type = 23 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 26\n+          offset_delta = 27\n           locals = [ class org/apache/commons/io/file/PathUtils$RelativeSortedPaths ]\n         frame_type = 254 /* append */\n           offset_delta = 22\n           locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]\n         frame_type = 253 /* append */\n-          offset_delta = 46\n+          offset_delta = 47\n           locals = [ class java/nio/file/Path, int ]\n         frame_type = 249 /* chop */\n           offset_delta = 25\n         frame_type = 250 /* chop */\n           offset_delta = 2\n     Exceptions:\n       throws java.io.IOException\n@@ -2179,43 +2178,43 @@\n   public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #87                 // int 2147483647\n-         4: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         7: getstatic     #82                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n-        10: invokestatic  #101                // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n-        13: ireturn\n+         2: ldc_w         #300                // int 2147483647\n+         5: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         8: getstatic     #285                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+        11: invokestatic  #345                // Method directoryContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n+        14: ireturn\n       LineNumberTable:\n         line 659: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      14     0 path1   Ljava/nio/file/Path;\n-            0      14     1 path2   Ljava/nio/file/Path;\n+            0      15     0 path1   Ljava/nio/file/Path;\n+            0      15     1 path2   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   public static boolean directoryContentEquals(java.nio.file.Path, java.nio.file.Path, int, java.nio.file.LinkOption[], java.nio.file.FileVisitOption[]) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=5, args_size=5\n-         0: new           #85                 // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n+         0: new           #296                // class org/apache/commons/io/file/PathUtils$RelativeSortedPaths\n          3: dup\n          4: aload_0\n          5: aload_1\n          6: iload_2\n          7: aload_3\n          8: aload         4\n         10: aconst_null\n-        11: invokespecial #88                 // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n-        14: getfield      #89                 // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n+        11: invokespecial #301                // Method org/apache/commons/io/file/PathUtils$RelativeSortedPaths.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/file/Path;I[Ljava/nio/file/LinkOption;[Ljava/nio/file/FileVisitOption;Lorg/apache/commons/io/file/PathUtils$1;)V\n+        14: getfield      #304                // Field org/apache/commons/io/file/PathUtils$RelativeSortedPaths.equals:Z\n         17: ireturn\n       LineNumberTable:\n         line 676: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 path1   Ljava/nio/file/Path;\n             0      18     1 path2   Ljava/nio/file/Path;\n@@ -2227,50 +2226,50 @@\n \n   private static boolean exists(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #102                // String path\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_1\n-         8: ifnull        19\n-        11: aload_0\n-        12: aload_1\n-        13: invokestatic  #104                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        16: goto          27\n-        19: aload_0\n-        20: iconst_0\n-        21: anewarray     #47                 // class java/nio/file/LinkOption\n-        24: invokestatic  #104                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        27: ireturn\n+         1: ldc_w         #349                // String path\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_1\n+         9: ifnull        20\n+        12: aload_0\n+        13: aload_1\n+        14: invokestatic  #354                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        17: goto          28\n+        20: aload_0\n+        21: iconst_0\n+        22: anewarray     #142                // class java/nio/file/LinkOption\n+        25: invokestatic  #354                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        28: ireturn\n       LineNumberTable:\n         line 680: 0\n-        line 681: 7\n+        line 681: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      28     0  path   Ljava/nio/file/Path;\n-            0      28     1 options   [Ljava/nio/file/LinkOption;\n+            0      29     0  path   Ljava/nio/file/Path;\n+            0      29     1 options   [Ljava/nio/file/LinkOption;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 19 /* same */\n+        frame_type = 20 /* same */\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public static boolean fileContentEquals(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         5: getstatic     #81                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-         8: invokestatic  #100                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n+         2: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         5: getstatic     #281                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+         8: invokestatic  #341                // Method fileContentEquals:(Ljava/nio/file/Path;Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Z\n         11: ireturn\n       LineNumberTable:\n         line 698: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0 path1   Ljava/nio/file/Path;\n             0      12     1 path2   Ljava/nio/file/Path;\n@@ -2291,180 +2290,180 @@\n         10: aload_0\n         11: ifnull        18\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n         20: aload_0\n-        21: invokeinterface #105,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+        21: invokeinterface #355,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n         26: astore        4\n         28: aload_1\n-        29: invokeinterface #105,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n+        29: invokeinterface #355,  1          // InterfaceMethod java/nio/file/Path.normalize:()Ljava/nio/file/Path;\n         34: astore        5\n         36: aload         4\n         38: aload_2\n-        39: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        39: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         42: istore        6\n         44: iload         6\n         46: aload         5\n         48: aload_2\n-        49: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        49: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         52: if_icmpeq     57\n         55: iconst_0\n         56: ireturn\n         57: iload         6\n         59: ifne          64\n         62: iconst_1\n         63: ireturn\n         64: aload         4\n         66: aload_2\n-        67: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        70: ifeq          101\n-        73: new           #106                // class java/io/IOException\n+        67: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        70: ifeq          102\n+        73: new           #358                // class java/io/IOException\n         76: dup\n-        77: new           #107                // class java/lang/StringBuilder\n+        77: new           #360                // class java/lang/StringBuilder\n         80: dup\n-        81: invokespecial #108                // Method java/lang/StringBuilder.\"<init>\":()V\n-        84: ldc           #109                // String Can\\'t compare directories, only files:\n-        86: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: aload         4\n-        91: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        94: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        97: invokespecial #113                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       100: athrow\n-       101: aload         5\n-       103: aload_2\n-       104: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-       107: ifeq          138\n-       110: new           #106                // class java/io/IOException\n-       113: dup\n-       114: new           #107                // class java/lang/StringBuilder\n-       117: dup\n-       118: invokespecial #108                // Method java/lang/StringBuilder.\"<init>\":()V\n-       121: ldc           #109                // String Can\\'t compare directories, only files:\n-       123: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       126: aload         5\n-       128: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       131: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       134: invokespecial #113                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       137: athrow\n-       138: aload         4\n-       140: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-       143: aload         5\n-       145: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-       148: lcmp\n-       149: ifeq          154\n-       152: iconst_0\n-       153: ireturn\n-       154: aload_0\n-       155: aload_1\n-       156: invokeinterface #114,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n-       161: ifeq          166\n-       164: iconst_1\n-       165: ireturn\n-       166: aload         4\n-       168: aload_3\n-       169: invokestatic  #115                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-       172: astore        7\n-       174: aload         5\n-       176: aload_3\n-       177: invokestatic  #115                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-       180: astore        8\n-       182: aload         7\n-       184: aload         8\n-       186: invokestatic  #116                // Method org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n-       189: istore        9\n-       191: aload         8\n-       193: ifnull        201\n-       196: aload         8\n-       198: invokevirtual #19                 // Method java/io/InputStream.close:()V\n-       201: aload         7\n-       203: ifnull        211\n-       206: aload         7\n-       208: invokevirtual #19                 // Method java/io/InputStream.close:()V\n-       211: iload         9\n-       213: ireturn\n-       214: astore        9\n-       216: aload         8\n-       218: ifnull        238\n-       221: aload         8\n-       223: invokevirtual #19                 // Method java/io/InputStream.close:()V\n-       226: goto          238\n-       229: astore        10\n-       231: aload         9\n-       233: aload         10\n-       235: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       238: aload         9\n-       240: athrow\n-       241: astore        8\n-       243: aload         7\n-       245: ifnull        265\n-       248: aload         7\n-       250: invokevirtual #19                 // Method java/io/InputStream.close:()V\n-       253: goto          265\n-       256: astore        9\n-       258: aload         8\n-       260: aload         9\n-       262: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       265: aload         8\n-       267: athrow\n+        81: invokespecial #362                // Method java/lang/StringBuilder.\"<init>\":()V\n+        84: ldc_w         #364                // String Can\\'t compare directories, only files:\n+        87: invokevirtual #366                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: aload         4\n+        92: invokevirtual #370                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        95: invokevirtual #373                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        98: invokespecial #374                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       101: athrow\n+       102: aload         5\n+       104: aload_2\n+       105: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+       108: ifeq          140\n+       111: new           #358                // class java/io/IOException\n+       114: dup\n+       115: new           #360                // class java/lang/StringBuilder\n+       118: dup\n+       119: invokespecial #362                // Method java/lang/StringBuilder.\"<init>\":()V\n+       122: ldc_w         #364                // String Can\\'t compare directories, only files:\n+       125: invokevirtual #366                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       128: aload         5\n+       130: invokevirtual #370                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       133: invokevirtual #373                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       136: invokespecial #374                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       139: athrow\n+       140: aload         4\n+       142: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+       145: aload         5\n+       147: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+       150: lcmp\n+       151: ifeq          156\n+       154: iconst_0\n+       155: ireturn\n+       156: aload_0\n+       157: aload_1\n+       158: invokeinterface #375,  2          // InterfaceMethod java/nio/file/Path.equals:(Ljava/lang/Object;)Z\n+       163: ifeq          168\n+       166: iconst_1\n+       167: ireturn\n+       168: aload         4\n+       170: aload_3\n+       171: invokestatic  #378                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+       174: astore        7\n+       176: aload         5\n+       178: aload_3\n+       179: invokestatic  #378                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+       182: astore        8\n+       184: aload         7\n+       186: aload         8\n+       188: invokestatic  #382                // Method org/apache/commons/io/IOUtils.contentEquals:(Ljava/io/InputStream;Ljava/io/InputStream;)Z\n+       191: istore        9\n+       193: aload         8\n+       195: ifnull        203\n+       198: aload         8\n+       200: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       203: aload         7\n+       205: ifnull        213\n+       208: aload         7\n+       210: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       213: iload         9\n+       215: ireturn\n+       216: astore        9\n+       218: aload         8\n+       220: ifnull        240\n+       223: aload         8\n+       225: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       228: goto          240\n+       231: astore        10\n+       233: aload         9\n+       235: aload         10\n+       237: invokevirtual #79                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       240: aload         9\n+       242: athrow\n+       243: astore        8\n+       245: aload         7\n+       247: ifnull        267\n+       250: aload         7\n+       252: invokevirtual #73                 // Method java/io/InputStream.close:()V\n+       255: goto          267\n+       258: astore        9\n+       260: aload         8\n+       262: aload         9\n+       264: invokevirtual #79                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       267: aload         8\n+       269: athrow\n       Exception table:\n          from    to  target type\n-           182   191   214   Class java/lang/Throwable\n-           221   226   229   Class java/lang/Throwable\n-           174   201   241   Class java/lang/Throwable\n-           214   241   241   Class java/lang/Throwable\n-           248   253   256   Class java/lang/Throwable\n+           184   193   216   Class java/lang/Throwable\n+           223   228   231   Class java/lang/Throwable\n+           176   203   243   Class java/lang/Throwable\n+           216   243   243   Class java/lang/Throwable\n+           250   255   258   Class java/lang/Throwable\n       LineNumberTable:\n         line 718: 0\n         line 719: 8\n         line 721: 10\n         line 722: 18\n         line 724: 20\n         line 725: 28\n         line 726: 36\n         line 727: 44\n         line 728: 55\n         line 730: 57\n         line 733: 62\n         line 735: 64\n         line 737: 73\n-        line 739: 101\n-        line 741: 110\n-        line 743: 138\n-        line 745: 152\n-        line 747: 154\n-        line 749: 164\n-        line 751: 166\n-        line 752: 174\n-        line 753: 182\n-        line 754: 191\n-        line 753: 211\n-        line 751: 214\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          182      59     8 inputStream2   Ljava/io/InputStream;\n-          174      94     7 inputStream1   Ljava/io/InputStream;\n-            0     268     0 path1   Ljava/nio/file/Path;\n-            0     268     1 path2   Ljava/nio/file/Path;\n-            0     268     2 linkOptions   [Ljava/nio/file/LinkOption;\n-            0     268     3 openOptions   [Ljava/nio/file/OpenOption;\n-           28     240     4 nPath1   Ljava/nio/file/Path;\n-           36     232     5 nPath2   Ljava/nio/file/Path;\n-           44     224     6 path1Exists   Z\n+        line 739: 102\n+        line 741: 111\n+        line 743: 140\n+        line 745: 154\n+        line 747: 156\n+        line 749: 166\n+        line 751: 168\n+        line 752: 176\n+        line 753: 184\n+        line 754: 193\n+        line 753: 213\n+        line 751: 216\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          184      59     8 inputStream2   Ljava/io/InputStream;\n+          176      94     7 inputStream1   Ljava/io/InputStream;\n+            0     270     0 path1   Ljava/nio/file/Path;\n+            0     270     1 path2   Ljava/nio/file/Path;\n+            0     270     2 linkOptions   [Ljava/nio/file/LinkOption;\n+            0     270     3 openOptions   [Ljava/nio/file/OpenOption;\n+           28     242     4 nPath1   Ljava/nio/file/Path;\n+           36     234     5 nPath2   Ljava/nio/file/Path;\n+           44     226     6 path1Exists   Z\n       StackMapTable: number_of_entries = 17\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 1 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 36\n           locals = [ class java/nio/file/Path, class java/nio/file/Path, int ]\n         frame_type = 6 /* same */\n-        frame_type = 36 /* same */\n-        frame_type = 36 /* same */\n+        frame_type = 37 /* same */\n+        frame_type = 37 /* same */\n         frame_type = 15 /* same */\n         frame_type = 11 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 34\n           locals = [ class java/io/InputStream, class java/io/InputStream, int ]\n         frame_type = 9 /* same */\n         frame_type = 255 /* full_frame */\n@@ -2490,106 +2489,106 @@\n \n   public static java.nio.file.Path[] filter(org.apache.commons.io.file.PathFilter, java.nio.file.Path...);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;[Ljava/nio/file/Path;)[Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #117                // String filter\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_1\n-         8: ifnonnull     15\n-        11: getstatic     #118                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-        14: areturn\n-        15: aload_0\n-        16: aload_1\n-        17: invokestatic  #119                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-        20: invokestatic  #120                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-        23: invokestatic  #121                // Method filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        26: checkcast     #122                // class java/util/List\n-        29: getstatic     #118                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n-        32: invokeinterface #123,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        37: checkcast     #124                // class \"[Ljava/nio/file/Path;\"\n-        40: areturn\n+         1: ldc_w         #388                // String filter\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_1\n+         9: ifnonnull     16\n+        12: getstatic     #390                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+        15: areturn\n+        16: aload_0\n+        17: aload_1\n+        18: invokestatic  #394                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+        21: invokestatic  #400                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+        24: invokestatic  #406                // Method filterPaths:(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        27: checkcast     #316                // class java/util/List\n+        30: getstatic     #390                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+        33: invokeinterface #410,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        38: checkcast     #414                // class \"[Ljava/nio/file/Path;\"\n+        41: areturn\n       LineNumberTable:\n         line 783: 0\n-        line 784: 7\n-        line 785: 11\n-        line 787: 15\n+        line 784: 8\n+        line 785: 12\n+        line 787: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      41     0 filter   Lorg/apache/commons/io/file/PathFilter;\n-            0      41     1 paths   [Ljava/nio/file/Path;\n+            0      42     0 filter   Lorg/apache/commons/io/file/PathFilter;\n+            0      42     1 paths   [Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 15 /* same */\n+        frame_type = 16 /* same */\n \n   private static <R extends java.lang.Object, A extends java.lang.Object> R filterPaths(org.apache.commons.io.file.PathFilter, java.util.stream.Stream<java.nio.file.Path>, java.util.stream.Collector<? super java.nio.file.Path, A, R>);\n     descriptor: (Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream;Ljava/util/stream/Collector;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: ldc           #117                // String filter\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_2\n-         8: ldc           #125                // String collector\n-        10: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        13: pop\n-        14: aload_1\n-        15: ifnonnull     28\n-        18: invokestatic  #126                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n-        21: aload_2\n-        22: invokeinterface #127,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        27: areturn\n-        28: aload_1\n-        29: aload_0\n-        30: invokedynamic #128,  0            // InvokeDynamic #2:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n-        35: invokeinterface #129,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n-        40: aload_2\n-        41: invokeinterface #127,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        46: areturn\n+         1: ldc_w         #388                // String filter\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_2\n+         9: ldc_w         #415                // String collector\n+        12: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        15: pop\n+        16: aload_1\n+        17: ifnonnull     30\n+        20: invokestatic  #417                // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;\n+        23: aload_2\n+        24: invokeinterface #421,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        29: areturn\n+        30: aload_1\n+        31: aload_0\n+        32: invokedynamic #425,  0            // InvokeDynamic #2:test:(Lorg/apache/commons/io/file/PathFilter;)Ljava/util/function/Predicate;\n+        37: invokeinterface #429,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+        42: aload_2\n+        43: invokeinterface #421,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        48: areturn\n       LineNumberTable:\n         line 791: 0\n-        line 792: 7\n-        line 793: 14\n-        line 794: 18\n-        line 796: 28\n-        line 802: 41\n-        line 796: 46\n+        line 792: 8\n+        line 793: 16\n+        line 794: 20\n+        line 796: 30\n+        line 802: 43\n+        line 796: 48\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      47     0 filter   Lorg/apache/commons/io/file/PathFilter;\n-            0      47     1 stream   Ljava/util/stream/Stream;\n-            0      47     2 collector   Ljava/util/stream/Collector;\n+            0      49     0 filter   Lorg/apache/commons/io/file/PathFilter;\n+            0      49     1 stream   Ljava/util/stream/Stream;\n+            0      49     2 collector   Ljava/util/stream/Collector;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      47     1 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n-            0      47     2 collector   Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n+            0      49     1 stream   Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+            0      49     2 collector   Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 28 /* same */\n-    Signature: #416                         // <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n+        frame_type = 30 /* same */\n+    Signature: #978                         // <R:Ljava/lang/Object;A:Ljava/lang/Object;>(Lorg/apache/commons/io/file/PathFilter;Ljava/util/stream/Stream<Ljava/nio/file/Path;>;Ljava/util/stream/Collector<-Ljava/nio/file/Path;TA;TR;>;)TR;\n \n   public static java.util.List<java.nio.file.attribute.AclEntry> getAclEntryList(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #47                 // class java/nio/file/LinkOption\n-         5: invokestatic  #130                // Method getAclFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n+         2: anewarray     #142                // class java/nio/file/LinkOption\n+         5: invokestatic  #432                // Method getAclFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n          8: astore_1\n          9: aload_1\n         10: ifnonnull     17\n         13: aconst_null\n         14: goto          23\n         17: aload_1\n-        18: invokeinterface #131,  1          // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n+        18: invokeinterface #436,  1          // InterfaceMethod java/nio/file/attribute/AclFileAttributeView.getAcl:()Ljava/util/List;\n         23: areturn\n       LineNumberTable:\n         line 814: 0\n         line 815: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0 sourcePath   Ljava/nio/file/Path;\n@@ -2598,62 +2597,62 @@\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ class java/nio/file/attribute/AclFileAttributeView ]\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/util/List ]\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #422                         // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n+    Signature: #984                         // (Ljava/nio/file/Path;)Ljava/util/List<Ljava/nio/file/attribute/AclEntry;>;\n \n   public static java.nio.file.attribute.AclFileAttributeView getAclFileAttributeView(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/AclFileAttributeView;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #132                // class java/nio/file/attribute/AclFileAttributeView\n-         3: aload_1\n-         4: invokestatic  #133                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-         7: checkcast     #132                // class java/nio/file/attribute/AclFileAttributeView\n-        10: areturn\n+         1: ldc_w         #437                // class java/nio/file/attribute/AclFileAttributeView\n+         4: aload_1\n+         5: invokestatic  #442                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+         8: checkcast     #437                // class java/nio/file/attribute/AclFileAttributeView\n+        11: areturn\n       LineNumberTable:\n         line 827: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n-            0      11     1 options   [Ljava/nio/file/LinkOption;\n+            0      12     0  path   Ljava/nio/file/Path;\n+            0      12     1 options   [Ljava/nio/file/LinkOption;\n \n   public static java.nio.file.attribute.DosFileAttributeView getDosFileAttributeView(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #134                // class java/nio/file/attribute/DosFileAttributeView\n-         3: aload_1\n-         4: invokestatic  #133                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-         7: checkcast     #134                // class java/nio/file/attribute/DosFileAttributeView\n-        10: areturn\n+         1: ldc_w         #446                // class java/nio/file/attribute/DosFileAttributeView\n+         4: aload_1\n+         5: invokestatic  #442                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+         8: checkcast     #446                // class java/nio/file/attribute/DosFileAttributeView\n+        11: areturn\n       LineNumberTable:\n         line 839: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n-            0      11     1 options   [Ljava/nio/file/LinkOption;\n+            0      12     0  path   Ljava/nio/file/Path;\n+            0      12     1 options   [Ljava/nio/file/LinkOption;\n \n   public static java.nio.file.attribute.FileTime getLastModifiedFileTime(java.io.File) throws java.io.IOException;\n     descriptor: (Ljava/io/File;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #135                // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         1: invokevirtual #448                // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          4: aconst_null\n-         5: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         8: invokestatic  #136                // Method getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+         5: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         8: invokestatic  #451                // Method getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 856: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  file   Ljava/io/File;\n     Exceptions:\n@@ -2662,20 +2661,20 @@\n   public static java.nio.file.attribute.FileTime getLastModifiedFileTime(java.nio.file.Path, java.nio.file.attribute.FileTime, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #47                 // class java/nio/file/LinkOption\n-         5: invokestatic  #104                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #142                // class java/nio/file/LinkOption\n+         5: invokestatic  #354                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          19\n         11: aload_0\n         12: aload_2\n-        13: invokestatic  #14                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        13: invokestatic  #49                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n         16: goto          20\n         19: aload_1\n         20: areturn\n       LineNumberTable:\n         line 870: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2693,15 +2692,15 @@\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aconst_null\n          2: aload_1\n-         3: invokestatic  #136                // Method getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+         3: invokestatic  #451                // Method getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n          6: areturn\n       LineNumberTable:\n         line 883: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  path   Ljava/nio/file/Path;\n             0       7     1 options   [Ljava/nio/file/LinkOption;\n@@ -2710,18 +2709,18 @@\n \n   public static java.nio.file.attribute.FileTime getLastModifiedFileTime(java.net.URI) throws java.io.IOException;\n     descriptor: (Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #137                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+         1: invokestatic  #455                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n          4: aconst_null\n-         5: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         8: invokestatic  #136                // Method getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+         5: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         8: invokestatic  #451                // Method getLastModifiedFileTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n         11: areturn\n       LineNumberTable:\n         line 895: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0   uri   Ljava/net/URI;\n     Exceptions:\n@@ -2729,16 +2728,16 @@\n \n   public static java.nio.file.attribute.FileTime getLastModifiedFileTime(java.net.URL) throws java.io.IOException, java.net.URISyntaxException;\n     descriptor: (Ljava/net/URL;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #138                // Method java/net/URL.toURI:()Ljava/net/URI;\n-         4: invokestatic  #139                // Method getLastModifiedFileTime:(Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n+         1: invokevirtual #458                // Method java/net/URL.toURI:()Ljava/net/URI;\n+         4: invokestatic  #462                // Method getLastModifiedFileTime:(Ljava/net/URI;)Ljava/nio/file/attribute/FileTime;\n          7: areturn\n       LineNumberTable:\n         line 909: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0   url   Ljava/net/URL;\n     Exceptions:\n@@ -2746,40 +2745,40 @@\n \n   private static java.nio.file.attribute.FileTime getLastModifiedTime(java.nio.file.Path, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #102                // String path\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: checkcast     #95                 // class java/nio/file/Path\n-         9: aload_1\n-        10: invokestatic  #140                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-        13: areturn\n+         1: ldc_w         #349                // String path\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #84                 // class java/nio/file/Path\n+        10: aload_1\n+        11: invokestatic  #465                // Method java/nio/file/Files.getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        14: areturn\n       LineNumberTable:\n         line 913: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      14     0  path   Ljava/nio/file/Path;\n-            0      14     1 options   [Ljava/nio/file/LinkOption;\n+            0      15     0  path   Ljava/nio/file/Path;\n+            0      15     1 options   [Ljava/nio/file/LinkOption;\n     Exceptions:\n       throws java.io.IOException\n \n   private static java.nio.file.Path getParent(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n          4: aconst_null\n          5: goto          14\n          8: aload_0\n-         9: invokeinterface #141,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n+         9: invokeinterface #466,  1          // InterfaceMethod java/nio/file/Path.getParent:()Ljava/nio/file/Path;\n         14: areturn\n       LineNumberTable:\n         line 917: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  path   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n@@ -2789,49 +2788,49 @@\n \n   public static java.nio.file.attribute.PosixFileAttributeView getPosixFileAttributeView(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributeView;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #142                // class java/nio/file/attribute/PosixFileAttributeView\n-         3: aload_1\n-         4: invokestatic  #133                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n-         7: checkcast     #142                // class java/nio/file/attribute/PosixFileAttributeView\n-        10: areturn\n+         1: ldc_w         #468                // class java/nio/file/attribute/PosixFileAttributeView\n+         4: aload_1\n+         5: invokestatic  #442                // Method java/nio/file/Files.getFileAttributeView:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileAttributeView;\n+         8: checkcast     #468                // class java/nio/file/attribute/PosixFileAttributeView\n+        11: areturn\n       LineNumberTable:\n         line 929: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n-            0      11     1 options   [Ljava/nio/file/LinkOption;\n+            0      12     0  path   Ljava/nio/file/Path;\n+            0      12     1 options   [Ljava/nio/file/LinkOption;\n \n   public static java.nio.file.Path getTempDirectory();\n     descriptor: ()Ljava/nio/file/Path;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: invokestatic  #143                // Method org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n+         0: invokestatic  #470                // Method org/apache/commons/io/FileUtils.getTempDirectoryPath:()Ljava/lang/String;\n          3: iconst_0\n-         4: anewarray     #10                 // class java/lang/String\n-         7: invokestatic  #45                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+         4: anewarray     #37                 // class java/lang/String\n+         7: invokestatic  #163                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n         10: areturn\n       LineNumberTable:\n         line 939: 0\n \n   public static boolean isDirectory(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        16\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          9: ifeq          16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n         line 955: 0\n@@ -2847,22 +2846,22 @@\n   public static boolean isEmpty(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #47                 // class java/nio/file/LinkOption\n-         5: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #142                // class java/nio/file/LinkOption\n+         5: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          18\n         11: aload_0\n-        12: invokestatic  #144                // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+        12: invokestatic  #475                // Method isEmptyDirectory:(Ljava/nio/file/Path;)Z\n         15: goto          22\n         18: aload_0\n-        19: invokestatic  #145                // Method isEmptyFile:(Ljava/nio/file/Path;)Z\n+        19: invokestatic  #478                // Method isEmptyFile:(Ljava/nio/file/Path;)Z\n         22: ireturn\n       LineNumberTable:\n         line 966: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  path   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n@@ -2874,40 +2873,40 @@\n \n   public static boolean isEmptyDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #146                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n+         1: invokestatic  #481                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;)Ljava/nio/file/DirectoryStream;\n          4: astore_1\n          5: aload_1\n-         6: invokeinterface #147,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n-        11: invokeinterface #93,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         6: invokeinterface #485,  1          // InterfaceMethod java/nio/file/DirectoryStream.iterator:()Ljava/util/Iterator;\n+        11: invokeinterface #321,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         16: ifne          23\n         19: iconst_1\n         20: goto          24\n         23: iconst_0\n         24: istore_2\n         25: aload_1\n         26: ifnull        35\n         29: aload_1\n-        30: invokeinterface #148,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        30: invokeinterface #488,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         35: iload_2\n         36: ireturn\n         37: astore_2\n         38: aload_1\n         39: ifnull        57\n         42: aload_1\n-        43: invokeinterface #148,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n+        43: invokeinterface #488,  1          // InterfaceMethod java/nio/file/DirectoryStream.close:()V\n         48: goto          57\n         51: astore_3\n         52: aload_2\n         53: aload_3\n-        54: invokevirtual #21                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        54: invokevirtual #79                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         57: aload_2\n         58: athrow\n       Exception table:\n          from    to  target type\n              5    25    37   Class java/lang/Throwable\n             42    48    51   Class java/lang/Throwable\n       LineNumberTable:\n@@ -2946,15 +2945,15 @@\n \n   public static boolean isEmptyFile(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+         1: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n          4: lconst_0\n          5: lcmp\n          6: ifgt          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n@@ -2972,54 +2971,54 @@\n \n   public static boolean isNewer(java.nio.file.Path, java.time.chrono.ChronoZonedDateTime<?>, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n-         1: ldc           #149                // String czdt\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_0\n-         8: aload_1\n-         9: invokeinterface #150,  1          // InterfaceMethod java/time/chrono/ChronoZonedDateTime.toInstant:()Ljava/time/Instant;\n-        14: aload_2\n-        15: invokestatic  #151                // Method isNewer:(Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n-        18: ireturn\n+         1: ldc_w         #489                // String czdt\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_0\n+         9: aload_1\n+        10: invokeinterface #491,  1          // InterfaceMethod java/time/chrono/ChronoZonedDateTime.toInstant:()Ljava/time/Instant;\n+        15: aload_2\n+        16: invokestatic  #497                // Method isNewer:(Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n+        19: ireturn\n       LineNumberTable:\n         line 1011: 0\n-        line 1012: 7\n+        line 1012: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     0  file   Ljava/nio/file/Path;\n-            0      19     1  czdt   Ljava/time/chrono/ChronoZonedDateTime;\n-            0      19     2 options   [Ljava/nio/file/LinkOption;\n+            0      20     0  file   Ljava/nio/file/Path;\n+            0      20     1  czdt   Ljava/time/chrono/ChronoZonedDateTime;\n+            0      20     2 options   [Ljava/nio/file/LinkOption;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     1  czdt   Ljava/time/chrono/ChronoZonedDateTime<*>;\n+            0      20     1  czdt   Ljava/time/chrono/ChronoZonedDateTime<*>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #460                         // (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime<*>;[Ljava/nio/file/LinkOption;)Z\n+    Signature: #1004                        // (Ljava/nio/file/Path;Ljava/time/chrono/ChronoZonedDateTime<*>;[Ljava/nio/file/LinkOption;)Z\n \n   public static boolean isNewer(java.nio.file.Path, java.nio.file.attribute.FileTime, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #47                 // class java/nio/file/LinkOption\n-         5: invokestatic  #84                 // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #142                // class java/nio/file/LinkOption\n+         5: invokestatic  #293                // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          13\n         11: iconst_0\n         12: ireturn\n         13: aload_0\n         14: aload_1\n         15: aload_2\n-        16: invokestatic  #152                // Method compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n+        16: invokestatic  #501                // Method compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n         19: ifle          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: ireturn\n       LineNumberTable:\n         line 1027: 0\n@@ -3041,17 +3040,17 @@\n   public static boolean isNewer(java.nio.file.Path, java.time.Instant, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #153                // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         2: invokestatic  #505                // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n          5: aload_2\n-         6: invokestatic  #154                // Method isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #509                // Method isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1045: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  file   Ljava/nio/file/Path;\n             0      10     1 instant   Ljava/time/Instant;\n@@ -3062,17 +3061,17 @@\n   public static boolean isNewer(java.nio.file.Path, long, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: lload_1\n-         2: invokestatic  #155                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+         2: invokestatic  #512                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n          5: aload_3\n-         6: invokestatic  #154                // Method isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #509                // Method isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1060: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  file   Ljava/nio/file/Path;\n             0      10     1 timeMillis   J\n@@ -3084,19 +3083,19 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: anewarray     #47                 // class java/nio/file/LinkOption\n-         6: invokestatic  #14                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+         3: anewarray     #142                // class java/nio/file/LinkOption\n+         6: invokestatic  #49                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n          9: iconst_0\n-        10: anewarray     #47                 // class java/nio/file/LinkOption\n-        13: invokestatic  #154                // Method isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+        10: anewarray     #142                // class java/nio/file/LinkOption\n+        13: invokestatic  #509                // Method isNewer:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n         16: ireturn\n       LineNumberTable:\n         line 1073: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  file   Ljava/nio/file/Path;\n             0      17     1 reference   Ljava/nio/file/Path;\n@@ -3106,23 +3105,23 @@\n   public static boolean isOlder(java.nio.file.Path, java.nio.file.attribute.FileTime, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iconst_0\n-         2: anewarray     #47                 // class java/nio/file/LinkOption\n-         5: invokestatic  #84                 // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: anewarray     #142                // class java/nio/file/LinkOption\n+         5: invokestatic  #293                // Method notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          8: ifeq          13\n         11: iconst_0\n         12: ireturn\n         13: aload_0\n         14: aload_1\n         15: aload_2\n-        16: invokestatic  #152                // Method compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n+        16: invokestatic  #501                // Method compareLastModifiedTimeTo:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)I\n         19: ifge          26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: ireturn\n       LineNumberTable:\n         line 1088: 0\n@@ -3144,17 +3143,17 @@\n   public static boolean isOlder(java.nio.file.Path, java.time.Instant, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/time/Instant;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #153                // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n+         2: invokestatic  #505                // Method java/nio/file/attribute/FileTime.from:(Ljava/time/Instant;)Ljava/nio/file/attribute/FileTime;\n          5: aload_2\n-         6: invokestatic  #156                // Method isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #516                // Method isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1106: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  file   Ljava/nio/file/Path;\n             0      10     1 instant   Ljava/time/Instant;\n@@ -3165,17 +3164,17 @@\n   public static boolean isOlder(java.nio.file.Path, long, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;J[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: lload_1\n-         2: invokestatic  #155                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n+         2: invokestatic  #512                // Method java/nio/file/attribute/FileTime.fromMillis:(J)Ljava/nio/file/attribute/FileTime;\n          5: aload_3\n-         6: invokestatic  #156                // Method isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #516                // Method isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1121: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  file   Ljava/nio/file/Path;\n             0      10     1 timeMillis   J\n@@ -3187,19 +3186,19 @@\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: anewarray     #47                 // class java/nio/file/LinkOption\n-         6: invokestatic  #14                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+         3: anewarray     #142                // class java/nio/file/LinkOption\n+         6: invokestatic  #49                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n          9: iconst_0\n-        10: anewarray     #47                 // class java/nio/file/LinkOption\n-        13: invokestatic  #156                // Method isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n+        10: anewarray     #142                // class java/nio/file/LinkOption\n+        13: invokestatic  #516                // Method isOlder:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;[Ljava/nio/file/LinkOption;)Z\n         16: ireturn\n       LineNumberTable:\n         line 1134: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  file   Ljava/nio/file/Path;\n             0      17     1 reference   Ljava/nio/file/Path;\n@@ -3209,19 +3208,19 @@\n   public static boolean isPosix(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifeq          20\n          8: aload_0\n          9: aload_1\n-        10: invokestatic  #73                 // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+        10: invokestatic  #250                // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n         13: ifnull        20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n       LineNumberTable:\n         line 1146: 0\n@@ -3239,15 +3238,15 @@\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ifnull        16\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #157                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         6: invokestatic  #519                // Method java/nio/file/Files.isRegularFile:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          9: ifeq          16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n         line 1162: 0\n@@ -3262,43 +3261,43 @@\n \n   public static java.nio.file.DirectoryStream<java.nio.file.Path> newDirectoryStream(java.nio.file.Path, org.apache.commons.io.file.PathFilter) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #158                // class org/apache/commons/io/file/DirectoryStreamFilter\n+         1: new           #522                // class org/apache/commons/io/file/DirectoryStreamFilter\n          4: dup\n          5: aload_1\n-         6: invokespecial #159                // Method org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n-         9: invokestatic  #160                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n+         6: invokespecial #524                // Method org/apache/commons/io/file/DirectoryStreamFilter.\"<init>\":(Lorg/apache/commons/io/file/PathFilter;)V\n+         9: invokestatic  #527                // Method java/nio/file/Files.newDirectoryStream:(Ljava/nio/file/Path;Ljava/nio/file/DirectoryStream$Filter;)Ljava/nio/file/DirectoryStream;\n         12: areturn\n       LineNumberTable:\n         line 1174: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0   dir   Ljava/nio/file/Path;\n             0      13     1 pathFilter   Lorg/apache/commons/io/file/PathFilter;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #476                         // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n+    Signature: #1013                        // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;)Ljava/nio/file/DirectoryStream<Ljava/nio/file/Path;>;\n \n   public static java.io.OutputStream newOutputStream(java.nio.file.Path, boolean) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Z)Ljava/io/OutputStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         1: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n          4: iload_1\n          5: ifeq          14\n-         8: getstatic     #161                // Field OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n+         8: getstatic     #530                // Field OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n         11: goto          17\n-        14: getstatic     #162                // Field OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n-        17: invokestatic  #163                // Method newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+        14: getstatic     #533                // Field OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n+        17: invokestatic  #536                // Method newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n         20: areturn\n       LineNumberTable:\n         line 1189: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  path   Ljava/nio/file/Path;\n             0      21     1 append   Z\n@@ -3317,56 +3316,56 @@\n   static java.io.OutputStream newOutputStream(java.nio.file.Path, java.nio.file.LinkOption[], java.nio.file.OpenOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n     flags: (0x0088) ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+         2: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n          5: ifne          35\n          8: aload_0\n          9: aload_1\n         10: ifnull        24\n         13: aload_1\n         14: arraylength\n         15: ifle          24\n         18: aload_1\n         19: iconst_0\n         20: aaload\n         21: goto          27\n-        24: getstatic     #164                // Field NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n+        24: getstatic     #540                // Field NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n         27: iconst_0\n-        28: anewarray     #165                // class java/nio/file/attribute/FileAttribute\n-        31: invokestatic  #40                 // Method createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        28: anewarray     #543                // class java/nio/file/attribute/FileAttribute\n+        31: invokestatic  #147                // Method createParentDirectories:(Ljava/nio/file/Path;Ljava/nio/file/LinkOption;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n         34: pop\n-        35: new           #166                // class java/util/ArrayList\n+        35: new           #545                // class java/util/ArrayList\n         38: dup\n         39: aload_2\n         40: ifnull        47\n         43: aload_2\n         44: goto          50\n-        47: getstatic     #81                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-        50: invokestatic  #167                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        53: invokespecial #168                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        47: getstatic     #281                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+        50: invokestatic  #547                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        53: invokespecial #553                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n         56: astore_3\n         57: aload_3\n         58: aload_1\n         59: ifnull        66\n         62: aload_1\n         63: goto          69\n-        66: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-        69: invokestatic  #167                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        72: invokeinterface #169,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n+        66: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+        69: invokestatic  #547                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        72: invokeinterface #556,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n         77: pop\n         78: aload_0\n         79: aload_3\n-        80: getstatic     #81                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n-        83: invokeinterface #123,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        88: checkcast     #170                // class \"[Ljava/nio/file/OpenOption;\"\n-        91: invokestatic  #171                // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+        80: getstatic     #281                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+        83: invokeinterface #410,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        88: checkcast     #560                // class \"[Ljava/nio/file/OpenOption;\"\n+        91: invokestatic  #561                // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n         94: areturn\n       LineNumberTable:\n         line 1193: 0\n         line 1194: 8\n         line 1196: 35\n         line 1197: 57\n         line 1198: 78\n@@ -3407,53 +3406,53 @@\n       throws java.io.IOException\n \n   public static java.nio.file.LinkOption[] noFollowLinkOptionArray();\n     descriptor: ()[Ljava/nio/file/LinkOption;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #172                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         3: invokevirtual #173                // Method \"[Ljava/nio/file/LinkOption;\".clone:()Ljava/lang/Object;\n-         6: checkcast     #174                // class \"[Ljava/nio/file/LinkOption;\"\n+         0: getstatic     #564                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         3: invokevirtual #567                // Method \"[Ljava/nio/file/LinkOption;\".clone:()Ljava/lang/Object;\n+         6: checkcast     #568                // class \"[Ljava/nio/file/LinkOption;\"\n          9: areturn\n       LineNumberTable:\n         line 1207: 0\n \n   private static boolean notExists(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #102                // String path\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: checkcast     #95                 // class java/nio/file/Path\n-         9: aload_1\n-        10: invokestatic  #175                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        13: ireturn\n+         1: ldc_w         #349                // String path\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #84                 // class java/nio/file/Path\n+        10: aload_1\n+        11: invokestatic  #571                // Method java/nio/file/Files.notExists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        14: ireturn\n       LineNumberTable:\n         line 1211: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      14     0  path   Ljava/nio/file/Path;\n-            0      14     1 options   [Ljava/nio/file/LinkOption;\n+            0      15     0  path   Ljava/nio/file/Path;\n+            0      15     1 options   [Ljava/nio/file/LinkOption;\n \n   private static boolean overrideReadOnly(org.apache.commons.io.file.DeleteOption...);\n     descriptor: ([Lorg/apache/commons/io/file/DeleteOption;)Z\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #119                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-        10: invokedynamic #176,  0            // InvokeDynamic #3:test:()Ljava/util/function/Predicate;\n-        15: invokeinterface #177,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+         7: invokestatic  #394                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+        10: invokedynamic #572,  0            // InvokeDynamic #3:test:()Ljava/util/function/Predicate;\n+        15: invokeinterface #575,  2          // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n         20: ireturn\n       LineNumberTable:\n         line 1221: 0\n         line 1222: 4\n         line 1224: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -3466,20 +3465,20 @@\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n          4: aconst_null\n          5: goto          22\n-         8: invokedynamic #178,  0            // InvokeDynamic #4:apply:()Lorg/apache/commons/io/function/IOTriFunction;\n+         8: invokedynamic #579,  0            // InvokeDynamic #4:apply:()Lorg/apache/commons/io/function/IOTriFunction;\n         13: aload_0\n         14: aload_1\n         15: aload_2\n-        16: invokestatic  #179                // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        19: checkcast     #180                // class java/nio/file/attribute/BasicFileAttributes\n+        16: invokestatic  #582                // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOTriFunction;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        19: checkcast     #587                // class java/nio/file/attribute/BasicFileAttributes\n         22: areturn\n         23: astore_3\n         24: aconst_null\n         25: areturn\n       Exception table:\n          from    to  target type\n              0    22    23   Class java/lang/UnsupportedOperationException\n@@ -3498,105 +3497,105 @@\n             0      26     1  type   Ljava/lang/Class<TA;>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 8 /* same */\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/attribute/BasicFileAttributes ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/UnsupportedOperationException ]\n-    Signature: #495                         // <A::Ljava/nio/file/attribute/BasicFileAttributes;>(Ljava/nio/file/Path;Ljava/lang/Class<TA;>;[Ljava/nio/file/LinkOption;)TA;\n+    Signature: #1022                        // <A::Ljava/nio/file/attribute/BasicFileAttributes;>(Ljava/nio/file/Path;Ljava/lang/Class<TA;>;[Ljava/nio/file/LinkOption;)TA;\n \n   public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributes(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #180                // class java/nio/file/attribute/BasicFileAttributes\n-         3: iconst_0\n-         4: anewarray     #47                 // class java/nio/file/LinkOption\n-         7: invokestatic  #182                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        10: areturn\n+         1: ldc_w         #587                // class java/nio/file/attribute/BasicFileAttributes\n+         4: iconst_0\n+         5: anewarray     #142                // class java/nio/file/LinkOption\n+         8: invokestatic  #591                // Method java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        11: areturn\n       LineNumberTable:\n         line 1259: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n+            0      12     0  path   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #293()\n+      0: #907()\n         java.lang.Deprecated\n \n   public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributes(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #180                // class java/nio/file/attribute/BasicFileAttributes\n-         3: aload_1\n-         4: invokestatic  #183                // Method readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-         7: areturn\n+         1: ldc_w         #587                // class java/nio/file/attribute/BasicFileAttributes\n+         4: aload_1\n+         5: invokestatic  #595                // Method readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         8: areturn\n       LineNumberTable:\n         line 1272: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       8     0  path   Ljava/nio/file/Path;\n-            0       8     1 options   [Ljava/nio/file/LinkOption;\n+            0       9     0  path   Ljava/nio/file/Path;\n+            0       9     1 options   [Ljava/nio/file/LinkOption;\n \n   public static java.nio.file.attribute.BasicFileAttributes readBasicFileAttributesUnchecked(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n-         4: invokestatic  #184                // Method readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         1: getstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+         4: invokestatic  #596                // Method readBasicFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n          7: areturn\n       LineNumberTable:\n         line 1287: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  path   Ljava/nio/file/Path;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #293()\n+      0: #907()\n         java.lang.Deprecated\n \n   public static java.nio.file.attribute.DosFileAttributes readDosFileAttributes(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #185                // class java/nio/file/attribute/DosFileAttributes\n-         3: aload_1\n-         4: invokestatic  #183                // Method readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-         7: checkcast     #185                // class java/nio/file/attribute/DosFileAttributes\n-        10: areturn\n+         1: ldc_w         #600                // class java/nio/file/attribute/DosFileAttributes\n+         4: aload_1\n+         5: invokestatic  #595                // Method readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         8: checkcast     #600                // class java/nio/file/attribute/DosFileAttributes\n+        11: areturn\n       LineNumberTable:\n         line 1300: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n-            0      11     1 options   [Ljava/nio/file/LinkOption;\n+            0      12     0  path   Ljava/nio/file/Path;\n+            0      12     1 options   [Ljava/nio/file/LinkOption;\n \n   private static java.nio.file.Path readIfSymbolicLink(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        22\n          4: aload_0\n-         5: invokestatic  #65                 // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n+         5: invokestatic  #221                // Method java/nio/file/Files.isSymbolicLink:(Ljava/nio/file/Path;)Z\n          8: ifeq          18\n         11: aload_0\n-        12: invokestatic  #186                // Method java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+        12: invokestatic  #602                // Method java/nio/file/Files.readSymbolicLink:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n         15: goto          23\n         18: aload_0\n         19: goto          23\n         22: aconst_null\n         23: areturn\n       LineNumberTable:\n         line 1304: 0\n@@ -3614,23 +3613,23 @@\n   public static java.nio.file.attribute.BasicFileAttributes readOsFileAttributes(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #73                 // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+         2: invokestatic  #250                // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n          5: astore_2\n          6: aload_2\n          7: ifnull        14\n         10: aload_2\n         11: goto          19\n         14: aload_0\n         15: aload_1\n-        16: invokestatic  #187                // Method readDosFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n+        16: invokestatic  #605                // Method readDosFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributes;\n         19: areturn\n       LineNumberTable:\n         line 1317: 0\n         line 1318: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  path   Ljava/nio/file/Path;\n@@ -3645,38 +3644,38 @@\n \n   public static java.nio.file.attribute.PosixFileAttributes readPosixFileAttributes(java.nio.file.Path, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #188                // class java/nio/file/attribute/PosixFileAttributes\n-         3: aload_1\n-         4: invokestatic  #183                // Method readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-         7: checkcast     #188                // class java/nio/file/attribute/PosixFileAttributes\n-        10: areturn\n+         1: ldc_w         #259                // class java/nio/file/attribute/PosixFileAttributes\n+         4: aload_1\n+         5: invokestatic  #595                // Method readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         8: checkcast     #259                // class java/nio/file/attribute/PosixFileAttributes\n+        11: areturn\n       LineNumberTable:\n         line 1331: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  path   Ljava/nio/file/Path;\n-            0      11     1 options   [Ljava/nio/file/LinkOption;\n+            0      12     0  path   Ljava/nio/file/Path;\n+            0      12     1 options   [Ljava/nio/file/LinkOption;\n \n   public static java.lang.String readString(java.nio.file.Path, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #10                 // class java/lang/String\n+         0: new           #37                 // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: invokestatic  #189                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n+         5: invokestatic  #609                // Method java/nio/file/Files.readAllBytes:(Ljava/nio/file/Path;)[B\n          8: aload_1\n-         9: invokestatic  #190                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-        12: invokespecial #191                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n+         9: invokestatic  #613                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+        12: invokespecial #619                // Method java/lang/String.\"<init>\":([BLjava/nio/charset/Charset;)V\n         15: areturn\n       LineNumberTable:\n         line 1345: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  path   Ljava/nio/file/Path;\n             0      16     1 charset   Ljava/nio/charset/Charset;\n@@ -3685,37 +3684,37 @@\n \n   static java.util.List<java.nio.file.Path> relativize(java.util.Collection<java.nio.file.Path>, java.nio.file.Path, boolean, java.util.Comparator<? super java.nio.file.Path>);\n     descriptor: (Ljava/util/Collection;Ljava/nio/file/Path;ZLjava/util/Comparator;)Ljava/util/List;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=4\n          0: aload_0\n-         1: invokeinterface #192,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n+         1: invokeinterface #622,  1          // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;\n          6: aload_1\n          7: dup\n-         8: invokestatic  #26                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         8: invokestatic  #95                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n         11: pop\n-        12: invokedynamic #193,  0            // InvokeDynamic #5:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n-        17: invokeinterface #194,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n+        12: invokedynamic #627,  0            // InvokeDynamic #5:apply:(Ljava/nio/file/Path;)Ljava/util/function/Function;\n+        17: invokeinterface #630,  2          // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;\n         22: astore        4\n         24: iload_2\n         25: ifeq          52\n         28: aload_3\n         29: ifnonnull     42\n         32: aload         4\n-        34: invokeinterface #195,  1          // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n+        34: invokeinterface #634,  1          // InterfaceMethod java/util/stream/Stream.sorted:()Ljava/util/stream/Stream;\n         39: goto          50\n         42: aload         4\n         44: aload_3\n-        45: invokeinterface #196,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n+        45: invokeinterface #637,  2          // InterfaceMethod java/util/stream/Stream.sorted:(Ljava/util/Comparator;)Ljava/util/stream/Stream;\n         50: astore        4\n         52: aload         4\n-        54: invokestatic  #120                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n-        57: invokeinterface #127,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        62: checkcast     #122                // class java/util/List\n+        54: invokestatic  #400                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;\n+        57: invokeinterface #421,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        62: checkcast     #316                // class java/util/List\n         65: areturn\n       LineNumberTable:\n         line 1358: 0\n         line 1359: 24\n         line 1360: 28\n         line 1362: 52\n       LocalVariableTable:\n@@ -3733,76 +3732,76 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 42\n           locals = [ class java/util/stream/Stream ]\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/util/stream/Stream ]\n         frame_type = 1 /* same */\n-    Signature: #521                         // (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n+    Signature: #1038                        // (Ljava/util/Collection<Ljava/nio/file/Path;>;Ljava/nio/file/Path;ZLjava/util/Comparator<-Ljava/nio/file/Path;>;)Ljava/util/List<Ljava/nio/file/Path;>;\n \n   private static java.nio.file.Path requireExists(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         2: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          5: pop\n          6: aload_0\n          7: aload_2\n-         8: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        11: ifne          55\n-        14: new           #197                // class java/lang/IllegalArgumentException\n+         8: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        11: ifne          58\n+        14: new           #640                // class java/lang/IllegalArgumentException\n         17: dup\n-        18: new           #107                // class java/lang/StringBuilder\n+        18: new           #360                // class java/lang/StringBuilder\n         21: dup\n-        22: invokespecial #108                // Method java/lang/StringBuilder.\"<init>\":()V\n-        25: ldc           #198                // String File system element for parameter \\'\n-        27: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: aload_1\n-        31: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: ldc           #199                // String \\' does not exist: \\'\n-        36: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: aload_0\n-        40: invokevirtual #111                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        43: ldc           #200                // String \\'\n-        45: invokevirtual #110                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: invokevirtual #112                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        51: invokespecial #201                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        54: athrow\n-        55: aload_0\n-        56: areturn\n+        22: invokespecial #362                // Method java/lang/StringBuilder.\"<init>\":()V\n+        25: ldc_w         #642                // String File system element for parameter \\'\n+        28: invokevirtual #366                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: aload_1\n+        32: invokevirtual #366                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: ldc_w         #644                // String \\' does not exist: \\'\n+        38: invokevirtual #366                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: aload_0\n+        42: invokevirtual #370                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        45: ldc_w         #646                // String \\'\n+        48: invokevirtual #366                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #373                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokespecial #648                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        57: athrow\n+        58: aload_0\n+        59: areturn\n       LineNumberTable:\n         line 1376: 0\n         line 1377: 6\n         line 1378: 14\n-        line 1380: 55\n+        line 1380: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      57     0  file   Ljava/nio/file/Path;\n-            0      57     1 fileParamName   Ljava/lang/String;\n-            0      57     2 options   [Ljava/nio/file/LinkOption;\n+            0      60     0  file   Ljava/nio/file/Path;\n+            0      60     1 fileParamName   Ljava/lang/String;\n+            0      60     2 options   [Ljava/nio/file/LinkOption;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 55 /* same */\n+        frame_type = 58 /* same */\n \n   private static boolean setDosReadOnly(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=4, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokestatic  #202                // Method getDosFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n+         2: invokestatic  #649                // Method getDosFileAttributeView:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/DosFileAttributeView;\n          5: astore_3\n          6: aload_3\n          7: ifnull        19\n         10: aload_3\n         11: iload_1\n-        12: invokeinterface #203,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n+        12: invokeinterface #653,  2          // InterfaceMethod java/nio/file/attribute/DosFileAttributeView.setReadOnly:(Z)V\n         17: iconst_1\n         18: ireturn\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n         line 1384: 0\n         line 1385: 6\n@@ -3824,56 +3823,56 @@\n \n   public static void setLastModifiedTime(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/Path;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #204                // String sourceFile\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_1\n-         8: aload_0\n-         9: iconst_0\n-        10: anewarray     #47                 // class java/nio/file/LinkOption\n-        13: invokestatic  #14                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n-        16: invokestatic  #205                // Method java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n-        19: pop\n-        20: return\n+         1: ldc_w         #656                // String sourceFile\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_1\n+         9: aload_0\n+        10: iconst_0\n+        11: anewarray     #142                // class java/nio/file/LinkOption\n+        14: invokestatic  #49                 // Method getLastModifiedTime:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/FileTime;\n+        17: invokestatic  #658                // Method java/nio/file/Files.setLastModifiedTime:(Ljava/nio/file/Path;Ljava/nio/file/attribute/FileTime;)Ljava/nio/file/Path;\n+        20: pop\n+        21: return\n       LineNumberTable:\n         line 1403: 0\n-        line 1404: 7\n-        line 1405: 20\n+        line 1404: 8\n+        line 1405: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      21     0 sourceFile   Ljava/nio/file/Path;\n-            0      21     1 targetFile   Ljava/nio/file/Path;\n+            0      22     0 sourceFile   Ljava/nio/file/Path;\n+            0      22     1 targetFile   Ljava/nio/file/Path;\n     Exceptions:\n       throws java.io.IOException\n \n   private static boolean setPosixDeletePermissions(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iconst_2\n-         3: anewarray     #206                // class java/nio/file/attribute/PosixFilePermission\n+         3: anewarray     #662                // class java/nio/file/attribute/PosixFilePermission\n          6: dup\n          7: iconst_0\n-         8: getstatic     #207                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+         8: getstatic     #664                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n         11: aastore\n         12: dup\n         13: iconst_1\n-        14: getstatic     #208                // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;\n+        14: getstatic     #668                // Field java/nio/file/attribute/PosixFilePermission.OWNER_EXECUTE:Ljava/nio/file/attribute/PosixFilePermission;\n         17: aastore\n-        18: invokestatic  #167                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        18: invokestatic  #547                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n         21: aload_2\n-        22: invokestatic  #209                // Method setPosixPermissions:(Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n+        22: invokestatic  #671                // Method setPosixPermissions:(Ljava/nio/file/Path;ZLjava/util/List;[Ljava/nio/file/LinkOption;)Z\n         25: ireturn\n       LineNumberTable:\n         line 1420: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0 parent   Ljava/nio/file/Path;\n             0      26     1 enableDeleteChildren   Z\n@@ -3886,30 +3885,30 @@\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=5, args_size=4\n          0: aload_0\n          1: ifnull        45\n          4: aload_0\n          5: aload_3\n-         6: invokestatic  #210                // Method java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n+         6: invokestatic  #675                // Method java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n          9: astore        4\n         11: iload_1\n         12: ifeq          27\n         15: aload         4\n         17: aload_2\n-        18: invokeinterface #211,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n+        18: invokeinterface #679,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n         23: pop\n         24: goto          36\n         27: aload         4\n         29: aload_2\n-        30: invokeinterface #212,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z\n+        30: invokeinterface #682,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z\n         35: pop\n         36: aload_0\n         37: aload         4\n-        39: invokestatic  #76                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+        39: invokestatic  #264                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n         42: pop\n         43: iconst_1\n         44: ireturn\n         45: iconst_0\n         46: ireturn\n       LineNumberTable:\n         line 1443: 0\n@@ -3936,63 +3935,63 @@\n           offset_delta = 27\n           locals = [ class java/util/Set ]\n         frame_type = 8 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 8\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #543                         // (Ljava/nio/file/Path;ZLjava/util/List<Ljava/nio/file/attribute/PosixFilePermission;>;[Ljava/nio/file/LinkOption;)Z\n+    Signature: #1051                        // (Ljava/nio/file/Path;ZLjava/util/List<Ljava/nio/file/attribute/PosixFilePermission;>;[Ljava/nio/file/LinkOption;)Z\n \n   private static void setPosixReadOnlyFile(java.nio.file.Path, boolean, java.nio.file.LinkOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n     flags: (0x008a) ACC_PRIVATE, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=6, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokestatic  #210                // Method java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n+         2: invokestatic  #675                // Method java/nio/file/Files.getPosixFilePermissions:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/util/Set;\n          5: astore_3\n          6: iconst_1\n-         7: anewarray     #206                // class java/nio/file/attribute/PosixFilePermission\n+         7: anewarray     #662                // class java/nio/file/attribute/PosixFilePermission\n         10: dup\n         11: iconst_0\n-        12: getstatic     #213                // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;\n+        12: getstatic     #685                // Field java/nio/file/attribute/PosixFilePermission.OWNER_READ:Ljava/nio/file/attribute/PosixFilePermission;\n         15: aastore\n-        16: invokestatic  #167                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        16: invokestatic  #547                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n         19: astore        4\n         21: iconst_1\n-        22: anewarray     #206                // class java/nio/file/attribute/PosixFilePermission\n+        22: anewarray     #662                // class java/nio/file/attribute/PosixFilePermission\n         25: dup\n         26: iconst_0\n-        27: getstatic     #207                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n+        27: getstatic     #664                // Field java/nio/file/attribute/PosixFilePermission.OWNER_WRITE:Ljava/nio/file/attribute/PosixFilePermission;\n         30: aastore\n-        31: invokestatic  #167                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        31: invokestatic  #547                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n         34: astore        5\n         36: iload_1\n         37: ifeq          61\n         40: aload_3\n         41: aload         4\n-        43: invokeinterface #211,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n+        43: invokeinterface #679,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n         48: pop\n         49: aload_3\n         50: aload         5\n-        52: invokeinterface #212,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z\n+        52: invokeinterface #682,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z\n         57: pop\n         58: goto          79\n         61: aload_3\n         62: aload         4\n-        64: invokeinterface #211,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n+        64: invokeinterface #679,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n         69: pop\n         70: aload_3\n         71: aload         5\n-        73: invokeinterface #211,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n+        73: invokeinterface #679,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n         78: pop\n         79: aload_0\n         80: aload_3\n-        81: invokestatic  #76                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+        81: invokestatic  #264                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n         84: pop\n         85: return\n       LineNumberTable:\n         line 1458: 0\n         line 1460: 6\n         line 1465: 21\n         line 1471: 36\n@@ -4027,179 +4026,179 @@\n     descriptor: (Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=7, locals=4, args_size=3\n          0: aload_0\n          1: iload_1\n          2: aload_2\n-         3: invokestatic  #214                // Method setDosReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+         3: invokestatic  #688                // Method setDosReadOnly:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n          6: ifeq          11\n          9: aload_0\n         10: areturn\n         11: goto          15\n         14: astore_3\n         15: aload_0\n-        16: invokestatic  #41                 // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+        16: invokestatic  #151                // Method getParent:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n         19: astore_3\n         20: aload_3\n         21: aload_2\n-        22: invokestatic  #215                // Method isPosix:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        25: ifne          56\n-        28: new           #106                // class java/io/IOException\n+        22: invokestatic  #692                // Method isPosix:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        25: ifne          57\n+        28: new           #358                // class java/io/IOException\n         31: dup\n-        32: ldc           #216                // String DOS or POSIX file operations not available for \\'%s\\' %s\n-        34: iconst_2\n-        35: anewarray     #217                // class java/lang/Object\n-        38: dup\n-        39: iconst_0\n-        40: aload_0\n-        41: aastore\n-        42: dup\n-        43: iconst_1\n-        44: aload_2\n-        45: invokestatic  #218                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-        48: aastore\n-        49: invokestatic  #219                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        52: invokespecial #113                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        55: athrow\n-        56: iload_1\n-        57: ifeq          76\n-        60: aload_0\n-        61: iload_1\n-        62: aload_2\n-        63: invokestatic  #220                // Method setPosixReadOnlyFile:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n-        66: aload_3\n-        67: iconst_0\n-        68: aload_2\n-        69: invokestatic  #221                // Method setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-        72: pop\n-        73: goto          83\n-        76: aload_3\n-        77: iconst_1\n-        78: aload_2\n-        79: invokestatic  #221                // Method setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n-        82: pop\n-        83: aload_0\n-        84: areturn\n+        32: ldc_w         #695                // String DOS or POSIX file operations not available for \\'%s\\' %s\n+        35: iconst_2\n+        36: anewarray     #697                // class java/lang/Object\n+        39: dup\n+        40: iconst_0\n+        41: aload_0\n+        42: aastore\n+        43: dup\n+        44: iconst_1\n+        45: aload_2\n+        46: invokestatic  #699                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+        49: aastore\n+        50: invokestatic  #702                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        53: invokespecial #374                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        56: athrow\n+        57: iload_1\n+        58: ifeq          77\n+        61: aload_0\n+        62: iload_1\n+        63: aload_2\n+        64: invokestatic  #706                // Method setPosixReadOnlyFile:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)V\n+        67: aload_3\n+        68: iconst_0\n+        69: aload_2\n+        70: invokestatic  #710                // Method setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+        73: pop\n+        74: goto          84\n+        77: aload_3\n+        78: iconst_1\n+        79: aload_2\n+        80: invokestatic  #710                // Method setPosixDeletePermissions:(Ljava/nio/file/Path;Z[Ljava/nio/file/LinkOption;)Z\n+        83: pop\n+        84: aload_0\n+        85: areturn\n       Exception table:\n          from    to  target type\n              0    10    14   Class java/io/IOException\n       LineNumberTable:\n         line 1499: 0\n         line 1500: 9\n         line 1504: 11\n         line 1502: 14\n         line 1505: 15\n         line 1506: 20\n         line 1507: 28\n-        line 1510: 56\n-        line 1513: 60\n-        line 1514: 66\n-        line 1518: 76\n-        line 1520: 83\n+        line 1510: 57\n+        line 1513: 61\n+        line 1514: 67\n+        line 1518: 77\n+        line 1520: 84\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      85     0  path   Ljava/nio/file/Path;\n-            0      85     1 readOnly   Z\n-            0      85     2 linkOptions   [Ljava/nio/file/LinkOption;\n-           20      65     3 parent   Ljava/nio/file/Path;\n+            0      86     0  path   Ljava/nio/file/Path;\n+            0      86     1 readOnly   Z\n+            0      86     2 linkOptions   [Ljava/nio/file/LinkOption;\n+           20      66     3 parent   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 6\n         frame_type = 11 /* same */\n         frame_type = 66 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 0 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 40\n+          offset_delta = 41\n           locals = [ class java/nio/file/Path ]\n         frame_type = 19 /* same */\n         frame_type = 6 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public static long sizeOf(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #102                // String path\n-         3: iconst_0\n-         4: anewarray     #47                 // class java/nio/file/LinkOption\n-         7: invokestatic  #222                // Method requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-        10: pop\n-        11: aload_0\n-        12: iconst_0\n-        13: anewarray     #47                 // class java/nio/file/LinkOption\n-        16: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        19: ifeq          29\n-        22: aload_0\n-        23: invokestatic  #223                // Method sizeOfDirectory:(Ljava/nio/file/Path;)J\n-        26: goto          33\n-        29: aload_0\n-        30: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-        33: lreturn\n+         1: ldc_w         #349                // String path\n+         4: iconst_0\n+         5: anewarray     #142                // class java/nio/file/LinkOption\n+         8: invokestatic  #713                // Method requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+        11: pop\n+        12: aload_0\n+        13: iconst_0\n+        14: anewarray     #142                // class java/nio/file/LinkOption\n+        17: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        20: ifeq          30\n+        23: aload_0\n+        24: invokestatic  #717                // Method sizeOfDirectory:(Ljava/nio/file/Path;)J\n+        27: goto          34\n+        30: aload_0\n+        31: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        34: lreturn\n       LineNumberTable:\n         line 1539: 0\n-        line 1540: 11\n+        line 1540: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      34     0  path   Ljava/nio/file/Path;\n+            0      35     0  path   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 29 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ long ]\n     Exceptions:\n       throws java.io.IOException\n \n   public static java.math.BigInteger sizeOfAsBigInteger(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #102                // String path\n-         3: iconst_0\n-         4: anewarray     #47                 // class java/nio/file/LinkOption\n-         7: invokestatic  #222                // Method requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-        10: pop\n-        11: aload_0\n-        12: iconst_0\n-        13: anewarray     #47                 // class java/nio/file/LinkOption\n-        16: invokestatic  #48                 // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        19: ifeq          29\n-        22: aload_0\n-        23: invokestatic  #224                // Method sizeOfDirectoryAsBigInteger:(Ljava/nio/file/Path;)Ljava/math/BigInteger;\n-        26: goto          36\n-        29: aload_0\n-        30: invokestatic  #66                 // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n-        33: invokestatic  #225                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-        36: areturn\n+         1: ldc_w         #349                // String path\n+         4: iconst_0\n+         5: anewarray     #142                // class java/nio/file/LinkOption\n+         8: invokestatic  #713                // Method requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+        11: pop\n+        12: aload_0\n+        13: iconst_0\n+        14: anewarray     #142                // class java/nio/file/LinkOption\n+        17: invokestatic  #171                // Method java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        20: ifeq          30\n+        23: aload_0\n+        24: invokestatic  #720                // Method sizeOfDirectoryAsBigInteger:(Ljava/nio/file/Path;)Ljava/math/BigInteger;\n+        27: goto          37\n+        30: aload_0\n+        31: invokestatic  #225                // Method java/nio/file/Files.size:(Ljava/nio/file/Path;)J\n+        34: invokestatic  #724                // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+        37: areturn\n       LineNumberTable:\n         line 1555: 0\n-        line 1556: 11\n+        line 1556: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      37     0  path   Ljava/nio/file/Path;\n+            0      38     0  path   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 29 /* same */\n+        frame_type = 30 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/math/BigInteger ]\n     Exceptions:\n       throws java.io.IOException\n \n   public static long sizeOfDirectory(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #226                // Method countDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-         4: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-         9: invokeinterface #227,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getLong:()Ljava/lang/Long;\n-        14: invokevirtual #228                // Method java/lang/Long.longValue:()J\n+         1: invokestatic  #730                // Method countDirectory:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokeinterface #241,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+         9: invokeinterface #734,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getLong:()Ljava/lang/Long;\n+        14: invokevirtual #738                // Method java/lang/Long.longValue:()J\n         17: lreturn\n       LineNumberTable:\n         line 1574: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n@@ -4207,17 +4206,17 @@\n \n   public static java.math.BigInteger sizeOfDirectoryAsBigInteger(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/math/BigInteger;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #229                // Method countDirectoryAsBigInteger:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-         4: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n-         9: invokeinterface #230,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n+         1: invokestatic  #744                // Method countDirectoryAsBigInteger:(Ljava/nio/file/Path;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokeinterface #241,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.getByteCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n+         9: invokeinterface #747,  1          // InterfaceMethod org/apache/commons/io/file/Counters$Counter.getBigInteger:()Ljava/math/BigInteger;\n         14: areturn\n       LineNumberTable:\n         line 1587: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0 directory   Ljava/nio/file/Path;\n     Exceptions:\n@@ -4225,116 +4224,116 @@\n \n   static java.util.Set<java.nio.file.FileVisitOption> toFileVisitOptionSet(java.nio.file.FileVisitOption...);\n     descriptor: ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set;\n     flags: (0x0088) ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ifnonnull     12\n-         4: ldc           #231                // class java/nio/file/FileVisitOption\n-         6: invokestatic  #232                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n-         9: goto          27\n-        12: aload_0\n-        13: invokestatic  #119                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-        16: invokestatic  #233                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n-        19: invokeinterface #127,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n-        24: checkcast     #234                // class java/util/Set\n-        27: areturn\n+         1: ifnonnull     13\n+         4: ldc_w         #751                // class java/nio/file/FileVisitOption\n+         7: invokestatic  #753                // Method java/util/EnumSet.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;\n+        10: goto          28\n+        13: aload_0\n+        14: invokestatic  #394                // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+        17: invokestatic  #759                // Method java/util/stream/Collectors.toSet:()Ljava/util/stream/Collector;\n+        20: invokeinterface #421,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;\n+        25: checkcast     #680                // class java/util/Set\n+        28: areturn\n       LineNumberTable:\n         line 1597: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      28     0 fileVisitOptions   [Ljava/nio/file/FileVisitOption;\n+            0      29     0 fileVisitOptions   [Ljava/nio/file/FileVisitOption;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 12 /* same */\n+        frame_type = 13 /* same */\n         frame_type = 78 /* same_locals_1_stack_item */\n           stack = [ class java/util/Set ]\n-    Signature: #559                         // ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n+    Signature: #1056                        // ([Ljava/nio/file/FileVisitOption;)Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n \n   public static java.nio.file.Path touch(java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #235                // String file\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_0\n-         8: iconst_0\n-         9: anewarray     #47                 // class java/nio/file/LinkOption\n-        12: invokestatic  #104                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        15: ifne          30\n-        18: aload_0\n-        19: iconst_0\n-        20: anewarray     #165                // class java/nio/file/attribute/FileAttribute\n-        23: invokestatic  #236                // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-        26: pop\n-        27: goto          34\n-        30: aload_0\n-        31: invokestatic  #237                // Method org/apache/commons/io/file/attribute/FileTimes.setLastModifiedTime:(Ljava/nio/file/Path;)V\n-        34: aload_0\n-        35: areturn\n+         1: ldc_w         #762                // String file\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_0\n+         9: iconst_0\n+        10: anewarray     #142                // class java/nio/file/LinkOption\n+        13: invokestatic  #354                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        16: ifne          31\n+        19: aload_0\n+        20: iconst_0\n+        21: anewarray     #543                // class java/nio/file/attribute/FileAttribute\n+        24: invokestatic  #764                // Method java/nio/file/Files.createFile:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        27: pop\n+        28: goto          35\n+        31: aload_0\n+        32: invokestatic  #767                // Method org/apache/commons/io/file/attribute/FileTimes.setLastModifiedTime:(Ljava/nio/file/Path;)V\n+        35: aload_0\n+        36: areturn\n       LineNumberTable:\n         line 1611: 0\n-        line 1612: 7\n-        line 1613: 18\n-        line 1615: 30\n-        line 1617: 34\n+        line 1612: 8\n+        line 1613: 19\n+        line 1615: 31\n+        line 1617: 35\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      36     0  file   Ljava/nio/file/Path;\n+            0      37     0  file   Ljava/nio/file/Path;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 30 /* same */\n+        frame_type = 31 /* same */\n         frame_type = 3 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #238                // String directory\n-         3: iconst_0\n-         4: anewarray     #47                 // class java/nio/file/LinkOption\n-         7: invokestatic  #222                // Method requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n-        10: pop\n-        11: aload_1\n-        12: aload_0\n-        13: invokestatic  #239                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n-        16: pop\n-        17: aload_0\n-        18: areturn\n+         1: ldc_w         #772                // String directory\n+         4: iconst_0\n+         5: anewarray     #142                // class java/nio/file/LinkOption\n+         8: invokestatic  #713                // Method requireExists:(Ljava/nio/file/Path;Ljava/lang/String;[Ljava/nio/file/LinkOption;)Ljava/nio/file/Path;\n+        11: pop\n+        12: aload_1\n+        13: aload_0\n+        14: invokestatic  #774                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+        17: pop\n+        18: aload_0\n+        19: areturn\n       LineNumberTable:\n         line 1634: 0\n-        line 1635: 11\n-        line 1636: 17\n+        line 1635: 12\n+        line 1636: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     0 visitor   Ljava/nio/file/FileVisitor;\n-            0      19     1 directory   Ljava/nio/file/Path;\n+            0      20     0 visitor   Ljava/nio/file/FileVisitor;\n+            0      20     1 directory   Ljava/nio/file/Path;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     0 visitor   TT;\n+            0      20     0 visitor   TT;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #566                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n+    Signature: #1061                        // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;)TT;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.nio.file.Path, java.util.Set<java.nio.file.FileVisitOption>, int) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;Ljava/util/Set;I)Ljava/nio/file/FileVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: aload_2\n          2: iload_3\n          3: aload_0\n-         4: invokestatic  #240                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n+         4: invokestatic  #778                // Method java/nio/file/Files.walkFileTree:(Ljava/nio/file/Path;Ljava/util/Set;ILjava/nio/file/FileVisitor;)Ljava/nio/file/Path;\n          7: pop\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 1655: 0\n         line 1656: 8\n       LocalVariableTable:\n@@ -4345,179 +4344,179 @@\n             0      10     3 maxDepth   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 visitor   TT;\n             0      10     2 options   Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #570                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n+    Signature: #1064                        // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/nio/file/Path;Ljava/util/Set<Ljava/nio/file/FileVisitOption;>;I)TT;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.lang.String, java.lang.String...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/FileVisitor;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #45                 // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n-         6: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+         3: invokestatic  #163                // Method java/nio/file/Paths.get:(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;\n+         6: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n          9: areturn\n       LineNumberTable:\n         line 1673: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 visitor   Ljava/nio/file/FileVisitor;\n             0      10     1 first   Ljava/lang/String;\n             0      10     2  more   [Ljava/lang/String;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 visitor   TT;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #575                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n+    Signature: #1069                        // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/lang/String;[Ljava/lang/String;)TT;\n \n   public static <T extends java.nio.file.FileVisitor<? super java.nio.file.Path>> T visitFileTree(T, java.net.URI) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/FileVisitor;Ljava/net/URI;)Ljava/nio/file/FileVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #137                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n-         5: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+         2: invokestatic  #455                // Method java/nio/file/Paths.get:(Ljava/net/URI;)Ljava/nio/file/Path;\n+         5: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n          8: areturn\n       LineNumberTable:\n         line 1689: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 visitor   Ljava/nio/file/FileVisitor;\n             0       9     1   uri   Ljava/net/URI;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 visitor   TT;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #577                         // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n+    Signature: #1071                        // <T::Ljava/nio/file/FileVisitor<-Ljava/nio/file/Path;>;>(TT;Ljava/net/URI;)TT;\n \n   public static boolean waitFor(java.nio.file.Path, java.time.Duration, java.nio.file.LinkOption...);\n     descriptor: (Ljava/nio/file/Path;Ljava/time/Duration;[Ljava/nio/file/LinkOption;)Z\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=5, locals=10, args_size=3\n          0: aload_0\n-         1: ldc           #235                // String file\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: invokestatic  #241                // Method java/time/Instant.now:()Ljava/time/Instant;\n-        10: aload_1\n-        11: invokevirtual #242                // Method java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n-        14: astore_3\n-        15: iconst_0\n-        16: istore        4\n-        18: ldc2_w        #243                // long 100l\n-        21: lstore        5\n-        23: aload_0\n-        24: aload_2\n-        25: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-        28: ifne          105\n-        31: invokestatic  #241                // Method java/time/Instant.now:()Ljava/time/Instant;\n-        34: astore        7\n-        36: aload         7\n-        38: aload_3\n-        39: invokevirtual #245                // Method java/time/Instant.isAfter:(Ljava/time/Instant;)Z\n-        42: ifeq          62\n-        45: iconst_0\n-        46: istore        8\n-        48: iload         4\n-        50: ifeq          59\n-        53: invokestatic  #246                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-        56: invokevirtual #247                // Method java/lang/Thread.interrupt:()V\n-        59: iload         8\n-        61: ireturn\n-        62: ldc2_w        #243                // long 100l\n-        65: aload_3\n-        66: aload         7\n-        68: invokevirtual #248                // Method java/time/Instant.toEpochMilli:()J\n-        71: invokevirtual #249                // Method java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n-        74: invokevirtual #248                // Method java/time/Instant.toEpochMilli:()J\n-        77: invokestatic  #250                // Method java/lang/Math.min:(JJ)J\n-        80: invokestatic  #251                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;\n-        83: invokestatic  #252                // Method org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n-        86: goto          102\n-        89: astore        8\n-        91: iconst_1\n-        92: istore        4\n-        94: goto          102\n-        97: astore        8\n-        99: goto          105\n-       102: goto          23\n-       105: iload         4\n-       107: ifeq          135\n-       110: invokestatic  #246                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-       113: invokevirtual #247                // Method java/lang/Thread.interrupt:()V\n-       116: goto          135\n-       119: astore        9\n-       121: iload         4\n-       123: ifeq          132\n-       126: invokestatic  #246                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-       129: invokevirtual #247                // Method java/lang/Thread.interrupt:()V\n-       132: aload         9\n-       134: athrow\n-       135: aload_0\n-       136: aload_2\n-       137: invokestatic  #64                 // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-       140: ireturn\n+         1: ldc_w         #762                // String file\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: invokestatic  #781                // Method java/time/Instant.now:()Ljava/time/Instant;\n+        11: aload_1\n+        12: invokevirtual #786                // Method java/time/Instant.plus:(Ljava/time/temporal/TemporalAmount;)Ljava/time/Instant;\n+        15: astore_3\n+        16: iconst_0\n+        17: istore        4\n+        19: ldc2_w        #790                // long 100l\n+        22: lstore        5\n+        24: aload_0\n+        25: aload_2\n+        26: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        29: ifne          106\n+        32: invokestatic  #781                // Method java/time/Instant.now:()Ljava/time/Instant;\n+        35: astore        7\n+        37: aload         7\n+        39: aload_3\n+        40: invokevirtual #792                // Method java/time/Instant.isAfter:(Ljava/time/Instant;)Z\n+        43: ifeq          63\n+        46: iconst_0\n+        47: istore        8\n+        49: iload         4\n+        51: ifeq          60\n+        54: invokestatic  #796                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+        57: invokevirtual #802                // Method java/lang/Thread.interrupt:()V\n+        60: iload         8\n+        62: ireturn\n+        63: ldc2_w        #790                // long 100l\n+        66: aload_3\n+        67: aload         7\n+        69: invokevirtual #805                // Method java/time/Instant.toEpochMilli:()J\n+        72: invokevirtual #808                // Method java/time/Instant.minusMillis:(J)Ljava/time/Instant;\n+        75: invokevirtual #805                // Method java/time/Instant.toEpochMilli:()J\n+        78: invokestatic  #812                // Method java/lang/Math.min:(JJ)J\n+        81: invokestatic  #818                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;\n+        84: invokestatic  #824                // Method org/apache/commons/io/ThreadUtils.sleep:(Ljava/time/Duration;)V\n+        87: goto          103\n+        90: astore        8\n+        92: iconst_1\n+        93: istore        4\n+        95: goto          103\n+        98: astore        8\n+       100: goto          106\n+       103: goto          24\n+       106: iload         4\n+       108: ifeq          136\n+       111: invokestatic  #796                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+       114: invokevirtual #802                // Method java/lang/Thread.interrupt:()V\n+       117: goto          136\n+       120: astore        9\n+       122: iload         4\n+       124: ifeq          133\n+       127: invokestatic  #796                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+       130: invokevirtual #802                // Method java/lang/Thread.interrupt:()V\n+       133: aload         9\n+       135: athrow\n+       136: aload_0\n+       137: aload_2\n+       138: invokestatic  #218                // Method exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+       141: ireturn\n       Exception table:\n          from    to  target type\n-            62    86    89   Class java/lang/InterruptedException\n-            62    86    97   Class java/lang/Exception\n-            23    48   119   any\n-            62   105   119   any\n-           119   121   119   any\n+            63    87    90   Class java/lang/InterruptedException\n+            63    87    98   Class java/lang/Exception\n+            24    49   120   any\n+            63   106   120   any\n+           120   122   120   any\n       LineNumberTable:\n         line 1707: 0\n-        line 1708: 7\n-        line 1709: 15\n-        line 1710: 18\n-        line 1712: 23\n-        line 1713: 31\n-        line 1714: 36\n-        line 1715: 45\n-        line 1726: 48\n-        line 1727: 53\n-        line 1715: 59\n-        line 1718: 62\n-        line 1723: 86\n-        line 1719: 89\n-        line 1720: 91\n-        line 1723: 94\n-        line 1721: 97\n-        line 1722: 99\n-        line 1724: 102\n-        line 1726: 105\n-        line 1727: 110\n-        line 1726: 119\n-        line 1727: 126\n-        line 1729: 132\n-        line 1730: 135\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           91       3     8 ignore   Ljava/lang/InterruptedException;\n-           99       3     8    ex   Ljava/lang/Exception;\n-           36      66     7   now   Ljava/time/Instant;\n-            0     141     0  file   Ljava/nio/file/Path;\n-            0     141     1 timeout   Ljava/time/Duration;\n-            0     141     2 options   [Ljava/nio/file/LinkOption;\n-           15     126     3 finishInstant   Ljava/time/Instant;\n-           18     123     4 interrupted   Z\n-           23     118     5 minSleepMillis   J\n+        line 1708: 8\n+        line 1709: 16\n+        line 1710: 19\n+        line 1712: 24\n+        line 1713: 32\n+        line 1714: 37\n+        line 1715: 46\n+        line 1726: 49\n+        line 1727: 54\n+        line 1715: 60\n+        line 1718: 63\n+        line 1723: 87\n+        line 1719: 90\n+        line 1720: 92\n+        line 1723: 95\n+        line 1721: 98\n+        line 1722: 100\n+        line 1724: 103\n+        line 1726: 106\n+        line 1727: 111\n+        line 1726: 120\n+        line 1727: 127\n+        line 1729: 133\n+        line 1730: 136\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+           92       3     8 ignore   Ljava/lang/InterruptedException;\n+          100       3     8    ex   Ljava/lang/Exception;\n+           37      66     7   now   Ljava/time/Instant;\n+            0     142     0  file   Ljava/nio/file/Path;\n+            0     142     1 timeout   Ljava/time/Duration;\n+            0     142     2 options   [Ljava/nio/file/LinkOption;\n+           16     126     3 finishInstant   Ljava/time/Instant;\n+           19     123     4 interrupted   Z\n+           24     118     5 minSleepMillis   J\n       StackMapTable: number_of_entries = 10\n         frame_type = 254 /* append */\n-          offset_delta = 23\n+          offset_delta = 24\n           locals = [ class java/time/Instant, int, long ]\n         frame_type = 253 /* append */\n           offset_delta = 35\n           locals = [ class java/time/Instant, int ]\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 90 /* same_locals_1_stack_item */\n@@ -4539,80 +4538,80 @@\n     descriptor: (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=5, args_size=5\n          0: aload_0\n          1: iload_2\n          2: aload         4\n-         4: invokestatic  #255                // Method java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n+         4: invokestatic  #834                // Method java/nio/file/Files.walk:(Ljava/nio/file/Path;I[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream;\n          7: aload_1\n          8: iload_3\n-         9: invokedynamic #256,  0            // InvokeDynamic #6:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n-        14: invokeinterface #129,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n+         9: invokedynamic #838,  0            // InvokeDynamic #6:test:(Lorg/apache/commons/io/file/PathFilter;Z)Ljava/util/function/Predicate;\n+        14: invokeinterface #429,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;\n         19: areturn\n       LineNumberTable:\n         line 1747: 0\n         line 1748: 14\n         line 1747: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0 start   Ljava/nio/file/Path;\n             0      20     1 pathFilter   Lorg/apache/commons/io/file/PathFilter;\n             0      20     2 maxDepth   I\n             0      20     3 readAttributes   Z\n             0      20     4 options   [Ljava/nio/file/FileVisitOption;\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #593                         // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n+    Signature: #1084                        // (Ljava/nio/file/Path;Lorg/apache/commons/io/file/PathFilter;IZ[Ljava/nio/file/FileVisitOption;)Ljava/util/stream/Stream<Ljava/nio/file/Path;>;\n \n   private static <R extends java.lang.Object> R withPosixFileAttributes(java.nio.file.Path, java.nio.file.LinkOption[], boolean, org.apache.commons.io.function.IOFunction<java.nio.file.attribute.PosixFileAttributes, R>) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=7, args_size=4\n          0: iload_2\n          1: ifeq          12\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #73                 // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n+         6: invokestatic  #250                // Method readPosixFileAttributes:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/PosixFileAttributes;\n          9: goto          13\n         12: aconst_null\n         13: astore        4\n         15: aload_3\n         16: aload         4\n-        18: invokeinterface #257,  2          // InterfaceMethod org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+        18: invokeinterface #841,  2          // InterfaceMethod org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n         23: astore        5\n         25: aload         4\n         27: ifnull        54\n         30: aload_0\n         31: ifnull        54\n         34: aload_0\n         35: aload_1\n-        36: invokestatic  #104                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        36: invokestatic  #354                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         39: ifeq          54\n         42: aload_0\n         43: aload         4\n-        45: invokeinterface #75,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-        50: invokestatic  #76                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+        45: invokeinterface #258,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+        50: invokestatic  #264                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n         53: pop\n         54: aload         5\n         56: areturn\n         57: astore        6\n         59: aload         4\n         61: ifnull        88\n         64: aload_0\n         65: ifnull        88\n         68: aload_0\n         69: aload_1\n-        70: invokestatic  #104                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        70: invokestatic  #354                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         73: ifeq          88\n         76: aload_0\n         77: aload         4\n-        79: invokeinterface #75,  1           // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n-        84: invokestatic  #76                 // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n+        79: invokeinterface #258,  1          // InterfaceMethod java/nio/file/attribute/PosixFileAttributes.permissions:()Ljava/util/Set;\n+        84: invokestatic  #264                // Method java/nio/file/Files.setPosixFilePermissions:(Ljava/nio/file/Path;Ljava/util/Set;)Ljava/nio/file/Path;\n         87: pop\n         88: aload         6\n         90: athrow\n       Exception table:\n          from    to  target type\n             15    25    57   any\n             57    59    57   any\n@@ -4647,61 +4646,61 @@\n           locals = [ class java/nio/file/Path, class \"[Ljava/nio/file/LinkOption;\", int, class org/apache/commons/io/function/IOFunction, class java/nio/file/attribute/PosixFileAttributes ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 253 /* append */\n           offset_delta = 30\n           locals = [ top, class java/lang/Throwable ]\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #600                         // <R:Ljava/lang/Object;>(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction<Ljava/nio/file/attribute/PosixFileAttributes;TR;>;)TR;\n+    Signature: #1088                        // <R:Ljava/lang/Object;>(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;ZLorg/apache/commons/io/function/IOFunction<Ljava/nio/file/attribute/PosixFileAttributes;TR;>;)TR;\n \n   public static java.nio.file.Path writeString(java.nio.file.Path, java.lang.CharSequence, java.nio.charset.Charset, java.nio.file.OpenOption...) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/lang/CharSequence;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n-         1: ldc           #102                // String path\n-         3: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: pop\n-         7: aload_1\n-         8: ldc_w         #258                // String charSequence\n-        11: invokestatic  #103                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        14: pop\n-        15: aload_0\n-        16: aload_1\n-        17: invokestatic  #259                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-        20: aload_2\n-        21: invokestatic  #190                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-        24: invokevirtual #260                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        27: aload_3\n-        28: invokestatic  #261                // Method java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n-        31: pop\n-        32: aload_0\n-        33: areturn\n+         1: ldc_w         #349                // String path\n+         4: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: pop\n+         8: aload_1\n+         9: ldc_w         #845                // String charSequence\n+        12: invokestatic  #351                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        15: pop\n+        16: aload_0\n+        17: aload_1\n+        18: invokestatic  #847                // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+        21: aload_2\n+        22: invokestatic  #613                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+        25: invokevirtual #850                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        28: aload_3\n+        29: invokestatic  #854                // Method java/nio/file/Files.write:(Ljava/nio/file/Path;[B[Ljava/nio/file/OpenOption;)Ljava/nio/file/Path;\n+        32: pop\n+        33: aload_0\n+        34: areturn\n       LineNumberTable:\n         line 1778: 0\n-        line 1779: 7\n-        line 1780: 15\n-        line 1781: 32\n+        line 1779: 8\n+        line 1780: 16\n+        line 1781: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      34     0  path   Ljava/nio/file/Path;\n-            0      34     1 charSequence   Ljava/lang/CharSequence;\n-            0      34     2 charset   Ljava/nio/charset/Charset;\n-            0      34     3 openOptions   [Ljava/nio/file/OpenOption;\n+            0      35     0  path   Ljava/nio/file/Path;\n+            0      35     1 charSequence   Ljava/lang/CharSequence;\n+            0      35     2 charset   Ljava/nio/charset/Charset;\n+            0      35     3 openOptions   [Ljava/nio/file/OpenOption;\n     Exceptions:\n       throws java.io.IOException\n \n   private org.apache.commons.io.file.PathUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #262                // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #858                // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 1787: 0\n         line 1789: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/file/PathUtils;\n@@ -4712,19 +4711,19 @@\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n          2: iload_1\n          3: ifeq          13\n          6: aload_2\n-         7: invokestatic  #263                // Method readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+         7: invokestatic  #859                // Method readBasicFileAttributesUnchecked:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n         10: goto          14\n         13: aconst_null\n-        14: invokeinterface #264,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        19: getstatic     #265                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        14: invokeinterface #863,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        19: getstatic     #869                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         22: if_acmpne     29\n         25: iconst_1\n         26: goto          30\n         29: iconst_0\n         30: ireturn\n       LineNumberTable:\n         line 1748: 0\n@@ -4748,15 +4747,15 @@\n \n   private static boolean lambda$overrideReadOnly$2(org.apache.commons.io.file.DeleteOption);\n     descriptor: (Lorg/apache/commons/io/file/DeleteOption;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #266                // Field org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n+         1: getstatic     #875                // Field org/apache/commons/io/file/StandardDeleteOption.OVERRIDE_READ_ONLY:Lorg/apache/commons/io/file/StandardDeleteOption;\n          4: if_acmpne     11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1224: 0\n@@ -4774,17 +4773,17 @@\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n          1: ifnull        25\n          4: aload_0\n          5: aload_1\n          6: aload_1\n-         7: invokestatic  #267                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n-        10: invokeinterface #264,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-        15: getstatic     #265                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         7: invokestatic  #881                // Method readBasicFileAttributes:(Ljava/nio/file/Path;)Ljava/nio/file/attribute/BasicFileAttributes;\n+        10: invokeinterface #863,  3          // InterfaceMethod org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+        15: getstatic     #869                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         18: if_acmpne     25\n         21: iconst_1\n         22: goto          26\n         25: iconst_0\n         26: ireturn\n         27: astore_2\n         28: iconst_0\n@@ -4809,26 +4808,26 @@\n           stack = [ class java/io/IOException ]\n \n   private static org.apache.commons.io.file.Counters$PathCounters lambda$deleteDirectory$0(java.nio.file.LinkOption[], org.apache.commons.io.file.DeleteOption[], java.nio.file.Path, java.nio.file.attribute.PosixFileAttributes) throws java.io.IOException;\n     descriptor: ([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=6, locals=4, args_size=4\n-         0: new           #58                 // class org/apache/commons/io/file/DeletingPathVisitor\n+         0: new           #204                // class org/apache/commons/io/file/DeletingPathVisitor\n          3: dup\n-         4: invokestatic  #9                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #31                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: aload_0\n          8: aload_1\n          9: iconst_0\n-        10: anewarray     #10                 // class java/lang/String\n-        13: invokespecial #59                 // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n+        10: anewarray     #37                 // class java/lang/String\n+        13: invokespecial #206                // Method org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;[Ljava/lang/String;)V\n         16: aload_2\n-        17: invokestatic  #12                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n-        20: checkcast     #58                 // class org/apache/commons/io/file/DeletingPathVisitor\n-        23: invokevirtual #60                 // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+        17: invokestatic  #43                 // Method visitFileTree:(Ljava/nio/file/FileVisitor;Ljava/nio/file/Path;)Ljava/nio/file/FileVisitor;\n+        20: checkcast     #204                // class org/apache/commons/io/file/DeletingPathVisitor\n+        23: invokevirtual #209                // Method org/apache/commons/io/file/DeletingPathVisitor.getPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n         26: areturn\n       LineNumberTable:\n         line 485: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0 linkOptions   [Ljava/nio/file/LinkOption;\n             0      27     1 deleteOptions   [Lorg/apache/commons/io/file/DeleteOption;\n@@ -4859,112 +4858,112 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: iconst_2\n-         1: anewarray     #268                // class java/nio/file/OpenOption\n+         1: anewarray     #883                // class java/nio/file/OpenOption\n          4: dup\n          5: iconst_0\n-         6: getstatic     #269                // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;\n+         6: getstatic     #885                // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: getstatic     #270                // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;\n+        12: getstatic     #891                // Field java/nio/file/StandardOpenOption.TRUNCATE_EXISTING:Ljava/nio/file/StandardOpenOption;\n         15: aastore\n-        16: putstatic     #162                // Field OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n+        16: putstatic     #533                // Field OPEN_OPTIONS_TRUNCATE:[Ljava/nio/file/OpenOption;\n         19: iconst_2\n-        20: anewarray     #268                // class java/nio/file/OpenOption\n+        20: anewarray     #883                // class java/nio/file/OpenOption\n         23: dup\n         24: iconst_0\n-        25: getstatic     #269                // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;\n+        25: getstatic     #885                // Field java/nio/file/StandardOpenOption.CREATE:Ljava/nio/file/StandardOpenOption;\n         28: aastore\n         29: dup\n         30: iconst_1\n-        31: getstatic     #271                // Field java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;\n+        31: getstatic     #894                // Field java/nio/file/StandardOpenOption.APPEND:Ljava/nio/file/StandardOpenOption;\n         34: aastore\n-        35: putstatic     #161                // Field OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n+        35: putstatic     #530                // Field OPEN_OPTIONS_APPEND:[Ljava/nio/file/OpenOption;\n         38: iconst_0\n-        39: anewarray     #272                // class java/nio/file/CopyOption\n-        42: putstatic     #273                // Field EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n+        39: anewarray     #897                // class java/nio/file/CopyOption\n+        42: putstatic     #899                // Field EMPTY_COPY_OPTIONS:[Ljava/nio/file/CopyOption;\n         45: iconst_0\n-        46: anewarray     #274                // class org/apache/commons/io/file/DeleteOption\n-        49: putstatic     #6                  // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n+        46: anewarray     #903                // class org/apache/commons/io/file/DeleteOption\n+        49: putstatic     #21                 // Field EMPTY_DELETE_OPTION_ARRAY:[Lorg/apache/commons/io/file/DeleteOption;\n         52: iconst_0\n-        53: anewarray     #231                // class java/nio/file/FileVisitOption\n-        56: putstatic     #82                 // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n+        53: anewarray     #751                // class java/nio/file/FileVisitOption\n+        56: putstatic     #285                // Field EMPTY_FILE_VISIT_OPTION_ARRAY:[Ljava/nio/file/FileVisitOption;\n         59: iconst_0\n-        60: anewarray     #47                 // class java/nio/file/LinkOption\n-        63: putstatic     #80                 // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+        60: anewarray     #142                // class java/nio/file/LinkOption\n+        63: putstatic     #277                // Field EMPTY_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n         66: iconst_1\n-        67: anewarray     #47                 // class java/nio/file/LinkOption\n+        67: anewarray     #142                // class java/nio/file/LinkOption\n         70: dup\n         71: iconst_0\n-        72: getstatic     #39                 // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n+        72: getstatic     #141                // Field java/nio/file/LinkOption.NOFOLLOW_LINKS:Ljava/nio/file/LinkOption;\n         75: aastore\n-        76: putstatic     #172                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n+        76: putstatic     #564                // Field NOFOLLOW_LINK_OPTION_ARRAY:[Ljava/nio/file/LinkOption;\n         79: aconst_null\n-        80: putstatic     #164                // Field NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n+        80: putstatic     #540                // Field NULL_LINK_OPTION:Ljava/nio/file/LinkOption;\n         83: iconst_0\n-        84: anewarray     #268                // class java/nio/file/OpenOption\n-        87: putstatic     #81                 // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n+        84: anewarray     #883                // class java/nio/file/OpenOption\n+        87: putstatic     #281                // Field EMPTY_OPEN_OPTION_ARRAY:[Ljava/nio/file/OpenOption;\n         90: iconst_0\n-        91: anewarray     #95                 // class java/nio/file/Path\n-        94: putstatic     #118                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n+        91: anewarray     #84                 // class java/nio/file/Path\n+        94: putstatic     #390                // Field EMPTY_PATH_ARRAY:[Ljava/nio/file/Path;\n         97: return\n       LineNumberTable:\n         line 151: 0\n         line 153: 19\n         line 160: 38\n         line 167: 45\n         line 172: 52\n         line 177: 59\n         line 186: 66\n         line 193: 79\n         line 198: 83\n         line 205: 90\n }\n SourceFile: \"PathUtils.java\"\n-InnerClasses:\n-  static #276;                            // class org/apache/commons/io/file/PathUtils$1\n-  private static #278= #85 of #275;       // RelativeSortedPaths=class org/apache/commons/io/file/PathUtils$RelativeSortedPaths of class org/apache/commons/io/file/PathUtils\n-  public static #311= #57 of #637;        // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n-  public static #981= #708 of #637;       // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n-  public static #1048= #1047 of #453;     // Filter=class java/nio/file/DirectoryStream$Filter of class java/nio/file/DirectoryStream\n-  public static final #1163= #1162 of #1166; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #659 ()Ljava/lang/Object;\n-      #660 REF_invokeVirtual java/net/URL.openStream:()Ljava/io/InputStream;\n-      #661 ()Ljava/io/InputStream;\n-  1: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #1121 ()Ljava/lang/Object;\n+      #1122 REF_invokeVirtual java/net/URL.openStream:()Ljava/io/InputStream;\n+      #1127 ()Ljava/io/InputStream;\n+  1: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #692 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #693 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-      #694 (Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n-  2: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #1128 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #1129 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$deleteDirectory$0:([Ljava/nio/file/LinkOption;[Lorg/apache/commons/io/file/DeleteOption;Ljava/nio/file/Path;Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+      #1132 (Ljava/nio/file/attribute/PosixFileAttributes;)Lorg/apache/commons/io/file/Counters$PathCounters;\n+  2: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #762 (Ljava/lang/Object;)Z\n-      #763 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n-      #764 (Ljava/nio/file/Path;)Z\n-  3: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #1134 (Ljava/lang/Object;)Z\n+      #1135 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$filterPaths$1:(Lorg/apache/commons/io/file/PathFilter;Ljava/nio/file/Path;)Z\n+      #1138 (Ljava/nio/file/Path;)Z\n+  3: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #762 (Ljava/lang/Object;)Z\n-      #810 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n-      #811 (Lorg/apache/commons/io/file/DeleteOption;)Z\n-  4: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #1134 (Ljava/lang/Object;)Z\n+      #1139 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$overrideReadOnly$2:(Lorg/apache/commons/io/file/DeleteOption;)Z\n+      #1142 (Lorg/apache/commons/io/file/DeleteOption;)Z\n+  4: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #814 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #815 REF_invokeStatic java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-      #816 (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n-  5: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #1143 (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #1145 REF_invokeStatic java/nio/file/Files.readAttributes:(Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+      #1146 (Ljava/nio/file/Path;Ljava/lang/Class;[Ljava/nio/file/LinkOption;)Ljava/nio/file/attribute/BasicFileAttributes;\n+  5: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #692 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #834 REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-      #835 (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n-  6: #658 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #1128 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #1147 REF_invokeInterface java/nio/file/Path.relativize:(Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+      #1150 (Ljava/nio/file/Path;)Ljava/nio/file/Path;\n+  6: #1114 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #762 (Ljava/lang/Object;)Z\n-      #899 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n-      #764 (Ljava/nio/file/Path;)Z\n+      #1134 (Ljava/lang/Object;)Z\n+      #1151 REF_invokeStatic org/apache/commons/io/file/PathUtils.lambda$walk$3:(Lorg/apache/commons/io/file/PathFilter;ZLjava/nio/file/Path;)Z\n+      #1138 (Ljava/nio/file/Path;)Z\n+InnerClasses:\n+  public static #1155= #202 of #32;       // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #1156= #237 of #32;       // Counter=class org/apache/commons/io/file/Counters$Counter of class org/apache/commons/io/file/Counters\n+  private static #1157= #296 of #2;       // RelativeSortedPaths=class org/apache/commons/io/file/PathUtils$RelativeSortedPaths of class org/apache/commons/io/file/PathUtils\n+  static #1158;                           // class org/apache/commons/io/file/PathUtils$1\n+  public static #1162= #1160 of #486;     // Filter=class java/nio/file/DirectoryStream$Filter of class java/nio/file/DirectoryStream\n+  public static final #1167= #1163 of #1165; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
