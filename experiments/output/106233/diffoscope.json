{"diffoscope-json-version": 1, "source1": "first/ProxyReader.class", "source2": "second/ProxyReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,285 +1,285 @@\n-  SHA-256 checksum c1a2c63b5af319e9bf88985c8977bf9d14c971c82dbb948b3469a2632c367408\n+  SHA-256 checksum 823045ab6588b5a697d339dc116792a44bd1dd86a1a6b63bb45049680e272e57\n   Compiled from \"ProxyReader.java\"\n public abstract class org.apache.commons.io.input.ProxyReader extends java.io.FilterReader\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/io/input/ProxyReader\n-  super_class: #4                         // java/io/FilterReader\n+  this_class: #1                          // org/apache/commons/io/input/ProxyReader\n+  super_class: #3                         // java/io/FilterReader\n   interfaces: 0, fields: 0, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Class              #2             // org/apache/commons/io/IOUtils\n-   #2 = Utf8               org/apache/commons/io/IOUtils\n-   #3 = Methodref          #4.#5          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n-   #4 = Class              #6             // java/io/FilterReader\n-   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/Reader;)V\n-   #6 = Utf8               java/io/FilterReader\n-   #7 = Utf8               <init>\n-   #8 = Utf8               (Ljava/io/Reader;)V\n-   #9 = Fieldref           #10.#11        // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n-  #10 = Class              #12            // org/apache/commons/io/input/ProxyReader\n-  #11 = NameAndType        #13:#14        // in:Ljava/io/Reader;\n-  #12 = Utf8               org/apache/commons/io/input/ProxyReader\n-  #13 = Utf8               in\n-  #14 = Utf8               Ljava/io/Reader;\n-  #15 = Methodref          #16.#17        // java/io/Reader.close:()V\n-  #16 = Class              #18            // java/io/Reader\n-  #17 = NameAndType        #19:#20        // close:()V\n-  #18 = Utf8               java/io/Reader\n-  #19 = Utf8               close\n-  #20 = Utf8               ()V\n-  #21 = Class              #22            // java/io/IOException\n-  #22 = Utf8               java/io/IOException\n-  #23 = Methodref          #10.#24        // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n-  #24 = NameAndType        #25:#26        // handleIOException:(Ljava/io/IOException;)V\n-  #25 = Utf8               handleIOException\n-  #26 = Utf8               (Ljava/io/IOException;)V\n-  #27 = Methodref          #16.#28        // java/io/Reader.mark:(I)V\n-  #28 = NameAndType        #29:#30        // mark:(I)V\n-  #29 = Utf8               mark\n-  #30 = Utf8               (I)V\n-  #31 = Methodref          #16.#32        // java/io/Reader.markSupported:()Z\n-  #32 = NameAndType        #33:#34        // markSupported:()Z\n-  #33 = Utf8               markSupported\n-  #34 = Utf8               ()Z\n-  #35 = Methodref          #10.#36        // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n-  #36 = NameAndType        #37:#30        // beforeRead:(I)V\n-  #37 = Utf8               beforeRead\n-  #38 = Methodref          #16.#39        // java/io/Reader.read:()I\n-  #39 = NameAndType        #40:#41        // read:()I\n-  #40 = Utf8               read\n-  #41 = Utf8               ()I\n-  #42 = Methodref          #10.#43        // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n-  #43 = NameAndType        #44:#30        // afterRead:(I)V\n-  #44 = Utf8               afterRead\n-  #45 = Methodref          #1.#46         // org/apache/commons/io/IOUtils.length:([C)I\n-  #46 = NameAndType        #47:#48        // length:([C)I\n-  #47 = Utf8               length\n-  #48 = Utf8               ([C)I\n-  #49 = Methodref          #16.#50        // java/io/Reader.read:([C)I\n-  #50 = NameAndType        #40:#48        // read:([C)I\n-  #51 = Methodref          #16.#52        // java/io/Reader.read:([CII)I\n-  #52 = NameAndType        #40:#53        // read:([CII)I\n-  #53 = Utf8               ([CII)I\n-  #54 = Methodref          #1.#55         // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-  #55 = NameAndType        #47:#56        // length:(Ljava/lang/CharSequence;)I\n-  #56 = Utf8               (Ljava/lang/CharSequence;)I\n-  #57 = Methodref          #16.#58        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n-  #58 = NameAndType        #40:#59        // read:(Ljava/nio/CharBuffer;)I\n-  #59 = Utf8               (Ljava/nio/CharBuffer;)I\n-  #60 = Methodref          #16.#61        // java/io/Reader.ready:()Z\n-  #61 = NameAndType        #62:#34        // ready:()Z\n-  #62 = Utf8               ready\n-  #63 = Methodref          #16.#64        // java/io/Reader.reset:()V\n-  #64 = NameAndType        #65:#20        // reset:()V\n-  #65 = Utf8               reset\n-  #66 = Methodref          #16.#67        // java/io/Reader.skip:(J)J\n-  #67 = NameAndType        #68:#69        // skip:(J)J\n-  #68 = Utf8               skip\n-  #69 = Utf8               (J)J\n-  #70 = Utf8               Code\n-  #71 = Utf8               LineNumberTable\n-  #72 = Utf8               LocalVariableTable\n-  #73 = Utf8               this\n-  #74 = Utf8               Lorg/apache/commons/io/input/ProxyReader;\n-  #75 = Utf8               proxy\n-  #76 = Utf8               n\n-  #77 = Utf8               I\n-  #78 = Utf8               Exceptions\n-  #79 = Utf8               e\n-  #80 = Utf8               Ljava/io/IOException;\n-  #81 = Utf8               StackMapTable\n-  #82 = Utf8               idx\n-  #83 = Utf8               c\n-  #84 = Utf8               chr\n-  #85 = Utf8               [C\n-  #86 = Utf8               st\n-  #87 = Utf8               len\n-  #88 = Utf8               target\n-  #89 = Utf8               Ljava/nio/CharBuffer;\n+   #1 = Class              #2             // org/apache/commons/io/input/ProxyReader\n+   #2 = Utf8               org/apache/commons/io/input/ProxyReader\n+   #3 = Class              #4             // java/io/FilterReader\n+   #4 = Utf8               java/io/FilterReader\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/Reader;)V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+   #9 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/Reader;)V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/io/input/ProxyReader;\n+  #14 = Utf8               proxy\n+  #15 = Utf8               Ljava/io/Reader;\n+  #16 = Utf8               afterRead\n+  #17 = Utf8               (I)V\n+  #18 = Utf8               Exceptions\n+  #19 = Class              #20            // java/io/IOException\n+  #20 = Utf8               java/io/IOException\n+  #21 = Utf8               n\n+  #22 = Utf8               I\n+  #23 = Utf8               beforeRead\n+  #24 = Utf8               close\n+  #25 = Utf8               ()V\n+  #26 = Fieldref           #1.#27         // org/apache/commons/io/input/ProxyReader.in:Ljava/io/Reader;\n+  #27 = NameAndType        #28:#15        // in:Ljava/io/Reader;\n+  #28 = Utf8               in\n+  #29 = Methodref          #30.#32        // java/io/Reader.close:()V\n+  #30 = Class              #31            // java/io/Reader\n+  #31 = Utf8               java/io/Reader\n+  #32 = NameAndType        #24:#25        // close:()V\n+  #33 = Methodref          #1.#34         // org/apache/commons/io/input/ProxyReader.handleIOException:(Ljava/io/IOException;)V\n+  #34 = NameAndType        #35:#36        // handleIOException:(Ljava/io/IOException;)V\n+  #35 = Utf8               handleIOException\n+  #36 = Utf8               (Ljava/io/IOException;)V\n+  #37 = Utf8               e\n+  #38 = Utf8               Ljava/io/IOException;\n+  #39 = Utf8               StackMapTable\n+  #40 = Utf8               mark\n+  #41 = Methodref          #30.#42        // java/io/Reader.mark:(I)V\n+  #42 = NameAndType        #40:#17        // mark:(I)V\n+  #43 = Utf8               idx\n+  #44 = Utf8               markSupported\n+  #45 = Utf8               ()Z\n+  #46 = Methodref          #30.#47        // java/io/Reader.markSupported:()Z\n+  #47 = NameAndType        #44:#45        // markSupported:()Z\n+  #48 = Utf8               read\n+  #49 = Utf8               ()I\n+  #50 = Methodref          #1.#51         // org/apache/commons/io/input/ProxyReader.beforeRead:(I)V\n+  #51 = NameAndType        #23:#17        // beforeRead:(I)V\n+  #52 = Methodref          #30.#53        // java/io/Reader.read:()I\n+  #53 = NameAndType        #48:#49        // read:()I\n+  #54 = Methodref          #1.#55         // org/apache/commons/io/input/ProxyReader.afterRead:(I)V\n+  #55 = NameAndType        #16:#17        // afterRead:(I)V\n+  #56 = Utf8               c\n+  #57 = Utf8               ([C)I\n+  #58 = Methodref          #59.#61        // org/apache/commons/io/IOUtils.length:([C)I\n+  #59 = Class              #60            // org/apache/commons/io/IOUtils\n+  #60 = Utf8               org/apache/commons/io/IOUtils\n+  #61 = NameAndType        #62:#57        // length:([C)I\n+  #62 = Utf8               length\n+  #63 = Methodref          #30.#64        // java/io/Reader.read:([C)I\n+  #64 = NameAndType        #48:#57        // read:([C)I\n+  #65 = Utf8               chr\n+  #66 = Utf8               [C\n+  #67 = Utf8               ([CII)I\n+  #68 = Methodref          #30.#69        // java/io/Reader.read:([CII)I\n+  #69 = NameAndType        #48:#67        // read:([CII)I\n+  #70 = Utf8               st\n+  #71 = Utf8               len\n+  #72 = Utf8               (Ljava/nio/CharBuffer;)I\n+  #73 = Methodref          #59.#74        // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+  #74 = NameAndType        #62:#75        // length:(Ljava/lang/CharSequence;)I\n+  #75 = Utf8               (Ljava/lang/CharSequence;)I\n+  #76 = Methodref          #30.#77        // java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+  #77 = NameAndType        #48:#72        // read:(Ljava/nio/CharBuffer;)I\n+  #78 = Utf8               target\n+  #79 = Utf8               Ljava/nio/CharBuffer;\n+  #80 = Utf8               ready\n+  #81 = Methodref          #30.#82        // java/io/Reader.ready:()Z\n+  #82 = NameAndType        #80:#45        // ready:()Z\n+  #83 = Utf8               reset\n+  #84 = Methodref          #30.#85        // java/io/Reader.reset:()V\n+  #85 = NameAndType        #83:#25        // reset:()V\n+  #86 = Utf8               skip\n+  #87 = Utf8               (J)J\n+  #88 = Methodref          #30.#89        // java/io/Reader.skip:(J)J\n+  #89 = NameAndType        #86:#87        // skip:(J)J\n   #90 = Utf8               ln\n   #91 = Utf8               J\n   #92 = Utf8               SourceFile\n   #93 = Utf8               ProxyReader.java\n {\n   public org.apache.commons.io.input.ProxyReader(java.io.Reader);\n     descriptor: (Ljava/io/Reader;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #3                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n+         2: invokespecial #8                  // Method java/io/FilterReader.\"<init>\":(Ljava/io/Reader;)V\n          5: return\n       LineNumberTable:\n         line 46: 0\n         line 48: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       6     1 proxy   Ljava/io/Reader;\n \n   protected void afterRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 70: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void beforeRead(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 93: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       1     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #15                 // Method java/io/Reader.close:()V\n+         1: getfield      #26                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #29                 // Method java/io/Reader.close:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 102: 0\n-        line 105: 7\n-        line 103: 10\n+        line 103: 7\n         line 104: 11\n         line 106: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyReader;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void handleIOException(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0       2     1     e   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/Reader;\n+         1: getfield      #26                 // Field in:Ljava/io/Reader;\n          4: iload_1\n-         5: invokevirtual #27                 // Method java/io/Reader.mark:(I)V\n+         5: invokevirtual #41                 // Method java/io/Reader.mark:(I)V\n          8: goto          17\n         11: astore_2\n         12: aload_0\n         13: aload_2\n-        14: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        14: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         17: return\n       Exception table:\n          from    to  target type\n              0     8    11   Class java/io/IOException\n       LineNumberTable:\n         line 129: 0\n-        line 132: 8\n-        line 130: 11\n+        line 130: 8\n         line 131: 12\n         line 133: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           12       5     2     e   Ljava/io/IOException;\n             0      18     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      18     1   idx   I\n+           12       5     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #31                 // Method java/io/Reader.markSupported:()Z\n+         1: getfield      #26                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #46                 // Method java/io/Reader.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 141: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/ProxyReader;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #35                 // Method beforeRead:(I)V\n+         2: invokevirtual #50                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #9                  // Field in:Ljava/io/Reader;\n-         9: invokevirtual #38                 // Method java/io/Reader.read:()I\n+         6: getfield      #26                 // Field in:Ljava/io/Reader;\n+         9: invokevirtual #52                 // Method java/io/Reader.read:()I\n         12: istore_1\n         13: aload_0\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: iconst_1\n         20: goto          24\n         23: iconst_m1\n-        24: invokevirtual #42                 // Method afterRead:(I)V\n+        24: invokevirtual #54                 // Method afterRead:(I)V\n         27: iload_1\n         28: ireturn\n         29: astore_1\n         30: aload_0\n         31: aload_1\n-        32: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        32: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         35: iconst_m1\n         36: ireturn\n       Exception table:\n          from    to  target type\n              0    28    29   Class java/io/IOException\n       LineNumberTable:\n         line 152: 0\n@@ -287,56 +287,56 @@\n         line 154: 13\n         line 155: 27\n         line 156: 29\n         line 157: 30\n         line 158: 35\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0      37     0  this   Lorg/apache/commons/io/input/ProxyReader;\n            13      16     1     c   I\n            30       7     1     e   Ljava/io/IOException;\n-            0      37     0  this   Lorg/apache/commons/io/input/ProxyReader;\n       StackMapTable: number_of_entries = 3\n         frame_type = 255 /* full_frame */\n           offset_delta = 23\n           locals = [ class org/apache/commons/io/input/ProxyReader, int ]\n           stack = [ class org/apache/commons/io/input/ProxyReader ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/input/ProxyReader, int ]\n           stack = [ class org/apache/commons/io/input/ProxyReader, int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 4\n           locals = [ class org/apache/commons/io/input/ProxyReader ]\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(char[]) throws java.io.IOException;\n     descriptor: ([C)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #45                 // Method org/apache/commons/io/IOUtils.length:([C)I\n-         5: invokevirtual #35                 // Method beforeRead:(I)V\n+         2: invokestatic  #58                 // Method org/apache/commons/io/IOUtils.length:([C)I\n+         5: invokevirtual #50                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #9                  // Field in:Ljava/io/Reader;\n+         9: getfield      #26                 // Field in:Ljava/io/Reader;\n         12: aload_1\n-        13: invokevirtual #49                 // Method java/io/Reader.read:([C)I\n+        13: invokevirtual #63                 // Method java/io/Reader.read:([C)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #42                 // Method afterRead:(I)V\n+        19: invokevirtual #54                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 171: 0\n@@ -344,48 +344,48 @@\n         line 173: 17\n         line 174: 22\n         line 175: 24\n         line 176: 25\n         line 177: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       7     2     n   I\n-           25       7     2     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      32     1   chr   [C\n+           17       7     2     n   I\n+           25       7     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #35                 // Method beforeRead:(I)V\n+         2: invokevirtual #50                 // Method beforeRead:(I)V\n          5: aload_0\n-         6: getfield      #9                  // Field in:Ljava/io/Reader;\n+         6: getfield      #26                 // Field in:Ljava/io/Reader;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #51                 // Method java/io/Reader.read:([CII)I\n+        12: invokevirtual #68                 // Method java/io/Reader.read:([CII)I\n         15: istore        4\n         17: aload_0\n         18: iload         4\n-        20: invokevirtual #42                 // Method afterRead:(I)V\n+        20: invokevirtual #54                 // Method afterRead:(I)V\n         23: iload         4\n         25: ireturn\n         26: astore        4\n         28: aload_0\n         29: aload         4\n-        31: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        31: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         34: iconst_m1\n         35: ireturn\n       Exception table:\n          from    to  target type\n              0    25    26   Class java/io/IOException\n       LineNumberTable:\n         line 192: 0\n@@ -393,49 +393,49 @@\n         line 194: 17\n         line 195: 23\n         line 196: 26\n         line 197: 28\n         line 198: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       9     4     n   I\n-           28       8     4     e   Ljava/io/IOException;\n             0      36     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      36     1   chr   [C\n             0      36     2    st   I\n             0      36     3   len   I\n+           17       9     4     n   I\n+           28       8     4     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 90 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(java.nio.CharBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/CharBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #54                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-         5: invokevirtual #35                 // Method beforeRead:(I)V\n+         2: invokestatic  #73                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         5: invokevirtual #50                 // Method beforeRead:(I)V\n          8: aload_0\n-         9: getfield      #9                  // Field in:Ljava/io/Reader;\n+         9: getfield      #26                 // Field in:Ljava/io/Reader;\n         12: aload_1\n-        13: invokevirtual #57                 // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n+        13: invokevirtual #76                 // Method java/io/Reader.read:(Ljava/nio/CharBuffer;)I\n         16: istore_2\n         17: aload_0\n         18: iload_2\n-        19: invokevirtual #42                 // Method afterRead:(I)V\n+        19: invokevirtual #54                 // Method afterRead:(I)V\n         22: iload_2\n         23: ireturn\n         24: astore_2\n         25: aload_0\n         26: aload_2\n-        27: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        27: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         30: iconst_m1\n         31: ireturn\n       Exception table:\n          from    to  target type\n              0    23    24   Class java/io/IOException\n       LineNumberTable:\n         line 212: 0\n@@ -443,120 +443,117 @@\n         line 214: 17\n         line 215: 22\n         line 216: 24\n         line 217: 25\n         line 218: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           17       7     2     n   I\n-           25       7     2     e   Ljava/io/IOException;\n             0      32     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      32     1 target   Ljava/nio/CharBuffer;\n+           17       7     2     n   I\n+           25       7     2     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 88 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean ready() throws java.io.IOException;\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #60                 // Method java/io/Reader.ready:()Z\n+         1: getfield      #26                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #81                 // Method java/io/Reader.ready:()Z\n          7: ireturn\n          8: astore_1\n          9: aload_0\n         10: aload_1\n-        11: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        11: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         14: iconst_0\n         15: ireturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/io/IOException\n       LineNumberTable:\n         line 230: 0\n         line 231: 8\n         line 232: 9\n         line 233: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            9       7     1     e   Ljava/io/IOException;\n             0      16     0  this   Lorg/apache/commons/io/input/ProxyReader;\n+            9       7     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/Reader;\n-         4: invokevirtual #63                 // Method java/io/Reader.reset:()V\n+         1: getfield      #26                 // Field in:Ljava/io/Reader;\n+         4: invokevirtual #84                 // Method java/io/Reader.reset:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 244: 0\n-        line 247: 7\n-        line 245: 10\n+        line 245: 7\n         line 246: 11\n         line 248: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       5     1     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyReader;\n+           11       5     1     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/Reader;\n+         1: getfield      #26                 // Field in:Ljava/io/Reader;\n          4: lload_1\n-         5: invokevirtual #66                 // Method java/io/Reader.skip:(J)J\n+         5: invokevirtual #88                 // Method java/io/Reader.skip:(J)J\n          8: lreturn\n          9: astore_3\n         10: aload_0\n         11: aload_3\n-        12: invokevirtual #23                 // Method handleIOException:(Ljava/io/IOException;)V\n+        12: invokevirtual #33                 // Method handleIOException:(Ljava/io/IOException;)V\n         15: lconst_0\n         16: lreturn\n       Exception table:\n          from    to  target type\n              0     8     9   Class java/io/IOException\n       LineNumberTable:\n         line 259: 0\n         line 260: 9\n         line 261: 10\n         line 262: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10       7     3     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/input/ProxyReader;\n             0      17     1    ln   J\n+           10       7     3     e   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ProxyReader.java\"\n"}]}
