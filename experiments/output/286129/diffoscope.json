{"diffoscope-json-version": 1, "source1": "first/TapeInputStream.class", "source2": "second/TapeInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,68 +1,68 @@\n-  SHA-256 checksum c55f292383b4e526dd063389dd1d252e29945e95d4ab940b6af355b16a298fd5\n+  SHA-256 checksum 27d1e8cf186eb468ba927b4a09c4f9c2dcad231d39b228e2d3a94b232a52bbab\n   Compiled from \"TapeInputStream.java\"\n class org.apache.commons.compress.archivers.dump.TapeInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n   this_class: #9                          // org/apache/commons/compress/archivers/dump/TapeInputStream\n   super_class: #53                        // java/io/FilterInputStream\n   interfaces: 0, fields: 7, methods: 12, attributes: 2\n Constant pool:\n-    #1 = Class              #102          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-    #2 = Methodref          #53.#103      // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Fieldref           #9.#104       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockBuffer:[B\n-    #4 = Fieldref           #9.#105       // org/apache/commons/compress/archivers/dump/TapeInputStream.currBlkIdx:I\n-    #5 = Fieldref           #9.#106       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockSize:I\n-    #6 = Fieldref           #9.#107       // org/apache/commons/compress/archivers/dump/TapeInputStream.readOffset:I\n-    #7 = Fieldref           #9.#108       // org/apache/commons/compress/archivers/dump/TapeInputStream.isCompressed:Z\n-    #8 = Fieldref           #9.#109       // org/apache/commons/compress/archivers/dump/TapeInputStream.bytesRead:J\n-    #9 = Class              #110          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #10 = Methodref          #111.#112     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #11 = Methodref          #9.#113       // org/apache/commons/compress/archivers/dump/TapeInputStream.readFully:([BII)V\n-   #12 = Fieldref           #9.#114       // org/apache/commons/compress/archivers/dump/TapeInputStream.in:Ljava/io/InputStream;\n-   #13 = Methodref          #115.#116     // java/io/InputStream.available:()I\n-   #14 = Class              #117          // java/lang/IllegalArgumentException\n-   #15 = String             #118          // all reads must be multiple of record size (1024 bytes.\n-   #16 = Methodref          #14.#119      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #9.#120       // org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock:(Z)V\n-   #18 = Class              #121          // org/apache/commons/compress/archivers/dump/ShortFileException\n+    #1 = Class              #98           // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+    #2 = Methodref          #53.#99       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #3 = Fieldref           #9.#100       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockBuffer:[B\n+    #4 = Fieldref           #9.#101       // org/apache/commons/compress/archivers/dump/TapeInputStream.currBlkIdx:I\n+    #5 = Fieldref           #9.#102       // org/apache/commons/compress/archivers/dump/TapeInputStream.blockSize:I\n+    #6 = Fieldref           #9.#103       // org/apache/commons/compress/archivers/dump/TapeInputStream.readOffset:I\n+    #7 = Fieldref           #9.#104       // org/apache/commons/compress/archivers/dump/TapeInputStream.isCompressed:Z\n+    #8 = Fieldref           #9.#105       // org/apache/commons/compress/archivers/dump/TapeInputStream.bytesRead:J\n+    #9 = Class              #106          // org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #10 = Methodref          #107.#108     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #11 = Methodref          #9.#109       // org/apache/commons/compress/archivers/dump/TapeInputStream.readFully:([BII)V\n+   #12 = Fieldref           #9.#110       // org/apache/commons/compress/archivers/dump/TapeInputStream.in:Ljava/io/InputStream;\n+   #13 = Methodref          #111.#112     // java/io/InputStream.available:()I\n+   #14 = Class              #113          // java/lang/IllegalArgumentException\n+   #15 = String             #114          // all reads must be multiple of record size (1024 bytes.\n+   #16 = Methodref          #14.#115      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #9.#116       // org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock:(Z)V\n+   #18 = Class              #117          // org/apache/commons/compress/archivers/dump/ShortFileException\n    #19 = Long               1024l\n    #21 = Long               -1l\n-   #23 = Fieldref           #111.#114     // java/lang/System.in:Ljava/io/InputStream;\n-   #24 = Methodref          #115.#122     // java/io/InputStream.close:()V\n-   #25 = Methodref          #9.#123       // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-   #26 = Methodref          #18.#124      // org/apache/commons/compress/archivers/dump/ShortFileException.\"<init>\":()V\n-   #27 = Class              #125          // java/io/IOException\n-   #28 = String             #126          // input buffer is closed\n-   #29 = Methodref          #27.#119      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = Fieldref           #107.#110     // java/lang/System.in:Ljava/io/InputStream;\n+   #24 = Methodref          #111.#118     // java/io/InputStream.close:()V\n+   #25 = Methodref          #9.#119       // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+   #26 = Methodref          #18.#120      // org/apache/commons/compress/archivers/dump/ShortFileException.\"<init>\":()V\n+   #27 = Class              #121          // java/io/IOException\n+   #28 = String             #122          // input buffer is closed\n+   #29 = Methodref          #27.#115      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n    #30 = Long               4l\n-   #32 = Methodref          #127.#128     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+   #32 = Methodref          #123.#124     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n    #33 = Integer            268435455\n-   #34 = Methodref          #129.#130     // java/util/Arrays.fill:([BB)V\n-   #35 = Fieldref           #54.#131      // org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n-   #36 = Methodref          #132.#133     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-   #37 = Methodref          #132.#134     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I\n-   #38 = Class              #135          // java/util/zip/Inflater\n-   #39 = Methodref          #38.#124      // java/util/zip/Inflater.\"<init>\":()V\n-   #40 = Methodref          #38.#136      // java/util/zip/Inflater.setInput:([BII)V\n-   #41 = Methodref          #38.#137      // java/util/zip/Inflater.inflate:([B)I\n-   #42 = Methodref          #38.#138      // java/util/zip/Inflater.end:()V\n-   #43 = Class              #139          // java/util/zip/DataFormatException\n-   #44 = Class              #140          // org/apache/commons/compress/archivers/dump/DumpArchiveException\n-   #45 = String             #141          // bad data\n-   #46 = Methodref          #44.#142      // org/apache/commons/compress/archivers/dump/DumpArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #47 = Class              #143          // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n-   #48 = String             #144          // BZLIB2\n-   #49 = Methodref          #47.#119      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":(Ljava/lang/String;)V\n-   #50 = String             #145          // LZO\n-   #51 = Methodref          #47.#124      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":()V\n-   #52 = Methodref          #146.#147     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #53 = Class              #148          // java/io/FilterInputStream\n-   #54 = Class              #149          // org/apache/commons/compress/archivers/dump/TapeInputStream$1\n+   #34 = Methodref          #125.#126     // java/util/Arrays.fill:([BB)V\n+   #35 = Fieldref           #54.#127      // org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n+   #36 = Methodref          #128.#129     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+   #37 = Methodref          #128.#130     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I\n+   #38 = Class              #131          // java/util/zip/Inflater\n+   #39 = Methodref          #38.#120      // java/util/zip/Inflater.\"<init>\":()V\n+   #40 = Methodref          #38.#132      // java/util/zip/Inflater.setInput:([BII)V\n+   #41 = Methodref          #38.#133      // java/util/zip/Inflater.inflate:([B)I\n+   #42 = Methodref          #38.#134      // java/util/zip/Inflater.end:()V\n+   #43 = Class              #135          // java/util/zip/DataFormatException\n+   #44 = Class              #136          // org/apache/commons/compress/archivers/dump/DumpArchiveException\n+   #45 = String             #137          // bad data\n+   #46 = Methodref          #44.#138      // org/apache/commons/compress/archivers/dump/DumpArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #47 = Class              #139          // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n+   #48 = String             #140          // BZLIB2\n+   #49 = Methodref          #47.#115      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":(Ljava/lang/String;)V\n+   #50 = String             #141          // LZO\n+   #51 = Methodref          #47.#120      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":()V\n+   #52 = Methodref          #142.#143     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #53 = Class              #144          // java/io/FilterInputStream\n+   #54 = Class              #145          // org/apache/commons/compress/archivers/dump/TapeInputStream$1\n    #55 = Utf8               InnerClasses\n    #56 = Utf8               blockBuffer\n    #57 = Utf8               [B\n    #58 = Utf8               currBlkIdx\n    #59 = Utf8               I\n    #60 = Utf8               blockSize\n    #61 = Utf8               RECORD_SIZE\n@@ -81,111 +81,107 @@\n    #74 = Utf8               (IZ)V\n    #75 = Utf8               Exceptions\n    #76 = Utf8               available\n    #77 = Utf8               ()I\n    #78 = Utf8               StackMapTable\n    #79 = Utf8               read\n    #80 = Utf8               ([BII)I\n-   #81 = Class              #121          // org/apache/commons/compress/archivers/dump/ShortFileException\n-   #82 = Utf8               skip\n-   #83 = Utf8               (J)J\n-   #84 = Class              #110          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #85 = Utf8               close\n-   #86 = Utf8               ()V\n-   #87 = Utf8               peek\n-   #88 = Utf8               ()[B\n-   #89 = Utf8               readRecord\n-   #90 = Class              #57           // \"[B\"\n-   #91 = Utf8               readBlock\n-   #92 = Utf8               (Z)V\n-   #93 = Class              #135          // java/util/zip/Inflater\n-   #94 = Class              #139          // java/util/zip/DataFormatException\n-   #95 = Class              #150          // java/lang/Throwable\n-   #96 = Utf8               readFully\n-   #97 = Utf8               ([BII)V\n-   #98 = Utf8               getBytesRead\n-   #99 = Utf8               ()J\n-  #100 = Utf8               SourceFile\n-  #101 = Utf8               TapeInputStream.java\n-  #102 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-  #103 = NameAndType        #69:#70       // \"<init>\":(Ljava/io/InputStream;)V\n-  #104 = NameAndType        #56:#57       // blockBuffer:[B\n-  #105 = NameAndType        #58:#59       // currBlkIdx:I\n-  #106 = NameAndType        #60:#59       // blockSize:I\n-  #107 = NameAndType        #64:#59       // readOffset:I\n-  #108 = NameAndType        #65:#66       // isCompressed:Z\n-  #109 = NameAndType        #67:#68       // bytesRead:J\n-  #110 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n-  #111 = Class              #151          // java/lang/System\n-  #112 = NameAndType        #152:#153     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #113 = NameAndType        #96:#97       // readFully:([BII)V\n-  #114 = NameAndType        #154:#155     // in:Ljava/io/InputStream;\n-  #115 = Class              #156          // java/io/InputStream\n-  #116 = NameAndType        #76:#77       // available:()I\n-  #117 = Utf8               java/lang/IllegalArgumentException\n-  #118 = Utf8               all reads must be multiple of record size (1024 bytes.\n-  #119 = NameAndType        #69:#157      // \"<init>\":(Ljava/lang/String;)V\n-  #120 = NameAndType        #91:#92       // readBlock:(Z)V\n-  #121 = Utf8               org/apache/commons/compress/archivers/dump/ShortFileException\n-  #122 = NameAndType        #85:#86       // close:()V\n-  #123 = NameAndType        #79:#80       // read:([BII)I\n-  #124 = NameAndType        #69:#86       // \"<init>\":()V\n-  #125 = Utf8               java/io/IOException\n-  #126 = Utf8               input buffer is closed\n-  #127 = Class              #158          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #128 = NameAndType        #159:#160     // convert32:([BI)I\n-  #129 = Class              #161          // java/util/Arrays\n-  #130 = NameAndType        #162:#163     // fill:([BB)V\n-  #131 = NameAndType        #164:#165     // $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n-  #132 = Class              #166          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n-  #133 = NameAndType        #168:#169     // find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-  #134 = NameAndType        #170:#77      // ordinal:()I\n-  #135 = Utf8               java/util/zip/Inflater\n-  #136 = NameAndType        #171:#97      // setInput:([BII)V\n-  #137 = NameAndType        #172:#173     // inflate:([B)I\n-  #138 = NameAndType        #174:#86      // end:()V\n-  #139 = Utf8               java/util/zip/DataFormatException\n-  #140 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveException\n-  #141 = Utf8               bad data\n-  #142 = NameAndType        #69:#175      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #143 = Utf8               org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n-  #144 = Utf8               BZLIB2\n-  #145 = Utf8               LZO\n-  #146 = Class              #176          // org/apache/commons/compress/utils/IOUtils\n-  #147 = NameAndType        #96:#177      // readFully:(Ljava/io/InputStream;[BII)I\n-  #148 = Utf8               java/io/FilterInputStream\n-  #149 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream$1\n-  #150 = Utf8               java/lang/Throwable\n-  #151 = Utf8               java/lang/System\n-  #152 = Utf8               arraycopy\n-  #153 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #154 = Utf8               in\n-  #155 = Utf8               Ljava/io/InputStream;\n-  #156 = Utf8               java/io/InputStream\n-  #157 = Utf8               (Ljava/lang/String;)V\n-  #158 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #159 = Utf8               convert32\n-  #160 = Utf8               ([BI)I\n-  #161 = Utf8               java/util/Arrays\n-  #162 = Utf8               fill\n-  #163 = Utf8               ([BB)V\n-  #164 = Utf8               $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE\n-  #165 = Utf8               [I\n-  #166 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n-  #167 = Utf8               COMPRESSION_TYPE\n-  #168 = Utf8               find\n-  #169 = Utf8               (I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-  #170 = Utf8               ordinal\n-  #171 = Utf8               setInput\n-  #172 = Utf8               inflate\n-  #173 = Utf8               ([B)I\n-  #174 = Utf8               end\n-  #175 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #176 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #177 = Utf8               (Ljava/io/InputStream;[BII)I\n+   #81 = Utf8               skip\n+   #82 = Utf8               (J)J\n+   #83 = Utf8               close\n+   #84 = Utf8               ()V\n+   #85 = Utf8               peek\n+   #86 = Utf8               ()[B\n+   #87 = Utf8               readRecord\n+   #88 = Class              #57           // \"[B\"\n+   #89 = Utf8               readBlock\n+   #90 = Utf8               (Z)V\n+   #91 = Class              #146          // java/lang/Throwable\n+   #92 = Utf8               readFully\n+   #93 = Utf8               ([BII)V\n+   #94 = Utf8               getBytesRead\n+   #95 = Utf8               ()J\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               TapeInputStream.java\n+   #98 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+   #99 = NameAndType        #69:#70       // \"<init>\":(Ljava/io/InputStream;)V\n+  #100 = NameAndType        #56:#57       // blockBuffer:[B\n+  #101 = NameAndType        #58:#59       // currBlkIdx:I\n+  #102 = NameAndType        #60:#59       // blockSize:I\n+  #103 = NameAndType        #64:#59       // readOffset:I\n+  #104 = NameAndType        #65:#66       // isCompressed:Z\n+  #105 = NameAndType        #67:#68       // bytesRead:J\n+  #106 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n+  #107 = Class              #147          // java/lang/System\n+  #108 = NameAndType        #148:#149     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #109 = NameAndType        #92:#93       // readFully:([BII)V\n+  #110 = NameAndType        #150:#151     // in:Ljava/io/InputStream;\n+  #111 = Class              #152          // java/io/InputStream\n+  #112 = NameAndType        #76:#77       // available:()I\n+  #113 = Utf8               java/lang/IllegalArgumentException\n+  #114 = Utf8               all reads must be multiple of record size (1024 bytes.\n+  #115 = NameAndType        #69:#153      // \"<init>\":(Ljava/lang/String;)V\n+  #116 = NameAndType        #89:#90       // readBlock:(Z)V\n+  #117 = Utf8               org/apache/commons/compress/archivers/dump/ShortFileException\n+  #118 = NameAndType        #83:#84       // close:()V\n+  #119 = NameAndType        #79:#80       // read:([BII)I\n+  #120 = NameAndType        #69:#84       // \"<init>\":()V\n+  #121 = Utf8               java/io/IOException\n+  #122 = Utf8               input buffer is closed\n+  #123 = Class              #154          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+  #124 = NameAndType        #155:#156     // convert32:([BI)I\n+  #125 = Class              #157          // java/util/Arrays\n+  #126 = NameAndType        #158:#159     // fill:([BB)V\n+  #127 = NameAndType        #160:#161     // $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n+  #128 = Class              #162          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n+  #129 = NameAndType        #164:#165     // find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+  #130 = NameAndType        #166:#77      // ordinal:()I\n+  #131 = Utf8               java/util/zip/Inflater\n+  #132 = NameAndType        #167:#93      // setInput:([BII)V\n+  #133 = NameAndType        #168:#169     // inflate:([B)I\n+  #134 = NameAndType        #170:#84      // end:()V\n+  #135 = Utf8               java/util/zip/DataFormatException\n+  #136 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveException\n+  #137 = Utf8               bad data\n+  #138 = NameAndType        #69:#171      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #139 = Utf8               org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n+  #140 = Utf8               BZLIB2\n+  #141 = Utf8               LZO\n+  #142 = Class              #172          // org/apache/commons/compress/utils/IOUtils\n+  #143 = NameAndType        #92:#173      // readFully:(Ljava/io/InputStream;[BII)I\n+  #144 = Utf8               java/io/FilterInputStream\n+  #145 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream$1\n+  #146 = Utf8               java/lang/Throwable\n+  #147 = Utf8               java/lang/System\n+  #148 = Utf8               arraycopy\n+  #149 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #150 = Utf8               in\n+  #151 = Utf8               Ljava/io/InputStream;\n+  #152 = Utf8               java/io/InputStream\n+  #153 = Utf8               (Ljava/lang/String;)V\n+  #154 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+  #155 = Utf8               convert32\n+  #156 = Utf8               ([BI)I\n+  #157 = Utf8               java/util/Arrays\n+  #158 = Utf8               fill\n+  #159 = Utf8               ([BB)V\n+  #160 = Utf8               $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE\n+  #161 = Utf8               [I\n+  #162 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n+  #163 = Utf8               COMPRESSION_TYPE\n+  #164 = Utf8               find\n+  #165 = Utf8               (I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+  #166 = Utf8               ordinal\n+  #167 = Utf8               setInput\n+  #168 = Utf8               inflate\n+  #169 = Utf8               ([B)I\n+  #170 = Utf8               end\n+  #171 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #172 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #173 = Utf8               (Ljava/io/InputStream;[BII)I\n {\n   private byte[] blockBuffer;\n     descriptor: [B\n     flags: (0x0002) ACC_PRIVATE\n \n   private int currBlkIdx;\n     descriptor: I\n@@ -1019,8 +1015,8 @@\n          4: lreturn\n       LineNumberTable:\n         line 353: 0\n }\n SourceFile: \"TapeInputStream.java\"\n InnerClasses:\n   static #54;                             // class org/apache/commons/compress/archivers/dump/TapeInputStream$1\n-  public static final #167= #132 of #1;   // COMPRESSION_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  public static final #163= #128 of #1;   // COMPRESSION_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n"}]}
