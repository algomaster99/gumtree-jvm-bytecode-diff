{"diffoscope-json-version": 1, "source1": "first/ConfigurationDynaClass.class", "source2": "second/ConfigurationDynaClass.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,25 +1,29 @@\n \n package org.apache.commons.configuration2.beanutils;\n \n-import org.apache.commons.logging.LogFactory;\n import org.apache.commons.beanutils.DynaBean;\n import java.util.List;\n import java.util.Iterator;\n import java.util.ArrayList;\n import org.apache.commons.beanutils.DynaProperty;\n+import org.apache.commons.logging.LogFactory;\n import org.apache.commons.configuration2.Configuration;\n import org.apache.commons.logging.Log;\n import org.apache.commons.beanutils.DynaClass;\n \n public class ConfigurationDynaClass implements DynaClass\n {\n     private static final Log LOG;\n     private final Configuration configuration;\n     \n+    static {\n+        LOG = LogFactory.getLog((Class)ConfigurationDynaClass.class);\n+    }\n+    \n     public ConfigurationDynaClass(final Configuration configuration) {\n         if (ConfigurationDynaClass.LOG.isTraceEnabled()) {\n             ConfigurationDynaClass.LOG.trace((Object)(\"ConfigurationDynaClass(\" + configuration + \")\"));\n         }\n         this.configuration = configuration;\n     }\n     \n@@ -84,12 +88,8 @@\n     public String getName() {\n         return ConfigurationDynaBean.class.getName();\n     }\n     \n     public DynaBean newInstance() throws IllegalAccessException, InstantiationException {\n         return (DynaBean)new ConfigurationDynaBean(this.configuration);\n     }\n-    \n-    static {\n-        LOG = LogFactory.getLog((Class)ConfigurationDynaClass.class);\n-    }\n }\n"}]}
