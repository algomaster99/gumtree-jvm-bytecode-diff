{"diffoscope-json-version": 1, "source1": "first/BandSet.class", "source2": "second/BandSet.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -174,17 +174,15 @@\n             codecFamiliesToTry.add(CanonicalCodecFamilies.deltaUnsignedCodecs3);\n             codecFamiliesToTry.add(CanonicalCodecFamilies.deltaUnsignedCodecs4);\n             codecFamiliesToTry.add(CanonicalCodecFamilies.deltaUnsignedCodecs5);\n         }\n         if (name.equalsIgnoreCase(\"cpint\")) {\n             System.out.print(\"\");\n         }\n-        final Iterator iterator = codecFamiliesToTry.iterator();\n-        while (iterator.hasNext()) {\n-            final BHSDCodec[] family = (BHSDCodec[])iterator.next();\n+        for (final BHSDCodec[] family : codecFamiliesToTry) {\n             this.tryCodecs(name, band, defaultCodec, bandData, results, encoded, family);\n             if (this.timeToStop(results)) {\n                 break;\n             }\n         }\n         return results;\n     }\n@@ -229,15 +227,15 @@\n             if (this.timeToStop(results)) {\n                 return;\n             }\n         }\n     }\n     \n     private void encodeWithPopulationCodec(final String name, final int[] band, final BHSDCodec defaultCodec, final BandSet.BandData bandData, final BandSet.BandAnalysisResults results) throws Pack200Exception {\n-        BandSet.BandAnalysisResults.access$402(results, BandSet.BandAnalysisResults.access$400(results) + 3);\n+        BandSet.BandAnalysisResults.access$412(results, 3);\n         final Map distinctValues = BandSet.BandData.access$900(bandData);\n         final List favoured = new ArrayList();\n         for (final Integer value : distinctValues.keySet()) {\n             final Integer count = Integer.valueOf(distinctValues.get((Object)value));\n             if (count > 2 || distinctValues.size() < 256) {\n                 favoured.add(value);\n             }\n@@ -377,15 +375,15 @@\n         }\n         else {\n             specifier += defaultCodec.getL();\n         }\n         final byte[] firstValueEncoded = defaultCodec.encode(new int[] { specifier });\n         final int totalBandLength = firstValueEncoded.length + favouredEncoded.length + tokensEncoded.length + unfavouredEncoded.length;\n         if (totalBandLength + extraMetadataEncoded.length < BandSet.BandAnalysisResults.access$100(results).length) {\n-            BandSet.BandAnalysisResults.access$802(results, BandSet.BandAnalysisResults.access$800(results) + (BandSet.BandAnalysisResults.access$100(results).length - (totalBandLength + extraMetadataEncoded.length)));\n+            BandSet.BandAnalysisResults.access$812(results, BandSet.BandAnalysisResults.access$100(results).length - (totalBandLength + extraMetadataEncoded.length));\n             final byte[] encodedBand = new byte[totalBandLength];\n             System.arraycopy(firstValueEncoded, 0, encodedBand, 0, firstValueEncoded.length);\n             System.arraycopy(favouredEncoded, 0, encodedBand, firstValueEncoded.length, favouredEncoded.length);\n             System.arraycopy(tokensEncoded, 0, encodedBand, firstValueEncoded.length + favouredEncoded.length, tokensEncoded.length);\n             System.arraycopy(unfavouredEncoded, 0, encodedBand, firstValueEncoded.length + favouredEncoded.length + tokensEncoded.length, unfavouredEncoded.length);\n             BandSet.BandAnalysisResults.access$102(results, encodedBand);\n             BandSet.BandAnalysisResults.access$202(results, extraMetadata);\n"}]}
