{"diffoscope-json-version": 1, "source1": "first/JavaLanguageParser$LiteralPrimaryContext.class", "source2": "second/JavaLanguageParser$LiteralPrimaryContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,18 +6,18 @@\n \n public static class LiteralPrimaryContext extends JavaLanguageParser.PrimaryContext\n {\n     public JavaLanguageParser.LiteralContext literal() {\n         return (JavaLanguageParser.LiteralContext)this.getRuleContext((Class)JavaLanguageParser.LiteralContext.class, 0);\n     }\n     \n-    public LiteralPrimaryContext(final JavaLanguageParser.PrimaryContext ctx) {\n-        this.copyFrom(ctx);\n+    public LiteralPrimaryContext(final JavaLanguageParser.PrimaryContext primaryContext) {\n+        this.copyFrom(primaryContext);\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavaLanguageParserVisitor) {\n-            return (T)((JavaLanguageParserVisitor)visitor).visitLiteralPrimary(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavaLanguageParserVisitor) {\n+            return (T)((JavaLanguageParserVisitor)parseTreeVisitor).visitLiteralPrimary(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
