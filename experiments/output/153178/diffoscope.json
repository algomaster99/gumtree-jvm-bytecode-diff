{"diffoscope-json-version": 1, "source1": "first/Charsets.class", "source2": "second/Charsets.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -20,26 +20,14 @@\n     @Deprecated\n     public static final Charset UTF_16BE;\n     @Deprecated\n     public static final Charset UTF_16LE;\n     @Deprecated\n     public static final Charset UTF_8;\n     \n-    public static SortedMap<String, Charset> requiredCharsets() {\n-        return Charsets.STANDARD_CHARSET_MAP;\n-    }\n-    \n-    public static Charset toCharset(final Charset charset) {\n-        return (charset == null) ? Charset.defaultCharset() : charset;\n-    }\n-    \n-    public static Charset toCharset(final String charsetName) {\n-        return (charsetName == null) ? Charset.defaultCharset() : Charset.forName(charsetName);\n-    }\n-    \n     static {\n         final SortedMap<String, Charset> standardCharsetMap = new TreeMap<String, Charset>(String.CASE_INSENSITIVE_ORDER);\n         standardCharsetMap.put(StandardCharsets.ISO_8859_1.name(), StandardCharsets.ISO_8859_1);\n         standardCharsetMap.put(StandardCharsets.US_ASCII.name(), StandardCharsets.US_ASCII);\n         standardCharsetMap.put(StandardCharsets.UTF_16.name(), StandardCharsets.UTF_16);\n         standardCharsetMap.put(StandardCharsets.UTF_16BE.name(), StandardCharsets.UTF_16BE);\n         standardCharsetMap.put(StandardCharsets.UTF_16LE.name(), StandardCharsets.UTF_16LE);\n@@ -48,8 +36,20 @@\n         ISO_8859_1 = StandardCharsets.ISO_8859_1;\n         US_ASCII = StandardCharsets.US_ASCII;\n         UTF_16 = StandardCharsets.UTF_16;\n         UTF_16BE = StandardCharsets.UTF_16BE;\n         UTF_16LE = StandardCharsets.UTF_16LE;\n         UTF_8 = StandardCharsets.UTF_8;\n     }\n+    \n+    public static SortedMap<String, Charset> requiredCharsets() {\n+        return Charsets.STANDARD_CHARSET_MAP;\n+    }\n+    \n+    public static Charset toCharset(final Charset charset) {\n+        return (charset == null) ? Charset.defaultCharset() : charset;\n+    }\n+    \n+    public static Charset toCharset(final String charsetName) {\n+        return (charsetName == null) ? Charset.defaultCharset() : Charset.forName(charsetName);\n+    }\n }\n"}]}
