{"diffoscope-json-version": 1, "source1": "first/UnixLineEndingInputStream.class", "source2": "second/UnixLineEndingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,85 +1,83 @@\n-  SHA-256 checksum 8be29efa718d9ee43793e9400332d704489d5dbba5320025378dd4cdd3e500ce\n+  SHA-256 checksum 90c71843aa77f6f01ae23eca84a9f2cc7e88f102d6e3637661a77096e84cb9e2\n   Compiled from \"UnixLineEndingInputStream.java\"\n public class org.apache.commons.io.input.UnixLineEndingInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/io/input/UnixLineEndingInputStream\n-  super_class: #4                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/UnixLineEndingInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 5, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #2             // org/apache/commons/io/IOUtils\n-   #2 = Utf8               org/apache/commons/io/IOUtils\n-   #3 = Methodref          #4.#5          // java/io/InputStream.\"<init>\":()V\n-   #4 = Class              #6             // java/io/InputStream\n-   #5 = NameAndType        #7:#8          // \"<init>\":()V\n-   #6 = Utf8               java/io/InputStream\n-   #7 = Utf8               <init>\n-   #8 = Utf8               ()V\n-   #9 = Fieldref           #10.#11        // org/apache/commons/io/input/UnixLineEndingInputStream.in:Ljava/io/InputStream;\n-  #10 = Class              #12            // org/apache/commons/io/input/UnixLineEndingInputStream\n-  #11 = NameAndType        #13:#14        // in:Ljava/io/InputStream;\n-  #12 = Utf8               org/apache/commons/io/input/UnixLineEndingInputStream\n-  #13 = Utf8               in\n-  #14 = Utf8               Ljava/io/InputStream;\n-  #15 = Fieldref           #10.#16        // org/apache/commons/io/input/UnixLineEndingInputStream.lineFeedAtEndOfFile:Z\n-  #16 = NameAndType        #17:#18        // lineFeedAtEndOfFile:Z\n-  #17 = Utf8               lineFeedAtEndOfFile\n-  #18 = Utf8               Z\n-  #19 = Methodref          #4.#20         // java/io/InputStream.close:()V\n-  #20 = NameAndType        #21:#8         // close:()V\n-  #21 = Utf8               close\n-  #22 = Fieldref           #10.#23        // org/apache/commons/io/input/UnixLineEndingInputStream.atSlashLf:Z\n-  #23 = NameAndType        #24:#18        // atSlashLf:Z\n-  #24 = Utf8               atSlashLf\n-  #25 = Methodref          #26.#27        // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n-  #26 = Class              #28            // org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #27 = NameAndType        #29:#30        // mark:()Ljava/lang/UnsupportedOperationException;\n-  #28 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n-  #29 = Utf8               mark\n-  #30 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n-  #31 = Fieldref           #10.#32        // org/apache/commons/io/input/UnixLineEndingInputStream.atSlashCr:Z\n-  #32 = NameAndType        #33:#18        // atSlashCr:Z\n-  #33 = Utf8               atSlashCr\n-  #34 = Fieldref           #10.#35        // org/apache/commons/io/input/UnixLineEndingInputStream.atEos:Z\n-  #35 = NameAndType        #36:#18        // atEos:Z\n-  #36 = Utf8               atEos\n-  #37 = Methodref          #10.#38        // org/apache/commons/io/input/UnixLineEndingInputStream.handleEos:(Z)I\n-  #38 = NameAndType        #39:#40        // handleEos:(Z)I\n-  #39 = Utf8               handleEos\n-  #40 = Utf8               (Z)I\n-  #41 = Methodref          #10.#42        // org/apache/commons/io/input/UnixLineEndingInputStream.readWithUpdate:()I\n-  #42 = NameAndType        #43:#44        // readWithUpdate:()I\n-  #43 = Utf8               readWithUpdate\n-  #44 = Utf8               ()I\n-  #45 = Methodref          #10.#46        // org/apache/commons/io/input/UnixLineEndingInputStream.read:()I\n-  #46 = NameAndType        #47:#44        // read:()I\n-  #47 = Utf8               read\n-  #48 = Methodref          #4.#46         // java/io/InputStream.read:()I\n-  #49 = Utf8               (Ljava/io/InputStream;Z)V\n-  #50 = Utf8               Code\n-  #51 = Utf8               LineNumberTable\n-  #52 = Utf8               LocalVariableTable\n-  #53 = Utf8               this\n-  #54 = Utf8               Lorg/apache/commons/io/input/UnixLineEndingInputStream;\n-  #55 = Utf8               inputStream\n-  #56 = Utf8               ensureLineFeedAtEndOfFile\n-  #57 = Utf8               Exceptions\n-  #58 = Class              #59            // java/io/IOException\n-  #59 = Utf8               java/io/IOException\n-  #60 = Utf8               previousWasSlashCr\n-  #61 = Utf8               StackMapTable\n-  #62 = Utf8               (I)V\n-  #63 = Utf8               readlimit\n-  #64 = Utf8               I\n-  #65 = Utf8               previousWasSlashR\n-  #66 = Utf8               target\n-  #67 = Utf8               SourceFile\n-  #68 = Utf8               UnixLineEndingInputStream.java\n+   #1 = Class              #2             // org/apache/commons/io/input/UnixLineEndingInputStream\n+   #2 = Utf8               org/apache/commons/io/input/UnixLineEndingInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               atEos\n+   #6 = Utf8               Z\n+   #7 = Utf8               atSlashCr\n+   #8 = Utf8               atSlashLf\n+   #9 = Utf8               in\n+  #10 = Utf8               Ljava/io/InputStream;\n+  #11 = Utf8               lineFeedAtEndOfFile\n+  #12 = Utf8               <init>\n+  #13 = Utf8               (Ljava/io/InputStream;Z)V\n+  #14 = Utf8               Code\n+  #15 = Methodref          #3.#16         // java/io/InputStream.\"<init>\":()V\n+  #16 = NameAndType        #12:#17        // \"<init>\":()V\n+  #17 = Utf8               ()V\n+  #18 = Fieldref           #1.#19         // org/apache/commons/io/input/UnixLineEndingInputStream.in:Ljava/io/InputStream;\n+  #19 = NameAndType        #9:#10         // in:Ljava/io/InputStream;\n+  #20 = Fieldref           #1.#21         // org/apache/commons/io/input/UnixLineEndingInputStream.lineFeedAtEndOfFile:Z\n+  #21 = NameAndType        #11:#6         // lineFeedAtEndOfFile:Z\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/io/input/UnixLineEndingInputStream;\n+  #26 = Utf8               inputStream\n+  #27 = Utf8               ensureLineFeedAtEndOfFile\n+  #28 = Utf8               close\n+  #29 = Utf8               Exceptions\n+  #30 = Class              #31            // java/io/IOException\n+  #31 = Utf8               java/io/IOException\n+  #32 = Methodref          #3.#33         // java/io/InputStream.close:()V\n+  #33 = NameAndType        #28:#17        // close:()V\n+  #34 = Utf8               handleEos\n+  #35 = Utf8               (Z)I\n+  #36 = Fieldref           #1.#37         // org/apache/commons/io/input/UnixLineEndingInputStream.atSlashLf:Z\n+  #37 = NameAndType        #8:#6          // atSlashLf:Z\n+  #38 = Utf8               previousWasSlashCr\n+  #39 = Utf8               StackMapTable\n+  #40 = Utf8               mark\n+  #41 = Utf8               (I)V\n+  #42 = Methodref          #43.#45        // org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+  #43 = Class              #44            // org/apache/commons/io/input/UnsupportedOperationExceptions\n+  #44 = Utf8               org/apache/commons/io/input/UnsupportedOperationExceptions\n+  #45 = NameAndType        #40:#46        // mark:()Ljava/lang/UnsupportedOperationException;\n+  #46 = Utf8               ()Ljava/lang/UnsupportedOperationException;\n+  #47 = Utf8               readlimit\n+  #48 = Utf8               I\n+  #49 = Utf8               read\n+  #50 = Utf8               ()I\n+  #51 = Fieldref           #1.#52         // org/apache/commons/io/input/UnixLineEndingInputStream.atSlashCr:Z\n+  #52 = NameAndType        #7:#6          // atSlashCr:Z\n+  #53 = Fieldref           #1.#54         // org/apache/commons/io/input/UnixLineEndingInputStream.atEos:Z\n+  #54 = NameAndType        #5:#6          // atEos:Z\n+  #55 = Methodref          #1.#56         // org/apache/commons/io/input/UnixLineEndingInputStream.handleEos:(Z)I\n+  #56 = NameAndType        #34:#35        // handleEos:(Z)I\n+  #57 = Methodref          #1.#58         // org/apache/commons/io/input/UnixLineEndingInputStream.readWithUpdate:()I\n+  #58 = NameAndType        #59:#50        // readWithUpdate:()I\n+  #59 = Utf8               readWithUpdate\n+  #60 = Methodref          #1.#61         // org/apache/commons/io/input/UnixLineEndingInputStream.read:()I\n+  #61 = NameAndType        #49:#50        // read:()I\n+  #62 = Utf8               previousWasSlashR\n+  #63 = Utf8               target\n+  #64 = Methodref          #3.#61         // java/io/InputStream.read:()I\n+  #65 = Utf8               SourceFile\n+  #66 = Utf8               UnixLineEndingInputStream.java\n {\n   private boolean atEos;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean atSlashCr;\n     descriptor: Z\n@@ -99,21 +97,21 @@\n \n   public org.apache.commons.io.input.UnixLineEndingInputStream(java.io.InputStream, boolean);\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #9                  // Field in:Ljava/io/InputStream;\n+         6: putfield      #18                 // Field in:Ljava/io/InputStream;\n          9: aload_0\n         10: iload_2\n-        11: putfield      #15                 // Field lineFeedAtEndOfFile:Z\n+        11: putfield      #20                 // Field lineFeedAtEndOfFile:Z\n         14: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 4\n         line 51: 9\n         line 52: 14\n       LocalVariableTable:\n@@ -121,50 +119,50 @@\n             0      15     0  this   Lorg/apache/commons/io/input/UnixLineEndingInputStream;\n             0      15     1 inputStream   Ljava/io/InputStream;\n             0      15     2 ensureLineFeedAtEndOfFile   Z\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #19                 // Method java/io/InputStream.close:()V\n+         1: invokespecial #32                 // Method java/io/InputStream.close:()V\n          4: aload_0\n-         5: getfield      #9                  // Field in:Ljava/io/InputStream;\n-         8: invokevirtual #19                 // Method java/io/InputStream.close:()V\n+         5: getfield      #18                 // Field in:Ljava/io/InputStream;\n+         8: invokevirtual #32                 // Method java/io/InputStream.close:()V\n         11: return\n       LineNumberTable:\n         line 60: 0\n         line 61: 4\n         line 62: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/input/UnixLineEndingInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   private int handleEos(boolean);\n     descriptor: (Z)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: ifne          11\n          4: aload_0\n-         5: getfield      #15                 // Field lineFeedAtEndOfFile:Z\n+         5: getfield      #20                 // Field lineFeedAtEndOfFile:Z\n          8: ifne          13\n         11: iconst_m1\n         12: ireturn\n         13: aload_0\n-        14: getfield      #22                 // Field atSlashLf:Z\n+        14: getfield      #36                 // Field atSlashLf:Z\n         17: ifne          28\n         20: aload_0\n         21: iconst_1\n-        22: putfield      #22                 // Field atSlashLf:Z\n+        22: putfield      #36                 // Field atSlashLf:Z\n         25: bipush        10\n         27: ireturn\n         28: iconst_m1\n         29: ireturn\n       LineNumberTable:\n         line 71: 0\n         line 72: 11\n@@ -182,60 +180,62 @@\n         frame_type = 14 /* same */\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: invokestatic  #25                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n+         0: invokestatic  #42                 // Method org/apache/commons/io/input/UnsupportedOperationExceptions.mark:()Ljava/lang/UnsupportedOperationException;\n          3: athrow\n       LineNumberTable:\n         line 86: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/input/UnixLineEndingInputStream;\n             0       4     1 readlimit   I\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #31                 // Field atSlashCr:Z\n+         1: getfield      #51                 // Field atSlashCr:Z\n          4: istore_1\n          5: aload_0\n-         6: getfield      #34                 // Field atEos:Z\n+         6: getfield      #53                 // Field atEos:Z\n          9: ifeq          18\n         12: aload_0\n         13: iload_1\n-        14: invokespecial #37                 // Method handleEos:(Z)I\n+        14: invokespecial #55                 // Method handleEos:(Z)I\n         17: ireturn\n         18: aload_0\n-        19: invokespecial #41                 // Method readWithUpdate:()I\n+        19: invokespecial #57                 // Method readWithUpdate:()I\n         22: istore_2\n         23: aload_0\n-        24: getfield      #34                 // Field atEos:Z\n+        24: getfield      #53                 // Field atEos:Z\n         27: ifeq          36\n         30: aload_0\n         31: iload_1\n-        32: invokespecial #37                 // Method handleEos:(Z)I\n+        32: invokespecial #55                 // Method handleEos:(Z)I\n         35: ireturn\n         36: aload_0\n-        37: getfield      #31                 // Field atSlashCr:Z\n+        37: getfield      #51                 // Field atSlashCr:Z\n         40: ifeq          46\n         43: bipush        10\n         45: ireturn\n         46: iload_1\n         47: ifeq          62\n         50: aload_0\n-        51: getfield      #22                 // Field atSlashLf:Z\n+        51: getfield      #36                 // Field atSlashLf:Z\n         54: ifeq          62\n         57: aload_0\n-        58: invokevirtual #45                 // Method read:()I\n+        58: invokevirtual #60                 // Method read:()I\n         61: ireturn\n         62: iload_2\n         63: ireturn\n       LineNumberTable:\n         line 94: 0\n         line 95: 5\n         line 96: 12\n@@ -257,55 +257,55 @@\n           offset_delta = 18\n           locals = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ int ]\n         frame_type = 9 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private int readWithUpdate() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #48                 // Method java/io/InputStream.read:()I\n+         1: getfield      #18                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #64                 // Method java/io/InputStream.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n-        19: putfield      #34                 // Field atEos:Z\n+        19: putfield      #53                 // Field atEos:Z\n         22: aload_0\n-        23: getfield      #34                 // Field atEos:Z\n+        23: getfield      #53                 // Field atEos:Z\n         26: ifeq          31\n         29: iload_1\n         30: ireturn\n         31: aload_0\n         32: iload_1\n         33: bipush        13\n         35: if_icmpne     42\n         38: iconst_1\n         39: goto          43\n         42: iconst_0\n-        43: putfield      #31                 // Field atSlashCr:Z\n+        43: putfield      #51                 // Field atSlashCr:Z\n         46: aload_0\n         47: iload_1\n         48: bipush        10\n         50: if_icmpne     57\n         53: iconst_1\n         54: goto          58\n         57: iconst_0\n-        58: putfield      #22                 // Field atSlashLf:Z\n+        58: putfield      #36                 // Field atSlashLf:Z\n         61: iload_1\n         62: ireturn\n       LineNumberTable:\n         line 119: 0\n         line 120: 8\n         line 121: 22\n         line 122: 29\n@@ -334,11 +334,9 @@\n           stack = [ class org/apache/commons/io/input/UnixLineEndingInputStream, int ]\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/input/UnixLineEndingInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/input/UnixLineEndingInputStream, int ]\n           stack = [ class org/apache/commons/io/input/UnixLineEndingInputStream, int ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"UnixLineEndingInputStream.java\"\n"}]}
