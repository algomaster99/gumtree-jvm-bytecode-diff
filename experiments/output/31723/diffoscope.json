{"diffoscope-json-version": 1, "source1": "first/TaggedIOException.class", "source2": "second/TaggedIOException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,75 +1,75 @@\n-  SHA-256 checksum 44f68d4eac2614955fd1f488ce95069527a15323c8a58d3e0277025c8d19beed\n+  SHA-256 checksum 7138782d076074bc86ca82aca13aec7b5f5ed68a08f7defbf13af891ec551309\n   Compiled from \"TaggedIOException.java\"\n public class org.apache.commons.io.TaggedIOException extends org.apache.commons.io.IOExceptionWithCause\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/TaggedIOException\n-  super_class: #10                        // org/apache/commons/io/IOExceptionWithCause\n+  super_class: #28                        // org/apache/commons/io/IOExceptionWithCause\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #43            // org/apache/commons/io/TaggedIOException\n-   #2 = Fieldref           #1.#44         // org/apache/commons/io/TaggedIOException.tag:Ljava/io/Serializable;\n-   #3 = Methodref          #45.#46        // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #4 = Methodref          #1.#47         // org/apache/commons/io/TaggedIOException.isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n-   #5 = Methodref          #1.#48         // org/apache/commons/io/TaggedIOException.getCause:()Ljava/io/IOException;\n-   #6 = Methodref          #9.#49         // java/io/IOException.getMessage:()Ljava/lang/String;\n-   #7 = Methodref          #10.#50        // org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #8 = Methodref          #10.#51        // org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n-   #9 = Class              #52            // java/io/IOException\n-  #10 = Class              #53            // org/apache/commons/io/IOExceptionWithCause\n-  #11 = Utf8               serialVersionUID\n-  #12 = Utf8               J\n-  #13 = Utf8               ConstantValue\n-  #14 = Long               -6994123481142850163l\n-  #16 = Utf8               tag\n-  #17 = Utf8               Ljava/io/Serializable;\n-  #18 = Utf8               isTaggedWith\n-  #19 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)Z\n-  #20 = Utf8               Code\n-  #21 = Utf8               LineNumberTable\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               throwable\n-  #24 = Utf8               Ljava/lang/Throwable;\n-  #25 = Utf8               Ljava/lang/Object;\n-  #26 = Utf8               StackMapTable\n-  #27 = Utf8               throwCauseIfTaggedWith\n-  #28 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)V\n-  #29 = Utf8               Exceptions\n-  #30 = Utf8               <init>\n-  #31 = Utf8               (Ljava/io/IOException;Ljava/io/Serializable;)V\n-  #32 = Utf8               this\n-  #33 = Utf8               Lorg/apache/commons/io/TaggedIOException;\n-  #34 = Utf8               original\n-  #35 = Utf8               Ljava/io/IOException;\n-  #36 = Utf8               getCause\n-  #37 = Utf8               ()Ljava/io/IOException;\n-  #38 = Utf8               getTag\n-  #39 = Utf8               ()Ljava/io/Serializable;\n-  #40 = Utf8               ()Ljava/lang/Throwable;\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               TaggedIOException.java\n-  #43 = Utf8               org/apache/commons/io/TaggedIOException\n-  #44 = NameAndType        #16:#17        // tag:Ljava/io/Serializable;\n-  #45 = Class              #54            // java/lang/Object\n-  #46 = NameAndType        #55:#56        // equals:(Ljava/lang/Object;)Z\n-  #47 = NameAndType        #18:#19        // isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n-  #48 = NameAndType        #36:#37        // getCause:()Ljava/io/IOException;\n-  #49 = NameAndType        #57:#58        // getMessage:()Ljava/lang/String;\n-  #50 = NameAndType        #30:#59        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #51 = NameAndType        #36:#40        // getCause:()Ljava/lang/Throwable;\n-  #52 = Utf8               java/io/IOException\n-  #53 = Utf8               org/apache/commons/io/IOExceptionWithCause\n-  #54 = Utf8               java/lang/Object\n-  #55 = Utf8               equals\n-  #56 = Utf8               (Ljava/lang/Object;)Z\n-  #57 = Utf8               getMessage\n-  #58 = Utf8               ()Ljava/lang/String;\n-  #59 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #1 = Class              #2             // org/apache/commons/io/TaggedIOException\n+   #2 = Utf8               org/apache/commons/io/TaggedIOException\n+   #3 = Fieldref           #1.#4          // org/apache/commons/io/TaggedIOException.tag:Ljava/io/Serializable;\n+   #4 = NameAndType        #5:#6          // tag:Ljava/io/Serializable;\n+   #5 = Utf8               tag\n+   #6 = Utf8               Ljava/io/Serializable;\n+   #7 = Methodref          #8.#9          // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+   #8 = Class              #10            // java/lang/Object\n+   #9 = NameAndType        #11:#12        // equals:(Ljava/lang/Object;)Z\n+  #10 = Utf8               java/lang/Object\n+  #11 = Utf8               equals\n+  #12 = Utf8               (Ljava/lang/Object;)Z\n+  #13 = Methodref          #1.#14         // org/apache/commons/io/TaggedIOException.isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+  #14 = NameAndType        #15:#16        // isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+  #15 = Utf8               isTaggedWith\n+  #16 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+  #17 = Methodref          #1.#18         // org/apache/commons/io/TaggedIOException.getCause:()Ljava/io/IOException;\n+  #18 = NameAndType        #19:#20        // getCause:()Ljava/io/IOException;\n+  #19 = Utf8               getCause\n+  #20 = Utf8               ()Ljava/io/IOException;\n+  #21 = Methodref          #22.#23        // java/io/IOException.getMessage:()Ljava/lang/String;\n+  #22 = Class              #24            // java/io/IOException\n+  #23 = NameAndType        #25:#26        // getMessage:()Ljava/lang/String;\n+  #24 = Utf8               java/io/IOException\n+  #25 = Utf8               getMessage\n+  #26 = Utf8               ()Ljava/lang/String;\n+  #27 = Methodref          #28.#29        // org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #28 = Class              #30            // org/apache/commons/io/IOExceptionWithCause\n+  #29 = NameAndType        #31:#32        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #30 = Utf8               org/apache/commons/io/IOExceptionWithCause\n+  #31 = Utf8               <init>\n+  #32 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #33 = Methodref          #28.#34        // org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n+  #34 = NameAndType        #19:#35        // getCause:()Ljava/lang/Throwable;\n+  #35 = Utf8               ()Ljava/lang/Throwable;\n+  #36 = Utf8               serialVersionUID\n+  #37 = Utf8               J\n+  #38 = Utf8               ConstantValue\n+  #39 = Long               -6994123481142850163l\n+  #41 = Utf8               Code\n+  #42 = Utf8               LineNumberTable\n+  #43 = Utf8               LocalVariableTable\n+  #44 = Utf8               throwable\n+  #45 = Utf8               Ljava/lang/Throwable;\n+  #46 = Utf8               Ljava/lang/Object;\n+  #47 = Utf8               StackMapTable\n+  #48 = Utf8               throwCauseIfTaggedWith\n+  #49 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Object;)V\n+  #50 = Utf8               Exceptions\n+  #51 = Utf8               (Ljava/io/IOException;Ljava/io/Serializable;)V\n+  #52 = Utf8               this\n+  #53 = Utf8               Lorg/apache/commons/io/TaggedIOException;\n+  #54 = Utf8               original\n+  #55 = Utf8               Ljava/io/IOException;\n+  #56 = Utf8               getTag\n+  #57 = Utf8               ()Ljava/io/Serializable;\n+  #58 = Utf8               SourceFile\n+  #59 = Utf8               TaggedIOException.java\n {\n   private static final long serialVersionUID = -6994123481142850163l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -6994123481142850163l\n \n   private final java.io.Serializable tag;\n@@ -85,16 +85,16 @@\n          1: ifnull        29\n          4: aload_0\n          5: instanceof    #1                  // class org/apache/commons/io/TaggedIOException\n          8: ifeq          29\n         11: aload_1\n         12: aload_0\n         13: checkcast     #1                  // class org/apache/commons/io/TaggedIOException\n-        16: getfield      #2                  // Field tag:Ljava/io/Serializable;\n-        19: invokevirtual #3                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        16: getfield      #3                  // Field tag:Ljava/io/Serializable;\n+        19: invokevirtual #7                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         22: ifeq          29\n         25: iconst_1\n         26: goto          30\n         29: iconst_0\n         30: ireturn\n       LineNumberTable:\n         line 66: 0\n@@ -112,19 +112,19 @@\n   public static void throwCauseIfTaggedWith(java.lang.Throwable, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #4                  // Method isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n+         2: invokestatic  #13                 // Method isTaggedWith:(Ljava/lang/Throwable;Ljava/lang/Object;)Z\n          5: ifeq          16\n          8: aload_0\n          9: checkcast     #1                  // class org/apache/commons/io/TaggedIOException\n-        12: invokevirtual #5                  // Method getCause:()Ljava/io/IOException;\n+        12: invokevirtual #17                 // Method getCause:()Ljava/io/IOException;\n         15: athrow\n         16: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 8\n         line 98: 16\n       LocalVariableTable:\n@@ -139,20 +139,20 @@\n   public org.apache.commons.io.TaggedIOException(java.io.IOException, java.io.Serializable);\n     descriptor: (Ljava/io/IOException;Ljava/io/Serializable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #6                  // Method java/io/IOException.getMessage:()Ljava/lang/String;\n+         2: invokevirtual #21                 // Method java/io/IOException.getMessage:()Ljava/lang/String;\n          5: aload_1\n-         6: invokespecial #7                  // Method org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+         6: invokespecial #27                 // Method org/apache/commons/io/IOExceptionWithCause.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n          9: aload_0\n         10: aload_2\n-        11: putfield      #2                  // Field tag:Ljava/io/Serializable;\n+        11: putfield      #3                  // Field tag:Ljava/io/Serializable;\n         14: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 9\n         line 114: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -162,44 +162,44 @@\n \n   public synchronized java.io.IOException getCause();\n     descriptor: ()Ljava/io/IOException;\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #8                  // Method org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n-         4: checkcast     #9                  // class java/io/IOException\n+         1: invokespecial #33                 // Method org/apache/commons/io/IOExceptionWithCause.getCause:()Ljava/lang/Throwable;\n+         4: checkcast     #22                 // class java/io/IOException\n          7: areturn\n       LineNumberTable:\n         line 124: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/TaggedIOException;\n \n   public java.io.Serializable getTag();\n     descriptor: ()Ljava/io/Serializable;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field tag:Ljava/io/Serializable;\n+         1: getfield      #3                  // Field tag:Ljava/io/Serializable;\n          4: areturn\n       LineNumberTable:\n         line 133: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/TaggedIOException;\n \n   public java.lang.Throwable getCause();\n     descriptor: ()Ljava/lang/Throwable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method getCause:()Ljava/io/IOException;\n+         1: invokevirtual #17                 // Method getCause:()Ljava/io/IOException;\n          4: areturn\n       LineNumberTable:\n         line 29: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/TaggedIOException;\n }\n"}]}
