{"diffoscope-json-version": 1, "source1": "first/LocalVariablesInfo.class", "source2": "second/LocalVariablesInfo.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,34 +5,34 @@\n import org.apache.bcel.generic.Type;\n import org.apache.bcel.verifier.exc.AssertionViolatedException;\n \n public class LocalVariablesInfo\n {\n     private final LocalVariableInfo[] localVariableInfos;\n     \n-    LocalVariablesInfo(final int max_locals) {\n-        this.localVariableInfos = new LocalVariableInfo[max_locals];\n-        for (int i = 0; i < max_locals; ++i) {\n+    LocalVariablesInfo(final int n) {\n+        this.localVariableInfos = new LocalVariableInfo[n];\n+        for (int i = 0; i < n; ++i) {\n             this.localVariableInfos[i] = new LocalVariableInfo();\n         }\n     }\n     \n-    public LocalVariableInfo getLocalVariableInfo(final int slot) {\n-        if (slot < 0 || slot >= this.localVariableInfos.length) {\n+    public LocalVariableInfo getLocalVariableInfo(final int n) {\n+        if (n < 0 || n >= this.localVariableInfos.length) {\n             throw new AssertionViolatedException(\"Slot number for local variable information out of range.\");\n         }\n-        return this.localVariableInfos[slot];\n+        return this.localVariableInfos[n];\n     }\n     \n-    public void add(final int slot, final String name, final int startPc, final int length, final Type type) throws LocalVariableInfoInconsistentException {\n-        if (slot < 0 || slot >= this.localVariableInfos.length) {\n+    public void add(final int n, final String s, final int n2, final int n3, final Type type) throws LocalVariableInfoInconsistentException {\n+        if (n < 0 || n >= this.localVariableInfos.length) {\n             throw new AssertionViolatedException(\"Slot number for local variable information out of range.\");\n         }\n-        this.localVariableInfos[slot].add(name, startPc, length, type);\n+        this.localVariableInfos[n].add(s, n2, n3, type);\n         if (type == Type.LONG) {\n-            this.localVariableInfos[slot + 1].add(name, startPc, length, (Type)LONG_Upper.theInstance());\n+            this.localVariableInfos[n + 1].add(s, n2, n3, (Type)LONG_Upper.theInstance());\n         }\n         if (type == Type.DOUBLE) {\n-            this.localVariableInfos[slot + 1].add(name, startPc, length, (Type)DOUBLE_Upper.theInstance());\n+            this.localVariableInfos[n + 1].add(s, n2, n3, (Type)DOUBLE_Upper.theInstance());\n         }\n     }\n }\n"}]}
