{"diffoscope-json-version": 1, "source1": "first/AbstractCoder.class", "source2": "second/AbstractCoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,155 +1,155 @@\n-  SHA-256 checksum abb6115fb78bbe6bff4fab8febab8eb9d85973de16f028f585b61a8e2318f2f9\n+  SHA-256 checksum 48ab8c1000abc4639f37933129b124557a5fe6aa4e089bfb5ebf606cdb4b20dd\n   Compiled from \"AbstractCoder.java\"\n abstract class org.apache.commons.compress.archivers.sevenz.AbstractCoder\n   minor version: 0\n   major version: 52\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n-  this_class: #16                         // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n-  super_class: #17                        // java/lang/Object\n+  this_class: #24                         // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n+  super_class: #8                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 8, attributes: 3\n Constant pool:\n-    #1 = Class              #63           // java/lang/Number\n-    #2 = Methodref          #1.#64        // java/lang/Number.intValue:()I\n-    #3 = Methodref          #17.#65       // java/lang/Object.\"<init>\":()V\n-    #4 = String             #18           // optionClasses\n-    #5 = Methodref          #66.#67       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #6 = Class              #19           // \"[Ljava/lang/Class;\"\n-    #7 = Fieldref           #16.#68       // org/apache/commons/compress/archivers/sevenz/AbstractCoder.optionClasses:[Ljava/lang/Class;\n-    #8 = Class              #69           // java/lang/UnsupportedOperationException\n-    #9 = String             #70           // Method doesn\\'t support writing\n-   #10 = Methodref          #8.#71        // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = Fieldref           #72.#73       // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-   #12 = InterfaceMethodref #74.#75       // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-   #13 = InvokeDynamic      #0:#81        // #0:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;\n-   #14 = InterfaceMethodref #74.#82       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-   #15 = Methodref          #83.#84       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #16 = Class              #85           // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n-   #17 = Class              #86           // java/lang/Object\n-   #18 = Utf8               optionClasses\n-   #19 = Utf8               [Ljava/lang/Class;\n-   #20 = Utf8               Signature\n-   #21 = Utf8               [Ljava/lang/Class<*>;\n-   #22 = Utf8               toInt\n-   #23 = Utf8               (Ljava/lang/Object;I)I\n-   #24 = Utf8               Code\n-   #25 = Utf8               LineNumberTable\n-   #26 = Utf8               LocalVariableTable\n-   #27 = Utf8               options\n-   #28 = Utf8               Ljava/lang/Object;\n-   #29 = Utf8               defaultValue\n-   #30 = Utf8               I\n-   #31 = Utf8               StackMapTable\n-   #32 = Utf8               <init>\n-   #33 = Utf8               ([Ljava/lang/Class;)V\n-   #34 = Utf8               this\n-   #35 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/AbstractCoder;\n-   #36 = Utf8               LocalVariableTypeTable\n-   #37 = Utf8               ([Ljava/lang/Class<*>;)V\n-   #38 = Utf8               decode\n-   #39 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-   #40 = Utf8               Exceptions\n-   #41 = Class              #87           // java/io/IOException\n-   #42 = Utf8               encode\n-   #43 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-   #44 = Utf8               out\n-   #45 = Utf8               Ljava/io/OutputStream;\n-   #46 = Utf8               getOptionsAsProperties\n-   #47 = Utf8               (Ljava/lang/Object;)[B\n-   #48 = Utf8               getOptionsFromCoder\n-   #49 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-   #50 = Utf8               coder\n-   #51 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-   #52 = Utf8               in\n-   #53 = Utf8               Ljava/io/InputStream;\n-   #54 = Utf8               isOptionInstance\n-   #55 = Utf8               (Ljava/lang/Object;)Z\n-   #56 = Utf8               opts\n-   #57 = Utf8               lambda$isOptionInstance$0\n-   #58 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Z\n-   #59 = Utf8               c\n-   #60 = Utf8               Ljava/lang/Class;\n-   #61 = Utf8               SourceFile\n-   #62 = Utf8               AbstractCoder.java\n-   #63 = Utf8               java/lang/Number\n-   #64 = NameAndType        #88:#89       // intValue:()I\n-   #65 = NameAndType        #32:#90       // \"<init>\":()V\n-   #66 = Class              #91           // java/util/Objects\n-   #67 = NameAndType        #92:#93       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #68 = NameAndType        #18:#19       // optionClasses:[Ljava/lang/Class;\n-   #69 = Utf8               java/lang/UnsupportedOperationException\n-   #70 = Utf8               Method doesn\\'t support writing\n-   #71 = NameAndType        #32:#94       // \"<init>\":(Ljava/lang/String;)V\n-   #72 = Class              #95           // org/apache/commons/compress/utils/ByteUtils\n-   #73 = NameAndType        #96:#97       // EMPTY_BYTE_ARRAY:[B\n-   #74 = Class              #98           // java/util/stream/Stream\n-   #75 = NameAndType        #99:#100      // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-   #76 = Utf8               BootstrapMethods\n-   #77 = MethodHandle       6:#101        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #78 = MethodType         #55           //  (Ljava/lang/Object;)Z\n-   #79 = MethodHandle       6:#102        // REF_invokeStatic org/apache/commons/compress/archivers/sevenz/AbstractCoder.lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n-   #80 = MethodType         #103          //  (Ljava/lang/Class;)Z\n-   #81 = NameAndType        #104:#105     // test:(Ljava/lang/Object;)Ljava/util/function/Predicate;\n-   #82 = NameAndType        #106:#107     // anyMatch:(Ljava/util/function/Predicate;)Z\n-   #83 = Class              #108          // java/lang/Class\n-   #84 = NameAndType        #109:#55      // isInstance:(Ljava/lang/Object;)Z\n-   #85 = Utf8               org/apache/commons/compress/archivers/sevenz/AbstractCoder\n-   #86 = Utf8               java/lang/Object\n-   #87 = Utf8               java/io/IOException\n-   #88 = Utf8               intValue\n-   #89 = Utf8               ()I\n-   #90 = Utf8               ()V\n-   #91 = Utf8               java/util/Objects\n-   #92 = Utf8               requireNonNull\n-   #93 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #94 = Utf8               (Ljava/lang/String;)V\n-   #95 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-   #96 = Utf8               EMPTY_BYTE_ARRAY\n-   #97 = Utf8               [B\n-   #98 = Utf8               java/util/stream/Stream\n-   #99 = Utf8               of\n-  #100 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #101 = Methodref          #110.#111     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #102 = Methodref          #16.#112      // org/apache/commons/compress/archivers/sevenz/AbstractCoder.lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n-  #103 = Utf8               (Ljava/lang/Class;)Z\n-  #104 = Utf8               test\n-  #105 = Utf8               (Ljava/lang/Object;)Ljava/util/function/Predicate;\n-  #106 = Utf8               anyMatch\n-  #107 = Utf8               (Ljava/util/function/Predicate;)Z\n-  #108 = Utf8               java/lang/Class\n-  #109 = Utf8               isInstance\n-  #110 = Class              #113          // java/lang/invoke/LambdaMetafactory\n-  #111 = NameAndType        #114:#118     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #112 = NameAndType        #57:#58       // lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n-  #113 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #114 = Utf8               metafactory\n-  #115 = Class              #120          // java/lang/invoke/MethodHandles$Lookup\n-  #116 = Utf8               Lookup\n-  #117 = Utf8               InnerClasses\n-  #118 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #119 = Class              #121          // java/lang/invoke/MethodHandles\n-  #120 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #121 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // java/lang/Number\n+    #2 = Utf8               java/lang/Number\n+    #3 = Methodref          #1.#4         // java/lang/Number.intValue:()I\n+    #4 = NameAndType        #5:#6         // intValue:()I\n+    #5 = Utf8               intValue\n+    #6 = Utf8               ()I\n+    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #10           // java/lang/Object\n+    #9 = NameAndType        #11:#12       // \"<init>\":()V\n+   #10 = Utf8               java/lang/Object\n+   #11 = Utf8               <init>\n+   #12 = Utf8               ()V\n+   #13 = String             #14           // optionClasses\n+   #14 = Utf8               optionClasses\n+   #15 = Methodref          #16.#17       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #16 = Class              #18           // java/util/Objects\n+   #17 = NameAndType        #19:#20       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #18 = Utf8               java/util/Objects\n+   #19 = Utf8               requireNonNull\n+   #20 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #21 = Class              #22           // \"[Ljava/lang/Class;\"\n+   #22 = Utf8               [Ljava/lang/Class;\n+   #23 = Fieldref           #24.#25       // org/apache/commons/compress/archivers/sevenz/AbstractCoder.optionClasses:[Ljava/lang/Class;\n+   #24 = Class              #26           // org/apache/commons/compress/archivers/sevenz/AbstractCoder\n+   #25 = NameAndType        #14:#22       // optionClasses:[Ljava/lang/Class;\n+   #26 = Utf8               org/apache/commons/compress/archivers/sevenz/AbstractCoder\n+   #27 = Class              #28           // java/lang/UnsupportedOperationException\n+   #28 = Utf8               java/lang/UnsupportedOperationException\n+   #29 = String             #30           // Method doesn\\'t support writing\n+   #30 = Utf8               Method doesn\\'t support writing\n+   #31 = Methodref          #27.#32       // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #32 = NameAndType        #11:#33       // \"<init>\":(Ljava/lang/String;)V\n+   #33 = Utf8               (Ljava/lang/String;)V\n+   #34 = Fieldref           #35.#36       // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+   #35 = Class              #37           // org/apache/commons/compress/utils/ByteUtils\n+   #36 = NameAndType        #38:#39       // EMPTY_BYTE_ARRAY:[B\n+   #37 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #38 = Utf8               EMPTY_BYTE_ARRAY\n+   #39 = Utf8               [B\n+   #40 = InterfaceMethodref #41.#42       // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #41 = Class              #43           // java/util/stream/Stream\n+   #42 = NameAndType        #44:#45       // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #43 = Utf8               java/util/stream/Stream\n+   #44 = Utf8               of\n+   #45 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #46 = InvokeDynamic      #0:#47        // #0:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;\n+   #47 = NameAndType        #48:#49       // test:(Ljava/lang/Object;)Ljava/util/function/Predicate;\n+   #48 = Utf8               test\n+   #49 = Utf8               (Ljava/lang/Object;)Ljava/util/function/Predicate;\n+   #50 = InterfaceMethodref #41.#51       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #51 = NameAndType        #52:#53       // anyMatch:(Ljava/util/function/Predicate;)Z\n+   #52 = Utf8               anyMatch\n+   #53 = Utf8               (Ljava/util/function/Predicate;)Z\n+   #54 = Methodref          #55.#56       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+   #55 = Class              #57           // java/lang/Class\n+   #56 = NameAndType        #58:#59       // isInstance:(Ljava/lang/Object;)Z\n+   #57 = Utf8               java/lang/Class\n+   #58 = Utf8               isInstance\n+   #59 = Utf8               (Ljava/lang/Object;)Z\n+   #60 = Utf8               Signature\n+   #61 = Utf8               [Ljava/lang/Class<*>;\n+   #62 = Utf8               toInt\n+   #63 = Utf8               (Ljava/lang/Object;I)I\n+   #64 = Utf8               Code\n+   #65 = Utf8               LineNumberTable\n+   #66 = Utf8               LocalVariableTable\n+   #67 = Utf8               options\n+   #68 = Utf8               Ljava/lang/Object;\n+   #69 = Utf8               defaultValue\n+   #70 = Utf8               I\n+   #71 = Utf8               StackMapTable\n+   #72 = Utf8               ([Ljava/lang/Class;)V\n+   #73 = Utf8               this\n+   #74 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/AbstractCoder;\n+   #75 = Utf8               LocalVariableTypeTable\n+   #76 = Utf8               ([Ljava/lang/Class<*>;)V\n+   #77 = Utf8               decode\n+   #78 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+   #79 = Utf8               Exceptions\n+   #80 = Class              #81           // java/io/IOException\n+   #81 = Utf8               java/io/IOException\n+   #82 = Utf8               encode\n+   #83 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+   #84 = Utf8               out\n+   #85 = Utf8               Ljava/io/OutputStream;\n+   #86 = Utf8               getOptionsAsProperties\n+   #87 = Utf8               (Ljava/lang/Object;)[B\n+   #88 = Utf8               getOptionsFromCoder\n+   #89 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+   #90 = Utf8               coder\n+   #91 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+   #92 = Utf8               in\n+   #93 = Utf8               Ljava/io/InputStream;\n+   #94 = Utf8               isOptionInstance\n+   #95 = Utf8               opts\n+   #96 = Utf8               lambda$isOptionInstance$0\n+   #97 = Utf8               (Ljava/lang/Object;Ljava/lang/Class;)Z\n+   #98 = Utf8               c\n+   #99 = Utf8               Ljava/lang/Class;\n+  #100 = Utf8               SourceFile\n+  #101 = Utf8               AbstractCoder.java\n+  #102 = Utf8               BootstrapMethods\n+  #103 = MethodHandle       6:#104        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #104 = Methodref          #105.#106     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #105 = Class              #107          // java/lang/invoke/LambdaMetafactory\n+  #106 = NameAndType        #108:#109     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #107 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #108 = Utf8               metafactory\n+  #109 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #110 = MethodType         #59           //  (Ljava/lang/Object;)Z\n+  #111 = MethodHandle       6:#112        // REF_invokeStatic org/apache/commons/compress/archivers/sevenz/AbstractCoder.lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n+  #112 = Methodref          #24.#113      // org/apache/commons/compress/archivers/sevenz/AbstractCoder.lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n+  #113 = NameAndType        #96:#97       // lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n+  #114 = MethodType         #115          //  (Ljava/lang/Class;)Z\n+  #115 = Utf8               (Ljava/lang/Class;)Z\n+  #116 = Utf8               InnerClasses\n+  #117 = Class              #118          // java/lang/invoke/MethodHandles$Lookup\n+  #118 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #119 = Class              #120          // java/lang/invoke/MethodHandles\n+  #120 = Utf8               java/lang/invoke/MethodHandles\n+  #121 = Utf8               Lookup\n {\n   private final java.lang.Class<?>[] optionClasses;\n     descriptor: [Ljava/lang/Class;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #21                          // [Ljava/lang/Class<*>;\n+    Signature: #61                          // [Ljava/lang/Class<*>;\n \n   protected static int toInt(java.lang.Object, int);\n     descriptor: (Ljava/lang/Object;I)I\n     flags: (0x000c) ACC_PROTECTED, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n          1: instanceof    #1                  // class java/lang/Number\n          4: ifeq          17\n          7: aload_0\n          8: checkcast     #1                  // class java/lang/Number\n-        11: invokevirtual #2                  // Method java/lang/Number.intValue:()I\n+        11: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n         14: goto          18\n         17: iload_1\n         18: ireturn\n       LineNumberTable:\n         line 41: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -162,50 +162,50 @@\n \n   protected org.apache.commons.compress.archivers.sevenz.AbstractCoder(java.lang.Class<?>...);\n     descriptor: ([Ljava/lang/Class;)V\n     flags: (0x0084) ACC_PROTECTED, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #4                  // String optionClasses\n-         8: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #6                  // class \"[Ljava/lang/Class;\"\n-        14: putfield      #7                  // Field optionClasses:[Ljava/lang/Class;\n+         6: ldc           #13                 // String optionClasses\n+         8: invokestatic  #15                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #21                 // class \"[Ljava/lang/Class;\"\n+        14: putfield      #23                 // Field optionClasses:[Ljava/lang/Class;\n         17: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/compress/archivers/sevenz/AbstractCoder;\n             0      18     1 optionClasses   [Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      18     1 optionClasses   [Ljava/lang/Class<*>;\n-    Signature: #37                          // ([Ljava/lang/Class<*>;)V\n+    Signature: #76                          // ([Ljava/lang/Class<*>;)V\n \n   abstract java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[], int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n     flags: (0x0400) ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n     Code:\n       stack=3, locals=3, args_size=3\n-         0: new           #8                  // class java/lang/UnsupportedOperationException\n+         0: new           #27                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: ldc           #9                  // String Method doesn\\'t support writing\n-         6: invokespecial #10                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #29                 // String Method doesn\\'t support writing\n+         6: invokespecial #31                 // Method java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 70: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/sevenz/AbstractCoder;\n             0      10     1   out   Ljava/io/OutputStream;\n@@ -214,15 +214,15 @@\n       throws java.io.IOException\n \n   byte[] getOptionsAsProperties(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: getstatic     #11                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+         0: getstatic     #34                 // Field org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n          3: areturn\n       LineNumberTable:\n         line 80: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/compress/archivers/sevenz/AbstractCoder;\n             0       4     1 options   Ljava/lang/Object;\n@@ -248,19 +248,19 @@\n \n   boolean isOptionInstance(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field optionClasses:[Ljava/lang/Class;\n-         4: invokestatic  #12                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+         1: getfield      #23                 // Field optionClasses:[Ljava/lang/Class;\n+         4: invokestatic  #40                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n          7: aload_1\n-         8: invokedynamic #13,  0             // InvokeDynamic #0:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;\n-        13: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+         8: invokedynamic #46,  0             // InvokeDynamic #0:test:(Ljava/lang/Object;)Ljava/util/function/Predicate;\n+        13: invokeinterface #50,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n         18: ireturn\n       LineNumberTable:\n         line 99: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/compress/archivers/sevenz/AbstractCoder;\n             0      19     1  opts   Ljava/lang/Object;\n@@ -268,25 +268,25 @@\n   private static boolean lambda$isOptionInstance$0(java.lang.Object, java.lang.Class);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Class;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #15                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+         2: invokevirtual #54                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n          5: ireturn\n       LineNumberTable:\n         line 99: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  opts   Ljava/lang/Object;\n             0       6     1     c   Ljava/lang/Class;\n }\n SourceFile: \"AbstractCoder.java\"\n-InnerClasses:\n-  public static final #116= #115 of #119; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #77 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #103 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #78 (Ljava/lang/Object;)Z\n-      #79 REF_invokeStatic org/apache/commons/compress/archivers/sevenz/AbstractCoder.lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n-      #80 (Ljava/lang/Class;)Z\n+      #110 (Ljava/lang/Object;)Z\n+      #111 REF_invokeStatic org/apache/commons/compress/archivers/sevenz/AbstractCoder.lambda$isOptionInstance$0:(Ljava/lang/Object;Ljava/lang/Class;)Z\n+      #114 (Ljava/lang/Class;)Z\n+InnerClasses:\n+  public static final #121= #117 of #119; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
