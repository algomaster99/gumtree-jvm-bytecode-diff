{"diffoscope-json-version": 1, "source1": "first/Cookie.class", "source2": "second/Cookie.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,69 +1,69 @@\n-  SHA-256 checksum d2acc7012cd09ddd17bb5d8327565485dd69e59c2fbeff9fd42ad0345b28cfe9\n+  SHA-256 checksum fe5cb0e30a3b806393a11a4a6fc0503721fcb215764c369ba0f0dfa9e38d1d40\n   Compiled from \"Cookie.java\"\n public class org.json.Cookie\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #51                         // org/json/Cookie\n   super_class: #52                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 5, attributes: 1\n Constant pool:\n-    #1 = Methodref          #52.#97       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #40.#98       // java/lang/String.trim:()Ljava/lang/String;\n-    #3 = Methodref          #40.#99       // java/lang/String.length:()I\n-    #4 = Class              #100          // java/lang/StringBuilder\n-    #5 = Methodref          #4.#101       // java/lang/StringBuilder.\"<init>\":(I)V\n-    #6 = Methodref          #40.#102      // java/lang/String.charAt:(I)C\n-    #7 = Methodref          #4.#103       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #104.#105     // java/lang/Character.forDigit:(II)C\n-    #9 = Methodref          #4.#106       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Class              #107          // org/json/JSONObject\n-   #11 = Methodref          #10.#97       // org/json/JSONObject.\"<init>\":()V\n-   #12 = Class              #108          // org/json/JSONTokener\n-   #13 = Methodref          #12.#109      // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n-   #14 = Methodref          #12.#110      // org/json/JSONTokener.nextTo:(C)Ljava/lang/String;\n-   #15 = Methodref          #51.#111      // org/json/Cookie.unescape:(Ljava/lang/String;)Ljava/lang/String;\n-   #16 = String             #112          //\n-   #17 = Methodref          #40.#113      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #18 = Class              #114          // org/json/JSONException\n-   #19 = String             #115          // Cookies must have a \\'name\\'\n-   #20 = Methodref          #18.#109      // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n-   #21 = String             #81           // name\n-   #22 = Methodref          #10.#116      // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-   #23 = Methodref          #12.#117      // org/json/JSONTokener.next:(C)C\n-   #24 = String             #77           // value\n-   #25 = Methodref          #12.#118      // org/json/JSONTokener.next:()C\n-   #26 = Methodref          #12.#119      // org/json/JSONTokener.more:()Z\n-   #27 = String             #120          // =;\n-   #28 = Methodref          #12.#121      // org/json/JSONTokener.nextTo:(Ljava/lang/String;)Ljava/lang/String;\n-   #29 = Fieldref           #122.#123     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #30 = Methodref          #40.#124      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #31 = Methodref          #40.#125      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #32 = String             #126          // Illegal attribute name: \\'name\\'\n-   #33 = String             #127          // Illegal attribute name: \\'value\\'\n-   #34 = Fieldref           #47.#128      // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #35 = Methodref          #4.#97        // java/lang/StringBuilder.\"<init>\":()V\n-   #36 = Methodref          #10.#129      // org/json/JSONObject.keySet:()Ljava/util/Set;\n-   #37 = InterfaceMethodref #130.#131     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #38 = InterfaceMethodref #132.#133     // java/util/Iterator.hasNext:()Z\n-   #39 = InterfaceMethodref #132.#134     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #40 = Class              #135          // java/lang/String\n-   #41 = Methodref          #10.#136      // org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;\n-   #42 = String             #137          // Cookie does not have a name\n-   #43 = Methodref          #51.#138      // org/json/Cookie.escape:(Ljava/lang/String;)Ljava/lang/String;\n-   #44 = Methodref          #4.#139       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #45 = String             #140          // =\n-   #46 = Methodref          #10.#141      // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n-   #47 = Class              #142          // java/lang/Boolean\n-   #48 = Methodref          #47.#113      // java/lang/Boolean.equals:(Ljava/lang/Object;)Z\n-   #49 = Methodref          #52.#106      // java/lang/Object.toString:()Ljava/lang/String;\n-   #50 = Methodref          #12.#143      // org/json/JSONTokener.dehexchar:(C)I\n-   #51 = Class              #144          // org/json/Cookie\n-   #52 = Class              #145          // java/lang/Object\n+    #1 = Methodref          #52.#92       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #40.#93       // java/lang/String.trim:()Ljava/lang/String;\n+    #3 = Methodref          #40.#94       // java/lang/String.length:()I\n+    #4 = Class              #95           // java/lang/StringBuilder\n+    #5 = Methodref          #4.#96        // java/lang/StringBuilder.\"<init>\":(I)V\n+    #6 = Methodref          #40.#97       // java/lang/String.charAt:(I)C\n+    #7 = Methodref          #4.#98        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #99.#100      // java/lang/Character.forDigit:(II)C\n+    #9 = Methodref          #4.#101       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #10 = Class              #102          // org/json/JSONObject\n+   #11 = Methodref          #10.#92       // org/json/JSONObject.\"<init>\":()V\n+   #12 = Class              #103          // org/json/JSONTokener\n+   #13 = Methodref          #12.#104      // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n+   #14 = Methodref          #12.#105      // org/json/JSONTokener.nextTo:(C)Ljava/lang/String;\n+   #15 = Methodref          #51.#106      // org/json/Cookie.unescape:(Ljava/lang/String;)Ljava/lang/String;\n+   #16 = String             #107          //\n+   #17 = Methodref          #40.#108      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #18 = Class              #109          // org/json/JSONException\n+   #19 = String             #110          // Cookies must have a \\'name\\'\n+   #20 = Methodref          #18.#104      // org/json/JSONException.\"<init>\":(Ljava/lang/String;)V\n+   #21 = String             #79           // name\n+   #22 = Methodref          #10.#111      // org/json/JSONObject.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+   #23 = Methodref          #12.#112      // org/json/JSONTokener.next:(C)C\n+   #24 = String             #75           // value\n+   #25 = Methodref          #12.#113      // org/json/JSONTokener.next:()C\n+   #26 = Methodref          #12.#114      // org/json/JSONTokener.more:()Z\n+   #27 = String             #115          // =;\n+   #28 = Methodref          #12.#116      // org/json/JSONTokener.nextTo:(Ljava/lang/String;)Ljava/lang/String;\n+   #29 = Fieldref           #117.#118     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #30 = Methodref          #40.#119      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #31 = Methodref          #40.#120      // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #32 = String             #121          // Illegal attribute name: \\'name\\'\n+   #33 = String             #122          // Illegal attribute name: \\'value\\'\n+   #34 = Fieldref           #47.#123      // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+   #35 = Methodref          #4.#92        // java/lang/StringBuilder.\"<init>\":()V\n+   #36 = Methodref          #10.#124      // org/json/JSONObject.keySet:()Ljava/util/Set;\n+   #37 = InterfaceMethodref #125.#126     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #38 = InterfaceMethodref #85.#127      // java/util/Iterator.hasNext:()Z\n+   #39 = InterfaceMethodref #85.#128      // java/util/Iterator.next:()Ljava/lang/Object;\n+   #40 = Class              #129          // java/lang/String\n+   #41 = Methodref          #10.#130      // org/json/JSONObject.getString:(Ljava/lang/String;)Ljava/lang/String;\n+   #42 = String             #131          // Cookie does not have a name\n+   #43 = Methodref          #51.#132      // org/json/Cookie.escape:(Ljava/lang/String;)Ljava/lang/String;\n+   #44 = Methodref          #4.#133       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #45 = String             #134          // =\n+   #46 = Methodref          #10.#135      // org/json/JSONObject.opt:(Ljava/lang/String;)Ljava/lang/Object;\n+   #47 = Class              #136          // java/lang/Boolean\n+   #48 = Methodref          #47.#108      // java/lang/Boolean.equals:(Ljava/lang/Object;)Z\n+   #49 = Methodref          #52.#101      // java/lang/Object.toString:()Ljava/lang/String;\n+   #50 = Methodref          #12.#137      // org/json/JSONTokener.dehexchar:(C)I\n+   #51 = Class              #138          // org/json/Cookie\n+   #52 = Class              #139          // java/lang/Object\n    #53 = Utf8               <init>\n    #54 = Utf8               ()V\n    #55 = Utf8               Code\n    #56 = Utf8               LineNumberTable\n    #57 = Utf8               LocalVariableTable\n    #58 = Utf8               this\n    #59 = Utf8               Lorg/json/Cookie;\n@@ -76,133 +76,127 @@\n    #66 = Utf8               string\n    #67 = Utf8               Ljava/lang/String;\n    #68 = Utf8               s\n    #69 = Utf8               length\n    #70 = Utf8               sb\n    #71 = Utf8               Ljava/lang/StringBuilder;\n    #72 = Utf8               StackMapTable\n-   #73 = Class              #135          // java/lang/String\n-   #74 = Class              #100          // java/lang/StringBuilder\n-   #75 = Utf8               toJSONObject\n-   #76 = Utf8               (Ljava/lang/String;)Lorg/json/JSONObject;\n-   #77 = Utf8               value\n-   #78 = Utf8               Ljava/lang/Object;\n-   #79 = Utf8               jo\n-   #80 = Utf8               Lorg/json/JSONObject;\n-   #81 = Utf8               name\n-   #82 = Utf8               x\n-   #83 = Utf8               Lorg/json/JSONTokener;\n-   #84 = Class              #107          // org/json/JSONObject\n-   #85 = Class              #108          // org/json/JSONTokener\n-   #86 = Class              #145          // java/lang/Object\n-   #87 = Utf8               toString\n-   #88 = Utf8               (Lorg/json/JSONObject;)Ljava/lang/String;\n-   #89 = Utf8               key\n-   #90 = Class              #146          // java/util/Iterator\n-   #91 = Utf8               Exceptions\n-   #92 = Utf8               unescape\n-   #93 = Utf8               d\n-   #94 = Utf8               e\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               Cookie.java\n-   #97 = NameAndType        #53:#54       // \"<init>\":()V\n-   #98 = NameAndType        #147:#148     // trim:()Ljava/lang/String;\n-   #99 = NameAndType        #69:#149      // length:()I\n-  #100 = Utf8               java/lang/StringBuilder\n-  #101 = NameAndType        #53:#150      // \"<init>\":(I)V\n-  #102 = NameAndType        #151:#152     // charAt:(I)C\n-  #103 = NameAndType        #153:#154     // append:(C)Ljava/lang/StringBuilder;\n-  #104 = Class              #155          // java/lang/Character\n-  #105 = NameAndType        #156:#157     // forDigit:(II)C\n-  #106 = NameAndType        #87:#148      // toString:()Ljava/lang/String;\n-  #107 = Utf8               org/json/JSONObject\n-  #108 = Utf8               org/json/JSONTokener\n-  #109 = NameAndType        #53:#158      // \"<init>\":(Ljava/lang/String;)V\n-  #110 = NameAndType        #159:#160     // nextTo:(C)Ljava/lang/String;\n-  #111 = NameAndType        #92:#61       // unescape:(Ljava/lang/String;)Ljava/lang/String;\n-  #112 = Utf8\n-  #113 = NameAndType        #161:#162     // equals:(Ljava/lang/Object;)Z\n-  #114 = Utf8               org/json/JSONException\n-  #115 = Utf8               Cookies must have a \\'name\\'\n-  #116 = NameAndType        #163:#164     // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #117 = NameAndType        #165:#166     // next:(C)C\n-  #118 = NameAndType        #165:#167     // next:()C\n-  #119 = NameAndType        #168:#169     // more:()Z\n-  #120 = Utf8               =;\n-  #121 = NameAndType        #159:#61      // nextTo:(Ljava/lang/String;)Ljava/lang/String;\n-  #122 = Class              #170          // java/util/Locale\n-  #123 = NameAndType        #171:#172     // ROOT:Ljava/util/Locale;\n-  #124 = NameAndType        #173:#174     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #125 = NameAndType        #175:#176     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #126 = Utf8               Illegal attribute name: \\'name\\'\n-  #127 = Utf8               Illegal attribute name: \\'value\\'\n-  #128 = NameAndType        #177:#178     // TRUE:Ljava/lang/Boolean;\n-  #129 = NameAndType        #179:#180     // keySet:()Ljava/util/Set;\n-  #130 = Class              #181          // java/util/Set\n-  #131 = NameAndType        #182:#183     // iterator:()Ljava/util/Iterator;\n-  #132 = Class              #146          // java/util/Iterator\n-  #133 = NameAndType        #184:#169     // hasNext:()Z\n-  #134 = NameAndType        #165:#185     // next:()Ljava/lang/Object;\n-  #135 = Utf8               java/lang/String\n-  #136 = NameAndType        #186:#61      // getString:(Ljava/lang/String;)Ljava/lang/String;\n-  #137 = Utf8               Cookie does not have a name\n-  #138 = NameAndType        #60:#61       // escape:(Ljava/lang/String;)Ljava/lang/String;\n-  #139 = NameAndType        #153:#187     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #140 = Utf8               =\n-  #141 = NameAndType        #188:#189     // opt:(Ljava/lang/String;)Ljava/lang/Object;\n-  #142 = Utf8               java/lang/Boolean\n-  #143 = NameAndType        #190:#191     // dehexchar:(C)I\n-  #144 = Utf8               org/json/Cookie\n-  #145 = Utf8               java/lang/Object\n-  #146 = Utf8               java/util/Iterator\n-  #147 = Utf8               trim\n-  #148 = Utf8               ()Ljava/lang/String;\n-  #149 = Utf8               ()I\n-  #150 = Utf8               (I)V\n-  #151 = Utf8               charAt\n-  #152 = Utf8               (I)C\n-  #153 = Utf8               append\n-  #154 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #155 = Utf8               java/lang/Character\n-  #156 = Utf8               forDigit\n-  #157 = Utf8               (II)C\n-  #158 = Utf8               (Ljava/lang/String;)V\n-  #159 = Utf8               nextTo\n-  #160 = Utf8               (C)Ljava/lang/String;\n-  #161 = Utf8               equals\n-  #162 = Utf8               (Ljava/lang/Object;)Z\n-  #163 = Utf8               put\n-  #164 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n-  #165 = Utf8               next\n-  #166 = Utf8               (C)C\n-  #167 = Utf8               ()C\n-  #168 = Utf8               more\n-  #169 = Utf8               ()Z\n-  #170 = Utf8               java/util/Locale\n-  #171 = Utf8               ROOT\n-  #172 = Utf8               Ljava/util/Locale;\n-  #173 = Utf8               toLowerCase\n-  #174 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #175 = Utf8               equalsIgnoreCase\n-  #176 = Utf8               (Ljava/lang/String;)Z\n-  #177 = Utf8               TRUE\n-  #178 = Utf8               Ljava/lang/Boolean;\n-  #179 = Utf8               keySet\n-  #180 = Utf8               ()Ljava/util/Set;\n-  #181 = Utf8               java/util/Set\n-  #182 = Utf8               iterator\n-  #183 = Utf8               ()Ljava/util/Iterator;\n-  #184 = Utf8               hasNext\n-  #185 = Utf8               ()Ljava/lang/Object;\n-  #186 = Utf8               getString\n-  #187 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #188 = Utf8               opt\n-  #189 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-  #190 = Utf8               dehexchar\n-  #191 = Utf8               (C)I\n+   #73 = Utf8               toJSONObject\n+   #74 = Utf8               (Ljava/lang/String;)Lorg/json/JSONObject;\n+   #75 = Utf8               value\n+   #76 = Utf8               Ljava/lang/Object;\n+   #77 = Utf8               jo\n+   #78 = Utf8               Lorg/json/JSONObject;\n+   #79 = Utf8               name\n+   #80 = Utf8               x\n+   #81 = Utf8               Lorg/json/JSONTokener;\n+   #82 = Utf8               toString\n+   #83 = Utf8               (Lorg/json/JSONObject;)Ljava/lang/String;\n+   #84 = Utf8               key\n+   #85 = Class              #140          // java/util/Iterator\n+   #86 = Utf8               Exceptions\n+   #87 = Utf8               unescape\n+   #88 = Utf8               d\n+   #89 = Utf8               e\n+   #90 = Utf8               SourceFile\n+   #91 = Utf8               Cookie.java\n+   #92 = NameAndType        #53:#54       // \"<init>\":()V\n+   #93 = NameAndType        #141:#142     // trim:()Ljava/lang/String;\n+   #94 = NameAndType        #69:#143      // length:()I\n+   #95 = Utf8               java/lang/StringBuilder\n+   #96 = NameAndType        #53:#144      // \"<init>\":(I)V\n+   #97 = NameAndType        #145:#146     // charAt:(I)C\n+   #98 = NameAndType        #147:#148     // append:(C)Ljava/lang/StringBuilder;\n+   #99 = Class              #149          // java/lang/Character\n+  #100 = NameAndType        #150:#151     // forDigit:(II)C\n+  #101 = NameAndType        #82:#142      // toString:()Ljava/lang/String;\n+  #102 = Utf8               org/json/JSONObject\n+  #103 = Utf8               org/json/JSONTokener\n+  #104 = NameAndType        #53:#152      // \"<init>\":(Ljava/lang/String;)V\n+  #105 = NameAndType        #153:#154     // nextTo:(C)Ljava/lang/String;\n+  #106 = NameAndType        #87:#61       // unescape:(Ljava/lang/String;)Ljava/lang/String;\n+  #107 = Utf8\n+  #108 = NameAndType        #155:#156     // equals:(Ljava/lang/Object;)Z\n+  #109 = Utf8               org/json/JSONException\n+  #110 = Utf8               Cookies must have a \\'name\\'\n+  #111 = NameAndType        #157:#158     // put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #112 = NameAndType        #159:#160     // next:(C)C\n+  #113 = NameAndType        #159:#161     // next:()C\n+  #114 = NameAndType        #162:#163     // more:()Z\n+  #115 = Utf8               =;\n+  #116 = NameAndType        #153:#61      // nextTo:(Ljava/lang/String;)Ljava/lang/String;\n+  #117 = Class              #164          // java/util/Locale\n+  #118 = NameAndType        #165:#166     // ROOT:Ljava/util/Locale;\n+  #119 = NameAndType        #167:#168     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #120 = NameAndType        #169:#170     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #121 = Utf8               Illegal attribute name: \\'name\\'\n+  #122 = Utf8               Illegal attribute name: \\'value\\'\n+  #123 = NameAndType        #171:#172     // TRUE:Ljava/lang/Boolean;\n+  #124 = NameAndType        #173:#174     // keySet:()Ljava/util/Set;\n+  #125 = Class              #175          // java/util/Set\n+  #126 = NameAndType        #176:#177     // iterator:()Ljava/util/Iterator;\n+  #127 = NameAndType        #178:#163     // hasNext:()Z\n+  #128 = NameAndType        #159:#179     // next:()Ljava/lang/Object;\n+  #129 = Utf8               java/lang/String\n+  #130 = NameAndType        #180:#61      // getString:(Ljava/lang/String;)Ljava/lang/String;\n+  #131 = Utf8               Cookie does not have a name\n+  #132 = NameAndType        #60:#61       // escape:(Ljava/lang/String;)Ljava/lang/String;\n+  #133 = NameAndType        #147:#181     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #134 = Utf8               =\n+  #135 = NameAndType        #182:#183     // opt:(Ljava/lang/String;)Ljava/lang/Object;\n+  #136 = Utf8               java/lang/Boolean\n+  #137 = NameAndType        #184:#185     // dehexchar:(C)I\n+  #138 = Utf8               org/json/Cookie\n+  #139 = Utf8               java/lang/Object\n+  #140 = Utf8               java/util/Iterator\n+  #141 = Utf8               trim\n+  #142 = Utf8               ()Ljava/lang/String;\n+  #143 = Utf8               ()I\n+  #144 = Utf8               (I)V\n+  #145 = Utf8               charAt\n+  #146 = Utf8               (I)C\n+  #147 = Utf8               append\n+  #148 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #149 = Utf8               java/lang/Character\n+  #150 = Utf8               forDigit\n+  #151 = Utf8               (II)C\n+  #152 = Utf8               (Ljava/lang/String;)V\n+  #153 = Utf8               nextTo\n+  #154 = Utf8               (C)Ljava/lang/String;\n+  #155 = Utf8               equals\n+  #156 = Utf8               (Ljava/lang/Object;)Z\n+  #157 = Utf8               put\n+  #158 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;\n+  #159 = Utf8               next\n+  #160 = Utf8               (C)C\n+  #161 = Utf8               ()C\n+  #162 = Utf8               more\n+  #163 = Utf8               ()Z\n+  #164 = Utf8               java/util/Locale\n+  #165 = Utf8               ROOT\n+  #166 = Utf8               Ljava/util/Locale;\n+  #167 = Utf8               toLowerCase\n+  #168 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #169 = Utf8               equalsIgnoreCase\n+  #170 = Utf8               (Ljava/lang/String;)Z\n+  #171 = Utf8               TRUE\n+  #172 = Utf8               Ljava/lang/Boolean;\n+  #173 = Utf8               keySet\n+  #174 = Utf8               ()Ljava/util/Set;\n+  #175 = Utf8               java/util/Set\n+  #176 = Utf8               iterator\n+  #177 = Utf8               ()Ljava/util/Iterator;\n+  #178 = Utf8               hasNext\n+  #179 = Utf8               ()Ljava/lang/Object;\n+  #180 = Utf8               getString\n+  #181 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #182 = Utf8               opt\n+  #183 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #184 = Utf8               dehexchar\n+  #185 = Utf8               (C)I\n {\n   public org.json.Cookie();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
