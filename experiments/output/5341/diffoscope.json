{"diffoscope-json-version": 1, "source1": "first/ProxyCollectionWriter.class", "source2": "second/ProxyCollectionWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,40 +1,40 @@\n-  SHA-256 checksum e59a6dfa073b878f97b72143d92a5b8ae8f20bab7792e8737f1bd6ecab7e1c55\n+  SHA-256 checksum 0c5cca9c7d2866d6a7a0e2e80689433cba1615f67a4fbaffdc21637e81365c45\n   Compiled from \"ProxyCollectionWriter.java\"\n public class org.apache.commons.io.output.ProxyCollectionWriter extends org.apache.commons.io.output.FilterCollectionWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/io/output/ProxyCollectionWriter\n   super_class: #23                        // org/apache/commons/io/output/FilterCollectionWriter\n   interfaces: 0, fields: 0, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#80       // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n-    #2 = Methodref          #23.#81       // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n-    #3 = Methodref          #22.#82       // org/apache/commons/io/output/ProxyCollectionWriter.beforeWrite:(I)V\n-    #4 = Methodref          #23.#83       // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n-    #5 = Methodref          #22.#84       // org/apache/commons/io/output/ProxyCollectionWriter.afterWrite:(I)V\n-    #6 = Class              #85           // java/io/IOException\n-    #7 = Methodref          #22.#86       // org/apache/commons/io/output/ProxyCollectionWriter.handleIOException:(Ljava/io/IOException;)V\n-    #8 = Methodref          #87.#88       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-    #9 = Methodref          #23.#89       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #10 = Methodref          #23.#90       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #11 = Methodref          #23.#91       // org/apache/commons/io/output/FilterCollectionWriter.close:()V\n-   #12 = Methodref          #23.#92       // org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n-   #13 = Methodref          #87.#93       // org/apache/commons/io/IOUtils.length:([C)I\n-   #14 = Methodref          #23.#94       // org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n-   #15 = Methodref          #23.#95       // org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n-   #16 = Methodref          #23.#96       // org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n-   #17 = Methodref          #23.#97       // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n-   #18 = Methodref          #23.#98       // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n-   #19 = Methodref          #22.#83       // org/apache/commons/io/output/ProxyCollectionWriter.append:(C)Ljava/io/Writer;\n-   #20 = Methodref          #22.#90       // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #21 = Methodref          #22.#89       // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #22 = Class              #99           // org/apache/commons/io/output/ProxyCollectionWriter\n-   #23 = Class              #100          // org/apache/commons/io/output/FilterCollectionWriter\n+    #1 = Methodref          #23.#79       // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":(Ljava/util/Collection;)V\n+    #2 = Methodref          #23.#80       // org/apache/commons/io/output/FilterCollectionWriter.\"<init>\":([Ljava/io/Writer;)V\n+    #3 = Methodref          #22.#81       // org/apache/commons/io/output/ProxyCollectionWriter.beforeWrite:(I)V\n+    #4 = Methodref          #23.#82       // org/apache/commons/io/output/FilterCollectionWriter.append:(C)Ljava/io/Writer;\n+    #5 = Methodref          #22.#83       // org/apache/commons/io/output/ProxyCollectionWriter.afterWrite:(I)V\n+    #6 = Class              #84           // java/io/IOException\n+    #7 = Methodref          #22.#85       // org/apache/commons/io/output/ProxyCollectionWriter.handleIOException:(Ljava/io/IOException;)V\n+    #8 = Methodref          #86.#87       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+    #9 = Methodref          #23.#88       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #10 = Methodref          #23.#89       // org/apache/commons/io/output/FilterCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #11 = Methodref          #23.#90       // org/apache/commons/io/output/FilterCollectionWriter.close:()V\n+   #12 = Methodref          #23.#91       // org/apache/commons/io/output/FilterCollectionWriter.flush:()V\n+   #13 = Methodref          #86.#92       // org/apache/commons/io/IOUtils.length:([C)I\n+   #14 = Methodref          #23.#93       // org/apache/commons/io/output/FilterCollectionWriter.write:([C)V\n+   #15 = Methodref          #23.#94       // org/apache/commons/io/output/FilterCollectionWriter.write:([CII)V\n+   #16 = Methodref          #23.#95       // org/apache/commons/io/output/FilterCollectionWriter.write:(I)V\n+   #17 = Methodref          #23.#96       // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;)V\n+   #18 = Methodref          #23.#97       // org/apache/commons/io/output/FilterCollectionWriter.write:(Ljava/lang/String;II)V\n+   #19 = Methodref          #22.#82       // org/apache/commons/io/output/ProxyCollectionWriter.append:(C)Ljava/io/Writer;\n+   #20 = Methodref          #22.#89       // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #21 = Methodref          #22.#88       // org/apache/commons/io/output/ProxyCollectionWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #22 = Class              #98           // org/apache/commons/io/output/ProxyCollectionWriter\n+   #23 = Class              #99           // org/apache/commons/io/output/FilterCollectionWriter\n    #24 = Utf8               <init>\n    #25 = Utf8               (Ljava/util/Collection;)V\n    #26 = Utf8               Code\n    #27 = Utf8               LineNumberTable\n    #28 = Utf8               LocalVariableTable\n    #29 = Utf8               this\n    #30 = Utf8               Lorg/apache/commons/io/output/ProxyCollectionWriter;\n@@ -54,68 +54,67 @@\n    #44 = Utf8               append\n    #45 = Utf8               (C)Ljava/io/Writer;\n    #46 = Utf8               e\n    #47 = Utf8               Ljava/io/IOException;\n    #48 = Utf8               c\n    #49 = Utf8               C\n    #50 = Utf8               StackMapTable\n-   #51 = Class              #85           // java/io/IOException\n-   #52 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #53 = Utf8               len\n-   #54 = Utf8               csq\n-   #55 = Utf8               Ljava/lang/CharSequence;\n-   #56 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #57 = Utf8               start\n-   #58 = Utf8               end\n-   #59 = Utf8               beforeWrite\n-   #60 = Utf8               close\n-   #61 = Utf8               ()V\n-   #62 = Utf8               flush\n-   #63 = Utf8               handleIOException\n-   #64 = Utf8               (Ljava/io/IOException;)V\n-   #65 = Utf8               write\n-   #66 = Utf8               ([C)V\n-   #67 = Utf8               cbuf\n-   #68 = Utf8               [C\n-   #69 = Utf8               ([CII)V\n-   #70 = Utf8               off\n-   #71 = Utf8               (Ljava/lang/String;)V\n-   #72 = Utf8               str\n-   #73 = Utf8               Ljava/lang/String;\n-   #74 = Utf8               (Ljava/lang/String;II)V\n-   #75 = Utf8               (C)Ljava/lang/Appendable;\n-   #76 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #77 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #78 = Utf8               SourceFile\n-   #79 = Utf8               ProxyCollectionWriter.java\n-   #80 = NameAndType        #24:#25       // \"<init>\":(Ljava/util/Collection;)V\n-   #81 = NameAndType        #24:#37       // \"<init>\":([Ljava/io/Writer;)V\n-   #82 = NameAndType        #59:#40       // beforeWrite:(I)V\n-   #83 = NameAndType        #44:#45       // append:(C)Ljava/io/Writer;\n-   #84 = NameAndType        #39:#40       // afterWrite:(I)V\n-   #85 = Utf8               java/io/IOException\n-   #86 = NameAndType        #63:#64       // handleIOException:(Ljava/io/IOException;)V\n-   #87 = Class              #101          // org/apache/commons/io/IOUtils\n-   #88 = NameAndType        #102:#103     // length:(Ljava/lang/CharSequence;)I\n-   #89 = NameAndType        #44:#52       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #90 = NameAndType        #44:#56       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #91 = NameAndType        #60:#61       // close:()V\n-   #92 = NameAndType        #62:#61       // flush:()V\n-   #93 = NameAndType        #102:#104     // length:([C)I\n-   #94 = NameAndType        #65:#66       // write:([C)V\n-   #95 = NameAndType        #65:#69       // write:([CII)V\n-   #96 = NameAndType        #65:#40       // write:(I)V\n-   #97 = NameAndType        #65:#71       // write:(Ljava/lang/String;)V\n-   #98 = NameAndType        #65:#74       // write:(Ljava/lang/String;II)V\n-   #99 = Utf8               org/apache/commons/io/output/ProxyCollectionWriter\n-  #100 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n-  #101 = Utf8               org/apache/commons/io/IOUtils\n-  #102 = Utf8               length\n-  #103 = Utf8               (Ljava/lang/CharSequence;)I\n-  #104 = Utf8               ([C)I\n+   #51 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #52 = Utf8               len\n+   #53 = Utf8               csq\n+   #54 = Utf8               Ljava/lang/CharSequence;\n+   #55 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #56 = Utf8               start\n+   #57 = Utf8               end\n+   #58 = Utf8               beforeWrite\n+   #59 = Utf8               close\n+   #60 = Utf8               ()V\n+   #61 = Utf8               flush\n+   #62 = Utf8               handleIOException\n+   #63 = Utf8               (Ljava/io/IOException;)V\n+   #64 = Utf8               write\n+   #65 = Utf8               ([C)V\n+   #66 = Utf8               cbuf\n+   #67 = Utf8               [C\n+   #68 = Utf8               ([CII)V\n+   #69 = Utf8               off\n+   #70 = Utf8               (Ljava/lang/String;)V\n+   #71 = Utf8               str\n+   #72 = Utf8               Ljava/lang/String;\n+   #73 = Utf8               (Ljava/lang/String;II)V\n+   #74 = Utf8               (C)Ljava/lang/Appendable;\n+   #75 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+   #76 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+   #77 = Utf8               SourceFile\n+   #78 = Utf8               ProxyCollectionWriter.java\n+   #79 = NameAndType        #24:#25       // \"<init>\":(Ljava/util/Collection;)V\n+   #80 = NameAndType        #24:#37       // \"<init>\":([Ljava/io/Writer;)V\n+   #81 = NameAndType        #58:#40       // beforeWrite:(I)V\n+   #82 = NameAndType        #44:#45       // append:(C)Ljava/io/Writer;\n+   #83 = NameAndType        #39:#40       // afterWrite:(I)V\n+   #84 = Utf8               java/io/IOException\n+   #85 = NameAndType        #62:#63       // handleIOException:(Ljava/io/IOException;)V\n+   #86 = Class              #100          // org/apache/commons/io/IOUtils\n+   #87 = NameAndType        #101:#102     // length:(Ljava/lang/CharSequence;)I\n+   #88 = NameAndType        #44:#51       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #89 = NameAndType        #44:#55       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #90 = NameAndType        #59:#60       // close:()V\n+   #91 = NameAndType        #61:#60       // flush:()V\n+   #92 = NameAndType        #101:#103     // length:([C)I\n+   #93 = NameAndType        #64:#65       // write:([C)V\n+   #94 = NameAndType        #64:#68       // write:([CII)V\n+   #95 = NameAndType        #64:#40       // write:(I)V\n+   #96 = NameAndType        #64:#70       // write:(Ljava/lang/String;)V\n+   #97 = NameAndType        #64:#73       // write:(Ljava/lang/String;II)V\n+   #98 = Utf8               org/apache/commons/io/output/ProxyCollectionWriter\n+   #99 = Utf8               org/apache/commons/io/output/FilterCollectionWriter\n+  #100 = Utf8               org/apache/commons/io/IOUtils\n+  #101 = Utf8               length\n+  #102 = Utf8               (Ljava/lang/CharSequence;)I\n+  #103 = Utf8               ([C)I\n {\n   public org.apache.commons.io.output.ProxyCollectionWriter(java.util.Collection<java.io.Writer>);\n     descriptor: (Ljava/util/Collection;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n"}]}
