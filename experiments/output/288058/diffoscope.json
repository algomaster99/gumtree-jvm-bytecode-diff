{"diffoscope-json-version": 1, "source1": "first/JarArchiveInputStream.class", "source2": "second/JarArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,58 +1,57 @@\n-  SHA-256 checksum 0fd63cfd2c7771871aecf041bf762db2ec2cebf7cea00ecce6e00fecad8b4d44\n+  SHA-256 checksum c9fe2dfd46abce6dfbc1251ed3a883d42385a911d29e9e8a3cd9d0a601e86d0c\n   Compiled from \"JarArchiveInputStream.java\"\n public class org.apache.commons.compress.archivers.jar.JarArchiveInputStream extends org.apache.commons.compress.archivers.zip.ZipArchiveInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n   super_class: #9                         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n   interfaces: 0, fields: 0, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #9.#28         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n-   #2 = Methodref          #9.#29         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #3 = Methodref          #9.#30         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #4 = Methodref          #8.#31         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n-   #5 = Methodref          #8.#32         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-   #6 = Class              #33            // org/apache/commons/compress/archivers/jar/JarArchiveEntry\n-   #7 = Methodref          #6.#34         // org/apache/commons/compress/archivers/jar/JarArchiveEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-   #8 = Class              #35            // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-   #9 = Class              #36            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+   #1 = Methodref          #9.#27         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+   #2 = Methodref          #9.#28         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #3 = Methodref          #9.#29         // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #4 = Methodref          #8.#30         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n+   #5 = Methodref          #8.#31         // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+   #6 = Class              #32            // org/apache/commons/compress/archivers/jar/JarArchiveEntry\n+   #7 = Methodref          #6.#33         // org/apache/commons/compress/archivers/jar/JarArchiveEntry.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+   #8 = Class              #34            // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+   #9 = Class              #35            // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n   #10 = Utf8               matches\n   #11 = Utf8               ([BI)Z\n   #12 = Utf8               Code\n   #13 = Utf8               LineNumberTable\n   #14 = Utf8               <init>\n   #15 = Utf8               (Ljava/io/InputStream;)V\n   #16 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n   #17 = Utf8               getNextEntry\n   #18 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n   #19 = Utf8               Exceptions\n-  #20 = Class              #37            // java/io/IOException\n+  #20 = Class              #36            // java/io/IOException\n   #21 = Utf8               getNextJarEntry\n   #22 = Utf8               ()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n   #23 = Utf8               StackMapTable\n-  #24 = Class              #38            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #25 = Class              #33            // org/apache/commons/compress/archivers/jar/JarArchiveEntry\n-  #26 = Utf8               SourceFile\n-  #27 = Utf8               JarArchiveInputStream.java\n-  #28 = NameAndType        #10:#11        // matches:([BI)Z\n-  #29 = NameAndType        #14:#15        // \"<init>\":(Ljava/io/InputStream;)V\n-  #30 = NameAndType        #14:#16        // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #31 = NameAndType        #21:#22        // getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n-  #32 = NameAndType        #39:#40        // getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #33 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveEntry\n-  #34 = NameAndType        #14:#41        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n-  #35 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-  #36 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #37 = Utf8               java/io/IOException\n-  #38 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n-  #39 = Utf8               getNextZipEntry\n-  #40 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n-  #41 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #24 = Class              #37            // org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #25 = Utf8               SourceFile\n+  #26 = Utf8               JarArchiveInputStream.java\n+  #27 = NameAndType        #10:#11        // matches:([BI)Z\n+  #28 = NameAndType        #14:#15        // \"<init>\":(Ljava/io/InputStream;)V\n+  #29 = NameAndType        #14:#16        // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #30 = NameAndType        #21:#22        // getNextJarEntry:()Lorg/apache/commons/compress/archivers/jar/JarArchiveEntry;\n+  #31 = NameAndType        #38:#39        // getNextZipEntry:()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #32 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveEntry\n+  #33 = NameAndType        #14:#40        // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n+  #34 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+  #35 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+  #36 = Utf8               java/io/IOException\n+  #37 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveEntry\n+  #38 = Utf8               getNextZipEntry\n+  #39 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;\n+  #40 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;)V\n {\n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n"}]}
