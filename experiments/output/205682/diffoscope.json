{"diffoscope-json-version": 1, "source1": "first/CombinedReloadingController$MultiReloadingControllerDetector.class", "source2": "second/CombinedReloadingController$MultiReloadingControllerDetector.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -3,27 +3,29 @@\n \n import java.util.Iterator;\n \n private static class MultiReloadingControllerDetector implements ReloadingDetector\n {\n     private final CombinedReloadingController owner;\n     \n-    public MultiReloadingControllerDetector(final CombinedReloadingController o) {\n-        this.owner = o;\n+    public MultiReloadingControllerDetector(final CombinedReloadingController owner) {\n+        this.owner = owner;\n     }\n     \n     public boolean isReloadingRequired() {\n-        boolean result = false;\n-        for (final ReloadingController rc : this.owner.getSubControllers()) {\n-            if (rc.checkForReloading((Object)null)) {\n-                result = true;\n+        boolean b = false;\n+        final Iterator iterator = this.owner.getSubControllers().iterator();\n+        while (iterator.hasNext()) {\n+            if (((ReloadingController)iterator.next()).checkForReloading((Object)null)) {\n+                b = true;\n             }\n         }\n-        return result;\n+        return b;\n     }\n     \n     public void reloadingPerformed() {\n-        for (final ReloadingController rc : this.owner.getSubControllers()) {\n-            rc.resetReloadingState();\n+        final Iterator iterator = this.owner.getSubControllers().iterator();\n+        while (iterator.hasNext()) {\n+            ((ReloadingController)iterator.next()).resetReloadingState();\n         }\n     }\n }\n"}]}
