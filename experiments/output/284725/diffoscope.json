{"diffoscope-json-version": 1, "source1": "first/SimpleElementValueGen.class", "source2": "second/SimpleElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,72 +1,72 @@\n-  SHA-256 checksum ee6f792b32ad273f80bcd16eede3d89eb092cd4e92deb6e03abcd6c24154e528\n+  SHA-256 checksum be24055f81abd42387cbc03697a789a1316fefa116981fa8338e45bf91a031ce\n   Compiled from \"SimpleElementValueGen.java\"\n public class org.apache.bcel.generic.SimpleElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #55                         // org/apache/bcel/generic/SimpleElementValueGen\n   super_class: #32                        // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 1, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #32.#91       // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #2 = Fieldref           #55.#92       // org/apache/bcel/generic/SimpleElementValueGen.idx:I\n-    #3 = Methodref          #55.#93       // org/apache/bcel/generic/SimpleElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-    #4 = Methodref          #94.#95       // org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-    #5 = Methodref          #94.#96       // org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n-    #6 = Methodref          #94.#97       // org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n-    #7 = Methodref          #94.#98       // org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n-    #8 = Methodref          #94.#99       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-    #9 = Methodref          #29.#100      // org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n-   #10 = Methodref          #29.#101      // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n-   #11 = Methodref          #29.#102      // org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n-   #12 = Methodref          #29.#103      // org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n-   #13 = Methodref          #29.#104      // org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n-   #14 = Methodref          #29.#105      // org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n-   #15 = Methodref          #29.#106      // org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n-   #16 = Methodref          #29.#107      // org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n-   #17 = Methodref          #29.#108      // org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n-   #18 = Methodref          #29.#109      // org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n-   #19 = Methodref          #29.#110      // org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n-   #20 = Class              #111          // java/lang/RuntimeException\n-   #21 = Class              #112          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#113      // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #114          // SimpleElementValueGen class does not know how to copy this type\n-   #24 = Methodref          #21.#115      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #32.#100      // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #26 = Methodref          #21.#116      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #21.#117      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = Methodref          #20.#118      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Class              #119          // org/apache/bcel/classfile/SimpleElementValue\n-   #30 = Methodref          #94.#120      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #31 = Methodref          #29.#121      // org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n-   #32 = Class              #122          // org/apache/bcel/generic/ElementValueGen\n-   #33 = String             #123          // Dont call getValueString() on a non STRING ElementValue\n-   #34 = Methodref          #94.#124      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #35 = Class              #125          // org/apache/bcel/classfile/ConstantUtf8\n-   #36 = Methodref          #35.#126      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #37 = Class              #127          // org/apache/bcel/classfile/ConstantInteger\n-   #38 = Methodref          #37.#128      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-   #39 = Methodref          #129.#130     // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #40 = Class              #131          // org/apache/bcel/classfile/ConstantLong\n-   #41 = Methodref          #40.#132      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n-   #42 = Methodref          #133.#134     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #43 = Class              #135          // org/apache/bcel/classfile/ConstantDouble\n-   #44 = Methodref          #43.#136      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n-   #45 = Methodref          #137.#138     // java/lang/Double.toString:(D)Ljava/lang/String;\n-   #46 = Class              #139          // org/apache/bcel/classfile/ConstantFloat\n-   #47 = Methodref          #46.#140      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n-   #48 = Methodref          #141.#142     // java/lang/Float.toString:(F)Ljava/lang/String;\n-   #49 = String             #143          // false\n-   #50 = String             #144          // true\n-   #51 = String             #145          // SimpleElementValueGen class does not know how to stringify type\n-   #52 = Methodref          #146.#147     // java/io/DataOutputStream.writeByte:(I)V\n-   #53 = Methodref          #146.#148     // java/io/DataOutputStream.writeShort:(I)V\n-   #54 = String             #149          // SimpleElementValueGen doesnt know how to write out type\n-   #55 = Class              #150          // org/apache/bcel/generic/SimpleElementValueGen\n+    #1 = Methodref          #32.#88       // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #2 = Fieldref           #55.#89       // org/apache/bcel/generic/SimpleElementValueGen.idx:I\n+    #3 = Methodref          #55.#90       // org/apache/bcel/generic/SimpleElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+    #4 = Methodref          #71.#91       // org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+    #5 = Methodref          #71.#92       // org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n+    #6 = Methodref          #71.#93       // org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n+    #7 = Methodref          #71.#94       // org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n+    #8 = Methodref          #71.#95       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+    #9 = Methodref          #29.#96       // org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n+   #10 = Methodref          #29.#97       // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n+   #11 = Methodref          #29.#98       // org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n+   #12 = Methodref          #29.#99       // org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n+   #13 = Methodref          #29.#100      // org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n+   #14 = Methodref          #29.#101      // org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n+   #15 = Methodref          #29.#102      // org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n+   #16 = Methodref          #29.#103      // org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n+   #17 = Methodref          #29.#104      // org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n+   #18 = Methodref          #29.#105      // org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n+   #19 = Methodref          #29.#106      // org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n+   #20 = Class              #107          // java/lang/RuntimeException\n+   #21 = Class              #108          // java/lang/StringBuilder\n+   #22 = Methodref          #21.#109      // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #110          // SimpleElementValueGen class does not know how to copy this type\n+   #24 = Methodref          #21.#111      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #32.#96       // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #26 = Methodref          #21.#112      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #21.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = Methodref          #20.#114      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+   #29 = Class              #115          // org/apache/bcel/classfile/SimpleElementValue\n+   #30 = Methodref          #71.#116      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #31 = Methodref          #29.#117      // org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+   #32 = Class              #118          // org/apache/bcel/generic/ElementValueGen\n+   #33 = String             #119          // Dont call getValueString() on a non STRING ElementValue\n+   #34 = Methodref          #71.#120      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #35 = Class              #121          // org/apache/bcel/classfile/ConstantUtf8\n+   #36 = Methodref          #35.#122      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+   #37 = Class              #123          // org/apache/bcel/classfile/ConstantInteger\n+   #38 = Methodref          #37.#124      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+   #39 = Methodref          #125.#126     // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #40 = Class              #127          // org/apache/bcel/classfile/ConstantLong\n+   #41 = Methodref          #40.#128      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n+   #42 = Methodref          #129.#130     // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #43 = Class              #131          // org/apache/bcel/classfile/ConstantDouble\n+   #44 = Methodref          #43.#132      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n+   #45 = Methodref          #133.#134     // java/lang/Double.toString:(D)Ljava/lang/String;\n+   #46 = Class              #135          // org/apache/bcel/classfile/ConstantFloat\n+   #47 = Methodref          #46.#136      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n+   #48 = Methodref          #137.#138     // java/lang/Float.toString:(F)Ljava/lang/String;\n+   #49 = String             #139          // false\n+   #50 = String             #140          // true\n+   #51 = String             #141          // SimpleElementValueGen class does not know how to stringify type\n+   #52 = Methodref          #142.#143     // java/io/DataOutputStream.writeByte:(I)V\n+   #53 = Methodref          #142.#144     // java/io/DataOutputStream.writeShort:(I)V\n+   #54 = String             #145          // SimpleElementValueGen doesnt know how to write out type\n+   #55 = Class              #146          // org/apache/bcel/generic/SimpleElementValueGen\n    #56 = Utf8               idx\n    #57 = Utf8               I\n    #58 = Utf8               <init>\n    #59 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n    #60 = Utf8               Code\n    #61 = Utf8               LineNumberTable\n    #62 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;I)V\n@@ -74,147 +74,143 @@\n    #64 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;D)V\n    #65 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;F)V\n    #66 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;S)V\n    #67 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;B)V\n    #68 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;C)V\n    #69 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Z)V\n    #70 = Utf8               StackMapTable\n-   #71 = Class              #150          // org/apache/bcel/generic/SimpleElementValueGen\n-   #72 = Class              #151          // org/apache/bcel/generic/ConstantPoolGen\n-   #73 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Ljava/lang/String;)V\n-   #74 = Utf8               (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #75 = Class              #119          // org/apache/bcel/classfile/SimpleElementValue\n-   #76 = Utf8               getElementValue\n-   #77 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #78 = Utf8               getIndex\n-   #79 = Utf8               ()I\n-   #80 = Utf8               getValueString\n-   #81 = Utf8               ()Ljava/lang/String;\n-   #82 = Utf8               getValueInt\n-   #83 = Utf8               stringifyValue\n-   #84 = Class              #127          // org/apache/bcel/classfile/ConstantInteger\n-   #85 = Utf8               dump\n-   #86 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #87 = Utf8               Exceptions\n-   #88 = Class              #152          // java/io/IOException\n-   #89 = Utf8               SourceFile\n-   #90 = Utf8               SimpleElementValueGen.java\n-   #91 = NameAndType        #58:#153      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #92 = NameAndType        #56:#57       // idx:I\n-   #93 = NameAndType        #154:#155     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #94 = Class              #151          // org/apache/bcel/generic/ConstantPoolGen\n-   #95 = NameAndType        #156:#157     // addInteger:(I)I\n-   #96 = NameAndType        #158:#159     // addLong:(J)I\n-   #97 = NameAndType        #160:#161     // addDouble:(D)I\n-   #98 = NameAndType        #162:#163     // addFloat:(F)I\n-   #99 = NameAndType        #164:#165     // addUtf8:(Ljava/lang/String;)I\n-  #100 = NameAndType        #166:#79      // getElementValueType:()I\n-  #101 = NameAndType        #78:#79       // getIndex:()I\n-  #102 = NameAndType        #80:#81       // getValueString:()Ljava/lang/String;\n-  #103 = NameAndType        #82:#79       // getValueInt:()I\n-  #104 = NameAndType        #167:#168     // getValueByte:()B\n-  #105 = NameAndType        #169:#170     // getValueChar:()C\n-  #106 = NameAndType        #171:#172     // getValueLong:()J\n-  #107 = NameAndType        #173:#174     // getValueFloat:()F\n-  #108 = NameAndType        #175:#176     // getValueDouble:()D\n-  #109 = NameAndType        #177:#178     // getValueBoolean:()Z\n-  #110 = NameAndType        #179:#180     // getValueShort:()S\n-  #111 = Utf8               java/lang/RuntimeException\n-  #112 = Utf8               java/lang/StringBuilder\n-  #113 = NameAndType        #58:#181      // \"<init>\":()V\n-  #114 = Utf8               SimpleElementValueGen class does not know how to copy this type\n-  #115 = NameAndType        #182:#183     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #116 = NameAndType        #182:#184     // append:(I)Ljava/lang/StringBuilder;\n-  #117 = NameAndType        #185:#81      // toString:()Ljava/lang/String;\n-  #118 = NameAndType        #58:#186      // \"<init>\":(Ljava/lang/String;)V\n-  #119 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n-  #120 = NameAndType        #154:#187     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #121 = NameAndType        #58:#188      // \"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n-  #122 = Utf8               org/apache/bcel/generic/ElementValueGen\n-  #123 = Utf8               Dont call getValueString() on a non STRING ElementValue\n-  #124 = NameAndType        #189:#190     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #125 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #126 = NameAndType        #191:#81      // getBytes:()Ljava/lang/String;\n-  #127 = Utf8               org/apache/bcel/classfile/ConstantInteger\n-  #128 = NameAndType        #191:#79      // getBytes:()I\n-  #129 = Class              #192          // java/lang/Integer\n-  #130 = NameAndType        #185:#193     // toString:(I)Ljava/lang/String;\n-  #131 = Utf8               org/apache/bcel/classfile/ConstantLong\n-  #132 = NameAndType        #191:#172     // getBytes:()J\n-  #133 = Class              #194          // java/lang/Long\n-  #134 = NameAndType        #185:#195     // toString:(J)Ljava/lang/String;\n-  #135 = Utf8               org/apache/bcel/classfile/ConstantDouble\n-  #136 = NameAndType        #191:#176     // getBytes:()D\n-  #137 = Class              #196          // java/lang/Double\n-  #138 = NameAndType        #185:#197     // toString:(D)Ljava/lang/String;\n-  #139 = Utf8               org/apache/bcel/classfile/ConstantFloat\n-  #140 = NameAndType        #191:#174     // getBytes:()F\n-  #141 = Class              #198          // java/lang/Float\n-  #142 = NameAndType        #185:#199     // toString:(F)Ljava/lang/String;\n-  #143 = Utf8               false\n-  #144 = Utf8               true\n-  #145 = Utf8               SimpleElementValueGen class does not know how to stringify type\n-  #146 = Class              #200          // java/io/DataOutputStream\n-  #147 = NameAndType        #201:#202     // writeByte:(I)V\n-  #148 = NameAndType        #203:#202     // writeShort:(I)V\n-  #149 = Utf8               SimpleElementValueGen doesnt know how to write out type\n-  #150 = Utf8               org/apache/bcel/generic/SimpleElementValueGen\n-  #151 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #152 = Utf8               java/io/IOException\n-  #153 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #154 = Utf8               getConstantPool\n-  #155 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #156 = Utf8               addInteger\n-  #157 = Utf8               (I)I\n-  #158 = Utf8               addLong\n-  #159 = Utf8               (J)I\n-  #160 = Utf8               addDouble\n-  #161 = Utf8               (D)I\n-  #162 = Utf8               addFloat\n-  #163 = Utf8               (F)I\n-  #164 = Utf8               addUtf8\n-  #165 = Utf8               (Ljava/lang/String;)I\n-  #166 = Utf8               getElementValueType\n-  #167 = Utf8               getValueByte\n-  #168 = Utf8               ()B\n-  #169 = Utf8               getValueChar\n-  #170 = Utf8               ()C\n-  #171 = Utf8               getValueLong\n-  #172 = Utf8               ()J\n-  #173 = Utf8               getValueFloat\n-  #174 = Utf8               ()F\n-  #175 = Utf8               getValueDouble\n-  #176 = Utf8               ()D\n-  #177 = Utf8               getValueBoolean\n-  #178 = Utf8               ()Z\n-  #179 = Utf8               getValueShort\n-  #180 = Utf8               ()S\n-  #181 = Utf8               ()V\n-  #182 = Utf8               append\n-  #183 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #184 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #185 = Utf8               toString\n-  #186 = Utf8               (Ljava/lang/String;)V\n-  #187 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #188 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n-  #189 = Utf8               getConstant\n-  #190 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #191 = Utf8               getBytes\n-  #192 = Utf8               java/lang/Integer\n-  #193 = Utf8               (I)Ljava/lang/String;\n-  #194 = Utf8               java/lang/Long\n-  #195 = Utf8               (J)Ljava/lang/String;\n-  #196 = Utf8               java/lang/Double\n-  #197 = Utf8               (D)Ljava/lang/String;\n-  #198 = Utf8               java/lang/Float\n-  #199 = Utf8               (F)Ljava/lang/String;\n-  #200 = Utf8               java/io/DataOutputStream\n-  #201 = Utf8               writeByte\n-  #202 = Utf8               (I)V\n-  #203 = Utf8               writeShort\n+   #71 = Class              #147          // org/apache/bcel/generic/ConstantPoolGen\n+   #72 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Ljava/lang/String;)V\n+   #73 = Utf8               (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+   #74 = Utf8               getElementValue\n+   #75 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+   #76 = Utf8               getIndex\n+   #77 = Utf8               ()I\n+   #78 = Utf8               getValueString\n+   #79 = Utf8               ()Ljava/lang/String;\n+   #80 = Utf8               getValueInt\n+   #81 = Utf8               stringifyValue\n+   #82 = Utf8               dump\n+   #83 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #84 = Utf8               Exceptions\n+   #85 = Class              #148          // java/io/IOException\n+   #86 = Utf8               SourceFile\n+   #87 = Utf8               SimpleElementValueGen.java\n+   #88 = NameAndType        #58:#149      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #89 = NameAndType        #56:#57       // idx:I\n+   #90 = NameAndType        #150:#151     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #91 = NameAndType        #152:#153     // addInteger:(I)I\n+   #92 = NameAndType        #154:#155     // addLong:(J)I\n+   #93 = NameAndType        #156:#157     // addDouble:(D)I\n+   #94 = NameAndType        #158:#159     // addFloat:(F)I\n+   #95 = NameAndType        #160:#161     // addUtf8:(Ljava/lang/String;)I\n+   #96 = NameAndType        #162:#77      // getElementValueType:()I\n+   #97 = NameAndType        #76:#77       // getIndex:()I\n+   #98 = NameAndType        #78:#79       // getValueString:()Ljava/lang/String;\n+   #99 = NameAndType        #80:#77       // getValueInt:()I\n+  #100 = NameAndType        #163:#164     // getValueByte:()B\n+  #101 = NameAndType        #165:#166     // getValueChar:()C\n+  #102 = NameAndType        #167:#168     // getValueLong:()J\n+  #103 = NameAndType        #169:#170     // getValueFloat:()F\n+  #104 = NameAndType        #171:#172     // getValueDouble:()D\n+  #105 = NameAndType        #173:#174     // getValueBoolean:()Z\n+  #106 = NameAndType        #175:#176     // getValueShort:()S\n+  #107 = Utf8               java/lang/RuntimeException\n+  #108 = Utf8               java/lang/StringBuilder\n+  #109 = NameAndType        #58:#177      // \"<init>\":()V\n+  #110 = Utf8               SimpleElementValueGen class does not know how to copy this type\n+  #111 = NameAndType        #178:#179     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = NameAndType        #178:#180     // append:(I)Ljava/lang/StringBuilder;\n+  #113 = NameAndType        #181:#79      // toString:()Ljava/lang/String;\n+  #114 = NameAndType        #58:#182      // \"<init>\":(Ljava/lang/String;)V\n+  #115 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n+  #116 = NameAndType        #150:#183     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #117 = NameAndType        #58:#184      // \"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #118 = Utf8               org/apache/bcel/generic/ElementValueGen\n+  #119 = Utf8               Dont call getValueString() on a non STRING ElementValue\n+  #120 = NameAndType        #185:#186     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #121 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #122 = NameAndType        #187:#79      // getBytes:()Ljava/lang/String;\n+  #123 = Utf8               org/apache/bcel/classfile/ConstantInteger\n+  #124 = NameAndType        #187:#77      // getBytes:()I\n+  #125 = Class              #188          // java/lang/Integer\n+  #126 = NameAndType        #181:#189     // toString:(I)Ljava/lang/String;\n+  #127 = Utf8               org/apache/bcel/classfile/ConstantLong\n+  #128 = NameAndType        #187:#168     // getBytes:()J\n+  #129 = Class              #190          // java/lang/Long\n+  #130 = NameAndType        #181:#191     // toString:(J)Ljava/lang/String;\n+  #131 = Utf8               org/apache/bcel/classfile/ConstantDouble\n+  #132 = NameAndType        #187:#172     // getBytes:()D\n+  #133 = Class              #192          // java/lang/Double\n+  #134 = NameAndType        #181:#193     // toString:(D)Ljava/lang/String;\n+  #135 = Utf8               org/apache/bcel/classfile/ConstantFloat\n+  #136 = NameAndType        #187:#170     // getBytes:()F\n+  #137 = Class              #194          // java/lang/Float\n+  #138 = NameAndType        #181:#195     // toString:(F)Ljava/lang/String;\n+  #139 = Utf8               false\n+  #140 = Utf8               true\n+  #141 = Utf8               SimpleElementValueGen class does not know how to stringify type\n+  #142 = Class              #196          // java/io/DataOutputStream\n+  #143 = NameAndType        #197:#198     // writeByte:(I)V\n+  #144 = NameAndType        #199:#198     // writeShort:(I)V\n+  #145 = Utf8               SimpleElementValueGen doesnt know how to write out type\n+  #146 = Utf8               org/apache/bcel/generic/SimpleElementValueGen\n+  #147 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #148 = Utf8               java/io/IOException\n+  #149 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #150 = Utf8               getConstantPool\n+  #151 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #152 = Utf8               addInteger\n+  #153 = Utf8               (I)I\n+  #154 = Utf8               addLong\n+  #155 = Utf8               (J)I\n+  #156 = Utf8               addDouble\n+  #157 = Utf8               (D)I\n+  #158 = Utf8               addFloat\n+  #159 = Utf8               (F)I\n+  #160 = Utf8               addUtf8\n+  #161 = Utf8               (Ljava/lang/String;)I\n+  #162 = Utf8               getElementValueType\n+  #163 = Utf8               getValueByte\n+  #164 = Utf8               ()B\n+  #165 = Utf8               getValueChar\n+  #166 = Utf8               ()C\n+  #167 = Utf8               getValueLong\n+  #168 = Utf8               ()J\n+  #169 = Utf8               getValueFloat\n+  #170 = Utf8               ()F\n+  #171 = Utf8               getValueDouble\n+  #172 = Utf8               ()D\n+  #173 = Utf8               getValueBoolean\n+  #174 = Utf8               ()Z\n+  #175 = Utf8               getValueShort\n+  #176 = Utf8               ()S\n+  #177 = Utf8               ()V\n+  #178 = Utf8               append\n+  #179 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #181 = Utf8               toString\n+  #182 = Utf8               (Ljava/lang/String;)V\n+  #183 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #184 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #185 = Utf8               getConstant\n+  #186 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #187 = Utf8               getBytes\n+  #188 = Utf8               java/lang/Integer\n+  #189 = Utf8               (I)Ljava/lang/String;\n+  #190 = Utf8               java/lang/Long\n+  #191 = Utf8               (J)Ljava/lang/String;\n+  #192 = Utf8               java/lang/Double\n+  #193 = Utf8               (D)Ljava/lang/String;\n+  #194 = Utf8               java/lang/Float\n+  #195 = Utf8               (F)Ljava/lang/String;\n+  #196 = Utf8               java/io/DataOutputStream\n+  #197 = Utf8               writeByte\n+  #198 = Utf8               (I)V\n+  #199 = Utf8               writeShort\n {\n   private int idx;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   protected org.apache.bcel.generic.SimpleElementValueGen(int, int, org.apache.bcel.generic.ConstantPoolGen);\n     descriptor: (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n"}]}
