{"diffoscope-json-version": 1, "source1": "first/CodeException.class", "source2": "second/CodeException.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,56 +1,56 @@\n-  SHA-256 checksum bbcf8fb73d3375aeea79b494871bcb1f76432eb2132829d73250aa8ae6877f49\n+  SHA-256 checksum 94b54203bc6cb529cf60de947cbc1301e85fbb6c39303715ee850b1be25796db\n   Compiled from \"CodeException.java\"\n public final class org.apache.bcel.classfile.CodeException implements java.lang.Cloneable,org.apache.bcel.classfile.Node,org.apache.bcel.Constants\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #14                         // org/apache/bcel/classfile/CodeException\n   super_class: #36                        // java/lang/Object\n   interfaces: 3, fields: 5, methods: 18, attributes: 1\n Constant pool:\n-    #1 = Methodref          #14.#100      // org/apache/bcel/classfile/CodeException.getStartPC:()I\n-    #2 = Methodref          #14.#101      // org/apache/bcel/classfile/CodeException.getEndPC:()I\n-    #3 = Methodref          #14.#102      // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n-    #4 = Methodref          #14.#103      // org/apache/bcel/classfile/CodeException.getCatchType:()I\n-    #5 = Methodref          #14.#104      // org/apache/bcel/classfile/CodeException.\"<init>\":(IIII)V\n-    #6 = InterfaceMethodref #105.#106     // java/io/DataInput.readUnsignedShort:()I\n-    #7 = Methodref          #36.#107      // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #14.#108      // org/apache/bcel/classfile/CodeException.startPc:I\n-    #9 = Fieldref           #14.#109      // org/apache/bcel/classfile/CodeException.endPc:I\n-   #10 = Fieldref           #14.#110      // org/apache/bcel/classfile/CodeException.handlerPc:I\n-   #11 = Fieldref           #14.#111      // org/apache/bcel/classfile/CodeException.catchType:I\n-   #12 = InterfaceMethodref #112.#113     // org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n-   #13 = Methodref          #36.#114      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #14 = Class              #115          // org/apache/bcel/classfile/CodeException\n-   #15 = Class              #116          // java/lang/CloneNotSupportedException\n-   #16 = Methodref          #117.#118     // java/io/DataOutputStream.writeShort:(I)V\n-   #17 = Class              #119          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#107      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #120          // CodeException(startPc =\n-   #20 = Methodref          #17.#121      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#122      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #22 = String             #123          // , endPc =\n-   #23 = String             #124          // , handlerPc =\n-   #24 = String             #125          // , catchType =\n-   #25 = String             #126          // )\n-   #26 = Methodref          #17.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #27 = Methodref          #14.#128      // org/apache/bcel/classfile/CodeException.toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-   #28 = String             #129          // <Any exception>(0)\n-   #29 = Class              #130          // org/apache/bcel/Const\n-   #30 = Methodref          #131.#132     // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-   #31 = Methodref          #133.#134     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #32 = String             #135          // (\n-   #33 = String             #136          //\n-   #34 = String             #137          // \\t\n-   #35 = Fieldref           #14.#138      // org/apache/bcel/classfile/CodeException.EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n-   #36 = Class              #139          // java/lang/Object\n-   #37 = Class              #140          // java/lang/Cloneable\n-   #38 = Class              #141          // org/apache/bcel/classfile/Node\n-   #39 = Class              #142          // org/apache/bcel/Constants\n+    #1 = Methodref          #14.#97       // org/apache/bcel/classfile/CodeException.getStartPC:()I\n+    #2 = Methodref          #14.#98       // org/apache/bcel/classfile/CodeException.getEndPC:()I\n+    #3 = Methodref          #14.#99       // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n+    #4 = Methodref          #14.#100      // org/apache/bcel/classfile/CodeException.getCatchType:()I\n+    #5 = Methodref          #14.#101      // org/apache/bcel/classfile/CodeException.\"<init>\":(IIII)V\n+    #6 = InterfaceMethodref #102.#103     // java/io/DataInput.readUnsignedShort:()I\n+    #7 = Methodref          #36.#104      // java/lang/Object.\"<init>\":()V\n+    #8 = Fieldref           #14.#105      // org/apache/bcel/classfile/CodeException.startPc:I\n+    #9 = Fieldref           #14.#106      // org/apache/bcel/classfile/CodeException.endPc:I\n+   #10 = Fieldref           #14.#107      // org/apache/bcel/classfile/CodeException.handlerPc:I\n+   #11 = Fieldref           #14.#108      // org/apache/bcel/classfile/CodeException.catchType:I\n+   #12 = InterfaceMethodref #109.#110     // org/apache/bcel/classfile/Visitor.visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+   #13 = Methodref          #36.#111      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #14 = Class              #112          // org/apache/bcel/classfile/CodeException\n+   #15 = Class              #113          // java/lang/CloneNotSupportedException\n+   #16 = Methodref          #114.#115     // java/io/DataOutputStream.writeShort:(I)V\n+   #17 = Class              #116          // java/lang/StringBuilder\n+   #18 = Methodref          #17.#104      // java/lang/StringBuilder.\"<init>\":()V\n+   #19 = String             #117          // CodeException(startPc =\n+   #20 = Methodref          #17.#118      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #21 = Methodref          #17.#119      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #22 = String             #120          // , endPc =\n+   #23 = String             #121          // , handlerPc =\n+   #24 = String             #122          // , catchType =\n+   #25 = String             #123          // )\n+   #26 = Methodref          #17.#124      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #27 = Methodref          #14.#125      // org/apache/bcel/classfile/CodeException.toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+   #28 = String             #126          // <Any exception>(0)\n+   #29 = Class              #127          // org/apache/bcel/Const\n+   #30 = Methodref          #91.#128      // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+   #31 = Methodref          #129.#130     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #32 = String             #131          // (\n+   #33 = String             #132          //\n+   #34 = String             #133          // \\t\n+   #35 = Fieldref           #14.#134      // org/apache/bcel/classfile/CodeException.EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n+   #36 = Class              #135          // java/lang/Object\n+   #37 = Class              #136          // java/lang/Cloneable\n+   #38 = Class              #137          // org/apache/bcel/classfile/Node\n+   #39 = Class              #138          // org/apache/bcel/Constants\n    #40 = Utf8               EMPTY_CODE_EXCEPTION_ARRAY\n    #41 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n    #42 = Utf8               startPc\n    #43 = Utf8               I\n    #44 = Utf8               endPc\n    #45 = Utf8               handlerPc\n    #46 = Utf8               catchType\n@@ -62,117 +62,113 @@\n    #52 = Utf8               this\n    #53 = Utf8               Lorg/apache/bcel/classfile/CodeException;\n    #54 = Utf8               c\n    #55 = Utf8               (Ljava/io/DataInput;)V\n    #56 = Utf8               file\n    #57 = Utf8               Ljava/io/DataInput;\n    #58 = Utf8               Exceptions\n-   #59 = Class              #143          // java/io/IOException\n+   #59 = Class              #139          // java/io/IOException\n    #60 = Utf8               (IIII)V\n    #61 = Utf8               accept\n    #62 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n    #63 = Utf8               v\n    #64 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n    #65 = Utf8               copy\n    #66 = Utf8               ()Lorg/apache/bcel/classfile/CodeException;\n    #67 = Utf8               StackMapTable\n-   #68 = Class              #116          // java/lang/CloneNotSupportedException\n-   #69 = Utf8               dump\n-   #70 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #71 = Utf8               Ljava/io/DataOutputStream;\n-   #72 = Utf8               getCatchType\n-   #73 = Utf8               ()I\n-   #74 = Utf8               getEndPC\n-   #75 = Utf8               getHandlerPC\n-   #76 = Utf8               getStartPC\n-   #77 = Utf8               setCatchType\n-   #78 = Utf8               (I)V\n-   #79 = Utf8               setEndPC\n-   #80 = Utf8               setHandlerPC\n-   #81 = Utf8               setStartPC\n-   #82 = Utf8               toString\n-   #83 = Utf8               ()Ljava/lang/String;\n-   #84 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #85 = Utf8               cp\n-   #86 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #87 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-   #88 = Utf8               str\n-   #89 = Utf8               Ljava/lang/String;\n-   #90 = Utf8               verbose\n-   #91 = Utf8               Z\n-   #92 = Class              #119          // java/lang/StringBuilder\n-   #93 = Class              #115          // org/apache/bcel/classfile/CodeException\n-   #94 = Class              #144          // org/apache/bcel/classfile/ConstantPool\n-   #95 = Class              #145          // java/lang/String\n-   #96 = Utf8               <clinit>\n-   #97 = Utf8               ()V\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               CodeException.java\n-  #100 = NameAndType        #76:#73       // getStartPC:()I\n-  #101 = NameAndType        #74:#73       // getEndPC:()I\n-  #102 = NameAndType        #75:#73       // getHandlerPC:()I\n-  #103 = NameAndType        #72:#73       // getCatchType:()I\n-  #104 = NameAndType        #47:#60       // \"<init>\":(IIII)V\n-  #105 = Class              #146          // java/io/DataInput\n-  #106 = NameAndType        #147:#73      // readUnsignedShort:()I\n-  #107 = NameAndType        #47:#97       // \"<init>\":()V\n-  #108 = NameAndType        #42:#43       // startPc:I\n-  #109 = NameAndType        #44:#43       // endPc:I\n-  #110 = NameAndType        #45:#43       // handlerPc:I\n-  #111 = NameAndType        #46:#43       // catchType:I\n-  #112 = Class              #148          // org/apache/bcel/classfile/Visitor\n-  #113 = NameAndType        #149:#48      // visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n-  #114 = NameAndType        #150:#151     // clone:()Ljava/lang/Object;\n-  #115 = Utf8               org/apache/bcel/classfile/CodeException\n-  #116 = Utf8               java/lang/CloneNotSupportedException\n-  #117 = Class              #152          // java/io/DataOutputStream\n-  #118 = NameAndType        #153:#78      // writeShort:(I)V\n-  #119 = Utf8               java/lang/StringBuilder\n-  #120 = Utf8               CodeException(startPc =\n-  #121 = NameAndType        #154:#155     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #122 = NameAndType        #154:#156     // append:(I)Ljava/lang/StringBuilder;\n-  #123 = Utf8               , endPc =\n-  #124 = Utf8               , handlerPc =\n-  #125 = Utf8               , catchType =\n-  #126 = Utf8               )\n-  #127 = NameAndType        #82:#83       // toString:()Ljava/lang/String;\n-  #128 = NameAndType        #82:#87       // toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n-  #129 = Utf8               <Any exception>(0)\n-  #130 = Utf8               org/apache/bcel/Const\n-  #131 = Class              #144          // org/apache/bcel/classfile/ConstantPool\n-  #132 = NameAndType        #157:#158     // getConstantString:(IB)Ljava/lang/String;\n-  #133 = Class              #159          // org/apache/bcel/classfile/Utility\n-  #134 = NameAndType        #160:#161     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #135 = Utf8               (\n-  #136 = Utf8\n-  #137 = Utf8               \\t\n-  #138 = NameAndType        #40:#41       // EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n-  #139 = Utf8               java/lang/Object\n-  #140 = Utf8               java/lang/Cloneable\n-  #141 = Utf8               org/apache/bcel/classfile/Node\n-  #142 = Utf8               org/apache/bcel/Constants\n-  #143 = Utf8               java/io/IOException\n-  #144 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #145 = Utf8               java/lang/String\n-  #146 = Utf8               java/io/DataInput\n-  #147 = Utf8               readUnsignedShort\n-  #148 = Utf8               org/apache/bcel/classfile/Visitor\n-  #149 = Utf8               visitCodeException\n-  #150 = Utf8               clone\n-  #151 = Utf8               ()Ljava/lang/Object;\n-  #152 = Utf8               java/io/DataOutputStream\n-  #153 = Utf8               writeShort\n-  #154 = Utf8               append\n-  #155 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #156 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #157 = Utf8               getConstantString\n-  #158 = Utf8               (IB)Ljava/lang/String;\n-  #159 = Utf8               org/apache/bcel/classfile/Utility\n-  #160 = Utf8               compactClassName\n-  #161 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+   #68 = Utf8               dump\n+   #69 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #70 = Utf8               Ljava/io/DataOutputStream;\n+   #71 = Utf8               getCatchType\n+   #72 = Utf8               ()I\n+   #73 = Utf8               getEndPC\n+   #74 = Utf8               getHandlerPC\n+   #75 = Utf8               getStartPC\n+   #76 = Utf8               setCatchType\n+   #77 = Utf8               (I)V\n+   #78 = Utf8               setEndPC\n+   #79 = Utf8               setHandlerPC\n+   #80 = Utf8               setStartPC\n+   #81 = Utf8               toString\n+   #82 = Utf8               ()Ljava/lang/String;\n+   #83 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+   #84 = Utf8               cp\n+   #85 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+   #86 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+   #87 = Utf8               str\n+   #88 = Utf8               Ljava/lang/String;\n+   #89 = Utf8               verbose\n+   #90 = Utf8               Z\n+   #91 = Class              #140          // org/apache/bcel/classfile/ConstantPool\n+   #92 = Class              #141          // java/lang/String\n+   #93 = Utf8               <clinit>\n+   #94 = Utf8               ()V\n+   #95 = Utf8               SourceFile\n+   #96 = Utf8               CodeException.java\n+   #97 = NameAndType        #75:#72       // getStartPC:()I\n+   #98 = NameAndType        #73:#72       // getEndPC:()I\n+   #99 = NameAndType        #74:#72       // getHandlerPC:()I\n+  #100 = NameAndType        #71:#72       // getCatchType:()I\n+  #101 = NameAndType        #47:#60       // \"<init>\":(IIII)V\n+  #102 = Class              #142          // java/io/DataInput\n+  #103 = NameAndType        #143:#72      // readUnsignedShort:()I\n+  #104 = NameAndType        #47:#94       // \"<init>\":()V\n+  #105 = NameAndType        #42:#43       // startPc:I\n+  #106 = NameAndType        #44:#43       // endPc:I\n+  #107 = NameAndType        #45:#43       // handlerPc:I\n+  #108 = NameAndType        #46:#43       // catchType:I\n+  #109 = Class              #144          // org/apache/bcel/classfile/Visitor\n+  #110 = NameAndType        #145:#48      // visitCodeException:(Lorg/apache/bcel/classfile/CodeException;)V\n+  #111 = NameAndType        #146:#147     // clone:()Ljava/lang/Object;\n+  #112 = Utf8               org/apache/bcel/classfile/CodeException\n+  #113 = Utf8               java/lang/CloneNotSupportedException\n+  #114 = Class              #148          // java/io/DataOutputStream\n+  #115 = NameAndType        #149:#77      // writeShort:(I)V\n+  #116 = Utf8               java/lang/StringBuilder\n+  #117 = Utf8               CodeException(startPc =\n+  #118 = NameAndType        #150:#151     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #119 = NameAndType        #150:#152     // append:(I)Ljava/lang/StringBuilder;\n+  #120 = Utf8               , endPc =\n+  #121 = Utf8               , handlerPc =\n+  #122 = Utf8               , catchType =\n+  #123 = Utf8               )\n+  #124 = NameAndType        #81:#82       // toString:()Ljava/lang/String;\n+  #125 = NameAndType        #81:#86       // toString:(Lorg/apache/bcel/classfile/ConstantPool;Z)Ljava/lang/String;\n+  #126 = Utf8               <Any exception>(0)\n+  #127 = Utf8               org/apache/bcel/Const\n+  #128 = NameAndType        #153:#154     // getConstantString:(IB)Ljava/lang/String;\n+  #129 = Class              #155          // org/apache/bcel/classfile/Utility\n+  #130 = NameAndType        #156:#157     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #131 = Utf8               (\n+  #132 = Utf8\n+  #133 = Utf8               \\t\n+  #134 = NameAndType        #40:#41       // EMPTY_CODE_EXCEPTION_ARRAY:[Lorg/apache/bcel/classfile/CodeException;\n+  #135 = Utf8               java/lang/Object\n+  #136 = Utf8               java/lang/Cloneable\n+  #137 = Utf8               org/apache/bcel/classfile/Node\n+  #138 = Utf8               org/apache/bcel/Constants\n+  #139 = Utf8               java/io/IOException\n+  #140 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #141 = Utf8               java/lang/String\n+  #142 = Utf8               java/io/DataInput\n+  #143 = Utf8               readUnsignedShort\n+  #144 = Utf8               org/apache/bcel/classfile/Visitor\n+  #145 = Utf8               visitCodeException\n+  #146 = Utf8               clone\n+  #147 = Utf8               ()Ljava/lang/Object;\n+  #148 = Utf8               java/io/DataOutputStream\n+  #149 = Utf8               writeShort\n+  #150 = Utf8               append\n+  #151 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #152 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #153 = Utf8               getConstantString\n+  #154 = Utf8               (IB)Ljava/lang/String;\n+  #155 = Utf8               org/apache/bcel/classfile/Utility\n+  #156 = Utf8               compactClassName\n+  #157 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n {\n   static final org.apache.bcel.classfile.CodeException[] EMPTY_CODE_EXCEPTION_ARRAY;\n     descriptor: [Lorg/apache/bcel/classfile/CodeException;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private int startPc;\n     descriptor: I\n"}]}
