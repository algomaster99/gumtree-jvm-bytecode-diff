{"diffoscope-json-version": 1, "source1": "first/TelnetOptionHandler.class", "source2": "second/TelnetOptionHandler.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,74 +1,74 @@\n-  SHA-256 checksum 7e50f1f6680ce6583d4d4b4d1b3c4069f840809a5438187cae4c796bb4578231\n+  SHA-256 checksum 4a5eedc308d3745cacb0032fc779fe835177ab56c4784efe8a7275fb19d62ef0\n   Compiled from \"TelnetOptionHandler.java\"\n public abstract class org.apache.commons.net.telnet.TelnetOptionHandler\n   minor version: 0\n   major version: 51\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #9                          // org/apache/commons/net/telnet/TelnetOptionHandler\n-  super_class: #10                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/net/telnet/TelnetOptionHandler\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 7, methods: 17, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#47        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #9.#48         // org/apache/commons/net/telnet/TelnetOptionHandler.optionCode:I\n-   #3 = Fieldref           #9.#49         // org/apache/commons/net/telnet/TelnetOptionHandler.initialLocal:Z\n-   #4 = Fieldref           #9.#50         // org/apache/commons/net/telnet/TelnetOptionHandler.initialRemote:Z\n-   #5 = Fieldref           #9.#51         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptLocal:Z\n-   #6 = Fieldref           #9.#52         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptRemote:Z\n-   #7 = Fieldref           #9.#53         // org/apache/commons/net/telnet/TelnetOptionHandler.willFlag:Z\n-   #8 = Fieldref           #9.#54         // org/apache/commons/net/telnet/TelnetOptionHandler.doFlag:Z\n-   #9 = Class              #55            // org/apache/commons/net/telnet/TelnetOptionHandler\n-  #10 = Class              #56            // java/lang/Object\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/net/telnet/TelnetOptionHandler.optionCode:I\n+   #8 = Class              #10            // org/apache/commons/net/telnet/TelnetOptionHandler\n+   #9 = NameAndType        #11:#12        // optionCode:I\n+  #10 = Utf8               org/apache/commons/net/telnet/TelnetOptionHandler\n   #11 = Utf8               optionCode\n   #12 = Utf8               I\n-  #13 = Utf8               initialLocal\n-  #14 = Utf8               Z\n-  #15 = Utf8               initialRemote\n-  #16 = Utf8               acceptLocal\n-  #17 = Utf8               acceptRemote\n-  #18 = Utf8               doFlag\n-  #19 = Utf8               willFlag\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (IZZZZ)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               getOptionCode\n-  #25 = Utf8               ()I\n-  #26 = Utf8               getAcceptLocal\n-  #27 = Utf8               ()Z\n-  #28 = Utf8               getAcceptRemote\n-  #29 = Utf8               setAcceptLocal\n-  #30 = Utf8               (Z)V\n-  #31 = Utf8               setAcceptRemote\n-  #32 = Utf8               getInitLocal\n-  #33 = Utf8               getInitRemote\n-  #34 = Utf8               setInitLocal\n-  #35 = Utf8               setInitRemote\n-  #36 = Utf8               answerSubnegotiation\n-  #37 = Utf8               ([II)[I\n-  #38 = Utf8               startSubnegotiationLocal\n-  #39 = Utf8               ()[I\n-  #40 = Utf8               startSubnegotiationRemote\n-  #41 = Utf8               getWill\n-  #42 = Utf8               setWill\n-  #43 = Utf8               getDo\n-  #44 = Utf8               setDo\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               TelnetOptionHandler.java\n-  #47 = NameAndType        #20:#57        // \"<init>\":()V\n-  #48 = NameAndType        #11:#12        // optionCode:I\n-  #49 = NameAndType        #13:#14        // initialLocal:Z\n-  #50 = NameAndType        #15:#14        // initialRemote:Z\n-  #51 = NameAndType        #16:#14        // acceptLocal:Z\n-  #52 = NameAndType        #17:#14        // acceptRemote:Z\n-  #53 = NameAndType        #19:#14        // willFlag:Z\n-  #54 = NameAndType        #18:#14        // doFlag:Z\n-  #55 = Utf8               org/apache/commons/net/telnet/TelnetOptionHandler\n-  #56 = Utf8               java/lang/Object\n-  #57 = Utf8               ()V\n+  #13 = Fieldref           #8.#14         // org/apache/commons/net/telnet/TelnetOptionHandler.initialLocal:Z\n+  #14 = NameAndType        #15:#16        // initialLocal:Z\n+  #15 = Utf8               initialLocal\n+  #16 = Utf8               Z\n+  #17 = Fieldref           #8.#18         // org/apache/commons/net/telnet/TelnetOptionHandler.initialRemote:Z\n+  #18 = NameAndType        #19:#16        // initialRemote:Z\n+  #19 = Utf8               initialRemote\n+  #20 = Fieldref           #8.#21         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptLocal:Z\n+  #21 = NameAndType        #22:#16        // acceptLocal:Z\n+  #22 = Utf8               acceptLocal\n+  #23 = Fieldref           #8.#24         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptRemote:Z\n+  #24 = NameAndType        #25:#16        // acceptRemote:Z\n+  #25 = Utf8               acceptRemote\n+  #26 = Fieldref           #8.#27         // org/apache/commons/net/telnet/TelnetOptionHandler.willFlag:Z\n+  #27 = NameAndType        #28:#16        // willFlag:Z\n+  #28 = Utf8               willFlag\n+  #29 = Fieldref           #8.#30         // org/apache/commons/net/telnet/TelnetOptionHandler.doFlag:Z\n+  #30 = NameAndType        #31:#16        // doFlag:Z\n+  #31 = Utf8               doFlag\n+  #32 = Utf8               (IZZZZ)V\n+  #33 = Utf8               Code\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               getOptionCode\n+  #36 = Utf8               ()I\n+  #37 = Utf8               getAcceptLocal\n+  #38 = Utf8               ()Z\n+  #39 = Utf8               getAcceptRemote\n+  #40 = Utf8               setAcceptLocal\n+  #41 = Utf8               (Z)V\n+  #42 = Utf8               setAcceptRemote\n+  #43 = Utf8               getInitLocal\n+  #44 = Utf8               getInitRemote\n+  #45 = Utf8               setInitLocal\n+  #46 = Utf8               setInitRemote\n+  #47 = Utf8               answerSubnegotiation\n+  #48 = Utf8               ([II)[I\n+  #49 = Utf8               startSubnegotiationLocal\n+  #50 = Utf8               ()[I\n+  #51 = Utf8               startSubnegotiationRemote\n+  #52 = Utf8               getWill\n+  #53 = Utf8               setWill\n+  #54 = Utf8               getDo\n+  #55 = Utf8               setDo\n+  #56 = Utf8               SourceFile\n+  #57 = Utf8               TelnetOptionHandler.java\n {\n   private int optionCode;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean initialLocal;\n     descriptor: Z\n@@ -99,30 +99,30 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=6\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_m1\n-         6: putfield      #2                  // Field optionCode:I\n+         6: putfield      #7                  // Field optionCode:I\n          9: aload_0\n         10: iload_1\n-        11: putfield      #2                  // Field optionCode:I\n+        11: putfield      #7                  // Field optionCode:I\n         14: aload_0\n         15: iload_2\n-        16: putfield      #3                  // Field initialLocal:Z\n+        16: putfield      #13                 // Field initialLocal:Z\n         19: aload_0\n         20: iload_3\n-        21: putfield      #4                  // Field initialRemote:Z\n+        21: putfield      #17                 // Field initialRemote:Z\n         24: aload_0\n         25: iload         4\n-        27: putfield      #5                  // Field acceptLocal:Z\n+        27: putfield      #20                 // Field acceptLocal:Z\n         30: aload_0\n         31: iload         5\n-        33: putfield      #6                  // Field acceptRemote:Z\n+        33: putfield      #23                 // Field acceptRemote:Z\n         36: return\n       LineNumberTable:\n         line 82: 0\n         line 33: 4\n         line 83: 9\n         line 84: 14\n         line 85: 19\n@@ -132,110 +132,110 @@\n \n   public int getOptionCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field optionCode:I\n+         1: getfield      #7                  // Field optionCode:I\n          4: ireturn\n       LineNumberTable:\n         line 98: 0\n \n   public boolean getAcceptLocal();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field acceptLocal:Z\n+         1: getfield      #20                 // Field acceptLocal:Z\n          4: ireturn\n       LineNumberTable:\n         line 109: 0\n \n   public boolean getAcceptRemote();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field acceptRemote:Z\n+         1: getfield      #23                 // Field acceptRemote:Z\n          4: ireturn\n       LineNumberTable:\n         line 120: 0\n \n   public void setAcceptLocal(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field acceptLocal:Z\n+         2: putfield      #20                 // Field acceptLocal:Z\n          5: return\n       LineNumberTable:\n         line 131: 0\n         line 132: 5\n \n   public void setAcceptRemote(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #6                  // Field acceptRemote:Z\n+         2: putfield      #23                 // Field acceptRemote:Z\n          5: return\n       LineNumberTable:\n         line 142: 0\n         line 143: 5\n \n   public boolean getInitLocal();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field initialLocal:Z\n+         1: getfield      #13                 // Field initialLocal:Z\n          4: ireturn\n       LineNumberTable:\n         line 153: 0\n \n   public boolean getInitRemote();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field initialRemote:Z\n+         1: getfield      #17                 // Field initialRemote:Z\n          4: ireturn\n       LineNumberTable:\n         line 164: 0\n \n   public void setInitLocal(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #3                  // Field initialLocal:Z\n+         2: putfield      #13                 // Field initialLocal:Z\n          5: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 5\n \n   public void setInitRemote(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #4                  // Field initialRemote:Z\n+         2: putfield      #17                 // Field initialRemote:Z\n          5: return\n       LineNumberTable:\n         line 186: 0\n         line 187: 5\n \n   public int[] answerSubnegotiation(int[], int);\n     descriptor: ([II)[I\n@@ -269,50 +269,50 @@\n \n   boolean getWill();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field willFlag:Z\n+         1: getfield      #26                 // Field willFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 247: 0\n \n   void setWill(boolean);\n     descriptor: (Z)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field willFlag:Z\n+         2: putfield      #26                 // Field willFlag:Z\n          5: return\n       LineNumberTable:\n         line 258: 0\n         line 259: 5\n \n   boolean getDo();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field doFlag:Z\n+         1: getfield      #29                 // Field doFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 269: 0\n \n   void setDo(boolean);\n     descriptor: (Z)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field doFlag:Z\n+         2: putfield      #29                 // Field doFlag:Z\n          5: return\n       LineNumberTable:\n         line 281: 0\n         line 282: 5\n }\n SourceFile: \"TelnetOptionHandler.java\"\n"}]}
