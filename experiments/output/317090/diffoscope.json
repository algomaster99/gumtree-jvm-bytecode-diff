{"diffoscope-json-version": 1, "source1": "first/BitField.class", "source2": "second/BitField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,87 @@\n-  SHA-256 checksum 04ae49c8a0696cc4b0f118d52b3f52bb2433301b1b6a6bf3464b9ba3fee5981e\n+  SHA-256 checksum 9e8df0f4838d719faa766ae65f70be33767cdca81873a5e96d6ede5cb0c2012e\n   Compiled from \"BitField.java\"\n public class org.apache.commons.lang3.BitField\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/lang3/BitField\n-  super_class: #15                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/BitField\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 18, attributes: 1\n Constant pool:\n-   #1 = Methodref          #15.#52        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #14.#53        // org/apache/commons/lang3/BitField._mask:I\n-   #3 = Methodref          #54.#55        // java/lang/Integer.numberOfTrailingZeros:(I)I\n-   #4 = Fieldref           #14.#56        // org/apache/commons/lang3/BitField._shift_count:I\n-   #5 = Methodref          #14.#57        // org/apache/commons/lang3/BitField.getRawValue:(I)I\n-   #6 = Methodref          #14.#58        // org/apache/commons/lang3/BitField.getValue:(I)I\n-   #7 = Methodref          #14.#59        // org/apache/commons/lang3/BitField.setValue:(II)I\n-   #8 = Methodref          #14.#60        // org/apache/commons/lang3/BitField.clear:(I)I\n-   #9 = Methodref          #14.#61        // org/apache/commons/lang3/BitField.set:(I)I\n-  #10 = Methodref          #14.#62        // org/apache/commons/lang3/BitField.setShort:(S)S\n-  #11 = Methodref          #14.#63        // org/apache/commons/lang3/BitField.clearShort:(S)S\n-  #12 = Methodref          #14.#64        // org/apache/commons/lang3/BitField.setByte:(B)B\n-  #13 = Methodref          #14.#65        // org/apache/commons/lang3/BitField.clearByte:(B)B\n-  #14 = Class              #66            // org/apache/commons/lang3/BitField\n-  #15 = Class              #67            // java/lang/Object\n-  #16 = Utf8               _mask\n-  #17 = Utf8               I\n-  #18 = Utf8               _shift_count\n-  #19 = Utf8               <init>\n-  #20 = Utf8               (I)V\n-  #21 = Utf8               Code\n-  #22 = Utf8               LineNumberTable\n-  #23 = Utf8               StackMapTable\n-  #24 = Utf8               getValue\n-  #25 = Utf8               (I)I\n-  #26 = Utf8               getShortValue\n-  #27 = Utf8               (S)S\n-  #28 = Utf8               getRawValue\n-  #29 = Utf8               getShortRawValue\n-  #30 = Utf8               isSet\n-  #31 = Utf8               (I)Z\n-  #32 = Utf8               isAllSet\n-  #33 = Utf8               setValue\n-  #34 = Utf8               (II)I\n-  #35 = Utf8               setShortValue\n-  #36 = Utf8               (SS)S\n-  #37 = Utf8               clear\n-  #38 = Utf8               clearShort\n-  #39 = Utf8               clearByte\n-  #40 = Utf8               (B)B\n-  #41 = Utf8               set\n-  #42 = Utf8               setShort\n-  #43 = Utf8               setByte\n-  #44 = Utf8               setBoolean\n-  #45 = Utf8               (IZ)I\n-  #46 = Utf8               setShortBoolean\n-  #47 = Utf8               (SZ)S\n-  #48 = Utf8               setByteBoolean\n-  #49 = Utf8               (BZ)B\n-  #50 = Utf8               SourceFile\n-  #51 = Utf8               BitField.java\n-  #52 = NameAndType        #19:#68        // \"<init>\":()V\n-  #53 = NameAndType        #16:#17        // _mask:I\n-  #54 = Class              #69            // java/lang/Integer\n-  #55 = NameAndType        #70:#25        // numberOfTrailingZeros:(I)I\n-  #56 = NameAndType        #18:#17        // _shift_count:I\n-  #57 = NameAndType        #28:#25        // getRawValue:(I)I\n-  #58 = NameAndType        #24:#25        // getValue:(I)I\n-  #59 = NameAndType        #33:#34        // setValue:(II)I\n-  #60 = NameAndType        #37:#25        // clear:(I)I\n-  #61 = NameAndType        #41:#25        // set:(I)I\n-  #62 = NameAndType        #42:#27        // setShort:(S)S\n-  #63 = NameAndType        #38:#27        // clearShort:(S)S\n-  #64 = NameAndType        #43:#40        // setByte:(B)B\n-  #65 = NameAndType        #39:#40        // clearByte:(B)B\n-  #66 = Utf8               org/apache/commons/lang3/BitField\n-  #67 = Utf8               java/lang/Object\n-  #68 = Utf8               ()V\n-  #69 = Utf8               java/lang/Integer\n-  #70 = Utf8               numberOfTrailingZeros\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/lang3/BitField._mask:I\n+   #8 = Class              #10            // org/apache/commons/lang3/BitField\n+   #9 = NameAndType        #11:#12        // _mask:I\n+  #10 = Utf8               org/apache/commons/lang3/BitField\n+  #11 = Utf8               _mask\n+  #12 = Utf8               I\n+  #13 = Methodref          #14.#15        // java/lang/Integer.numberOfTrailingZeros:(I)I\n+  #14 = Class              #16            // java/lang/Integer\n+  #15 = NameAndType        #17:#18        // numberOfTrailingZeros:(I)I\n+  #16 = Utf8               java/lang/Integer\n+  #17 = Utf8               numberOfTrailingZeros\n+  #18 = Utf8               (I)I\n+  #19 = Fieldref           #8.#20         // org/apache/commons/lang3/BitField._shift_count:I\n+  #20 = NameAndType        #21:#12        // _shift_count:I\n+  #21 = Utf8               _shift_count\n+  #22 = Methodref          #8.#23         // org/apache/commons/lang3/BitField.getRawValue:(I)I\n+  #23 = NameAndType        #24:#18        // getRawValue:(I)I\n+  #24 = Utf8               getRawValue\n+  #25 = Methodref          #8.#26         // org/apache/commons/lang3/BitField.getValue:(I)I\n+  #26 = NameAndType        #27:#18        // getValue:(I)I\n+  #27 = Utf8               getValue\n+  #28 = Methodref          #8.#29         // org/apache/commons/lang3/BitField.setValue:(II)I\n+  #29 = NameAndType        #30:#31        // setValue:(II)I\n+  #30 = Utf8               setValue\n+  #31 = Utf8               (II)I\n+  #32 = Methodref          #8.#33         // org/apache/commons/lang3/BitField.clear:(I)I\n+  #33 = NameAndType        #34:#18        // clear:(I)I\n+  #34 = Utf8               clear\n+  #35 = Methodref          #8.#36         // org/apache/commons/lang3/BitField.set:(I)I\n+  #36 = NameAndType        #37:#18        // set:(I)I\n+  #37 = Utf8               set\n+  #38 = Methodref          #8.#39         // org/apache/commons/lang3/BitField.setShort:(S)S\n+  #39 = NameAndType        #40:#41        // setShort:(S)S\n+  #40 = Utf8               setShort\n+  #41 = Utf8               (S)S\n+  #42 = Methodref          #8.#43         // org/apache/commons/lang3/BitField.clearShort:(S)S\n+  #43 = NameAndType        #44:#41        // clearShort:(S)S\n+  #44 = Utf8               clearShort\n+  #45 = Methodref          #8.#46         // org/apache/commons/lang3/BitField.setByte:(B)B\n+  #46 = NameAndType        #47:#48        // setByte:(B)B\n+  #47 = Utf8               setByte\n+  #48 = Utf8               (B)B\n+  #49 = Methodref          #8.#50         // org/apache/commons/lang3/BitField.clearByte:(B)B\n+  #50 = NameAndType        #51:#48        // clearByte:(B)B\n+  #51 = Utf8               clearByte\n+  #52 = Utf8               (I)V\n+  #53 = Utf8               Code\n+  #54 = Utf8               LineNumberTable\n+  #55 = Utf8               StackMapTable\n+  #56 = Utf8               getShortValue\n+  #57 = Utf8               getShortRawValue\n+  #58 = Utf8               isSet\n+  #59 = Utf8               (I)Z\n+  #60 = Utf8               isAllSet\n+  #61 = Utf8               setShortValue\n+  #62 = Utf8               (SS)S\n+  #63 = Utf8               setBoolean\n+  #64 = Utf8               (IZ)I\n+  #65 = Utf8               setShortBoolean\n+  #66 = Utf8               (SZ)S\n+  #67 = Utf8               setByteBoolean\n+  #68 = Utf8               (BZ)B\n+  #69 = Utf8               SourceFile\n+  #70 = Utf8               BitField.java\n {\n   private final int _mask;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int _shift_count;\n     descriptor: I\n@@ -92,23 +92,23 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #2                  // Field _mask:I\n+         6: putfield      #7                  // Field _mask:I\n          9: aload_0\n         10: iload_1\n         11: ifne          18\n         14: iconst_0\n         15: goto          22\n         18: iload_1\n-        19: invokestatic  #3                  // Method java/lang/Integer.numberOfTrailingZeros:(I)I\n-        22: putfield      #4                  // Field _shift_count:I\n+        19: invokestatic  #13                 // Method java/lang/Integer.numberOfTrailingZeros:(I)I\n+        22: putfield      #19                 // Field _shift_count:I\n         25: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 4\n         line 87: 9\n         line 88: 25\n       StackMapTable: number_of_entries = 2\n@@ -124,69 +124,69 @@\n   public int getValue(int);\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #5                  // Method getRawValue:(I)I\n+         2: invokevirtual #22                 // Method getRawValue:(I)I\n          5: aload_0\n-         6: getfield      #4                  // Field _shift_count:I\n+         6: getfield      #19                 // Field _shift_count:I\n          9: ishr\n         10: ireturn\n       LineNumberTable:\n         line 105: 0\n \n   public short getShortValue(short);\n     descriptor: (S)S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #6                  // Method getValue:(I)I\n+         2: invokevirtual #25                 // Method getValue:(I)I\n          5: i2s\n          6: ireturn\n       LineNumberTable:\n         line 123: 0\n \n   public int getRawValue(int);\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field _mask:I\n+         2: getfield      #7                  // Field _mask:I\n          5: iand\n          6: ireturn\n       LineNumberTable:\n         line 134: 0\n \n   public short getShortRawValue(short);\n     descriptor: (S)S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #5                  // Method getRawValue:(I)I\n+         2: invokevirtual #22                 // Method getRawValue:(I)I\n          5: i2s\n          6: ireturn\n       LineNumberTable:\n         line 145: 0\n \n   public boolean isSet(int);\n     descriptor: (I)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field _mask:I\n+         2: getfield      #7                  // Field _mask:I\n          5: iand\n          6: ifeq          13\n          9: iconst_1\n         10: goto          14\n         13: iconst_0\n         14: ireturn\n       LineNumberTable:\n@@ -199,18 +199,18 @@\n   public boolean isAllSet(int);\n     descriptor: (I)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field _mask:I\n+         2: getfield      #7                  // Field _mask:I\n          5: iand\n          6: aload_0\n-         7: getfield      #2                  // Field _mask:I\n+         7: getfield      #7                  // Field _mask:I\n         10: if_icmpne     17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 178: 0\n@@ -222,138 +222,138 @@\n   public int setValue(int, int);\n     descriptor: (II)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field _mask:I\n+         2: getfield      #7                  // Field _mask:I\n          5: iconst_m1\n          6: ixor\n          7: iand\n          8: iload_2\n          9: aload_0\n-        10: getfield      #4                  // Field _shift_count:I\n+        10: getfield      #19                 // Field _shift_count:I\n         13: ishl\n         14: aload_0\n-        15: getfield      #2                  // Field _mask:I\n+        15: getfield      #7                  // Field _mask:I\n         18: iand\n         19: ior\n         20: ireturn\n       LineNumberTable:\n         line 192: 0\n \n   public short setShortValue(short, short);\n     descriptor: (SS)S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: invokevirtual #7                  // Method setValue:(II)I\n+         3: invokevirtual #28                 // Method setValue:(II)I\n          6: i2s\n          7: ireturn\n       LineNumberTable:\n         line 206: 0\n \n   public int clear(int);\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field _mask:I\n+         2: getfield      #7                  // Field _mask:I\n          5: iconst_m1\n          6: ixor\n          7: iand\n          8: ireturn\n       LineNumberTable:\n         line 218: 0\n \n   public short clearShort(short);\n     descriptor: (S)S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #8                  // Method clear:(I)I\n+         2: invokevirtual #32                 // Method clear:(I)I\n          5: i2s\n          6: ireturn\n       LineNumberTable:\n         line 230: 0\n \n   public byte clearByte(byte);\n     descriptor: (B)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #8                  // Method clear:(I)I\n+         2: invokevirtual #32                 // Method clear:(I)I\n          5: i2b\n          6: ireturn\n       LineNumberTable:\n         line 243: 0\n \n   public int set(int);\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: aload_0\n-         2: getfield      #2                  // Field _mask:I\n+         2: getfield      #7                  // Field _mask:I\n          5: ior\n          6: ireturn\n       LineNumberTable:\n         line 255: 0\n \n   public short setShort(short);\n     descriptor: (S)S\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #9                  // Method set:(I)I\n+         2: invokevirtual #35                 // Method set:(I)I\n          5: i2s\n          6: ireturn\n       LineNumberTable:\n         line 267: 0\n \n   public byte setByte(byte);\n     descriptor: (B)B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #9                  // Method set:(I)I\n+         2: invokevirtual #35                 // Method set:(I)I\n          5: i2b\n          6: ireturn\n       LineNumberTable:\n         line 280: 0\n \n   public int setBoolean(int, boolean);\n     descriptor: (IZ)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: iload_2\n          1: ifeq          12\n          4: aload_0\n          5: iload_1\n-         6: invokevirtual #9                  // Method set:(I)I\n+         6: invokevirtual #35                 // Method set:(I)I\n          9: goto          17\n         12: aload_0\n         13: iload_1\n-        14: invokevirtual #8                  // Method clear:(I)I\n+        14: invokevirtual #32                 // Method clear:(I)I\n         17: ireturn\n       LineNumberTable:\n         line 293: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ int ]\n@@ -363,19 +363,19 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: iload_2\n          1: ifeq          12\n          4: aload_0\n          5: iload_1\n-         6: invokevirtual #10                 // Method setShort:(S)S\n+         6: invokevirtual #38                 // Method setShort:(S)S\n          9: goto          17\n         12: aload_0\n         13: iload_1\n-        14: invokevirtual #11                 // Method clearShort:(S)S\n+        14: invokevirtual #42                 // Method clearShort:(S)S\n         17: ireturn\n       LineNumberTable:\n         line 306: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ int ]\n@@ -385,19 +385,19 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: iload_2\n          1: ifeq          12\n          4: aload_0\n          5: iload_1\n-         6: invokevirtual #12                 // Method setByte:(B)B\n+         6: invokevirtual #45                 // Method setByte:(B)B\n          9: goto          17\n         12: aload_0\n         13: iload_1\n-        14: invokevirtual #13                 // Method clearByte:(B)B\n+        14: invokevirtual #49                 // Method clearByte:(B)B\n         17: ireturn\n       LineNumberTable:\n         line 319: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ int ]\n"}]}
