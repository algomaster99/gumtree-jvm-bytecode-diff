{"diffoscope-json-version": 1, "source1": "first/JiraCsv213Test.class", "source2": "second/JiraCsv213Test.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,23 +16,42 @@\n import org.junit.Ignore;\n \n @Ignore\n public class JiraCsv213Test\n {\n     private void createEndChannel(final File csvFile) {\n         final CSVFormat csvFormat = CSVFormat.DEFAULT.withDelimiter(';').withFirstRecordAsHeader().withRecordSeparator('\\n').withQuoteMode(QuoteMode.ALL);\n-        try (final CSVParser parser = csvFormat.parse((Reader)new InputStreamReader(new FileInputStream(csvFile), StandardCharsets.UTF_8))) {\n-            if (parser.iterator().hasNext()) {\n-                System.out.println(parser.getCurrentLineNumber());\n-                System.out.println(parser.getRecordNumber());\n-                final CSVRecord firstRecord = (CSVRecord)parser.iterator().next();\n-                if (parser != null) {\n-                    parser.close();\n+        try {\n+            Throwable t = null;\n+            try {\n+                final CSVParser parser = csvFormat.parse((Reader)new InputStreamReader(new FileInputStream(csvFile), StandardCharsets.UTF_8));\n+                try {\n+                    if (parser.iterator().hasNext()) {\n+                        System.out.println(parser.getCurrentLineNumber());\n+                        System.out.println(parser.getRecordNumber());\n+                        final CSVRecord firstRecord = (CSVRecord)parser.iterator().next();\n+                    }\n+                }\n+                finally {\n+                    if (parser != null) {\n+                        parser.close();\n+                    }\n+                }\n+            }\n+            finally {\n+                if (t == null) {\n+                    final Throwable exception;\n+                    t = exception;\n+                }\n+                else {\n+                    final Throwable exception;\n+                    if (t != exception) {\n+                        t.addSuppressed(exception);\n+                    }\n                 }\n-                return;\n             }\n         }\n         catch (final IOException e) {\n             throw new RuntimeException(\"Error while adding end channel to csv\", e);\n         }\n     }\n     \n"}]}
