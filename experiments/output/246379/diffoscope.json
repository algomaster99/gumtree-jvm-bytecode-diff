{"diffoscope-json-version": 1, "source1": "first/NonEmptyAtclauseDescriptionCheck.class", "source2": "second/NonEmptyAtclauseDescriptionCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,29 +11,29 @@\n {\n     public static final String MSG_KEY = \"non.empty.atclause\";\n     \n     public int[] getDefaultJavadocTokens() {\n         return new int[] { 10, 11, 17, 9, 8 };\n     }\n     \n-    public void visitJavadocToken(final DetailNode ast) {\n-        if (isEmptyTag(ast.getParent())) {\n-            this.log(ast.getLineNumber(), \"non.empty.atclause\", new Object[] { ast.getText() });\n+    public void visitJavadocToken(final DetailNode detailNode) {\n+        if (isEmptyTag(detailNode.getParent())) {\n+            this.log(detailNode.getLineNumber(), \"non.empty.atclause\", new Object[] { detailNode.getText() });\n         }\n     }\n     \n-    private static boolean isEmptyTag(final DetailNode tagNode) {\n-        final DetailNode tagDescription = JavadocUtil.findFirstToken(tagNode, 10068);\n-        return tagDescription == null || hasOnlyEmptyText(tagDescription);\n+    private static boolean isEmptyTag(final DetailNode detailNode) {\n+        final DetailNode firstToken = JavadocUtil.findFirstToken(detailNode, 10068);\n+        return firstToken == null || hasOnlyEmptyText(firstToken);\n     }\n     \n-    private static boolean hasOnlyEmptyText(final DetailNode description) {\n-        boolean result = true;\n-        for (final DetailNode child : description.getChildren()) {\n-            if (child.getType() != 1 && !CommonUtil.isBlank(child.getText())) {\n-                result = false;\n+    private static boolean hasOnlyEmptyText(final DetailNode detailNode) {\n+        boolean b = true;\n+        for (final DetailNode detailNode2 : detailNode.getChildren()) {\n+            if (detailNode2.getType() != 1 && !CommonUtil.isBlank(detailNode2.getText())) {\n+                b = false;\n                 break;\n             }\n         }\n-        return result;\n+        return b;\n     }\n }\n"}]}
