{"diffoscope-json-version": 1, "source1": "first/LZMADecoder.class", "source2": "second/LZMADecoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,182 +1,188 @@\n-  SHA-256 checksum 80dd6b2055357e95060f2bed94962f6e9cede614f8dcc22ee62748d11f0aa96e\n+  SHA-256 checksum 02641c04866153cd68b1efa7d5387036062d73cdb4f28335331b05a8224bf9db\n   Compiled from \"LZMADecoder.java\"\n class org.apache.commons.compress.archivers.sevenz.LZMADecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0020) ACC_SUPER\n-  this_class: #40                         // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-  super_class: #41                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n-  interfaces: 0, fields: 0, methods: 8, attributes: 1\n+  this_class: #36                         // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+  super_class: #37                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n+  interfaces: 0, fields: 0, methods: 8, attributes: 3\n Constant pool:\n-    #1 = Class              #95           // java/lang/Class\n-    #2 = Class              #96           // org/tukaani/xz/LZMA2Options\n-    #3 = Class              #97           // java/lang/Number\n-    #4 = Methodref          #41.#98       // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-    #5 = Fieldref           #99.#100      // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n-    #6 = Class              #101          // java/io/IOException\n-    #7 = String             #102          // Missing LZMA properties\n-    #8 = Methodref          #6.#103       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-    #9 = String             #104          // LZMA properties too short\n-   #10 = Methodref          #40.#105      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #11 = Class              #106          // org/tukaani/xz/LZMAInputStream\n+    #1 = Class              #91           // java/lang/Class\n+    #2 = Class              #92           // org/tukaani/xz/LZMA2Options\n+    #3 = Class              #93           // java/lang/Number\n+    #4 = Methodref          #37.#94       // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+    #5 = Fieldref           #95.#96       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+    #6 = Class              #97           // java/io/IOException\n+    #7 = String             #98           // Missing LZMA properties\n+    #8 = Methodref          #6.#99        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+    #9 = String             #100          // LZMA properties too short\n+   #10 = Methodref          #36.#101      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #11 = Class              #102          // org/tukaani/xz/LZMAInputStream\n    #12 = Integer            2147483632\n-   #13 = Class              #107          // java/lang/StringBuilder\n-   #14 = Methodref          #13.#108      // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = String             #109          // Dictionary larger than 4GiB maximum size used in\n-   #16 = Methodref          #13.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #13.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#112      // org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n-   #19 = Class              #113          // org/apache/commons/compress/MemoryLimitException\n-   #20 = Methodref          #19.#114      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-   #21 = Methodref          #11.#115      // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n-   #22 = Class              #116          // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-   #23 = Class              #117          // org/tukaani/xz/LZMAOutputStream\n-   #24 = Methodref          #40.#118      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #25 = Methodref          #23.#119      // org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-   #26 = Methodref          #22.#120      // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #27 = Methodref          #2.#121       // org/tukaani/xz/LZMA2Options.getPb:()I\n-   #28 = Methodref          #2.#122       // org/tukaani/xz/LZMA2Options.getLp:()I\n-   #29 = Methodref          #2.#123       // org/tukaani/xz/LZMA2Options.getLc:()I\n-   #30 = Methodref          #2.#124       // org/tukaani/xz/LZMA2Options.getDictSize:()I\n-   #31 = Methodref          #125.#126     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-   #32 = Methodref          #2.#108       // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n-   #33 = Methodref          #2.#127       // org/tukaani/xz/LZMA2Options.setPb:(I)V\n-   #34 = Methodref          #2.#128       // org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n-   #35 = Methodref          #2.#129       // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n-   #36 = Methodref          #125.#130     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #37 = Methodref          #40.#131      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n-   #38 = Integer            8388608\n-   #39 = Methodref          #40.#132      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n-   #40 = Class              #133          // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-   #41 = Class              #134          // org/apache/commons/compress/archivers/sevenz/CoderBase\n-   #42 = Utf8               <init>\n-   #43 = Utf8               ()V\n-   #44 = Utf8               Code\n-   #45 = Utf8               LineNumberTable\n-   #46 = Utf8               LocalVariableTable\n-   #47 = Utf8               this\n-   #48 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n-   #49 = Utf8               decode\n-   #50 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-   #51 = Utf8               archiveName\n-   #52 = Utf8               Ljava/lang/String;\n-   #53 = Utf8               in\n-   #54 = Utf8               Ljava/io/InputStream;\n-   #55 = Utf8               uncompressedLength\n-   #56 = Utf8               J\n-   #57 = Utf8               coder\n-   #58 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-   #59 = Utf8               password\n-   #60 = Utf8               [B\n-   #61 = Utf8               maxMemoryLimitInKb\n-   #62 = Utf8               I\n-   #63 = Utf8               propsByte\n-   #64 = Utf8               B\n-   #65 = Utf8               dictSize\n-   #66 = Utf8               memoryUsageInKb\n-   #67 = Utf8               StackMapTable\n-   #68 = Utf8               Exceptions\n-   #69 = Utf8               encode\n-   #70 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-   #71 = Utf8               out\n-   #72 = Utf8               Ljava/io/OutputStream;\n-   #73 = Utf8               opts\n-   #74 = Utf8               Ljava/lang/Object;\n-   #75 = Utf8               getOptionsAsProperties\n-   #76 = Utf8               (Ljava/lang/Object;)[B\n-   #77 = Utf8               options\n-   #78 = Utf8               Lorg/tukaani/xz/LZMA2Options;\n-   #79 = Utf8               props\n-   #80 = Utf8               o\n-   #81 = Utf8               getOptionsFromCoder\n-   #82 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-   #83 = Utf8               pb\n-   #84 = Utf8               lp\n-   #85 = Utf8               lc\n-   #86 = Utf8               getDictionarySize\n-   #87 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #88 = Class              #135          // java/lang/IllegalArgumentException\n-   #89 = Utf8               getOptions\n-   #90 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-   #91 = Utf8               numberOptionOrDefault\n-   #92 = Utf8               (Ljava/lang/Object;)I\n-   #93 = Utf8               SourceFile\n-   #94 = Utf8               LZMADecoder.java\n-   #95 = Utf8               java/lang/Class\n-   #96 = Utf8               org/tukaani/xz/LZMA2Options\n-   #97 = Utf8               java/lang/Number\n-   #98 = NameAndType        #42:#136      // \"<init>\":([Ljava/lang/Class;)V\n-   #99 = Class              #137          // org/apache/commons/compress/archivers/sevenz/Coder\n-  #100 = NameAndType        #138:#60      // properties:[B\n-  #101 = Utf8               java/io/IOException\n-  #102 = Utf8               Missing LZMA properties\n-  #103 = NameAndType        #42:#139      // \"<init>\":(Ljava/lang/String;)V\n-  #104 = Utf8               LZMA properties too short\n-  #105 = NameAndType        #86:#87       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-  #106 = Utf8               org/tukaani/xz/LZMAInputStream\n-  #107 = Utf8               java/lang/StringBuilder\n-  #108 = NameAndType        #42:#43       // \"<init>\":()V\n-  #109 = Utf8               Dictionary larger than 4GiB maximum size used in\n-  #110 = NameAndType        #140:#141     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #142:#143     // toString:()Ljava/lang/String;\n-  #112 = NameAndType        #144:#145     // getMemoryUsage:(IB)I\n-  #113 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #114 = NameAndType        #42:#146      // \"<init>\":(JI)V\n-  #115 = NameAndType        #42:#147      // \"<init>\":(Ljava/io/InputStream;JBI)V\n-  #116 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n-  #117 = Utf8               org/tukaani/xz/LZMAOutputStream\n-  #118 = NameAndType        #89:#90       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n-  #119 = NameAndType        #42:#148      // \"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-  #120 = NameAndType        #42:#149      // \"<init>\":(Ljava/io/OutputStream;)V\n-  #121 = NameAndType        #150:#151     // getPb:()I\n-  #122 = NameAndType        #152:#151     // getLp:()I\n-  #123 = NameAndType        #153:#151     // getLc:()I\n-  #124 = NameAndType        #154:#151     // getDictSize:()I\n-  #125 = Class              #155          // org/apache/commons/compress/utils/ByteUtils\n-  #126 = NameAndType        #156:#157     // toLittleEndian:([BJII)V\n-  #127 = NameAndType        #158:#159     // setPb:(I)V\n-  #128 = NameAndType        #160:#161     // setLcLp:(II)V\n-  #129 = NameAndType        #162:#159     // setDictSize:(I)V\n-  #130 = NameAndType        #163:#164     // fromLittleEndian:([BII)J\n-  #131 = NameAndType        #91:#92       // numberOptionOrDefault:(Ljava/lang/Object;)I\n-  #132 = NameAndType        #91:#165      // numberOptionOrDefault:(Ljava/lang/Object;I)I\n-  #133 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMADecoder\n-  #134 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-  #135 = Utf8               java/lang/IllegalArgumentException\n-  #136 = Utf8               ([Ljava/lang/Class;)V\n-  #137 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n-  #138 = Utf8               properties\n-  #139 = Utf8               (Ljava/lang/String;)V\n-  #140 = Utf8               append\n-  #141 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #142 = Utf8               toString\n-  #143 = Utf8               ()Ljava/lang/String;\n-  #144 = Utf8               getMemoryUsage\n-  #145 = Utf8               (IB)I\n-  #146 = Utf8               (JI)V\n-  #147 = Utf8               (Ljava/io/InputStream;JBI)V\n-  #148 = Utf8               (Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-  #149 = Utf8               (Ljava/io/OutputStream;)V\n-  #150 = Utf8               getPb\n-  #151 = Utf8               ()I\n-  #152 = Utf8               getLp\n-  #153 = Utf8               getLc\n-  #154 = Utf8               getDictSize\n-  #155 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #156 = Utf8               toLittleEndian\n-  #157 = Utf8               ([BJII)V\n-  #158 = Utf8               setPb\n-  #159 = Utf8               (I)V\n-  #160 = Utf8               setLcLp\n-  #161 = Utf8               (II)V\n-  #162 = Utf8               setDictSize\n-  #163 = Utf8               fromLittleEndian\n-  #164 = Utf8               ([BII)J\n-  #165 = Utf8               (Ljava/lang/Object;I)I\n+   #13 = InvokeDynamic      #0:#106       // #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #14 = Methodref          #11.#107      // org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n+   #15 = Class              #108          // org/apache/commons/compress/MemoryLimitException\n+   #16 = Methodref          #15.#109      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+   #17 = Methodref          #11.#110      // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n+   #18 = Class              #111          // org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+   #19 = Class              #112          // org/tukaani/xz/LZMAOutputStream\n+   #20 = Methodref          #36.#113      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #21 = Methodref          #19.#114      // org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+   #22 = Methodref          #18.#115      // org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #23 = Methodref          #2.#116       // org/tukaani/xz/LZMA2Options.getPb:()I\n+   #24 = Methodref          #2.#117       // org/tukaani/xz/LZMA2Options.getLp:()I\n+   #25 = Methodref          #2.#118       // org/tukaani/xz/LZMA2Options.getLc:()I\n+   #26 = Methodref          #2.#119       // org/tukaani/xz/LZMA2Options.getDictSize:()I\n+   #27 = Methodref          #120.#121     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+   #28 = Methodref          #2.#122       // org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+   #29 = Methodref          #2.#123       // org/tukaani/xz/LZMA2Options.setPb:(I)V\n+   #30 = Methodref          #2.#124       // org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n+   #31 = Methodref          #2.#125       // org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+   #32 = Methodref          #120.#126     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #33 = Methodref          #36.#127      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;)I\n+   #34 = Integer            8388608\n+   #35 = Methodref          #36.#128      // org/apache/commons/compress/archivers/sevenz/LZMADecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n+   #36 = Class              #129          // org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+   #37 = Class              #130          // org/apache/commons/compress/archivers/sevenz/CoderBase\n+   #38 = Utf8               <init>\n+   #39 = Utf8               ()V\n+   #40 = Utf8               Code\n+   #41 = Utf8               LineNumberTable\n+   #42 = Utf8               LocalVariableTable\n+   #43 = Utf8               this\n+   #44 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n+   #45 = Utf8               decode\n+   #46 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+   #47 = Utf8               archiveName\n+   #48 = Utf8               Ljava/lang/String;\n+   #49 = Utf8               in\n+   #50 = Utf8               Ljava/io/InputStream;\n+   #51 = Utf8               uncompressedLength\n+   #52 = Utf8               J\n+   #53 = Utf8               coder\n+   #54 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+   #55 = Utf8               password\n+   #56 = Utf8               [B\n+   #57 = Utf8               maxMemoryLimitInKb\n+   #58 = Utf8               I\n+   #59 = Utf8               propsByte\n+   #60 = Utf8               B\n+   #61 = Utf8               dictSize\n+   #62 = Utf8               memoryUsageInKb\n+   #63 = Utf8               StackMapTable\n+   #64 = Utf8               Exceptions\n+   #65 = Utf8               encode\n+   #66 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+   #67 = Utf8               out\n+   #68 = Utf8               Ljava/io/OutputStream;\n+   #69 = Utf8               opts\n+   #70 = Utf8               Ljava/lang/Object;\n+   #71 = Utf8               getOptionsAsProperties\n+   #72 = Utf8               (Ljava/lang/Object;)[B\n+   #73 = Utf8               options\n+   #74 = Utf8               Lorg/tukaani/xz/LZMA2Options;\n+   #75 = Utf8               props\n+   #76 = Utf8               o\n+   #77 = Utf8               getOptionsFromCoder\n+   #78 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+   #79 = Utf8               pb\n+   #80 = Utf8               lp\n+   #81 = Utf8               lc\n+   #82 = Utf8               getDictionarySize\n+   #83 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #84 = Class              #131          // java/lang/IllegalArgumentException\n+   #85 = Utf8               getOptions\n+   #86 = Utf8               (Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+   #87 = Utf8               numberOptionOrDefault\n+   #88 = Utf8               (Ljava/lang/Object;)I\n+   #89 = Utf8               SourceFile\n+   #90 = Utf8               LZMADecoder.java\n+   #91 = Utf8               java/lang/Class\n+   #92 = Utf8               org/tukaani/xz/LZMA2Options\n+   #93 = Utf8               java/lang/Number\n+   #94 = NameAndType        #38:#132      // \"<init>\":([Ljava/lang/Class;)V\n+   #95 = Class              #133          // org/apache/commons/compress/archivers/sevenz/Coder\n+   #96 = NameAndType        #134:#56      // properties:[B\n+   #97 = Utf8               java/io/IOException\n+   #98 = Utf8               Missing LZMA properties\n+   #99 = NameAndType        #38:#135      // \"<init>\":(Ljava/lang/String;)V\n+  #100 = Utf8               LZMA properties too short\n+  #101 = NameAndType        #82:#83       // getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+  #102 = Utf8               org/tukaani/xz/LZMAInputStream\n+  #103 = Utf8               BootstrapMethods\n+  #104 = MethodHandle       6:#136        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #105 = String             #137          // Dictionary larger than 4GiB maximum size used in \\u0001\n+  #106 = NameAndType        #138:#139     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #107 = NameAndType        #140:#141     // getMemoryUsage:(IB)I\n+  #108 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #109 = NameAndType        #38:#142      // \"<init>\":(JI)V\n+  #110 = NameAndType        #38:#143      // \"<init>\":(Ljava/io/InputStream;JBI)V\n+  #111 = Utf8               org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+  #112 = Utf8               org/tukaani/xz/LZMAOutputStream\n+  #113 = NameAndType        #85:#86       // getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+  #114 = NameAndType        #38:#144      // \"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+  #115 = NameAndType        #38:#145      // \"<init>\":(Ljava/io/OutputStream;)V\n+  #116 = NameAndType        #146:#147     // getPb:()I\n+  #117 = NameAndType        #148:#147     // getLp:()I\n+  #118 = NameAndType        #149:#147     // getLc:()I\n+  #119 = NameAndType        #150:#147     // getDictSize:()I\n+  #120 = Class              #151          // org/apache/commons/compress/utils/ByteUtils\n+  #121 = NameAndType        #152:#153     // toLittleEndian:([BJII)V\n+  #122 = NameAndType        #38:#39       // \"<init>\":()V\n+  #123 = NameAndType        #154:#155     // setPb:(I)V\n+  #124 = NameAndType        #156:#157     // setLcLp:(II)V\n+  #125 = NameAndType        #158:#155     // setDictSize:(I)V\n+  #126 = NameAndType        #159:#160     // fromLittleEndian:([BII)J\n+  #127 = NameAndType        #87:#88       // numberOptionOrDefault:(Ljava/lang/Object;)I\n+  #128 = NameAndType        #87:#161      // numberOptionOrDefault:(Ljava/lang/Object;I)I\n+  #129 = Utf8               org/apache/commons/compress/archivers/sevenz/LZMADecoder\n+  #130 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+  #131 = Utf8               java/lang/IllegalArgumentException\n+  #132 = Utf8               ([Ljava/lang/Class;)V\n+  #133 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n+  #134 = Utf8               properties\n+  #135 = Utf8               (Ljava/lang/String;)V\n+  #136 = Methodref          #162.#163     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #137 = Utf8               Dictionary larger than 4GiB maximum size used in \\u0001\n+  #138 = Utf8               makeConcatWithConstants\n+  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #140 = Utf8               getMemoryUsage\n+  #141 = Utf8               (IB)I\n+  #142 = Utf8               (JI)V\n+  #143 = Utf8               (Ljava/io/InputStream;JBI)V\n+  #144 = Utf8               (Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+  #145 = Utf8               (Ljava/io/OutputStream;)V\n+  #146 = Utf8               getPb\n+  #147 = Utf8               ()I\n+  #148 = Utf8               getLp\n+  #149 = Utf8               getLc\n+  #150 = Utf8               getDictSize\n+  #151 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #152 = Utf8               toLittleEndian\n+  #153 = Utf8               ([BJII)V\n+  #154 = Utf8               setPb\n+  #155 = Utf8               (I)V\n+  #156 = Utf8               setLcLp\n+  #157 = Utf8               (II)V\n+  #158 = Utf8               setDictSize\n+  #159 = Utf8               fromLittleEndian\n+  #160 = Utf8               ([BII)J\n+  #161 = Utf8               (Ljava/lang/Object;I)I\n+  #162 = Class              #164          // java/lang/invoke/StringConcatFactory\n+  #163 = NameAndType        #138:#168     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #164 = Utf8               java/lang/invoke/StringConcatFactory\n+  #165 = Class              #170          // java/lang/invoke/MethodHandles$Lookup\n+  #166 = Utf8               Lookup\n+  #167 = Utf8               InnerClasses\n+  #168 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #169 = Class              #171          // java/lang/invoke/MethodHandles\n+  #170 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #171 = Utf8               java/lang/invoke/MethodHandles\n {\n   org.apache.commons.compress.archivers.sevenz.LZMADecoder();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n@@ -229,102 +235,96 @@\n         45: istore        8\n         47: aload_0\n         48: aload         5\n         50: invokespecial #10                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n         53: istore        9\n         55: iload         9\n         57: ldc           #12                 // int 2147483632\n-        59: if_icmple     89\n+        59: if_icmple     76\n         62: new           #6                  // class java/io/IOException\n         65: dup\n-        66: new           #13                 // class java/lang/StringBuilder\n-        69: dup\n-        70: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        73: ldc           #15                 // String Dictionary larger than 4GiB maximum size used in\n-        75: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        78: aload_1\n-        79: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        82: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        85: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        88: athrow\n-        89: iload         9\n-        91: iload         8\n-        93: invokestatic  #18                 // Method org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n-        96: istore        10\n-        98: iload         10\n-       100: iload         7\n-       102: if_icmple     118\n-       105: new           #19                 // class org/apache/commons/compress/MemoryLimitException\n+        66: aload_1\n+        67: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        72: invokespecial #8                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        75: athrow\n+        76: iload         9\n+        78: iload         8\n+        80: invokestatic  #14                 // Method org/tukaani/xz/LZMAInputStream.getMemoryUsage:(IB)I\n+        83: istore        10\n+        85: iload         10\n+        87: iload         7\n+        89: if_icmple     105\n+        92: new           #15                 // class org/apache/commons/compress/MemoryLimitException\n+        95: dup\n+        96: iload         10\n+        98: i2l\n+        99: iload         7\n+       101: invokespecial #16                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+       104: athrow\n+       105: new           #11                 // class org/tukaani/xz/LZMAInputStream\n        108: dup\n-       109: iload         10\n-       111: i2l\n-       112: iload         7\n-       114: invokespecial #20                 // Method org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n-       117: athrow\n-       118: new           #11                 // class org/tukaani/xz/LZMAInputStream\n-       121: dup\n-       122: aload_2\n-       123: lload_3\n-       124: iload         8\n-       126: iload         9\n-       128: invokespecial #21                 // Method org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n-       131: areturn\n+       109: aload_2\n+       110: lload_3\n+       111: iload         8\n+       113: iload         9\n+       115: invokespecial #17                 // Method org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;JBI)V\n+       118: areturn\n       LineNumberTable:\n         line 39: 0\n         line 40: 8\n         line 42: 18\n         line 43: 28\n         line 45: 38\n         line 46: 47\n         line 47: 55\n         line 48: 62\n-        line 50: 89\n-        line 51: 98\n-        line 52: 105\n-        line 54: 118\n+        line 50: 76\n+        line 51: 85\n+        line 52: 92\n+        line 54: 105\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     132     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n-            0     132     1 archiveName   Ljava/lang/String;\n-            0     132     2    in   Ljava/io/InputStream;\n-            0     132     3 uncompressedLength   J\n-            0     132     5 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-            0     132     6 password   [B\n-            0     132     7 maxMemoryLimitInKb   I\n-           47      85     8 propsByte   B\n-           55      77     9 dictSize   I\n-           98      34    10 memoryUsageInKb   I\n+            0     119     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n+            0     119     1 archiveName   Ljava/lang/String;\n+            0     119     2    in   Ljava/io/InputStream;\n+            0     119     3 uncompressedLength   J\n+            0     119     5 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+            0     119     6 password   [B\n+            0     119     7 maxMemoryLimitInKb   I\n+           47      72     8 propsByte   B\n+           55      64     9 dictSize   I\n+           85      34    10 memoryUsageInKb   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 18 /* same */\n         frame_type = 19 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 50\n+          offset_delta = 37\n           locals = [ int, int ]\n         frame_type = 252 /* append */\n           offset_delta = 28\n           locals = [ int ]\n     Exceptions:\n       throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n     Code:\n       stack=7, locals=3, args_size=3\n-         0: new           #22                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n+         0: new           #18                 // class org/apache/commons/compress/utils/FlushShieldFilterOutputStream\n          3: dup\n-         4: new           #23                 // class org/tukaani/xz/LZMAOutputStream\n+         4: new           #19                 // class org/tukaani/xz/LZMAOutputStream\n          7: dup\n          8: aload_1\n          9: aload_0\n         10: aload_2\n-        11: invokespecial #24                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+        11: invokespecial #20                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n         14: iconst_0\n-        15: invokespecial #25                 // Method org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n-        18: invokespecial #26                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        15: invokespecial #21                 // Method org/tukaani/xz/LZMAOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/tukaani/xz/LZMA2Options;Z)V\n+        18: invokespecial #22                 // Method org/apache/commons/compress/utils/FlushShieldFilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         21: areturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0      22     1   out   Ljava/io/OutputStream;\n@@ -335,46 +335,46 @@\n   byte[] getOptionsAsProperties(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n     Code:\n       stack=5, locals=6, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #24                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n+         2: invokespecial #20                 // Method getOptions:(Ljava/lang/Object;)Lorg/tukaani/xz/LZMA2Options;\n          5: astore_2\n          6: aload_2\n-         7: invokevirtual #27                 // Method org/tukaani/xz/LZMA2Options.getPb:()I\n+         7: invokevirtual #23                 // Method org/tukaani/xz/LZMA2Options.getPb:()I\n         10: iconst_5\n         11: imul\n         12: aload_2\n-        13: invokevirtual #28                 // Method org/tukaani/xz/LZMA2Options.getLp:()I\n+        13: invokevirtual #24                 // Method org/tukaani/xz/LZMA2Options.getLp:()I\n         16: iadd\n         17: bipush        9\n         19: imul\n         20: aload_2\n-        21: invokevirtual #29                 // Method org/tukaani/xz/LZMA2Options.getLc:()I\n+        21: invokevirtual #25                 // Method org/tukaani/xz/LZMA2Options.getLc:()I\n         24: iadd\n         25: i2b\n         26: istore_3\n         27: aload_2\n-        28: invokevirtual #30                 // Method org/tukaani/xz/LZMA2Options.getDictSize:()I\n+        28: invokevirtual #26                 // Method org/tukaani/xz/LZMA2Options.getDictSize:()I\n         31: istore        4\n         33: iconst_5\n         34: newarray       byte\n         36: astore        5\n         38: aload         5\n         40: iconst_0\n         41: iload_3\n         42: bastore\n         43: aload         5\n         45: iload         4\n         47: i2l\n         48: iconst_1\n         49: iconst_4\n-        50: invokestatic  #31                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+        50: invokestatic  #27                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n         53: aload         5\n         55: areturn\n       LineNumberTable:\n         line 67: 0\n         line 68: 6\n         line 69: 27\n         line 70: 33\n@@ -444,28 +444,28 @@\n         78: iload         6\n         80: bipush        9\n         82: imul\n         83: isub\n         84: istore        7\n         86: new           #2                  // class org/tukaani/xz/LZMA2Options\n         89: dup\n-        90: invokespecial #32                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+        90: invokespecial #28                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n         93: astore        8\n         95: aload         8\n         97: iload         5\n-        99: invokevirtual #33                 // Method org/tukaani/xz/LZMA2Options.setPb:(I)V\n+        99: invokevirtual #29                 // Method org/tukaani/xz/LZMA2Options.setPb:(I)V\n        102: aload         8\n        104: iload         7\n        106: iload         6\n-       108: invokevirtual #34                 // Method org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n+       108: invokevirtual #30                 // Method org/tukaani/xz/LZMA2Options.setLcLp:(II)V\n        111: aload         8\n        113: aload_0\n        114: aload_1\n        115: invokespecial #10                 // Method getDictionarySize:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-       118: invokevirtual #35                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+       118: invokevirtual #31                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n        121: aload         8\n        123: areturn\n       LineNumberTable:\n         line 78: 0\n         line 79: 7\n         line 81: 17\n         line 82: 26\n@@ -502,15 +502,15 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: getfield      #5                  // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          4: iconst_1\n          5: iconst_4\n-         6: invokestatic  #36                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+         6: invokestatic  #32                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n          9: l2i\n         10: ireturn\n       LineNumberTable:\n         line 98: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n@@ -527,21 +527,21 @@\n          1: instanceof    #2                  // class org/tukaani/xz/LZMA2Options\n          4: ifeq          12\n          7: aload_1\n          8: checkcast     #2                  // class org/tukaani/xz/LZMA2Options\n         11: areturn\n         12: new           #2                  // class org/tukaani/xz/LZMA2Options\n         15: dup\n-        16: invokespecial #32                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n+        16: invokespecial #28                 // Method org/tukaani/xz/LZMA2Options.\"<init>\":()V\n         19: astore_2\n         20: aload_2\n         21: aload_0\n         22: aload_1\n-        23: invokespecial #37                 // Method numberOptionOrDefault:(Ljava/lang/Object;)I\n-        26: invokevirtual #35                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n+        23: invokespecial #33                 // Method numberOptionOrDefault:(Ljava/lang/Object;)I\n+        26: invokevirtual #31                 // Method org/tukaani/xz/LZMA2Options.setDictSize:(I)V\n         29: aload_2\n         30: areturn\n       LineNumberTable:\n         line 102: 0\n         line 103: 7\n         line 105: 12\n         line 106: 20\n@@ -558,18 +558,24 @@\n \n   private int numberOptionOrDefault(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #38                 // int 8388608\n-         3: invokestatic  #39                 // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n+         1: ldc           #34                 // int 8388608\n+         3: invokestatic  #35                 // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n          6: ireturn\n       LineNumberTable:\n         line 111: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/sevenz/LZMADecoder;\n             0       7     1  opts   Ljava/lang/Object;\n }\n SourceFile: \"LZMADecoder.java\"\n+InnerClasses:\n+  public static final #166= #165 of #169; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #104 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #105 Dictionary larger than 4GiB maximum size used in \\u0001\n"}]}
