{"diffoscope-json-version": 1, "source1": "first/RExecClient.class", "source2": "second/RExecClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum d575c43326bcdcaf20992ae2da4f1d89deb916a36cdf6074b76fcfe07184b599\n+  SHA-256 checksum 65d6e6fd2ed7564c530a1f75eeea52e40df9d6b33d771fb07da968653409b7c3\n   Compiled from \"RExecClient.java\"\n public class org.apache.commons.net.bsd.RExecClient extends org.apache.commons.net.SocketClient\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #3                          // org/apache/commons/net/bsd/RExecClient\n   super_class: #45                        // org/apache/commons/net/SocketClient\n   interfaces: 0, fields: 4, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #45.#84       // org/apache/commons/net/SocketClient.\"<init>\":()V\n-    #2 = Fieldref           #3.#85        // org/apache/commons/net/bsd/RExecClient._errorStream_:Ljava/io/InputStream;\n-    #3 = Class              #86           // org/apache/commons/net/bsd/RExecClient\n-    #4 = Methodref          #3.#87        // org/apache/commons/net/bsd/RExecClient.setDefaultPort:(I)V\n-    #5 = Fieldref           #3.#88        // org/apache/commons/net/bsd/RExecClient._serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n-    #6 = Methodref          #3.#89        // org/apache/commons/net/bsd/RExecClient.getLocalAddress:()Ljava/net/InetAddress;\n-    #7 = Methodref          #90.#91       // javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-    #8 = Fieldref           #3.#92        // org/apache/commons/net/bsd/RExecClient._output_:Ljava/io/OutputStream;\n-    #9 = Methodref          #93.#94       // java/net/ServerSocket.getLocalPort:()I\n-   #10 = Methodref          #95.#96       // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #11 = Fieldref           #97.#98       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #12 = Methodref          #99.#100      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #13 = Methodref          #101.#102     // java/io/OutputStream.write:([B)V\n-   #14 = Methodref          #101.#103     // java/io/OutputStream.write:(I)V\n-   #15 = Methodref          #101.#104     // java/io/OutputStream.flush:()V\n-   #16 = Methodref          #93.#105      // java/net/ServerSocket.accept:()Ljava/net/Socket;\n-   #17 = Methodref          #93.#106      // java/net/ServerSocket.close:()V\n-   #18 = Class              #107          // java/lang/Throwable\n-   #19 = Methodref          #18.#108      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #20 = Fieldref           #3.#109       // org/apache/commons/net/bsd/RExecClient.remoteVerificationEnabled:Z\n-   #21 = Methodref          #3.#110       // org/apache/commons/net/bsd/RExecClient.verifyRemote:(Ljava/net/Socket;)Z\n-   #22 = Methodref          #111.#106     // java/net/Socket.close:()V\n-   #23 = Class              #112          // java/io/IOException\n-   #24 = Class              #113          // java/lang/StringBuilder\n-   #25 = Methodref          #24.#84       // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = String             #114          // Security violation: unexpected connection attempt by\n-   #27 = Methodref          #24.#115      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #28 = Methodref          #111.#116     // java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n-   #29 = Methodref          #117.#118     // java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n-   #30 = Methodref          #24.#119      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #23.#120      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Class              #121          // org/apache/commons/net/io/SocketInputStream\n-   #33 = Methodref          #111.#122     // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-   #34 = Methodref          #32.#123      // org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-   #35 = Methodref          #124.#106     // java/io/InputStream.close:()V\n-   #36 = Methodref          #45.#125      // org/apache/commons/net/SocketClient.disconnect:()V\n-   #37 = Fieldref           #3.#126       // org/apache/commons/net/bsd/RExecClient._input_:Ljava/io/InputStream;\n-   #38 = Methodref          #3.#127       // org/apache/commons/net/bsd/RExecClient.rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-   #39 = Methodref          #3.#128       // org/apache/commons/net/bsd/RExecClient.createErrorStream:()Ljava/io/InputStream;\n-   #40 = Methodref          #3.#129       // org/apache/commons/net/bsd/RExecClient.getCharset:()Ljava/nio/charset/Charset;\n-   #41 = Methodref          #124.#130     // java/io/InputStream.read:()I\n-   #42 = Class              #131          // org/apache/commons/net/util/NetConstants\n-   #43 = Methodref          #24.#132      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #44 = String             #133          // Server closed connection.\n-   #45 = Class              #134          // org/apache/commons/net/SocketClient\n+    #1 = Methodref          #45.#81       // org/apache/commons/net/SocketClient.\"<init>\":()V\n+    #2 = Fieldref           #3.#82        // org/apache/commons/net/bsd/RExecClient._errorStream_:Ljava/io/InputStream;\n+    #3 = Class              #83           // org/apache/commons/net/bsd/RExecClient\n+    #4 = Methodref          #3.#84        // org/apache/commons/net/bsd/RExecClient.setDefaultPort:(I)V\n+    #5 = Fieldref           #3.#85        // org/apache/commons/net/bsd/RExecClient._serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+    #6 = Methodref          #3.#86        // org/apache/commons/net/bsd/RExecClient.getLocalAddress:()Ljava/net/InetAddress;\n+    #7 = Methodref          #87.#88       // javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+    #8 = Fieldref           #3.#89        // org/apache/commons/net/bsd/RExecClient._output_:Ljava/io/OutputStream;\n+    #9 = Methodref          #64.#90       // java/net/ServerSocket.getLocalPort:()I\n+   #10 = Methodref          #91.#92       // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #11 = Fieldref           #93.#94       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #12 = Methodref          #95.#96       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #13 = Methodref          #97.#98       // java/io/OutputStream.write:([B)V\n+   #14 = Methodref          #97.#99       // java/io/OutputStream.write:(I)V\n+   #15 = Methodref          #97.#100      // java/io/OutputStream.flush:()V\n+   #16 = Methodref          #64.#101      // java/net/ServerSocket.accept:()Ljava/net/Socket;\n+   #17 = Methodref          #64.#102      // java/net/ServerSocket.close:()V\n+   #18 = Class              #103          // java/lang/Throwable\n+   #19 = Methodref          #18.#104      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #20 = Fieldref           #3.#105       // org/apache/commons/net/bsd/RExecClient.remoteVerificationEnabled:Z\n+   #21 = Methodref          #3.#106       // org/apache/commons/net/bsd/RExecClient.verifyRemote:(Ljava/net/Socket;)Z\n+   #22 = Methodref          #65.#102      // java/net/Socket.close:()V\n+   #23 = Class              #107          // java/io/IOException\n+   #24 = Class              #108          // java/lang/StringBuilder\n+   #25 = Methodref          #24.#81       // java/lang/StringBuilder.\"<init>\":()V\n+   #26 = String             #109          // Security violation: unexpected connection attempt by\n+   #27 = Methodref          #24.#110      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #28 = Methodref          #65.#111      // java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n+   #29 = Methodref          #112.#113     // java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n+   #30 = Methodref          #24.#114      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #31 = Methodref          #23.#115      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #32 = Class              #116          // org/apache/commons/net/io/SocketInputStream\n+   #33 = Methodref          #65.#117      // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+   #34 = Methodref          #32.#118      // org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+   #35 = Methodref          #119.#102     // java/io/InputStream.close:()V\n+   #36 = Methodref          #45.#120      // org/apache/commons/net/SocketClient.disconnect:()V\n+   #37 = Fieldref           #3.#121       // org/apache/commons/net/bsd/RExecClient._input_:Ljava/io/InputStream;\n+   #38 = Methodref          #3.#122       // org/apache/commons/net/bsd/RExecClient.rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+   #39 = Methodref          #3.#123       // org/apache/commons/net/bsd/RExecClient.createErrorStream:()Ljava/io/InputStream;\n+   #40 = Methodref          #3.#124       // org/apache/commons/net/bsd/RExecClient.getCharset:()Ljava/nio/charset/Charset;\n+   #41 = Methodref          #119.#125     // java/io/InputStream.read:()I\n+   #42 = Class              #126          // org/apache/commons/net/util/NetConstants\n+   #43 = Methodref          #24.#127      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #44 = String             #128          // Server closed connection.\n+   #45 = Class              #129          // org/apache/commons/net/SocketClient\n    #46 = Utf8               NULL_CHAR\n    #47 = Utf8               C\n    #48 = Utf8               ConstantValue\n    #49 = Integer            0\n    #50 = Utf8               DEFAULT_PORT\n    #51 = Utf8               I\n    #52 = Integer            512\n@@ -67,134 +67,129 @@\n    #57 = Utf8               <init>\n    #58 = Utf8               ()V\n    #59 = Utf8               Code\n    #60 = Utf8               LineNumberTable\n    #61 = Utf8               createErrorStream\n    #62 = Utf8               ()Ljava/io/InputStream;\n    #63 = Utf8               StackMapTable\n-   #64 = Class              #86           // org/apache/commons/net/bsd/RExecClient\n-   #65 = Class              #135          // java/net/Socket\n-   #66 = Class              #136          // java/net/ServerSocket\n-   #67 = Class              #107          // java/lang/Throwable\n-   #68 = Utf8               Exceptions\n-   #69 = Utf8               disconnect\n-   #70 = Utf8               getErrorStream\n-   #71 = Utf8               getInputStream\n-   #72 = Utf8               getOutputStream\n-   #73 = Utf8               ()Ljava/io/OutputStream;\n-   #74 = Utf8               isRemoteVerificationEnabled\n-   #75 = Utf8               ()Z\n-   #76 = Utf8               rexec\n-   #77 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #78 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-   #79 = Class              #113          // java/lang/StringBuilder\n-   #80 = Utf8               setRemoteVerificationEnabled\n-   #81 = Utf8               (Z)V\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               RExecClient.java\n-   #84 = NameAndType        #57:#58       // \"<init>\":()V\n-   #85 = NameAndType        #55:#56       // _errorStream_:Ljava/io/InputStream;\n-   #86 = Utf8               org/apache/commons/net/bsd/RExecClient\n-   #87 = NameAndType        #137:#138     // setDefaultPort:(I)V\n-   #88 = NameAndType        #139:#140     // _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n-   #89 = NameAndType        #141:#142     // getLocalAddress:()Ljava/net/InetAddress;\n-   #90 = Class              #143          // javax/net/ServerSocketFactory\n-   #91 = NameAndType        #144:#145     // createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-   #92 = NameAndType        #146:#147     // _output_:Ljava/io/OutputStream;\n-   #93 = Class              #136          // java/net/ServerSocket\n-   #94 = NameAndType        #148:#149     // getLocalPort:()I\n-   #95 = Class              #150          // java/lang/Integer\n-   #96 = NameAndType        #151:#152     // toString:(I)Ljava/lang/String;\n-   #97 = Class              #153          // java/nio/charset/StandardCharsets\n-   #98 = NameAndType        #154:#155     // UTF_8:Ljava/nio/charset/Charset;\n-   #99 = Class              #156          // java/lang/String\n-  #100 = NameAndType        #157:#158     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #101 = Class              #159          // java/io/OutputStream\n-  #102 = NameAndType        #160:#161     // write:([B)V\n-  #103 = NameAndType        #160:#138     // write:(I)V\n-  #104 = NameAndType        #162:#58      // flush:()V\n-  #105 = NameAndType        #163:#164     // accept:()Ljava/net/Socket;\n-  #106 = NameAndType        #165:#58      // close:()V\n-  #107 = Utf8               java/lang/Throwable\n-  #108 = NameAndType        #166:#167     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #109 = NameAndType        #53:#54       // remoteVerificationEnabled:Z\n-  #110 = NameAndType        #168:#169     // verifyRemote:(Ljava/net/Socket;)Z\n-  #111 = Class              #135          // java/net/Socket\n-  #112 = Utf8               java/io/IOException\n-  #113 = Utf8               java/lang/StringBuilder\n-  #114 = Utf8               Security violation: unexpected connection attempt by\n-  #115 = NameAndType        #170:#171     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #116 = NameAndType        #172:#142     // getInetAddress:()Ljava/net/InetAddress;\n-  #117 = Class              #173          // java/net/InetAddress\n-  #118 = NameAndType        #174:#175     // getHostAddress:()Ljava/lang/String;\n-  #119 = NameAndType        #151:#175     // toString:()Ljava/lang/String;\n-  #120 = NameAndType        #57:#176      // \"<init>\":(Ljava/lang/String;)V\n-  #121 = Utf8               org/apache/commons/net/io/SocketInputStream\n-  #122 = NameAndType        #71:#62       // getInputStream:()Ljava/io/InputStream;\n-  #123 = NameAndType        #57:#177      // \"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #124 = Class              #178          // java/io/InputStream\n-  #125 = NameAndType        #69:#58       // disconnect:()V\n-  #126 = NameAndType        #179:#56      // _input_:Ljava/io/InputStream;\n-  #127 = NameAndType        #76:#78       // rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n-  #128 = NameAndType        #61:#62       // createErrorStream:()Ljava/io/InputStream;\n-  #129 = NameAndType        #180:#181     // getCharset:()Ljava/nio/charset/Charset;\n-  #130 = NameAndType        #182:#149     // read:()I\n-  #131 = Utf8               org/apache/commons/net/util/NetConstants\n-  #132 = NameAndType        #170:#183     // append:(C)Ljava/lang/StringBuilder;\n-  #133 = Utf8               Server closed connection.\n-  #134 = Utf8               org/apache/commons/net/SocketClient\n-  #135 = Utf8               java/net/Socket\n-  #136 = Utf8               java/net/ServerSocket\n-  #137 = Utf8               setDefaultPort\n-  #138 = Utf8               (I)V\n-  #139 = Utf8               _serverSocketFactory_\n-  #140 = Utf8               Ljavax/net/ServerSocketFactory;\n-  #141 = Utf8               getLocalAddress\n-  #142 = Utf8               ()Ljava/net/InetAddress;\n-  #143 = Utf8               javax/net/ServerSocketFactory\n-  #144 = Utf8               createServerSocket\n-  #145 = Utf8               (IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n-  #146 = Utf8               _output_\n-  #147 = Utf8               Ljava/io/OutputStream;\n-  #148 = Utf8               getLocalPort\n-  #149 = Utf8               ()I\n-  #150 = Utf8               java/lang/Integer\n-  #151 = Utf8               toString\n-  #152 = Utf8               (I)Ljava/lang/String;\n-  #153 = Utf8               java/nio/charset/StandardCharsets\n-  #154 = Utf8               UTF_8\n-  #155 = Utf8               Ljava/nio/charset/Charset;\n-  #156 = Utf8               java/lang/String\n-  #157 = Utf8               getBytes\n-  #158 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #159 = Utf8               java/io/OutputStream\n-  #160 = Utf8               write\n-  #161 = Utf8               ([B)V\n-  #162 = Utf8               flush\n-  #163 = Utf8               accept\n-  #164 = Utf8               ()Ljava/net/Socket;\n-  #165 = Utf8               close\n-  #166 = Utf8               addSuppressed\n-  #167 = Utf8               (Ljava/lang/Throwable;)V\n-  #168 = Utf8               verifyRemote\n-  #169 = Utf8               (Ljava/net/Socket;)Z\n-  #170 = Utf8               append\n-  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #172 = Utf8               getInetAddress\n-  #173 = Utf8               java/net/InetAddress\n-  #174 = Utf8               getHostAddress\n-  #175 = Utf8               ()Ljava/lang/String;\n-  #176 = Utf8               (Ljava/lang/String;)V\n-  #177 = Utf8               (Ljava/net/Socket;Ljava/io/InputStream;)V\n-  #178 = Utf8               java/io/InputStream\n-  #179 = Utf8               _input_\n-  #180 = Utf8               getCharset\n-  #181 = Utf8               ()Ljava/nio/charset/Charset;\n-  #182 = Utf8               read\n-  #183 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #64 = Class              #130          // java/net/ServerSocket\n+   #65 = Class              #131          // java/net/Socket\n+   #66 = Utf8               Exceptions\n+   #67 = Utf8               disconnect\n+   #68 = Utf8               getErrorStream\n+   #69 = Utf8               getInputStream\n+   #70 = Utf8               getOutputStream\n+   #71 = Utf8               ()Ljava/io/OutputStream;\n+   #72 = Utf8               isRemoteVerificationEnabled\n+   #73 = Utf8               ()Z\n+   #74 = Utf8               rexec\n+   #75 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #76 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+   #77 = Utf8               setRemoteVerificationEnabled\n+   #78 = Utf8               (Z)V\n+   #79 = Utf8               SourceFile\n+   #80 = Utf8               RExecClient.java\n+   #81 = NameAndType        #57:#58       // \"<init>\":()V\n+   #82 = NameAndType        #55:#56       // _errorStream_:Ljava/io/InputStream;\n+   #83 = Utf8               org/apache/commons/net/bsd/RExecClient\n+   #84 = NameAndType        #132:#133     // setDefaultPort:(I)V\n+   #85 = NameAndType        #134:#135     // _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n+   #86 = NameAndType        #136:#137     // getLocalAddress:()Ljava/net/InetAddress;\n+   #87 = Class              #138          // javax/net/ServerSocketFactory\n+   #88 = NameAndType        #139:#140     // createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+   #89 = NameAndType        #141:#142     // _output_:Ljava/io/OutputStream;\n+   #90 = NameAndType        #143:#144     // getLocalPort:()I\n+   #91 = Class              #145          // java/lang/Integer\n+   #92 = NameAndType        #146:#147     // toString:(I)Ljava/lang/String;\n+   #93 = Class              #148          // java/nio/charset/StandardCharsets\n+   #94 = NameAndType        #149:#150     // UTF_8:Ljava/nio/charset/Charset;\n+   #95 = Class              #151          // java/lang/String\n+   #96 = NameAndType        #152:#153     // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #97 = Class              #154          // java/io/OutputStream\n+   #98 = NameAndType        #155:#156     // write:([B)V\n+   #99 = NameAndType        #155:#133     // write:(I)V\n+  #100 = NameAndType        #157:#58      // flush:()V\n+  #101 = NameAndType        #158:#159     // accept:()Ljava/net/Socket;\n+  #102 = NameAndType        #160:#58      // close:()V\n+  #103 = Utf8               java/lang/Throwable\n+  #104 = NameAndType        #161:#162     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #105 = NameAndType        #53:#54       // remoteVerificationEnabled:Z\n+  #106 = NameAndType        #163:#164     // verifyRemote:(Ljava/net/Socket;)Z\n+  #107 = Utf8               java/io/IOException\n+  #108 = Utf8               java/lang/StringBuilder\n+  #109 = Utf8               Security violation: unexpected connection attempt by\n+  #110 = NameAndType        #165:#166     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #111 = NameAndType        #167:#137     // getInetAddress:()Ljava/net/InetAddress;\n+  #112 = Class              #168          // java/net/InetAddress\n+  #113 = NameAndType        #169:#170     // getHostAddress:()Ljava/lang/String;\n+  #114 = NameAndType        #146:#170     // toString:()Ljava/lang/String;\n+  #115 = NameAndType        #57:#171      // \"<init>\":(Ljava/lang/String;)V\n+  #116 = Utf8               org/apache/commons/net/io/SocketInputStream\n+  #117 = NameAndType        #69:#62       // getInputStream:()Ljava/io/InputStream;\n+  #118 = NameAndType        #57:#172      // \"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #119 = Class              #173          // java/io/InputStream\n+  #120 = NameAndType        #67:#58       // disconnect:()V\n+  #121 = NameAndType        #174:#56      // _input_:Ljava/io/InputStream;\n+  #122 = NameAndType        #74:#76       // rexec:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V\n+  #123 = NameAndType        #61:#62       // createErrorStream:()Ljava/io/InputStream;\n+  #124 = NameAndType        #175:#176     // getCharset:()Ljava/nio/charset/Charset;\n+  #125 = NameAndType        #177:#144     // read:()I\n+  #126 = Utf8               org/apache/commons/net/util/NetConstants\n+  #127 = NameAndType        #165:#178     // append:(C)Ljava/lang/StringBuilder;\n+  #128 = Utf8               Server closed connection.\n+  #129 = Utf8               org/apache/commons/net/SocketClient\n+  #130 = Utf8               java/net/ServerSocket\n+  #131 = Utf8               java/net/Socket\n+  #132 = Utf8               setDefaultPort\n+  #133 = Utf8               (I)V\n+  #134 = Utf8               _serverSocketFactory_\n+  #135 = Utf8               Ljavax/net/ServerSocketFactory;\n+  #136 = Utf8               getLocalAddress\n+  #137 = Utf8               ()Ljava/net/InetAddress;\n+  #138 = Utf8               javax/net/ServerSocketFactory\n+  #139 = Utf8               createServerSocket\n+  #140 = Utf8               (IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n+  #141 = Utf8               _output_\n+  #142 = Utf8               Ljava/io/OutputStream;\n+  #143 = Utf8               getLocalPort\n+  #144 = Utf8               ()I\n+  #145 = Utf8               java/lang/Integer\n+  #146 = Utf8               toString\n+  #147 = Utf8               (I)Ljava/lang/String;\n+  #148 = Utf8               java/nio/charset/StandardCharsets\n+  #149 = Utf8               UTF_8\n+  #150 = Utf8               Ljava/nio/charset/Charset;\n+  #151 = Utf8               java/lang/String\n+  #152 = Utf8               getBytes\n+  #153 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #154 = Utf8               java/io/OutputStream\n+  #155 = Utf8               write\n+  #156 = Utf8               ([B)V\n+  #157 = Utf8               flush\n+  #158 = Utf8               accept\n+  #159 = Utf8               ()Ljava/net/Socket;\n+  #160 = Utf8               close\n+  #161 = Utf8               addSuppressed\n+  #162 = Utf8               (Ljava/lang/Throwable;)V\n+  #163 = Utf8               verifyRemote\n+  #164 = Utf8               (Ljava/net/Socket;)Z\n+  #165 = Utf8               append\n+  #166 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #167 = Utf8               getInetAddress\n+  #168 = Utf8               java/net/InetAddress\n+  #169 = Utf8               getHostAddress\n+  #170 = Utf8               ()Ljava/lang/String;\n+  #171 = Utf8               (Ljava/lang/String;)V\n+  #172 = Utf8               (Ljava/net/Socket;Ljava/io/InputStream;)V\n+  #173 = Utf8               java/io/InputStream\n+  #174 = Utf8               _input_\n+  #175 = Utf8               getCharset\n+  #176 = Utf8               ()Ljava/nio/charset/Charset;\n+  #177 = Utf8               read\n+  #178 = Utf8               (C)Ljava/lang/StringBuilder;\n {\n   protected static final char NULL_CHAR = '\\u0000';\n     descriptor: C\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 0\n \n   public static final int DEFAULT_PORT = 512;\n@@ -230,150 +225,116 @@\n         line 76: 9\n         line 77: 16\n \n   java.io.InputStream createErrorStream() throws java.io.IOException;\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0000)\n     Code:\n-      stack=4, locals=7, args_size=1\n+      stack=4, locals=5, args_size=1\n          0: aload_0\n          1: getfield      #5                  // Field _serverSocketFactory_:Ljavax/net/ServerSocketFactory;\n          4: iconst_0\n          5: iconst_1\n          6: aload_0\n          7: invokevirtual #6                  // Method getLocalAddress:()Ljava/net/InetAddress;\n         10: invokevirtual #7                  // Method javax/net/ServerSocketFactory.createServerSocket:(IILjava/net/InetAddress;)Ljava/net/ServerSocket;\n         13: astore_2\n-        14: aconst_null\n-        15: astore_3\n-        16: aload_0\n-        17: getfield      #8                  // Field _output_:Ljava/io/OutputStream;\n-        20: aload_2\n-        21: invokevirtual #9                  // Method java/net/ServerSocket.getLocalPort:()I\n-        24: invokestatic  #10                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-        27: getstatic     #11                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-        30: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        33: invokevirtual #13                 // Method java/io/OutputStream.write:([B)V\n-        36: aload_0\n-        37: getfield      #8                  // Field _output_:Ljava/io/OutputStream;\n-        40: iconst_0\n-        41: invokevirtual #14                 // Method java/io/OutputStream.write:(I)V\n-        44: aload_0\n-        45: getfield      #8                  // Field _output_:Ljava/io/OutputStream;\n-        48: invokevirtual #15                 // Method java/io/OutputStream.flush:()V\n-        51: aload_2\n-        52: invokevirtual #16                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;\n-        55: astore_1\n-        56: aload_2\n-        57: ifnull        132\n-        60: aload_3\n-        61: ifnull        82\n-        64: aload_2\n-        65: invokevirtual #17                 // Method java/net/ServerSocket.close:()V\n-        68: goto          132\n-        71: astore        4\n-        73: aload_3\n-        74: aload         4\n-        76: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        79: goto          132\n-        82: aload_2\n-        83: invokevirtual #17                 // Method java/net/ServerSocket.close:()V\n-        86: goto          132\n-        89: astore        4\n-        91: aload         4\n-        93: astore_3\n-        94: aload         4\n-        96: athrow\n-        97: astore        5\n-        99: aload_2\n-       100: ifnull        129\n-       103: aload_3\n-       104: ifnull        125\n-       107: aload_2\n-       108: invokevirtual #17                 // Method java/net/ServerSocket.close:()V\n-       111: goto          129\n-       114: astore        6\n-       116: aload_3\n-       117: aload         6\n-       119: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       122: goto          129\n-       125: aload_2\n-       126: invokevirtual #17                 // Method java/net/ServerSocket.close:()V\n-       129: aload         5\n-       131: athrow\n-       132: aload_0\n-       133: getfield      #20                 // Field remoteVerificationEnabled:Z\n-       136: ifeq          184\n-       139: aload_0\n-       140: aload_1\n-       141: invokevirtual #21                 // Method verifyRemote:(Ljava/net/Socket;)Z\n-       144: ifne          184\n-       147: aload_1\n-       148: invokevirtual #22                 // Method java/net/Socket.close:()V\n-       151: new           #23                 // class java/io/IOException\n-       154: dup\n-       155: new           #24                 // class java/lang/StringBuilder\n-       158: dup\n-       159: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       162: ldc           #26                 // String Security violation: unexpected connection attempt by\n-       164: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       167: aload_1\n-       168: invokevirtual #28                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n-       171: invokevirtual #29                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n-       174: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       177: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       180: invokespecial #31                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       183: athrow\n-       184: new           #32                 // class org/apache/commons/net/io/SocketInputStream\n-       187: dup\n-       188: aload_1\n-       189: aload_1\n-       190: invokevirtual #33                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-       193: invokespecial #34                 // Method org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n-       196: areturn\n+        14: aload_0\n+        15: getfield      #8                  // Field _output_:Ljava/io/OutputStream;\n+        18: aload_2\n+        19: invokevirtual #9                  // Method java/net/ServerSocket.getLocalPort:()I\n+        22: invokestatic  #10                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+        25: getstatic     #11                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        28: invokevirtual #12                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        31: invokevirtual #13                 // Method java/io/OutputStream.write:([B)V\n+        34: aload_0\n+        35: getfield      #8                  // Field _output_:Ljava/io/OutputStream;\n+        38: iconst_0\n+        39: invokevirtual #14                 // Method java/io/OutputStream.write:(I)V\n+        42: aload_0\n+        43: getfield      #8                  // Field _output_:Ljava/io/OutputStream;\n+        46: invokevirtual #15                 // Method java/io/OutputStream.flush:()V\n+        49: aload_2\n+        50: invokevirtual #16                 // Method java/net/ServerSocket.accept:()Ljava/net/Socket;\n+        53: astore_1\n+        54: aload_2\n+        55: ifnull        87\n+        58: aload_2\n+        59: invokevirtual #17                 // Method java/net/ServerSocket.close:()V\n+        62: goto          87\n+        65: astore_3\n+        66: aload_2\n+        67: ifnull        85\n+        70: aload_2\n+        71: invokevirtual #17                 // Method java/net/ServerSocket.close:()V\n+        74: goto          85\n+        77: astore        4\n+        79: aload_3\n+        80: aload         4\n+        82: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        85: aload_3\n+        86: athrow\n+        87: aload_0\n+        88: getfield      #20                 // Field remoteVerificationEnabled:Z\n+        91: ifeq          139\n+        94: aload_0\n+        95: aload_1\n+        96: invokevirtual #21                 // Method verifyRemote:(Ljava/net/Socket;)Z\n+        99: ifne          139\n+       102: aload_1\n+       103: invokevirtual #22                 // Method java/net/Socket.close:()V\n+       106: new           #23                 // class java/io/IOException\n+       109: dup\n+       110: new           #24                 // class java/lang/StringBuilder\n+       113: dup\n+       114: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       117: ldc           #26                 // String Security violation: unexpected connection attempt by\n+       119: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       122: aload_1\n+       123: invokevirtual #28                 // Method java/net/Socket.getInetAddress:()Ljava/net/InetAddress;\n+       126: invokevirtual #29                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;\n+       129: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       132: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       135: invokespecial #31                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       138: athrow\n+       139: new           #32                 // class org/apache/commons/net/io/SocketInputStream\n+       142: dup\n+       143: aload_1\n+       144: aload_1\n+       145: invokevirtual #33                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+       148: invokespecial #34                 // Method org/apache/commons/net/io/SocketInputStream.\"<init>\":(Ljava/net/Socket;Ljava/io/InputStream;)V\n+       151: areturn\n       Exception table:\n          from    to  target type\n-            64    68    71   Class java/lang/Throwable\n-            16    56    89   Class java/lang/Throwable\n-            16    56    97   any\n-           107   111   114   Class java/lang/Throwable\n-            89    99    97   any\n+            14    54    65   Class java/lang/Throwable\n+            70    74    77   Class java/lang/Throwable\n       LineNumberTable:\n         line 84: 0\n-        line 85: 16\n-        line 86: 36\n-        line 87: 44\n-        line 88: 51\n-        line 89: 56\n-        line 84: 89\n-        line 89: 97\n-        line 91: 132\n-        line 92: 147\n-        line 93: 151\n-        line 96: 184\n-      StackMapTable: number_of_entries = 9\n+        line 85: 14\n+        line 86: 34\n+        line 87: 42\n+        line 88: 49\n+        line 89: 54\n+        line 84: 65\n+        line 91: 87\n+        line 92: 102\n+        line 93: 106\n+        line 96: 139\n+      StackMapTable: number_of_entries = 5\n         frame_type = 255 /* full_frame */\n-          offset_delta = 71\n-          locals = [ class org/apache/commons/net/bsd/RExecClient, class java/net/Socket, class java/net/ServerSocket, class java/lang/Throwable ]\n+          offset_delta = 65\n+          locals = [ class org/apache/commons/net/bsd/RExecClient, top, class java/net/ServerSocket ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 6\n+          offset_delta = 11\n           locals = [ class org/apache/commons/net/bsd/RExecClient, top, class java/net/ServerSocket, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 71 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 255 /* full_frame */\n-          offset_delta = 16\n-          locals = [ class org/apache/commons/net/bsd/RExecClient, top, class java/net/ServerSocket, class java/lang/Throwable, top, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n+        frame_type = 7 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 2\n+          offset_delta = 1\n           locals = [ class org/apache/commons/net/bsd/RExecClient, class java/net/Socket ]\n           stack = []\n         frame_type = 51 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public void disconnect() throws java.io.IOException;\n"}]}
