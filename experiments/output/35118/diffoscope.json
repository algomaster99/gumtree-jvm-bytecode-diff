{"diffoscope-json-version": 1, "source1": "first/IEEE754rUtils.class", "source2": "second/IEEE754rUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,87 @@\n-  SHA-256 checksum acded0fa3d98ae74633a882d0243f146834407310c1ad7f178ad7e3e3b271389\n+  SHA-256 checksum 276a3bce9e0cfeb7b3c065770871ab40098974c77abe6dbdf4a85776e67d46af\n   Compiled from \"IEEE754rUtils.java\"\n public class org.apache.commons.lang3.math.IEEE754rUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/lang3/math/IEEE754rUtils\n-  super_class: #3                         // java/lang/Object\n+  this_class: #18                         // org/apache/commons/lang3/math/IEEE754rUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 1\n Constant pool:\n-   #1 = Methodref          #3.#46         // java/lang/Object.\"<init>\":()V\n-   #2 = String             #47            // The Array must not be null\n-   #3 = Class              #48            // java/lang/Object\n-   #4 = Methodref          #49.#50        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #5 = String             #51            // Array cannot be empty.\n-   #6 = Methodref          #16.#52        // org/apache/commons/lang3/math/IEEE754rUtils.min:(DD)D\n-   #7 = Methodref          #16.#53        // org/apache/commons/lang3/math/IEEE754rUtils.min:(FF)F\n-   #8 = Methodref          #54.#55        // java/lang/Double.isNaN:(D)Z\n-   #9 = Methodref          #56.#52        // java/lang/Math.min:(DD)D\n-  #10 = Methodref          #57.#58        // java/lang/Float.isNaN:(F)Z\n-  #11 = Methodref          #56.#53        // java/lang/Math.min:(FF)F\n-  #12 = Methodref          #16.#59        // org/apache/commons/lang3/math/IEEE754rUtils.max:(DD)D\n-  #13 = Methodref          #16.#60        // org/apache/commons/lang3/math/IEEE754rUtils.max:(FF)F\n-  #14 = Methodref          #56.#59        // java/lang/Math.max:(DD)D\n-  #15 = Methodref          #56.#60        // java/lang/Math.max:(FF)F\n-  #16 = Class              #61            // org/apache/commons/lang3/math/IEEE754rUtils\n-  #17 = Utf8               <init>\n-  #18 = Utf8               ()V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               Lorg/apache/commons/lang3/math/IEEE754rUtils;\n-  #24 = Utf8               min\n-  #25 = Utf8               ([D)D\n-  #26 = Utf8               i\n-  #27 = Utf8               I\n-  #28 = Utf8               array\n-  #29 = Utf8               [D\n-  #30 = Utf8               D\n-  #31 = Utf8               StackMapTable\n-  #32 = Utf8               ([F)F\n-  #33 = Utf8               [F\n-  #34 = Utf8               F\n-  #35 = Utf8               (DDD)D\n-  #36 = Utf8               a\n-  #37 = Utf8               b\n-  #38 = Utf8               c\n-  #39 = Utf8               (DD)D\n-  #40 = Utf8               (FFF)F\n-  #41 = Utf8               (FF)F\n-  #42 = Utf8               max\n-  #43 = Utf8               j\n-  #44 = Utf8               SourceFile\n-  #45 = Utf8               IEEE754rUtils.java\n-  #46 = NameAndType        #17:#18        // \"<init>\":()V\n-  #47 = Utf8               The Array must not be null\n-  #48 = Utf8               java/lang/Object\n-  #49 = Class              #62            // org/apache/commons/lang3/Validate\n-  #50 = NameAndType        #63:#64        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #51 = Utf8               Array cannot be empty.\n-  #52 = NameAndType        #24:#39        // min:(DD)D\n-  #53 = NameAndType        #24:#41        // min:(FF)F\n-  #54 = Class              #65            // java/lang/Double\n-  #55 = NameAndType        #66:#67        // isNaN:(D)Z\n-  #56 = Class              #68            // java/lang/Math\n-  #57 = Class              #69            // java/lang/Float\n-  #58 = NameAndType        #66:#70        // isNaN:(F)Z\n-  #59 = NameAndType        #42:#39        // max:(DD)D\n-  #60 = NameAndType        #42:#41        // max:(FF)F\n-  #61 = Utf8               org/apache/commons/lang3/math/IEEE754rUtils\n-  #62 = Utf8               org/apache/commons/lang3/Validate\n-  #63 = Utf8               isTrue\n-  #64 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #65 = Utf8               java/lang/Double\n-  #66 = Utf8               isNaN\n-  #67 = Utf8               (D)Z\n-  #68 = Utf8               java/lang/Math\n-  #69 = Utf8               java/lang/Float\n-  #70 = Utf8               (F)Z\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = String             #8             // The Array must not be null\n+   #8 = Utf8               The Array must not be null\n+   #9 = Methodref          #10.#11        // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #10 = Class              #12            // org/apache/commons/lang3/Validate\n+  #11 = NameAndType        #13:#14        // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #12 = Utf8               org/apache/commons/lang3/Validate\n+  #13 = Utf8               isTrue\n+  #14 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #15 = String             #16            // Array cannot be empty.\n+  #16 = Utf8               Array cannot be empty.\n+  #17 = Methodref          #18.#19        // org/apache/commons/lang3/math/IEEE754rUtils.min:(DD)D\n+  #18 = Class              #20            // org/apache/commons/lang3/math/IEEE754rUtils\n+  #19 = NameAndType        #21:#22        // min:(DD)D\n+  #20 = Utf8               org/apache/commons/lang3/math/IEEE754rUtils\n+  #21 = Utf8               min\n+  #22 = Utf8               (DD)D\n+  #23 = Methodref          #18.#24        // org/apache/commons/lang3/math/IEEE754rUtils.min:(FF)F\n+  #24 = NameAndType        #21:#25        // min:(FF)F\n+  #25 = Utf8               (FF)F\n+  #26 = Methodref          #27.#28        // java/lang/Double.isNaN:(D)Z\n+  #27 = Class              #29            // java/lang/Double\n+  #28 = NameAndType        #30:#31        // isNaN:(D)Z\n+  #29 = Utf8               java/lang/Double\n+  #30 = Utf8               isNaN\n+  #31 = Utf8               (D)Z\n+  #32 = Methodref          #33.#19        // java/lang/Math.min:(DD)D\n+  #33 = Class              #34            // java/lang/Math\n+  #34 = Utf8               java/lang/Math\n+  #35 = Methodref          #36.#37        // java/lang/Float.isNaN:(F)Z\n+  #36 = Class              #38            // java/lang/Float\n+  #37 = NameAndType        #30:#39        // isNaN:(F)Z\n+  #38 = Utf8               java/lang/Float\n+  #39 = Utf8               (F)Z\n+  #40 = Methodref          #33.#24        // java/lang/Math.min:(FF)F\n+  #41 = Methodref          #18.#42        // org/apache/commons/lang3/math/IEEE754rUtils.max:(DD)D\n+  #42 = NameAndType        #43:#22        // max:(DD)D\n+  #43 = Utf8               max\n+  #44 = Methodref          #18.#45        // org/apache/commons/lang3/math/IEEE754rUtils.max:(FF)F\n+  #45 = NameAndType        #43:#25        // max:(FF)F\n+  #46 = Methodref          #33.#42        // java/lang/Math.max:(DD)D\n+  #47 = Methodref          #33.#45        // java/lang/Math.max:(FF)F\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               LocalVariableTable\n+  #51 = Utf8               this\n+  #52 = Utf8               Lorg/apache/commons/lang3/math/IEEE754rUtils;\n+  #53 = Utf8               ([D)D\n+  #54 = Utf8               i\n+  #55 = Utf8               I\n+  #56 = Utf8               array\n+  #57 = Utf8               [D\n+  #58 = Utf8               D\n+  #59 = Utf8               StackMapTable\n+  #60 = Utf8               ([F)F\n+  #61 = Utf8               [F\n+  #62 = Utf8               F\n+  #63 = Utf8               (DDD)D\n+  #64 = Utf8               a\n+  #65 = Utf8               b\n+  #66 = Utf8               c\n+  #67 = Utf8               (FFF)F\n+  #68 = Utf8               j\n+  #69 = Utf8               SourceFile\n+  #70 = Utf8               IEEE754rUtils.java\n {\n   public org.apache.commons.lang3.math.IEEE754rUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -99,43 +99,43 @@\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #2                  // String The Array must not be null\n+         9: ldc           #7                  // String The Array must not be null\n         11: iconst_0\n-        12: anewarray     #3                  // class java/lang/Object\n-        15: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #2                  // class java/lang/Object\n+        15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n         19: arraylength\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n-        28: ldc           #5                  // String Array cannot be empty.\n+        28: ldc           #15                 // String Array cannot be empty.\n         30: iconst_0\n-        31: anewarray     #3                  // class java/lang/Object\n-        34: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        31: anewarray     #2                  // class java/lang/Object\n+        34: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         37: aload_0\n         38: iconst_0\n         39: daload\n         40: dstore_1\n         41: iconst_1\n         42: istore_3\n         43: iload_3\n         44: aload_0\n         45: arraylength\n         46: if_icmpge     63\n         49: aload_0\n         50: iload_3\n         51: daload\n         52: dload_1\n-        53: invokestatic  #6                  // Method min:(DD)D\n+        53: invokestatic  #17                 // Method min:(DD)D\n         56: dstore_1\n         57: iinc          3, 1\n         60: goto          43\n         63: dload_1\n         64: dreturn\n       LineNumberTable:\n         line 40: 0\n@@ -169,43 +169,43 @@\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #2                  // String The Array must not be null\n+         9: ldc           #7                  // String The Array must not be null\n         11: iconst_0\n-        12: anewarray     #3                  // class java/lang/Object\n-        15: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #2                  // class java/lang/Object\n+        15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n         19: arraylength\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n-        28: ldc           #5                  // String Array cannot be empty.\n+        28: ldc           #15                 // String Array cannot be empty.\n         30: iconst_0\n-        31: anewarray     #3                  // class java/lang/Object\n-        34: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        31: anewarray     #2                  // class java/lang/Object\n+        34: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         37: aload_0\n         38: iconst_0\n         39: faload\n         40: fstore_1\n         41: iconst_1\n         42: istore_2\n         43: iload_2\n         44: aload_0\n         45: arraylength\n         46: if_icmpge     63\n         49: aload_0\n         50: iload_2\n         51: faload\n         52: fload_1\n-        53: invokestatic  #7                  // Method min:(FF)F\n+        53: invokestatic  #23                 // Method min:(FF)F\n         56: fstore_1\n         57: iinc          2, 1\n         60: goto          43\n         63: fload_1\n         64: freturn\n       LineNumberTable:\n         line 62: 0\n@@ -236,17 +236,17 @@\n   public static double min(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #6                  // Method min:(DD)D\n+         2: invokestatic  #17                 // Method min:(DD)D\n          5: dload         4\n-         7: invokestatic  #6                  // Method min:(DD)D\n+         7: invokestatic  #17                 // Method min:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0     a   D\n             0      11     2     b   D\n@@ -254,26 +254,26 @@\n \n   public static double min(double, double);\n     descriptor: (DD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: dload_0\n-         1: invokestatic  #8                  // Method java/lang/Double.isNaN:(D)Z\n+         1: invokestatic  #26                 // Method java/lang/Double.isNaN:(D)Z\n          4: ifeq          9\n          7: dload_2\n          8: dreturn\n          9: dload_2\n-        10: invokestatic  #8                  // Method java/lang/Double.isNaN:(D)Z\n+        10: invokestatic  #26                 // Method java/lang/Double.isNaN:(D)Z\n         13: ifeq          18\n         16: dload_0\n         17: dreturn\n         18: dload_0\n         19: dload_2\n-        20: invokestatic  #9                  // Method java/lang/Math.min:(DD)D\n+        20: invokestatic  #32                 // Method java/lang/Math.min:(DD)D\n         23: dreturn\n       LineNumberTable:\n         line 98: 0\n         line 99: 7\n         line 101: 9\n         line 102: 16\n         line 104: 18\n@@ -288,17 +288,17 @@\n   public static float min(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #7                  // Method min:(FF)F\n+         2: invokestatic  #23                 // Method min:(FF)F\n          5: fload_2\n-         6: invokestatic  #7                  // Method min:(FF)F\n+         6: invokestatic  #23                 // Method min:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 119: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0     a   F\n             0      10     1     b   F\n@@ -306,26 +306,26 @@\n \n   public static float min(float, float);\n     descriptor: (FF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: fload_0\n-         1: invokestatic  #10                 // Method java/lang/Float.isNaN:(F)Z\n+         1: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z\n          4: ifeq          9\n          7: fload_1\n          8: freturn\n          9: fload_1\n-        10: invokestatic  #10                 // Method java/lang/Float.isNaN:(F)Z\n+        10: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z\n         13: ifeq          18\n         16: fload_0\n         17: freturn\n         18: fload_0\n         19: fload_1\n-        20: invokestatic  #11                 // Method java/lang/Math.min:(FF)F\n+        20: invokestatic  #40                 // Method java/lang/Math.min:(FF)F\n         23: freturn\n       LineNumberTable:\n         line 132: 0\n         line 133: 7\n         line 135: 9\n         line 136: 16\n         line 138: 18\n@@ -343,43 +343,43 @@\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #2                  // String The Array must not be null\n+         9: ldc           #7                  // String The Array must not be null\n         11: iconst_0\n-        12: anewarray     #3                  // class java/lang/Object\n-        15: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #2                  // class java/lang/Object\n+        15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n         19: arraylength\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n-        28: ldc           #5                  // String Array cannot be empty.\n+        28: ldc           #15                 // String Array cannot be empty.\n         30: iconst_0\n-        31: anewarray     #3                  // class java/lang/Object\n-        34: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        31: anewarray     #2                  // class java/lang/Object\n+        34: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         37: aload_0\n         38: iconst_0\n         39: daload\n         40: dstore_1\n         41: iconst_1\n         42: istore_3\n         43: iload_3\n         44: aload_0\n         45: arraylength\n         46: if_icmpge     63\n         49: aload_0\n         50: iload_3\n         51: daload\n         52: dload_1\n-        53: invokestatic  #12                 // Method max:(DD)D\n+        53: invokestatic  #41                 // Method max:(DD)D\n         56: dstore_1\n         57: iinc          3, 1\n         60: goto          43\n         63: dload_1\n         64: dreturn\n       LineNumberTable:\n         line 152: 0\n@@ -413,43 +413,43 @@\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: iconst_1\n          5: goto          9\n          8: iconst_0\n-         9: ldc           #2                  // String The Array must not be null\n+         9: ldc           #7                  // String The Array must not be null\n         11: iconst_0\n-        12: anewarray     #3                  // class java/lang/Object\n-        15: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        12: anewarray     #2                  // class java/lang/Object\n+        15: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         18: aload_0\n         19: arraylength\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n-        28: ldc           #5                  // String Array cannot be empty.\n+        28: ldc           #15                 // String Array cannot be empty.\n         30: iconst_0\n-        31: anewarray     #3                  // class java/lang/Object\n-        34: invokestatic  #4                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        31: anewarray     #2                  // class java/lang/Object\n+        34: invokestatic  #9                  // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         37: aload_0\n         38: iconst_0\n         39: faload\n         40: fstore_1\n         41: iconst_1\n         42: istore_2\n         43: iload_2\n         44: aload_0\n         45: arraylength\n         46: if_icmpge     63\n         49: aload_0\n         50: iload_2\n         51: faload\n         52: fload_1\n-        53: invokestatic  #13                 // Method max:(FF)F\n+        53: invokestatic  #44                 // Method max:(FF)F\n         56: fstore_1\n         57: iinc          2, 1\n         60: goto          43\n         63: fload_1\n         64: freturn\n       LineNumberTable:\n         line 174: 0\n@@ -480,17 +480,17 @@\n   public static double max(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #12                 // Method max:(DD)D\n+         2: invokestatic  #41                 // Method max:(DD)D\n          5: dload         4\n-         7: invokestatic  #12                 // Method max:(DD)D\n+         7: invokestatic  #41                 // Method max:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 197: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0     a   D\n             0      11     2     b   D\n@@ -498,26 +498,26 @@\n \n   public static double max(double, double);\n     descriptor: (DD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: dload_0\n-         1: invokestatic  #8                  // Method java/lang/Double.isNaN:(D)Z\n+         1: invokestatic  #26                 // Method java/lang/Double.isNaN:(D)Z\n          4: ifeq          9\n          7: dload_2\n          8: dreturn\n          9: dload_2\n-        10: invokestatic  #8                  // Method java/lang/Double.isNaN:(D)Z\n+        10: invokestatic  #26                 // Method java/lang/Double.isNaN:(D)Z\n         13: ifeq          18\n         16: dload_0\n         17: dreturn\n         18: dload_0\n         19: dload_2\n-        20: invokestatic  #14                 // Method java/lang/Math.max:(DD)D\n+        20: invokestatic  #46                 // Method java/lang/Math.max:(DD)D\n         23: dreturn\n       LineNumberTable:\n         line 210: 0\n         line 211: 7\n         line 213: 9\n         line 214: 16\n         line 216: 18\n@@ -532,17 +532,17 @@\n   public static float max(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #13                 // Method max:(FF)F\n+         2: invokestatic  #44                 // Method max:(FF)F\n          5: fload_2\n-         6: invokestatic  #13                 // Method max:(FF)F\n+         6: invokestatic  #44                 // Method max:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 231: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0     a   F\n             0      10     1     b   F\n@@ -550,26 +550,26 @@\n \n   public static float max(float, float);\n     descriptor: (FF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: fload_0\n-         1: invokestatic  #10                 // Method java/lang/Float.isNaN:(F)Z\n+         1: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z\n          4: ifeq          9\n          7: fload_1\n          8: freturn\n          9: fload_1\n-        10: invokestatic  #10                 // Method java/lang/Float.isNaN:(F)Z\n+        10: invokestatic  #35                 // Method java/lang/Float.isNaN:(F)Z\n         13: ifeq          18\n         16: fload_0\n         17: freturn\n         18: fload_0\n         19: fload_1\n-        20: invokestatic  #15                 // Method java/lang/Math.max:(FF)F\n+        20: invokestatic  #47                 // Method java/lang/Math.max:(FF)F\n         23: freturn\n       LineNumberTable:\n         line 244: 0\n         line 245: 7\n         line 247: 9\n         line 248: 16\n         line 250: 18\n"}]}
