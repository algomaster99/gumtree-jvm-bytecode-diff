{"diffoscope-json-version": 1, "source1": "first/StreamReadConstraints.class", "source2": "second/StreamReadConstraints.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,14 +12,18 @@\n     public static final int DEFAULT_MAX_STRING_LEN = 20000000;\n     private static final int MAX_BIGINT_SCALE_MAGNITUDE = 100000;\n     protected final int _maxNestingDepth;\n     protected final int _maxNumLen;\n     protected final int _maxStringLen;\n     private static StreamReadConstraints DEFAULT;\n     \n+    static {\n+        StreamReadConstraints.DEFAULT = new StreamReadConstraints(1000, 1000, 20000000);\n+    }\n+    \n     public static void overrideDefaultStreamReadConstraints(final StreamReadConstraints streamReadConstraints) {\n         if (streamReadConstraints == null) {\n             StreamReadConstraints.DEFAULT = new StreamReadConstraints(1000, 1000, 20000000);\n         }\n         else {\n             StreamReadConstraints.DEFAULT = streamReadConstraints;\n         }\n@@ -82,12 +86,8 @@\n     public void validateBigIntegerScale(final int scale) throws StreamConstraintsException {\n         final int absScale = Math.abs(scale);\n         final int limit = 100000;\n         if (absScale > 100000) {\n             throw new StreamConstraintsException(String.format(\"BigDecimal scale (%d) magnitude exceeds maximum allowed (%d)\", Integer.valueOf(scale), Integer.valueOf(100000)));\n         }\n     }\n-    \n-    static {\n-        StreamReadConstraints.DEFAULT = new StreamReadConstraints(1000, 1000, 20000000);\n-    }\n }\n"}]}
