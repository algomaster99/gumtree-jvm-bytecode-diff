{"diffoscope-json-version": 1, "source1": "first/Conversion.class", "source2": "second/Conversion.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,143 +1,143 @@\n-  SHA-256 checksum 60dc4f7f128c9dc43d102ed3c2160b21888e59acb2a3fb2be21685be95aa6829\n+  SHA-256 checksum 453b46aa443e381341b9b202b9bf349be0ce63cd26a597a3ffcfe5d91e0a884d\n   Compiled from \"Conversion.java\"\n public class org.apache.commons.lang3.Conversion\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #129                        // org/apache/commons/lang3/Conversion\n   super_class: #131                       // java/lang/Object\n   interfaces: 0, fields: 17, methods: 44, attributes: 1\n Constant pool:\n-    #1 = Methodref          #131.#236     // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #237.#238     // java/lang/Character.digit:(CI)I\n-    #3 = Class              #239          // java/lang/IllegalArgumentException\n-    #4 = Class              #240          // java/lang/StringBuilder\n-    #5 = Methodref          #4.#236       // java/lang/StringBuilder.\"<init>\":()V\n-    #6 = String             #241          // Cannot interpret \\'\n-    #7 = Methodref          #4.#242       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #4.#243       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #9 = String             #244          // \\' as a hexadecimal digit\n-   #10 = Methodref          #4.#245       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #3.#246       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #129.#247     // org/apache/commons/lang3/Conversion.FFFF:[Z\n-   #13 = Methodref          #248.#249     // \"[Z\".clone:()Ljava/lang/Object;\n+    #1 = Methodref          #131.#234     // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #235.#236     // java/lang/Character.digit:(CI)I\n+    #3 = Class              #237          // java/lang/IllegalArgumentException\n+    #4 = Class              #238          // java/lang/StringBuilder\n+    #5 = Methodref          #4.#234       // java/lang/StringBuilder.\"<init>\":()V\n+    #6 = String             #239          // Cannot interpret \\'\n+    #7 = Methodref          #4.#240       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #4.#241       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #9 = String             #242          // \\' as a hexadecimal digit\n+   #10 = Methodref          #4.#243       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #11 = Methodref          #3.#244       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #129.#245     // org/apache/commons/lang3/Conversion.FFFF:[Z\n+   #13 = Methodref          #246.#247     // \"[Z\".clone:()Ljava/lang/Object;\n    #14 = Class              #133          // \"[Z\"\n-   #15 = Fieldref           #129.#250     // org/apache/commons/lang3/Conversion.TFFF:[Z\n-   #16 = Methodref          #251.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #17 = Fieldref           #129.#252     // org/apache/commons/lang3/Conversion.FTFF:[Z\n-   #18 = Methodref          #253.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #19 = Fieldref           #129.#254     // org/apache/commons/lang3/Conversion.TTFF:[Z\n-   #20 = Methodref          #255.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #21 = Fieldref           #129.#256     // org/apache/commons/lang3/Conversion.FFTF:[Z\n-   #22 = Methodref          #257.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #23 = Fieldref           #129.#258     // org/apache/commons/lang3/Conversion.TFTF:[Z\n-   #24 = Methodref          #259.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #25 = Fieldref           #129.#260     // org/apache/commons/lang3/Conversion.FTTF:[Z\n-   #26 = Methodref          #261.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #27 = Fieldref           #129.#262     // org/apache/commons/lang3/Conversion.TTTF:[Z\n-   #28 = Methodref          #263.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #29 = Fieldref           #129.#264     // org/apache/commons/lang3/Conversion.FFFT:[Z\n-   #30 = Methodref          #265.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #31 = Fieldref           #129.#266     // org/apache/commons/lang3/Conversion.TFFT:[Z\n-   #32 = Methodref          #267.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #33 = Fieldref           #129.#268     // org/apache/commons/lang3/Conversion.FTFT:[Z\n-   #34 = Methodref          #269.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #35 = Fieldref           #129.#270     // org/apache/commons/lang3/Conversion.TTFT:[Z\n-   #36 = Methodref          #271.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #37 = Fieldref           #129.#272     // org/apache/commons/lang3/Conversion.FFTT:[Z\n-   #38 = Methodref          #273.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #39 = Fieldref           #129.#274     // org/apache/commons/lang3/Conversion.TFTT:[Z\n-   #40 = Methodref          #275.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #41 = Fieldref           #129.#276     // org/apache/commons/lang3/Conversion.FTTT:[Z\n-   #42 = Methodref          #277.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #43 = Fieldref           #129.#278     // org/apache/commons/lang3/Conversion.TTTT:[Z\n-   #44 = Methodref          #279.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #45 = Methodref          #280.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #46 = Methodref          #281.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #47 = Methodref          #282.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #48 = Methodref          #283.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #49 = Methodref          #284.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #50 = Methodref          #285.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #51 = Methodref          #286.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #52 = Methodref          #287.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #53 = Methodref          #288.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #54 = Methodref          #289.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #55 = Methodref          #290.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #56 = Methodref          #291.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #57 = Methodref          #292.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #58 = Methodref          #293.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #59 = Methodref          #294.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #60 = Methodref          #295.#249     // \"[Z\".clone:()Ljava/lang/Object;\n-   #61 = Methodref          #129.#296     // org/apache/commons/lang3/Conversion.binaryToHexDigit:([ZI)C\n-   #62 = String             #297          // Cannot convert an empty array.\n-   #63 = Methodref          #129.#298     // org/apache/commons/lang3/Conversion.binaryToHexDigitMsb0_4bits:([ZI)C\n-   #64 = String             #299          // src.length>8: src.length=\n-   #65 = Methodref          #4.#300       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #66 = String             #301          // src.length-srcPos<4: src.length=\n-   #67 = String             #302          // , srcPos=\n-   #68 = Methodref          #129.#303     // org/apache/commons/lang3/Conversion.binaryBeMsb0ToHexDigit:([ZI)C\n-   #69 = Methodref          #304.#305     // java/lang/Math.min:(II)I\n-   #70 = Methodref          #306.#307     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #71 = Methodref          #237.#308     // java/lang/Character.forDigit:(II)C\n-   #72 = String             #309          // nibble value not between 0 and 15:\n-   #73 = String             #310          // (nInts-1)*32+dstPos is greater or equal to than 64\n+   #15 = Fieldref           #129.#248     // org/apache/commons/lang3/Conversion.TFFF:[Z\n+   #16 = Methodref          #249.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #17 = Fieldref           #129.#250     // org/apache/commons/lang3/Conversion.FTFF:[Z\n+   #18 = Methodref          #251.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #19 = Fieldref           #129.#252     // org/apache/commons/lang3/Conversion.TTFF:[Z\n+   #20 = Methodref          #253.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #21 = Fieldref           #129.#254     // org/apache/commons/lang3/Conversion.FFTF:[Z\n+   #22 = Methodref          #255.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #23 = Fieldref           #129.#256     // org/apache/commons/lang3/Conversion.TFTF:[Z\n+   #24 = Methodref          #257.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #25 = Fieldref           #129.#258     // org/apache/commons/lang3/Conversion.FTTF:[Z\n+   #26 = Methodref          #259.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #27 = Fieldref           #129.#260     // org/apache/commons/lang3/Conversion.TTTF:[Z\n+   #28 = Methodref          #261.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #29 = Fieldref           #129.#262     // org/apache/commons/lang3/Conversion.FFFT:[Z\n+   #30 = Methodref          #263.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #31 = Fieldref           #129.#264     // org/apache/commons/lang3/Conversion.TFFT:[Z\n+   #32 = Methodref          #265.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #33 = Fieldref           #129.#266     // org/apache/commons/lang3/Conversion.FTFT:[Z\n+   #34 = Methodref          #267.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #35 = Fieldref           #129.#268     // org/apache/commons/lang3/Conversion.TTFT:[Z\n+   #36 = Methodref          #269.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #37 = Fieldref           #129.#270     // org/apache/commons/lang3/Conversion.FFTT:[Z\n+   #38 = Methodref          #271.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #39 = Fieldref           #129.#272     // org/apache/commons/lang3/Conversion.TFTT:[Z\n+   #40 = Methodref          #273.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #41 = Fieldref           #129.#274     // org/apache/commons/lang3/Conversion.FTTT:[Z\n+   #42 = Methodref          #275.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #43 = Fieldref           #129.#276     // org/apache/commons/lang3/Conversion.TTTT:[Z\n+   #44 = Methodref          #277.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #45 = Methodref          #278.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #46 = Methodref          #279.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #47 = Methodref          #280.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #48 = Methodref          #281.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #49 = Methodref          #282.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #50 = Methodref          #283.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #51 = Methodref          #284.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #52 = Methodref          #285.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #53 = Methodref          #286.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #54 = Methodref          #287.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #55 = Methodref          #288.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #56 = Methodref          #289.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #57 = Methodref          #290.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #58 = Methodref          #291.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #59 = Methodref          #292.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #60 = Methodref          #293.#247     // \"[Z\".clone:()Ljava/lang/Object;\n+   #61 = Methodref          #129.#294     // org/apache/commons/lang3/Conversion.binaryToHexDigit:([ZI)C\n+   #62 = String             #295          // Cannot convert an empty array.\n+   #63 = Methodref          #129.#296     // org/apache/commons/lang3/Conversion.binaryToHexDigitMsb0_4bits:([ZI)C\n+   #64 = String             #297          // src.length>8: src.length=\n+   #65 = Methodref          #4.#298       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #66 = String             #299          // src.length-srcPos<4: src.length=\n+   #67 = String             #300          // , srcPos=\n+   #68 = Methodref          #129.#301     // org/apache/commons/lang3/Conversion.binaryBeMsb0ToHexDigit:([ZI)C\n+   #69 = Methodref          #302.#303     // java/lang/Math.min:(II)I\n+   #70 = Methodref          #304.#305     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #71 = Methodref          #235.#306     // java/lang/Character.forDigit:(II)C\n+   #72 = String             #307          // nibble value not between 0 and 15:\n+   #73 = String             #308          // (nInts-1)*32+dstPos is greater or equal to than 64\n    #74 = Long               4294967295l\n    #76 = Long               -1l\n-   #78 = String             #311          // (nShorts-1)*16+dstPos is greater or equal to than 64\n+   #78 = String             #309          // (nShorts-1)*16+dstPos is greater or equal to than 64\n    #79 = Long               65535l\n-   #81 = String             #312          // (nShorts-1)*16+dstPos is greater or equal to than 32\n+   #81 = String             #310          // (nShorts-1)*16+dstPos is greater or equal to than 32\n    #82 = Integer            65535\n-   #83 = String             #313          // (nBytes-1)*8+dstPos is greater or equal to than 64\n+   #83 = String             #311          // (nBytes-1)*8+dstPos is greater or equal to than 64\n    #84 = Long               255l\n-   #86 = String             #314          // (nBytes-1)*8+dstPos is greater or equal to than 32\n-   #87 = String             #315          // (nBytes-1)*8+dstPos is greater or equal to than 16\n-   #88 = String             #316          // (nHexs-1)*4+dstPos is greater or equal to than 64\n+   #86 = String             #312          // (nBytes-1)*8+dstPos is greater or equal to than 32\n+   #87 = String             #313          // (nBytes-1)*8+dstPos is greater or equal to than 16\n+   #88 = String             #314          // (nHexs-1)*4+dstPos is greater or equal to than 64\n    #89 = Long               15l\n-   #91 = Methodref          #317.#318     // java/lang/String.charAt:(I)C\n-   #92 = Methodref          #129.#319     // org/apache/commons/lang3/Conversion.hexDigitToInt:(C)I\n-   #93 = String             #320          // (nHexs-1)*4+dstPos is greater or equal to than 32\n-   #94 = String             #321          // (nHexs-1)*4+dstPos is greater or equal to than 16\n-   #95 = String             #322          // (nHexs-1)*4+dstPos is greater or equal to than 8\n-   #96 = String             #323          // nBools-1+dstPos is greater or equal to than 64\n-   #97 = String             #324          // nBools-1+dstPos is greater or equal to than 32\n-   #98 = String             #325          // nBools-1+dstPos is greater or equal to than 16\n-   #99 = String             #326          // nBools-1+dstPos is greater or equal to than 8\n-  #100 = String             #327          // (nInts-1)*32+srcPos is greater or equal to than 64\n-  #101 = String             #328          // (nShorts-1)*16+srcPos is greater or equal to than 64\n-  #102 = String             #329          // (nShorts-1)*16+srcPos is greater or equal to than 32\n-  #103 = String             #330          // (nBytes-1)*8+srcPos is greater or equal to than 64\n-  #104 = String             #331          // (nBytes-1)*8+srcPos is greater or equal to than 32\n-  #105 = String             #332          // (nBytes-1)*8+srcPos is greater or equal to than 16\n-  #106 = String             #333          // (nHexs-1)*4+srcPos is greater or equal to than 64\n-  #107 = Methodref          #4.#246       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-  #108 = Methodref          #4.#334       // java/lang/StringBuilder.length:()I\n-  #109 = Methodref          #129.#335     // org/apache/commons/lang3/Conversion.intToHexDigit:(I)C\n-  #110 = Methodref          #4.#336       // java/lang/StringBuilder.setCharAt:(IC)V\n-  #111 = String             #337          // (nHexs-1)*4+srcPos is greater or equal to than 32\n-  #112 = String             #338          // (nHexs-1)*4+srcPos is greater or equal to than 16\n-  #113 = String             #339          // (nHexs-1)*4+srcPos is greater or equal to than 8\n-  #114 = String             #340          // nBools-1+srcPos is greater or equal to than 64\n-  #115 = String             #341          // nBools-1+srcPos is greater or equal to than 32\n-  #116 = String             #342          // nBools-1+srcPos is greater or equal to than 16\n-  #117 = Fieldref           #129.#343     // org/apache/commons/lang3/Conversion.$assertionsDisabled:Z\n-  #118 = Class              #344          // java/lang/AssertionError\n-  #119 = Methodref          #118.#236     // java/lang/AssertionError.\"<init>\":()V\n-  #120 = String             #345          // nBools-1+srcPos is greater or equal to than 8\n-  #121 = String             #346          // nBytes is greater than 16\n-  #122 = Methodref          #126.#347     // java/util/UUID.getMostSignificantBits:()J\n-  #123 = Methodref          #129.#348     // org/apache/commons/lang3/Conversion.longToByteArray:(JI[BII)[B\n-  #124 = Methodref          #126.#349     // java/util/UUID.getLeastSignificantBits:()J\n-  #125 = String             #350          // Need at least 16 bytes for UUID\n-  #126 = Class              #351          // java/util/UUID\n-  #127 = Methodref          #129.#352     // org/apache/commons/lang3/Conversion.byteArrayToLong:([BIJII)J\n-  #128 = Methodref          #126.#353     // java/util/UUID.\"<init>\":(JJ)V\n-  #129 = Class              #354          // org/apache/commons/lang3/Conversion\n-  #130 = Methodref          #355.#356     // java/lang/Class.desiredAssertionStatus:()Z\n-  #131 = Class              #357          // java/lang/Object\n+   #91 = Methodref          #315.#316     // java/lang/String.charAt:(I)C\n+   #92 = Methodref          #129.#317     // org/apache/commons/lang3/Conversion.hexDigitToInt:(C)I\n+   #93 = String             #318          // (nHexs-1)*4+dstPos is greater or equal to than 32\n+   #94 = String             #319          // (nHexs-1)*4+dstPos is greater or equal to than 16\n+   #95 = String             #320          // (nHexs-1)*4+dstPos is greater or equal to than 8\n+   #96 = String             #321          // nBools-1+dstPos is greater or equal to than 64\n+   #97 = String             #322          // nBools-1+dstPos is greater or equal to than 32\n+   #98 = String             #323          // nBools-1+dstPos is greater or equal to than 16\n+   #99 = String             #324          // nBools-1+dstPos is greater or equal to than 8\n+  #100 = String             #325          // (nInts-1)*32+srcPos is greater or equal to than 64\n+  #101 = String             #326          // (nShorts-1)*16+srcPos is greater or equal to than 64\n+  #102 = String             #327          // (nShorts-1)*16+srcPos is greater or equal to than 32\n+  #103 = String             #328          // (nBytes-1)*8+srcPos is greater or equal to than 64\n+  #104 = String             #329          // (nBytes-1)*8+srcPos is greater or equal to than 32\n+  #105 = String             #330          // (nBytes-1)*8+srcPos is greater or equal to than 16\n+  #106 = String             #331          // (nHexs-1)*4+srcPos is greater or equal to than 64\n+  #107 = Methodref          #4.#244       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #108 = Methodref          #4.#332       // java/lang/StringBuilder.length:()I\n+  #109 = Methodref          #129.#333     // org/apache/commons/lang3/Conversion.intToHexDigit:(I)C\n+  #110 = Methodref          #4.#334       // java/lang/StringBuilder.setCharAt:(IC)V\n+  #111 = String             #335          // (nHexs-1)*4+srcPos is greater or equal to than 32\n+  #112 = String             #336          // (nHexs-1)*4+srcPos is greater or equal to than 16\n+  #113 = String             #337          // (nHexs-1)*4+srcPos is greater or equal to than 8\n+  #114 = String             #338          // nBools-1+srcPos is greater or equal to than 64\n+  #115 = String             #339          // nBools-1+srcPos is greater or equal to than 32\n+  #116 = String             #340          // nBools-1+srcPos is greater or equal to than 16\n+  #117 = Fieldref           #129.#341     // org/apache/commons/lang3/Conversion.$assertionsDisabled:Z\n+  #118 = Class              #342          // java/lang/AssertionError\n+  #119 = Methodref          #118.#234     // java/lang/AssertionError.\"<init>\":()V\n+  #120 = String             #343          // nBools-1+srcPos is greater or equal to than 8\n+  #121 = String             #344          // nBytes is greater than 16\n+  #122 = Methodref          #126.#345     // java/util/UUID.getMostSignificantBits:()J\n+  #123 = Methodref          #129.#346     // org/apache/commons/lang3/Conversion.longToByteArray:(JI[BII)[B\n+  #124 = Methodref          #126.#347     // java/util/UUID.getLeastSignificantBits:()J\n+  #125 = String             #348          // Need at least 16 bytes for UUID\n+  #126 = Class              #349          // java/util/UUID\n+  #127 = Methodref          #129.#350     // org/apache/commons/lang3/Conversion.byteArrayToLong:([BIJII)J\n+  #128 = Methodref          #126.#351     // java/util/UUID.\"<init>\":(JJ)V\n+  #129 = Class              #352          // org/apache/commons/lang3/Conversion\n+  #130 = Methodref          #353.#354     // java/lang/Class.desiredAssertionStatus:()Z\n+  #131 = Class              #355          // java/lang/Object\n   #132 = Utf8               TTTT\n   #133 = Utf8               [Z\n   #134 = Utf8               FTTT\n   #135 = Utf8               TFTT\n   #136 = Utf8               FFTT\n   #137 = Utf8               TTFT\n   #138 = Utf8               FTFT\n@@ -210,81 +210,81 @@\n   #205 = Utf8               (JI[BII)[B\n   #206 = Utf8               intToByteArray\n   #207 = Utf8               (II[BII)[B\n   #208 = Utf8               shortToByteArray\n   #209 = Utf8               (SI[BII)[B\n   #210 = Utf8               longToHex\n   #211 = Utf8               (JILjava/lang/String;II)Ljava/lang/String;\n-  #212 = Class              #240          // java/lang/StringBuilder\n-  #213 = Utf8               intToHex\n-  #214 = Utf8               (IILjava/lang/String;II)Ljava/lang/String;\n-  #215 = Utf8               shortToHex\n-  #216 = Utf8               (SILjava/lang/String;II)Ljava/lang/String;\n-  #217 = Utf8               byteToHex\n-  #218 = Utf8               (BILjava/lang/String;II)Ljava/lang/String;\n-  #219 = Utf8               longToBinary\n-  #220 = Utf8               (JI[ZII)[Z\n-  #221 = Utf8               intToBinary\n-  #222 = Utf8               (II[ZII)[Z\n-  #223 = Utf8               shortToBinary\n-  #224 = Utf8               (SI[ZII)[Z\n-  #225 = Utf8               byteToBinary\n-  #226 = Utf8               (BI[ZII)[Z\n-  #227 = Utf8               uuidToByteArray\n-  #228 = Utf8               (Ljava/util/UUID;[BII)[B\n-  #229 = Class              #351          // java/util/UUID\n-  #230 = Class              #358          // \"[B\"\n-  #231 = Utf8               byteArrayToUuid\n-  #232 = Utf8               ([BI)Ljava/util/UUID;\n-  #233 = Utf8               <clinit>\n-  #234 = Utf8               SourceFile\n-  #235 = Utf8               Conversion.java\n-  #236 = NameAndType        #151:#152     // \"<init>\":()V\n-  #237 = Class              #359          // java/lang/Character\n-  #238 = NameAndType        #360:#361     // digit:(CI)I\n-  #239 = Utf8               java/lang/IllegalArgumentException\n-  #240 = Utf8               java/lang/StringBuilder\n-  #241 = Utf8               Cannot interpret \\'\n-  #242 = NameAndType        #362:#363     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #243 = NameAndType        #362:#364     // append:(C)Ljava/lang/StringBuilder;\n-  #244 = Utf8               \\' as a hexadecimal digit\n-  #245 = NameAndType        #365:#366     // toString:()Ljava/lang/String;\n-  #246 = NameAndType        #151:#367     // \"<init>\":(Ljava/lang/String;)V\n-  #247 = NameAndType        #148:#133     // FFFF:[Z\n-  #248 = Class              #133          // \"[Z\"\n-  #249 = NameAndType        #368:#369     // clone:()Ljava/lang/Object;\n-  #250 = NameAndType        #147:#133     // TFFF:[Z\n+  #212 = Utf8               intToHex\n+  #213 = Utf8               (IILjava/lang/String;II)Ljava/lang/String;\n+  #214 = Utf8               shortToHex\n+  #215 = Utf8               (SILjava/lang/String;II)Ljava/lang/String;\n+  #216 = Utf8               byteToHex\n+  #217 = Utf8               (BILjava/lang/String;II)Ljava/lang/String;\n+  #218 = Utf8               longToBinary\n+  #219 = Utf8               (JI[ZII)[Z\n+  #220 = Utf8               intToBinary\n+  #221 = Utf8               (II[ZII)[Z\n+  #222 = Utf8               shortToBinary\n+  #223 = Utf8               (SI[ZII)[Z\n+  #224 = Utf8               byteToBinary\n+  #225 = Utf8               (BI[ZII)[Z\n+  #226 = Utf8               uuidToByteArray\n+  #227 = Utf8               (Ljava/util/UUID;[BII)[B\n+  #228 = Class              #356          // \"[B\"\n+  #229 = Utf8               byteArrayToUuid\n+  #230 = Utf8               ([BI)Ljava/util/UUID;\n+  #231 = Utf8               <clinit>\n+  #232 = Utf8               SourceFile\n+  #233 = Utf8               Conversion.java\n+  #234 = NameAndType        #151:#152     // \"<init>\":()V\n+  #235 = Class              #357          // java/lang/Character\n+  #236 = NameAndType        #358:#359     // digit:(CI)I\n+  #237 = Utf8               java/lang/IllegalArgumentException\n+  #238 = Utf8               java/lang/StringBuilder\n+  #239 = Utf8               Cannot interpret \\'\n+  #240 = NameAndType        #360:#361     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #241 = NameAndType        #360:#362     // append:(C)Ljava/lang/StringBuilder;\n+  #242 = Utf8               \\' as a hexadecimal digit\n+  #243 = NameAndType        #363:#364     // toString:()Ljava/lang/String;\n+  #244 = NameAndType        #151:#365     // \"<init>\":(Ljava/lang/String;)V\n+  #245 = NameAndType        #148:#133     // FFFF:[Z\n+  #246 = Class              #133          // \"[Z\"\n+  #247 = NameAndType        #366:#367     // clone:()Ljava/lang/Object;\n+  #248 = NameAndType        #147:#133     // TFFF:[Z\n+  #249 = Class              #133          // \"[Z\"\n+  #250 = NameAndType        #146:#133     // FTFF:[Z\n   #251 = Class              #133          // \"[Z\"\n-  #252 = NameAndType        #146:#133     // FTFF:[Z\n+  #252 = NameAndType        #145:#133     // TTFF:[Z\n   #253 = Class              #133          // \"[Z\"\n-  #254 = NameAndType        #145:#133     // TTFF:[Z\n+  #254 = NameAndType        #144:#133     // FFTF:[Z\n   #255 = Class              #133          // \"[Z\"\n-  #256 = NameAndType        #144:#133     // FFTF:[Z\n+  #256 = NameAndType        #143:#133     // TFTF:[Z\n   #257 = Class              #133          // \"[Z\"\n-  #258 = NameAndType        #143:#133     // TFTF:[Z\n+  #258 = NameAndType        #142:#133     // FTTF:[Z\n   #259 = Class              #133          // \"[Z\"\n-  #260 = NameAndType        #142:#133     // FTTF:[Z\n+  #260 = NameAndType        #141:#133     // TTTF:[Z\n   #261 = Class              #133          // \"[Z\"\n-  #262 = NameAndType        #141:#133     // TTTF:[Z\n+  #262 = NameAndType        #140:#133     // FFFT:[Z\n   #263 = Class              #133          // \"[Z\"\n-  #264 = NameAndType        #140:#133     // FFFT:[Z\n+  #264 = NameAndType        #139:#133     // TFFT:[Z\n   #265 = Class              #133          // \"[Z\"\n-  #266 = NameAndType        #139:#133     // TFFT:[Z\n+  #266 = NameAndType        #138:#133     // FTFT:[Z\n   #267 = Class              #133          // \"[Z\"\n-  #268 = NameAndType        #138:#133     // FTFT:[Z\n+  #268 = NameAndType        #137:#133     // TTFT:[Z\n   #269 = Class              #133          // \"[Z\"\n-  #270 = NameAndType        #137:#133     // TTFT:[Z\n+  #270 = NameAndType        #136:#133     // FFTT:[Z\n   #271 = Class              #133          // \"[Z\"\n-  #272 = NameAndType        #136:#133     // FFTT:[Z\n+  #272 = NameAndType        #135:#133     // TFTT:[Z\n   #273 = Class              #133          // \"[Z\"\n-  #274 = NameAndType        #135:#133     // TFTT:[Z\n+  #274 = NameAndType        #134:#133     // FTTT:[Z\n   #275 = Class              #133          // \"[Z\"\n-  #276 = NameAndType        #134:#133     // FTTT:[Z\n+  #276 = NameAndType        #132:#133     // TTTT:[Z\n   #277 = Class              #133          // \"[Z\"\n-  #278 = NameAndType        #132:#133     // TTTT:[Z\n+  #278 = Class              #133          // \"[Z\"\n   #279 = Class              #133          // \"[Z\"\n   #280 = Class              #133          // \"[Z\"\n   #281 = Class              #133          // \"[Z\"\n   #282 = Class              #133          // \"[Z\"\n   #283 = Class              #133          // \"[Z\"\n   #284 = Class              #133          // \"[Z\"\n   #285 = Class              #133          // \"[Z\"\n@@ -292,112 +292,110 @@\n   #287 = Class              #133          // \"[Z\"\n   #288 = Class              #133          // \"[Z\"\n   #289 = Class              #133          // \"[Z\"\n   #290 = Class              #133          // \"[Z\"\n   #291 = Class              #133          // \"[Z\"\n   #292 = Class              #133          // \"[Z\"\n   #293 = Class              #133          // \"[Z\"\n-  #294 = Class              #133          // \"[Z\"\n-  #295 = Class              #133          // \"[Z\"\n-  #296 = NameAndType        #162:#164     // binaryToHexDigit:([ZI)C\n-  #297 = Utf8               Cannot convert an empty array.\n-  #298 = NameAndType        #165:#164     // binaryToHexDigitMsb0_4bits:([ZI)C\n-  #299 = Utf8               src.length>8: src.length=\n-  #300 = NameAndType        #362:#370     // append:(I)Ljava/lang/StringBuilder;\n-  #301 = Utf8               src.length-srcPos<4: src.length=\n-  #302 = Utf8               , srcPos=\n-  #303 = NameAndType        #166:#164     // binaryBeMsb0ToHexDigit:([ZI)C\n-  #304 = Class              #371          // java/lang/Math\n-  #305 = NameAndType        #372:#373     // min:(II)I\n-  #306 = Class              #374          // java/lang/System\n-  #307 = NameAndType        #375:#376     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #308 = NameAndType        #377:#378     // forDigit:(II)C\n-  #309 = Utf8               nibble value not between 0 and 15:\n-  #310 = Utf8               (nInts-1)*32+dstPos is greater or equal to than 64\n-  #311 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 64\n-  #312 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 32\n-  #313 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 64\n-  #314 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 32\n-  #315 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 16\n-  #316 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 64\n-  #317 = Class              #379          // java/lang/String\n-  #318 = NameAndType        #380:#168     // charAt:(I)C\n-  #319 = NameAndType        #155:#156     // hexDigitToInt:(C)I\n-  #320 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 32\n-  #321 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 16\n-  #322 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 8\n-  #323 = Utf8               nBools-1+dstPos is greater or equal to than 64\n-  #324 = Utf8               nBools-1+dstPos is greater or equal to than 32\n-  #325 = Utf8               nBools-1+dstPos is greater or equal to than 16\n-  #326 = Utf8               nBools-1+dstPos is greater or equal to than 8\n-  #327 = Utf8               (nInts-1)*32+srcPos is greater or equal to than 64\n-  #328 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 64\n-  #329 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 32\n-  #330 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 64\n-  #331 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 32\n-  #332 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 16\n-  #333 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 64\n-  #334 = NameAndType        #381:#382     // length:()I\n-  #335 = NameAndType        #167:#168     // intToHexDigit:(I)C\n-  #336 = NameAndType        #383:#384     // setCharAt:(IC)V\n-  #337 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 32\n-  #338 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 16\n-  #339 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 8\n-  #340 = Utf8               nBools-1+srcPos is greater or equal to than 64\n-  #341 = Utf8               nBools-1+srcPos is greater or equal to than 32\n-  #342 = Utf8               nBools-1+srcPos is greater or equal to than 16\n-  #343 = NameAndType        #149:#150     // $assertionsDisabled:Z\n-  #344 = Utf8               java/lang/AssertionError\n-  #345 = Utf8               nBools-1+srcPos is greater or equal to than 8\n-  #346 = Utf8               nBytes is greater than 16\n-  #347 = NameAndType        #385:#386     // getMostSignificantBits:()J\n-  #348 = NameAndType        #204:#205     // longToByteArray:(JI[BII)[B\n-  #349 = NameAndType        #387:#386     // getLeastSignificantBits:()J\n-  #350 = Utf8               Need at least 16 bytes for UUID\n-  #351 = Utf8               java/util/UUID\n-  #352 = NameAndType        #176:#177     // byteArrayToLong:([BIJII)J\n-  #353 = NameAndType        #151:#388     // \"<init>\":(JJ)V\n-  #354 = Utf8               org/apache/commons/lang3/Conversion\n-  #355 = Class              #389          // java/lang/Class\n-  #356 = NameAndType        #390:#391     // desiredAssertionStatus:()Z\n-  #357 = Utf8               java/lang/Object\n-  #358 = Utf8               [B\n-  #359 = Utf8               java/lang/Character\n-  #360 = Utf8               digit\n-  #361 = Utf8               (CI)I\n-  #362 = Utf8               append\n-  #363 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #364 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #365 = Utf8               toString\n-  #366 = Utf8               ()Ljava/lang/String;\n-  #367 = Utf8               (Ljava/lang/String;)V\n-  #368 = Utf8               clone\n-  #369 = Utf8               ()Ljava/lang/Object;\n-  #370 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #371 = Utf8               java/lang/Math\n-  #372 = Utf8               min\n-  #373 = Utf8               (II)I\n-  #374 = Utf8               java/lang/System\n-  #375 = Utf8               arraycopy\n-  #376 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #377 = Utf8               forDigit\n-  #378 = Utf8               (II)C\n-  #379 = Utf8               java/lang/String\n-  #380 = Utf8               charAt\n-  #381 = Utf8               length\n-  #382 = Utf8               ()I\n-  #383 = Utf8               setCharAt\n-  #384 = Utf8               (IC)V\n-  #385 = Utf8               getMostSignificantBits\n-  #386 = Utf8               ()J\n-  #387 = Utf8               getLeastSignificantBits\n-  #388 = Utf8               (JJ)V\n-  #389 = Utf8               java/lang/Class\n-  #390 = Utf8               desiredAssertionStatus\n-  #391 = Utf8               ()Z\n+  #294 = NameAndType        #162:#164     // binaryToHexDigit:([ZI)C\n+  #295 = Utf8               Cannot convert an empty array.\n+  #296 = NameAndType        #165:#164     // binaryToHexDigitMsb0_4bits:([ZI)C\n+  #297 = Utf8               src.length>8: src.length=\n+  #298 = NameAndType        #360:#368     // append:(I)Ljava/lang/StringBuilder;\n+  #299 = Utf8               src.length-srcPos<4: src.length=\n+  #300 = Utf8               , srcPos=\n+  #301 = NameAndType        #166:#164     // binaryBeMsb0ToHexDigit:([ZI)C\n+  #302 = Class              #369          // java/lang/Math\n+  #303 = NameAndType        #370:#371     // min:(II)I\n+  #304 = Class              #372          // java/lang/System\n+  #305 = NameAndType        #373:#374     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #306 = NameAndType        #375:#376     // forDigit:(II)C\n+  #307 = Utf8               nibble value not between 0 and 15:\n+  #308 = Utf8               (nInts-1)*32+dstPos is greater or equal to than 64\n+  #309 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 64\n+  #310 = Utf8               (nShorts-1)*16+dstPos is greater or equal to than 32\n+  #311 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 64\n+  #312 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 32\n+  #313 = Utf8               (nBytes-1)*8+dstPos is greater or equal to than 16\n+  #314 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 64\n+  #315 = Class              #377          // java/lang/String\n+  #316 = NameAndType        #378:#168     // charAt:(I)C\n+  #317 = NameAndType        #155:#156     // hexDigitToInt:(C)I\n+  #318 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 32\n+  #319 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 16\n+  #320 = Utf8               (nHexs-1)*4+dstPos is greater or equal to than 8\n+  #321 = Utf8               nBools-1+dstPos is greater or equal to than 64\n+  #322 = Utf8               nBools-1+dstPos is greater or equal to than 32\n+  #323 = Utf8               nBools-1+dstPos is greater or equal to than 16\n+  #324 = Utf8               nBools-1+dstPos is greater or equal to than 8\n+  #325 = Utf8               (nInts-1)*32+srcPos is greater or equal to than 64\n+  #326 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 64\n+  #327 = Utf8               (nShorts-1)*16+srcPos is greater or equal to than 32\n+  #328 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 64\n+  #329 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 32\n+  #330 = Utf8               (nBytes-1)*8+srcPos is greater or equal to than 16\n+  #331 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 64\n+  #332 = NameAndType        #379:#380     // length:()I\n+  #333 = NameAndType        #167:#168     // intToHexDigit:(I)C\n+  #334 = NameAndType        #381:#382     // setCharAt:(IC)V\n+  #335 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 32\n+  #336 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 16\n+  #337 = Utf8               (nHexs-1)*4+srcPos is greater or equal to than 8\n+  #338 = Utf8               nBools-1+srcPos is greater or equal to than 64\n+  #339 = Utf8               nBools-1+srcPos is greater or equal to than 32\n+  #340 = Utf8               nBools-1+srcPos is greater or equal to than 16\n+  #341 = NameAndType        #149:#150     // $assertionsDisabled:Z\n+  #342 = Utf8               java/lang/AssertionError\n+  #343 = Utf8               nBools-1+srcPos is greater or equal to than 8\n+  #344 = Utf8               nBytes is greater than 16\n+  #345 = NameAndType        #383:#384     // getMostSignificantBits:()J\n+  #346 = NameAndType        #204:#205     // longToByteArray:(JI[BII)[B\n+  #347 = NameAndType        #385:#384     // getLeastSignificantBits:()J\n+  #348 = Utf8               Need at least 16 bytes for UUID\n+  #349 = Utf8               java/util/UUID\n+  #350 = NameAndType        #176:#177     // byteArrayToLong:([BIJII)J\n+  #351 = NameAndType        #151:#386     // \"<init>\":(JJ)V\n+  #352 = Utf8               org/apache/commons/lang3/Conversion\n+  #353 = Class              #387          // java/lang/Class\n+  #354 = NameAndType        #388:#389     // desiredAssertionStatus:()Z\n+  #355 = Utf8               java/lang/Object\n+  #356 = Utf8               [B\n+  #357 = Utf8               java/lang/Character\n+  #358 = Utf8               digit\n+  #359 = Utf8               (CI)I\n+  #360 = Utf8               append\n+  #361 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #362 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #363 = Utf8               toString\n+  #364 = Utf8               ()Ljava/lang/String;\n+  #365 = Utf8               (Ljava/lang/String;)V\n+  #366 = Utf8               clone\n+  #367 = Utf8               ()Ljava/lang/Object;\n+  #368 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #369 = Utf8               java/lang/Math\n+  #370 = Utf8               min\n+  #371 = Utf8               (II)I\n+  #372 = Utf8               java/lang/System\n+  #373 = Utf8               arraycopy\n+  #374 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #375 = Utf8               forDigit\n+  #376 = Utf8               (II)C\n+  #377 = Utf8               java/lang/String\n+  #378 = Utf8               charAt\n+  #379 = Utf8               length\n+  #380 = Utf8               ()I\n+  #381 = Utf8               setCharAt\n+  #382 = Utf8               (IC)V\n+  #383 = Utf8               getMostSignificantBits\n+  #384 = Utf8               ()J\n+  #385 = Utf8               getLeastSignificantBits\n+  #386 = Utf8               (JJ)V\n+  #387 = Utf8               java/lang/Class\n+  #388 = Utf8               desiredAssertionStatus\n+  #389 = Utf8               ()Z\n {\n   private static final boolean[] TTTT;\n     descriptor: [Z\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final boolean[] FTTT;\n     descriptor: [Z\n"}]}
