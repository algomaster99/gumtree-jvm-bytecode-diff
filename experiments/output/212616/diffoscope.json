{"diffoscope-json-version": 1, "source1": "first/TypeUtils$ParameterizedTypeImpl.class", "source2": "second/TypeUtils$ParameterizedTypeImpl.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,18 +8,18 @@\n \n private static final class ParameterizedTypeImpl implements ParameterizedType\n {\n     private final Class<?> raw;\n     private final Type useOwner;\n     private final Type[] typeArguments;\n     \n-    private ParameterizedTypeImpl(final Class<?> raw, final Type useOwner, final Type[] typeArguments) {\n+    private ParameterizedTypeImpl(final Class<?> raw, final Type useOwner, final Type[] original) {\n         this.raw = raw;\n         this.useOwner = useOwner;\n-        this.typeArguments = Arrays.copyOf(typeArguments, typeArguments.length, (Class<? extends Type[]>)Type[].class);\n+        this.typeArguments = Arrays.copyOf(original, original.length, (Class<? extends Type[]>)Type[].class);\n     }\n     \n     @Override\n     public Type getRawType() {\n         return this.raw;\n     }\n     \n@@ -35,22 +35,16 @@\n     \n     @Override\n     public String toString() {\n         return TypeUtils.toString((Type)this);\n     }\n     \n     @Override\n-    public boolean equals(final Object obj) {\n-        return obj == this || (obj instanceof ParameterizedType && TypeUtils.access$200((ParameterizedType)this, (Type)(ParameterizedType)obj));\n+    public boolean equals(final Object o) {\n+        return o == this || (o instanceof ParameterizedType && TypeUtils.access$200((ParameterizedType)this, (Type)(ParameterizedType)o));\n     }\n     \n     @Override\n     public int hashCode() {\n-        int result = 1136;\n-        result |= this.raw.hashCode();\n-        result <<= 4;\n-        result |= Objects.hashCode(this.useOwner);\n-        result <<= 8;\n-        result |= Arrays.hashCode(this.typeArguments);\n-        return result;\n+        return ((0x470 | this.raw.hashCode()) << 4 | Objects.hashCode(this.useOwner)) << 8 | Arrays.hashCode(this.typeArguments);\n     }\n }\n"}]}
