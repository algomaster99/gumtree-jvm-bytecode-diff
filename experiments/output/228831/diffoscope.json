{"diffoscope-json-version": 1, "source1": "first/URLCodec.class", "source2": "second/URLCodec.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -25,142 +25,139 @@\n         this(\"UTF-8\");\n     }\n     \n     public URLCodec(final String charset) {\n         this.charset = charset;\n     }\n     \n-    public static final byte[] encodeUrl(BitSet urlsafe, final byte[] bytes) {\n-        if (bytes == null) {\n+    public static final byte[] encodeUrl(BitSet www_FORM_URL_SAFE, final byte[] array) {\n+        if (array == null) {\n             return null;\n         }\n-        if (urlsafe == null) {\n-            urlsafe = URLCodec.WWW_FORM_URL_SAFE;\n+        if (www_FORM_URL_SAFE == null) {\n+            www_FORM_URL_SAFE = URLCodec.WWW_FORM_URL_SAFE;\n         }\n-        final ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n-        for (int b : bytes) {\n-            final byte c = (byte)b;\n-            if (b < 0) {\n-                b += 256;\n+        final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+        for (int n : array) {\n+            if (n < 0) {\n+                n += 256;\n             }\n-            if (urlsafe.get(b)) {\n-                if (b == 32) {\n-                    b = 43;\n+            if (www_FORM_URL_SAFE.get(n)) {\n+                if (n == 32) {\n+                    n = 43;\n                 }\n-                buffer.write(b);\n+                byteArrayOutputStream.write(n);\n             }\n             else {\n-                buffer.write(37);\n-                final char hex1 = Utils.hexDigit(b >> 4);\n-                final char hex2 = Utils.hexDigit(b);\n-                buffer.write(hex1);\n-                buffer.write(hex2);\n+                byteArrayOutputStream.write(37);\n+                final char hexDigit = Utils.hexDigit(n >> 4);\n+                final char hexDigit2 = Utils.hexDigit(n);\n+                byteArrayOutputStream.write(hexDigit);\n+                byteArrayOutputStream.write(hexDigit2);\n             }\n         }\n-        return buffer.toByteArray();\n+        return byteArrayOutputStream.toByteArray();\n     }\n     \n-    public static final byte[] decodeUrl(final byte[] bytes) throws DecoderException {\n-        if (bytes == null) {\n+    public static final byte[] decodeUrl(final byte[] array) throws DecoderException {\n+        if (array == null) {\n             return null;\n         }\n-        final ByteArrayOutputStream buffer = new ByteArrayOutputStream();\n-        for (int i = 0; i < bytes.length; ++i) {\n-            final int b = bytes[i];\n+        final ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\n+        for (int i = 0; i < array.length; ++i) {\n+            final byte b = array[i];\n             if (b == 43) {\n-                buffer.write(32);\n+                byteArrayOutputStream.write(32);\n             }\n             else {\n                 if (b == 37) {\n                     try {\n-                        final int u = Utils.digit16(bytes[++i]);\n-                        final int l = Utils.digit16(bytes[++i]);\n-                        buffer.write((u << 4) + l);\n+                        byteArrayOutputStream.write((Utils.digit16(array[++i]) << 4) + Utils.digit16(array[++i]));\n                         continue;\n                     }\n-                    catch (final ArrayIndexOutOfBoundsException e) {\n-                        throw new DecoderException(\"Invalid URL encoding: \", (Throwable)e);\n+                    catch (final ArrayIndexOutOfBoundsException ex) {\n+                        throw new DecoderException(\"Invalid URL encoding: \", (Throwable)ex);\n                     }\n                 }\n-                buffer.write(b);\n+                byteArrayOutputStream.write(b);\n             }\n         }\n-        return buffer.toByteArray();\n+        return byteArrayOutputStream.toByteArray();\n     }\n     \n-    public byte[] encode(final byte[] bytes) {\n-        return encodeUrl(URLCodec.WWW_FORM_URL_SAFE, bytes);\n+    public byte[] encode(final byte[] array) {\n+        return encodeUrl(URLCodec.WWW_FORM_URL_SAFE, array);\n     }\n     \n-    public byte[] decode(final byte[] bytes) throws DecoderException {\n-        return decodeUrl(bytes);\n+    public byte[] decode(final byte[] array) throws DecoderException {\n+        return decodeUrl(array);\n     }\n     \n-    public String encode(final String str, final String charsetName) throws UnsupportedEncodingException {\n-        if (str == null) {\n+    public String encode(final String s, final String charsetName) throws UnsupportedEncodingException {\n+        if (s == null) {\n             return null;\n         }\n-        return StringUtils.newStringUsAscii(this.encode(str.getBytes(charsetName)));\n+        return StringUtils.newStringUsAscii(this.encode(s.getBytes(charsetName)));\n     }\n     \n-    public String encode(final String str) throws EncoderException {\n-        if (str == null) {\n+    public String encode(final String s) throws EncoderException {\n+        if (s == null) {\n             return null;\n         }\n         try {\n-            return this.encode(str, this.getDefaultCharset());\n+            return this.encode(s, this.getDefaultCharset());\n         }\n-        catch (final UnsupportedEncodingException e) {\n-            throw new EncoderException(e.getMessage(), (Throwable)e);\n+        catch (final UnsupportedEncodingException ex) {\n+            throw new EncoderException(ex.getMessage(), (Throwable)ex);\n         }\n     }\n     \n-    public String decode(final String str, final String charsetName) throws DecoderException, UnsupportedEncodingException {\n-        if (str == null) {\n+    public String decode(final String s, final String charsetName) throws DecoderException, UnsupportedEncodingException {\n+        if (s == null) {\n             return null;\n         }\n-        return new String(this.decode(StringUtils.getBytesUsAscii(str)), charsetName);\n+        return new String(this.decode(StringUtils.getBytesUsAscii(s)), charsetName);\n     }\n     \n-    public String decode(final String str) throws DecoderException {\n-        if (str == null) {\n+    public String decode(final String s) throws DecoderException {\n+        if (s == null) {\n             return null;\n         }\n         try {\n-            return this.decode(str, this.getDefaultCharset());\n+            return this.decode(s, this.getDefaultCharset());\n         }\n-        catch (final UnsupportedEncodingException e) {\n-            throw new DecoderException(e.getMessage(), (Throwable)e);\n+        catch (final UnsupportedEncodingException ex) {\n+            throw new DecoderException(ex.getMessage(), (Throwable)ex);\n         }\n     }\n     \n-    public Object encode(final Object obj) throws EncoderException {\n-        if (obj == null) {\n+    public Object encode(final Object o) throws EncoderException {\n+        if (o == null) {\n             return null;\n         }\n-        if (obj instanceof byte[]) {\n-            return this.encode((byte[])obj);\n+        if (o instanceof byte[]) {\n+            return this.encode((byte[])o);\n         }\n-        if (obj instanceof String) {\n-            return this.encode((String)obj);\n+        if (o instanceof String) {\n+            return this.encode((String)o);\n         }\n-        throw new EncoderException(\"Objects of type \" + obj.getClass().getName() + \" cannot be URL encoded\");\n+        throw new EncoderException(\"Objects of type \" + o.getClass().getName() + \" cannot be URL encoded\");\n     }\n     \n-    public Object decode(final Object obj) throws DecoderException {\n-        if (obj == null) {\n+    public Object decode(final Object o) throws DecoderException {\n+        if (o == null) {\n             return null;\n         }\n-        if (obj instanceof byte[]) {\n-            return this.decode((byte[])obj);\n+        if (o instanceof byte[]) {\n+            return this.decode((byte[])o);\n         }\n-        if (obj instanceof String) {\n-            return this.decode((String)obj);\n+        if (o instanceof String) {\n+            return this.decode((String)o);\n         }\n-        throw new DecoderException(\"Objects of type \" + obj.getClass().getName() + \" cannot be URL decoded\");\n+        throw new DecoderException(\"Objects of type \" + o.getClass().getName() + \" cannot be URL decoded\");\n     }\n     \n     public String getDefaultCharset() {\n         return this.charset;\n     }\n     \n     @Deprecated\n@@ -169,19 +166,19 @@\n     }\n     \n     static {\n         WWW_FORM_URL_SAFE = new BitSet(256);\n         for (int i = 97; i <= 122; ++i) {\n             URLCodec.WWW_FORM_URL_SAFE.set(i);\n         }\n-        for (int i = 65; i <= 90; ++i) {\n-            URLCodec.WWW_FORM_URL_SAFE.set(i);\n+        for (int j = 65; j <= 90; ++j) {\n+            URLCodec.WWW_FORM_URL_SAFE.set(j);\n         }\n-        for (int i = 48; i <= 57; ++i) {\n-            URLCodec.WWW_FORM_URL_SAFE.set(i);\n+        for (int k = 48; k <= 57; ++k) {\n+            URLCodec.WWW_FORM_URL_SAFE.set(k);\n         }\n         URLCodec.WWW_FORM_URL_SAFE.set(45);\n         URLCodec.WWW_FORM_URL_SAFE.set(95);\n         URLCodec.WWW_FORM_URL_SAFE.set(46);\n         URLCodec.WWW_FORM_URL_SAFE.set(42);\n         URLCodec.WWW_FORM_URL_SAFE.set(32);\n         WWW_FORM_URL = (BitSet)URLCodec.WWW_FORM_URL_SAFE.clone();\n"}]}
