{"diffoscope-json-version": 1, "source1": "first/DaitchMokotoffSoundex.class", "source2": "second/DaitchMokotoffSoundex.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,123 @@\n-  SHA-256 checksum 0f5e0123a348084767fc96cc2a0cec2297d969ff027c1fe800a9f7280c62b13e\n+  SHA-256 checksum 3a3ee63d96a6241aa433e504a382308a1e116ac24ea5f4cc1c0c589b68ccc24d\n   Compiled from \"DaitchMokotoffSoundex.java\"\n public class org.apache.commons.codec.language.DaitchMokotoffSoundex implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #3                          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n   super_class: #105                       // java/lang/Object\n   interfaces: 1, fields: 9, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Methodref          #89.#224      // java/util/Scanner.hasNextLine:()Z\n-    #2 = Methodref          #89.#225      // java/util/Scanner.nextLine:()Ljava/lang/String;\n-    #3 = Class              #226          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-    #4 = String             #227          // */\n-    #5 = Methodref          #58.#228      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-    #6 = String             #229          // /*\n-    #7 = Methodref          #58.#230      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #8 = String             #231          // //\n-    #9 = Methodref          #58.#232      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #10 = Methodref          #58.#233      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #11 = Methodref          #58.#234      // java/lang/String.trim:()Ljava/lang/String;\n-   #12 = Methodref          #58.#235      // java/lang/String.length:()I\n-   #13 = String             #236          // =\n-   #14 = Methodref          #58.#237      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #15 = Methodref          #58.#238      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-   #16 = Class              #239          // java/lang/IllegalArgumentException\n-   #17 = Class              #240          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#241      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #242          // Malformed folding statement split into\n-   #20 = Methodref          #17.#243      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#244      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #22 = String             #245          //  parts:\n-   #23 = String             #246          //  in\n-   #24 = Methodref          #17.#247      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #16.#248      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = String             #249          // Malformed folding statement - patterns are not single characters:\n-   #27 = Methodref          #58.#250      // java/lang/String.charAt:(I)C\n-   #28 = Methodref          #55.#251      // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #29 = InterfaceMethodref #252.#253     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #30 = String             #254          // \\\\s+\n-   #31 = String             #255          // Malformed rule statement split into\n-   #32 = Methodref          #3.#256       // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-   #33 = Class              #257          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-   #34 = Methodref          #33.#258      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #35 = Methodref          #33.#259      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-   #36 = InterfaceMethodref #252.#260     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #37 = Class              #261          // java/util/List\n-   #38 = Class              #262          // java/util/ArrayList\n-   #39 = Methodref          #38.#241      // java/util/ArrayList.\"<init>\":()V\n-   #40 = InterfaceMethodref #37.#263      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #41 = Class              #264          // java/lang/IllegalStateException\n-   #42 = String             #265          // Problem parsing line \\'\n-   #43 = String             #266          // \\' in\n-   #44 = Methodref          #41.#267      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #45 = String             #268          // \\\"\n-   #46 = Methodref          #58.#269      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #47 = Methodref          #3.#270       // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n-   #48 = Methodref          #105.#241     // java/lang/Object.\"<init>\":()V\n-   #49 = Fieldref           #3.#271       // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n-   #50 = Methodref          #58.#272      // java/lang/String.toCharArray:()[C\n-   #51 = Methodref          #55.#273      // java/lang/Character.isWhitespace:(C)Z\n-   #52 = Methodref          #55.#274      // java/lang/Character.toLowerCase:(C)C\n-   #53 = Fieldref           #3.#275       // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n-   #54 = InterfaceMethodref #252.#276     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-   #55 = Class              #277          // java/lang/Character\n-   #56 = Methodref          #55.#278      // java/lang/Character.charValue:()C\n-   #57 = Methodref          #17.#279      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #58 = Class              #280          // java/lang/String\n-   #59 = Class              #281          // org/apache/commons/codec/EncoderException\n-   #60 = String             #282          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-   #61 = Methodref          #59.#248      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #62 = Methodref          #3.#283       // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #63 = Methodref          #3.#284       // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #64 = Methodref          #3.#285       // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-   #65 = Class              #286          // java/util/LinkedHashSet\n-   #66 = Methodref          #65.#241      // java/util/LinkedHashSet.\"<init>\":()V\n-   #67 = Class              #287          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-   #68 = Methodref          #67.#288      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-   #69 = InterfaceMethodref #289.#263     // java/util/Set.add:(Ljava/lang/Object;)Z\n-   #70 = Fieldref           #3.#290       // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n-   #71 = Methodref          #291.#292     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #72 = InterfaceMethodref #37.#293      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #73 = InterfaceMethodref #294.#295     // java/util/Iterator.hasNext:()Z\n-   #74 = InterfaceMethodref #294.#296     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #75 = Methodref          #33.#297      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n-   #76 = InterfaceMethodref #37.#298      // java/util/List.clear:()V\n-   #77 = Methodref          #33.#299      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #78 = InterfaceMethodref #289.#293     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #79 = Methodref          #67.#300      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-   #80 = Methodref          #67.#301      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n-   #81 = InterfaceMethodref #289.#298     // java/util/Set.clear:()V\n-   #82 = InterfaceMethodref #289.#302     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n-   #83 = Methodref          #33.#303      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n-   #84 = InterfaceMethodref #289.#304     // java/util/Set.size:()I\n-   #85 = Methodref          #67.#305      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n-   #86 = Methodref          #67.#247      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n-   #87 = Class              #306          // java/util/HashMap\n-   #88 = Methodref          #87.#241      // java/util/HashMap.\"<init>\":()V\n-   #89 = Class              #307          // java/util/Scanner\n-   #90 = String             #308          // org/apache/commons/codec/language/dmrules.txt\n-   #91 = Methodref          #309.#310     // org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #92 = Class              #311          // org/apache/commons/codec/CharEncoding\n-   #93 = String             #312          // UTF-8\n-   #94 = Methodref          #89.#313      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #95 = Methodref          #3.#314       // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-   #96 = Methodref          #89.#315      // java/util/Scanner.close:()V\n-   #97 = Class              #316          // java/lang/Throwable\n-   #98 = Methodref          #97.#317      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #99 = InterfaceMethodref #252.#318     // java/util/Map.entrySet:()Ljava/util/Set;\n-  #100 = Class              #319          // java/util/Map$Entry\n-  #101 = InterfaceMethodref #100.#320     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-  #102 = Class              #321          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #103 = Methodref          #102.#241     // org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n-  #104 = Methodref          #291.#322     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-  #105 = Class              #323          // java/lang/Object\n-  #106 = Class              #324          // org/apache/commons/codec/StringEncoder\n+    #1 = Methodref          #89.#215      // java/util/Scanner.hasNextLine:()Z\n+    #2 = Methodref          #89.#216      // java/util/Scanner.nextLine:()Ljava/lang/String;\n+    #3 = Class              #217          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n+    #4 = String             #218          // */\n+    #5 = Methodref          #58.#219      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+    #6 = String             #220          // /*\n+    #7 = Methodref          #58.#221      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+    #8 = String             #222          // //\n+    #9 = Methodref          #58.#223      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #10 = Methodref          #58.#224      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #11 = Methodref          #58.#225      // java/lang/String.trim:()Ljava/lang/String;\n+   #12 = Methodref          #58.#226      // java/lang/String.length:()I\n+   #13 = String             #227          // =\n+   #14 = Methodref          #58.#228      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #15 = Methodref          #58.#229      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #16 = Class              #230          // java/lang/IllegalArgumentException\n+   #17 = Class              #231          // java/lang/StringBuilder\n+   #18 = Methodref          #17.#232      // java/lang/StringBuilder.\"<init>\":()V\n+   #19 = String             #233          // Malformed folding statement split into\n+   #20 = Methodref          #17.#234      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #21 = Methodref          #17.#235      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #22 = String             #236          //  parts:\n+   #23 = String             #237          //  in\n+   #24 = Methodref          #17.#238      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #25 = Methodref          #16.#239      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = String             #240          // Malformed folding statement - patterns are not single characters:\n+   #27 = Methodref          #58.#241      // java/lang/String.charAt:(I)C\n+   #28 = Methodref          #55.#242      // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #29 = InterfaceMethodref #163.#243     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #30 = String             #244          // \\\\s+\n+   #31 = String             #245          // Malformed rule statement split into\n+   #32 = Methodref          #3.#246       // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+   #33 = Class              #247          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+   #34 = Methodref          #33.#248      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+   #35 = Methodref          #33.#249      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+   #36 = InterfaceMethodref #163.#250     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #37 = Class              #251          // java/util/List\n+   #38 = Class              #252          // java/util/ArrayList\n+   #39 = Methodref          #38.#232      // java/util/ArrayList.\"<init>\":()V\n+   #40 = InterfaceMethodref #37.#253      // java/util/List.add:(Ljava/lang/Object;)Z\n+   #41 = Class              #254          // java/lang/IllegalStateException\n+   #42 = String             #255          // Problem parsing line \\'\n+   #43 = String             #256          // \\' in\n+   #44 = Methodref          #41.#257      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #45 = String             #258          // \\\"\n+   #46 = Methodref          #58.#259      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #47 = Methodref          #3.#260       // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n+   #48 = Methodref          #105.#232     // java/lang/Object.\"<init>\":()V\n+   #49 = Fieldref           #3.#261       // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n+   #50 = Methodref          #58.#262      // java/lang/String.toCharArray:()[C\n+   #51 = Methodref          #55.#263      // java/lang/Character.isWhitespace:(C)Z\n+   #52 = Methodref          #55.#264      // java/lang/Character.toLowerCase:(C)C\n+   #53 = Fieldref           #3.#265       // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n+   #54 = InterfaceMethodref #163.#266     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+   #55 = Class              #267          // java/lang/Character\n+   #56 = Methodref          #55.#268      // java/lang/Character.charValue:()C\n+   #57 = Methodref          #17.#269      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #58 = Class              #270          // java/lang/String\n+   #59 = Class              #271          // org/apache/commons/codec/EncoderException\n+   #60 = String             #272          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+   #61 = Methodref          #59.#239      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #62 = Methodref          #3.#273       // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #63 = Methodref          #3.#274       // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+   #64 = Methodref          #3.#275       // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+   #65 = Class              #276          // java/util/LinkedHashSet\n+   #66 = Methodref          #65.#232      // java/util/LinkedHashSet.\"<init>\":()V\n+   #67 = Class              #277          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+   #68 = Methodref          #67.#278      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+   #69 = InterfaceMethodref #206.#253     // java/util/Set.add:(Ljava/lang/Object;)Z\n+   #70 = Fieldref           #3.#279       // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n+   #71 = Methodref          #280.#281     // java/util/Collections.emptyList:()Ljava/util/List;\n+   #72 = InterfaceMethodref #37.#282      // java/util/List.iterator:()Ljava/util/Iterator;\n+   #73 = InterfaceMethodref #207.#283     // java/util/Iterator.hasNext:()Z\n+   #74 = InterfaceMethodref #207.#284     // java/util/Iterator.next:()Ljava/lang/Object;\n+   #75 = Methodref          #33.#285      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n+   #76 = InterfaceMethodref #37.#286      // java/util/List.clear:()V\n+   #77 = Methodref          #33.#287      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+   #78 = InterfaceMethodref #206.#282     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #79 = Methodref          #67.#288      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+   #80 = Methodref          #67.#289      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n+   #81 = InterfaceMethodref #206.#286     // java/util/Set.clear:()V\n+   #82 = InterfaceMethodref #206.#290     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n+   #83 = Methodref          #33.#291      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+   #84 = InterfaceMethodref #206.#292     // java/util/Set.size:()I\n+   #85 = Methodref          #67.#293      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n+   #86 = Methodref          #67.#238      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n+   #87 = Class              #294          // java/util/HashMap\n+   #88 = Methodref          #87.#232      // java/util/HashMap.\"<init>\":()V\n+   #89 = Class              #295          // java/util/Scanner\n+   #90 = String             #296          // org/apache/commons/codec/language/dmrules.txt\n+   #91 = Methodref          #297.#298     // org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+   #92 = Class              #299          // org/apache/commons/codec/CharEncoding\n+   #93 = String             #300          // UTF-8\n+   #94 = Methodref          #89.#301      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #95 = Methodref          #3.#302       // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+   #96 = Methodref          #89.#303      // java/util/Scanner.close:()V\n+   #97 = Class              #304          // java/lang/Throwable\n+   #98 = Methodref          #97.#305      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #99 = InterfaceMethodref #163.#306     // java/util/Map.entrySet:()Ljava/util/Set;\n+  #100 = Class              #307          // java/util/Map$Entry\n+  #101 = InterfaceMethodref #100.#308     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #102 = Class              #309          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #103 = Methodref          #102.#232     // org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n+  #104 = Methodref          #280.#310     // java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+  #105 = Class              #311          // java/lang/Object\n+  #106 = Class              #312          // org/apache/commons/codec/StringEncoder\n   #107 = Utf8               Rule\n   #108 = Utf8               InnerClasses\n   #109 = Utf8               Branch\n   #110 = Utf8               COMMENT\n   #111 = Utf8               Ljava/lang/String;\n   #112 = Utf8               ConstantValue\n   #113 = Utf8               DOUBLE_QUOTE\n@@ -165,261 +165,249 @@\n   #155 = Utf8               ruleMapping\n   #156 = Utf8               asciiFoldings\n   #157 = Utf8               currentLine\n   #158 = Utf8               inMultilineComment\n   #159 = Utf8               LocalVariableTypeTable\n   #160 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n   #161 = Utf8               StackMapTable\n-  #162 = Class              #280          // java/lang/String\n-  #163 = Class              #134          // \"[Ljava/lang/String;\"\n-  #164 = Class              #307          // java/util/Scanner\n-  #165 = Class              #325          // java/util/Map\n-  #166 = Class              #257          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-  #167 = Class              #261          // java/util/List\n-  #168 = Class              #239          // java/lang/IllegalArgumentException\n-  #169 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n-  #170 = Utf8               stripQuotes\n-  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #172 = Utf8               str\n-  #173 = Utf8               <init>\n-  #174 = Utf8               ()V\n-  #175 = Utf8               this\n-  #176 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n-  #177 = Utf8               (Z)V\n-  #178 = Utf8               cleanup\n-  #179 = Utf8               ch\n-  #180 = Utf8               input\n-  #181 = Utf8               sb\n-  #182 = Utf8               Ljava/lang/StringBuilder;\n-  #183 = Class              #226          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #184 = Class              #240          // java/lang/StringBuilder\n-  #185 = Class              #326          // \"[C\"\n-  #186 = Utf8               encode\n-  #187 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #188 = Utf8               obj\n-  #189 = Utf8               Ljava/lang/Object;\n-  #190 = Utf8               Exceptions\n-  #191 = Utf8               source\n-  #192 = Utf8               soundex\n-  #193 = Utf8               branch\n-  #194 = Utf8               branches\n-  #195 = Utf8               index\n-  #196 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n-  #197 = Utf8               nextBranch\n-  #198 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #199 = Utf8               force\n-  #200 = Utf8               nextReplacement\n-  #201 = Utf8               replacements\n-  #202 = Utf8               branchingRequired\n-  #203 = Utf8               rule\n-  #204 = Utf8               inputContext\n-  #205 = Utf8               nextBranches\n-  #206 = Utf8               branching\n-  #207 = Utf8               currentBranches\n-  #208 = Utf8               Ljava/util/Set;\n-  #209 = Utf8               lastChar\n-  #210 = Utf8               result\n-  #211 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n-  #212 = Utf8               Ljava/util/Set<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n-  #213 = Class              #327          // java/util/Set\n-  #214 = Class              #328          // java/util/Iterator\n-  #215 = Class              #287          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-  #216 = Utf8               <clinit>\n-  #217 = Utf8               ruleList\n-  #218 = Utf8               Entry\n-  #219 = Utf8               Ljava/util/Map$Entry;\n-  #220 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n-  #221 = Class              #316          // java/lang/Throwable\n-  #222 = Utf8               SourceFile\n-  #223 = Utf8               DaitchMokotoffSoundex.java\n-  #224 = NameAndType        #329:#330     // hasNextLine:()Z\n-  #225 = NameAndType        #331:#332     // nextLine:()Ljava/lang/String;\n-  #226 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #227 = Utf8               */\n-  #228 = NameAndType        #333:#334     // endsWith:(Ljava/lang/String;)Z\n-  #229 = Utf8               /*\n-  #230 = NameAndType        #335:#334     // startsWith:(Ljava/lang/String;)Z\n-  #231 = Utf8               //\n-  #232 = NameAndType        #336:#337     // indexOf:(Ljava/lang/String;)I\n-  #233 = NameAndType        #338:#339     // substring:(II)Ljava/lang/String;\n-  #234 = NameAndType        #340:#332     // trim:()Ljava/lang/String;\n-  #235 = NameAndType        #341:#342     // length:()I\n-  #236 = Utf8               =\n-  #237 = NameAndType        #343:#344     // contains:(Ljava/lang/CharSequence;)Z\n-  #238 = NameAndType        #345:#346     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #239 = Utf8               java/lang/IllegalArgumentException\n-  #240 = Utf8               java/lang/StringBuilder\n-  #241 = NameAndType        #173:#174     // \"<init>\":()V\n-  #242 = Utf8               Malformed folding statement split into\n-  #243 = NameAndType        #347:#348     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #244 = NameAndType        #347:#349     // append:(I)Ljava/lang/StringBuilder;\n-  #245 = Utf8                parts:\n-  #246 = Utf8                in\n-  #247 = NameAndType        #350:#332     // toString:()Ljava/lang/String;\n-  #248 = NameAndType        #173:#351     // \"<init>\":(Ljava/lang/String;)V\n-  #249 = Utf8               Malformed folding statement - patterns are not single characters:\n-  #250 = NameAndType        #352:#353     // charAt:(I)C\n-  #251 = NameAndType        #354:#355     // valueOf:(C)Ljava/lang/Character;\n-  #252 = Class              #325          // java/util/Map\n-  #253 = NameAndType        #356:#357     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #254 = Utf8               \\\\s+\n-  #255 = Utf8               Malformed rule statement split into\n-  #256 = NameAndType        #170:#171     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-  #257 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-  #258 = NameAndType        #173:#358     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #259 = NameAndType        #359:#360     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #260 = NameAndType        #361:#187     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #261 = Utf8               java/util/List\n-  #262 = Utf8               java/util/ArrayList\n-  #263 = NameAndType        #362:#363     // add:(Ljava/lang/Object;)Z\n-  #264 = Utf8               java/lang/IllegalStateException\n-  #265 = Utf8               Problem parsing line \\'\n-  #266 = Utf8               \\' in\n-  #267 = NameAndType        #173:#364     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #268 = Utf8               \\\"\n-  #269 = NameAndType        #338:#365     // substring:(I)Ljava/lang/String;\n-  #270 = NameAndType        #173:#177     // \"<init>\":(Z)V\n-  #271 = NameAndType        #126:#127     // folding:Z\n-  #272 = NameAndType        #366:#367     // toCharArray:()[C\n-  #273 = NameAndType        #368:#369     // isWhitespace:(C)Z\n-  #274 = NameAndType        #370:#371     // toLowerCase:(C)C\n-  #275 = NameAndType        #124:#121     // FOLDINGS:Ljava/util/Map;\n-  #276 = NameAndType        #372:#363     // containsKey:(Ljava/lang/Object;)Z\n-  #277 = Utf8               java/lang/Character\n-  #278 = NameAndType        #373:#374     // charValue:()C\n-  #279 = NameAndType        #347:#375     // append:(C)Ljava/lang/StringBuilder;\n-  #280 = Utf8               java/lang/String\n-  #281 = Utf8               org/apache/commons/codec/EncoderException\n-  #282 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-  #283 = NameAndType        #186:#171     // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #284 = NameAndType        #192:#196     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #285 = NameAndType        #178:#171     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-  #286 = Utf8               java/util/LinkedHashSet\n-  #287 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-  #288 = NameAndType        #173:#376     // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #289 = Class              #327          // java/util/Set\n-  #290 = NameAndType        #120:#121     // RULES:Ljava/util/Map;\n-  #291 = Class              #377          // java/util/Collections\n-  #292 = NameAndType        #378:#379     // emptyList:()Ljava/util/List;\n-  #293 = NameAndType        #380:#381     // iterator:()Ljava/util/Iterator;\n-  #294 = Class              #328          // java/util/Iterator\n-  #295 = NameAndType        #382:#330     // hasNext:()Z\n-  #296 = NameAndType        #383:#384     // next:()Ljava/lang/Object;\n-  #297 = NameAndType        #385:#334     // matches:(Ljava/lang/String;)Z\n-  #298 = NameAndType        #386:#174     // clear:()V\n-  #299 = NameAndType        #387:#196     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #300 = NameAndType        #388:#389     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #301 = NameAndType        #390:#391     // processNextReplacement:(Ljava/lang/String;Z)V\n-  #302 = NameAndType        #392:#393     // addAll:(Ljava/util/Collection;)Z\n-  #303 = NameAndType        #394:#342     // getPatternLength:()I\n-  #304 = NameAndType        #395:#342     // size:()I\n-  #305 = NameAndType        #396:#174     // finish:()V\n-  #306 = Utf8               java/util/HashMap\n-  #307 = Utf8               java/util/Scanner\n-  #308 = Utf8               org/apache/commons/codec/language/dmrules.txt\n-  #309 = Class              #397          // org/apache/commons/codec/Resources\n-  #310 = NameAndType        #398:#399     // getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #311 = Utf8               org/apache/commons/codec/CharEncoding\n-  #312 = Utf8               UTF-8\n-  #313 = NameAndType        #173:#400     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #314 = NameAndType        #128:#129     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #315 = NameAndType        #401:#174     // close:()V\n-  #316 = Utf8               java/lang/Throwable\n-  #317 = NameAndType        #402:#403     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #318 = NameAndType        #404:#405     // entrySet:()Ljava/util/Set;\n-  #319 = Utf8               java/util/Map$Entry\n-  #320 = NameAndType        #406:#384     // getValue:()Ljava/lang/Object;\n-  #321 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #322 = NameAndType        #407:#408     // sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-  #323 = Utf8               java/lang/Object\n-  #324 = Utf8               org/apache/commons/codec/StringEncoder\n-  #325 = Utf8               java/util/Map\n-  #326 = Utf8               [C\n-  #327 = Utf8               java/util/Set\n-  #328 = Utf8               java/util/Iterator\n-  #329 = Utf8               hasNextLine\n-  #330 = Utf8               ()Z\n-  #331 = Utf8               nextLine\n-  #332 = Utf8               ()Ljava/lang/String;\n-  #333 = Utf8               endsWith\n-  #334 = Utf8               (Ljava/lang/String;)Z\n-  #335 = Utf8               startsWith\n-  #336 = Utf8               indexOf\n-  #337 = Utf8               (Ljava/lang/String;)I\n-  #338 = Utf8               substring\n-  #339 = Utf8               (II)Ljava/lang/String;\n-  #340 = Utf8               trim\n-  #341 = Utf8               length\n-  #342 = Utf8               ()I\n-  #343 = Utf8               contains\n-  #344 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #345 = Utf8               split\n-  #346 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #347 = Utf8               append\n-  #348 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #349 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #350 = Utf8               toString\n-  #351 = Utf8               (Ljava/lang/String;)V\n-  #352 = Utf8               charAt\n-  #353 = Utf8               (I)C\n-  #354 = Utf8               valueOf\n-  #355 = Utf8               (C)Ljava/lang/Character;\n-  #356 = Utf8               put\n-  #357 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #358 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #359 = Utf8               access$000\n-  #360 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #361 = Utf8               get\n-  #362 = Utf8               add\n-  #363 = Utf8               (Ljava/lang/Object;)Z\n-  #364 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #365 = Utf8               (I)Ljava/lang/String;\n-  #366 = Utf8               toCharArray\n-  #367 = Utf8               ()[C\n-  #368 = Utf8               isWhitespace\n-  #369 = Utf8               (C)Z\n-  #370 = Utf8               toLowerCase\n-  #371 = Utf8               (C)C\n-  #372 = Utf8               containsKey\n-  #373 = Utf8               charValue\n-  #374 = Utf8               ()C\n-  #375 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #376 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #377 = Utf8               java/util/Collections\n-  #378 = Utf8               emptyList\n-  #379 = Utf8               ()Ljava/util/List;\n-  #380 = Utf8               iterator\n-  #381 = Utf8               ()Ljava/util/Iterator;\n-  #382 = Utf8               hasNext\n-  #383 = Utf8               next\n-  #384 = Utf8               ()Ljava/lang/Object;\n-  #385 = Utf8               matches\n-  #386 = Utf8               clear\n-  #387 = Utf8               getReplacements\n-  #388 = Utf8               createBranch\n-  #389 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #390 = Utf8               processNextReplacement\n-  #391 = Utf8               (Ljava/lang/String;Z)V\n-  #392 = Utf8               addAll\n-  #393 = Utf8               (Ljava/util/Collection;)Z\n-  #394 = Utf8               getPatternLength\n-  #395 = Utf8               size\n-  #396 = Utf8               finish\n-  #397 = Utf8               org/apache/commons/codec/Resources\n-  #398 = Utf8               getInputStream\n-  #399 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #400 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #401 = Utf8               close\n-  #402 = Utf8               addSuppressed\n-  #403 = Utf8               (Ljava/lang/Throwable;)V\n-  #404 = Utf8               entrySet\n-  #405 = Utf8               ()Ljava/util/Set;\n-  #406 = Utf8               getValue\n-  #407 = Utf8               sort\n-  #408 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V\n+  #162 = Class              #134          // \"[Ljava/lang/String;\"\n+  #163 = Class              #313          // java/util/Map\n+  #164 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+  #165 = Utf8               stripQuotes\n+  #166 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #167 = Utf8               str\n+  #168 = Utf8               <init>\n+  #169 = Utf8               ()V\n+  #170 = Utf8               this\n+  #171 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n+  #172 = Utf8               (Z)V\n+  #173 = Utf8               cleanup\n+  #174 = Utf8               ch\n+  #175 = Utf8               input\n+  #176 = Utf8               sb\n+  #177 = Utf8               Ljava/lang/StringBuilder;\n+  #178 = Class              #314          // \"[C\"\n+  #179 = Utf8               encode\n+  #180 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #181 = Utf8               obj\n+  #182 = Utf8               Ljava/lang/Object;\n+  #183 = Utf8               Exceptions\n+  #184 = Utf8               source\n+  #185 = Utf8               soundex\n+  #186 = Utf8               branch\n+  #187 = Utf8               branches\n+  #188 = Utf8               index\n+  #189 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n+  #190 = Utf8               nextBranch\n+  #191 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #192 = Utf8               force\n+  #193 = Utf8               nextReplacement\n+  #194 = Utf8               replacements\n+  #195 = Utf8               branchingRequired\n+  #196 = Utf8               rule\n+  #197 = Utf8               inputContext\n+  #198 = Utf8               nextBranches\n+  #199 = Utf8               branching\n+  #200 = Utf8               currentBranches\n+  #201 = Utf8               Ljava/util/Set;\n+  #202 = Utf8               lastChar\n+  #203 = Utf8               result\n+  #204 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n+  #205 = Utf8               Ljava/util/Set<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n+  #206 = Class              #315          // java/util/Set\n+  #207 = Class              #316          // java/util/Iterator\n+  #208 = Utf8               <clinit>\n+  #209 = Utf8               ruleList\n+  #210 = Utf8               Entry\n+  #211 = Utf8               Ljava/util/Map$Entry;\n+  #212 = Utf8               Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+  #213 = Utf8               SourceFile\n+  #214 = Utf8               DaitchMokotoffSoundex.java\n+  #215 = NameAndType        #317:#318     // hasNextLine:()Z\n+  #216 = NameAndType        #319:#320     // nextLine:()Ljava/lang/String;\n+  #217 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  #218 = Utf8               */\n+  #219 = NameAndType        #321:#322     // endsWith:(Ljava/lang/String;)Z\n+  #220 = Utf8               /*\n+  #221 = NameAndType        #323:#322     // startsWith:(Ljava/lang/String;)Z\n+  #222 = Utf8               //\n+  #223 = NameAndType        #324:#325     // indexOf:(Ljava/lang/String;)I\n+  #224 = NameAndType        #326:#327     // substring:(II)Ljava/lang/String;\n+  #225 = NameAndType        #328:#320     // trim:()Ljava/lang/String;\n+  #226 = NameAndType        #329:#330     // length:()I\n+  #227 = Utf8               =\n+  #228 = NameAndType        #331:#332     // contains:(Ljava/lang/CharSequence;)Z\n+  #229 = NameAndType        #333:#334     // split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #230 = Utf8               java/lang/IllegalArgumentException\n+  #231 = Utf8               java/lang/StringBuilder\n+  #232 = NameAndType        #168:#169     // \"<init>\":()V\n+  #233 = Utf8               Malformed folding statement split into\n+  #234 = NameAndType        #335:#336     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #235 = NameAndType        #335:#337     // append:(I)Ljava/lang/StringBuilder;\n+  #236 = Utf8                parts:\n+  #237 = Utf8                in\n+  #238 = NameAndType        #338:#320     // toString:()Ljava/lang/String;\n+  #239 = NameAndType        #168:#339     // \"<init>\":(Ljava/lang/String;)V\n+  #240 = Utf8               Malformed folding statement - patterns are not single characters:\n+  #241 = NameAndType        #340:#341     // charAt:(I)C\n+  #242 = NameAndType        #342:#343     // valueOf:(C)Ljava/lang/Character;\n+  #243 = NameAndType        #344:#345     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #244 = Utf8               \\\\s+\n+  #245 = Utf8               Malformed rule statement split into\n+  #246 = NameAndType        #165:#166     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #247 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+  #248 = NameAndType        #168:#346     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #249 = NameAndType        #347:#348     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #250 = NameAndType        #349:#180     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #251 = Utf8               java/util/List\n+  #252 = Utf8               java/util/ArrayList\n+  #253 = NameAndType        #350:#351     // add:(Ljava/lang/Object;)Z\n+  #254 = Utf8               java/lang/IllegalStateException\n+  #255 = Utf8               Problem parsing line \\'\n+  #256 = Utf8               \\' in\n+  #257 = NameAndType        #168:#352     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #258 = Utf8               \\\"\n+  #259 = NameAndType        #326:#353     // substring:(I)Ljava/lang/String;\n+  #260 = NameAndType        #168:#172     // \"<init>\":(Z)V\n+  #261 = NameAndType        #126:#127     // folding:Z\n+  #262 = NameAndType        #354:#355     // toCharArray:()[C\n+  #263 = NameAndType        #356:#357     // isWhitespace:(C)Z\n+  #264 = NameAndType        #358:#359     // toLowerCase:(C)C\n+  #265 = NameAndType        #124:#121     // FOLDINGS:Ljava/util/Map;\n+  #266 = NameAndType        #360:#351     // containsKey:(Ljava/lang/Object;)Z\n+  #267 = Utf8               java/lang/Character\n+  #268 = NameAndType        #361:#362     // charValue:()C\n+  #269 = NameAndType        #335:#363     // append:(C)Ljava/lang/StringBuilder;\n+  #270 = Utf8               java/lang/String\n+  #271 = Utf8               org/apache/commons/codec/EncoderException\n+  #272 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+  #273 = NameAndType        #179:#166     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #274 = NameAndType        #185:#189     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #275 = NameAndType        #173:#166     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+  #276 = Utf8               java/util/LinkedHashSet\n+  #277 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+  #278 = NameAndType        #168:#364     // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #279 = NameAndType        #120:#121     // RULES:Ljava/util/Map;\n+  #280 = Class              #365          // java/util/Collections\n+  #281 = NameAndType        #366:#367     // emptyList:()Ljava/util/List;\n+  #282 = NameAndType        #368:#369     // iterator:()Ljava/util/Iterator;\n+  #283 = NameAndType        #370:#318     // hasNext:()Z\n+  #284 = NameAndType        #371:#372     // next:()Ljava/lang/Object;\n+  #285 = NameAndType        #373:#322     // matches:(Ljava/lang/String;)Z\n+  #286 = NameAndType        #374:#169     // clear:()V\n+  #287 = NameAndType        #375:#189     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #288 = NameAndType        #376:#377     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #289 = NameAndType        #378:#379     // processNextReplacement:(Ljava/lang/String;Z)V\n+  #290 = NameAndType        #380:#381     // addAll:(Ljava/util/Collection;)Z\n+  #291 = NameAndType        #382:#330     // getPatternLength:()I\n+  #292 = NameAndType        #383:#330     // size:()I\n+  #293 = NameAndType        #384:#169     // finish:()V\n+  #294 = Utf8               java/util/HashMap\n+  #295 = Utf8               java/util/Scanner\n+  #296 = Utf8               org/apache/commons/codec/language/dmrules.txt\n+  #297 = Class              #385          // org/apache/commons/codec/Resources\n+  #298 = NameAndType        #386:#387     // getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #299 = Utf8               org/apache/commons/codec/CharEncoding\n+  #300 = Utf8               UTF-8\n+  #301 = NameAndType        #168:#388     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #302 = NameAndType        #128:#129     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #303 = NameAndType        #389:#169     // close:()V\n+  #304 = Utf8               java/lang/Throwable\n+  #305 = NameAndType        #390:#391     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #306 = NameAndType        #392:#393     // entrySet:()Ljava/util/Set;\n+  #307 = Utf8               java/util/Map$Entry\n+  #308 = NameAndType        #394:#372     // getValue:()Ljava/lang/Object;\n+  #309 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #310 = NameAndType        #395:#396     // sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+  #311 = Utf8               java/lang/Object\n+  #312 = Utf8               org/apache/commons/codec/StringEncoder\n+  #313 = Utf8               java/util/Map\n+  #314 = Utf8               [C\n+  #315 = Utf8               java/util/Set\n+  #316 = Utf8               java/util/Iterator\n+  #317 = Utf8               hasNextLine\n+  #318 = Utf8               ()Z\n+  #319 = Utf8               nextLine\n+  #320 = Utf8               ()Ljava/lang/String;\n+  #321 = Utf8               endsWith\n+  #322 = Utf8               (Ljava/lang/String;)Z\n+  #323 = Utf8               startsWith\n+  #324 = Utf8               indexOf\n+  #325 = Utf8               (Ljava/lang/String;)I\n+  #326 = Utf8               substring\n+  #327 = Utf8               (II)Ljava/lang/String;\n+  #328 = Utf8               trim\n+  #329 = Utf8               length\n+  #330 = Utf8               ()I\n+  #331 = Utf8               contains\n+  #332 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #333 = Utf8               split\n+  #334 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #335 = Utf8               append\n+  #336 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #337 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #338 = Utf8               toString\n+  #339 = Utf8               (Ljava/lang/String;)V\n+  #340 = Utf8               charAt\n+  #341 = Utf8               (I)C\n+  #342 = Utf8               valueOf\n+  #343 = Utf8               (C)Ljava/lang/Character;\n+  #344 = Utf8               put\n+  #345 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #346 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #347 = Utf8               access$000\n+  #348 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #349 = Utf8               get\n+  #350 = Utf8               add\n+  #351 = Utf8               (Ljava/lang/Object;)Z\n+  #352 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #353 = Utf8               (I)Ljava/lang/String;\n+  #354 = Utf8               toCharArray\n+  #355 = Utf8               ()[C\n+  #356 = Utf8               isWhitespace\n+  #357 = Utf8               (C)Z\n+  #358 = Utf8               toLowerCase\n+  #359 = Utf8               (C)C\n+  #360 = Utf8               containsKey\n+  #361 = Utf8               charValue\n+  #362 = Utf8               ()C\n+  #363 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #364 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #365 = Utf8               java/util/Collections\n+  #366 = Utf8               emptyList\n+  #367 = Utf8               ()Ljava/util/List;\n+  #368 = Utf8               iterator\n+  #369 = Utf8               ()Ljava/util/Iterator;\n+  #370 = Utf8               hasNext\n+  #371 = Utf8               next\n+  #372 = Utf8               ()Ljava/lang/Object;\n+  #373 = Utf8               matches\n+  #374 = Utf8               clear\n+  #375 = Utf8               getReplacements\n+  #376 = Utf8               createBranch\n+  #377 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #378 = Utf8               processNextReplacement\n+  #379 = Utf8               (Ljava/lang/String;Z)V\n+  #380 = Utf8               addAll\n+  #381 = Utf8               (Ljava/util/Collection;)Z\n+  #382 = Utf8               getPatternLength\n+  #383 = Utf8               size\n+  #384 = Utf8               finish\n+  #385 = Utf8               org/apache/commons/codec/Resources\n+  #386 = Utf8               getInputStream\n+  #387 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #388 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #389 = Utf8               close\n+  #390 = Utf8               addSuppressed\n+  #391 = Utf8               (Ljava/lang/Throwable;)V\n+  #392 = Utf8               entrySet\n+  #393 = Utf8               ()Ljava/util/Set;\n+  #394 = Utf8               getValue\n+  #395 = Utf8               sort\n+  #396 = Utf8               (Ljava/util/List;Ljava/util/Comparator;)V\n {\n   private static final java.lang.String COMMENT = \"//\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String //\n \n   private static final java.lang.String DOUBLE_QUOTE = \"\\\"\";\n@@ -806,15 +794,15 @@\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int, class java/lang/String, class java/lang/String, int, class \"[Ljava/lang/String;\" ]\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 40\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int ]\n           stack = []\n         frame_type = 2 /* same */\n-    Signature: #169                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+    Signature: #164                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n \n   private static java.lang.String stripQuotes(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n@@ -1463,15 +1451,15 @@\n         frame_type = 250 /* chop */\n           offset_delta = 42\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n-      stack=4, locals=5, args_size=0\n+      stack=4, locals=3, args_size=0\n          0: new           #87                 // class java/util/HashMap\n          3: dup\n          4: invokespecial #88                 // Method java/util/HashMap.\"<init>\":()V\n          7: putstatic     #70                 // Field RULES:Ljava/util/Map;\n         10: new           #87                 // class java/util/HashMap\n         13: dup\n         14: invokespecial #88                 // Method java/util/HashMap.\"<init>\":()V\n@@ -1479,134 +1467,96 @@\n         20: new           #89                 // class java/util/Scanner\n         23: dup\n         24: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n         26: invokestatic  #91                 // Method org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n         29: ldc           #93                 // String UTF-8\n         31: invokespecial #94                 // Method java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n         34: astore_0\n-        35: aconst_null\n-        36: astore_1\n-        37: aload_0\n-        38: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n-        40: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-        43: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n-        46: invokestatic  #95                 // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-        49: aload_0\n-        50: ifnull        118\n-        53: aload_1\n-        54: ifnull        73\n-        57: aload_0\n-        58: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-        61: goto          118\n-        64: astore_2\n-        65: aload_1\n-        66: aload_2\n-        67: invokevirtual #98                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        70: goto          118\n-        73: aload_0\n-        74: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-        77: goto          118\n-        80: astore_2\n-        81: aload_2\n-        82: astore_1\n-        83: aload_2\n-        84: athrow\n-        85: astore_3\n-        86: aload_0\n-        87: ifnull        116\n-        90: aload_1\n-        91: ifnull        112\n-        94: aload_0\n-        95: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-        98: goto          116\n-       101: astore        4\n+        35: aload_0\n+        36: ldc           #90                 // String org/apache/commons/codec/language/dmrules.txt\n+        38: getstatic     #70                 // Field RULES:Ljava/util/Map;\n+        41: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n+        44: invokestatic  #95                 // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+        47: aload_0\n+        48: invokevirtual #96                 // Method java/util/Scanner.close:()V\n+        51: goto          70\n+        54: astore_1\n+        55: aload_0\n+        56: invokevirtual #96                 // Method java/util/Scanner.close:()V\n+        59: goto          68\n+        62: astore_2\n+        63: aload_1\n+        64: aload_2\n+        65: invokevirtual #98                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        68: aload_1\n+        69: athrow\n+        70: getstatic     #70                 // Field RULES:Ljava/util/Map;\n+        73: invokeinterface #99,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n+        78: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+        83: astore_0\n+        84: aload_0\n+        85: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        90: ifeq          127\n+        93: aload_0\n+        94: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        99: checkcast     #100                // class java/util/Map$Entry\n+       102: astore_1\n        103: aload_1\n-       104: aload         4\n-       106: invokevirtual #98                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-       109: goto          116\n-       112: aload_0\n-       113: invokevirtual #96                 // Method java/util/Scanner.close:()V\n-       116: aload_3\n-       117: athrow\n-       118: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-       121: invokeinterface #99,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;\n-       126: invokeinterface #78,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n-       131: astore_0\n-       132: aload_0\n-       133: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-       138: ifeq          175\n-       141: aload_0\n-       142: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       147: checkcast     #100                // class java/util/Map$Entry\n-       150: astore_1\n-       151: aload_1\n-       152: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-       157: checkcast     #37                 // class java/util/List\n-       160: astore_2\n-       161: aload_2\n-       162: new           #102                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-       165: dup\n-       166: invokespecial #103                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n-       169: invokestatic  #104                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n-       172: goto          132\n-       175: return\n+       104: invokeinterface #101,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+       109: checkcast     #37                 // class java/util/List\n+       112: astore_2\n+       113: aload_2\n+       114: new           #102                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+       117: dup\n+       118: invokespecial #103                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$1.\"<init>\":()V\n+       121: invokestatic  #104                // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V\n+       124: goto          84\n+       127: return\n       Exception table:\n          from    to  target type\n-            57    61    64   Class java/lang/Throwable\n-            37    49    80   Class java/lang/Throwable\n-            37    49    85   any\n-            94    98   101   Class java/lang/Throwable\n-            80    86    85   any\n+            35    47    54   Class java/lang/Throwable\n+            55    59    62   Class java/lang/Throwable\n       LineNumberTable:\n         line 222: 0\n         line 225: 10\n         line 228: 20\n-        line 229: 37\n-        line 230: 49\n-        line 228: 80\n-        line 230: 85\n-        line 233: 118\n-        line 234: 151\n-        line 235: 161\n-        line 241: 172\n-        line 242: 175\n+        line 229: 35\n+        line 230: 47\n+        line 228: 54\n+        line 233: 70\n+        line 234: 103\n+        line 235: 113\n+        line 241: 124\n+        line 242: 127\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           35      83     0 scanner   Ljava/util/Scanner;\n-          161      11     2 ruleList   Ljava/util/List;\n-          151      21     1  rule   Ljava/util/Map$Entry;\n+           35      35     0 scanner   Ljava/util/Scanner;\n+          113      11     2 ruleList   Ljava/util/List;\n+          103      21     1  rule   Ljava/util/Map$Entry;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          161      11     2 ruleList   Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n-          151      21     1  rule   Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n-      StackMapTable: number_of_entries = 10\n+          113      11     2 ruleList   Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n+          103      21     1  rule   Ljava/util/Map$Entry<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+      StackMapTable: number_of_entries = 6\n         frame_type = 255 /* full_frame */\n-          offset_delta = 64\n-          locals = [ class java/util/Scanner, class java/lang/Throwable ]\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 8 /* same */\n-        frame_type = 70 /* same_locals_1_stack_item */\n-          stack = [ class java/lang/Throwable ]\n-        frame_type = 68 /* same_locals_1_stack_item */\n+          offset_delta = 54\n+          locals = [ class java/util/Scanner ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n-          offset_delta = 15\n-          locals = [ class java/util/Scanner, class java/lang/Throwable, top, class java/lang/Throwable ]\n+          offset_delta = 7\n+          locals = [ class java/util/Scanner, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n-        frame_type = 10 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 255 /* full_frame */\n+        frame_type = 5 /* same */\n+        frame_type = 249 /* chop */\n           offset_delta = 1\n-          locals = []\n-          stack = []\n         frame_type = 252 /* append */\n           offset_delta = 13\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 42\n }\n SourceFile: \"DaitchMokotoffSoundex.java\"\n InnerClasses:\n   private static final #107= #33 of #3;   // Rule=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n   private static final #109= #67 of #3;   // Branch=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  static #102;                            // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  public static #218= #100 of #252;       // Entry=class java/util/Map$Entry of class java/util/Map\n+  #102;                                   // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  public static #210= #100 of #163;       // Entry=class java/util/Map$Entry of class java/util/Map\n"}]}
