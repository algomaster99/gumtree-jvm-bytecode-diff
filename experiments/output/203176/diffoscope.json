{"diffoscope-json-version": 1, "source1": "first/NewAttribute.class", "source2": "second/NewAttribute.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,40 +14,40 @@\n     private final String layout;\n     private byte[] contents;\n     private int codeOff;\n     private Label[] labels;\n     private ClassReader classReader;\n     private char[] buf;\n     \n-    public NewAttribute(final String type, final String layout, final int context) {\n-        super(type);\n+    public NewAttribute(final String s, final String layout, final int n) {\n+        super(s);\n         this.contextClass = false;\n         this.contextMethod = false;\n         this.contextField = false;\n         this.contextCode = false;\n         this.layout = layout;\n-        this.addContext(context);\n+        this.addContext(n);\n     }\n     \n-    public NewAttribute(final ClassReader classReader, final String type, final String layout, final byte[] contents, final char[] buf, final int codeOff, final Label[] labels) {\n-        super(type);\n+    public NewAttribute(final ClassReader classReader, final String s, final String layout, final byte[] contents, final char[] buf, final int codeOff, final Label[] labels) {\n+        super(s);\n         this.contextClass = false;\n         this.contextMethod = false;\n         this.contextField = false;\n         this.contextCode = false;\n         this.classReader = classReader;\n         this.contents = contents;\n         this.layout = layout;\n         this.codeOff = codeOff;\n         this.labels = labels;\n         this.buf = buf;\n     }\n     \n-    public void addContext(final int context) {\n-        switch (context) {\n+    public void addContext(final int n) {\n+        switch (n) {\n             case 0: {\n                 this.contextClass = true;\n                 break;\n             }\n             case 2: {\n                 this.contextMethod = true;\n                 break;\n@@ -87,22 +87,22 @@\n         return false;\n     }\n     \n     public boolean isCodeAttribute() {\n         return this.codeOff != -1;\n     }\n     \n-    protected Attribute read(final ClassReader cr, final int off, final int len, final char[] buf, final int codeOff, final Label[] labels) {\n-        final byte[] attributeContents = new byte[len];\n-        System.arraycopy(cr.b, off, attributeContents, 0, len);\n-        return new NewAttribute(cr, this.type, this.layout, attributeContents, buf, codeOff, labels);\n+    protected Attribute read(final ClassReader classReader, final int n, final int n2, final char[] array, final int n3, final Label[] array2) {\n+        final byte[] array3 = new byte[n2];\n+        System.arraycopy(classReader.b, n, array3, 0, n2);\n+        return new NewAttribute(classReader, this.type, this.layout, array3, array, n3, array2);\n     }\n     \n-    public boolean isUnknown(final int context) {\n-        switch (context) {\n+    public boolean isUnknown(final int n) {\n+        switch (n) {\n             case 0: {\n                 return !this.contextClass;\n             }\n             case 2: {\n                 return !this.contextMethod;\n             }\n             case 1: {\n@@ -113,27 +113,27 @@\n             }\n             default: {\n                 return false;\n             }\n         }\n     }\n     \n-    public String readUTF8(final int index) {\n-        return this.classReader.readUTF8(index, this.buf);\n+    public String readUTF8(final int n) {\n+        return this.classReader.readUTF8(n, this.buf);\n     }\n     \n-    public String readClass(final int index) {\n-        return this.classReader.readClass(index, this.buf);\n+    public String readClass(final int n) {\n+        return this.classReader.readClass(n, this.buf);\n     }\n     \n-    public Object readConst(final int index) {\n-        return this.classReader.readConst(index, this.buf);\n+    public Object readConst(final int n) {\n+        return this.classReader.readConst(n, this.buf);\n     }\n     \n     public byte[] getBytes() {\n         return this.contents;\n     }\n     \n-    public Label getLabel(final int index) {\n-        return this.labels[index];\n+    public Label getLabel(final int n) {\n+        return this.labels[n];\n     }\n }\n"}]}
