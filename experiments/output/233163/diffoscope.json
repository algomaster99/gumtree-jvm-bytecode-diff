{"diffoscope-json-version": 1, "source1": "first/PrefixedKeysIterator.class", "source2": "second/PrefixedKeysIterator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,17 +7,17 @@\n class PrefixedKeysIterator implements Iterator<String>\n {\n     private final Iterator<String> iterator;\n     private final String prefix;\n     private String nextElement;\n     private boolean nextElementSet;\n     \n-    public PrefixedKeysIterator(final Iterator<String> wrappedIterator, final String keyPrefix) {\n-        this.iterator = wrappedIterator;\n-        this.prefix = keyPrefix;\n+    public PrefixedKeysIterator(final Iterator<String> iterator, final String prefix) {\n+        this.iterator = iterator;\n+        this.prefix = prefix;\n     }\n     \n     @Override\n     public boolean hasNext() {\n         return this.nextElementSet || this.setNextElement();\n     }\n     \n@@ -36,16 +36,16 @@\n             throw new IllegalStateException(\"remove() cannot be called\");\n         }\n         this.iterator.remove();\n     }\n     \n     private boolean setNextElement() {\n         while (this.iterator.hasNext()) {\n-            final String key = (String)this.iterator.next();\n-            if (key.startsWith(this.prefix + \".\") || key.equals(this.prefix)) {\n-                this.nextElement = key;\n+            final String nextElement = (String)this.iterator.next();\n+            if (nextElement.startsWith(this.prefix + \".\") || nextElement.equals(this.prefix)) {\n+                this.nextElement = nextElement;\n                 return this.nextElementSet = true;\n             }\n         }\n         return false;\n     }\n }\n"}]}
