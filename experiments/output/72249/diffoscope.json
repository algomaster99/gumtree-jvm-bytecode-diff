{"diffoscope-json-version": 1, "source1": "first/DumpArchiveEntry$TYPE.class", "source2": "second/DumpArchiveEntry$TYPE.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,38 +10,40 @@\n     public static final enum TYPE BLKDEV;\n     public static final enum TYPE DIRECTORY;\n     public static final enum TYPE CHRDEV;\n     public static final enum TYPE FIFO;\n     public static final enum TYPE UNKNOWN;\n     private final int code;\n     \n-    public static TYPE valueOf(final String name) {\n-        return Enum.valueOf(TYPE.class, name);\n+    static {\n+        TYPE.WHITEOUT = new TYPE(\"WHITEOUT\", 0, 14);\n+        TYPE.SOCKET = new TYPE(\"SOCKET\", 1, 12);\n+        TYPE.LINK = new TYPE(\"LINK\", 2, 10);\n+        TYPE.FILE = new TYPE(\"FILE\", 3, 8);\n+        TYPE.BLKDEV = new TYPE(\"BLKDEV\", 4, 6);\n+        TYPE.DIRECTORY = new TYPE(\"DIRECTORY\", 5, 4);\n+        TYPE.CHRDEV = new TYPE(\"CHRDEV\", 6, 2);\n+        TYPE.FIFO = new TYPE(\"FIFO\", 7, 1);\n+        TYPE.UNKNOWN = new TYPE(\"UNKNOWN\", 8, 15);\n+        TYPE.ENUM$VALUES = new TYPE[] { TYPE.WHITEOUT, TYPE.SOCKET, TYPE.LINK, TYPE.FILE, TYPE.BLKDEV, TYPE.DIRECTORY, TYPE.CHRDEV, TYPE.FIFO, TYPE.UNKNOWN };\n     }\n     \n-    private TYPE(final int code) {\n+    private TYPE(final String name, final int ordinal, final int code) {\n         this.code = code;\n     }\n     \n     public static TYPE find(final int code) {\n         TYPE type = TYPE.UNKNOWN;\n-        for (final TYPE t : values()) {\n+        TYPE[] values;\n+        for (int length = (values = values()).length, i = 0; i < length; ++i) {\n+            final TYPE t = values[i];\n             if (code == t.code) {\n                 type = t;\n             }\n         }\n         return type;\n     }\n     \n-    static {\n-        TYPE.WHITEOUT = new TYPE(\"WHITEOUT\", 0, 14);\n-        TYPE.SOCKET = new TYPE(\"SOCKET\", 1, 12);\n-        TYPE.LINK = new TYPE(\"LINK\", 2, 10);\n-        TYPE.FILE = new TYPE(\"FILE\", 3, 8);\n-        TYPE.BLKDEV = new TYPE(\"BLKDEV\", 4, 6);\n-        TYPE.DIRECTORY = new TYPE(\"DIRECTORY\", 5, 4);\n-        TYPE.CHRDEV = new TYPE(\"CHRDEV\", 6, 2);\n-        TYPE.FIFO = new TYPE(\"FIFO\", 7, 1);\n-        TYPE.UNKNOWN = new TYPE(\"UNKNOWN\", 8, 15);\n-        TYPE.$VALUES = $values();\n+    public static TYPE valueOf(final String name) {\n+        return Enum.valueOf(TYPE.class, name);\n     }\n }\n"}]}
