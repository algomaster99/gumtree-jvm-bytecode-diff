{"diffoscope-json-version": 1, "source1": "first/AbstractFileFilter.class", "source2": "second/AbstractFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,56 +1,56 @@\n-  SHA-256 checksum 8dd26bfb6da95297f5d435f2c353e50e239be62a0eac7aead4f7c06e0ef082ea\n+  SHA-256 checksum 37a726077f52608b201e6fa5b7ba6cda39627f3e234334687e63347a4748e89c\n   Compiled from \"AbstractFileFilter.java\"\n public abstract class org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.file.PathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #21                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   super_class: #22                        // java/lang/Object\n   interfaces: 2, fields: 0, methods: 14, attributes: 1\n Constant pool:\n     #1 = Methodref          #22.#69       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #70.#71       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-    #3 = Fieldref           #70.#72       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+    #2 = Fieldref           #39.#70       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+    #3 = Fieldref           #39.#71       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n     #4 = String             #41           // file\n-    #5 = Methodref          #73.#74       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #6 = Methodref          #10.#75       // java/io/File.getParentFile:()Ljava/io/File;\n-    #7 = Methodref          #10.#76       // java/io/File.getName:()Ljava/lang/String;\n-    #8 = Methodref          #21.#77       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+    #5 = Methodref          #72.#73       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #6 = Methodref          #10.#74       // java/io/File.getParentFile:()Ljava/io/File;\n+    #7 = Methodref          #10.#75       // java/io/File.getName:()Ljava/lang/String;\n+    #8 = Methodref          #21.#76       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n     #9 = String             #45           // name\n-   #10 = Class              #78           // java/io/File\n-   #11 = Methodref          #10.#79       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #12 = Methodref          #21.#80       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n-   #13 = Methodref          #21.#81       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #14 = Methodref          #22.#82       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #15 = Methodref          #83.#84       // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #16 = Class              #85           // java/nio/file/Path\n-   #17 = Methodref          #21.#86       // org/apache/commons/io/filefilter/AbstractFileFilter.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #18 = Methodref          #21.#87       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #19 = Methodref          #21.#88       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #20 = Methodref          #21.#89       // org/apache/commons/io/filefilter/AbstractFileFilter.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #21 = Class              #90           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #22 = Class              #91           // java/lang/Object\n-   #23 = Class              #92           // org/apache/commons/io/filefilter/IOFileFilter\n-   #24 = Class              #93           // org/apache/commons/io/file/PathVisitor\n+   #10 = Class              #77           // java/io/File\n+   #11 = Methodref          #10.#78       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #12 = Methodref          #21.#79       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+   #13 = Methodref          #21.#80       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #14 = Methodref          #22.#81       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #15 = Methodref          #82.#83       // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+   #16 = Class              #84           // java/nio/file/Path\n+   #17 = Methodref          #21.#85       // org/apache/commons/io/filefilter/AbstractFileFilter.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #18 = Methodref          #21.#86       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #19 = Methodref          #21.#87       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #20 = Methodref          #21.#88       // org/apache/commons/io/filefilter/AbstractFileFilter.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #21 = Class              #89           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #22 = Class              #90           // java/lang/Object\n+   #23 = Class              #91           // org/apache/commons/io/filefilter/IOFileFilter\n+   #24 = Class              #92           // org/apache/commons/io/file/PathVisitor\n    #25 = Utf8               <init>\n    #26 = Utf8               ()V\n    #27 = Utf8               Code\n    #28 = Utf8               LineNumberTable\n    #29 = Utf8               LocalVariableTable\n    #30 = Utf8               this\n    #31 = Utf8               Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n    #32 = Utf8               toFileVisitResult\n    #33 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n    #34 = Utf8               accept\n    #35 = Utf8               Z\n    #36 = Utf8               path\n    #37 = Utf8               Ljava/nio/file/Path;\n    #38 = Utf8               StackMapTable\n-   #39 = Class              #94           // java/nio/file/FileVisitResult\n+   #39 = Class              #93           // java/nio/file/FileVisitResult\n    #40 = Utf8               (Ljava/io/File;)Z\n    #41 = Utf8               file\n    #42 = Utf8               Ljava/io/File;\n    #43 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n    #44 = Utf8               dir\n    #45 = Utf8               name\n    #46 = Utf8               Ljava/lang/String;\n@@ -59,68 +59,67 @@\n    #49 = Utf8               t\n    #50 = Utf8               Ljava/lang/Throwable;\n    #51 = Utf8               postVisitDirectory\n    #52 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n    #53 = Utf8               exc\n    #54 = Utf8               Ljava/io/IOException;\n    #55 = Utf8               Exceptions\n-   #56 = Class              #95           // java/io/IOException\n+   #56 = Class              #94           // java/io/IOException\n    #57 = Utf8               preVisitDirectory\n    #58 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #59 = Utf8               attributes\n    #60 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n    #61 = Utf8               toString\n    #62 = Utf8               ()Ljava/lang/String;\n    #63 = Utf8               visitFile\n    #64 = Utf8               visitFileFailed\n    #65 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n    #66 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #67 = Utf8               SourceFile\n    #68 = Utf8               AbstractFileFilter.java\n    #69 = NameAndType        #25:#26       // \"<init>\":()V\n-   #70 = Class              #94           // java/nio/file/FileVisitResult\n-   #71 = NameAndType        #96:#97       // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #72 = NameAndType        #98:#97       // TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #73 = Class              #99           // java/util/Objects\n-   #74 = NameAndType        #100:#101     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #75 = NameAndType        #102:#103     // getParentFile:()Ljava/io/File;\n-   #76 = NameAndType        #104:#62      // getName:()Ljava/lang/String;\n-   #77 = NameAndType        #34:#43       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #78 = Utf8               java/io/File\n-   #79 = NameAndType        #25:#105      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #80 = NameAndType        #34:#40       // accept:(Ljava/io/File;)Z\n-   #81 = NameAndType        #34:#58       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #82 = NameAndType        #106:#107     // getClass:()Ljava/lang/Class;\n-   #83 = Class              #108          // java/lang/Class\n-   #84 = NameAndType        #109:#62      // getSimpleName:()Ljava/lang/String;\n-   #85 = Utf8               java/nio/file/Path\n-   #86 = NameAndType        #51:#52       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #87 = NameAndType        #64:#52       // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #88 = NameAndType        #63:#58       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #89 = NameAndType        #57:#58       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #90 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #91 = Utf8               java/lang/Object\n-   #92 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-   #93 = Utf8               org/apache/commons/io/file/PathVisitor\n-   #94 = Utf8               java/nio/file/FileVisitResult\n-   #95 = Utf8               java/io/IOException\n-   #96 = Utf8               CONTINUE\n-   #97 = Utf8               Ljava/nio/file/FileVisitResult;\n-   #98 = Utf8               TERMINATE\n-   #99 = Utf8               java/util/Objects\n-  #100 = Utf8               requireNonNull\n-  #101 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #102 = Utf8               getParentFile\n-  #103 = Utf8               ()Ljava/io/File;\n-  #104 = Utf8               getName\n-  #105 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #106 = Utf8               getClass\n-  #107 = Utf8               ()Ljava/lang/Class;\n-  #108 = Utf8               java/lang/Class\n-  #109 = Utf8               getSimpleName\n+   #70 = NameAndType        #95:#96       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #71 = NameAndType        #97:#96       // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #72 = Class              #98           // java/util/Objects\n+   #73 = NameAndType        #99:#100      // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #74 = NameAndType        #101:#102     // getParentFile:()Ljava/io/File;\n+   #75 = NameAndType        #103:#62      // getName:()Ljava/lang/String;\n+   #76 = NameAndType        #34:#43       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #77 = Utf8               java/io/File\n+   #78 = NameAndType        #25:#104      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #79 = NameAndType        #34:#40       // accept:(Ljava/io/File;)Z\n+   #80 = NameAndType        #34:#58       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #81 = NameAndType        #105:#106     // getClass:()Ljava/lang/Class;\n+   #82 = Class              #107          // java/lang/Class\n+   #83 = NameAndType        #108:#62      // getSimpleName:()Ljava/lang/String;\n+   #84 = Utf8               java/nio/file/Path\n+   #85 = NameAndType        #51:#52       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #86 = NameAndType        #64:#52       // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #87 = NameAndType        #63:#58       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #88 = NameAndType        #57:#58       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #89 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #90 = Utf8               java/lang/Object\n+   #91 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #92 = Utf8               org/apache/commons/io/file/PathVisitor\n+   #93 = Utf8               java/nio/file/FileVisitResult\n+   #94 = Utf8               java/io/IOException\n+   #95 = Utf8               CONTINUE\n+   #96 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #97 = Utf8               TERMINATE\n+   #98 = Utf8               java/util/Objects\n+   #99 = Utf8               requireNonNull\n+  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #101 = Utf8               getParentFile\n+  #102 = Utf8               ()Ljava/io/File;\n+  #103 = Utf8               getName\n+  #104 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #105 = Utf8               getClass\n+  #106 = Utf8               ()Ljava/lang/Class;\n+  #107 = Utf8               java/lang/Class\n+  #108 = Utf8               getSimpleName\n {\n   public org.apache.commons.io.filefilter.AbstractFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
