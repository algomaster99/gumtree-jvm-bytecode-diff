{"diffoscope-json-version": 1, "source1": "first/ZipLong.class", "source2": "second/ZipLong.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,153 +1,153 @@\n-  SHA-256 checksum a6a5f47f40221c23fd3e8a521e885f840951c34ae283c8996e8c9ad6dde9ccc3\n+  SHA-256 checksum badf630250b62aafb2b980afeb687025336b4f5b3a34e6305e35fe0a189e70df\n   Compiled from \"ZipLong.java\"\n public final class org.apache.commons.compress.archivers.zip.ZipLong implements java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n   major version: 53\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #10                         // org/apache/commons/compress/archivers/zip/ZipLong\n-  super_class: #36                        // java/lang/Object\n+  super_class: #4                         // java/lang/Object\n   interfaces: 2, fields: 8, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Class              #94           // org/apache/commons/compress/archivers/zip/ZipConstants\n-    #2 = Methodref          #36.#95       // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #10.#96       // org/apache/commons/compress/archivers/zip/ZipLong.value:J\n-    #4 = Methodref          #10.#97       // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":([BI)V\n-    #5 = Methodref          #10.#98       // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-    #6 = Methodref          #10.#99       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-    #7 = Methodref          #10.#100      // org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V\n-    #8 = Methodref          #101.#102     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-    #9 = Methodref          #101.#103     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #10 = Class              #104          // org/apache/commons/compress/archivers/zip/ZipLong\n-   #11 = Methodref          #10.#105      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:()J\n-   #12 = Methodref          #36.#106      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #13 = Class              #107          // java/lang/CloneNotSupportedException\n-   #14 = Class              #108          // java/lang/RuntimeException\n-   #15 = Methodref          #14.#109      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #16 = InvokeDynamic      #0:#113       // #0:makeConcatWithConstants:(J)Ljava/lang/String;\n-   #17 = Long               33639248l\n-   #19 = Methodref          #10.#114      // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":(J)V\n-   #20 = Fieldref           #10.#115      // org/apache/commons/compress/archivers/zip/ZipLong.CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #21 = Long               67324752l\n-   #23 = Fieldref           #10.#116      // org/apache/commons/compress/archivers/zip/ZipLong.LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #24 = Long               134695760l\n-   #26 = Fieldref           #10.#117      // org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #27 = Long               4294967295l\n-   #29 = Fieldref           #10.#118      // org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #30 = Long               808471376l\n-   #32 = Fieldref           #10.#119      // org/apache/commons/compress/archivers/zip/ZipLong.SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #33 = Long               134630224l\n-   #35 = Fieldref           #10.#120      // org/apache/commons/compress/archivers/zip/ZipLong.AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #36 = Class              #121          // java/lang/Object\n-   #37 = Class              #122          // java/lang/Cloneable\n-   #38 = Class              #123          // java/io/Serializable\n-   #39 = Utf8               serialVersionUID\n-   #40 = Utf8               J\n-   #41 = Utf8               ConstantValue\n-   #42 = Long               1l\n-   #44 = Utf8               value\n-   #45 = Utf8               CFH_SIG\n-   #46 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-   #47 = Utf8               LFH_SIG\n-   #48 = Utf8               DD_SIG\n-   #49 = Utf8               ZIP64_MAGIC\n-   #50 = Utf8               SINGLE_SEGMENT_SPLIT_MARKER\n-   #51 = Utf8               AED_SIG\n-   #52 = Utf8               <init>\n-   #53 = Utf8               (J)V\n-   #54 = Utf8               Code\n-   #55 = Utf8               LineNumberTable\n-   #56 = Utf8               LocalVariableTable\n-   #57 = Utf8               this\n-   #58 = Utf8               (I)V\n-   #59 = Utf8               I\n-   #60 = Utf8               ([B)V\n-   #61 = Utf8               bytes\n-   #62 = Utf8               [B\n-   #63 = Utf8               ([BI)V\n-   #64 = Utf8               offset\n-   #65 = Utf8               getBytes\n-   #66 = Utf8               ()[B\n-   #67 = Utf8               getValue\n-   #68 = Utf8               ()J\n-   #69 = Utf8               getIntValue\n-   #70 = Utf8               ()I\n-   #71 = Utf8               (J)[B\n-   #72 = Utf8               result\n-   #73 = Utf8               putLong\n-   #74 = Utf8               (J[BI)V\n-   #75 = Utf8               buf\n-   #76 = Utf8               ([BI)J\n-   #77 = Utf8               ([B)J\n-   #78 = Utf8               equals\n-   #79 = Utf8               (Ljava/lang/Object;)Z\n-   #80 = Utf8               o\n-   #81 = Utf8               Ljava/lang/Object;\n-   #82 = Utf8               StackMapTable\n-   #83 = Utf8               hashCode\n-   #84 = Utf8               clone\n-   #85 = Utf8               ()Ljava/lang/Object;\n-   #86 = Utf8               cnfe\n-   #87 = Utf8               Ljava/lang/CloneNotSupportedException;\n-   #88 = Utf8               toString\n-   #89 = Utf8               ()Ljava/lang/String;\n-   #90 = Utf8               <clinit>\n-   #91 = Utf8               ()V\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               ZipLong.java\n-   #94 = Utf8               org/apache/commons/compress/archivers/zip/ZipConstants\n-   #95 = NameAndType        #52:#91       // \"<init>\":()V\n-   #96 = NameAndType        #44:#40       // value:J\n-   #97 = NameAndType        #52:#63       // \"<init>\":([BI)V\n-   #98 = NameAndType        #67:#76       // getValue:([BI)J\n-   #99 = NameAndType        #65:#71       // getBytes:(J)[B\n-  #100 = NameAndType        #73:#74       // putLong:(J[BI)V\n-  #101 = Class              #124          // org/apache/commons/compress/utils/ByteUtils\n-  #102 = NameAndType        #125:#126     // toLittleEndian:([BJII)V\n-  #103 = NameAndType        #127:#128     // fromLittleEndian:([BII)J\n-  #104 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #105 = NameAndType        #67:#68       // getValue:()J\n-  #106 = NameAndType        #84:#85       // clone:()Ljava/lang/Object;\n-  #107 = Utf8               java/lang/CloneNotSupportedException\n-  #108 = Utf8               java/lang/RuntimeException\n-  #109 = NameAndType        #52:#129      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #110 = Utf8               BootstrapMethods\n-  #111 = MethodHandle       6:#130        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #112 = String             #131          // ZipLong value: \\u0001\n-  #113 = NameAndType        #132:#133     // makeConcatWithConstants:(J)Ljava/lang/String;\n-  #114 = NameAndType        #52:#53       // \"<init>\":(J)V\n-  #115 = NameAndType        #45:#46       // CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #116 = NameAndType        #47:#46       // LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #117 = NameAndType        #48:#46       // DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #118 = NameAndType        #49:#46       // ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #119 = NameAndType        #50:#46       // SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #120 = NameAndType        #51:#46       // AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n-  #121 = Utf8               java/lang/Object\n-  #122 = Utf8               java/lang/Cloneable\n-  #123 = Utf8               java/io/Serializable\n-  #124 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #125 = Utf8               toLittleEndian\n-  #126 = Utf8               ([BJII)V\n-  #127 = Utf8               fromLittleEndian\n-  #128 = Utf8               ([BII)J\n-  #129 = Utf8               (Ljava/lang/Throwable;)V\n-  #130 = Methodref          #134.#135     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #131 = Utf8               ZipLong value: \\u0001\n-  #132 = Utf8               makeConcatWithConstants\n-  #133 = Utf8               (J)Ljava/lang/String;\n-  #134 = Class              #136          // java/lang/invoke/StringConcatFactory\n-  #135 = NameAndType        #132:#140     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #136 = Utf8               java/lang/invoke/StringConcatFactory\n-  #137 = Class              #142          // java/lang/invoke/MethodHandles$Lookup\n-  #138 = Utf8               Lookup\n-  #139 = Utf8               InnerClasses\n-  #140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #141 = Class              #143          // java/lang/invoke/MethodHandles\n-  #142 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #143 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/zip/ZipConstants\n+    #2 = Utf8               org/apache/commons/compress/archivers/zip/ZipConstants\n+    #3 = Methodref          #4.#5         // java/lang/Object.\"<init>\":()V\n+    #4 = Class              #6            // java/lang/Object\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/lang/Object\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = Fieldref           #10.#11       // org/apache/commons/compress/archivers/zip/ZipLong.value:J\n+   #10 = Class              #12           // org/apache/commons/compress/archivers/zip/ZipLong\n+   #11 = NameAndType        #13:#14       // value:J\n+   #12 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+   #13 = Utf8               value\n+   #14 = Utf8               J\n+   #15 = Methodref          #10.#16       // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":([BI)V\n+   #16 = NameAndType        #7:#17        // \"<init>\":([BI)V\n+   #17 = Utf8               ([BI)V\n+   #18 = Methodref          #10.#19       // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #19 = NameAndType        #20:#21       // getValue:([BI)J\n+   #20 = Utf8               getValue\n+   #21 = Utf8               ([BI)J\n+   #22 = Methodref          #10.#23       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #23 = NameAndType        #24:#25       // getBytes:(J)[B\n+   #24 = Utf8               getBytes\n+   #25 = Utf8               (J)[B\n+   #26 = Methodref          #10.#27       // org/apache/commons/compress/archivers/zip/ZipLong.putLong:(J[BI)V\n+   #27 = NameAndType        #28:#29       // putLong:(J[BI)V\n+   #28 = Utf8               putLong\n+   #29 = Utf8               (J[BI)V\n+   #30 = Methodref          #31.#32       // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+   #31 = Class              #33           // org/apache/commons/compress/utils/ByteUtils\n+   #32 = NameAndType        #34:#35       // toLittleEndian:([BJII)V\n+   #33 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+   #34 = Utf8               toLittleEndian\n+   #35 = Utf8               ([BJII)V\n+   #36 = Methodref          #31.#37       // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #37 = NameAndType        #38:#39       // fromLittleEndian:([BII)J\n+   #38 = Utf8               fromLittleEndian\n+   #39 = Utf8               ([BII)J\n+   #40 = Methodref          #10.#41       // org/apache/commons/compress/archivers/zip/ZipLong.getValue:()J\n+   #41 = NameAndType        #20:#42       // getValue:()J\n+   #42 = Utf8               ()J\n+   #43 = Methodref          #4.#44        // java/lang/Object.clone:()Ljava/lang/Object;\n+   #44 = NameAndType        #45:#46       // clone:()Ljava/lang/Object;\n+   #45 = Utf8               clone\n+   #46 = Utf8               ()Ljava/lang/Object;\n+   #47 = Class              #48           // java/lang/CloneNotSupportedException\n+   #48 = Utf8               java/lang/CloneNotSupportedException\n+   #49 = Class              #50           // java/lang/RuntimeException\n+   #50 = Utf8               java/lang/RuntimeException\n+   #51 = Methodref          #49.#52       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #52 = NameAndType        #7:#53        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #53 = Utf8               (Ljava/lang/Throwable;)V\n+   #54 = InvokeDynamic      #0:#55        // #0:makeConcatWithConstants:(J)Ljava/lang/String;\n+   #55 = NameAndType        #56:#57       // makeConcatWithConstants:(J)Ljava/lang/String;\n+   #56 = Utf8               makeConcatWithConstants\n+   #57 = Utf8               (J)Ljava/lang/String;\n+   #58 = Long               33639248l\n+   #60 = Methodref          #10.#61       // org/apache/commons/compress/archivers/zip/ZipLong.\"<init>\":(J)V\n+   #61 = NameAndType        #7:#62        // \"<init>\":(J)V\n+   #62 = Utf8               (J)V\n+   #63 = Fieldref           #10.#64       // org/apache/commons/compress/archivers/zip/ZipLong.CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #64 = NameAndType        #65:#66       // CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #65 = Utf8               CFH_SIG\n+   #66 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #67 = Long               67324752l\n+   #69 = Fieldref           #10.#70       // org/apache/commons/compress/archivers/zip/ZipLong.LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #70 = NameAndType        #71:#66       // LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #71 = Utf8               LFH_SIG\n+   #72 = Long               134695760l\n+   #74 = Fieldref           #10.#75       // org/apache/commons/compress/archivers/zip/ZipLong.DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #75 = NameAndType        #76:#66       // DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #76 = Utf8               DD_SIG\n+   #77 = Long               4294967295l\n+   #79 = Fieldref           #10.#80       // org/apache/commons/compress/archivers/zip/ZipLong.ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #80 = NameAndType        #81:#66       // ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #81 = Utf8               ZIP64_MAGIC\n+   #82 = Long               808471376l\n+   #84 = Fieldref           #10.#85       // org/apache/commons/compress/archivers/zip/ZipLong.SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #85 = NameAndType        #86:#66       // SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #86 = Utf8               SINGLE_SEGMENT_SPLIT_MARKER\n+   #87 = Long               134630224l\n+   #89 = Fieldref           #10.#90       // org/apache/commons/compress/archivers/zip/ZipLong.AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #90 = NameAndType        #91:#66       // AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+   #91 = Utf8               AED_SIG\n+   #92 = Class              #93           // java/lang/Cloneable\n+   #93 = Utf8               java/lang/Cloneable\n+   #94 = Class              #95           // java/io/Serializable\n+   #95 = Utf8               java/io/Serializable\n+   #96 = Utf8               serialVersionUID\n+   #97 = Utf8               ConstantValue\n+   #98 = Long               1l\n+  #100 = Utf8               Code\n+  #101 = Utf8               LineNumberTable\n+  #102 = Utf8               LocalVariableTable\n+  #103 = Utf8               this\n+  #104 = Utf8               (I)V\n+  #105 = Utf8               I\n+  #106 = Utf8               ([B)V\n+  #107 = Utf8               bytes\n+  #108 = Utf8               [B\n+  #109 = Utf8               offset\n+  #110 = Utf8               ()[B\n+  #111 = Utf8               getIntValue\n+  #112 = Utf8               ()I\n+  #113 = Utf8               result\n+  #114 = Utf8               buf\n+  #115 = Utf8               ([B)J\n+  #116 = Utf8               equals\n+  #117 = Utf8               (Ljava/lang/Object;)Z\n+  #118 = Utf8               o\n+  #119 = Utf8               Ljava/lang/Object;\n+  #120 = Utf8               StackMapTable\n+  #121 = Utf8               hashCode\n+  #122 = Utf8               cnfe\n+  #123 = Utf8               Ljava/lang/CloneNotSupportedException;\n+  #124 = Utf8               toString\n+  #125 = Utf8               ()Ljava/lang/String;\n+  #126 = Utf8               <clinit>\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               ZipLong.java\n+  #129 = Utf8               BootstrapMethods\n+  #130 = MethodHandle       6:#131        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #131 = Methodref          #132.#133     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #132 = Class              #134          // java/lang/invoke/StringConcatFactory\n+  #133 = NameAndType        #56:#135      // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #134 = Utf8               java/lang/invoke/StringConcatFactory\n+  #135 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #136 = String             #137          // ZipLong value: \\u0001\n+  #137 = Utf8               ZipLong value: \\u0001\n+  #138 = Utf8               InnerClasses\n+  #139 = Class              #140          // java/lang/invoke/MethodHandles$Lookup\n+  #140 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #141 = Class              #142          // java/lang/invoke/MethodHandles\n+  #142 = Utf8               java/lang/invoke/MethodHandles\n+  #143 = Utf8               Lookup\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   private final long value;\n@@ -180,18 +180,18 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipLong(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: lload_1\n-         6: putfield      #3                  // Field value:J\n+         6: putfield      #9                  // Field value:J\n          9: return\n       LineNumberTable:\n         line 80: 0\n         line 81: 4\n         line 82: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -200,19 +200,19 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipLong(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n          6: i2l\n-         7: putfield      #3                  // Field value:J\n+         7: putfield      #9                  // Field value:J\n         10: return\n       LineNumberTable:\n         line 89: 0\n         line 90: 4\n         line 91: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -223,15 +223,15 @@\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #4                  // Method \"<init>\":([BI)V\n+         3: invokespecial #15                 // Method \"<init>\":([BI)V\n          6: return\n       LineNumberTable:\n         line 98: 0\n         line 99: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n@@ -239,20 +239,20 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipLong(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n          6: iload_2\n-         7: invokestatic  #5                  // Method getValue:([BI)J\n-        10: putfield      #3                  // Field value:J\n+         7: invokestatic  #18                 // Method getValue:([BI)J\n+        10: putfield      #9                  // Field value:J\n         13: return\n       LineNumberTable:\n         line 106: 0\n         line 107: 4\n         line 108: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -262,44 +262,44 @@\n \n   public byte[] getBytes();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field value:J\n-         4: invokestatic  #6                  // Method getBytes:(J)[B\n+         1: getfield      #9                  // Field value:J\n+         4: invokestatic  #22                 // Method getBytes:(J)[B\n          7: areturn\n       LineNumberTable:\n         line 115: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n \n   public long getValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field value:J\n+         1: getfield      #9                  // Field value:J\n          4: lreturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n \n   public int getIntValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field value:J\n+         1: getfield      #9                  // Field value:J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 131: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n@@ -311,15 +311,15 @@\n       stack=4, locals=3, args_size=1\n          0: iconst_4\n          1: newarray       byte\n          3: astore_2\n          4: lload_0\n          5: aload_2\n          6: iconst_0\n-         7: invokestatic  #7                  // Method putLong:(J[BI)V\n+         7: invokestatic  #26                 // Method putLong:(J[BI)V\n         10: aload_2\n         11: areturn\n       LineNumberTable:\n         line 139: 0\n         line 140: 4\n         line 141: 10\n       LocalVariableTable:\n@@ -332,15 +332,15 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_2\n          1: lload_0\n          2: iload_3\n          3: iconst_4\n-         4: invokestatic  #8                  // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+         4: invokestatic  #30                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n          7: return\n       LineNumberTable:\n         line 154: 0\n         line 155: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 value   J\n@@ -349,18 +349,18 @@\n \n   public void putLong(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #3                  // Field value:J\n+         1: getfield      #9                  // Field value:J\n          4: aload_1\n          5: iload_2\n-         6: invokestatic  #7                  // Method putLong:(J[BI)V\n+         6: invokestatic  #26                 // Method putLong:(J[BI)V\n          9: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n@@ -371,15 +371,15 @@\n     descriptor: ([BI)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: iconst_4\n-         3: invokestatic  #9                  // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+         3: invokestatic  #36                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n          6: lreturn\n       LineNumberTable:\n         line 168: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 bytes   [B\n             0       7     1 offset   I\n@@ -387,15 +387,15 @@\n   public static long getValue(byte[]);\n     descriptor: ([B)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #5                  // Method getValue:([BI)J\n+         2: invokestatic  #18                 // Method getValue:([BI)J\n          5: lreturn\n       LineNumberTable:\n         line 177: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 bytes   [B\n \n@@ -408,18 +408,18 @@\n          1: ifnull        11\n          4: aload_1\n          5: instanceof    #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n          8: ifne          13\n         11: iconst_0\n         12: ireturn\n         13: aload_0\n-        14: getfield      #3                  // Field value:J\n+        14: getfield      #9                  // Field value:J\n         17: aload_1\n         18: checkcast     #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n-        21: invokevirtual #11                 // Method getValue:()J\n+        21: invokevirtual #40                 // Method getValue:()J\n         24: lcmp\n         25: ifne          32\n         28: iconst_1\n         29: goto          33\n         32: iconst_0\n         33: ireturn\n       LineNumberTable:\n@@ -439,36 +439,36 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field value:J\n+         1: getfield      #9                  // Field value:J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 199: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #12                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         1: invokespecial #43                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n          4: areturn\n          5: astore_1\n-         6: new           #14                 // class java/lang/RuntimeException\n+         6: new           #49                 // class java/lang/RuntimeException\n          9: dup\n         10: aload_1\n-        11: invokespecial #15                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        11: invokespecial #51                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         14: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 205: 0\n         line 206: 5\n@@ -483,67 +483,67 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field value:J\n-         4: invokedynamic #16,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;\n+         1: getfield      #9                  // Field value:J\n+         4: invokedynamic #54,  0             // InvokeDynamic #0:makeConcatWithConstants:(J)Ljava/lang/String;\n          9: areturn\n       LineNumberTable:\n         line 214: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/ZipLong;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n          3: dup\n-         4: ldc2_w        #17                 // long 33639248l\n-         7: invokespecial #19                 // Method \"<init>\":(J)V\n-        10: putstatic     #20                 // Field CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+         4: ldc2_w        #58                 // long 33639248l\n+         7: invokespecial #60                 // Method \"<init>\":(J)V\n+        10: putstatic     #63                 // Field CFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         13: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         16: dup\n-        17: ldc2_w        #21                 // long 67324752l\n-        20: invokespecial #19                 // Method \"<init>\":(J)V\n-        23: putstatic     #23                 // Field LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        17: ldc2_w        #67                 // long 67324752l\n+        20: invokespecial #60                 // Method \"<init>\":(J)V\n+        23: putstatic     #69                 // Field LFH_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         26: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         29: dup\n-        30: ldc2_w        #24                 // long 134695760l\n-        33: invokespecial #19                 // Method \"<init>\":(J)V\n-        36: putstatic     #26                 // Field DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        30: ldc2_w        #72                 // long 134695760l\n+        33: invokespecial #60                 // Method \"<init>\":(J)V\n+        36: putstatic     #74                 // Field DD_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         39: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         42: dup\n-        43: ldc2_w        #27                 // long 4294967295l\n-        46: invokespecial #19                 // Method \"<init>\":(J)V\n-        49: putstatic     #29                 // Field ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        43: ldc2_w        #77                 // long 4294967295l\n+        46: invokespecial #60                 // Method \"<init>\":(J)V\n+        49: putstatic     #79                 // Field ZIP64_MAGIC:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         52: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         55: dup\n-        56: ldc2_w        #30                 // long 808471376l\n-        59: invokespecial #19                 // Method \"<init>\":(J)V\n-        62: putstatic     #32                 // Field SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        56: ldc2_w        #82                 // long 808471376l\n+        59: invokespecial #60                 // Method \"<init>\":(J)V\n+        62: putstatic     #84                 // Field SINGLE_SEGMENT_SPLIT_MARKER:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         65: new           #10                 // class org/apache/commons/compress/archivers/zip/ZipLong\n         68: dup\n-        69: ldc2_w        #33                 // long 134630224l\n-        72: invokespecial #19                 // Method \"<init>\":(J)V\n-        75: putstatic     #35                 // Field AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n+        69: ldc2_w        #87                 // long 134630224l\n+        72: invokespecial #60                 // Method \"<init>\":(J)V\n+        75: putstatic     #89                 // Field AED_SIG:Lorg/apache/commons/compress/archivers/zip/ZipLong;\n         78: return\n       LineNumberTable:\n         line 37: 0\n         line 40: 13\n         line 50: 26\n         line 57: 39\n         line 67: 52\n         line 74: 65\n }\n SourceFile: \"ZipLong.java\"\n-InnerClasses:\n-  public static final #138= #137 of #141; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #111 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #130 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #112 ZipLong value: \\u0001\n+      #136 ZipLong value: \\u0001\n+InnerClasses:\n+  public static final #143= #139 of #141; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
