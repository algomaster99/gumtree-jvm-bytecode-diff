{"diffoscope-json-version": 1, "source1": "first/AnnotationElementValueGen.class", "source2": "second/AnnotationElementValueGen.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,35 +6,35 @@\n import java.io.DataOutputStream;\n import org.apache.bcel.classfile.AnnotationElementValue;\n \n public class AnnotationElementValueGen extends ElementValueGen\n {\n     private final AnnotationEntryGen a;\n     \n-    public AnnotationElementValueGen(final AnnotationEntryGen a, final ConstantPoolGen cpool) {\n-        super(64, cpool);\n+    public AnnotationElementValueGen(final AnnotationEntryGen a, final ConstantPoolGen constantPoolGen) {\n+        super(64, constantPoolGen);\n         this.a = a;\n     }\n     \n-    public AnnotationElementValueGen(final int type, final AnnotationEntryGen annotation, final ConstantPoolGen cpool) {\n-        super(type, cpool);\n-        if (type != 64) {\n-            throw new RuntimeException(\"Only element values of type annotation can be built with this ctor - type specified: \" + type);\n+    public AnnotationElementValueGen(final int i, final AnnotationEntryGen a, final ConstantPoolGen constantPoolGen) {\n+        super(i, constantPoolGen);\n+        if (i != 64) {\n+            throw new RuntimeException(\"Only element values of type annotation can be built with this ctor - type specified: \" + i);\n         }\n-        this.a = annotation;\n+        this.a = a;\n     }\n     \n-    public AnnotationElementValueGen(final AnnotationElementValue value, final ConstantPoolGen cpool, final boolean copyPoolEntries) {\n-        super(64, cpool);\n-        this.a = new AnnotationEntryGen(value.getAnnotationEntry(), cpool, copyPoolEntries);\n+    public AnnotationElementValueGen(final AnnotationElementValue annotationElementValue, final ConstantPoolGen constantPoolGen, final boolean b) {\n+        super(64, constantPoolGen);\n+        this.a = new AnnotationEntryGen(annotationElementValue.getAnnotationEntry(), constantPoolGen, b);\n     }\n     \n-    public void dump(final DataOutputStream dos) throws IOException {\n-        dos.writeByte(super.getElementValueType());\n-        this.a.dump(dos);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeByte(super.getElementValueType());\n+        this.a.dump(dataOutputStream);\n     }\n     \n     public String stringifyValue() {\n         throw new RuntimeException(\"Not implemented yet\");\n     }\n     \n     public ElementValue getElementValue() {\n"}]}
