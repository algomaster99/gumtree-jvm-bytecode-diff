{"diffoscope-json-version": 1, "source1": "first/XmlStreamReader.class", "source2": "second/XmlStreamReader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,18 +7,18 @@\n import java.net.URLConnection;\n import java.net.URL;\n import java.nio.file.Files;\n import java.nio.file.OpenOption;\n import java.nio.file.Path;\n import java.io.InputStreamReader;\n import java.io.BufferedInputStream;\n-import java.util.Objects;\n import java.io.File;\n import java.util.stream.Stream;\n import org.apache.commons.io.function.IOConsumer;\n+import java.util.Objects;\n import java.io.BufferedReader;\n import java.io.StringReader;\n import java.io.IOException;\n import org.apache.commons.io.IOUtils;\n import java.io.InputStream;\n import java.util.regex.Matcher;\n import java.util.Locale;\n@@ -100,15 +100,18 @@\n                 }\n                 throw new IOException(\"XML prolog or ROOT element not found on first \" + n + \" bytes\");\n             }\n             else if (n > 0) {\n                 inputStream.reset();\n                 final BufferedReader bufferedReader = new BufferedReader(new StringReader(s.substring(0, index + 1)));\n                 final StringBuilder input = new StringBuilder();\n-                IOConsumer.forEach((Stream)bufferedReader.lines(), input::append);\n+                final Stream<String> lines = bufferedReader.lines();\n+                final StringBuilder obj = input;\n+                Objects.requireNonNull(obj);\n+                IOConsumer.forEach((Stream)lines, obj::append);\n                 final Matcher matcher = XmlStreamReader.ENCODING_PATTERN.matcher(input);\n                 if (matcher.find()) {\n                     final String upperCase = matcher.group(1).toUpperCase(Locale.ROOT);\n                     substring = upperCase.substring(1, upperCase.length() - 1);\n                 }\n             }\n         }\n"}]}
