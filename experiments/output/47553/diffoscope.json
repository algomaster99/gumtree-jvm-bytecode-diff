{"diffoscope-json-version": 1, "source1": "first/FastDateParser$StrategyParser.class", "source2": "second/FastDateParser$StrategyParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,40 +10,40 @@\n     \n     StrategyParser(final FastDateParser this$0, final Calendar definingCalendar) {\n         this.this$0 = this$0;\n         this.definingCalendar = definingCalendar;\n     }\n     \n     FastDateParser.StrategyAndWidth getNextStrategy() {\n-        if (this.currentIdx >= FastDateParser.access$000(this.this$0).length()) {\n+        if (this.currentIdx >= FastDateParser.access$1(this.this$0).length()) {\n             return null;\n         }\n-        final char c = FastDateParser.access$000(this.this$0).charAt(this.currentIdx);\n-        if (FastDateParser.access$100(c)) {\n+        final char c = FastDateParser.access$1(this.this$0).charAt(this.currentIdx);\n+        if (FastDateParser.access$2(c)) {\n             return this.letterPattern(c);\n         }\n         return this.literal();\n     }\n     \n     private FastDateParser.StrategyAndWidth letterPattern(final char c) {\n         final int begin = this.currentIdx;\n-        while (++this.currentIdx < FastDateParser.access$000(this.this$0).length() && FastDateParser.access$000(this.this$0).charAt(this.currentIdx) == c) {}\n+        while (++this.currentIdx < FastDateParser.access$1(this.this$0).length() && FastDateParser.access$1(this.this$0).charAt(this.currentIdx) == c) {}\n         final int width = this.currentIdx - begin;\n-        return new FastDateParser.StrategyAndWidth(FastDateParser.access$200(this.this$0, c, width, this.definingCalendar), width);\n+        return new FastDateParser.StrategyAndWidth(FastDateParser.access$3(this.this$0, c, width, this.definingCalendar), width);\n     }\n     \n     private FastDateParser.StrategyAndWidth literal() {\n         boolean activeQuote = false;\n         final StringBuilder sb = new StringBuilder();\n-        while (this.currentIdx < FastDateParser.access$000(this.this$0).length()) {\n-            final char c = FastDateParser.access$000(this.this$0).charAt(this.currentIdx);\n-            if (!activeQuote && FastDateParser.access$100(c)) {\n+        while (this.currentIdx < FastDateParser.access$1(this.this$0).length()) {\n+            final char c = FastDateParser.access$1(this.this$0).charAt(this.currentIdx);\n+            if (!activeQuote && FastDateParser.access$2(c)) {\n                 break;\n             }\n-            if (c == '\\'' && (++this.currentIdx == FastDateParser.access$000(this.this$0).length() || FastDateParser.access$000(this.this$0).charAt(this.currentIdx) != '\\'')) {\n+            if (c == '\\'' && (++this.currentIdx == FastDateParser.access$1(this.this$0).length() || FastDateParser.access$1(this.this$0).charAt(this.currentIdx) != '\\'')) {\n                 activeQuote = !activeQuote;\n             }\n             else {\n                 ++this.currentIdx;\n                 sb.append(c);\n             }\n         }\n"}]}
