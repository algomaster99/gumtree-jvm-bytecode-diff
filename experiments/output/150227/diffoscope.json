{"diffoscope-json-version": 1, "source1": "first/CountingOutputStream.class", "source2": "second/CountingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,81 +1,81 @@\n-  SHA-256 checksum 75d8f53d86c1adf6cbe4948156492e46a1f8cad063ce3846dca1cf5ae41d9c13\n+  SHA-256 checksum 8b0dec4d659a12d524c547e5696d068adb86ac7bc7b4d9384466a212e7c85acb\n   Compiled from \"CountingOutputStream.java\"\n public class org.apache.commons.compress.utils.CountingOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/compress/utils/CountingOutputStream\n-  super_class: #2                         // java/io/FilterOutputStream\n+  this_class: #1                          // org/apache/commons/compress/utils/CountingOutputStream\n+  super_class: #3                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Class              #4             // java/io/FilterOutputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+   #1 = Class              #2             // org/apache/commons/compress/utils/CountingOutputStream\n+   #2 = Utf8               org/apache/commons/compress/utils/CountingOutputStream\n+   #3 = Class              #4             // java/io/FilterOutputStream\n    #4 = Utf8               java/io/FilterOutputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Ljava/io/OutputStream;)V\n-   #7 = Long               -1l\n-   #9 = Fieldref           #10.#11        // org/apache/commons/compress/utils/CountingOutputStream.bytesWritten:J\n-  #10 = Class              #12            // org/apache/commons/compress/utils/CountingOutputStream\n-  #11 = NameAndType        #13:#14        // bytesWritten:J\n-  #12 = Utf8               org/apache/commons/compress/utils/CountingOutputStream\n-  #13 = Utf8               bytesWritten\n-  #14 = Utf8               J\n-  #15 = Methodref          #10.#16        // org/apache/commons/compress/utils/CountingOutputStream.write:([BII)V\n-  #16 = NameAndType        #17:#18        // write:([BII)V\n-  #17 = Utf8               write\n-  #18 = Utf8               ([BII)V\n-  #19 = Fieldref           #10.#20        // org/apache/commons/compress/utils/CountingOutputStream.out:Ljava/io/OutputStream;\n-  #20 = NameAndType        #21:#22        // out:Ljava/io/OutputStream;\n-  #21 = Utf8               out\n-  #22 = Utf8               Ljava/io/OutputStream;\n-  #23 = Methodref          #24.#16        // java/io/OutputStream.write:([BII)V\n-  #24 = Class              #25            // java/io/OutputStream\n-  #25 = Utf8               java/io/OutputStream\n-  #26 = Methodref          #10.#27        // org/apache/commons/compress/utils/CountingOutputStream.count:(J)V\n-  #27 = NameAndType        #28:#29        // count:(J)V\n-  #28 = Utf8               count\n-  #29 = Utf8               (J)V\n-  #30 = Methodref          #24.#31        // java/io/OutputStream.write:(I)V\n-  #31 = NameAndType        #17:#32        // write:(I)V\n-  #32 = Utf8               (I)V\n-  #33 = Utf8               Code\n-  #34 = Utf8               LineNumberTable\n-  #35 = Utf8               LocalVariableTable\n-  #36 = Utf8               this\n-  #37 = Utf8               Lorg/apache/commons/compress/utils/CountingOutputStream;\n-  #38 = Utf8               written\n-  #39 = Utf8               StackMapTable\n-  #40 = Utf8               getBytesWritten\n-  #41 = Utf8               ()J\n-  #42 = Utf8               ([B)V\n-  #43 = Utf8               b\n-  #44 = Utf8               [B\n-  #45 = Utf8               Exceptions\n-  #46 = Class              #47            // java/io/IOException\n-  #47 = Utf8               java/io/IOException\n-  #48 = Utf8               off\n-  #49 = Utf8               I\n-  #50 = Utf8               len\n+   #5 = Utf8               bytesWritten\n+   #6 = Utf8               J\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/OutputStream;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/OutputStream;)V\n+  #12 = Utf8               LineNumberTable\n+  #13 = Utf8               LocalVariableTable\n+  #14 = Utf8               this\n+  #15 = Utf8               Lorg/apache/commons/compress/utils/CountingOutputStream;\n+  #16 = Utf8               out\n+  #17 = Utf8               Ljava/io/OutputStream;\n+  #18 = Utf8               count\n+  #19 = Utf8               (J)V\n+  #20 = Long               -1l\n+  #22 = Fieldref           #1.#23         // org/apache/commons/compress/utils/CountingOutputStream.bytesWritten:J\n+  #23 = NameAndType        #5:#6          // bytesWritten:J\n+  #24 = Utf8               written\n+  #25 = Utf8               StackMapTable\n+  #26 = Utf8               getBytesWritten\n+  #27 = Utf8               ()J\n+  #28 = Utf8               write\n+  #29 = Utf8               ([B)V\n+  #30 = Utf8               Exceptions\n+  #31 = Class              #32            // java/io/IOException\n+  #32 = Utf8               java/io/IOException\n+  #33 = Methodref          #1.#34         // org/apache/commons/compress/utils/CountingOutputStream.write:([BII)V\n+  #34 = NameAndType        #28:#35        // write:([BII)V\n+  #35 = Utf8               ([BII)V\n+  #36 = Utf8               b\n+  #37 = Utf8               [B\n+  #38 = Fieldref           #1.#39         // org/apache/commons/compress/utils/CountingOutputStream.out:Ljava/io/OutputStream;\n+  #39 = NameAndType        #16:#17        // out:Ljava/io/OutputStream;\n+  #40 = Methodref          #41.#34        // java/io/OutputStream.write:([BII)V\n+  #41 = Class              #42            // java/io/OutputStream\n+  #42 = Utf8               java/io/OutputStream\n+  #43 = Methodref          #1.#44         // org/apache/commons/compress/utils/CountingOutputStream.count:(J)V\n+  #44 = NameAndType        #18:#19        // count:(J)V\n+  #45 = Utf8               off\n+  #46 = Utf8               I\n+  #47 = Utf8               len\n+  #48 = Utf8               (I)V\n+  #49 = Methodref          #41.#50        // java/io/OutputStream.write:(I)V\n+  #50 = NameAndType        #28:#48        // write:(I)V\n   #51 = Utf8               SourceFile\n   #52 = Utf8               CountingOutputStream.java\n {\n   private long bytesWritten;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.compress.utils.CountingOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #10                 // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: return\n       LineNumberTable:\n         line 34: 0\n         line 35: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/utils/CountingOutputStream;\n@@ -83,23 +83,23 @@\n \n   protected void count(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: lload_1\n-         1: ldc2_w        #7                  // long -1l\n+         1: ldc2_w        #20                 // long -1l\n          4: lcmp\n          5: ifeq          18\n          8: aload_0\n          9: dup\n-        10: getfield      #9                  // Field bytesWritten:J\n+        10: getfield      #22                 // Field bytesWritten:J\n         13: lload_1\n         14: ladd\n-        15: putfield      #9                  // Field bytesWritten:J\n+        15: putfield      #22                 // Field bytesWritten:J\n         18: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 8\n         line 47: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -110,91 +110,91 @@\n \n   public long getBytesWritten();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field bytesWritten:J\n+         1: getfield      #22                 // Field bytesWritten:J\n          4: lreturn\n       LineNumberTable:\n         line 53: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/utils/CountingOutputStream;\n \n   public void write(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #15                 // Method write:([BII)V\n+         5: invokevirtual #33                 // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 57: 0\n         line 58: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/utils/CountingOutputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #19                 // Field out:Ljava/io/OutputStream;\n+         1: getfield      #38                 // Field out:Ljava/io/OutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #23                 // Method java/io/OutputStream.write:([BII)V\n+         7: invokevirtual #40                 // Method java/io/OutputStream.write:([BII)V\n         10: aload_0\n         11: iload_3\n         12: i2l\n-        13: invokevirtual #26                 // Method count:(J)V\n+        13: invokevirtual #43                 // Method count:(J)V\n         16: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 10\n         line 64: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/utils/CountingOutputStream;\n             0      17     1     b   [B\n             0      17     2   off   I\n             0      17     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #19                 // Field out:Ljava/io/OutputStream;\n+         1: getfield      #38                 // Field out:Ljava/io/OutputStream;\n          4: iload_1\n-         5: invokevirtual #30                 // Method java/io/OutputStream.write:(I)V\n+         5: invokevirtual #49                 // Method java/io/OutputStream.write:(I)V\n          8: aload_0\n          9: lconst_1\n-        10: invokevirtual #26                 // Method count:(J)V\n+        10: invokevirtual #43                 // Method count:(J)V\n         13: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 8\n         line 70: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/utils/CountingOutputStream;\n             0      14     1     b   I\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"CountingOutputStream.java\"\n"}]}
