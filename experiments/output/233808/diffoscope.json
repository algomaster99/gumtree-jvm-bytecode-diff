{"diffoscope-json-version": 1, "source1": "first/FileLocator.class", "source2": "second/FileLocator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,34 +10,34 @@\n     private final String encoding;\n     private final String fileName;\n     private final FileSystem fileSystem;\n     private final FileLocationStrategy locationStrategy;\n     private final URL sourceURL;\n     private final URLConnectionOptions urlConnectionOptions;\n     \n-    public FileLocator(final FileLocator.FileLocatorBuilder builder) {\n-        this.fileName = FileLocator.FileLocatorBuilder.access$000(builder);\n-        this.basePath = FileLocator.FileLocatorBuilder.access$100(builder);\n-        this.sourceURL = FileLocator.FileLocatorBuilder.access$200(builder);\n-        this.urlConnectionOptions = FileLocator.FileLocatorBuilder.access$300(builder);\n-        this.encoding = FileLocator.FileLocatorBuilder.access$400(builder);\n-        this.fileSystem = FileLocator.FileLocatorBuilder.access$500(builder);\n-        this.locationStrategy = FileLocator.FileLocatorBuilder.access$600(builder);\n+    public FileLocator(final FileLocator.FileLocatorBuilder fileLocatorBuilder) {\n+        this.fileName = FileLocator.FileLocatorBuilder.access$000(fileLocatorBuilder);\n+        this.basePath = FileLocator.FileLocatorBuilder.access$100(fileLocatorBuilder);\n+        this.sourceURL = FileLocator.FileLocatorBuilder.access$200(fileLocatorBuilder);\n+        this.urlConnectionOptions = FileLocator.FileLocatorBuilder.access$300(fileLocatorBuilder);\n+        this.encoding = FileLocator.FileLocatorBuilder.access$400(fileLocatorBuilder);\n+        this.fileSystem = FileLocator.FileLocatorBuilder.access$500(fileLocatorBuilder);\n+        this.locationStrategy = FileLocator.FileLocatorBuilder.access$600(fileLocatorBuilder);\n     }\n     \n     @Override\n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n+    public boolean equals(final Object o) {\n+        if (this == o) {\n             return true;\n         }\n-        if (!(obj instanceof FileLocator)) {\n+        if (!(o instanceof FileLocator)) {\n             return false;\n         }\n-        final FileLocator other = (FileLocator)obj;\n-        return Objects.equals(this.basePath, other.basePath) && Objects.equals(this.encoding, other.encoding) && Objects.equals(this.fileName, other.fileName) && Objects.equals(this.fileSystem, other.fileSystem) && Objects.equals(this.locationStrategy, other.locationStrategy) && Objects.equals(this.sourceURL, other.sourceURL) && Objects.equals(this.urlConnectionOptions, other.urlConnectionOptions);\n+        final FileLocator fileLocator = (FileLocator)o;\n+        return Objects.equals(this.basePath, fileLocator.basePath) && Objects.equals(this.encoding, fileLocator.encoding) && Objects.equals(this.fileName, fileLocator.fileName) && Objects.equals(this.fileSystem, fileLocator.fileSystem) && Objects.equals(this.locationStrategy, fileLocator.locationStrategy) && Objects.equals(this.sourceURL, fileLocator.sourceURL) && Objects.equals(this.urlConnectionOptions, fileLocator.urlConnectionOptions);\n     }\n     \n     public String getBasePath() {\n         return this.basePath;\n     }\n     \n     public String getEncoding() {\n"}]}
