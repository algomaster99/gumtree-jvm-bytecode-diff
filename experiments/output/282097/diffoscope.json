{"diffoscope-json-version": 1, "source1": "first/UncheckedBufferedReader.class", "source2": "second/UncheckedBufferedReader.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,46 +10,46 @@\n \n public final class UncheckedBufferedReader extends BufferedReader\n {\n     public static UncheckedBufferedReader.Builder builder() {\n         return new UncheckedBufferedReader.Builder();\n     }\n     \n-    private UncheckedBufferedReader(final Reader reader, final int bufferSize) {\n-        super(reader, bufferSize);\n+    private UncheckedBufferedReader(final Reader in, final int sz) {\n+        super(in, sz);\n     }\n     \n     @Override\n     public void close() throws UncheckedIOException {\n         Uncheck.run(() -> super.close());\n     }\n     \n     @Override\n-    public void mark(final int readAheadLimit) throws UncheckedIOException {\n-        Uncheck.accept(x$0 -> super.mark(x$0), (Object)Integer.valueOf(readAheadLimit));\n+    public void mark(final int i) throws UncheckedIOException {\n+        Uncheck.accept(readAheadLimit -> super.mark(readAheadLimit), (Object)Integer.valueOf(i));\n     }\n     \n     @Override\n     public int read() throws UncheckedIOException {\n         return (int)Uncheck.get(() -> Integer.valueOf(super.read()));\n     }\n     \n     @Override\n-    public int read(final char[] cbuf) throws UncheckedIOException {\n-        return (int)Uncheck.apply(x$0 -> Integer.valueOf(super.read(x$0)), (Object)cbuf);\n+    public int read(final char[] array) throws UncheckedIOException {\n+        return (int)Uncheck.apply(cbuf -> Integer.valueOf(super.read(cbuf)), (Object)array);\n     }\n     \n     @Override\n-    public int read(final char[] cbuf, final int off, final int len) throws UncheckedIOException {\n-        return (int)Uncheck.apply((x$0, x$1, x$2) -> Integer.valueOf(super.read(x$0, x$1, x$2)), (Object)cbuf, (Object)Integer.valueOf(off), (Object)Integer.valueOf(len));\n+    public int read(final char[] array, final int i, final int j) throws UncheckedIOException {\n+        return (int)Uncheck.apply((cbuf, off, len) -> Integer.valueOf(super.read(cbuf, off, len)), (Object)array, (Object)Integer.valueOf(i), (Object)Integer.valueOf(j));\n     }\n     \n     @Override\n-    public int read(final CharBuffer target) throws UncheckedIOException {\n-        return (int)Uncheck.apply(x$0 -> Integer.valueOf(super.read(x$0)), (Object)target);\n+    public int read(final CharBuffer charBuffer) throws UncheckedIOException {\n+        return (int)Uncheck.apply(target -> Integer.valueOf(super.read(target)), (Object)charBuffer);\n     }\n     \n     @Override\n     public String readLine() throws UncheckedIOException {\n         return (String)Uncheck.get(() -> super.readLine());\n     }\n     \n@@ -60,11 +60,11 @@\n     \n     @Override\n     public void reset() throws UncheckedIOException {\n         Uncheck.run(() -> super.reset());\n     }\n     \n     @Override\n-    public long skip(final long n) throws UncheckedIOException {\n-        return (long)Uncheck.apply(x$0 -> Long.valueOf(super.skip(x$0)), (Object)Long.valueOf(n));\n+    public long skip(final long l) throws UncheckedIOException {\n+        return (long)Uncheck.apply(n -> Long.valueOf(super.skip(n)), (Object)Long.valueOf(l));\n     }\n }\n"}]}
