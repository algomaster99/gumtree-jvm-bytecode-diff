{"diffoscope-json-version": 1, "source1": "first/FileExtensionConfigurationBuilderProvider.class", "source2": "second/FileExtensionConfigurationBuilderProvider.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,140 @@\n-  SHA-256 checksum 7dd3f77e5fcf9007cc7da936675ae31e2ec0d710c9f764d19e6203853c6d47f8\n+  SHA-256 checksum 3c42c027342cdb2f078f1ac6dd19e479e20319f1c6b1c5c43d8f1b56b1c266c7\n   Compiled from \"FileExtensionConfigurationBuilderProvider.java\"\n public class org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider extends org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #17                         // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-  super_class: #2                         // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n+  this_class: #1                          // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+  super_class: #3                         // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n   interfaces: 0, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-    #2 = Class              #4            // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n-    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+    #1 = Class              #2            // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+    #2 = Utf8               org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+    #3 = Class              #4            // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n     #4 = Utf8               org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n-    #5 = Utf8               <init>\n-    #6 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-    #7 = Class              #8            // java/lang/IllegalArgumentException\n-    #8 = Utf8               java/lang/IllegalArgumentException\n-    #9 = String             #10           // Matching configuration class must not be null!\n-   #10 = Utf8               Matching configuration class must not be null!\n-   #11 = Methodref          #7.#12        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = NameAndType        #5:#13        // \"<init>\":(Ljava/lang/String;)V\n-   #13 = Utf8               (Ljava/lang/String;)V\n-   #14 = String             #15           // File extension must not be null!\n-   #15 = Utf8               File extension must not be null!\n-   #16 = Fieldref           #17.#18       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.matchingConfigurationClass:Ljava/lang/String;\n-   #17 = Class              #19           // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #18 = NameAndType        #20:#21       // matchingConfigurationClass:Ljava/lang/String;\n-   #19 = Utf8               org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #20 = Utf8               matchingConfigurationClass\n-   #21 = Utf8               Ljava/lang/String;\n-   #22 = Fieldref           #17.#23       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extension:Ljava/lang/String;\n-   #23 = NameAndType        #24:#21       // extension:Ljava/lang/String;\n-   #24 = Utf8               extension\n-   #25 = Methodref          #17.#26       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-   #26 = NameAndType        #27:#28       // fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-   #27 = Utf8               fetchCurrentFileName\n-   #28 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;\n-   #29 = Methodref          #17.#30       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #30 = NameAndType        #31:#32       // extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #31 = Utf8               extractExtension\n-   #32 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #33 = Methodref          #17.#34       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getExtension:()Ljava/lang/String;\n-   #34 = NameAndType        #35:#36       // getExtension:()Ljava/lang/String;\n-   #35 = Utf8               getExtension\n-   #36 = Utf8               ()Ljava/lang/String;\n-   #37 = Methodref          #38.#39       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #38 = Class              #40           // java/lang/String\n-   #39 = NameAndType        #41:#42       // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #40 = Utf8               java/lang/String\n-   #41 = Utf8               equalsIgnoreCase\n-   #42 = Utf8               (Ljava/lang/String;)Z\n-   #43 = Methodref          #17.#44       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getMatchingConfigurationClass:()Ljava/lang/String;\n-   #44 = NameAndType        #45:#36       // getMatchingConfigurationClass:()Ljava/lang/String;\n-   #45 = Utf8               getMatchingConfigurationClass\n-   #46 = Methodref          #17.#47       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getConfigurationClass:()Ljava/lang/String;\n-   #47 = NameAndType        #48:#36       // getConfigurationClass:()Ljava/lang/String;\n-   #48 = Utf8               getConfigurationClass\n-   #49 = InterfaceMethodref #50.#51       // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #50 = Class              #52           // java/util/Collection\n-   #51 = NameAndType        #53:#54       // iterator:()Ljava/util/Iterator;\n-   #52 = Utf8               java/util/Collection\n-   #53 = Utf8               iterator\n-   #54 = Utf8               ()Ljava/util/Iterator;\n-   #55 = InterfaceMethodref #56.#57       // java/util/Iterator.hasNext:()Z\n-   #56 = Class              #58           // java/util/Iterator\n-   #57 = NameAndType        #59:#60       // hasNext:()Z\n-   #58 = Utf8               java/util/Iterator\n-   #59 = Utf8               hasNext\n-   #60 = Utf8               ()Z\n-   #61 = InterfaceMethodref #56.#62       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #62 = NameAndType        #63:#64       // next:()Ljava/lang/Object;\n-   #63 = Utf8               next\n-   #64 = Utf8               ()Ljava/lang/Object;\n-   #65 = Class              #66           // org/apache/commons/configuration2/builder/BuilderParameters\n-   #66 = Utf8               org/apache/commons/configuration2/builder/BuilderParameters\n-   #67 = Class              #68           // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-   #68 = Utf8               org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-   #69 = Methodref          #67.#70       // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-   #70 = NameAndType        #71:#72       // getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-   #71 = Utf8               getFileHandler\n-   #72 = Utf8               ()Lorg/apache/commons/configuration2/io/FileHandler;\n-   #73 = Methodref          #74.#75       // org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n-   #74 = Class              #76           // org/apache/commons/configuration2/io/FileHandler\n-   #75 = NameAndType        #77:#36       // getFileName:()Ljava/lang/String;\n-   #76 = Utf8               org/apache/commons/configuration2/io/FileHandler\n-   #77 = Utf8               getFileName\n-   #78 = Methodref          #38.#79       // java/lang/String.lastIndexOf:(I)I\n-   #79 = NameAndType        #80:#81       // lastIndexOf:(I)I\n-   #80 = Utf8               lastIndexOf\n-   #81 = Utf8               (I)I\n-   #82 = Methodref          #38.#83       // java/lang/String.substring:(I)Ljava/lang/String;\n-   #83 = NameAndType        #84:#85       // substring:(I)Ljava/lang/String;\n-   #84 = Utf8               substring\n-   #85 = Utf8               (I)Ljava/lang/String;\n-   #86 = Utf8               EXT_SEPARATOR\n-   #87 = Utf8               C\n-   #88 = Utf8               ConstantValue\n-   #89 = Integer            46\n-   #90 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-   #91 = Utf8               Code\n-   #92 = Utf8               LineNumberTable\n-   #93 = Utf8               LocalVariableTable\n-   #94 = Utf8               this\n-   #95 = Utf8               Lorg/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider;\n-   #96 = Utf8               bldrCls\n-   #97 = Utf8               reloadBldrCls\n-   #98 = Utf8               matchingConfigCls\n-   #99 = Utf8               defConfigClass\n-  #100 = Utf8               ext\n-  #101 = Utf8               paramCls\n-  #102 = Utf8               Ljava/util/Collection;\n-  #103 = Utf8               LocalVariableTypeTable\n-  #104 = Utf8               Ljava/util/Collection<Ljava/lang/String;>;\n-  #105 = Utf8               StackMapTable\n-  #106 = Utf8               Signature\n-  #107 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n-  #108 = Utf8               determineConfigurationClass\n-  #109 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n-  #110 = Utf8               decl\n-  #111 = Utf8               Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;\n-  #112 = Utf8               params\n-  #113 = Utf8               currentExt\n-  #114 = Utf8               Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;\n-  #115 = Utf8               Exceptions\n-  #116 = Class              #117          // org/apache/commons/configuration2/ex/ConfigurationException\n-  #117 = Utf8               org/apache/commons/configuration2/ex/ConfigurationException\n-  #118 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n-  #119 = Utf8               fp\n-  #120 = Utf8               Lorg/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl;\n-  #121 = Utf8               p\n-  #122 = Utf8               Lorg/apache/commons/configuration2/builder/BuilderParameters;\n-  #123 = Utf8               (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+    #5 = Utf8               EXT_SEPARATOR\n+    #6 = Utf8               C\n+    #7 = Utf8               ConstantValue\n+    #8 = Integer            46\n+    #9 = Utf8               matchingConfigurationClass\n+   #10 = Utf8               Ljava/lang/String;\n+   #11 = Utf8               extension\n+   #12 = Utf8               <init>\n+   #13 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #14 = Utf8               Signature\n+   #15 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n+   #16 = Utf8               Code\n+   #17 = Methodref          #3.#18        // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #18 = NameAndType        #12:#19       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #19 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #20 = Class              #21           // java/lang/IllegalArgumentException\n+   #21 = Utf8               java/lang/IllegalArgumentException\n+   #22 = String             #23           // Matching configuration class must not be null!\n+   #23 = Utf8               Matching configuration class must not be null!\n+   #24 = Methodref          #20.#25       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #25 = NameAndType        #12:#26       // \"<init>\":(Ljava/lang/String;)V\n+   #26 = Utf8               (Ljava/lang/String;)V\n+   #27 = String             #28           // File extension must not be null!\n+   #28 = Utf8               File extension must not be null!\n+   #29 = Fieldref           #1.#30        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.matchingConfigurationClass:Ljava/lang/String;\n+   #30 = NameAndType        #9:#10        // matchingConfigurationClass:Ljava/lang/String;\n+   #31 = Fieldref           #1.#32        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extension:Ljava/lang/String;\n+   #32 = NameAndType        #11:#10       // extension:Ljava/lang/String;\n+   #33 = Utf8               LineNumberTable\n+   #34 = Utf8               LocalVariableTable\n+   #35 = Utf8               this\n+   #36 = Utf8               Lorg/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider;\n+   #37 = Utf8               bldrCls\n+   #38 = Utf8               reloadBldrCls\n+   #39 = Utf8               matchingConfigCls\n+   #40 = Utf8               defConfigClass\n+   #41 = Utf8               ext\n+   #42 = Utf8               paramCls\n+   #43 = Utf8               Ljava/util/Collection;\n+   #44 = Utf8               LocalVariableTypeTable\n+   #45 = Utf8               Ljava/util/Collection<Ljava/lang/String;>;\n+   #46 = Utf8               StackMapTable\n+   #47 = Class              #48           // java/lang/String\n+   #48 = Utf8               java/lang/String\n+   #49 = Class              #50           // java/util/Collection\n+   #50 = Utf8               java/util/Collection\n+   #51 = Utf8               getMatchingConfigurationClass\n+   #52 = Utf8               ()Ljava/lang/String;\n+   #53 = Utf8               getExtension\n+   #54 = Utf8               determineConfigurationClass\n+   #55 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n+   #56 = Utf8               Exceptions\n+   #57 = Class              #58           // org/apache/commons/configuration2/ex/ConfigurationException\n+   #58 = Utf8               org/apache/commons/configuration2/ex/ConfigurationException\n+   #59 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+   #60 = Methodref          #1.#61        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+   #61 = NameAndType        #62:#63       // fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+   #62 = Utf8               fetchCurrentFileName\n+   #63 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;\n+   #64 = Methodref          #1.#65        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #65 = NameAndType        #66:#67       // extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #66 = Utf8               extractExtension\n+   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #68 = Methodref          #1.#69        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getExtension:()Ljava/lang/String;\n+   #69 = NameAndType        #53:#52       // getExtension:()Ljava/lang/String;\n+   #70 = Methodref          #47.#71       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #71 = NameAndType        #72:#73       // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #72 = Utf8               equalsIgnoreCase\n+   #73 = Utf8               (Ljava/lang/String;)Z\n+   #74 = Methodref          #1.#75        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getMatchingConfigurationClass:()Ljava/lang/String;\n+   #75 = NameAndType        #51:#52       // getMatchingConfigurationClass:()Ljava/lang/String;\n+   #76 = Methodref          #1.#77        // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getConfigurationClass:()Ljava/lang/String;\n+   #77 = NameAndType        #78:#52       // getConfigurationClass:()Ljava/lang/String;\n+   #78 = Utf8               getConfigurationClass\n+   #79 = Utf8               decl\n+   #80 = Utf8               Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;\n+   #81 = Utf8               params\n+   #82 = Utf8               currentExt\n+   #83 = Utf8               Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;\n+   #84 = Utf8               (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+   #85 = InterfaceMethodref #49.#86       // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #86 = NameAndType        #87:#88       // iterator:()Ljava/util/Iterator;\n+   #87 = Utf8               iterator\n+   #88 = Utf8               ()Ljava/util/Iterator;\n+   #89 = InterfaceMethodref #90.#92       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #90 = Class              #91           // java/util/Iterator\n+   #91 = Utf8               java/util/Iterator\n+   #92 = NameAndType        #93:#94       // next:()Ljava/lang/Object;\n+   #93 = Utf8               next\n+   #94 = Utf8               ()Ljava/lang/Object;\n+   #95 = Class              #96           // org/apache/commons/configuration2/builder/BuilderParameters\n+   #96 = Utf8               org/apache/commons/configuration2/builder/BuilderParameters\n+   #97 = Class              #98           // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+   #98 = Utf8               org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+   #99 = Methodref          #97.#100      // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+  #100 = NameAndType        #101:#102     // getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+  #101 = Utf8               getFileHandler\n+  #102 = Utf8               ()Lorg/apache/commons/configuration2/io/FileHandler;\n+  #103 = Methodref          #104.#106     // org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n+  #104 = Class              #105          // org/apache/commons/configuration2/io/FileHandler\n+  #105 = Utf8               org/apache/commons/configuration2/io/FileHandler\n+  #106 = NameAndType        #107:#52      // getFileName:()Ljava/lang/String;\n+  #107 = Utf8               getFileName\n+  #108 = InterfaceMethodref #90.#109      // java/util/Iterator.hasNext:()Z\n+  #109 = NameAndType        #110:#111     // hasNext:()Z\n+  #110 = Utf8               hasNext\n+  #111 = Utf8               ()Z\n+  #112 = Utf8               p\n+  #113 = Utf8               Lorg/apache/commons/configuration2/builder/BuilderParameters;\n+  #114 = Utf8               fp\n+  #115 = Utf8               Lorg/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl;\n+  #116 = Methodref          #47.#117      // java/lang/String.lastIndexOf:(I)I\n+  #117 = NameAndType        #118:#119     // lastIndexOf:(I)I\n+  #118 = Utf8               lastIndexOf\n+  #119 = Utf8               (I)I\n+  #120 = Methodref          #47.#121      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #121 = NameAndType        #122:#123     // substring:(I)Ljava/lang/String;\n+  #122 = Utf8               substring\n+  #123 = Utf8               (I)Ljava/lang/String;\n   #124 = Utf8               fileName\n   #125 = Utf8               pos\n   #126 = Utf8               I\n   #127 = Utf8               SourceFile\n   #128 = Utf8               FileExtensionConfigurationBuilderProvider.java\n {\n   private static final char EXT_SEPARATOR = '.';\n@@ -149,42 +149,43 @@\n   private final java.lang.String extension;\n     descriptor: Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.util.Collection<java.lang.String>);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #15                          // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n     Code:\n       stack=5, locals=7, args_size=7\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload         4\n          5: aload         6\n-         7: invokespecial #1                  // Method org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+         7: invokespecial #17                 // Method org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n         10: aload_3\n         11: ifnonnull     24\n-        14: new           #7                  // class java/lang/IllegalArgumentException\n+        14: new           #20                 // class java/lang/IllegalArgumentException\n         17: dup\n-        18: ldc           #9                  // String Matching configuration class must not be null!\n-        20: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        18: ldc           #22                 // String Matching configuration class must not be null!\n+        20: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: aload         5\n         26: ifnonnull     39\n-        29: new           #7                  // class java/lang/IllegalArgumentException\n+        29: new           #20                 // class java/lang/IllegalArgumentException\n         32: dup\n-        33: ldc           #14                 // String File extension must not be null!\n-        35: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        33: ldc           #27                 // String File extension must not be null!\n+        35: invokespecial #24                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: aload_3\n-        41: putfield      #16                 // Field matchingConfigurationClass:Ljava/lang/String;\n+        41: putfield      #29                 // Field matchingConfigurationClass:Ljava/lang/String;\n         44: aload_0\n         45: aload         5\n-        47: putfield      #22                 // Field extension:Ljava/lang/String;\n+        47: putfield      #31                 // Field extension:Ljava/lang/String;\n         50: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 10\n         line 75: 14\n         line 77: 24\n         line 78: 29\n@@ -205,63 +206,65 @@\n             0      51     6 paramCls   Ljava/util/Collection<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 24\n           locals = [ class org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/util/Collection ]\n           stack = []\n         frame_type = 14 /* same */\n-    Signature: #107                         // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n \n   public java.lang.String getMatchingConfigurationClass();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field matchingConfigurationClass:Ljava/lang/String;\n+         1: getfield      #29                 // Field matchingConfigurationClass:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 92: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider;\n \n   public java.lang.String getExtension();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field extension:Ljava/lang/String;\n+         1: getfield      #31                 // Field extension:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 101: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider;\n \n   protected java.lang.String determineConfigurationClass(org.apache.commons.configuration2.builder.combined.ConfigurationDeclaration, java.util.Collection<org.apache.commons.configuration2.builder.BuilderParameters>) throws org.apache.commons.configuration2.ex.ConfigurationException;\n     descriptor: (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws org.apache.commons.configuration2.ex.ConfigurationException\n+    Signature: #59                          // (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n     Code:\n       stack=2, locals=4, args_size=3\n          0: aload_2\n-         1: invokestatic  #25                 // Method fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-         4: invokestatic  #29                 // Method extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+         1: invokestatic  #60                 // Method fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+         4: invokestatic  #64                 // Method extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n          7: astore_3\n          8: aload_0\n-         9: invokevirtual #33                 // Method getExtension:()Ljava/lang/String;\n+         9: invokevirtual #68                 // Method getExtension:()Ljava/lang/String;\n         12: aload_3\n-        13: invokevirtual #37                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        13: invokevirtual #70                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         16: ifeq          26\n         19: aload_0\n-        20: invokevirtual #43                 // Method getMatchingConfigurationClass:()Ljava/lang/String;\n+        20: invokevirtual #74                 // Method getMatchingConfigurationClass:()Ljava/lang/String;\n         23: goto          30\n         26: aload_0\n-        27: invokevirtual #46                 // Method getConfigurationClass:()Ljava/lang/String;\n+        27: invokevirtual #76                 // Method getConfigurationClass:()Ljava/lang/String;\n         30: areturn\n       LineNumberTable:\n         line 112: 0\n         line 113: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider;\n@@ -273,92 +276,88 @@\n             0      31     2 params   Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ class java/lang/String ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n-    Exceptions:\n-      throws org.apache.commons.configuration2.ex.ConfigurationException\n-    Signature: #118                         // (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n \n   private static java.lang.String fetchCurrentFileName(java.util.Collection<org.apache.commons.configuration2.builder.BuilderParameters>);\n     descriptor: (Ljava/util/Collection;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Signature: #84                          // (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n     Code:\n       stack=1, locals=4, args_size=1\n          0: aload_0\n-         1: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n-         6: astore_1\n-         7: aload_1\n-         8: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        13: ifeq          49\n-        16: aload_1\n-        17: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        22: checkcast     #65                 // class org/apache/commons/configuration2/builder/BuilderParameters\n-        25: astore_2\n-        26: aload_2\n-        27: instanceof    #67                 // class org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-        30: ifeq          46\n-        33: aload_2\n-        34: checkcast     #67                 // class org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-        37: astore_3\n-        38: aload_3\n-        39: invokevirtual #69                 // Method org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-        42: invokevirtual #73                 // Method org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n-        45: areturn\n-        46: goto          7\n+         1: invokeinterface #85,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+         6: astore_2\n+         7: goto          40\n+        10: aload_2\n+        11: invokeinterface #89,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        16: checkcast     #95                 // class org/apache/commons/configuration2/builder/BuilderParameters\n+        19: astore_1\n+        20: aload_1\n+        21: instanceof    #97                 // class org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+        24: ifeq          40\n+        27: aload_1\n+        28: checkcast     #97                 // class org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+        31: astore_3\n+        32: aload_3\n+        33: invokevirtual #99                 // Method org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+        36: invokevirtual #103                // Method org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n+        39: areturn\n+        40: aload_2\n+        41: invokeinterface #108,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        46: ifne          10\n         49: aconst_null\n         50: areturn\n       LineNumberTable:\n         line 123: 0\n-        line 124: 26\n-        line 125: 33\n-        line 126: 38\n-        line 128: 46\n+        line 124: 20\n+        line 125: 27\n+        line 126: 32\n+        line 123: 40\n         line 129: 49\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           38       8     3    fp   Lorg/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl;\n-           26      20     2     p   Lorg/apache/commons/configuration2/builder/BuilderParameters;\n             0      51     0 params   Ljava/util/Collection;\n+           20      20     1     p   Lorg/apache/commons/configuration2/builder/BuilderParameters;\n+           32       8     3    fp   Lorg/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      51     0 params   Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;\n-      StackMapTable: number_of_entries = 3\n-        frame_type = 252 /* append */\n-          offset_delta = 7\n-          locals = [ class java/util/Iterator ]\n-        frame_type = 38 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 2\n-    Signature: #123                         // (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+      StackMapTable: number_of_entries = 2\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 10\n+          locals = [ class java/util/Collection, top, class java/util/Iterator ]\n+          stack = []\n+        frame_type = 29 /* same */\n \n   private static java.lang.String extractExtension(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: bipush        46\n-         9: invokevirtual #78                 // Method java/lang/String.lastIndexOf:(I)I\n+         9: invokevirtual #116                // Method java/lang/String.lastIndexOf:(I)I\n         12: istore_1\n         13: iload_1\n         14: ifge          21\n         17: aconst_null\n         18: goto          28\n         21: aload_0\n         22: iload_1\n         23: iconst_1\n         24: iadd\n-        25: invokevirtual #82                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        25: invokevirtual #120                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         28: areturn\n       LineNumberTable:\n         line 139: 0\n         line 140: 4\n         line 143: 6\n         line 144: 13\n       LocalVariableTable:\n"}]}
