{"diffoscope-json-version": 1, "source1": "first/IllegalInstantiationCheck.class", "source2": "second/IllegalInstantiationCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -47,34 +47,34 @@\n     public void beginTree(final DetailAST detailAST) {\n         this.pkgName = null;\n         this.imports.clear();\n         this.instantiations.clear();\n         this.classNames.clear();\n     }\n     \n-    public void visitToken(final DetailAST detailAST) {\n-        switch (detailAST.getType()) {\n+    public void visitToken(final DetailAST obj) {\n+        switch (obj.getType()) {\n             case 136: {\n-                this.processLiteralNew(detailAST);\n+                this.processLiteralNew(obj);\n                 break;\n             }\n             case 16: {\n-                this.processPackageDef(detailAST);\n+                this.processPackageDef(obj);\n                 break;\n             }\n             case 30: {\n-                this.processImport(detailAST);\n+                this.processImport(obj);\n                 break;\n             }\n             case 14: {\n-                this.processClassDef(detailAST);\n+                this.processClassDef(obj);\n                 break;\n             }\n             default: {\n-                throw new IllegalArgumentException(\"Unknown type \" + detailAST);\n+                throw new IllegalArgumentException(\"Unknown type \" + String.valueOf((Object)obj));\n             }\n         }\n     }\n     \n     public void finishTree(final DetailAST detailAST) {\n         this.instantiations.forEach(this::postProcessLiteralNew);\n     }\n"}]}
