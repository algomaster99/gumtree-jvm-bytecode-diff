{"diffoscope-json-version": 1, "source1": "first/TelnetOutputStream.class", "source2": "second/TelnetOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,89 +1,89 @@\n-  SHA-256 checksum d997e23b3f6efa2abdf1914f6bb68b3c1b420a7e9ea7e0e546678357cb200c95\n+  SHA-256 checksum 9ec348ccc236d957539d8c6ec36d70e1787801d90194bf671f11b708f15ff443\n   Compiled from \"TelnetOutputStream.java\"\n final class org.apache.commons.net.telnet.TelnetOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #1                          // org/apache/commons/net/telnet/TelnetOutputStream\n-  super_class: #14                        // java/io/OutputStream\n+  super_class: #4                         // java/io/OutputStream\n   interfaces: 0, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #49            // org/apache/commons/net/telnet/TelnetOutputStream\n-   #2 = Methodref          #14.#50        // java/io/OutputStream.\"<init>\":()V\n-   #3 = Fieldref           #1.#51         // org/apache/commons/net/telnet/TelnetOutputStream.convertCRtoCRLF:Z\n-   #4 = Fieldref           #1.#52         // org/apache/commons/net/telnet/TelnetOutputStream.lastWasCR:Z\n-   #5 = Fieldref           #1.#53         // org/apache/commons/net/telnet/TelnetOutputStream.client:Lorg/apache/commons/net/telnet/TelnetClient;\n-   #6 = Class              #54            // org/apache/commons/net/telnet/TelnetOption\n-   #7 = Methodref          #55.#56        // org/apache/commons/net/telnet/TelnetClient.requestedWont:(I)Z\n-   #8 = Methodref          #55.#57        // org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n-   #9 = Class              #58            // org/apache/commons/net/telnet/TelnetCommand\n-  #10 = Methodref          #1.#59         // org/apache/commons/net/telnet/TelnetOutputStream.write:([BII)V\n-  #11 = Methodref          #1.#60         // org/apache/commons/net/telnet/TelnetOutputStream.write:(I)V\n-  #12 = Methodref          #55.#61        // org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n-  #13 = Methodref          #55.#62        // org/apache/commons/net/telnet/TelnetClient.closeOutputStream:()V\n-  #14 = Class              #63            // java/io/OutputStream\n-  #15 = Utf8               client\n-  #16 = Utf8               Lorg/apache/commons/net/telnet/TelnetClient;\n-  #17 = Utf8               convertCRtoCRLF\n-  #18 = Utf8               Z\n-  #19 = Utf8               ConstantValue\n-  #20 = Integer            1\n-  #21 = Utf8               lastWasCR\n-  #22 = Utf8               <init>\n-  #23 = Utf8               (Lorg/apache/commons/net/telnet/TelnetClient;)V\n-  #24 = Utf8               Code\n-  #25 = Utf8               LineNumberTable\n-  #26 = Utf8               LocalVariableTable\n-  #27 = Utf8               this\n-  #28 = Utf8               Lorg/apache/commons/net/telnet/TelnetOutputStream;\n-  #29 = Utf8               write\n-  #30 = Utf8               (I)V\n-  #31 = Utf8               ch\n-  #32 = Utf8               I\n-  #33 = Utf8               StackMapTable\n-  #34 = Class              #64            // java/lang/Object\n-  #35 = Class              #65            // java/lang/Throwable\n-  #36 = Utf8               Exceptions\n-  #37 = Class              #66            // java/io/IOException\n-  #38 = Utf8               ([B)V\n-  #39 = Utf8               buffer\n-  #40 = Utf8               [B\n-  #41 = Utf8               ([BII)V\n-  #42 = Utf8               offset\n-  #43 = Utf8               length\n-  #44 = Utf8               flush\n-  #45 = Utf8               ()V\n-  #46 = Utf8               close\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               TelnetOutputStream.java\n-  #49 = Utf8               org/apache/commons/net/telnet/TelnetOutputStream\n-  #50 = NameAndType        #22:#45        // \"<init>\":()V\n-  #51 = NameAndType        #17:#18        // convertCRtoCRLF:Z\n-  #52 = NameAndType        #21:#18        // lastWasCR:Z\n-  #53 = NameAndType        #15:#16        // client:Lorg/apache/commons/net/telnet/TelnetClient;\n-  #54 = Utf8               org/apache/commons/net/telnet/TelnetOption\n-  #55 = Class              #67            // org/apache/commons/net/telnet/TelnetClient\n-  #56 = NameAndType        #68:#69        // requestedWont:(I)Z\n-  #57 = NameAndType        #70:#30        // sendByte:(I)V\n-  #58 = Utf8               org/apache/commons/net/telnet/TelnetCommand\n-  #59 = NameAndType        #29:#41        // write:([BII)V\n-  #60 = NameAndType        #29:#30        // write:(I)V\n-  #61 = NameAndType        #71:#45        // flushOutputStream:()V\n-  #62 = NameAndType        #72:#45        // closeOutputStream:()V\n-  #63 = Utf8               java/io/OutputStream\n-  #64 = Utf8               java/lang/Object\n-  #65 = Utf8               java/lang/Throwable\n-  #66 = Utf8               java/io/IOException\n-  #67 = Utf8               org/apache/commons/net/telnet/TelnetClient\n-  #68 = Utf8               requestedWont\n-  #69 = Utf8               (I)Z\n-  #70 = Utf8               sendByte\n-  #71 = Utf8               flushOutputStream\n-  #72 = Utf8               closeOutputStream\n+   #1 = Class              #2             // org/apache/commons/net/telnet/TelnetOutputStream\n+   #2 = Utf8               org/apache/commons/net/telnet/TelnetOutputStream\n+   #3 = Methodref          #4.#5          // java/io/OutputStream.\"<init>\":()V\n+   #4 = Class              #6             // java/io/OutputStream\n+   #5 = NameAndType        #7:#8          // \"<init>\":()V\n+   #6 = Utf8               java/io/OutputStream\n+   #7 = Utf8               <init>\n+   #8 = Utf8               ()V\n+   #9 = Fieldref           #1.#10         // org/apache/commons/net/telnet/TelnetOutputStream.convertCRtoCRLF:Z\n+  #10 = NameAndType        #11:#12        // convertCRtoCRLF:Z\n+  #11 = Utf8               convertCRtoCRLF\n+  #12 = Utf8               Z\n+  #13 = Fieldref           #1.#14         // org/apache/commons/net/telnet/TelnetOutputStream.lastWasCR:Z\n+  #14 = NameAndType        #15:#12        // lastWasCR:Z\n+  #15 = Utf8               lastWasCR\n+  #16 = Fieldref           #1.#17         // org/apache/commons/net/telnet/TelnetOutputStream.client:Lorg/apache/commons/net/telnet/TelnetClient;\n+  #17 = NameAndType        #18:#19        // client:Lorg/apache/commons/net/telnet/TelnetClient;\n+  #18 = Utf8               client\n+  #19 = Utf8               Lorg/apache/commons/net/telnet/TelnetClient;\n+  #20 = Class              #21            // org/apache/commons/net/telnet/TelnetOption\n+  #21 = Utf8               org/apache/commons/net/telnet/TelnetOption\n+  #22 = Methodref          #23.#24        // org/apache/commons/net/telnet/TelnetClient.requestedWont:(I)Z\n+  #23 = Class              #25            // org/apache/commons/net/telnet/TelnetClient\n+  #24 = NameAndType        #26:#27        // requestedWont:(I)Z\n+  #25 = Utf8               org/apache/commons/net/telnet/TelnetClient\n+  #26 = Utf8               requestedWont\n+  #27 = Utf8               (I)Z\n+  #28 = Methodref          #23.#29        // org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+  #29 = NameAndType        #30:#31        // sendByte:(I)V\n+  #30 = Utf8               sendByte\n+  #31 = Utf8               (I)V\n+  #32 = Class              #33            // org/apache/commons/net/telnet/TelnetCommand\n+  #33 = Utf8               org/apache/commons/net/telnet/TelnetCommand\n+  #34 = Methodref          #1.#35         // org/apache/commons/net/telnet/TelnetOutputStream.write:([BII)V\n+  #35 = NameAndType        #36:#37        // write:([BII)V\n+  #36 = Utf8               write\n+  #37 = Utf8               ([BII)V\n+  #38 = Methodref          #1.#39         // org/apache/commons/net/telnet/TelnetOutputStream.write:(I)V\n+  #39 = NameAndType        #36:#31        // write:(I)V\n+  #40 = Methodref          #23.#41        // org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+  #41 = NameAndType        #42:#8         // flushOutputStream:()V\n+  #42 = Utf8               flushOutputStream\n+  #43 = Methodref          #23.#44        // org/apache/commons/net/telnet/TelnetClient.closeOutputStream:()V\n+  #44 = NameAndType        #45:#8         // closeOutputStream:()V\n+  #45 = Utf8               closeOutputStream\n+  #46 = Utf8               ConstantValue\n+  #47 = Integer            1\n+  #48 = Utf8               (Lorg/apache/commons/net/telnet/TelnetClient;)V\n+  #49 = Utf8               Code\n+  #50 = Utf8               LineNumberTable\n+  #51 = Utf8               LocalVariableTable\n+  #52 = Utf8               this\n+  #53 = Utf8               Lorg/apache/commons/net/telnet/TelnetOutputStream;\n+  #54 = Utf8               ch\n+  #55 = Utf8               I\n+  #56 = Utf8               StackMapTable\n+  #57 = Class              #58            // java/lang/Object\n+  #58 = Utf8               java/lang/Object\n+  #59 = Class              #60            // java/lang/Throwable\n+  #60 = Utf8               java/lang/Throwable\n+  #61 = Utf8               Exceptions\n+  #62 = Class              #63            // java/io/IOException\n+  #63 = Utf8               java/io/IOException\n+  #64 = Utf8               ([B)V\n+  #65 = Utf8               buffer\n+  #66 = Utf8               [B\n+  #67 = Utf8               offset\n+  #68 = Utf8               length\n+  #69 = Utf8               flush\n+  #70 = Utf8               close\n+  #71 = Utf8               SourceFile\n+  #72 = Utf8               TelnetOutputStream.java\n {\n   private final org.apache.commons.net.telnet.TelnetClient client;\n     descriptor: Lorg/apache/commons/net/telnet/TelnetClient;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean convertCRtoCRLF = true;\n     descriptor: Z\n@@ -96,24 +96,24 @@\n \n   org.apache.commons.net.telnet.TelnetOutputStream(org.apache.commons.net.telnet.TelnetClient);\n     descriptor: (Lorg/apache/commons/net/telnet/TelnetClient;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #3                  // Field convertCRtoCRLF:Z\n+         6: putfield      #9                  // Field convertCRtoCRLF:Z\n          9: aload_0\n         10: iconst_0\n-        11: putfield      #4                  // Field lastWasCR:Z\n+        11: putfield      #13                 // Field lastWasCR:Z\n         14: aload_0\n         15: aload_1\n-        16: putfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        16: putfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         19: return\n       LineNumberTable:\n         line 43: 0\n         line 39: 4\n         line 40: 9\n         line 44: 14\n         line 45: 19\n@@ -124,109 +124,109 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+         1: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n          4: dup\n          5: astore_2\n          6: monitorenter\n          7: iload_1\n          8: sipush        255\n         11: iand\n         12: istore_1\n         13: aload_0\n-        14: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        14: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         17: iconst_0\n-        18: invokevirtual #7                  // Method org/apache/commons/net/telnet/TelnetClient.requestedWont:(I)Z\n+        18: invokevirtual #22                 // Method org/apache/commons/net/telnet/TelnetClient.requestedWont:(I)Z\n         21: ifeq          181\n         24: aload_0\n-        25: getfield      #4                  // Field lastWasCR:Z\n+        25: getfield      #13                 // Field lastWasCR:Z\n         28: ifeq          54\n         31: aload_0\n-        32: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        32: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         35: bipush        10\n-        37: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+        37: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n         40: iload_1\n         41: bipush        10\n         43: if_icmpne     54\n         46: aload_0\n         47: iconst_0\n-        48: putfield      #4                  // Field lastWasCR:Z\n+        48: putfield      #13                 // Field lastWasCR:Z\n         51: aload_2\n         52: monitorexit\n         53: return\n         54: iload_1\n         55: lookupswitch  { // 3\n                       10: 105\n                       13: 88\n                      255: 137\n                  default: 165\n             }\n         88: aload_0\n-        89: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+        89: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n         92: bipush        13\n-        94: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+        94: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n         97: aload_0\n         98: iconst_1\n-        99: putfield      #4                  // Field lastWasCR:Z\n+        99: putfield      #13                 // Field lastWasCR:Z\n        102: goto          217\n        105: aload_0\n-       106: getfield      #4                  // Field lastWasCR:Z\n+       106: getfield      #13                 // Field lastWasCR:Z\n        109: ifne          121\n        112: aload_0\n-       113: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       113: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        116: bipush        13\n-       118: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       118: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        121: aload_0\n-       122: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       122: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        125: iload_1\n-       126: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       126: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        129: aload_0\n        130: iconst_0\n-       131: putfield      #4                  // Field lastWasCR:Z\n+       131: putfield      #13                 // Field lastWasCR:Z\n        134: goto          217\n        137: aload_0\n-       138: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       138: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        141: sipush        255\n-       144: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       144: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        147: aload_0\n-       148: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       148: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        151: sipush        255\n-       154: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       154: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        157: aload_0\n        158: iconst_0\n-       159: putfield      #4                  // Field lastWasCR:Z\n+       159: putfield      #13                 // Field lastWasCR:Z\n        162: goto          217\n        165: aload_0\n-       166: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       166: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        169: iload_1\n-       170: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       170: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        173: aload_0\n        174: iconst_0\n-       175: putfield      #4                  // Field lastWasCR:Z\n+       175: putfield      #13                 // Field lastWasCR:Z\n        178: goto          217\n        181: iload_1\n        182: sipush        255\n        185: if_icmpne     209\n        188: aload_0\n-       189: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       189: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        192: iload_1\n-       193: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       193: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        196: aload_0\n-       197: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       197: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        200: sipush        255\n-       203: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       203: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        206: goto          217\n        209: aload_0\n-       210: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+       210: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n        213: iload_1\n-       214: invokevirtual #8                  // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n+       214: invokevirtual #28                 // Method org/apache/commons/net/telnet/TelnetClient.sendByte:(I)V\n        217: aload_2\n        218: monitorexit\n        219: goto          227\n        222: astore_3\n        223: aload_2\n        224: monitorexit\n        225: aload_3\n@@ -297,15 +297,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #10                 // Method write:([BII)V\n+         5: invokevirtual #34                 // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 127: 0\n         line 128: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/telnet/TelnetOutputStream;\n@@ -315,27 +315,27 @@\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n-         1: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+         1: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n          4: dup\n          5: astore        4\n          7: monitorenter\n          8: iload_3\n          9: iinc          3, -1\n         12: ifle          28\n         15: aload_0\n         16: aload_1\n         17: iload_2\n         18: iinc          2, 1\n         21: baload\n-        22: invokevirtual #11                 // Method write:(I)V\n+        22: invokevirtual #38                 // Method write:(I)V\n         25: goto          8\n         28: aload         4\n         30: monitorexit\n         31: goto          42\n         34: astore        5\n         36: aload         4\n         38: monitorexit\n@@ -372,16 +372,16 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-         4: invokevirtual #12                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+         1: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+         4: invokevirtual #40                 // Method org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n          7: return\n       LineNumberTable:\n         line 156: 0\n         line 157: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/telnet/TelnetOutputStream;\n@@ -390,16 +390,16 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n-         4: invokevirtual #13                 // Method org/apache/commons/net/telnet/TelnetClient.closeOutputStream:()V\n+         1: getfield      #16                 // Field client:Lorg/apache/commons/net/telnet/TelnetClient;\n+         4: invokevirtual #43                 // Method org/apache/commons/net/telnet/TelnetClient.closeOutputStream:()V\n          7: return\n       LineNumberTable:\n         line 163: 0\n         line 164: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/net/telnet/TelnetOutputStream;\n"}]}
