{"diffoscope-json-version": 1, "source1": "first/TelnetInputStream.class", "source2": "second/TelnetInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,80 +1,80 @@\n-  SHA-256 checksum e7d25c9a01eefcd0954e99d6faa7318f920831af8db64fd4eaab3d5086752c8a\n+  SHA-256 checksum 1db4853bbf20bb10319d03ea89cf5696d8689888380424980e368cafe3a62ed0\n   Compiled from \"TelnetInputStream.java\"\n final class org.apache.commons.net.telnet.TelnetInputStream extends java.io.BufferedInputStream implements java.lang.Runnable\n   minor version: 0\n   major version: 51\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n   this_class: #3                          // org/apache/commons/net/telnet/TelnetInputStream\n   super_class: #63                        // java/io/BufferedInputStream\n   interfaces: 1, fields: 26, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Methodref          #63.#142      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #2 = Fieldref           #3.#143       // org/apache/commons/net/telnet/TelnetInputStream.client:Lorg/apache/commons/net/telnet/TelnetClient;\n-    #3 = Class              #144          // org/apache/commons/net/telnet/TelnetInputStream\n-    #4 = Fieldref           #3.#145       // org/apache/commons/net/telnet/TelnetInputStream.receiveState:I\n-    #5 = Fieldref           #3.#146       // org/apache/commons/net/telnet/TelnetInputStream.isClosed:Z\n-    #6 = Fieldref           #3.#147       // org/apache/commons/net/telnet/TelnetInputStream.hasReachedEOF:Z\n-    #7 = Fieldref           #3.#148       // org/apache/commons/net/telnet/TelnetInputStream.queue:[I\n-    #8 = Fieldref           #3.#149       // org/apache/commons/net/telnet/TelnetInputStream.queueHead:I\n-    #9 = Fieldref           #3.#150       // org/apache/commons/net/telnet/TelnetInputStream.queueTail:I\n-   #10 = Fieldref           #151.#152     // org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n-   #11 = Fieldref           #3.#153       // org/apache/commons/net/telnet/TelnetInputStream.suboption:[I\n-   #12 = Fieldref           #3.#154       // org/apache/commons/net/telnet/TelnetInputStream.bytesAvailable:I\n-   #13 = Fieldref           #3.#155       // org/apache/commons/net/telnet/TelnetInputStream.ioException:Ljava/io/IOException;\n-   #14 = Fieldref           #3.#156       // org/apache/commons/net/telnet/TelnetInputStream.readIsWaiting:Z\n-   #15 = Fieldref           #3.#157       // org/apache/commons/net/telnet/TelnetInputStream.threaded:Z\n-   #16 = Class              #158          // java/lang/Thread\n-   #17 = Methodref          #16.#159      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n-   #18 = Fieldref           #3.#160       // org/apache/commons/net/telnet/TelnetInputStream.thread:Ljava/lang/Thread;\n-   #19 = Methodref          #3.#161       // org/apache/commons/net/telnet/TelnetInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-   #20 = Methodref          #16.#162      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n-   #21 = Methodref          #16.#163      // java/lang/Thread.getPriority:()I\n-   #22 = Methodref          #16.#164      // java/lang/Thread.setPriority:(I)V\n-   #23 = Methodref          #16.#165      // java/lang/Thread.setDaemon:(Z)V\n-   #24 = Methodref          #16.#166      // java/lang/Thread.start:()V\n-   #25 = Methodref          #63.#167      // java/io/BufferedInputStream.available:()I\n-   #26 = Methodref          #63.#168      // java/io/BufferedInputStream.read:()I\n-   #27 = Methodref          #151.#169     // org/apache/commons/net/telnet/TelnetClient.processAYTResponse:()V\n-   #28 = Methodref          #151.#170     // org/apache/commons/net/telnet/TelnetClient.spyRead:(I)V\n-   #29 = Class              #171          // org/apache/commons/net/telnet/TelnetCommand\n-   #30 = Class              #172          // org/apache/commons/net/telnet/TelnetOption\n-   #31 = Methodref          #151.#173     // org/apache/commons/net/telnet/TelnetClient.requestedDont:(I)Z\n-   #32 = Fieldref           #3.#174       // org/apache/commons/net/telnet/TelnetInputStream.suboptionCount:I\n-   #33 = Methodref          #151.#175     // org/apache/commons/net/telnet/TelnetClient.processCommand:(I)V\n-   #34 = Methodref          #151.#176     // org/apache/commons/net/telnet/TelnetClient.processWill:(I)V\n-   #35 = Methodref          #151.#177     // org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n-   #36 = Methodref          #151.#178     // org/apache/commons/net/telnet/TelnetClient.processWont:(I)V\n-   #37 = Methodref          #151.#179     // org/apache/commons/net/telnet/TelnetClient.processDo:(I)V\n-   #38 = Methodref          #151.#180     // org/apache/commons/net/telnet/TelnetClient.processDont:(I)V\n-   #39 = Methodref          #151.#181     // org/apache/commons/net/telnet/TelnetClient.processSuboption:([II)V\n-   #40 = Methodref          #182.#183     // java/lang/Object.notify:()V\n-   #41 = Methodref          #182.#184     // java/lang/Object.wait:()V\n-   #42 = Class              #185          // java/lang/InterruptedException\n-   #43 = Class              #186          // java/lang/IllegalStateException\n-   #44 = String             #187          // Queue is full! Cannot process another character.\n-   #45 = Methodref          #43.#188      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #46 = Class              #189          // java/io/InterruptedIOException\n-   #47 = String             #190          // Fatal thread interruption during read.\n-   #48 = Methodref          #46.#188      // java/io/InterruptedIOException.\"<init>\":(Ljava/lang/String;)V\n-   #49 = Methodref          #3.#191       // org/apache/commons/net/telnet/TelnetInputStream.read:(Z)I\n-   #50 = Methodref          #182.#192     // java/lang/Object.notifyAll:()V\n+    #1 = Methodref          #63.#137      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #2 = Fieldref           #3.#138       // org/apache/commons/net/telnet/TelnetInputStream.client:Lorg/apache/commons/net/telnet/TelnetClient;\n+    #3 = Class              #139          // org/apache/commons/net/telnet/TelnetInputStream\n+    #4 = Fieldref           #3.#140       // org/apache/commons/net/telnet/TelnetInputStream.receiveState:I\n+    #5 = Fieldref           #3.#141       // org/apache/commons/net/telnet/TelnetInputStream.isClosed:Z\n+    #6 = Fieldref           #3.#142       // org/apache/commons/net/telnet/TelnetInputStream.hasReachedEOF:Z\n+    #7 = Fieldref           #3.#143       // org/apache/commons/net/telnet/TelnetInputStream.queue:[I\n+    #8 = Fieldref           #3.#144       // org/apache/commons/net/telnet/TelnetInputStream.queueHead:I\n+    #9 = Fieldref           #3.#145       // org/apache/commons/net/telnet/TelnetInputStream.queueTail:I\n+   #10 = Fieldref           #116.#146     // org/apache/commons/net/telnet/TelnetClient.maxSubnegotiationLength:I\n+   #11 = Fieldref           #3.#147       // org/apache/commons/net/telnet/TelnetInputStream.suboption:[I\n+   #12 = Fieldref           #3.#148       // org/apache/commons/net/telnet/TelnetInputStream.bytesAvailable:I\n+   #13 = Fieldref           #3.#149       // org/apache/commons/net/telnet/TelnetInputStream.ioException:Ljava/io/IOException;\n+   #14 = Fieldref           #3.#150       // org/apache/commons/net/telnet/TelnetInputStream.readIsWaiting:Z\n+   #15 = Fieldref           #3.#151       // org/apache/commons/net/telnet/TelnetInputStream.threaded:Z\n+   #16 = Class              #152          // java/lang/Thread\n+   #17 = Methodref          #16.#153      // java/lang/Thread.\"<init>\":(Ljava/lang/Runnable;)V\n+   #18 = Fieldref           #3.#154       // org/apache/commons/net/telnet/TelnetInputStream.thread:Ljava/lang/Thread;\n+   #19 = Methodref          #3.#155       // org/apache/commons/net/telnet/TelnetInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+   #20 = Methodref          #16.#156      // java/lang/Thread.currentThread:()Ljava/lang/Thread;\n+   #21 = Methodref          #16.#157      // java/lang/Thread.getPriority:()I\n+   #22 = Methodref          #16.#158      // java/lang/Thread.setPriority:(I)V\n+   #23 = Methodref          #16.#159      // java/lang/Thread.setDaemon:(Z)V\n+   #24 = Methodref          #16.#160      // java/lang/Thread.start:()V\n+   #25 = Methodref          #63.#161      // java/io/BufferedInputStream.available:()I\n+   #26 = Methodref          #63.#162      // java/io/BufferedInputStream.read:()I\n+   #27 = Methodref          #116.#163     // org/apache/commons/net/telnet/TelnetClient.processAYTResponse:()V\n+   #28 = Methodref          #116.#164     // org/apache/commons/net/telnet/TelnetClient.spyRead:(I)V\n+   #29 = Class              #165          // org/apache/commons/net/telnet/TelnetCommand\n+   #30 = Class              #166          // org/apache/commons/net/telnet/TelnetOption\n+   #31 = Methodref          #116.#167     // org/apache/commons/net/telnet/TelnetClient.requestedDont:(I)Z\n+   #32 = Fieldref           #3.#168       // org/apache/commons/net/telnet/TelnetInputStream.suboptionCount:I\n+   #33 = Methodref          #116.#169     // org/apache/commons/net/telnet/TelnetClient.processCommand:(I)V\n+   #34 = Methodref          #116.#170     // org/apache/commons/net/telnet/TelnetClient.processWill:(I)V\n+   #35 = Methodref          #116.#171     // org/apache/commons/net/telnet/TelnetClient.flushOutputStream:()V\n+   #36 = Methodref          #116.#172     // org/apache/commons/net/telnet/TelnetClient.processWont:(I)V\n+   #37 = Methodref          #116.#173     // org/apache/commons/net/telnet/TelnetClient.processDo:(I)V\n+   #38 = Methodref          #116.#174     // org/apache/commons/net/telnet/TelnetClient.processDont:(I)V\n+   #39 = Methodref          #116.#175     // org/apache/commons/net/telnet/TelnetClient.processSuboption:([II)V\n+   #40 = Methodref          #122.#176     // java/lang/Object.notify:()V\n+   #41 = Methodref          #122.#177     // java/lang/Object.wait:()V\n+   #42 = Class              #178          // java/lang/InterruptedException\n+   #43 = Class              #179          // java/lang/IllegalStateException\n+   #44 = String             #180          // Queue is full! Cannot process another character.\n+   #45 = Methodref          #43.#181      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #46 = Class              #182          // java/io/InterruptedIOException\n+   #47 = String             #183          // Fatal thread interruption during read.\n+   #48 = Methodref          #46.#181      // java/io/InterruptedIOException.\"<init>\":(Ljava/lang/String;)V\n+   #49 = Methodref          #3.#184       // org/apache/commons/net/telnet/TelnetInputStream.read:(Z)I\n+   #50 = Methodref          #122.#185     // java/lang/Object.notifyAll:()V\n    #51 = Long               100l\n-   #53 = Methodref          #182.#193     // java/lang/Object.wait:(J)V\n-   #54 = Methodref          #3.#194       // org/apache/commons/net/telnet/TelnetInputStream.processChar:(I)Z\n-   #55 = Methodref          #3.#195       // org/apache/commons/net/telnet/TelnetInputStream.read:([BII)I\n-   #56 = Methodref          #3.#168       // org/apache/commons/net/telnet/TelnetInputStream.read:()I\n-   #57 = Methodref          #63.#196      // java/io/BufferedInputStream.close:()V\n-   #58 = Methodref          #16.#197      // java/lang/Thread.isAlive:()Z\n-   #59 = Methodref          #16.#198      // java/lang/Thread.interrupt:()V\n-   #60 = Class              #199          // java/lang/RuntimeException\n-   #61 = Methodref          #151.#200     // org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n-   #62 = Class              #201          // java/io/IOException\n-   #63 = Class              #202          // java/io/BufferedInputStream\n-   #64 = Class              #203          // java/lang/Runnable\n+   #53 = Methodref          #122.#186     // java/lang/Object.wait:(J)V\n+   #54 = Methodref          #3.#187       // org/apache/commons/net/telnet/TelnetInputStream.processChar:(I)Z\n+   #55 = Methodref          #3.#188       // org/apache/commons/net/telnet/TelnetInputStream.read:([BII)I\n+   #56 = Methodref          #3.#162       // org/apache/commons/net/telnet/TelnetInputStream.read:()I\n+   #57 = Methodref          #63.#189      // java/io/BufferedInputStream.close:()V\n+   #58 = Methodref          #16.#190      // java/lang/Thread.isAlive:()Z\n+   #59 = Methodref          #16.#191      // java/lang/Thread.interrupt:()V\n+   #60 = Class              #192          // java/lang/RuntimeException\n+   #61 = Methodref          #116.#193     // org/apache/commons/net/telnet/TelnetClient.notifyInputListener:()V\n+   #62 = Class              #194          // java/io/IOException\n+   #63 = Class              #195          // java/io/BufferedInputStream\n+   #64 = Class              #196          // java/lang/Runnable\n    #65 = Utf8               EOF\n    #66 = Utf8               I\n    #67 = Utf8               ConstantValue\n    #68 = Integer            -1\n    #69 = Utf8               WOULD_BLOCK\n    #70 = Integer            -2\n    #71 = Utf8               STATE_DATA\n@@ -117,136 +117,129 @@\n   #108 = Utf8               suboptionCount\n   #109 = Utf8               threaded\n   #110 = Utf8               <init>\n   #111 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n   #112 = Utf8               Code\n   #113 = Utf8               LineNumberTable\n   #114 = Utf8               StackMapTable\n-  #115 = Class              #144          // org/apache/commons/net/telnet/TelnetInputStream\n-  #116 = Class              #204          // java/io/InputStream\n-  #117 = Class              #205          // org/apache/commons/net/telnet/TelnetClient\n-  #118 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;)V\n-  #119 = Utf8               start\n-  #120 = Utf8               ()V\n-  #121 = Utf8               read\n-  #122 = Utf8               (Z)I\n-  #123 = Class              #206          // java/lang/Object\n-  #124 = Class              #207          // java/lang/Throwable\n-  #125 = Utf8               Exceptions\n-  #126 = Utf8               processChar\n-  #127 = Utf8               (I)Z\n-  #128 = Class              #185          // java/lang/InterruptedException\n-  #129 = Utf8               ()I\n-  #130 = Class              #189          // java/io/InterruptedIOException\n-  #131 = Utf8               ([B)I\n-  #132 = Utf8               ([BII)I\n-  #133 = Utf8               markSupported\n-  #134 = Utf8               ()Z\n-  #135 = Utf8               available\n-  #136 = Utf8               close\n-  #137 = Utf8               run\n-  #138 = Class              #199          // java/lang/RuntimeException\n-  #139 = Class              #201          // java/io/IOException\n-  #140 = Utf8               SourceFile\n-  #141 = Utf8               TelnetInputStream.java\n-  #142 = NameAndType        #110:#208     // \"<init>\":(Ljava/io/InputStream;)V\n-  #143 = NameAndType        #101:#102     // client:Lorg/apache/commons/net/telnet/TelnetClient;\n-  #144 = Utf8               org/apache/commons/net/telnet/TelnetInputStream\n-  #145 = NameAndType        #95:#66       // receiveState:I\n-  #146 = NameAndType        #93:#92       // isClosed:Z\n-  #147 = NameAndType        #91:#92       // hasReachedEOF:Z\n-  #148 = NameAndType        #99:#100      // queue:[I\n-  #149 = NameAndType        #96:#66       // queueHead:I\n-  #150 = NameAndType        #97:#66       // queueTail:I\n-  #151 = Class              #205          // org/apache/commons/net/telnet/TelnetClient\n-  #152 = NameAndType        #209:#66      // maxSubnegotiationLength:I\n-  #153 = NameAndType        #107:#100     // suboption:[I\n-  #154 = NameAndType        #98:#66       // bytesAvailable:I\n-  #155 = NameAndType        #105:#106     // ioException:Ljava/io/IOException;\n-  #156 = NameAndType        #94:#92       // readIsWaiting:Z\n-  #157 = NameAndType        #109:#92      // threaded:Z\n-  #158 = Utf8               java/lang/Thread\n-  #159 = NameAndType        #110:#210     // \"<init>\":(Ljava/lang/Runnable;)V\n-  #160 = NameAndType        #103:#104     // thread:Ljava/lang/Thread;\n-  #161 = NameAndType        #110:#111     // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n-  #162 = NameAndType        #211:#212     // currentThread:()Ljava/lang/Thread;\n-  #163 = NameAndType        #213:#129     // getPriority:()I\n-  #164 = NameAndType        #214:#215     // setPriority:(I)V\n-  #165 = NameAndType        #216:#217     // setDaemon:(Z)V\n-  #166 = NameAndType        #119:#120     // start:()V\n-  #167 = NameAndType        #135:#129     // available:()I\n-  #168 = NameAndType        #121:#129     // read:()I\n-  #169 = NameAndType        #218:#120     // processAYTResponse:()V\n-  #170 = NameAndType        #219:#215     // spyRead:(I)V\n-  #171 = Utf8               org/apache/commons/net/telnet/TelnetCommand\n-  #172 = Utf8               org/apache/commons/net/telnet/TelnetOption\n-  #173 = NameAndType        #220:#127     // requestedDont:(I)Z\n-  #174 = NameAndType        #108:#66      // suboptionCount:I\n-  #175 = NameAndType        #221:#215     // processCommand:(I)V\n-  #176 = NameAndType        #222:#215     // processWill:(I)V\n-  #177 = NameAndType        #223:#120     // flushOutputStream:()V\n-  #178 = NameAndType        #224:#215     // processWont:(I)V\n-  #179 = NameAndType        #225:#215     // processDo:(I)V\n-  #180 = NameAndType        #226:#215     // processDont:(I)V\n-  #181 = NameAndType        #227:#228     // processSuboption:([II)V\n-  #182 = Class              #206          // java/lang/Object\n-  #183 = NameAndType        #229:#120     // notify:()V\n-  #184 = NameAndType        #230:#120     // wait:()V\n-  #185 = Utf8               java/lang/InterruptedException\n-  #186 = Utf8               java/lang/IllegalStateException\n-  #187 = Utf8               Queue is full! Cannot process another character.\n-  #188 = NameAndType        #110:#231     // \"<init>\":(Ljava/lang/String;)V\n-  #189 = Utf8               java/io/InterruptedIOException\n-  #190 = Utf8               Fatal thread interruption during read.\n-  #191 = NameAndType        #121:#122     // read:(Z)I\n-  #192 = NameAndType        #232:#120     // notifyAll:()V\n-  #193 = NameAndType        #230:#233     // wait:(J)V\n-  #194 = NameAndType        #126:#127     // processChar:(I)Z\n-  #195 = NameAndType        #121:#132     // read:([BII)I\n-  #196 = NameAndType        #136:#120     // close:()V\n-  #197 = NameAndType        #234:#134     // isAlive:()Z\n-  #198 = NameAndType        #235:#120     // interrupt:()V\n-  #199 = Utf8               java/lang/RuntimeException\n-  #200 = NameAndType        #236:#120     // notifyInputListener:()V\n-  #201 = Utf8               java/io/IOException\n-  #202 = Utf8               java/io/BufferedInputStream\n-  #203 = Utf8               java/lang/Runnable\n-  #204 = Utf8               java/io/InputStream\n-  #205 = Utf8               org/apache/commons/net/telnet/TelnetClient\n-  #206 = Utf8               java/lang/Object\n-  #207 = Utf8               java/lang/Throwable\n-  #208 = Utf8               (Ljava/io/InputStream;)V\n-  #209 = Utf8               maxSubnegotiationLength\n-  #210 = Utf8               (Ljava/lang/Runnable;)V\n-  #211 = Utf8               currentThread\n-  #212 = Utf8               ()Ljava/lang/Thread;\n-  #213 = Utf8               getPriority\n-  #214 = Utf8               setPriority\n-  #215 = Utf8               (I)V\n-  #216 = Utf8               setDaemon\n-  #217 = Utf8               (Z)V\n-  #218 = Utf8               processAYTResponse\n-  #219 = Utf8               spyRead\n-  #220 = Utf8               requestedDont\n-  #221 = Utf8               processCommand\n-  #222 = Utf8               processWill\n-  #223 = Utf8               flushOutputStream\n-  #224 = Utf8               processWont\n-  #225 = Utf8               processDo\n-  #226 = Utf8               processDont\n-  #227 = Utf8               processSuboption\n-  #228 = Utf8               ([II)V\n-  #229 = Utf8               notify\n-  #230 = Utf8               wait\n-  #231 = Utf8               (Ljava/lang/String;)V\n-  #232 = Utf8               notifyAll\n-  #233 = Utf8               (J)V\n-  #234 = Utf8               isAlive\n-  #235 = Utf8               interrupt\n-  #236 = Utf8               notifyInputListener\n+  #115 = Class              #197          // java/io/InputStream\n+  #116 = Class              #198          // org/apache/commons/net/telnet/TelnetClient\n+  #117 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;)V\n+  #118 = Utf8               start\n+  #119 = Utf8               ()V\n+  #120 = Utf8               read\n+  #121 = Utf8               (Z)I\n+  #122 = Class              #199          // java/lang/Object\n+  #123 = Class              #200          // java/lang/Throwable\n+  #124 = Utf8               Exceptions\n+  #125 = Utf8               processChar\n+  #126 = Utf8               (I)Z\n+  #127 = Utf8               ()I\n+  #128 = Utf8               ([B)I\n+  #129 = Utf8               ([BII)I\n+  #130 = Utf8               markSupported\n+  #131 = Utf8               ()Z\n+  #132 = Utf8               available\n+  #133 = Utf8               close\n+  #134 = Utf8               run\n+  #135 = Utf8               SourceFile\n+  #136 = Utf8               TelnetInputStream.java\n+  #137 = NameAndType        #110:#201     // \"<init>\":(Ljava/io/InputStream;)V\n+  #138 = NameAndType        #101:#102     // client:Lorg/apache/commons/net/telnet/TelnetClient;\n+  #139 = Utf8               org/apache/commons/net/telnet/TelnetInputStream\n+  #140 = NameAndType        #95:#66       // receiveState:I\n+  #141 = NameAndType        #93:#92       // isClosed:Z\n+  #142 = NameAndType        #91:#92       // hasReachedEOF:Z\n+  #143 = NameAndType        #99:#100      // queue:[I\n+  #144 = NameAndType        #96:#66       // queueHead:I\n+  #145 = NameAndType        #97:#66       // queueTail:I\n+  #146 = NameAndType        #202:#66      // maxSubnegotiationLength:I\n+  #147 = NameAndType        #107:#100     // suboption:[I\n+  #148 = NameAndType        #98:#66       // bytesAvailable:I\n+  #149 = NameAndType        #105:#106     // ioException:Ljava/io/IOException;\n+  #150 = NameAndType        #94:#92       // readIsWaiting:Z\n+  #151 = NameAndType        #109:#92      // threaded:Z\n+  #152 = Utf8               java/lang/Thread\n+  #153 = NameAndType        #110:#203     // \"<init>\":(Ljava/lang/Runnable;)V\n+  #154 = NameAndType        #103:#104     // thread:Ljava/lang/Thread;\n+  #155 = NameAndType        #110:#111     // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/net/telnet/TelnetClient;Z)V\n+  #156 = NameAndType        #204:#205     // currentThread:()Ljava/lang/Thread;\n+  #157 = NameAndType        #206:#127     // getPriority:()I\n+  #158 = NameAndType        #207:#208     // setPriority:(I)V\n+  #159 = NameAndType        #209:#210     // setDaemon:(Z)V\n+  #160 = NameAndType        #118:#119     // start:()V\n+  #161 = NameAndType        #132:#127     // available:()I\n+  #162 = NameAndType        #120:#127     // read:()I\n+  #163 = NameAndType        #211:#119     // processAYTResponse:()V\n+  #164 = NameAndType        #212:#208     // spyRead:(I)V\n+  #165 = Utf8               org/apache/commons/net/telnet/TelnetCommand\n+  #166 = Utf8               org/apache/commons/net/telnet/TelnetOption\n+  #167 = NameAndType        #213:#126     // requestedDont:(I)Z\n+  #168 = NameAndType        #108:#66      // suboptionCount:I\n+  #169 = NameAndType        #214:#208     // processCommand:(I)V\n+  #170 = NameAndType        #215:#208     // processWill:(I)V\n+  #171 = NameAndType        #216:#119     // flushOutputStream:()V\n+  #172 = NameAndType        #217:#208     // processWont:(I)V\n+  #173 = NameAndType        #218:#208     // processDo:(I)V\n+  #174 = NameAndType        #219:#208     // processDont:(I)V\n+  #175 = NameAndType        #220:#221     // processSuboption:([II)V\n+  #176 = NameAndType        #222:#119     // notify:()V\n+  #177 = NameAndType        #223:#119     // wait:()V\n+  #178 = Utf8               java/lang/InterruptedException\n+  #179 = Utf8               java/lang/IllegalStateException\n+  #180 = Utf8               Queue is full! Cannot process another character.\n+  #181 = NameAndType        #110:#224     // \"<init>\":(Ljava/lang/String;)V\n+  #182 = Utf8               java/io/InterruptedIOException\n+  #183 = Utf8               Fatal thread interruption during read.\n+  #184 = NameAndType        #120:#121     // read:(Z)I\n+  #185 = NameAndType        #225:#119     // notifyAll:()V\n+  #186 = NameAndType        #223:#226     // wait:(J)V\n+  #187 = NameAndType        #125:#126     // processChar:(I)Z\n+  #188 = NameAndType        #120:#129     // read:([BII)I\n+  #189 = NameAndType        #133:#119     // close:()V\n+  #190 = NameAndType        #227:#131     // isAlive:()Z\n+  #191 = NameAndType        #228:#119     // interrupt:()V\n+  #192 = Utf8               java/lang/RuntimeException\n+  #193 = NameAndType        #229:#119     // notifyInputListener:()V\n+  #194 = Utf8               java/io/IOException\n+  #195 = Utf8               java/io/BufferedInputStream\n+  #196 = Utf8               java/lang/Runnable\n+  #197 = Utf8               java/io/InputStream\n+  #198 = Utf8               org/apache/commons/net/telnet/TelnetClient\n+  #199 = Utf8               java/lang/Object\n+  #200 = Utf8               java/lang/Throwable\n+  #201 = Utf8               (Ljava/io/InputStream;)V\n+  #202 = Utf8               maxSubnegotiationLength\n+  #203 = Utf8               (Ljava/lang/Runnable;)V\n+  #204 = Utf8               currentThread\n+  #205 = Utf8               ()Ljava/lang/Thread;\n+  #206 = Utf8               getPriority\n+  #207 = Utf8               setPriority\n+  #208 = Utf8               (I)V\n+  #209 = Utf8               setDaemon\n+  #210 = Utf8               (Z)V\n+  #211 = Utf8               processAYTResponse\n+  #212 = Utf8               spyRead\n+  #213 = Utf8               requestedDont\n+  #214 = Utf8               processCommand\n+  #215 = Utf8               processWill\n+  #216 = Utf8               flushOutputStream\n+  #217 = Utf8               processWont\n+  #218 = Utf8               processDo\n+  #219 = Utf8               processDont\n+  #220 = Utf8               processSuboption\n+  #221 = Utf8               ([II)V\n+  #222 = Utf8               notify\n+  #223 = Utf8               wait\n+  #224 = Utf8               (Ljava/lang/String;)V\n+  #225 = Utf8               notifyAll\n+  #226 = Utf8               (J)V\n+  #227 = Utf8               isAlive\n+  #228 = Utf8               interrupt\n+  #229 = Utf8               notifyInputListener\n {\n   private static final int EOF = -1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private static final int WOULD_BLOCK = -2;\n"}]}
