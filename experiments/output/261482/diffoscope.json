{"diffoscope-json-version": 1, "source1": "first/FastDateParser$NumberStrategy.class", "source2": "second/FastDateParser$NumberStrategy.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,47 +13,39 @@\n         this.field = field;\n     }\n     \n     boolean isNumber() {\n         return true;\n     }\n     \n-    boolean parse(final FastDateParser parser, final Calendar calendar, final String source, final ParsePosition pos, final int maxWidth) {\n-        int idx = pos.getIndex();\n-        int last = source.length();\n-        if (maxWidth == 0) {\n-            while (idx < last) {\n-                final char c = source.charAt(idx);\n-                if (!Character.isWhitespace(c)) {\n-                    break;\n-                }\n-                ++idx;\n+    boolean parse(final FastDateParser fastDateParser, final Calendar calendar, final String s, final ParsePosition parsePosition, final int n) {\n+        int index = parsePosition.getIndex();\n+        int length = s.length();\n+        if (n == 0) {\n+            while (index < length && Character.isWhitespace(s.charAt(index))) {\n+                ++index;\n             }\n-            pos.setIndex(idx);\n+            parsePosition.setIndex(index);\n         }\n         else {\n-            final int end = idx + maxWidth;\n-            if (last > end) {\n-                last = end;\n+            final int n2 = index + n;\n+            if (length > n2) {\n+                length = n2;\n             }\n         }\n-        while (idx < last) {\n-            final char c = source.charAt(idx);\n-            if (!Character.isDigit(c)) {\n-                break;\n-            }\n-            ++idx;\n+        while (index < length && Character.isDigit(s.charAt(index))) {\n+            ++index;\n         }\n-        if (pos.getIndex() == idx) {\n-            pos.setErrorIndex(idx);\n+        if (parsePosition.getIndex() == index) {\n+            parsePosition.setErrorIndex(index);\n             return false;\n         }\n-        final int value = Integer.parseInt(source.substring(pos.getIndex(), idx));\n-        pos.setIndex(idx);\n-        calendar.set(this.field, this.modify(parser, value));\n+        final int int1 = Integer.parseInt(s.substring(parsePosition.getIndex(), index));\n+        parsePosition.setIndex(index);\n+        calendar.set(this.field, this.modify(fastDateParser, int1));\n         return true;\n     }\n     \n-    int modify(final FastDateParser parser, final int iValue) {\n-        return iValue;\n+    int modify(final FastDateParser fastDateParser, final int n) {\n+        return n;\n     }\n }\n"}]}
