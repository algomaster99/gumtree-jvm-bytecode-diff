{"diffoscope-json-version": 1, "source1": "first/DefaultComesLastCheck.class", "source2": "second/DefaultComesLastCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -20,31 +20,31 @@\n         return this.getRequiredTokens();\n     }\n     \n     public int[] getRequiredTokens() {\n         return new int[] { 94 };\n     }\n     \n-    public void setSkipIfLastAndSharedWithCase(final boolean newValue) {\n-        this.skipIfLastAndSharedWithCase = newValue;\n+    public void setSkipIfLastAndSharedWithCase(final boolean skipIfLastAndSharedWithCase) {\n+        this.skipIfLastAndSharedWithCase = skipIfLastAndSharedWithCase;\n     }\n     \n-    public void visitToken(final DetailAST ast) {\n-        final DetailAST defaultGroupAST = ast.getParent();\n-        final boolean isSwitchRule = defaultGroupAST.getType() == 208;\n-        if (this.skipIfLastAndSharedWithCase && !isSwitchRule) {\n-            if (isNextSiblingOf(ast, 93)) {\n-                this.log(ast, \"default.comes.last.in.casegroup\", new Object[0]);\n+    public void visitToken(final DetailAST detailAST) {\n+        final DetailAST parent = detailAST.getParent();\n+        final boolean b = parent.getType() == 208;\n+        if (this.skipIfLastAndSharedWithCase && !b) {\n+            if (isNextSiblingOf(detailAST, 93)) {\n+                this.log(detailAST, \"default.comes.last.in.casegroup\", new Object[0]);\n             }\n-            else if (ast.getPreviousSibling() == null && isNextSiblingOf(defaultGroupAST, 33)) {\n-                this.log(ast, \"default.comes.last\", new Object[0]);\n+            else if (detailAST.getPreviousSibling() == null && isNextSiblingOf(parent, 33)) {\n+                this.log(detailAST, \"default.comes.last\", new Object[0]);\n             }\n         }\n-        else if (isNextSiblingOf(defaultGroupAST, 33) || isNextSiblingOf(defaultGroupAST, 208)) {\n-            this.log(ast, \"default.comes.last\", new Object[0]);\n+        else if (isNextSiblingOf(parent, 33) || isNextSiblingOf(parent, 208)) {\n+            this.log(detailAST, \"default.comes.last\", new Object[0]);\n         }\n     }\n     \n-    private static boolean isNextSiblingOf(final DetailAST ast, final int tokenType) {\n-        return ast.getNextSibling() != null && ast.getNextSibling().getType() == tokenType;\n+    private static boolean isNextSiblingOf(final DetailAST detailAST, final int n) {\n+        return detailAST.getNextSibling() != null && detailAST.getNextSibling().getType() == n;\n     }\n }\n"}]}
