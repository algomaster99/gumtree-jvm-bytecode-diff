{"diffoscope-json-version": 1, "source1": "first/IOBiFunction.class", "source2": "second/IOBiFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,15 +6,15 @@\n import java.util.Objects;\n \n @FunctionalInterface\n public interface IOBiFunction<T, U, R>\n {\n     default <V> IOBiFunction<T, U, V> andThen(final IOFunction<? super R, ? extends V> after) {\n         Objects.requireNonNull(after);\n-        return (IOBiFunction<T, U, V>)((t, u) -> after.apply(this.apply(t, u)));\n+        return (IOBiFunction<T, U, V>)((t, u) -> ioFunction.apply(this.apply(t, u)));\n     }\n     \n     R apply(final T p0, final U p1) throws IOException;\n     \n     default BiFunction<T, U, R> asBiFunction() {\n         return (BiFunction<T, U, R>)((t, u) -> Uncheck.apply(this, t, u));\n     }\n"}]}
