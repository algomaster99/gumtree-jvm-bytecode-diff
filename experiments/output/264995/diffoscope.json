{"diffoscope-json-version": 1, "source1": "first/Instruction.class", "source2": "second/Instruction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,438 +17,438 @@\n     protected short opcode;\n     \n     @Deprecated\n     public static InstructionComparator getComparator() {\n         return Instruction.cmp;\n     }\n     \n-    public static boolean isValidByte(final int value) {\n-        return value >= -128 && value <= 127;\n+    public static boolean isValidByte(final int n) {\n+        return n >= -128 && n <= 127;\n     }\n     \n-    public static boolean isValidShort(final int value) {\n-        return value >= -32768 && value <= 32767;\n+    public static boolean isValidShort(final int n) {\n+        return n >= -32768 && n <= 32767;\n     }\n     \n-    public static Instruction readInstruction(final ByteSequence bytes) throws IOException {\n-        boolean wide = false;\n-        short opcode = (short)bytes.readUnsignedByte();\n-        Instruction obj = null;\n+    public static Instruction readInstruction(final ByteSequence byteSequence) throws IOException {\n+        boolean b = false;\n+        short opcode = (short)byteSequence.readUnsignedByte();\n         if (opcode == 196) {\n-            wide = true;\n-            opcode = (short)bytes.readUnsignedByte();\n+            b = true;\n+            opcode = (short)byteSequence.readUnsignedByte();\n         }\n         final Instruction instruction = InstructionConst.getInstruction((int)opcode);\n         if (instruction != null) {\n             return instruction;\n         }\n+        Object o = null;\n         switch (opcode) {\n             case 16: {\n-                obj = (Instruction)new BIPUSH();\n+                o = new BIPUSH();\n                 break;\n             }\n             case 17: {\n-                obj = (Instruction)new SIPUSH();\n+                o = new SIPUSH();\n                 break;\n             }\n             case 18: {\n-                obj = (Instruction)new LDC();\n+                o = new LDC();\n                 break;\n             }\n             case 19: {\n-                obj = (Instruction)new LDC_W();\n+                o = new LDC_W();\n                 break;\n             }\n             case 20: {\n-                obj = (Instruction)new LDC2_W();\n+                o = new LDC2_W();\n                 break;\n             }\n             case 21: {\n-                obj = (Instruction)new ILOAD();\n+                o = new ILOAD();\n                 break;\n             }\n             case 22: {\n-                obj = (Instruction)new LLOAD();\n+                o = new LLOAD();\n                 break;\n             }\n             case 23: {\n-                obj = (Instruction)new FLOAD();\n+                o = new FLOAD();\n                 break;\n             }\n             case 24: {\n-                obj = (Instruction)new DLOAD();\n+                o = new DLOAD();\n                 break;\n             }\n             case 25: {\n-                obj = (Instruction)new ALOAD();\n+                o = new ALOAD();\n                 break;\n             }\n             case 26: {\n-                obj = (Instruction)new ILOAD(0);\n+                o = new ILOAD(0);\n                 break;\n             }\n             case 27: {\n-                obj = (Instruction)new ILOAD(1);\n+                o = new ILOAD(1);\n                 break;\n             }\n             case 28: {\n-                obj = (Instruction)new ILOAD(2);\n+                o = new ILOAD(2);\n                 break;\n             }\n             case 29: {\n-                obj = (Instruction)new ILOAD(3);\n+                o = new ILOAD(3);\n                 break;\n             }\n             case 30: {\n-                obj = (Instruction)new LLOAD(0);\n+                o = new LLOAD(0);\n                 break;\n             }\n             case 31: {\n-                obj = (Instruction)new LLOAD(1);\n+                o = new LLOAD(1);\n                 break;\n             }\n             case 32: {\n-                obj = (Instruction)new LLOAD(2);\n+                o = new LLOAD(2);\n                 break;\n             }\n             case 33: {\n-                obj = (Instruction)new LLOAD(3);\n+                o = new LLOAD(3);\n                 break;\n             }\n             case 34: {\n-                obj = (Instruction)new FLOAD(0);\n+                o = new FLOAD(0);\n                 break;\n             }\n             case 35: {\n-                obj = (Instruction)new FLOAD(1);\n+                o = new FLOAD(1);\n                 break;\n             }\n             case 36: {\n-                obj = (Instruction)new FLOAD(2);\n+                o = new FLOAD(2);\n                 break;\n             }\n             case 37: {\n-                obj = (Instruction)new FLOAD(3);\n+                o = new FLOAD(3);\n                 break;\n             }\n             case 38: {\n-                obj = (Instruction)new DLOAD(0);\n+                o = new DLOAD(0);\n                 break;\n             }\n             case 39: {\n-                obj = (Instruction)new DLOAD(1);\n+                o = new DLOAD(1);\n                 break;\n             }\n             case 40: {\n-                obj = (Instruction)new DLOAD(2);\n+                o = new DLOAD(2);\n                 break;\n             }\n             case 41: {\n-                obj = (Instruction)new DLOAD(3);\n+                o = new DLOAD(3);\n                 break;\n             }\n             case 42: {\n-                obj = (Instruction)new ALOAD(0);\n+                o = new ALOAD(0);\n                 break;\n             }\n             case 43: {\n-                obj = (Instruction)new ALOAD(1);\n+                o = new ALOAD(1);\n                 break;\n             }\n             case 44: {\n-                obj = (Instruction)new ALOAD(2);\n+                o = new ALOAD(2);\n                 break;\n             }\n             case 45: {\n-                obj = (Instruction)new ALOAD(3);\n+                o = new ALOAD(3);\n                 break;\n             }\n             case 54: {\n-                obj = (Instruction)new ISTORE();\n+                o = new ISTORE();\n                 break;\n             }\n             case 55: {\n-                obj = (Instruction)new LSTORE();\n+                o = new LSTORE();\n                 break;\n             }\n             case 56: {\n-                obj = (Instruction)new FSTORE();\n+                o = new FSTORE();\n                 break;\n             }\n             case 57: {\n-                obj = (Instruction)new DSTORE();\n+                o = new DSTORE();\n                 break;\n             }\n             case 58: {\n-                obj = (Instruction)new ASTORE();\n+                o = new ASTORE();\n                 break;\n             }\n             case 59: {\n-                obj = (Instruction)new ISTORE(0);\n+                o = new ISTORE(0);\n                 break;\n             }\n             case 60: {\n-                obj = (Instruction)new ISTORE(1);\n+                o = new ISTORE(1);\n                 break;\n             }\n             case 61: {\n-                obj = (Instruction)new ISTORE(2);\n+                o = new ISTORE(2);\n                 break;\n             }\n             case 62: {\n-                obj = (Instruction)new ISTORE(3);\n+                o = new ISTORE(3);\n                 break;\n             }\n             case 63: {\n-                obj = (Instruction)new LSTORE(0);\n+                o = new LSTORE(0);\n                 break;\n             }\n             case 64: {\n-                obj = (Instruction)new LSTORE(1);\n+                o = new LSTORE(1);\n                 break;\n             }\n             case 65: {\n-                obj = (Instruction)new LSTORE(2);\n+                o = new LSTORE(2);\n                 break;\n             }\n             case 66: {\n-                obj = (Instruction)new LSTORE(3);\n+                o = new LSTORE(3);\n                 break;\n             }\n             case 67: {\n-                obj = (Instruction)new FSTORE(0);\n+                o = new FSTORE(0);\n                 break;\n             }\n             case 68: {\n-                obj = (Instruction)new FSTORE(1);\n+                o = new FSTORE(1);\n                 break;\n             }\n             case 69: {\n-                obj = (Instruction)new FSTORE(2);\n+                o = new FSTORE(2);\n                 break;\n             }\n             case 70: {\n-                obj = (Instruction)new FSTORE(3);\n+                o = new FSTORE(3);\n                 break;\n             }\n             case 71: {\n-                obj = (Instruction)new DSTORE(0);\n+                o = new DSTORE(0);\n                 break;\n             }\n             case 72: {\n-                obj = (Instruction)new DSTORE(1);\n+                o = new DSTORE(1);\n                 break;\n             }\n             case 73: {\n-                obj = (Instruction)new DSTORE(2);\n+                o = new DSTORE(2);\n                 break;\n             }\n             case 74: {\n-                obj = (Instruction)new DSTORE(3);\n+                o = new DSTORE(3);\n                 break;\n             }\n             case 75: {\n-                obj = (Instruction)new ASTORE(0);\n+                o = new ASTORE(0);\n                 break;\n             }\n             case 76: {\n-                obj = (Instruction)new ASTORE(1);\n+                o = new ASTORE(1);\n                 break;\n             }\n             case 77: {\n-                obj = (Instruction)new ASTORE(2);\n+                o = new ASTORE(2);\n                 break;\n             }\n             case 78: {\n-                obj = (Instruction)new ASTORE(3);\n+                o = new ASTORE(3);\n                 break;\n             }\n             case 132: {\n-                obj = (Instruction)new IINC();\n+                o = new IINC();\n                 break;\n             }\n             case 153: {\n-                obj = (Instruction)new IFEQ();\n+                o = new IFEQ();\n                 break;\n             }\n             case 154: {\n-                obj = (Instruction)new IFNE();\n+                o = new IFNE();\n                 break;\n             }\n             case 155: {\n-                obj = (Instruction)new IFLT();\n+                o = new IFLT();\n                 break;\n             }\n             case 156: {\n-                obj = (Instruction)new IFGE();\n+                o = new IFGE();\n                 break;\n             }\n             case 157: {\n-                obj = (Instruction)new IFGT();\n+                o = new IFGT();\n                 break;\n             }\n             case 158: {\n-                obj = (Instruction)new IFLE();\n+                o = new IFLE();\n                 break;\n             }\n             case 159: {\n-                obj = (Instruction)new IF_ICMPEQ();\n+                o = new IF_ICMPEQ();\n                 break;\n             }\n             case 160: {\n-                obj = (Instruction)new IF_ICMPNE();\n+                o = new IF_ICMPNE();\n                 break;\n             }\n             case 161: {\n-                obj = (Instruction)new IF_ICMPLT();\n+                o = new IF_ICMPLT();\n                 break;\n             }\n             case 162: {\n-                obj = (Instruction)new IF_ICMPGE();\n+                o = new IF_ICMPGE();\n                 break;\n             }\n             case 163: {\n-                obj = (Instruction)new IF_ICMPGT();\n+                o = new IF_ICMPGT();\n                 break;\n             }\n             case 164: {\n-                obj = (Instruction)new IF_ICMPLE();\n+                o = new IF_ICMPLE();\n                 break;\n             }\n             case 165: {\n-                obj = (Instruction)new IF_ACMPEQ();\n+                o = new IF_ACMPEQ();\n                 break;\n             }\n             case 166: {\n-                obj = (Instruction)new IF_ACMPNE();\n+                o = new IF_ACMPNE();\n                 break;\n             }\n             case 167: {\n-                obj = (Instruction)new GOTO();\n+                o = new GOTO();\n                 break;\n             }\n             case 168: {\n-                obj = (Instruction)new JSR();\n+                o = new JSR();\n                 break;\n             }\n             case 169: {\n-                obj = (Instruction)new RET();\n+                o = new RET();\n                 break;\n             }\n             case 170: {\n-                obj = (Instruction)new TABLESWITCH();\n+                o = new TABLESWITCH();\n                 break;\n             }\n             case 171: {\n-                obj = (Instruction)new LOOKUPSWITCH();\n+                o = new LOOKUPSWITCH();\n                 break;\n             }\n             case 178: {\n-                obj = (Instruction)new GETSTATIC();\n+                o = new GETSTATIC();\n                 break;\n             }\n             case 179: {\n-                obj = (Instruction)new PUTSTATIC();\n+                o = new PUTSTATIC();\n                 break;\n             }\n             case 180: {\n-                obj = (Instruction)new GETFIELD();\n+                o = new GETFIELD();\n                 break;\n             }\n             case 181: {\n-                obj = (Instruction)new PUTFIELD();\n+                o = new PUTFIELD();\n                 break;\n             }\n             case 182: {\n-                obj = (Instruction)new INVOKEVIRTUAL();\n+                o = new INVOKEVIRTUAL();\n                 break;\n             }\n             case 183: {\n-                obj = (Instruction)new INVOKESPECIAL();\n+                o = new INVOKESPECIAL();\n                 break;\n             }\n             case 184: {\n-                obj = (Instruction)new INVOKESTATIC();\n+                o = new INVOKESTATIC();\n                 break;\n             }\n             case 185: {\n-                obj = (Instruction)new INVOKEINTERFACE();\n+                o = new INVOKEINTERFACE();\n                 break;\n             }\n             case 186: {\n-                obj = (Instruction)new INVOKEDYNAMIC();\n+                o = new INVOKEDYNAMIC();\n                 break;\n             }\n             case 187: {\n-                obj = (Instruction)new NEW();\n+                o = new NEW();\n                 break;\n             }\n             case 188: {\n-                obj = (Instruction)new NEWARRAY();\n+                o = new NEWARRAY();\n                 break;\n             }\n             case 189: {\n-                obj = (Instruction)new ANEWARRAY();\n+                o = new ANEWARRAY();\n                 break;\n             }\n             case 192: {\n-                obj = (Instruction)new CHECKCAST();\n+                o = new CHECKCAST();\n                 break;\n             }\n             case 193: {\n-                obj = (Instruction)new INSTANCEOF();\n+                o = new INSTANCEOF();\n                 break;\n             }\n             case 197: {\n-                obj = (Instruction)new MULTIANEWARRAY();\n+                o = new MULTIANEWARRAY();\n                 break;\n             }\n             case 198: {\n-                obj = (Instruction)new IFNULL();\n+                o = new IFNULL();\n                 break;\n             }\n             case 199: {\n-                obj = (Instruction)new IFNONNULL();\n+                o = new IFNONNULL();\n                 break;\n             }\n             case 200: {\n-                obj = (Instruction)new GOTO_W();\n+                o = new GOTO_W();\n                 break;\n             }\n             case 201: {\n-                obj = (Instruction)new JSR_W();\n+                o = new JSR_W();\n                 break;\n             }\n             case 202: {\n-                obj = (Instruction)new BREAKPOINT();\n+                o = new BREAKPOINT();\n                 break;\n             }\n             case 254: {\n-                obj = (Instruction)new IMPDEP1();\n+                o = new IMPDEP1();\n                 break;\n             }\n             case 255: {\n-                obj = (Instruction)new IMPDEP2();\n+                o = new IMPDEP2();\n                 break;\n             }\n             default: {\n                 throw new ClassGenException(\"Illegal opcode detected: \" + opcode);\n             }\n         }\n-        if (wide && !(obj instanceof LocalVariableInstruction) && !(obj instanceof RET)) {\n+        if (b && !(o instanceof LocalVariableInstruction) && !(o instanceof RET)) {\n             throw new ClassGenException(\"Illegal opcode after wide: \" + opcode);\n         }\n-        obj.setOpcode(opcode);\n-        obj.initFromFile(bytes, wide);\n-        return obj;\n+        ((Instruction)o).setOpcode(opcode);\n+        ((Instruction)o).initFromFile(byteSequence, b);\n+        return (Instruction)o;\n     }\n     \n     @Deprecated\n-    public static void setComparator(final InstructionComparator c) {\n-        Instruction.cmp = c;\n+    public static void setComparator(final InstructionComparator cmp) {\n+        Instruction.cmp = cmp;\n     }\n     \n     Instruction() {\n         this.length = 1;\n         this.opcode = -1;\n     }\n     \n@@ -457,44 +457,44 @@\n         this.opcode = -1;\n         this.length = length;\n         this.opcode = opcode;\n     }\n     \n     public abstract void accept(final Visitor p0);\n     \n-    public int consumeStack(final ConstantPoolGen cpg) {\n+    public int consumeStack(final ConstantPoolGen constantPoolGen) {\n         return Const.getConsumeStack((int)this.opcode);\n     }\n     \n     public Instruction copy() {\n-        Instruction i = null;\n+        Instruction instruction = null;\n         if (InstructionConst.getInstruction((int)this.getOpcode()) != null) {\n-            i = this;\n+            instruction = this;\n         }\n         else {\n             try {\n-                i = (Instruction)this.clone();\n+                instruction = (Instruction)this.clone();\n             }\n-            catch (final CloneNotSupportedException e) {\n-                System.err.println(e);\n+            catch (final CloneNotSupportedException x) {\n+                System.err.println(x);\n             }\n         }\n-        return i;\n+        return instruction;\n     }\n     \n     void dispose() {\n     }\n     \n-    public void dump(final DataOutputStream out) throws IOException {\n-        out.writeByte(this.opcode);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeByte(this.opcode);\n     }\n     \n     @Override\n-    public boolean equals(final Object that) {\n-        return that instanceof Instruction && Instruction.cmp.equals(this, (Instruction)that);\n+    public boolean equals(final Object o) {\n+        return o instanceof Instruction && Instruction.cmp.equals(this, (Instruction)o);\n     }\n     \n     public int getLength() {\n         return this.length;\n     }\n     \n     public String getName() {\n@@ -506,42 +506,42 @@\n     }\n     \n     @Override\n     public int hashCode() {\n         return this.opcode;\n     }\n     \n-    protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException {\n+    protected void initFromFile(final ByteSequence byteSequence, final boolean b) throws IOException {\n     }\n     \n-    public int produceStack(final ConstantPoolGen cpg) {\n+    public int produceStack(final ConstantPoolGen constantPoolGen) {\n         return Const.getProduceStack((int)this.opcode);\n     }\n     \n-    final void setLength(final int length) {\n-        this.length = (short)length;\n+    final void setLength(final int n) {\n+        this.length = (short)n;\n     }\n     \n     final void setOpcode(final short opcode) {\n         this.opcode = opcode;\n     }\n     \n     @Override\n     public String toString() {\n         return this.toString(true);\n     }\n     \n-    public String toString(final boolean verbose) {\n-        if (verbose) {\n+    public String toString(final boolean b) {\n+        if (b) {\n             return this.getName() + \"[\" + this.opcode + \"](\" + this.length + \")\";\n         }\n         return this.getName();\n     }\n     \n-    public String toString(final ConstantPool cp) {\n+    public String toString(final ConstantPool constantPool) {\n         return this.toString(false);\n     }\n     \n     static {\n         EMPTY_ARRAY = new Instruction[0];\n         Instruction.cmp = InstructionComparator.DEFAULT;\n     }\n"}]}
