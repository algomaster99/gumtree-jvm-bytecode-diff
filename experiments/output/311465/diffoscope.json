{"diffoscope-json-version": 1, "source1": "first/OperandManager.class", "source2": "second/OperandManager.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,222 +1,222 @@\n-  SHA-256 checksum 9d0a9f315d498efa87cf8b7a55cc39ade823a314537d0f35b7a4c467e1d661ac\n+  SHA-256 checksum de86592dc517fb089e130b4abed1201fdc7eda84c546b69d4929e8927ec85151\n   Compiled from \"OperandManager.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #54                         // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager\n-  super_class: #55                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 46, methods: 30, attributes: 1\n Constant pool:\n-    #1 = Methodref          #55.#147      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #54.#148      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseCount:[I\n-    #3 = Fieldref           #54.#149      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseValue:[I\n-    #4 = Fieldref           #54.#150      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcByte:[I\n-    #5 = Fieldref           #54.#151      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcShort:[I\n-    #6 = Fieldref           #54.#152      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLocal:[I\n-    #7 = Fieldref           #54.#153      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLabel:[I\n-    #8 = Fieldref           #54.#154      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIntRef:[I\n-    #9 = Fieldref           #54.#155      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFloatRef:[I\n-   #10 = Fieldref           #54.#156      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLongRef:[I\n-   #11 = Fieldref           #54.#157      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcDoubleRef:[I\n-   #12 = Fieldref           #54.#158      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcStringRef:[I\n-   #13 = Fieldref           #54.#159      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcClassRef:[I\n-   #14 = Fieldref           #54.#160      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFieldRef:[I\n-   #15 = Fieldref           #54.#161      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcMethodRef:[I\n-   #16 = Fieldref           #54.#162      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIMethodRef:[I\n-   #17 = Fieldref           #54.#163      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisField:[I\n-   #18 = Fieldref           #54.#164      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperField:[I\n-   #19 = Fieldref           #54.#165      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisMethod:[I\n-   #20 = Fieldref           #54.#166      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperMethod:[I\n-   #21 = Fieldref           #54.#167      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcInitRef:[I\n-   #22 = Fieldref           #54.#168      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.wideByteCodes:[I\n-   #23 = Fieldref           #54.#169      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseCountIndex:I\n-   #24 = Fieldref           #54.#170      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseValueIndex:I\n-   #25 = Fieldref           #54.#171      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcByteIndex:I\n-   #26 = Fieldref           #54.#172      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcShortIndex:I\n-   #27 = Fieldref           #54.#173      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLocalIndex:I\n-   #28 = Fieldref           #54.#174      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLabelIndex:I\n-   #29 = Fieldref           #54.#175      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIntRefIndex:I\n-   #30 = Fieldref           #54.#176      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFloatRefIndex:I\n-   #31 = Fieldref           #54.#177      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLongRefIndex:I\n-   #32 = Fieldref           #54.#178      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcDoubleRefIndex:I\n-   #33 = Fieldref           #54.#179      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcStringRefIndex:I\n-   #34 = Fieldref           #54.#180      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcClassRefIndex:I\n-   #35 = Fieldref           #54.#181      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFieldRefIndex:I\n-   #36 = Fieldref           #54.#182      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcMethodRefIndex:I\n-   #37 = Fieldref           #54.#183      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIMethodRefIndex:I\n-   #38 = Fieldref           #54.#184      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisFieldIndex:I\n-   #39 = Fieldref           #54.#185      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperFieldIndex:I\n-   #40 = Fieldref           #54.#186      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisMethodIndex:I\n-   #41 = Fieldref           #54.#187      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperMethodIndex:I\n-   #42 = Fieldref           #54.#188      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcInitRefIndex:I\n-   #43 = Fieldref           #54.#189      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.wideByteCodeIndex:I\n-   #44 = Fieldref           #54.#190      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n-   #45 = Methodref          #191.#192     // org/apache/commons/compress/harmony/unpack200/Segment.getConstantPool:()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n-   #46 = Fieldref           #54.#193      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.currentClass:Ljava/lang/String;\n-   #47 = Fieldref           #54.#194      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.superClass:Ljava/lang/String;\n-   #48 = Fieldref           #54.#195      // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.newClass:Ljava/lang/String;\n-   #49 = Class              #196          // java/lang/Error\n-   #50 = String             #197          // Current class not set yet\n-   #51 = Methodref          #49.#198      // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n-   #52 = String             #199          // SuperClass not set yet\n-   #53 = String             #200          // New class not set yet\n-   #54 = Class              #201          // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager\n-   #55 = Class              #202          // java/lang/Object\n-   #56 = Utf8               bcCaseCount\n-   #57 = Utf8               [I\n-   #58 = Utf8               bcCaseValue\n-   #59 = Utf8               bcByte\n-   #60 = Utf8               bcShort\n-   #61 = Utf8               bcLocal\n-   #62 = Utf8               bcLabel\n-   #63 = Utf8               bcIntRef\n-   #64 = Utf8               bcFloatRef\n-   #65 = Utf8               bcLongRef\n-   #66 = Utf8               bcDoubleRef\n-   #67 = Utf8               bcStringRef\n-   #68 = Utf8               bcClassRef\n-   #69 = Utf8               bcFieldRef\n-   #70 = Utf8               bcMethodRef\n-   #71 = Utf8               bcIMethodRef\n-   #72 = Utf8               bcThisField\n-   #73 = Utf8               bcSuperField\n-   #74 = Utf8               bcThisMethod\n-   #75 = Utf8               bcSuperMethod\n-   #76 = Utf8               bcInitRef\n-   #77 = Utf8               wideByteCodes\n-   #78 = Utf8               bcCaseCountIndex\n-   #79 = Utf8               I\n-   #80 = Utf8               bcCaseValueIndex\n-   #81 = Utf8               bcByteIndex\n-   #82 = Utf8               bcShortIndex\n-   #83 = Utf8               bcLocalIndex\n-   #84 = Utf8               bcLabelIndex\n-   #85 = Utf8               bcIntRefIndex\n-   #86 = Utf8               bcFloatRefIndex\n-   #87 = Utf8               bcLongRefIndex\n-   #88 = Utf8               bcDoubleRefIndex\n-   #89 = Utf8               bcStringRefIndex\n-   #90 = Utf8               bcClassRefIndex\n-   #91 = Utf8               bcFieldRefIndex\n-   #92 = Utf8               bcMethodRefIndex\n-   #93 = Utf8               bcIMethodRefIndex\n-   #94 = Utf8               bcThisFieldIndex\n-   #95 = Utf8               bcSuperFieldIndex\n-   #96 = Utf8               bcThisMethodIndex\n-   #97 = Utf8               bcSuperMethodIndex\n-   #98 = Utf8               bcInitRefIndex\n-   #99 = Utf8               wideByteCodeIndex\n-  #100 = Utf8               segment\n-  #101 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/Segment;\n-  #102 = Utf8               currentClass\n-  #103 = Utf8               Ljava/lang/String;\n-  #104 = Utf8               superClass\n-  #105 = Utf8               newClass\n-  #106 = Utf8               <init>\n-  #107 = Utf8               ([I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I)V\n-  #108 = Utf8               Code\n-  #109 = Utf8               LineNumberTable\n-  #110 = Utf8               nextCaseCount\n-  #111 = Utf8               ()I\n-  #112 = Utf8               nextCaseValues\n-  #113 = Utf8               nextByte\n-  #114 = Utf8               nextShort\n-  #115 = Utf8               nextLocal\n-  #116 = Utf8               nextLabel\n-  #117 = Utf8               nextIntRef\n-  #118 = Utf8               nextFloatRef\n-  #119 = Utf8               nextLongRef\n-  #120 = Utf8               nextDoubleRef\n-  #121 = Utf8               nextStringRef\n-  #122 = Utf8               nextClassRef\n-  #123 = Utf8               nextFieldRef\n-  #124 = Utf8               nextMethodRef\n-  #125 = Utf8               nextIMethodRef\n-  #126 = Utf8               nextThisFieldRef\n-  #127 = Utf8               nextSuperFieldRef\n-  #128 = Utf8               nextThisMethodRef\n-  #129 = Utf8               nextSuperMethodRef\n-  #130 = Utf8               nextInitRef\n-  #131 = Utf8               nextWideByteCode\n-  #132 = Utf8               setSegment\n-  #133 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/Segment;)V\n-  #134 = Utf8               globalConstantPool\n-  #135 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n-  #136 = Utf8               setCurrentClass\n-  #137 = Utf8               (Ljava/lang/String;)V\n-  #138 = Utf8               setSuperClass\n-  #139 = Utf8               setNewClass\n-  #140 = Utf8               getCurrentClass\n-  #141 = Utf8               ()Ljava/lang/String;\n-  #142 = Utf8               StackMapTable\n-  #143 = Utf8               getSuperClass\n-  #144 = Utf8               getNewClass\n-  #145 = Utf8               SourceFile\n-  #146 = Utf8               OperandManager.java\n-  #147 = NameAndType        #106:#203     // \"<init>\":()V\n-  #148 = NameAndType        #56:#57       // bcCaseCount:[I\n-  #149 = NameAndType        #58:#57       // bcCaseValue:[I\n-  #150 = NameAndType        #59:#57       // bcByte:[I\n-  #151 = NameAndType        #60:#57       // bcShort:[I\n-  #152 = NameAndType        #61:#57       // bcLocal:[I\n-  #153 = NameAndType        #62:#57       // bcLabel:[I\n-  #154 = NameAndType        #63:#57       // bcIntRef:[I\n-  #155 = NameAndType        #64:#57       // bcFloatRef:[I\n-  #156 = NameAndType        #65:#57       // bcLongRef:[I\n-  #157 = NameAndType        #66:#57       // bcDoubleRef:[I\n-  #158 = NameAndType        #67:#57       // bcStringRef:[I\n-  #159 = NameAndType        #68:#57       // bcClassRef:[I\n-  #160 = NameAndType        #69:#57       // bcFieldRef:[I\n-  #161 = NameAndType        #70:#57       // bcMethodRef:[I\n-  #162 = NameAndType        #71:#57       // bcIMethodRef:[I\n-  #163 = NameAndType        #72:#57       // bcThisField:[I\n-  #164 = NameAndType        #73:#57       // bcSuperField:[I\n-  #165 = NameAndType        #74:#57       // bcThisMethod:[I\n-  #166 = NameAndType        #75:#57       // bcSuperMethod:[I\n-  #167 = NameAndType        #76:#57       // bcInitRef:[I\n-  #168 = NameAndType        #77:#57       // wideByteCodes:[I\n-  #169 = NameAndType        #78:#79       // bcCaseCountIndex:I\n-  #170 = NameAndType        #80:#79       // bcCaseValueIndex:I\n-  #171 = NameAndType        #81:#79       // bcByteIndex:I\n-  #172 = NameAndType        #82:#79       // bcShortIndex:I\n-  #173 = NameAndType        #83:#79       // bcLocalIndex:I\n-  #174 = NameAndType        #84:#79       // bcLabelIndex:I\n-  #175 = NameAndType        #85:#79       // bcIntRefIndex:I\n-  #176 = NameAndType        #86:#79       // bcFloatRefIndex:I\n-  #177 = NameAndType        #87:#79       // bcLongRefIndex:I\n-  #178 = NameAndType        #88:#79       // bcDoubleRefIndex:I\n-  #179 = NameAndType        #89:#79       // bcStringRefIndex:I\n-  #180 = NameAndType        #90:#79       // bcClassRefIndex:I\n-  #181 = NameAndType        #91:#79       // bcFieldRefIndex:I\n-  #182 = NameAndType        #92:#79       // bcMethodRefIndex:I\n-  #183 = NameAndType        #93:#79       // bcIMethodRefIndex:I\n-  #184 = NameAndType        #94:#79       // bcThisFieldIndex:I\n-  #185 = NameAndType        #95:#79       // bcSuperFieldIndex:I\n-  #186 = NameAndType        #96:#79       // bcThisMethodIndex:I\n-  #187 = NameAndType        #97:#79       // bcSuperMethodIndex:I\n-  #188 = NameAndType        #98:#79       // bcInitRefIndex:I\n-  #189 = NameAndType        #99:#79       // wideByteCodeIndex:I\n-  #190 = NameAndType        #100:#101     // segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n-  #191 = Class              #204          // org/apache/commons/compress/harmony/unpack200/Segment\n-  #192 = NameAndType        #205:#135     // getConstantPool:()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n-  #193 = NameAndType        #102:#103     // currentClass:Ljava/lang/String;\n-  #194 = NameAndType        #104:#103     // superClass:Ljava/lang/String;\n-  #195 = NameAndType        #105:#103     // newClass:Ljava/lang/String;\n-  #196 = Utf8               java/lang/Error\n-  #197 = Utf8               Current class not set yet\n-  #198 = NameAndType        #106:#137     // \"<init>\":(Ljava/lang/String;)V\n-  #199 = Utf8               SuperClass not set yet\n-  #200 = Utf8               New class not set yet\n-  #201 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager\n-  #202 = Utf8               java/lang/Object\n-  #203 = Utf8               ()V\n-  #204 = Utf8               org/apache/commons/compress/harmony/unpack200/Segment\n-  #205 = Utf8               getConstantPool\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseCount:[I\n+    #8 = Class              #10           // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager\n+    #9 = NameAndType        #11:#12       // bcCaseCount:[I\n+   #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager\n+   #11 = Utf8               bcCaseCount\n+   #12 = Utf8               [I\n+   #13 = Fieldref           #8.#14        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseValue:[I\n+   #14 = NameAndType        #15:#12       // bcCaseValue:[I\n+   #15 = Utf8               bcCaseValue\n+   #16 = Fieldref           #8.#17        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcByte:[I\n+   #17 = NameAndType        #18:#12       // bcByte:[I\n+   #18 = Utf8               bcByte\n+   #19 = Fieldref           #8.#20        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcShort:[I\n+   #20 = NameAndType        #21:#12       // bcShort:[I\n+   #21 = Utf8               bcShort\n+   #22 = Fieldref           #8.#23        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLocal:[I\n+   #23 = NameAndType        #24:#12       // bcLocal:[I\n+   #24 = Utf8               bcLocal\n+   #25 = Fieldref           #8.#26        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLabel:[I\n+   #26 = NameAndType        #27:#12       // bcLabel:[I\n+   #27 = Utf8               bcLabel\n+   #28 = Fieldref           #8.#29        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIntRef:[I\n+   #29 = NameAndType        #30:#12       // bcIntRef:[I\n+   #30 = Utf8               bcIntRef\n+   #31 = Fieldref           #8.#32        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFloatRef:[I\n+   #32 = NameAndType        #33:#12       // bcFloatRef:[I\n+   #33 = Utf8               bcFloatRef\n+   #34 = Fieldref           #8.#35        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLongRef:[I\n+   #35 = NameAndType        #36:#12       // bcLongRef:[I\n+   #36 = Utf8               bcLongRef\n+   #37 = Fieldref           #8.#38        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcDoubleRef:[I\n+   #38 = NameAndType        #39:#12       // bcDoubleRef:[I\n+   #39 = Utf8               bcDoubleRef\n+   #40 = Fieldref           #8.#41        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcStringRef:[I\n+   #41 = NameAndType        #42:#12       // bcStringRef:[I\n+   #42 = Utf8               bcStringRef\n+   #43 = Fieldref           #8.#44        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcClassRef:[I\n+   #44 = NameAndType        #45:#12       // bcClassRef:[I\n+   #45 = Utf8               bcClassRef\n+   #46 = Fieldref           #8.#47        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFieldRef:[I\n+   #47 = NameAndType        #48:#12       // bcFieldRef:[I\n+   #48 = Utf8               bcFieldRef\n+   #49 = Fieldref           #8.#50        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcMethodRef:[I\n+   #50 = NameAndType        #51:#12       // bcMethodRef:[I\n+   #51 = Utf8               bcMethodRef\n+   #52 = Fieldref           #8.#53        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIMethodRef:[I\n+   #53 = NameAndType        #54:#12       // bcIMethodRef:[I\n+   #54 = Utf8               bcIMethodRef\n+   #55 = Fieldref           #8.#56        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisField:[I\n+   #56 = NameAndType        #57:#12       // bcThisField:[I\n+   #57 = Utf8               bcThisField\n+   #58 = Fieldref           #8.#59        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperField:[I\n+   #59 = NameAndType        #60:#12       // bcSuperField:[I\n+   #60 = Utf8               bcSuperField\n+   #61 = Fieldref           #8.#62        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisMethod:[I\n+   #62 = NameAndType        #63:#12       // bcThisMethod:[I\n+   #63 = Utf8               bcThisMethod\n+   #64 = Fieldref           #8.#65        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperMethod:[I\n+   #65 = NameAndType        #66:#12       // bcSuperMethod:[I\n+   #66 = Utf8               bcSuperMethod\n+   #67 = Fieldref           #8.#68        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcInitRef:[I\n+   #68 = NameAndType        #69:#12       // bcInitRef:[I\n+   #69 = Utf8               bcInitRef\n+   #70 = Fieldref           #8.#71        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.wideByteCodes:[I\n+   #71 = NameAndType        #72:#12       // wideByteCodes:[I\n+   #72 = Utf8               wideByteCodes\n+   #73 = Fieldref           #8.#74        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseCountIndex:I\n+   #74 = NameAndType        #75:#76       // bcCaseCountIndex:I\n+   #75 = Utf8               bcCaseCountIndex\n+   #76 = Utf8               I\n+   #77 = Fieldref           #8.#78        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcCaseValueIndex:I\n+   #78 = NameAndType        #79:#76       // bcCaseValueIndex:I\n+   #79 = Utf8               bcCaseValueIndex\n+   #80 = Fieldref           #8.#81        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcByteIndex:I\n+   #81 = NameAndType        #82:#76       // bcByteIndex:I\n+   #82 = Utf8               bcByteIndex\n+   #83 = Fieldref           #8.#84        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcShortIndex:I\n+   #84 = NameAndType        #85:#76       // bcShortIndex:I\n+   #85 = Utf8               bcShortIndex\n+   #86 = Fieldref           #8.#87        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLocalIndex:I\n+   #87 = NameAndType        #88:#76       // bcLocalIndex:I\n+   #88 = Utf8               bcLocalIndex\n+   #89 = Fieldref           #8.#90        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLabelIndex:I\n+   #90 = NameAndType        #91:#76       // bcLabelIndex:I\n+   #91 = Utf8               bcLabelIndex\n+   #92 = Fieldref           #8.#93        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIntRefIndex:I\n+   #93 = NameAndType        #94:#76       // bcIntRefIndex:I\n+   #94 = Utf8               bcIntRefIndex\n+   #95 = Fieldref           #8.#96        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFloatRefIndex:I\n+   #96 = NameAndType        #97:#76       // bcFloatRefIndex:I\n+   #97 = Utf8               bcFloatRefIndex\n+   #98 = Fieldref           #8.#99        // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcLongRefIndex:I\n+   #99 = NameAndType        #100:#76      // bcLongRefIndex:I\n+  #100 = Utf8               bcLongRefIndex\n+  #101 = Fieldref           #8.#102       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcDoubleRefIndex:I\n+  #102 = NameAndType        #103:#76      // bcDoubleRefIndex:I\n+  #103 = Utf8               bcDoubleRefIndex\n+  #104 = Fieldref           #8.#105       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcStringRefIndex:I\n+  #105 = NameAndType        #106:#76      // bcStringRefIndex:I\n+  #106 = Utf8               bcStringRefIndex\n+  #107 = Fieldref           #8.#108       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcClassRefIndex:I\n+  #108 = NameAndType        #109:#76      // bcClassRefIndex:I\n+  #109 = Utf8               bcClassRefIndex\n+  #110 = Fieldref           #8.#111       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcFieldRefIndex:I\n+  #111 = NameAndType        #112:#76      // bcFieldRefIndex:I\n+  #112 = Utf8               bcFieldRefIndex\n+  #113 = Fieldref           #8.#114       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcMethodRefIndex:I\n+  #114 = NameAndType        #115:#76      // bcMethodRefIndex:I\n+  #115 = Utf8               bcMethodRefIndex\n+  #116 = Fieldref           #8.#117       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcIMethodRefIndex:I\n+  #117 = NameAndType        #118:#76      // bcIMethodRefIndex:I\n+  #118 = Utf8               bcIMethodRefIndex\n+  #119 = Fieldref           #8.#120       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisFieldIndex:I\n+  #120 = NameAndType        #121:#76      // bcThisFieldIndex:I\n+  #121 = Utf8               bcThisFieldIndex\n+  #122 = Fieldref           #8.#123       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperFieldIndex:I\n+  #123 = NameAndType        #124:#76      // bcSuperFieldIndex:I\n+  #124 = Utf8               bcSuperFieldIndex\n+  #125 = Fieldref           #8.#126       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcThisMethodIndex:I\n+  #126 = NameAndType        #127:#76      // bcThisMethodIndex:I\n+  #127 = Utf8               bcThisMethodIndex\n+  #128 = Fieldref           #8.#129       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcSuperMethodIndex:I\n+  #129 = NameAndType        #130:#76      // bcSuperMethodIndex:I\n+  #130 = Utf8               bcSuperMethodIndex\n+  #131 = Fieldref           #8.#132       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.bcInitRefIndex:I\n+  #132 = NameAndType        #133:#76      // bcInitRefIndex:I\n+  #133 = Utf8               bcInitRefIndex\n+  #134 = Fieldref           #8.#135       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.wideByteCodeIndex:I\n+  #135 = NameAndType        #136:#76      // wideByteCodeIndex:I\n+  #136 = Utf8               wideByteCodeIndex\n+  #137 = Fieldref           #8.#138       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n+  #138 = NameAndType        #139:#140     // segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n+  #139 = Utf8               segment\n+  #140 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/Segment;\n+  #141 = Methodref          #142.#143     // org/apache/commons/compress/harmony/unpack200/Segment.getConstantPool:()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n+  #142 = Class              #144          // org/apache/commons/compress/harmony/unpack200/Segment\n+  #143 = NameAndType        #145:#146     // getConstantPool:()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n+  #144 = Utf8               org/apache/commons/compress/harmony/unpack200/Segment\n+  #145 = Utf8               getConstantPool\n+  #146 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n+  #147 = Fieldref           #8.#148       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.currentClass:Ljava/lang/String;\n+  #148 = NameAndType        #149:#150     // currentClass:Ljava/lang/String;\n+  #149 = Utf8               currentClass\n+  #150 = Utf8               Ljava/lang/String;\n+  #151 = Fieldref           #8.#152       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.superClass:Ljava/lang/String;\n+  #152 = NameAndType        #153:#150     // superClass:Ljava/lang/String;\n+  #153 = Utf8               superClass\n+  #154 = Fieldref           #8.#155       // org/apache/commons/compress/harmony/unpack200/bytecode/OperandManager.newClass:Ljava/lang/String;\n+  #155 = NameAndType        #156:#150     // newClass:Ljava/lang/String;\n+  #156 = Utf8               newClass\n+  #157 = Class              #158          // java/lang/Error\n+  #158 = Utf8               java/lang/Error\n+  #159 = String             #160          // Current class not set yet\n+  #160 = Utf8               Current class not set yet\n+  #161 = Methodref          #157.#162     // java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+  #162 = NameAndType        #5:#163       // \"<init>\":(Ljava/lang/String;)V\n+  #163 = Utf8               (Ljava/lang/String;)V\n+  #164 = String             #165          // SuperClass not set yet\n+  #165 = Utf8               SuperClass not set yet\n+  #166 = String             #167          // New class not set yet\n+  #167 = Utf8               New class not set yet\n+  #168 = Utf8               ([I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I[I)V\n+  #169 = Utf8               Code\n+  #170 = Utf8               LineNumberTable\n+  #171 = Utf8               nextCaseCount\n+  #172 = Utf8               ()I\n+  #173 = Utf8               nextCaseValues\n+  #174 = Utf8               nextByte\n+  #175 = Utf8               nextShort\n+  #176 = Utf8               nextLocal\n+  #177 = Utf8               nextLabel\n+  #178 = Utf8               nextIntRef\n+  #179 = Utf8               nextFloatRef\n+  #180 = Utf8               nextLongRef\n+  #181 = Utf8               nextDoubleRef\n+  #182 = Utf8               nextStringRef\n+  #183 = Utf8               nextClassRef\n+  #184 = Utf8               nextFieldRef\n+  #185 = Utf8               nextMethodRef\n+  #186 = Utf8               nextIMethodRef\n+  #187 = Utf8               nextThisFieldRef\n+  #188 = Utf8               nextSuperFieldRef\n+  #189 = Utf8               nextThisMethodRef\n+  #190 = Utf8               nextSuperMethodRef\n+  #191 = Utf8               nextInitRef\n+  #192 = Utf8               nextWideByteCode\n+  #193 = Utf8               setSegment\n+  #194 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/Segment;)V\n+  #195 = Utf8               globalConstantPool\n+  #196 = Utf8               setCurrentClass\n+  #197 = Utf8               setSuperClass\n+  #198 = Utf8               setNewClass\n+  #199 = Utf8               getCurrentClass\n+  #200 = Utf8               ()Ljava/lang/String;\n+  #201 = Utf8               StackMapTable\n+  #202 = Utf8               getSuperClass\n+  #203 = Utf8               getNewClass\n+  #204 = Utf8               SourceFile\n+  #205 = Utf8               OperandManager.java\n {\n   int[] bcCaseCount;\n     descriptor: [I\n     flags: (0x0000)\n \n   int[] bcCaseValue;\n     descriptor: [I\n@@ -403,75 +403,75 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=22, args_size=22\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field bcCaseCount:[I\n+         6: putfield      #7                  // Field bcCaseCount:[I\n          9: aload_0\n         10: aload_2\n-        11: putfield      #3                  // Field bcCaseValue:[I\n+        11: putfield      #13                 // Field bcCaseValue:[I\n         14: aload_0\n         15: aload_3\n-        16: putfield      #4                  // Field bcByte:[I\n+        16: putfield      #16                 // Field bcByte:[I\n         19: aload_0\n         20: aload         4\n-        22: putfield      #5                  // Field bcShort:[I\n+        22: putfield      #19                 // Field bcShort:[I\n         25: aload_0\n         26: aload         5\n-        28: putfield      #6                  // Field bcLocal:[I\n+        28: putfield      #22                 // Field bcLocal:[I\n         31: aload_0\n         32: aload         6\n-        34: putfield      #7                  // Field bcLabel:[I\n+        34: putfield      #25                 // Field bcLabel:[I\n         37: aload_0\n         38: aload         7\n-        40: putfield      #8                  // Field bcIntRef:[I\n+        40: putfield      #28                 // Field bcIntRef:[I\n         43: aload_0\n         44: aload         8\n-        46: putfield      #9                  // Field bcFloatRef:[I\n+        46: putfield      #31                 // Field bcFloatRef:[I\n         49: aload_0\n         50: aload         9\n-        52: putfield      #10                 // Field bcLongRef:[I\n+        52: putfield      #34                 // Field bcLongRef:[I\n         55: aload_0\n         56: aload         10\n-        58: putfield      #11                 // Field bcDoubleRef:[I\n+        58: putfield      #37                 // Field bcDoubleRef:[I\n         61: aload_0\n         62: aload         11\n-        64: putfield      #12                 // Field bcStringRef:[I\n+        64: putfield      #40                 // Field bcStringRef:[I\n         67: aload_0\n         68: aload         12\n-        70: putfield      #13                 // Field bcClassRef:[I\n+        70: putfield      #43                 // Field bcClassRef:[I\n         73: aload_0\n         74: aload         13\n-        76: putfield      #14                 // Field bcFieldRef:[I\n+        76: putfield      #46                 // Field bcFieldRef:[I\n         79: aload_0\n         80: aload         14\n-        82: putfield      #15                 // Field bcMethodRef:[I\n+        82: putfield      #49                 // Field bcMethodRef:[I\n         85: aload_0\n         86: aload         15\n-        88: putfield      #16                 // Field bcIMethodRef:[I\n+        88: putfield      #52                 // Field bcIMethodRef:[I\n         91: aload_0\n         92: aload         16\n-        94: putfield      #17                 // Field bcThisField:[I\n+        94: putfield      #55                 // Field bcThisField:[I\n         97: aload_0\n         98: aload         17\n-       100: putfield      #18                 // Field bcSuperField:[I\n+       100: putfield      #58                 // Field bcSuperField:[I\n        103: aload_0\n        104: aload         18\n-       106: putfield      #19                 // Field bcThisMethod:[I\n+       106: putfield      #61                 // Field bcThisMethod:[I\n        109: aload_0\n        110: aload         19\n-       112: putfield      #20                 // Field bcSuperMethod:[I\n+       112: putfield      #64                 // Field bcSuperMethod:[I\n        115: aload_0\n        116: aload         20\n-       118: putfield      #21                 // Field bcInitRef:[I\n+       118: putfield      #67                 // Field bcInitRef:[I\n        121: aload_0\n        122: aload         21\n-       124: putfield      #22                 // Field wideByteCodes:[I\n+       124: putfield      #70                 // Field wideByteCodes:[I\n        127: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 4\n         line 85: 9\n         line 86: 14\n         line 87: 19\n@@ -496,487 +496,487 @@\n \n   public int nextCaseCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field bcCaseCount:[I\n+         1: getfield      #7                  // Field bcCaseCount:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #23                 // Field bcCaseCountIndex:I\n+         6: getfield      #73                 // Field bcCaseCountIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #23                 // Field bcCaseCountIndex:I\n+        12: putfield      #73                 // Field bcCaseCountIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 109: 0\n \n   public int nextCaseValues();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field bcCaseValue:[I\n+         1: getfield      #13                 // Field bcCaseValue:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #24                 // Field bcCaseValueIndex:I\n+         6: getfield      #77                 // Field bcCaseValueIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #24                 // Field bcCaseValueIndex:I\n+        12: putfield      #77                 // Field bcCaseValueIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 113: 0\n \n   public int nextByte();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field bcByte:[I\n+         1: getfield      #16                 // Field bcByte:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #25                 // Field bcByteIndex:I\n+         6: getfield      #80                 // Field bcByteIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #25                 // Field bcByteIndex:I\n+        12: putfield      #80                 // Field bcByteIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 117: 0\n \n   public int nextShort();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bcShort:[I\n+         1: getfield      #19                 // Field bcShort:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #26                 // Field bcShortIndex:I\n+         6: getfield      #83                 // Field bcShortIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #26                 // Field bcShortIndex:I\n+        12: putfield      #83                 // Field bcShortIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 121: 0\n \n   public int nextLocal();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field bcLocal:[I\n+         1: getfield      #22                 // Field bcLocal:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #27                 // Field bcLocalIndex:I\n+         6: getfield      #86                 // Field bcLocalIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #27                 // Field bcLocalIndex:I\n+        12: putfield      #86                 // Field bcLocalIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 125: 0\n \n   public int nextLabel();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field bcLabel:[I\n+         1: getfield      #25                 // Field bcLabel:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #28                 // Field bcLabelIndex:I\n+         6: getfield      #89                 // Field bcLabelIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #28                 // Field bcLabelIndex:I\n+        12: putfield      #89                 // Field bcLabelIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 129: 0\n \n   public int nextIntRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field bcIntRef:[I\n+         1: getfield      #28                 // Field bcIntRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #29                 // Field bcIntRefIndex:I\n+         6: getfield      #92                 // Field bcIntRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #29                 // Field bcIntRefIndex:I\n+        12: putfield      #92                 // Field bcIntRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 133: 0\n \n   public int nextFloatRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field bcFloatRef:[I\n+         1: getfield      #31                 // Field bcFloatRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #30                 // Field bcFloatRefIndex:I\n+         6: getfield      #95                 // Field bcFloatRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #30                 // Field bcFloatRefIndex:I\n+        12: putfield      #95                 // Field bcFloatRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 137: 0\n \n   public int nextLongRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field bcLongRef:[I\n+         1: getfield      #34                 // Field bcLongRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #31                 // Field bcLongRefIndex:I\n+         6: getfield      #98                 // Field bcLongRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #31                 // Field bcLongRefIndex:I\n+        12: putfield      #98                 // Field bcLongRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 141: 0\n \n   public int nextDoubleRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field bcDoubleRef:[I\n+         1: getfield      #37                 // Field bcDoubleRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #32                 // Field bcDoubleRefIndex:I\n+         6: getfield      #101                // Field bcDoubleRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #32                 // Field bcDoubleRefIndex:I\n+        12: putfield      #101                // Field bcDoubleRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 145: 0\n \n   public int nextStringRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field bcStringRef:[I\n+         1: getfield      #40                 // Field bcStringRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #33                 // Field bcStringRefIndex:I\n+         6: getfield      #104                // Field bcStringRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #33                 // Field bcStringRefIndex:I\n+        12: putfield      #104                // Field bcStringRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 149: 0\n \n   public int nextClassRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field bcClassRef:[I\n+         1: getfield      #43                 // Field bcClassRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #34                 // Field bcClassRefIndex:I\n+         6: getfield      #107                // Field bcClassRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #34                 // Field bcClassRefIndex:I\n+        12: putfield      #107                // Field bcClassRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 153: 0\n \n   public int nextFieldRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field bcFieldRef:[I\n+         1: getfield      #46                 // Field bcFieldRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #35                 // Field bcFieldRefIndex:I\n+         6: getfield      #110                // Field bcFieldRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #35                 // Field bcFieldRefIndex:I\n+        12: putfield      #110                // Field bcFieldRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 157: 0\n \n   public int nextMethodRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field bcMethodRef:[I\n+         1: getfield      #49                 // Field bcMethodRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #36                 // Field bcMethodRefIndex:I\n+         6: getfield      #113                // Field bcMethodRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #36                 // Field bcMethodRefIndex:I\n+        12: putfield      #113                // Field bcMethodRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 161: 0\n \n   public int nextIMethodRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field bcIMethodRef:[I\n+         1: getfield      #52                 // Field bcIMethodRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #37                 // Field bcIMethodRefIndex:I\n+         6: getfield      #116                // Field bcIMethodRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #37                 // Field bcIMethodRefIndex:I\n+        12: putfield      #116                // Field bcIMethodRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 165: 0\n \n   public int nextThisFieldRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field bcThisField:[I\n+         1: getfield      #55                 // Field bcThisField:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #38                 // Field bcThisFieldIndex:I\n+         6: getfield      #119                // Field bcThisFieldIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #38                 // Field bcThisFieldIndex:I\n+        12: putfield      #119                // Field bcThisFieldIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 169: 0\n \n   public int nextSuperFieldRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field bcSuperField:[I\n+         1: getfield      #58                 // Field bcSuperField:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #39                 // Field bcSuperFieldIndex:I\n+         6: getfield      #122                // Field bcSuperFieldIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #39                 // Field bcSuperFieldIndex:I\n+        12: putfield      #122                // Field bcSuperFieldIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 173: 0\n \n   public int nextThisMethodRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field bcThisMethod:[I\n+         1: getfield      #61                 // Field bcThisMethod:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #40                 // Field bcThisMethodIndex:I\n+         6: getfield      #125                // Field bcThisMethodIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #40                 // Field bcThisMethodIndex:I\n+        12: putfield      #125                // Field bcThisMethodIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 177: 0\n \n   public int nextSuperMethodRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field bcSuperMethod:[I\n+         1: getfield      #64                 // Field bcSuperMethod:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #41                 // Field bcSuperMethodIndex:I\n+         6: getfield      #128                // Field bcSuperMethodIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #41                 // Field bcSuperMethodIndex:I\n+        12: putfield      #128                // Field bcSuperMethodIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 181: 0\n \n   public int nextInitRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field bcInitRef:[I\n+         1: getfield      #67                 // Field bcInitRef:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #42                 // Field bcInitRefIndex:I\n+         6: getfield      #131                // Field bcInitRefIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #42                 // Field bcInitRefIndex:I\n+        12: putfield      #131                // Field bcInitRefIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 185: 0\n \n   public int nextWideByteCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field wideByteCodes:[I\n+         1: getfield      #70                 // Field wideByteCodes:[I\n          4: aload_0\n          5: dup\n-         6: getfield      #43                 // Field wideByteCodeIndex:I\n+         6: getfield      #134                // Field wideByteCodeIndex:I\n          9: dup_x1\n         10: iconst_1\n         11: iadd\n-        12: putfield      #43                 // Field wideByteCodeIndex:I\n+        12: putfield      #134                // Field wideByteCodeIndex:I\n         15: iaload\n         16: ireturn\n       LineNumberTable:\n         line 189: 0\n \n   public void setSegment(org.apache.commons.compress.harmony.unpack200.Segment);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/Segment;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #44                 // Field segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n+         2: putfield      #137                // Field segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n          5: return\n       LineNumberTable:\n         line 193: 0\n         line 194: 5\n \n   public org.apache.commons.compress.harmony.unpack200.SegmentConstantPool globalConstantPool();\n     descriptor: ()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #44                 // Field segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n-         4: invokevirtual #45                 // Method org/apache/commons/compress/harmony/unpack200/Segment.getConstantPool:()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n+         1: getfield      #137                // Field segment:Lorg/apache/commons/compress/harmony/unpack200/Segment;\n+         4: invokevirtual #141                // Method org/apache/commons/compress/harmony/unpack200/Segment.getConstantPool:()Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;\n          7: areturn\n       LineNumberTable:\n         line 197: 0\n \n   public void setCurrentClass(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #46                 // Field currentClass:Ljava/lang/String;\n+         2: putfield      #147                // Field currentClass:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 201: 0\n         line 202: 5\n \n   public void setSuperClass(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #47                 // Field superClass:Ljava/lang/String;\n+         2: putfield      #151                // Field superClass:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 205: 0\n         line 206: 5\n \n   public void setNewClass(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #48                 // Field newClass:Ljava/lang/String;\n+         2: putfield      #154                // Field newClass:Ljava/lang/String;\n          5: return\n       LineNumberTable:\n         line 209: 0\n         line 210: 5\n \n   public java.lang.String getCurrentClass();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aconst_null\n          1: aload_0\n-         2: getfield      #46                 // Field currentClass:Ljava/lang/String;\n+         2: getfield      #147                // Field currentClass:Ljava/lang/String;\n          5: if_acmpne     18\n-         8: new           #49                 // class java/lang/Error\n+         8: new           #157                // class java/lang/Error\n         11: dup\n-        12: ldc           #50                 // String Current class not set yet\n-        14: invokespecial #51                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #159                // String Current class not set yet\n+        14: invokespecial #161                // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n-        19: getfield      #46                 // Field currentClass:Ljava/lang/String;\n+        19: getfield      #147                // Field currentClass:Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 213: 0\n         line 214: 8\n         line 216: 18\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n@@ -984,23 +984,23 @@\n   public java.lang.String getSuperClass();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aconst_null\n          1: aload_0\n-         2: getfield      #47                 // Field superClass:Ljava/lang/String;\n+         2: getfield      #151                // Field superClass:Ljava/lang/String;\n          5: if_acmpne     18\n-         8: new           #49                 // class java/lang/Error\n+         8: new           #157                // class java/lang/Error\n         11: dup\n-        12: ldc           #52                 // String SuperClass not set yet\n-        14: invokespecial #51                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #164                // String SuperClass not set yet\n+        14: invokespecial #161                // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n-        19: getfield      #47                 // Field superClass:Ljava/lang/String;\n+        19: getfield      #151                // Field superClass:Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 220: 0\n         line 221: 8\n         line 223: 18\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n@@ -1008,23 +1008,23 @@\n   public java.lang.String getNewClass();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aconst_null\n          1: aload_0\n-         2: getfield      #48                 // Field newClass:Ljava/lang/String;\n+         2: getfield      #154                // Field newClass:Ljava/lang/String;\n          5: if_acmpne     18\n-         8: new           #49                 // class java/lang/Error\n+         8: new           #157                // class java/lang/Error\n         11: dup\n-        12: ldc           #53                 // String New class not set yet\n-        14: invokespecial #51                 // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #166                // String New class not set yet\n+        14: invokespecial #161                // Method java/lang/Error.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n-        19: getfield      #48                 // Field newClass:Ljava/lang/String;\n+        19: getfield      #154                // Field newClass:Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 227: 0\n         line 228: 8\n         line 230: 18\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n"}]}
