{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,42 +1,42 @@\n-  SHA-256 checksum b7b0871d47a4b5214d74431a04c683520c74edd8fa28123f68223c12ea6a417f\n+  SHA-256 checksum 235a00d3d19789a6bf64f8d9278443efbc2e4b3e42a2296a602e41ca5b937193\n   Compiled from \"ThresholdingOutputStream.java\"\n public class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #25                         // org/apache/commons/io/output/ThresholdingOutputStream\n   super_class: #17                        // java/io/OutputStream\n   interfaces: 0, fields: 6, methods: 17, attributes: 3\n Constant pool:\n-    #1 = InterfaceMethodref #86.#87       // org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n-    #2 = Fieldref           #25.#88       // org/apache/commons/io/output/ThresholdingOutputStream.NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-    #3 = Methodref          #25.#89       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-    #4 = Methodref          #17.#90       // java/io/OutputStream.\"<init>\":()V\n-    #5 = Fieldref           #25.#91       // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n-    #6 = Fieldref           #25.#92       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n-    #7 = Fieldref           #25.#93       // org/apache/commons/io/output/ThresholdingOutputStream.outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n-    #8 = Fieldref           #25.#94       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n-    #9 = Fieldref           #25.#95       // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n-   #10 = Methodref          #25.#96       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n-   #11 = Methodref          #25.#97       // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n-   #12 = Class              #98           // java/io/IOException\n-   #13 = Methodref          #25.#99       // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n-   #14 = Methodref          #17.#100      // java/io/OutputStream.close:()V\n-   #15 = Methodref          #17.#97       // java/io/OutputStream.flush:()V\n-   #16 = InterfaceMethodref #101.#102     // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #17 = Class              #103          // java/io/OutputStream\n-   #18 = InterfaceMethodref #86.#104      // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n-   #19 = Methodref          #25.#105      // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n-   #20 = Methodref          #17.#106      // java/io/OutputStream.write:([B)V\n-   #21 = Methodref          #17.#107      // java/io/OutputStream.write:([BII)V\n-   #22 = Methodref          #17.#108      // java/io/OutputStream.write:(I)V\n-   #23 = Fieldref           #109.#110     // org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n-   #24 = InvokeDynamic      #0:#116       // #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n-   #25 = Class              #117          // org/apache/commons/io/output/ThresholdingOutputStream\n+    #1 = InterfaceMethodref #50.#84       // org/apache/commons/io/function/IOConsumer.noop:()Lorg/apache/commons/io/function/IOConsumer;\n+    #2 = Fieldref           #25.#85       // org/apache/commons/io/output/ThresholdingOutputStream.NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+    #3 = Methodref          #25.#86       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+    #4 = Methodref          #17.#87       // java/io/OutputStream.\"<init>\":()V\n+    #5 = Fieldref           #25.#88       // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n+    #6 = Fieldref           #25.#89       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+    #7 = Fieldref           #25.#90       // org/apache/commons/io/output/ThresholdingOutputStream.outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+    #8 = Fieldref           #25.#91       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n+    #9 = Fieldref           #25.#92       // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n+   #10 = Methodref          #25.#93       // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n+   #11 = Methodref          #25.#94       // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n+   #12 = Class              #95           // java/io/IOException\n+   #13 = Methodref          #25.#96       // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n+   #14 = Methodref          #17.#97       // java/io/OutputStream.close:()V\n+   #15 = Methodref          #17.#94       // java/io/OutputStream.flush:()V\n+   #16 = InterfaceMethodref #51.#98       // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #17 = Class              #99           // java/io/OutputStream\n+   #18 = InterfaceMethodref #50.#100      // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+   #19 = Methodref          #25.#101      // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n+   #20 = Methodref          #17.#102      // java/io/OutputStream.write:([B)V\n+   #21 = Methodref          #17.#103      // java/io/OutputStream.write:([BII)V\n+   #22 = Methodref          #17.#104      // java/io/OutputStream.write:(I)V\n+   #23 = Fieldref           #105.#106     // org/apache/commons/io/output/NullOutputStream.NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+   #24 = InvokeDynamic      #0:#112       // #0:apply:()Lorg/apache/commons/io/function/IOFunction;\n+   #25 = Class              #113          // org/apache/commons/io/output/ThresholdingOutputStream\n    #26 = Utf8               NOOP_OS_GETTER\n    #27 = Utf8               Lorg/apache/commons/io/function/IOFunction;\n    #28 = Utf8               Signature\n    #29 = Utf8               Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n    #30 = Utf8               threshold\n    #31 = Utf8               I\n    #32 = Utf8               thresholdConsumer\n@@ -53,108 +53,104 @@\n    #43 = Utf8               LineNumberTable\n    #44 = Utf8               LocalVariableTable\n    #45 = Utf8               this\n    #46 = Utf8               Lorg/apache/commons/io/output/ThresholdingOutputStream;\n    #47 = Utf8               (ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n    #48 = Utf8               LocalVariableTypeTable\n    #49 = Utf8               StackMapTable\n-   #50 = Class              #117          // org/apache/commons/io/output/ThresholdingOutputStream\n-   #51 = Class              #118          // org/apache/commons/io/function/IOConsumer\n-   #52 = Class              #119          // org/apache/commons/io/function/IOFunction\n-   #53 = Utf8               (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n-   #54 = Utf8               checkThreshold\n-   #55 = Utf8               count\n-   #56 = Utf8               Exceptions\n-   #57 = Utf8               close\n-   #58 = Utf8               ()V\n-   #59 = Class              #98           // java/io/IOException\n-   #60 = Utf8               flush\n-   #61 = Utf8               getByteCount\n-   #62 = Utf8               ()J\n-   #63 = Utf8               getStream\n-   #64 = Utf8               ()Ljava/io/OutputStream;\n-   #65 = Utf8               getThreshold\n-   #66 = Utf8               ()I\n-   #67 = Utf8               isThresholdExceeded\n-   #68 = Utf8               ()Z\n-   #69 = Utf8               resetByteCount\n-   #70 = Utf8               setByteCount\n-   #71 = Utf8               (J)V\n-   #72 = Utf8               thresholdReached\n-   #73 = Utf8               write\n-   #74 = Utf8               ([B)V\n-   #75 = Utf8               b\n-   #76 = Utf8               [B\n-   #77 = Utf8               ([BII)V\n-   #78 = Utf8               off\n-   #79 = Utf8               len\n-   #80 = Utf8               lambda$static$0\n-   #81 = Utf8               (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-   #82 = Utf8               os\n-   #83 = Utf8               <clinit>\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               ThresholdingOutputStream.java\n-   #86 = Class              #118          // org/apache/commons/io/function/IOConsumer\n-   #87 = NameAndType        #120:#121     // noop:()Lorg/apache/commons/io/function/IOConsumer;\n-   #88 = NameAndType        #26:#27       // NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n-   #89 = NameAndType        #40:#47       // \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n-   #90 = NameAndType        #40:#58       // \"<init>\":()V\n-   #91 = NameAndType        #30:#31       // threshold:I\n-   #92 = NameAndType        #32:#33       // thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n-   #93 = NameAndType        #35:#27       // outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n-   #94 = NameAndType        #38:#39       // thresholdExceeded:Z\n-   #95 = NameAndType        #36:#37       // written:J\n-   #96 = NameAndType        #72:#58       // thresholdReached:()V\n-   #97 = NameAndType        #60:#58       // flush:()V\n-   #98 = Utf8               java/io/IOException\n-   #99 = NameAndType        #63:#64       // getStream:()Ljava/io/OutputStream;\n-  #100 = NameAndType        #57:#58       // close:()V\n-  #101 = Class              #119          // org/apache/commons/io/function/IOFunction\n-  #102 = NameAndType        #122:#123     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #103 = Utf8               java/io/OutputStream\n-  #104 = NameAndType        #124:#125     // accept:(Ljava/lang/Object;)V\n-  #105 = NameAndType        #54:#41       // checkThreshold:(I)V\n-  #106 = NameAndType        #73:#74       // write:([B)V\n-  #107 = NameAndType        #73:#77       // write:([BII)V\n-  #108 = NameAndType        #73:#41       // write:(I)V\n-  #109 = Class              #126          // org/apache/commons/io/output/NullOutputStream\n-  #110 = NameAndType        #127:#128     // NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n-  #111 = Utf8               BootstrapMethods\n-  #112 = MethodHandle       6:#129        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #113 = MethodType         #123          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #114 = MethodHandle       6:#130        // REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #115 = MethodType         #81           //  (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #116 = NameAndType        #122:#131     // apply:()Lorg/apache/commons/io/function/IOFunction;\n-  #117 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #118 = Utf8               org/apache/commons/io/function/IOConsumer\n-  #119 = Utf8               org/apache/commons/io/function/IOFunction\n-  #120 = Utf8               noop\n-  #121 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n-  #122 = Utf8               apply\n-  #123 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #124 = Utf8               accept\n-  #125 = Utf8               (Ljava/lang/Object;)V\n-  #126 = Utf8               org/apache/commons/io/output/NullOutputStream\n-  #127 = Utf8               NULL_OUTPUT_STREAM\n-  #128 = Utf8               Lorg/apache/commons/io/output/NullOutputStream;\n-  #129 = Methodref          #132.#133     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #130 = Methodref          #25.#134      // org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #131 = Utf8               ()Lorg/apache/commons/io/function/IOFunction;\n-  #132 = Class              #135          // java/lang/invoke/LambdaMetafactory\n-  #133 = NameAndType        #136:#140     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #134 = NameAndType        #80:#81       // lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-  #135 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #136 = Utf8               metafactory\n-  #137 = Class              #142          // java/lang/invoke/MethodHandles$Lookup\n-  #138 = Utf8               Lookup\n-  #139 = Utf8               InnerClasses\n-  #140 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #141 = Class              #143          // java/lang/invoke/MethodHandles\n-  #142 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #143 = Utf8               java/lang/invoke/MethodHandles\n+   #50 = Class              #114          // org/apache/commons/io/function/IOConsumer\n+   #51 = Class              #115          // org/apache/commons/io/function/IOFunction\n+   #52 = Utf8               (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n+   #53 = Utf8               checkThreshold\n+   #54 = Utf8               count\n+   #55 = Utf8               Exceptions\n+   #56 = Utf8               close\n+   #57 = Utf8               ()V\n+   #58 = Utf8               flush\n+   #59 = Utf8               getByteCount\n+   #60 = Utf8               ()J\n+   #61 = Utf8               getStream\n+   #62 = Utf8               ()Ljava/io/OutputStream;\n+   #63 = Utf8               getThreshold\n+   #64 = Utf8               ()I\n+   #65 = Utf8               isThresholdExceeded\n+   #66 = Utf8               ()Z\n+   #67 = Utf8               resetByteCount\n+   #68 = Utf8               setByteCount\n+   #69 = Utf8               (J)V\n+   #70 = Utf8               thresholdReached\n+   #71 = Utf8               write\n+   #72 = Utf8               ([B)V\n+   #73 = Utf8               b\n+   #74 = Utf8               [B\n+   #75 = Utf8               ([BII)V\n+   #76 = Utf8               off\n+   #77 = Utf8               len\n+   #78 = Utf8               lambda$static$0\n+   #79 = Utf8               (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+   #80 = Utf8               os\n+   #81 = Utf8               <clinit>\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               ThresholdingOutputStream.java\n+   #84 = NameAndType        #116:#117     // noop:()Lorg/apache/commons/io/function/IOConsumer;\n+   #85 = NameAndType        #26:#27       // NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n+   #86 = NameAndType        #40:#47       // \"<init>\":(ILorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOFunction;)V\n+   #87 = NameAndType        #40:#57       // \"<init>\":()V\n+   #88 = NameAndType        #30:#31       // threshold:I\n+   #89 = NameAndType        #32:#33       // thresholdConsumer:Lorg/apache/commons/io/function/IOConsumer;\n+   #90 = NameAndType        #35:#27       // outputStreamGetter:Lorg/apache/commons/io/function/IOFunction;\n+   #91 = NameAndType        #38:#39       // thresholdExceeded:Z\n+   #92 = NameAndType        #36:#37       // written:J\n+   #93 = NameAndType        #70:#57       // thresholdReached:()V\n+   #94 = NameAndType        #58:#57       // flush:()V\n+   #95 = Utf8               java/io/IOException\n+   #96 = NameAndType        #61:#62       // getStream:()Ljava/io/OutputStream;\n+   #97 = NameAndType        #56:#57       // close:()V\n+   #98 = NameAndType        #118:#119     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #99 = Utf8               java/io/OutputStream\n+  #100 = NameAndType        #120:#121     // accept:(Ljava/lang/Object;)V\n+  #101 = NameAndType        #53:#41       // checkThreshold:(I)V\n+  #102 = NameAndType        #71:#72       // write:([B)V\n+  #103 = NameAndType        #71:#75       // write:([BII)V\n+  #104 = NameAndType        #71:#41       // write:(I)V\n+  #105 = Class              #122          // org/apache/commons/io/output/NullOutputStream\n+  #106 = NameAndType        #123:#124     // NULL_OUTPUT_STREAM:Lorg/apache/commons/io/output/NullOutputStream;\n+  #107 = Utf8               BootstrapMethods\n+  #108 = MethodHandle       6:#125        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #109 = MethodType         #119          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #110 = MethodHandle       6:#126        // REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #111 = MethodType         #79           //  (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #112 = NameAndType        #118:#127     // apply:()Lorg/apache/commons/io/function/IOFunction;\n+  #113 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+  #114 = Utf8               org/apache/commons/io/function/IOConsumer\n+  #115 = Utf8               org/apache/commons/io/function/IOFunction\n+  #116 = Utf8               noop\n+  #117 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n+  #118 = Utf8               apply\n+  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #120 = Utf8               accept\n+  #121 = Utf8               (Ljava/lang/Object;)V\n+  #122 = Utf8               org/apache/commons/io/output/NullOutputStream\n+  #123 = Utf8               NULL_OUTPUT_STREAM\n+  #124 = Utf8               Lorg/apache/commons/io/output/NullOutputStream;\n+  #125 = Methodref          #128.#129     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #126 = Methodref          #25.#130      // org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #127 = Utf8               ()Lorg/apache/commons/io/function/IOFunction;\n+  #128 = Class              #131          // java/lang/invoke/LambdaMetafactory\n+  #129 = NameAndType        #132:#136     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #130 = NameAndType        #78:#79       // lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+  #131 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #132 = Utf8               metafactory\n+  #133 = Class              #138          // java/lang/invoke/MethodHandles$Lookup\n+  #134 = Utf8               Lookup\n+  #135 = Utf8               InnerClasses\n+  #136 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #137 = Class              #139          // java/lang/invoke/MethodHandles\n+  #138 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #139 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final org.apache.commons.io.function.IOFunction<org.apache.commons.io.output.ThresholdingOutputStream, java.io.OutputStream> NOOP_OS_GETTER;\n     descriptor: Lorg/apache/commons/io/function/IOFunction;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     Signature: #29                          // Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;\n \n   private final int threshold;\n@@ -250,15 +246,15 @@\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream, class org/apache/commons/io/function/IOConsumer ]\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/io/output/ThresholdingOutputStream, int, class org/apache/commons/io/function/IOConsumer, class org/apache/commons/io/function/IOFunction ]\n           stack = [ class org/apache/commons/io/output/ThresholdingOutputStream, class org/apache/commons/io/function/IOFunction ]\n-    Signature: #53                          // (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n+    Signature: #52                          // (ILorg/apache/commons/io/function/IOConsumer<Lorg/apache/commons/io/output/ThresholdingOutputStream;>;Lorg/apache/commons/io/function/IOFunction<Lorg/apache/commons/io/output/ThresholdingOutputStream;Ljava/io/OutputStream;>;)V\n \n   protected void checkThreshold(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n@@ -598,14 +594,14 @@\n          5: putstatic     #2                  // Field NOOP_OS_GETTER:Lorg/apache/commons/io/function/IOFunction;\n          8: return\n       LineNumberTable:\n         line 43: 0\n }\n SourceFile: \"ThresholdingOutputStream.java\"\n InnerClasses:\n-  public static final #138= #137 of #141; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #134= #133 of #137; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #112 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #108 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #113 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #114 REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n-      #115 (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+      #109 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #110 REF_invokeStatic org/apache/commons/io/output/ThresholdingOutputStream.lambda$static$0:(Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n+      #111 (Lorg/apache/commons/io/output/ThresholdingOutputStream;)Ljava/io/OutputStream;\n"}]}
