{"diffoscope-json-version": 1, "source1": "first/AbstractFileFilter.class", "source2": "second/AbstractFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,180 +1,180 @@\n-  SHA-256 checksum 5a490a227565539ac9b042824a579270d24db3ba128ec5f764b630f8d1252fd5\n+  SHA-256 checksum badb0c03a1aad663f4f83d01a2ca8c2848244cf944e5bfba14b78aa6db46da8a\n   Compiled from \"AbstractFileFilter.java\"\n public abstract class org.apache.commons.io.filefilter.AbstractFileFilter implements org.apache.commons.io.filefilter.IOFileFilter,org.apache.commons.io.file.PathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #11                         // org/apache/commons/io/filefilter/AbstractFileFilter\n-  super_class: #17                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/filefilter/AbstractFileFilter\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 2, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #2.#3         // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-    #2 = Class              #4            // java/nio/file/FileVisitResult\n-    #3 = NameAndType        #5:#6         // CONTINUE:Ljava/nio/file/FileVisitResult;\n-    #4 = Utf8               java/nio/file/FileVisitResult\n-    #5 = Utf8               CONTINUE\n-    #6 = Utf8               Ljava/nio/file/FileVisitResult;\n-    #7 = Fieldref           #2.#8         // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-    #8 = NameAndType        #9:#6         // TERMINATE:Ljava/nio/file/FileVisitResult;\n-    #9 = Utf8               TERMINATE\n-   #10 = Methodref          #11.#12       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":(Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n-   #11 = Class              #13           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #12 = NameAndType        #14:#15       // \"<init>\":(Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n-   #13 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #14 = Utf8               <init>\n-   #15 = Utf8               (Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n-   #16 = Methodref          #17.#18       // java/lang/Object.\"<init>\":()V\n-   #17 = Class              #19           // java/lang/Object\n-   #18 = NameAndType        #14:#20       // \"<init>\":()V\n-   #19 = Utf8               java/lang/Object\n-   #20 = Utf8               ()V\n-   #21 = Fieldref           #11.#22       // org/apache/commons/io/filefilter/AbstractFileFilter.onAccept:Ljava/nio/file/FileVisitResult;\n-   #22 = NameAndType        #23:#6        // onAccept:Ljava/nio/file/FileVisitResult;\n-   #23 = Utf8               onAccept\n-   #24 = Fieldref           #11.#25       // org/apache/commons/io/filefilter/AbstractFileFilter.onReject:Ljava/nio/file/FileVisitResult;\n-   #25 = NameAndType        #26:#6        // onReject:Ljava/nio/file/FileVisitResult;\n-   #26 = Utf8               onReject\n-   #27 = String             #28           // file\n-   #28 = Utf8               file\n-   #29 = Methodref          #30.#31       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #30 = Class              #32           // java/util/Objects\n-   #31 = NameAndType        #33:#34       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #32 = Utf8               java/util/Objects\n-   #33 = Utf8               requireNonNull\n-   #34 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #35 = Methodref          #36.#37       // java/io/File.getParentFile:()Ljava/io/File;\n-   #36 = Class              #38           // java/io/File\n-   #37 = NameAndType        #39:#40       // getParentFile:()Ljava/io/File;\n-   #38 = Utf8               java/io/File\n-   #39 = Utf8               getParentFile\n-   #40 = Utf8               ()Ljava/io/File;\n-   #41 = Methodref          #36.#42       // java/io/File.getName:()Ljava/lang/String;\n-   #42 = NameAndType        #43:#44       // getName:()Ljava/lang/String;\n-   #43 = Utf8               getName\n-   #44 = Utf8               ()Ljava/lang/String;\n-   #45 = Methodref          #11.#46       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #46 = NameAndType        #47:#48       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #47 = Utf8               accept\n-   #48 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #49 = String             #50           // name\n-   #50 = Utf8               name\n-   #51 = Methodref          #36.#52       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #52 = NameAndType        #14:#53       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #53 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #54 = Methodref          #11.#55       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n-   #55 = NameAndType        #47:#56       // accept:(Ljava/io/File;)Z\n-   #56 = Utf8               (Ljava/io/File;)Z\n-   #57 = InterfaceMethodref #58.#59       // java/util/List.size:()I\n-   #58 = Class              #60           // java/util/List\n-   #59 = NameAndType        #61:#62       // size:()I\n-   #60 = Utf8               java/util/List\n-   #61 = Utf8               size\n-   #62 = Utf8               ()I\n-   #63 = String             #64           // ,\n-   #64 = Utf8               ,\n-   #65 = Methodref          #66.#67       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #66 = Class              #68           // java/lang/StringBuilder\n-   #67 = NameAndType        #69:#70       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #68 = Utf8               java/lang/StringBuilder\n-   #69 = Utf8               append\n-   #70 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #71 = InterfaceMethodref #58.#72       // java/util/List.get:(I)Ljava/lang/Object;\n-   #72 = NameAndType        #73:#74       // get:(I)Ljava/lang/Object;\n-   #73 = Utf8               get\n-   #74 = Utf8               (I)Ljava/lang/Object;\n-   #75 = Methodref          #66.#76       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #76 = NameAndType        #69:#77       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #77 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #78 = InterfaceMethodref #79.#80       // org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n-   #79 = Class              #81           // org/apache/commons/io/function/IOSupplier\n-   #80 = NameAndType        #73:#82       // get:()Ljava/lang/Object;\n-   #81 = Utf8               org/apache/commons/io/function/IOSupplier\n-   #82 = Utf8               ()Ljava/lang/Object;\n-   #83 = Class              #84           // java/io/IOException\n-   #84 = Utf8               java/io/IOException\n-   #85 = Methodref          #11.#86       // org/apache/commons/io/filefilter/AbstractFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #86 = NameAndType        #87:#88       // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #87 = Utf8               handle\n-   #88 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n-   #89 = Methodref          #11.#90       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #90 = NameAndType        #47:#91       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #91 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #92 = Methodref          #17.#93       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #93 = NameAndType        #94:#95       // getClass:()Ljava/lang/Class;\n-   #94 = Utf8               getClass\n-   #95 = Utf8               ()Ljava/lang/Class;\n-   #96 = Methodref          #97.#98       // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-   #97 = Class              #99           // java/lang/Class\n-   #98 = NameAndType        #100:#44      // getSimpleName:()Ljava/lang/String;\n-   #99 = Utf8               java/lang/Class\n-  #100 = Utf8               getSimpleName\n-  #101 = Class              #102          // java/nio/file/Path\n-  #102 = Utf8               java/nio/file/Path\n-  #103 = Methodref          #11.#104      // org/apache/commons/io/filefilter/AbstractFileFilter.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #104 = NameAndType        #105:#106     // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #105 = Utf8               postVisitDirectory\n-  #106 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #107 = Methodref          #11.#108      // org/apache/commons/io/filefilter/AbstractFileFilter.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #108 = NameAndType        #109:#106     // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #109 = Utf8               visitFileFailed\n-  #110 = Methodref          #11.#111      // org/apache/commons/io/filefilter/AbstractFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #111 = NameAndType        #112:#91      // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #112 = Utf8               visitFile\n-  #113 = Methodref          #11.#114      // org/apache/commons/io/filefilter/AbstractFileFilter.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #114 = NameAndType        #115:#91      // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #115 = Utf8               preVisitDirectory\n-  #116 = Class              #117          // org/apache/commons/io/filefilter/IOFileFilter\n-  #117 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #118 = Class              #119          // org/apache/commons/io/file/PathVisitor\n-  #119 = Utf8               org/apache/commons/io/file/PathVisitor\n-  #120 = Utf8               toDefaultFileVisitResult\n-  #121 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n-  #122 = Utf8               Code\n-  #123 = Utf8               LineNumberTable\n-  #124 = Utf8               LocalVariableTable\n-  #125 = Utf8               Z\n-  #126 = Utf8               StackMapTable\n-  #127 = Utf8               this\n-  #128 = Utf8               Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n-  #129 = Utf8               Ljava/io/File;\n-  #130 = Utf8               dir\n-  #131 = Utf8               Ljava/lang/String;\n-  #132 = Utf8               (Ljava/util/List;Ljava/lang/StringBuilder;)V\n-  #133 = Utf8               i\n-  #134 = Utf8               I\n-  #135 = Utf8               list\n-  #136 = Utf8               Ljava/util/List;\n-  #137 = Utf8               buffer\n-  #138 = Utf8               Ljava/lang/StringBuilder;\n-  #139 = Utf8               LocalVariableTypeTable\n-  #140 = Utf8               Ljava/util/List<*>;\n-  #141 = Utf8               Signature\n-  #142 = Utf8               (Ljava/util/List<*>;Ljava/lang/StringBuilder;)V\n-  #143 = Utf8               ([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n-  #144 = Utf8               array\n-  #145 = Utf8               [Ljava/lang/Object;\n-  #146 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n-  #147 = Utf8               e\n-  #148 = Utf8               Ljava/io/IOException;\n-  #149 = Utf8               supplier\n-  #150 = Utf8               Lorg/apache/commons/io/function/IOSupplier;\n-  #151 = Utf8               Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;\n-  #152 = Utf8               (Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;)Ljava/nio/file/FileVisitResult;\n-  #153 = Utf8               t\n-  #154 = Utf8               Ljava/lang/Throwable;\n-  #155 = Utf8               Ljava/nio/file/Path;\n-  #156 = Utf8               exc\n-  #157 = Utf8               Exceptions\n-  #158 = Utf8               attributes\n-  #159 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-  #160 = Utf8               toFileVisitResult\n-  #161 = Utf8               toString\n-  #162 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #163 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+    #1 = Class              #2            // org/apache/commons/io/filefilter/AbstractFileFilter\n+    #2 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // org/apache/commons/io/filefilter/IOFileFilter\n+    #6 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+    #7 = Class              #8            // org/apache/commons/io/file/PathVisitor\n+    #8 = Utf8               org/apache/commons/io/file/PathVisitor\n+    #9 = Utf8               onAccept\n+   #10 = Utf8               Ljava/nio/file/FileVisitResult;\n+   #11 = Utf8               onReject\n+   #12 = Utf8               toDefaultFileVisitResult\n+   #13 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n+   #14 = Utf8               Code\n+   #15 = Fieldref           #16.#18       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #16 = Class              #17           // java/nio/file/FileVisitResult\n+   #17 = Utf8               java/nio/file/FileVisitResult\n+   #18 = NameAndType        #19:#10       // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #19 = Utf8               CONTINUE\n+   #20 = Fieldref           #16.#21       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #21 = NameAndType        #22:#10       // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #22 = Utf8               TERMINATE\n+   #23 = Utf8               LineNumberTable\n+   #24 = Utf8               LocalVariableTable\n+   #25 = Utf8               accept\n+   #26 = Utf8               Z\n+   #27 = Utf8               StackMapTable\n+   #28 = Utf8               <init>\n+   #29 = Utf8               ()V\n+   #30 = Methodref          #1.#31        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":(Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n+   #31 = NameAndType        #28:#32       // \"<init>\":(Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n+   #32 = Utf8               (Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n+   #33 = Utf8               this\n+   #34 = Utf8               Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n+   #35 = Methodref          #3.#36        // java/lang/Object.\"<init>\":()V\n+   #36 = NameAndType        #28:#29       // \"<init>\":()V\n+   #37 = Fieldref           #1.#38        // org/apache/commons/io/filefilter/AbstractFileFilter.onAccept:Ljava/nio/file/FileVisitResult;\n+   #38 = NameAndType        #9:#10        // onAccept:Ljava/nio/file/FileVisitResult;\n+   #39 = Fieldref           #1.#40        // org/apache/commons/io/filefilter/AbstractFileFilter.onReject:Ljava/nio/file/FileVisitResult;\n+   #40 = NameAndType        #11:#10       // onReject:Ljava/nio/file/FileVisitResult;\n+   #41 = Utf8               (Ljava/io/File;)Z\n+   #42 = String             #43           // file\n+   #43 = Utf8               file\n+   #44 = Methodref          #45.#47       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #45 = Class              #46           // java/util/Objects\n+   #46 = Utf8               java/util/Objects\n+   #47 = NameAndType        #48:#49       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #48 = Utf8               requireNonNull\n+   #49 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #50 = Methodref          #51.#53       // java/io/File.getParentFile:()Ljava/io/File;\n+   #51 = Class              #52           // java/io/File\n+   #52 = Utf8               java/io/File\n+   #53 = NameAndType        #54:#55       // getParentFile:()Ljava/io/File;\n+   #54 = Utf8               getParentFile\n+   #55 = Utf8               ()Ljava/io/File;\n+   #56 = Methodref          #51.#57       // java/io/File.getName:()Ljava/lang/String;\n+   #57 = NameAndType        #58:#59       // getName:()Ljava/lang/String;\n+   #58 = Utf8               getName\n+   #59 = Utf8               ()Ljava/lang/String;\n+   #60 = Methodref          #1.#61        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #61 = NameAndType        #25:#62       // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+   #62 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #63 = Utf8               Ljava/io/File;\n+   #64 = String             #65           // name\n+   #65 = Utf8               name\n+   #66 = Methodref          #51.#67       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #67 = NameAndType        #28:#68       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #68 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #69 = Methodref          #1.#70        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+   #70 = NameAndType        #25:#41       // accept:(Ljava/io/File;)Z\n+   #71 = Utf8               dir\n+   #72 = Utf8               Ljava/lang/String;\n+   #73 = Utf8               append\n+   #74 = Utf8               (Ljava/util/List;Ljava/lang/StringBuilder;)V\n+   #75 = Utf8               Signature\n+   #76 = Utf8               (Ljava/util/List<*>;Ljava/lang/StringBuilder;)V\n+   #77 = String             #78           // ,\n+   #78 = Utf8               ,\n+   #79 = Methodref          #80.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = Class              #81           // java/lang/StringBuilder\n+   #81 = Utf8               java/lang/StringBuilder\n+   #82 = NameAndType        #73:#83       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #84 = InterfaceMethodref #85.#87       // java/util/List.get:(I)Ljava/lang/Object;\n+   #85 = Class              #86           // java/util/List\n+   #86 = Utf8               java/util/List\n+   #87 = NameAndType        #88:#89       // get:(I)Ljava/lang/Object;\n+   #88 = Utf8               get\n+   #89 = Utf8               (I)Ljava/lang/Object;\n+   #90 = Methodref          #80.#91       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #91 = NameAndType        #73:#92       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #92 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #93 = InterfaceMethodref #85.#94       // java/util/List.size:()I\n+   #94 = NameAndType        #95:#96       // size:()I\n+   #95 = Utf8               size\n+   #96 = Utf8               ()I\n+   #97 = Utf8               list\n+   #98 = Utf8               Ljava/util/List;\n+   #99 = Utf8               buffer\n+  #100 = Utf8               Ljava/lang/StringBuilder;\n+  #101 = Utf8               i\n+  #102 = Utf8               I\n+  #103 = Utf8               LocalVariableTypeTable\n+  #104 = Utf8               Ljava/util/List<*>;\n+  #105 = Utf8               ([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n+  #106 = Utf8               array\n+  #107 = Utf8               [Ljava/lang/Object;\n+  #108 = Utf8               (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n+  #109 = Utf8               (Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;)Ljava/nio/file/FileVisitResult;\n+  #110 = InterfaceMethodref #111.#113     // org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n+  #111 = Class              #112          // org/apache/commons/io/function/IOSupplier\n+  #112 = Utf8               org/apache/commons/io/function/IOSupplier\n+  #113 = NameAndType        #88:#114      // get:()Ljava/lang/Object;\n+  #114 = Utf8               ()Ljava/lang/Object;\n+  #115 = Methodref          #1.#116       // org/apache/commons/io/filefilter/AbstractFileFilter.handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #116 = NameAndType        #117:#118     // handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #117 = Utf8               handle\n+  #118 = Utf8               (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+  #119 = Class              #120          // java/io/IOException\n+  #120 = Utf8               java/io/IOException\n+  #121 = Utf8               supplier\n+  #122 = Utf8               Lorg/apache/commons/io/function/IOSupplier;\n+  #123 = Utf8               e\n+  #124 = Utf8               Ljava/io/IOException;\n+  #125 = Utf8               Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;\n+  #126 = Utf8               t\n+  #127 = Utf8               Ljava/lang/Throwable;\n+  #128 = Utf8               postVisitDirectory\n+  #129 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #130 = Utf8               Exceptions\n+  #131 = Utf8               Ljava/nio/file/Path;\n+  #132 = Utf8               exc\n+  #133 = Utf8               preVisitDirectory\n+  #134 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #135 = Methodref          #1.#136       // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #136 = NameAndType        #25:#134      // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #137 = Utf8               attributes\n+  #138 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #139 = Utf8               toFileVisitResult\n+  #140 = Utf8               toString\n+  #141 = Methodref          #3.#142       // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #142 = NameAndType        #143:#144     // getClass:()Ljava/lang/Class;\n+  #143 = Utf8               getClass\n+  #144 = Utf8               ()Ljava/lang/Class;\n+  #145 = Methodref          #146.#148     // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #146 = Class              #147          // java/lang/Class\n+  #147 = Utf8               java/lang/Class\n+  #148 = NameAndType        #149:#59      // getSimpleName:()Ljava/lang/String;\n+  #149 = Utf8               getSimpleName\n+  #150 = Utf8               visitFile\n+  #151 = Utf8               visitFileFailed\n+  #152 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #153 = Class              #154          // java/nio/file/Path\n+  #154 = Utf8               java/nio/file/Path\n+  #155 = Methodref          #1.#156       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #156 = NameAndType        #151:#129     // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #157 = Methodref          #1.#158       // org/apache/commons/io/filefilter/AbstractFileFilter.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #158 = NameAndType        #128:#129     // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #159 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #160 = Methodref          #1.#161       // org/apache/commons/io/filefilter/AbstractFileFilter.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #161 = NameAndType        #150:#134     // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #162 = Methodref          #1.#163       // org/apache/commons/io/filefilter/AbstractFileFilter.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #163 = NameAndType        #133:#134     // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n   #164 = Utf8               SourceFile\n   #165 = Utf8               AbstractFileFilter.java\n {\n   private final java.nio.file.FileVisitResult onAccept;\n     descriptor: Ljava/nio/file/FileVisitResult;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n@@ -185,17 +185,17 @@\n   static java.nio.file.FileVisitResult toDefaultFileVisitResult(boolean);\n     descriptor: (Z)Ljava/nio/file/FileVisitResult;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iload_0\n          1: ifeq          10\n-         4: getstatic     #1                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         4: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          7: goto          13\n-        10: getstatic     #7                  // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+        10: getstatic     #20                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n         13: areturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 accept   Z\n       StackMapTable: number_of_entries = 2\n@@ -205,38 +205,38 @@\n \n   public org.apache.commons.io.filefilter.AbstractFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #1                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-         4: getstatic     #7                  // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-         7: invokespecial #10                 // Method \"<init>\":(Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n+         1: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         4: getstatic     #20                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+         7: invokespecial #30                 // Method \"<init>\":(Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n         10: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n \n   protected org.apache.commons.io.filefilter.AbstractFileFilter(java.nio.file.FileVisitResult, java.nio.file.FileVisitResult);\n     descriptor: (Ljava/nio/file/FileVisitResult;Ljava/nio/file/FileVisitResult;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #16                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #35                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #21                 // Field onAccept:Ljava/nio/file/FileVisitResult;\n+         6: putfield      #37                 // Field onAccept:Ljava/nio/file/FileVisitResult;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #24                 // Field onReject:Ljava/nio/file/FileVisitResult;\n+        11: putfield      #39                 // Field onReject:Ljava/nio/file/FileVisitResult;\n         14: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 4\n         line 74: 9\n         line 75: 14\n       LocalVariableTable:\n@@ -247,23 +247,23 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #27                 // String file\n-         3: invokestatic  #29                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #42                 // String file\n+         3: invokestatic  #44                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: aload_1\n-         9: invokevirtual #35                 // Method java/io/File.getParentFile:()Ljava/io/File;\n+         9: invokevirtual #50                 // Method java/io/File.getParentFile:()Ljava/io/File;\n         12: aload_1\n-        13: invokevirtual #41                 // Method java/io/File.getName:()Ljava/lang/String;\n-        16: invokevirtual #45                 // Method accept:(Ljava/io/File;Ljava/lang/String;)Z\n+        13: invokevirtual #56                 // Method java/io/File.getName:()Ljava/lang/String;\n+        16: invokevirtual #60                 // Method accept:(Ljava/io/File;Ljava/lang/String;)Z\n         19: ireturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n@@ -271,229 +271,227 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_2\n-         1: ldc           #49                 // String name\n-         3: invokestatic  #29                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #64                 // String name\n+         3: invokestatic  #44                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n-         8: new           #36                 // class java/io/File\n+         8: new           #51                 // class java/io/File\n         11: dup\n         12: aload_1\n         13: aload_2\n-        14: invokespecial #51                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-        17: invokevirtual #54                 // Method accept:(Ljava/io/File;)Z\n+        14: invokespecial #66                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+        17: invokevirtual #69                 // Method accept:(Ljava/io/File;)Z\n         20: ireturn\n       LineNumberTable:\n         line 98: 0\n         line 99: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0      21     1   dir   Ljava/io/File;\n             0      21     2  name   Ljava/lang/String;\n \n   void append(java.util.List<?>, java.lang.StringBuilder);\n     descriptor: (Ljava/util/List;Ljava/lang/StringBuilder;)V\n     flags: (0x0000)\n+    Signature: #76                          // (Ljava/util/List<*>;Ljava/lang/StringBuilder;)V\n     Code:\n       stack=3, locals=4, args_size=3\n          0: iconst_0\n          1: istore_3\n-         2: iload_3\n-         3: aload_1\n-         4: invokeinterface #57,  1           // InterfaceMethod java/util/List.size:()I\n-         9: if_icmpge     41\n-        12: iload_3\n-        13: ifle          23\n+         2: goto          31\n+         5: iload_3\n+         6: ifle          16\n+         9: aload_2\n+        10: ldc           #77                 // String ,\n+        12: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: pop\n         16: aload_2\n-        17: ldc           #63                 // String ,\n-        19: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: pop\n-        23: aload_2\n-        24: aload_1\n-        25: iload_3\n-        26: invokeinterface #71,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        31: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        34: pop\n-        35: iinc          3, 1\n-        38: goto          2\n+        17: aload_1\n+        18: iload_3\n+        19: invokeinterface #84,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        24: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        27: pop\n+        28: iinc          3, 1\n+        31: iload_3\n+        32: aload_1\n+        33: invokeinterface #93,  1           // InterfaceMethod java/util/List.size:()I\n+        38: if_icmplt     5\n         41: return\n       LineNumberTable:\n         line 103: 0\n-        line 104: 12\n-        line 105: 16\n-        line 107: 23\n-        line 103: 35\n+        line 104: 5\n+        line 105: 9\n+        line 107: 16\n+        line 103: 28\n         line 109: 41\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            2      39     3     i   I\n             0      42     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0      42     1  list   Ljava/util/List;\n             0      42     2 buffer   Ljava/lang/StringBuilder;\n+            2      39     3     i   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      42     1  list   Ljava/util/List<*>;\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 20 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 17\n-    Signature: #142                         // (Ljava/util/List<*>;Ljava/lang/StringBuilder;)V\n+        frame_type = 10 /* same */\n+        frame_type = 14 /* same */\n \n   void append(java.lang.Object[], java.lang.StringBuilder);\n     descriptor: ([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=4, args_size=3\n          0: iconst_0\n          1: istore_3\n-         2: iload_3\n-         3: aload_1\n-         4: arraylength\n-         5: if_icmpge     33\n-         8: iload_3\n-         9: ifle          19\n-        12: aload_2\n-        13: ldc           #63                 // String ,\n-        15: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        18: pop\n-        19: aload_2\n-        20: aload_1\n-        21: iload_3\n-        22: aaload\n-        23: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        26: pop\n-        27: iinc          3, 1\n-        30: goto          2\n+         2: goto          27\n+         5: iload_3\n+         6: ifle          16\n+         9: aload_2\n+        10: ldc           #77                 // String ,\n+        12: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: pop\n+        16: aload_2\n+        17: aload_1\n+        18: iload_3\n+        19: aaload\n+        20: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        23: pop\n+        24: iinc          3, 1\n+        27: iload_3\n+        28: aload_1\n+        29: arraylength\n+        30: if_icmplt     5\n         33: return\n       LineNumberTable:\n         line 112: 0\n-        line 113: 8\n-        line 114: 12\n-        line 116: 19\n-        line 112: 27\n+        line 113: 5\n+        line 114: 9\n+        line 116: 16\n+        line 112: 24\n         line 118: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            2      31     3     i   I\n             0      34     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0      34     1 array   [Ljava/lang/Object;\n             0      34     2 buffer   Ljava/lang/StringBuilder;\n+            2      31     3     i   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 16 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 13\n+        frame_type = 10 /* same */\n+        frame_type = 10 /* same */\n \n   java.nio.file.FileVisitResult get(org.apache.commons.io.function.IOSupplier<java.nio.file.FileVisitResult>);\n     descriptor: (Lorg/apache/commons/io/function/IOSupplier;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0000)\n+    Signature: #109                         // (Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;)Ljava/nio/file/FileVisitResult;\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokeinterface #78,  1           // InterfaceMethod org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n-         6: checkcast     #2                  // class java/nio/file/FileVisitResult\n+         1: invokeinterface #110,  1          // InterfaceMethod org/apache/commons/io/function/IOSupplier.get:()Ljava/lang/Object;\n+         6: checkcast     #16                 // class java/nio/file/FileVisitResult\n          9: areturn\n         10: astore_2\n         11: aload_0\n         12: aload_2\n-        13: invokevirtual #85                 // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n+        13: invokevirtual #115                // Method handle:(Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n         16: areturn\n       Exception table:\n          from    to  target type\n              0     9    10   Class java/io/IOException\n       LineNumberTable:\n         line 122: 0\n         line 123: 10\n         line 124: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           11       6     2     e   Ljava/io/IOException;\n             0      17     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0      17     1 supplier   Lorg/apache/commons/io/function/IOSupplier;\n+           11       6     2     e   Ljava/io/IOException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      17     1 supplier   Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n-    Signature: #152                         // (Lorg/apache/commons/io/function/IOSupplier<Ljava/nio/file/FileVisitResult;>;)Ljava/nio/file/FileVisitResult;\n \n   protected java.nio.file.FileVisitResult handle(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=2, args_size=2\n-         0: getstatic     #7                  // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #20                 // Field java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 136: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       4     1     t   Ljava/lang/Throwable;\n \n   public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=3, args_size=3\n-         0: getstatic     #1                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 141: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       4     1   dir   Ljava/nio/file/Path;\n             0       4     2   exc   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #89                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         3: invokevirtual #135                // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          6: areturn\n       LineNumberTable:\n         line 146: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       7     1   dir   Ljava/nio/file/Path;\n             0       7     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n-    Exceptions:\n-      throws java.io.IOException\n \n   java.nio.file.FileVisitResult toFileVisitResult(boolean);\n     descriptor: (Z)Ljava/nio/file/FileVisitResult;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          11\n          4: aload_0\n-         5: getfield      #21                 // Field onAccept:Ljava/nio/file/FileVisitResult;\n+         5: getfield      #37                 // Field onAccept:Ljava/nio/file/FileVisitResult;\n          8: goto          15\n         11: aload_0\n-        12: getfield      #24                 // Field onReject:Ljava/nio/file/FileVisitResult;\n+        12: getfield      #39                 // Field onReject:Ljava/nio/file/FileVisitResult;\n         15: areturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0      16     1 accept   Z\n@@ -504,130 +502,126 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #92                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-         4: invokevirtual #96                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+         1: invokevirtual #141                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         4: invokevirtual #145                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokevirtual #89                 // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         3: invokevirtual #135                // Method accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          6: areturn\n       LineNumberTable:\n         line 171: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       7     1  file   Ljava/nio/file/Path;\n             0       7     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=3, args_size=3\n-         0: getstatic     #1                  // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+         0: getstatic     #15                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n          3: areturn\n       LineNumberTable:\n         line 176: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n             0       4     1  file   Ljava/nio/file/Path;\n             0       4     2   exc   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;\n+  public java.nio.file.FileVisitResult visitFileFailed(java.lang.Object, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #101                // class java/nio/file/Path\n+         2: checkcast     #153                // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #103                // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #155                // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n-        line 42: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  public java.nio.file.FileVisitResult visitFileFailed(java.lang.Object, java.io.IOException) throws java.io.IOException;\n+  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #101                // class java/nio/file/Path\n+         2: checkcast     #153                // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #107                // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #157                // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n-        line 42: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #101                // class java/nio/file/Path\n+         2: checkcast     #153                // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #110                // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #160                // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n-        line 42: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #101                // class java/nio/file/Path\n+         2: checkcast     #153                // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #113                // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #162                // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n-        line 42: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/filefilter/AbstractFileFilter;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"AbstractFileFilter.java\"\n"}]}
