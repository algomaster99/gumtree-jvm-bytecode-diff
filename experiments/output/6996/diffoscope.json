{"diffoscope-json-version": 1, "source1": "first/VMSVersioningFTPEntryParser.class", "source2": "second/VMSVersioningFTPEntryParser.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum 478dbed0ea2f8c4c51e8d57f5f7f9dd38e074c41198254df1288ff28d4402e1d\n+  SHA-256 checksum d13e9188ea8d8bfd9e730c950aac2bbdd39265223b41c70e304bd1a936216f49\n   Compiled from \"VMSVersioningFTPEntryParser.java\"\n public class org.apache.commons.net.ftp.parser.VMSVersioningFTPEntryParser extends org.apache.commons.net.ftp.parser.VMSFTPEntryParser\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #4                          // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n   super_class: #31                        // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n   interfaces: 0, fields: 2, methods: 4, attributes: 1\n Constant pool:\n-    #1 = Methodref          #4.#88        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.\"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-    #2 = Methodref          #31.#89       // org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n-    #3 = Methodref          #4.#90        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-    #4 = Class              #91           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-    #5 = String             #92           // (.*?);([0-9]+)\\\\s*.*\n-    #6 = Methodref          #93.#94       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-    #7 = Fieldref           #4.#95        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.preparsePattern:Ljava/util/regex/Pattern;\n-    #8 = Class              #96           // java/util/regex/PatternSyntaxException\n-    #9 = Class              #97           // java/lang/IllegalArgumentException\n-   #10 = String             #98           // Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-   #11 = Methodref          #9.#99        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Class              #100          // java/util/HashMap\n-   #13 = Methodref          #12.#89       // java/util/HashMap.\"<init>\":()V\n-   #14 = InterfaceMethodref #101.#102     // java/util/List.listIterator:()Ljava/util/ListIterator;\n-   #15 = InterfaceMethodref #103.#104     // java/util/ListIterator.hasNext:()Z\n-   #16 = InterfaceMethodref #103.#105     // java/util/ListIterator.next:()Ljava/lang/Object;\n-   #17 = Class              #106          // java/lang/String\n-   #18 = Methodref          #17.#107      // java/lang/String.trim:()Ljava/lang/String;\n-   #19 = Methodref          #93.#108      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #20 = Methodref          #109.#110     // java/util/regex/Matcher.matches:()Z\n-   #21 = Methodref          #109.#111     // java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n-   #22 = InterfaceMethodref #112.#113     // java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n-   #23 = Methodref          #25.#114      // java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #24 = Methodref          #12.#115      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #25 = Class              #116          // java/lang/Integer\n-   #26 = Methodref          #25.#117      // java/lang/Integer.intValue:()I\n-   #27 = InterfaceMethodref #103.#118     // java/util/ListIterator.remove:()V\n-   #28 = Methodref          #12.#119      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #29 = InterfaceMethodref #103.#120     // java/util/ListIterator.hasPrevious:()Z\n-   #30 = InterfaceMethodref #103.#121     // java/util/ListIterator.previous:()Ljava/lang/Object;\n-   #31 = Class              #122          // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+    #1 = Methodref          #4.#83        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.\"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #2 = Methodref          #31.#84       // org/apache/commons/net/ftp/parser/VMSFTPEntryParser.\"<init>\":()V\n+    #3 = Methodref          #4.#85        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+    #4 = Class              #86           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+    #5 = String             #87           // (.*?);([0-9]+)\\\\s*.*\n+    #6 = Methodref          #88.#89       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #7 = Fieldref           #4.#90        // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.preparsePattern:Ljava/util/regex/Pattern;\n+    #8 = Class              #91           // java/util/regex/PatternSyntaxException\n+    #9 = Class              #92           // java/lang/IllegalArgumentException\n+   #10 = String             #93           // Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+   #11 = Methodref          #9.#94        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Class              #95           // java/util/HashMap\n+   #13 = Methodref          #12.#84       // java/util/HashMap.\"<init>\":()V\n+   #14 = InterfaceMethodref #74.#96       // java/util/List.listIterator:()Ljava/util/ListIterator;\n+   #15 = InterfaceMethodref #73.#97       // java/util/ListIterator.hasNext:()Z\n+   #16 = InterfaceMethodref #73.#98       // java/util/ListIterator.next:()Ljava/lang/Object;\n+   #17 = Class              #99           // java/lang/String\n+   #18 = Methodref          #17.#100      // java/lang/String.trim:()Ljava/lang/String;\n+   #19 = Methodref          #88.#101      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #20 = Methodref          #76.#102      // java/util/regex/Matcher.matches:()Z\n+   #21 = Methodref          #76.#103      // java/util/regex/Matcher.toMatchResult:()Ljava/util/regex/MatchResult;\n+   #22 = InterfaceMethodref #75.#104      // java/util/regex/MatchResult.group:(I)Ljava/lang/String;\n+   #23 = Methodref          #25.#105      // java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #24 = Methodref          #12.#106      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #25 = Class              #107          // java/lang/Integer\n+   #26 = Methodref          #25.#108      // java/lang/Integer.intValue:()I\n+   #27 = InterfaceMethodref #73.#109      // java/util/ListIterator.remove:()V\n+   #28 = Methodref          #12.#110      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #29 = InterfaceMethodref #73.#111      // java/util/ListIterator.hasPrevious:()Z\n+   #30 = InterfaceMethodref #73.#112      // java/util/ListIterator.previous:()Ljava/lang/Object;\n+   #31 = Class              #113          // org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n    #32 = Utf8               preparsePattern\n    #33 = Utf8               Ljava/util/regex/Pattern;\n    #34 = Utf8               PRE_PARSE_REGEX\n    #35 = Utf8               Ljava/lang/String;\n    #36 = Utf8               ConstantValue\n    #37 = Utf8               <init>\n    #38 = Utf8               ()V\n@@ -53,122 +53,113 @@\n    #43 = Utf8               Lorg/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser;\n    #44 = Utf8               (Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n    #45 = Utf8               pse\n    #46 = Utf8               Ljava/util/regex/PatternSyntaxException;\n    #47 = Utf8               config\n    #48 = Utf8               Lorg/apache/commons/net/ftp/FTPClientConfig;\n    #49 = Utf8               StackMapTable\n-   #50 = Class              #91           // org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-   #51 = Class              #123          // org/apache/commons/net/ftp/FTPClientConfig\n-   #52 = Class              #96           // java/util/regex/PatternSyntaxException\n-   #53 = Utf8               preParse\n-   #54 = Utf8               (Ljava/util/List;)Ljava/util/List;\n-   #55 = Utf8               name\n-   #56 = Utf8               version\n-   #57 = Utf8               nv\n-   #58 = Utf8               Ljava/lang/Integer;\n-   #59 = Utf8               existing\n-   #60 = Utf8               entry\n-   #61 = Utf8               result\n-   #62 = Utf8               Ljava/util/regex/MatchResult;\n-   #63 = Utf8               _preparse_matcher_\n-   #64 = Utf8               Ljava/util/regex/Matcher;\n-   #65 = Utf8               original\n-   #66 = Utf8               Ljava/util/List;\n-   #67 = Utf8               existingEntries\n-   #68 = Utf8               Ljava/util/HashMap;\n-   #69 = Utf8               iter\n-   #70 = Utf8               Ljava/util/ListIterator;\n-   #71 = Utf8               LocalVariableTypeTable\n-   #72 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-   #73 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;\n-   #74 = Utf8               Ljava/util/ListIterator<Ljava/lang/String;>;\n-   #75 = Class              #100          // java/util/HashMap\n-   #76 = Class              #124          // java/util/ListIterator\n-   #77 = Class              #125          // java/util/List\n-   #78 = Class              #106          // java/lang/String\n-   #79 = Class              #126          // java/util/regex/MatchResult\n-   #80 = Class              #127          // java/util/regex/Matcher\n-   #81 = Class              #116          // java/lang/Integer\n-   #82 = Utf8               Signature\n-   #83 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n-   #84 = Utf8               isVersioning\n-   #85 = Utf8               ()Z\n-   #86 = Utf8               SourceFile\n-   #87 = Utf8               VMSVersioningFTPEntryParser.java\n-   #88 = NameAndType        #37:#44       // \"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #89 = NameAndType        #37:#38       // \"<init>\":()V\n-   #90 = NameAndType        #128:#44      // configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n-   #91 = Utf8               org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n-   #92 = Utf8               (.*?);([0-9]+)\\\\s*.*\n-   #93 = Class              #129          // java/util/regex/Pattern\n-   #94 = NameAndType        #130:#131     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #95 = NameAndType        #32:#33       // preparsePattern:Ljava/util/regex/Pattern;\n-   #96 = Utf8               java/util/regex/PatternSyntaxException\n-   #97 = Utf8               java/lang/IllegalArgumentException\n-   #98 = Utf8               Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n-   #99 = NameAndType        #37:#132      // \"<init>\":(Ljava/lang/String;)V\n-  #100 = Utf8               java/util/HashMap\n-  #101 = Class              #125          // java/util/List\n-  #102 = NameAndType        #133:#134     // listIterator:()Ljava/util/ListIterator;\n-  #103 = Class              #124          // java/util/ListIterator\n-  #104 = NameAndType        #135:#85      // hasNext:()Z\n-  #105 = NameAndType        #136:#137     // next:()Ljava/lang/Object;\n-  #106 = Utf8               java/lang/String\n-  #107 = NameAndType        #138:#139     // trim:()Ljava/lang/String;\n-  #108 = NameAndType        #140:#141     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #109 = Class              #127          // java/util/regex/Matcher\n-  #110 = NameAndType        #142:#85      // matches:()Z\n-  #111 = NameAndType        #143:#144     // toMatchResult:()Ljava/util/regex/MatchResult;\n-  #112 = Class              #126          // java/util/regex/MatchResult\n-  #113 = NameAndType        #145:#146     // group:(I)Ljava/lang/String;\n-  #114 = NameAndType        #147:#148     // valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #115 = NameAndType        #149:#150     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #116 = Utf8               java/lang/Integer\n-  #117 = NameAndType        #151:#152     // intValue:()I\n-  #118 = NameAndType        #153:#38      // remove:()V\n-  #119 = NameAndType        #154:#155     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #120 = NameAndType        #156:#85      // hasPrevious:()Z\n-  #121 = NameAndType        #157:#137     // previous:()Ljava/lang/Object;\n-  #122 = Utf8               org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n-  #123 = Utf8               org/apache/commons/net/ftp/FTPClientConfig\n-  #124 = Utf8               java/util/ListIterator\n-  #125 = Utf8               java/util/List\n-  #126 = Utf8               java/util/regex/MatchResult\n-  #127 = Utf8               java/util/regex/Matcher\n-  #128 = Utf8               configure\n-  #129 = Utf8               java/util/regex/Pattern\n-  #130 = Utf8               compile\n-  #131 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #132 = Utf8               (Ljava/lang/String;)V\n-  #133 = Utf8               listIterator\n-  #134 = Utf8               ()Ljava/util/ListIterator;\n-  #135 = Utf8               hasNext\n-  #136 = Utf8               next\n-  #137 = Utf8               ()Ljava/lang/Object;\n-  #138 = Utf8               trim\n-  #139 = Utf8               ()Ljava/lang/String;\n-  #140 = Utf8               matcher\n-  #141 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #142 = Utf8               matches\n-  #143 = Utf8               toMatchResult\n-  #144 = Utf8               ()Ljava/util/regex/MatchResult;\n-  #145 = Utf8               group\n-  #146 = Utf8               (I)Ljava/lang/String;\n-  #147 = Utf8               valueOf\n-  #148 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #149 = Utf8               get\n-  #150 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #151 = Utf8               intValue\n-  #152 = Utf8               ()I\n-  #153 = Utf8               remove\n-  #154 = Utf8               put\n-  #155 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #156 = Utf8               hasPrevious\n-  #157 = Utf8               previous\n+   #50 = Class              #114          // org/apache/commons/net/ftp/FTPClientConfig\n+   #51 = Utf8               preParse\n+   #52 = Utf8               (Ljava/util/List;)Ljava/util/List;\n+   #53 = Utf8               name\n+   #54 = Utf8               version\n+   #55 = Utf8               nv\n+   #56 = Utf8               Ljava/lang/Integer;\n+   #57 = Utf8               existing\n+   #58 = Utf8               entry\n+   #59 = Utf8               result\n+   #60 = Utf8               Ljava/util/regex/MatchResult;\n+   #61 = Utf8               _preparse_matcher_\n+   #62 = Utf8               Ljava/util/regex/Matcher;\n+   #63 = Utf8               original\n+   #64 = Utf8               Ljava/util/List;\n+   #65 = Utf8               existingEntries\n+   #66 = Utf8               Ljava/util/HashMap;\n+   #67 = Utf8               iter\n+   #68 = Utf8               Ljava/util/ListIterator;\n+   #69 = Utf8               LocalVariableTypeTable\n+   #70 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+   #71 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Integer;>;\n+   #72 = Utf8               Ljava/util/ListIterator<Ljava/lang/String;>;\n+   #73 = Class              #115          // java/util/ListIterator\n+   #74 = Class              #116          // java/util/List\n+   #75 = Class              #117          // java/util/regex/MatchResult\n+   #76 = Class              #118          // java/util/regex/Matcher\n+   #77 = Utf8               Signature\n+   #78 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n+   #79 = Utf8               isVersioning\n+   #80 = Utf8               ()Z\n+   #81 = Utf8               SourceFile\n+   #82 = Utf8               VMSVersioningFTPEntryParser.java\n+   #83 = NameAndType        #37:#44       // \"<init>\":(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+   #84 = NameAndType        #37:#38       // \"<init>\":()V\n+   #85 = NameAndType        #119:#44      // configure:(Lorg/apache/commons/net/ftp/FTPClientConfig;)V\n+   #86 = Utf8               org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser\n+   #87 = Utf8               (.*?);([0-9]+)\\\\s*.*\n+   #88 = Class              #120          // java/util/regex/Pattern\n+   #89 = NameAndType        #121:#122     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #90 = NameAndType        #32:#33       // preparsePattern:Ljava/util/regex/Pattern;\n+   #91 = Utf8               java/util/regex/PatternSyntaxException\n+   #92 = Utf8               java/lang/IllegalArgumentException\n+   #93 = Utf8               Unparseable regex supplied:  (.*?);([0-9]+)\\\\s*.*\n+   #94 = NameAndType        #37:#123      // \"<init>\":(Ljava/lang/String;)V\n+   #95 = Utf8               java/util/HashMap\n+   #96 = NameAndType        #124:#125     // listIterator:()Ljava/util/ListIterator;\n+   #97 = NameAndType        #126:#80      // hasNext:()Z\n+   #98 = NameAndType        #127:#128     // next:()Ljava/lang/Object;\n+   #99 = Utf8               java/lang/String\n+  #100 = NameAndType        #129:#130     // trim:()Ljava/lang/String;\n+  #101 = NameAndType        #131:#132     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #102 = NameAndType        #133:#80      // matches:()Z\n+  #103 = NameAndType        #134:#135     // toMatchResult:()Ljava/util/regex/MatchResult;\n+  #104 = NameAndType        #136:#137     // group:(I)Ljava/lang/String;\n+  #105 = NameAndType        #138:#139     // valueOf:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #106 = NameAndType        #140:#141     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #107 = Utf8               java/lang/Integer\n+  #108 = NameAndType        #142:#143     // intValue:()I\n+  #109 = NameAndType        #144:#38      // remove:()V\n+  #110 = NameAndType        #145:#146     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #111 = NameAndType        #147:#80      // hasPrevious:()Z\n+  #112 = NameAndType        #148:#128     // previous:()Ljava/lang/Object;\n+  #113 = Utf8               org/apache/commons/net/ftp/parser/VMSFTPEntryParser\n+  #114 = Utf8               org/apache/commons/net/ftp/FTPClientConfig\n+  #115 = Utf8               java/util/ListIterator\n+  #116 = Utf8               java/util/List\n+  #117 = Utf8               java/util/regex/MatchResult\n+  #118 = Utf8               java/util/regex/Matcher\n+  #119 = Utf8               configure\n+  #120 = Utf8               java/util/regex/Pattern\n+  #121 = Utf8               compile\n+  #122 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #123 = Utf8               (Ljava/lang/String;)V\n+  #124 = Utf8               listIterator\n+  #125 = Utf8               ()Ljava/util/ListIterator;\n+  #126 = Utf8               hasNext\n+  #127 = Utf8               next\n+  #128 = Utf8               ()Ljava/lang/Object;\n+  #129 = Utf8               trim\n+  #130 = Utf8               ()Ljava/lang/String;\n+  #131 = Utf8               matcher\n+  #132 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #133 = Utf8               matches\n+  #134 = Utf8               toMatchResult\n+  #135 = Utf8               ()Ljava/util/regex/MatchResult;\n+  #136 = Utf8               group\n+  #137 = Utf8               (I)Ljava/lang/String;\n+  #138 = Utf8               valueOf\n+  #139 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+  #140 = Utf8               get\n+  #141 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #142 = Utf8               intValue\n+  #143 = Utf8               ()I\n+  #144 = Utf8               remove\n+  #145 = Utf8               put\n+  #146 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #147 = Utf8               hasPrevious\n+  #148 = Utf8               previous\n {\n   private final java.util.regex.Pattern preparsePattern;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static final java.lang.String PRE_PARSE_REGEX = \"(.*?);([0-9]+)\\\\s*.*\";\n     descriptor: Ljava/lang/String;\n@@ -423,15 +414,15 @@\n           offset_delta = 8\n           locals = [ class org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser, class java/util/List, class java/util/HashMap, class java/util/ListIterator ]\n           stack = []\n         frame_type = 2 /* same */\n         frame_type = 251 /* same_frame_extended */\n           offset_delta = 114\n         frame_type = 2 /* same */\n-    Signature: #83                          // (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #78                          // (Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;\n \n   protected boolean isVersioning();\n     descriptor: ()Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: iconst_1\n"}]}
