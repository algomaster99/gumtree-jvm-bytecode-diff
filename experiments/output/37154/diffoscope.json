{"diffoscope-json-version": 1, "source1": "first/CSVFormat.class", "source2": "second/CSVFormat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum 66c9734967d311838131a962d83e8e592b6ce7b59765613a6d45ea6999dcb6bb\n+  SHA-256 checksum ffc519334fadffd2feae2908b8dcb487f481a68610a4102eca6053c7e66eb16c\n   Compiled from \"CSVFormat.java\"\n public final class org.apache.commons.csv.CSVFormat implements java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #10                         // org/apache/commons/csv/CSVFormat\n   super_class: #30                        // java/lang/Object\n@@ -155,513 +155,511 @@\n   #145 = Utf8               (Ljava/lang/Throwable;)V\n   #146 = Class              #147          // java/io/IOException\n   #147 = Utf8               java/io/IOException\n   #148 = Class              #149          // java/lang/IllegalStateException\n   #149 = Utf8               java/lang/IllegalStateException\n   #150 = Methodref          #148.#151     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n   #151 = NameAndType        #17:#145      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #152 = Methodref          #78.#79       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-  #153 = Methodref          #78.#79       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-  #154 = Methodref          #155.#156     // org/apache/commons/csv/QuoteMode.hashCode:()I\n-  #155 = Class              #157          // org/apache/commons/csv/QuoteMode\n-  #156 = NameAndType        #158:#159     // hashCode:()I\n-  #157 = Utf8               org/apache/commons/csv/QuoteMode\n-  #158 = Utf8               hashCode\n-  #159 = Utf8               ()I\n-  #160 = Methodref          #4.#156       // java/lang/Character.hashCode:()I\n-  #161 = Methodref          #112.#156     // java/lang/String.hashCode:()I\n-  #162 = Methodref          #115.#163     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-  #163 = NameAndType        #158:#164     // hashCode:([Ljava/lang/Object;)I\n-  #164 = Utf8               ([Ljava/lang/Object;)I\n-  #165 = Class              #166          // org/apache/commons/csv/CSVParser\n-  #166 = Utf8               org/apache/commons/csv/CSVParser\n-  #167 = Methodref          #165.#168     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #168 = NameAndType        #17:#169      // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #169 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #170 = Class              #171          // java/io/OutputStreamWriter\n-  #171 = Utf8               java/io/OutputStreamWriter\n-  #172 = Class              #173          // java/io/FileOutputStream\n-  #173 = Utf8               java/io/FileOutputStream\n-  #174 = Methodref          #172.#175     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-  #175 = NameAndType        #17:#176      // \"<init>\":(Ljava/io/File;)V\n-  #176 = Utf8               (Ljava/io/File;)V\n-  #177 = Methodref          #170.#178     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #178 = NameAndType        #17:#179      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #179 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #180 = String             #181          //\n-  #181 = Utf8\n-  #182 = Fieldref           #155.#183     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #183 = NameAndType        #184:#45      // ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #184 = Utf8               ALL\n-  #185 = Class              #186          // java/lang/StringBuilder\n-  #186 = Utf8               java/lang/StringBuilder\n-  #187 = Methodref          #185.#31      // java/lang/StringBuilder.\"<init>\":()V\n-  #188 = Methodref          #185.#189     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #189 = NameAndType        #190:#191     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #190 = Utf8               append\n-  #191 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #192 = Methodref          #185.#193     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #193 = NameAndType        #190:#194     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #194 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #195 = Methodref          #185.#132     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #196 = Class              #197          // java/lang/CharSequence\n-  #197 = Utf8               java/lang/CharSequence\n-  #198 = Methodref          #30.#132      // java/lang/Object.toString:()Ljava/lang/String;\n-  #199 = Methodref          #10.#200      // org/apache/commons/csv/CSVFormat.getTrim:()Z\n-  #200 = NameAndType        #201:#202     // getTrim:()Z\n-  #201 = Utf8               getTrim\n-  #202 = Utf8               ()Z\n-  #203 = Methodref          #10.#204      // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #204 = NameAndType        #96:#205      // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #205 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #206 = InterfaceMethodref #196.#207     // java/lang/CharSequence.length:()I\n-  #207 = NameAndType        #208:#159     // length:()I\n-  #208 = Utf8               length\n-  #209 = Methodref          #10.#210      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #210 = NameAndType        #211:#212     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #211 = Utf8               print\n-  #212 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #213 = Methodref          #10.#214      // org/apache/commons/csv/CSVFormat.getDelimiter:()C\n-  #214 = NameAndType        #215:#8       // getDelimiter:()C\n-  #215 = Utf8               getDelimiter\n-  #216 = InterfaceMethodref #217.#218     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-  #217 = Class              #219          // java/lang/Appendable\n-  #218 = NameAndType        #190:#220     // append:(C)Ljava/lang/Appendable;\n-  #219 = Utf8               java/lang/Appendable\n-  #220 = Utf8               (C)Ljava/lang/Appendable;\n-  #221 = InterfaceMethodref #217.#222     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #222 = NameAndType        #190:#223     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #223 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #224 = Methodref          #10.#225      // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n-  #225 = NameAndType        #226:#202     // isQuoteCharacterSet:()Z\n-  #226 = Utf8               isQuoteCharacterSet\n-  #227 = Methodref          #10.#228      // org/apache/commons/csv/CSVFormat.printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #228 = NameAndType        #229:#212     // printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n-  #229 = Utf8               printAndQuote\n-  #230 = Methodref          #10.#231      // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n-  #231 = NameAndType        #232:#202     // isEscapeCharacterSet:()Z\n-  #232 = Utf8               isEscapeCharacterSet\n-  #233 = Methodref          #10.#234      // org/apache/commons/csv/CSVFormat.printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n-  #234 = NameAndType        #235:#236     // printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n-  #235 = Utf8               printAndEscape\n-  #236 = Utf8               (Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n-  #237 = InterfaceMethodref #217.#238     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #238 = NameAndType        #190:#239     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #239 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #240 = Class              #241          // java/nio/file/OpenOption\n-  #241 = Utf8               java/nio/file/OpenOption\n-  #242 = Methodref          #243.#244     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #243 = Class              #245          // java/nio/file/Files\n-  #244 = NameAndType        #246:#247     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #245 = Utf8               java/nio/file/Files\n-  #246 = Utf8               newBufferedWriter\n-  #247 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #248 = Methodref          #10.#249      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #249 = NameAndType        #211:#250     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #250 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #251 = Methodref          #10.#252      // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n-  #252 = NameAndType        #253:#254     // getEscapeCharacter:()Ljava/lang/Character;\n-  #253 = Utf8               getEscapeCharacter\n-  #254 = Utf8               ()Ljava/lang/Character;\n-  #255 = InterfaceMethodref #196.#256     // java/lang/CharSequence.charAt:(I)C\n-  #256 = NameAndType        #257:#258     // charAt:(I)C\n-  #257 = Utf8               charAt\n-  #258 = Utf8               (I)C\n-  #259 = Methodref          #10.#260      // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n-  #260 = NameAndType        #261:#254     // getQuoteCharacter:()Ljava/lang/Character;\n-  #261 = Utf8               getQuoteCharacter\n-  #262 = Methodref          #10.#263      // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #263 = NameAndType        #264:#265     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #264 = Utf8               getQuoteMode\n-  #265 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n-  #266 = Fieldref           #155.#267     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #267 = NameAndType        #268:#45      // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #268 = Utf8               MINIMAL\n-  #269 = Fieldref           #270.#271     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #270 = Class              #272          // org/apache/commons/csv/CSVFormat$1\n-  #271 = NameAndType        #273:#274     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #272 = Utf8               org/apache/commons/csv/CSVFormat$1\n-  #273 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n-  #274 = Utf8               [I\n-  #275 = Methodref          #155.#276     // org/apache/commons/csv/QuoteMode.ordinal:()I\n-  #276 = NameAndType        #277:#159     // ordinal:()I\n-  #277 = Utf8               ordinal\n-  #278 = Class              #279          // java/lang/Number\n-  #279 = Utf8               java/lang/Number\n-  #280 = String             #281          // Unexpected Quote value:\n-  #281 = Utf8               Unexpected Quote value:\n-  #282 = Methodref          #148.#283     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #283 = NameAndType        #17:#284      // \"<init>\":(Ljava/lang/String;)V\n-  #284 = Utf8               (Ljava/lang/String;)V\n-  #285 = Fieldref           #286.#287     // java/lang/System.out:Ljava/io/PrintStream;\n-  #286 = Class              #288          // java/lang/System\n-  #287 = NameAndType        #289:#290     // out:Ljava/io/PrintStream;\n-  #288 = Utf8               java/lang/System\n-  #289 = Utf8               out\n-  #290 = Utf8               Ljava/io/PrintStream;\n-  #291 = Methodref          #10.#292      // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n-  #292 = NameAndType        #293:#202     // getTrailingDelimiter:()Z\n-  #293 = Utf8               getTrailingDelimiter\n-  #294 = Methodref          #10.#295      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #295 = NameAndType        #211:#296     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #296 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #297 = Methodref          #10.#298      // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n-  #298 = NameAndType        #299:#300     // println:(Ljava/lang/Appendable;)V\n-  #299 = Utf8               println\n-  #300 = Utf8               (Ljava/lang/Appendable;)V\n-  #301 = String             #302          // Delimiter=<\n-  #302 = Utf8               Delimiter=<\n-  #303 = Methodref          #185.#304     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #304 = NameAndType        #190:#305     // append:(C)Ljava/lang/StringBuilder;\n-  #305 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #306 = String             #307          // Escape=<\n-  #307 = Utf8               Escape=<\n-  #308 = String             #309          // QuoteChar=<\n-  #309 = Utf8               QuoteChar=<\n-  #310 = Methodref          #10.#311      // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n-  #311 = NameAndType        #312:#202     // isCommentMarkerSet:()Z\n-  #312 = Utf8               isCommentMarkerSet\n-  #313 = String             #314          // CommentStart=<\n-  #314 = Utf8               CommentStart=<\n-  #315 = Methodref          #10.#316      // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n-  #316 = NameAndType        #317:#202     // isNullStringSet:()Z\n-  #317 = Utf8               isNullStringSet\n-  #318 = String             #319          // NullString=<\n-  #319 = Utf8               NullString=<\n-  #320 = String             #321          // RecordSeparator=<\n-  #321 = Utf8               RecordSeparator=<\n-  #322 = Methodref          #10.#323      // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n-  #323 = NameAndType        #324:#202     // getIgnoreEmptyLines:()Z\n-  #324 = Utf8               getIgnoreEmptyLines\n-  #325 = String             #326          //  EmptyLines:ignored\n-  #326 = Utf8                EmptyLines:ignored\n-  #327 = Methodref          #10.#328      // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n-  #328 = NameAndType        #329:#202     // getIgnoreSurroundingSpaces:()Z\n-  #329 = Utf8               getIgnoreSurroundingSpaces\n-  #330 = String             #331          //  SurroundingSpaces:ignored\n-  #331 = Utf8                SurroundingSpaces:ignored\n-  #332 = Methodref          #10.#333      // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n-  #333 = NameAndType        #334:#202     // getIgnoreHeaderCase:()Z\n-  #334 = Utf8               getIgnoreHeaderCase\n-  #335 = String             #336          //  IgnoreHeaderCase:ignored\n-  #336 = Utf8                IgnoreHeaderCase:ignored\n-  #337 = String             #338          //  SkipHeaderRecord:\n-  #338 = Utf8                SkipHeaderRecord:\n-  #339 = Methodref          #185.#340     // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-  #340 = NameAndType        #190:#341     // append:(Z)Ljava/lang/StringBuilder;\n-  #341 = Utf8               (Z)Ljava/lang/StringBuilder;\n-  #342 = String             #343          // HeaderComments:\n-  #343 = Utf8               HeaderComments:\n-  #344 = Methodref          #115.#345     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #345 = NameAndType        #133:#346     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #346 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n-  #347 = String             #348          // Header:\n-  #348 = Utf8               Header:\n-  #349 = InterfaceMethodref #196.#350     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-  #350 = NameAndType        #351:#352     // subSequence:(II)Ljava/lang/CharSequence;\n-  #351 = Utf8               subSequence\n-  #352 = Utf8               (II)Ljava/lang/CharSequence;\n-  #353 = Class              #354          // java/lang/IllegalArgumentException\n-  #354 = Utf8               java/lang/IllegalArgumentException\n-  #355 = String             #356          // The delimiter cannot be a line break\n-  #356 = Utf8               The delimiter cannot be a line break\n-  #357 = Methodref          #353.#283     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #358 = String             #359          // The quoteChar character and the delimiter cannot be the same (\\'\n-  #359 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n-  #360 = String             #361          // \\')\n-  #361 = Utf8               \\')\n-  #362 = String             #363          // The escape character and the delimiter cannot be the same (\\'\n-  #363 = Utf8               The escape character and the delimiter cannot be the same (\\'\n-  #364 = String             #365          // The comment start character and the delimiter cannot be the same (\\'\n-  #365 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n-  #366 = String             #367          // The comment start character and the quoteChar cannot be the same (\\'\n-  #367 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n-  #368 = String             #369          // The comment start and the escape character cannot be the same (\\'\n-  #369 = Utf8               The comment start and the escape character cannot be the same (\\'\n-  #370 = Fieldref           #155.#371     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #371 = NameAndType        #372:#45      // NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #372 = Utf8               NONE\n-  #373 = String             #374          // No quotes mode set but no escape character is set\n-  #374 = Utf8               No quotes mode set but no escape character is set\n-  #375 = Class              #376          // java/util/HashSet\n-  #376 = Utf8               java/util/HashSet\n-  #377 = Methodref          #375.#31      // java/util/HashSet.\"<init>\":()V\n-  #378 = InterfaceMethodref #379.#380     // java/util/Set.add:(Ljava/lang/Object;)Z\n-  #379 = Class              #381          // java/util/Set\n-  #380 = NameAndType        #382:#110     // add:(Ljava/lang/Object;)Z\n-  #381 = Utf8               java/util/Set\n-  #382 = Utf8               add\n-  #383 = String             #384          // The header contains a duplicate entry: \\'\n-  #384 = Utf8               The header contains a duplicate entry: \\'\n-  #385 = String             #386          // \\' in\n-  #386 = Utf8               \\' in\n-  #387 = Methodref          #10.#388      // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #388 = NameAndType        #389:#390     // withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #389 = Utf8               withAllowMissingColumnNames\n-  #390 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n-  #391 = Methodref          #4.#392       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-  #392 = NameAndType        #23:#393      // valueOf:(C)Ljava/lang/Character;\n-  #393 = Utf8               (C)Ljava/lang/Character;\n-  #394 = Methodref          #10.#395      // org/apache/commons/csv/CSVFormat.withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #395 = NameAndType        #396:#397     // withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #396 = Utf8               withCommentMarker\n-  #397 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #398 = Methodref          #10.#399      // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n-  #399 = NameAndType        #13:#400      // isLineBreak:(Ljava/lang/Character;)Z\n-  #400 = Utf8               (Ljava/lang/Character;)Z\n-  #401 = String             #402          // The comment start marker character cannot be a line break\n-  #402 = Utf8               The comment start marker character cannot be a line break\n-  #403 = Methodref          #10.#404      // org/apache/commons/csv/CSVFormat.withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #404 = NameAndType        #405:#397     // withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #405 = Utf8               withEscape\n-  #406 = String             #407          // The escape character cannot be a line break\n-  #407 = Utf8               The escape character cannot be a line break\n-  #408 = Methodref          #10.#409      // org/apache/commons/csv/CSVFormat.withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #409 = NameAndType        #410:#411     // withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #410 = Utf8               withHeader\n-  #411 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #412 = Methodref          #10.#413      // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n-  #413 = NameAndType        #414:#28      // withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n-  #414 = Utf8               withSkipHeaderRecord\n-  #415 = Methodref          #416.#417     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-  #416 = Class              #418          // java/lang/Class\n-  #417 = NameAndType        #419:#420     // getEnumConstants:()[Ljava/lang/Object;\n-  #418 = Utf8               java/lang/Class\n-  #419 = Utf8               getEnumConstants\n-  #420 = Utf8               ()[Ljava/lang/Object;\n-  #421 = Class              #422          // \"[Ljava/lang/Enum;\"\n-  #422 = Utf8               [Ljava/lang/Enum;\n-  #423 = Methodref          #424.#425     // java/lang/Enum.name:()Ljava/lang/String;\n-  #424 = Class              #426          // java/lang/Enum\n-  #425 = NameAndType        #427:#134     // name:()Ljava/lang/String;\n-  #426 = Utf8               java/lang/Enum\n-  #427 = Utf8               name\n-  #428 = InterfaceMethodref #429.#430     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #429 = Class              #431          // java/sql/ResultSet\n-  #430 = NameAndType        #432:#433     // getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #431 = Utf8               java/sql/ResultSet\n-  #432 = Utf8               getMetaData\n-  #433 = Utf8               ()Ljava/sql/ResultSetMetaData;\n-  #434 = Methodref          #10.#435      // org/apache/commons/csv/CSVFormat.withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #435 = NameAndType        #410:#436     // withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #436 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #437 = InterfaceMethodref #438.#439     // java/sql/ResultSetMetaData.getColumnCount:()I\n-  #438 = Class              #440          // java/sql/ResultSetMetaData\n-  #439 = NameAndType        #441:#159     // getColumnCount:()I\n-  #440 = Utf8               java/sql/ResultSetMetaData\n-  #441 = Utf8               getColumnCount\n-  #442 = InterfaceMethodref #438.#443     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n-  #443 = NameAndType        #444:#445     // getColumnLabel:(I)Ljava/lang/String;\n-  #444 = Utf8               getColumnLabel\n-  #445 = Utf8               (I)Ljava/lang/String;\n-  #446 = Methodref          #10.#447      // org/apache/commons/csv/CSVFormat.withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #447 = NameAndType        #448:#390     // withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #448 = Utf8               withIgnoreEmptyLines\n-  #449 = Methodref          #10.#450      // org/apache/commons/csv/CSVFormat.withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #450 = NameAndType        #451:#390     // withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #451 = Utf8               withIgnoreHeaderCase\n-  #452 = Methodref          #10.#453      // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #453 = NameAndType        #454:#390     // withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #454 = Utf8               withIgnoreSurroundingSpaces\n-  #455 = Methodref          #10.#456      // org/apache/commons/csv/CSVFormat.withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #456 = NameAndType        #457:#397     // withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #457 = Utf8               withQuote\n-  #458 = String             #459          // The quoteChar cannot be a line break\n-  #459 = Utf8               The quoteChar cannot be a line break\n-  #460 = Methodref          #112.#461     // java/lang/String.valueOf:(C)Ljava/lang/String;\n-  #461 = NameAndType        #23:#462      // valueOf:(C)Ljava/lang/String;\n-  #462 = Utf8               (C)Ljava/lang/String;\n-  #463 = Methodref          #10.#464      // org/apache/commons/csv/CSVFormat.withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #464 = NameAndType        #465:#466     // withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #465 = Utf8               withRecordSeparator\n-  #466 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #467 = Methodref          #10.#468      // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #468 = NameAndType        #414:#390     // withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #469 = String             #470          // line.separator\n-  #470 = Utf8               line.separator\n-  #471 = Methodref          #286.#472     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #472 = NameAndType        #473:#474     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #473 = Utf8               getProperty\n-  #474 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #475 = Methodref          #10.#476      // org/apache/commons/csv/CSVFormat.withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #476 = NameAndType        #477:#390     // withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #477 = Utf8               withTrailingDelimiter\n-  #478 = Methodref          #10.#479      // org/apache/commons/csv/CSVFormat.withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #479 = NameAndType        #480:#390     // withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n-  #480 = Utf8               withTrim\n-  #481 = Fieldref           #1.#482       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #482 = NameAndType        #483:#41      // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #483 = Utf8               DOUBLE_QUOTE_CHAR\n-  #484 = String             #485          // \\r\\n\n-  #485 = Utf8               \\r\\n\n-  #486 = Fieldref           #10.#487      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #487 = NameAndType        #488:#489     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #488 = Utf8               DEFAULT\n-  #489 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #490 = Methodref          #10.#491      // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n-  #491 = NameAndType        #389:#28      // withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n-  #492 = Fieldref           #10.#493      // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #493 = NameAndType        #494:#489     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #494 = Utf8               EXCEL\n-  #495 = Methodref          #10.#496      // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #496 = NameAndType        #497:#498     // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #497 = Utf8               withDelimiter\n-  #498 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n-  #499 = Methodref          #10.#500      // org/apache/commons/csv/CSVFormat.withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #500 = NameAndType        #405:#498     // withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #501 = Methodref          #10.#502      // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #502 = NameAndType        #465:#498     // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-  #503 = Fieldref           #10.#504      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #504 = NameAndType        #505:#489     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #505 = Utf8               INFORMIX_UNLOAD\n-  #506 = Fieldref           #10.#507      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #507 = NameAndType        #508:#489     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #508 = Utf8               INFORMIX_UNLOAD_CSV\n-  #509 = String             #510          // \\\\N\n-  #510 = Utf8               \\\\N\n-  #511 = Methodref          #10.#512      // org/apache/commons/csv/CSVFormat.withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #512 = NameAndType        #513:#466     // withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #513 = Utf8               withNullString\n-  #514 = Fieldref           #155.#515     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #515 = NameAndType        #516:#45      // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #516 = Utf8               ALL_NON_NULL\n-  #517 = Methodref          #10.#518      // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #518 = NameAndType        #519:#520     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #519 = Utf8               withQuoteMode\n-  #520 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #521 = Fieldref           #10.#522      // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #522 = NameAndType        #523:#489     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #523 = Utf8               MYSQL\n-  #524 = Methodref          #10.#525      // org/apache/commons/csv/CSVFormat.withTrim:()Lorg/apache/commons/csv/CSVFormat;\n-  #525 = NameAndType        #480:#28      // withTrim:()Lorg/apache/commons/csv/CSVFormat;\n-  #526 = Methodref          #10.#527      // org/apache/commons/csv/CSVFormat.withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n-  #527 = NameAndType        #528:#28      // withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n-  #528 = Utf8               withSystemRecordSeparator\n-  #529 = Fieldref           #10.#530      // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #530 = NameAndType        #531:#489     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #531 = Utf8               ORACLE\n-  #532 = Fieldref           #10.#533      // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #533 = NameAndType        #534:#489     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #534 = Utf8               POSTGRESQL_CSV\n-  #535 = Fieldref           #10.#536      // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #536 = NameAndType        #537:#489     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #537 = Utf8               POSTGRESQL_TEXT\n-  #538 = Fieldref           #10.#539      // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #539 = NameAndType        #540:#489     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #540 = Utf8               RFC4180\n-  #541 = Methodref          #10.#542      // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n-  #542 = NameAndType        #454:#28      // withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n-  #543 = Fieldref           #10.#544      // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #544 = NameAndType        #545:#489     // TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #545 = Utf8               TDF\n-  #546 = Class              #547          // java/io/Serializable\n-  #547 = Utf8               java/io/Serializable\n-  #548 = Utf8               serialVersionUID\n-  #549 = Utf8               J\n-  #550 = Utf8               ConstantValue\n-  #551 = Long               1l\n-  #553 = Utf8               Code\n-  #554 = Utf8               LineNumberTable\n-  #555 = Utf8               LocalVariableTable\n-  #556 = Utf8               c\n-  #557 = Utf8               StackMapTable\n-  #558 = Utf8               newFormat\n-  #559 = Utf8               format\n-  #560 = Utf8               this\n-  #561 = Utf8               quoteChar\n-  #562 = Utf8               commentStart\n-  #563 = Utf8               escape\n-  #564 = Utf8               [Ljava/lang/Object;\n-  #565 = Class              #564          // \"[Ljava/lang/Object;\"\n-  #566 = Utf8               obj\n-  #567 = Utf8               Ljava/lang/Object;\n-  #568 = Utf8               other\n-  #569 = Utf8               csvPrinter\n-  #570 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n-  #571 = Utf8               e\n-  #572 = Utf8               Ljava/io/IOException;\n-  #573 = Utf8               values\n-  #574 = Utf8               Ljava/io/StringWriter;\n-  #575 = Utf8               getAllowMissingColumnNames\n-  #576 = Utf8               getAutoFlush\n-  #577 = Utf8               getCommentMarker\n-  #578 = Utf8               getHeader\n-  #579 = Utf8               ()[Ljava/lang/String;\n-  #580 = Utf8               getHeaderComments\n-  #581 = Utf8               getNullString\n-  #582 = Utf8               getRecordSeparator\n-  #583 = Utf8               getSkipHeaderRecord\n-  #584 = Utf8               prime\n-  #585 = Utf8               I\n-  #586 = Utf8               result\n-  #587 = Utf8               parse\n-  #588 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #589 = Utf8               in\n-  #590 = Utf8               Ljava/io/Reader;\n-  #591 = Utf8               Exceptions\n-  #592 = Utf8               Ljava/lang/Appendable;\n-  #593 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #594 = Utf8               Ljava/io/File;\n-  #595 = Utf8               charset\n-  #596 = Utf8               Ljava/nio/charset/Charset;\n-  #597 = Utf8               charSequence\n-  #598 = Utf8               Ljava/lang/CharSequence;\n-  #599 = Utf8               value\n-  #600 = Utf8               newRecord\n-  #601 = Utf8               object\n-  #602 = Utf8               offset\n-  #603 = Utf8               len\n-  #604 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #605 = Utf8               Ljava/nio/file/Path;\n-  #606 = Utf8               start\n-  #607 = Utf8               pos\n-  #608 = Utf8               end\n-  #609 = Utf8               delim\n-  #610 = Utf8               quote\n-  #611 = Utf8               delimChar\n-  #612 = Utf8               quoteModePolicy\n-  #613 = Utf8               printer\n-  #614 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n-  #615 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n-  #616 = Utf8               i\n-  #617 = Utf8               sb\n-  #618 = Utf8               Ljava/lang/StringBuilder;\n-  #619 = Utf8               strings\n-  #620 = Utf8               count\n-  #621 = Utf8               hdr\n-  #622 = Utf8               dupCheck\n-  #623 = Utf8               Ljava/util/Set;\n-  #624 = Utf8               LocalVariableTypeTable\n-  #625 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #626 = Utf8               withAutoFlush\n-  #627 = Utf8               withFirstRecordAsHeader\n-  #628 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n-  #629 = Utf8               enumValues\n-  #630 = Utf8               headerEnum\n-  #631 = Utf8               Ljava/lang/Class;\n-  #632 = Utf8               [Ljava/lang/Enum<*>;\n-  #633 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n-  #634 = Utf8               Signature\n-  #635 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n-  #636 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n-  #637 = Utf8               resultSet\n-  #638 = Utf8               Ljava/sql/ResultSet;\n-  #639 = Class              #640          // java/sql/SQLException\n-  #640 = Utf8               java/sql/SQLException\n-  #641 = Utf8               columnCount\n-  #642 = Utf8               metaData\n-  #643 = Utf8               Ljava/sql/ResultSetMetaData;\n-  #644 = Utf8               labels\n-  #645 = Utf8               withHeaderComments\n-  #646 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n-  #647 = Utf8               <clinit>\n-  #648 = Utf8               SourceFile\n-  #649 = Utf8               CSVFormat.java\n-  #650 = Utf8               InnerClasses\n-  #651 = Utf8               Predefined\n+  #152 = Methodref          #153.#154     // org/apache/commons/csv/QuoteMode.hashCode:()I\n+  #153 = Class              #155          // org/apache/commons/csv/QuoteMode\n+  #154 = NameAndType        #156:#157     // hashCode:()I\n+  #155 = Utf8               org/apache/commons/csv/QuoteMode\n+  #156 = Utf8               hashCode\n+  #157 = Utf8               ()I\n+  #158 = Methodref          #4.#154       // java/lang/Character.hashCode:()I\n+  #159 = Methodref          #112.#154     // java/lang/String.hashCode:()I\n+  #160 = Methodref          #115.#161     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+  #161 = NameAndType        #156:#162     // hashCode:([Ljava/lang/Object;)I\n+  #162 = Utf8               ([Ljava/lang/Object;)I\n+  #163 = Class              #164          // org/apache/commons/csv/CSVParser\n+  #164 = Utf8               org/apache/commons/csv/CSVParser\n+  #165 = Methodref          #163.#166     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #166 = NameAndType        #17:#167      // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #167 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #168 = Class              #169          // java/io/OutputStreamWriter\n+  #169 = Utf8               java/io/OutputStreamWriter\n+  #170 = Class              #171          // java/io/FileOutputStream\n+  #171 = Utf8               java/io/FileOutputStream\n+  #172 = Methodref          #170.#173     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+  #173 = NameAndType        #17:#174      // \"<init>\":(Ljava/io/File;)V\n+  #174 = Utf8               (Ljava/io/File;)V\n+  #175 = Methodref          #168.#176     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #176 = NameAndType        #17:#177      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #177 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #178 = String             #179          //\n+  #179 = Utf8\n+  #180 = Fieldref           #153.#181     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #181 = NameAndType        #182:#45      // ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #182 = Utf8               ALL\n+  #183 = Class              #184          // java/lang/StringBuilder\n+  #184 = Utf8               java/lang/StringBuilder\n+  #185 = Methodref          #183.#31      // java/lang/StringBuilder.\"<init>\":()V\n+  #186 = Methodref          #183.#187     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #187 = NameAndType        #188:#189     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #188 = Utf8               append\n+  #189 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #190 = Methodref          #183.#191     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #191 = NameAndType        #188:#192     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #192 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #193 = Methodref          #183.#132     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #194 = Class              #195          // java/lang/CharSequence\n+  #195 = Utf8               java/lang/CharSequence\n+  #196 = Methodref          #30.#132      // java/lang/Object.toString:()Ljava/lang/String;\n+  #197 = Methodref          #10.#198      // org/apache/commons/csv/CSVFormat.getTrim:()Z\n+  #198 = NameAndType        #199:#200     // getTrim:()Z\n+  #199 = Utf8               getTrim\n+  #200 = Utf8               ()Z\n+  #201 = Methodref          #10.#202      // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #202 = NameAndType        #96:#203      // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #203 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #204 = InterfaceMethodref #194.#205     // java/lang/CharSequence.length:()I\n+  #205 = NameAndType        #206:#157     // length:()I\n+  #206 = Utf8               length\n+  #207 = Methodref          #10.#208      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #208 = NameAndType        #209:#210     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #209 = Utf8               print\n+  #210 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #211 = Methodref          #10.#212      // org/apache/commons/csv/CSVFormat.getDelimiter:()C\n+  #212 = NameAndType        #213:#8       // getDelimiter:()C\n+  #213 = Utf8               getDelimiter\n+  #214 = InterfaceMethodref #215.#216     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+  #215 = Class              #217          // java/lang/Appendable\n+  #216 = NameAndType        #188:#218     // append:(C)Ljava/lang/Appendable;\n+  #217 = Utf8               java/lang/Appendable\n+  #218 = Utf8               (C)Ljava/lang/Appendable;\n+  #219 = InterfaceMethodref #215.#220     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #220 = NameAndType        #188:#221     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #221 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #222 = Methodref          #10.#223      // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n+  #223 = NameAndType        #224:#200     // isQuoteCharacterSet:()Z\n+  #224 = Utf8               isQuoteCharacterSet\n+  #225 = Methodref          #10.#226      // org/apache/commons/csv/CSVFormat.printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #226 = NameAndType        #227:#210     // printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+  #227 = Utf8               printAndQuote\n+  #228 = Methodref          #10.#229      // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n+  #229 = NameAndType        #230:#200     // isEscapeCharacterSet:()Z\n+  #230 = Utf8               isEscapeCharacterSet\n+  #231 = Methodref          #10.#232      // org/apache/commons/csv/CSVFormat.printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+  #232 = NameAndType        #233:#234     // printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+  #233 = Utf8               printAndEscape\n+  #234 = Utf8               (Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+  #235 = InterfaceMethodref #215.#236     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #236 = NameAndType        #188:#237     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #237 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #238 = Class              #239          // java/nio/file/OpenOption\n+  #239 = Utf8               java/nio/file/OpenOption\n+  #240 = Methodref          #241.#242     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #241 = Class              #243          // java/nio/file/Files\n+  #242 = NameAndType        #244:#245     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #243 = Utf8               java/nio/file/Files\n+  #244 = Utf8               newBufferedWriter\n+  #245 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #246 = Methodref          #10.#247      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #247 = NameAndType        #209:#248     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #248 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #249 = Methodref          #10.#250      // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n+  #250 = NameAndType        #251:#252     // getEscapeCharacter:()Ljava/lang/Character;\n+  #251 = Utf8               getEscapeCharacter\n+  #252 = Utf8               ()Ljava/lang/Character;\n+  #253 = InterfaceMethodref #194.#254     // java/lang/CharSequence.charAt:(I)C\n+  #254 = NameAndType        #255:#256     // charAt:(I)C\n+  #255 = Utf8               charAt\n+  #256 = Utf8               (I)C\n+  #257 = Methodref          #10.#258      // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n+  #258 = NameAndType        #259:#252     // getQuoteCharacter:()Ljava/lang/Character;\n+  #259 = Utf8               getQuoteCharacter\n+  #260 = Methodref          #10.#261      // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #261 = NameAndType        #262:#263     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #262 = Utf8               getQuoteMode\n+  #263 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n+  #264 = Fieldref           #153.#265     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #265 = NameAndType        #266:#45      // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #266 = Utf8               MINIMAL\n+  #267 = Fieldref           #268.#269     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #268 = Class              #270          // org/apache/commons/csv/CSVFormat$1\n+  #269 = NameAndType        #271:#272     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #270 = Utf8               org/apache/commons/csv/CSVFormat$1\n+  #271 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n+  #272 = Utf8               [I\n+  #273 = Methodref          #153.#274     // org/apache/commons/csv/QuoteMode.ordinal:()I\n+  #274 = NameAndType        #275:#157     // ordinal:()I\n+  #275 = Utf8               ordinal\n+  #276 = Class              #277          // java/lang/Number\n+  #277 = Utf8               java/lang/Number\n+  #278 = String             #279          // Unexpected Quote value:\n+  #279 = Utf8               Unexpected Quote value:\n+  #280 = Methodref          #148.#281     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #281 = NameAndType        #17:#282      // \"<init>\":(Ljava/lang/String;)V\n+  #282 = Utf8               (Ljava/lang/String;)V\n+  #283 = Fieldref           #284.#285     // java/lang/System.out:Ljava/io/PrintStream;\n+  #284 = Class              #286          // java/lang/System\n+  #285 = NameAndType        #287:#288     // out:Ljava/io/PrintStream;\n+  #286 = Utf8               java/lang/System\n+  #287 = Utf8               out\n+  #288 = Utf8               Ljava/io/PrintStream;\n+  #289 = Methodref          #10.#290      // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n+  #290 = NameAndType        #291:#200     // getTrailingDelimiter:()Z\n+  #291 = Utf8               getTrailingDelimiter\n+  #292 = Methodref          #10.#293      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #293 = NameAndType        #209:#294     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #294 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #295 = Methodref          #10.#296      // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n+  #296 = NameAndType        #297:#298     // println:(Ljava/lang/Appendable;)V\n+  #297 = Utf8               println\n+  #298 = Utf8               (Ljava/lang/Appendable;)V\n+  #299 = String             #300          // Delimiter=<\n+  #300 = Utf8               Delimiter=<\n+  #301 = Methodref          #183.#302     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #302 = NameAndType        #188:#303     // append:(C)Ljava/lang/StringBuilder;\n+  #303 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #304 = String             #305          // Escape=<\n+  #305 = Utf8               Escape=<\n+  #306 = String             #307          // QuoteChar=<\n+  #307 = Utf8               QuoteChar=<\n+  #308 = Methodref          #10.#309      // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n+  #309 = NameAndType        #310:#200     // isCommentMarkerSet:()Z\n+  #310 = Utf8               isCommentMarkerSet\n+  #311 = String             #312          // CommentStart=<\n+  #312 = Utf8               CommentStart=<\n+  #313 = Methodref          #10.#314      // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n+  #314 = NameAndType        #315:#200     // isNullStringSet:()Z\n+  #315 = Utf8               isNullStringSet\n+  #316 = String             #317          // NullString=<\n+  #317 = Utf8               NullString=<\n+  #318 = String             #319          // RecordSeparator=<\n+  #319 = Utf8               RecordSeparator=<\n+  #320 = Methodref          #10.#321      // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n+  #321 = NameAndType        #322:#200     // getIgnoreEmptyLines:()Z\n+  #322 = Utf8               getIgnoreEmptyLines\n+  #323 = String             #324          //  EmptyLines:ignored\n+  #324 = Utf8                EmptyLines:ignored\n+  #325 = Methodref          #10.#326      // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n+  #326 = NameAndType        #327:#200     // getIgnoreSurroundingSpaces:()Z\n+  #327 = Utf8               getIgnoreSurroundingSpaces\n+  #328 = String             #329          //  SurroundingSpaces:ignored\n+  #329 = Utf8                SurroundingSpaces:ignored\n+  #330 = Methodref          #10.#331      // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n+  #331 = NameAndType        #332:#200     // getIgnoreHeaderCase:()Z\n+  #332 = Utf8               getIgnoreHeaderCase\n+  #333 = String             #334          //  IgnoreHeaderCase:ignored\n+  #334 = Utf8                IgnoreHeaderCase:ignored\n+  #335 = String             #336          //  SkipHeaderRecord:\n+  #336 = Utf8                SkipHeaderRecord:\n+  #337 = Methodref          #183.#338     // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+  #338 = NameAndType        #188:#339     // append:(Z)Ljava/lang/StringBuilder;\n+  #339 = Utf8               (Z)Ljava/lang/StringBuilder;\n+  #340 = String             #341          // HeaderComments:\n+  #341 = Utf8               HeaderComments:\n+  #342 = Methodref          #115.#343     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #343 = NameAndType        #133:#344     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #344 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n+  #345 = String             #346          // Header:\n+  #346 = Utf8               Header:\n+  #347 = InterfaceMethodref #194.#348     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #348 = NameAndType        #349:#350     // subSequence:(II)Ljava/lang/CharSequence;\n+  #349 = Utf8               subSequence\n+  #350 = Utf8               (II)Ljava/lang/CharSequence;\n+  #351 = Class              #352          // java/lang/IllegalArgumentException\n+  #352 = Utf8               java/lang/IllegalArgumentException\n+  #353 = String             #354          // The delimiter cannot be a line break\n+  #354 = Utf8               The delimiter cannot be a line break\n+  #355 = Methodref          #351.#281     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #356 = String             #357          // The quoteChar character and the delimiter cannot be the same (\\'\n+  #357 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n+  #358 = String             #359          // \\')\n+  #359 = Utf8               \\')\n+  #360 = String             #361          // The escape character and the delimiter cannot be the same (\\'\n+  #361 = Utf8               The escape character and the delimiter cannot be the same (\\'\n+  #362 = String             #363          // The comment start character and the delimiter cannot be the same (\\'\n+  #363 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n+  #364 = String             #365          // The comment start character and the quoteChar cannot be the same (\\'\n+  #365 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n+  #366 = String             #367          // The comment start and the escape character cannot be the same (\\'\n+  #367 = Utf8               The comment start and the escape character cannot be the same (\\'\n+  #368 = Fieldref           #153.#369     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #369 = NameAndType        #370:#45      // NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #370 = Utf8               NONE\n+  #371 = String             #372          // No quotes mode set but no escape character is set\n+  #372 = Utf8               No quotes mode set but no escape character is set\n+  #373 = Class              #374          // java/util/HashSet\n+  #374 = Utf8               java/util/HashSet\n+  #375 = Methodref          #373.#31      // java/util/HashSet.\"<init>\":()V\n+  #376 = InterfaceMethodref #377.#378     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #377 = Class              #379          // java/util/Set\n+  #378 = NameAndType        #380:#110     // add:(Ljava/lang/Object;)Z\n+  #379 = Utf8               java/util/Set\n+  #380 = Utf8               add\n+  #381 = String             #382          // The header contains a duplicate entry: \\'\n+  #382 = Utf8               The header contains a duplicate entry: \\'\n+  #383 = String             #384          // \\' in\n+  #384 = Utf8               \\' in\n+  #385 = Methodref          #10.#386      // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #386 = NameAndType        #387:#388     // withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #387 = Utf8               withAllowMissingColumnNames\n+  #388 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n+  #389 = Methodref          #4.#390       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+  #390 = NameAndType        #23:#391      // valueOf:(C)Ljava/lang/Character;\n+  #391 = Utf8               (C)Ljava/lang/Character;\n+  #392 = Methodref          #10.#393      // org/apache/commons/csv/CSVFormat.withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #393 = NameAndType        #394:#395     // withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #394 = Utf8               withCommentMarker\n+  #395 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #396 = Methodref          #10.#397      // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n+  #397 = NameAndType        #13:#398      // isLineBreak:(Ljava/lang/Character;)Z\n+  #398 = Utf8               (Ljava/lang/Character;)Z\n+  #399 = String             #400          // The comment start marker character cannot be a line break\n+  #400 = Utf8               The comment start marker character cannot be a line break\n+  #401 = Methodref          #10.#402      // org/apache/commons/csv/CSVFormat.withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #402 = NameAndType        #403:#395     // withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #403 = Utf8               withEscape\n+  #404 = String             #405          // The escape character cannot be a line break\n+  #405 = Utf8               The escape character cannot be a line break\n+  #406 = Methodref          #10.#407      // org/apache/commons/csv/CSVFormat.withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #407 = NameAndType        #408:#409     // withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #408 = Utf8               withHeader\n+  #409 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #410 = Methodref          #10.#411      // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n+  #411 = NameAndType        #412:#28      // withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n+  #412 = Utf8               withSkipHeaderRecord\n+  #413 = Methodref          #414.#415     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+  #414 = Class              #416          // java/lang/Class\n+  #415 = NameAndType        #417:#418     // getEnumConstants:()[Ljava/lang/Object;\n+  #416 = Utf8               java/lang/Class\n+  #417 = Utf8               getEnumConstants\n+  #418 = Utf8               ()[Ljava/lang/Object;\n+  #419 = Class              #420          // \"[Ljava/lang/Enum;\"\n+  #420 = Utf8               [Ljava/lang/Enum;\n+  #421 = Methodref          #422.#423     // java/lang/Enum.name:()Ljava/lang/String;\n+  #422 = Class              #424          // java/lang/Enum\n+  #423 = NameAndType        #425:#134     // name:()Ljava/lang/String;\n+  #424 = Utf8               java/lang/Enum\n+  #425 = Utf8               name\n+  #426 = InterfaceMethodref #427.#428     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #427 = Class              #429          // java/sql/ResultSet\n+  #428 = NameAndType        #430:#431     // getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #429 = Utf8               java/sql/ResultSet\n+  #430 = Utf8               getMetaData\n+  #431 = Utf8               ()Ljava/sql/ResultSetMetaData;\n+  #432 = Methodref          #10.#433      // org/apache/commons/csv/CSVFormat.withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #433 = NameAndType        #408:#434     // withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #434 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #435 = InterfaceMethodref #436.#437     // java/sql/ResultSetMetaData.getColumnCount:()I\n+  #436 = Class              #438          // java/sql/ResultSetMetaData\n+  #437 = NameAndType        #439:#157     // getColumnCount:()I\n+  #438 = Utf8               java/sql/ResultSetMetaData\n+  #439 = Utf8               getColumnCount\n+  #440 = InterfaceMethodref #436.#441     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+  #441 = NameAndType        #442:#443     // getColumnLabel:(I)Ljava/lang/String;\n+  #442 = Utf8               getColumnLabel\n+  #443 = Utf8               (I)Ljava/lang/String;\n+  #444 = Methodref          #10.#445      // org/apache/commons/csv/CSVFormat.withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #445 = NameAndType        #446:#388     // withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #446 = Utf8               withIgnoreEmptyLines\n+  #447 = Methodref          #10.#448      // org/apache/commons/csv/CSVFormat.withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #448 = NameAndType        #449:#388     // withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #449 = Utf8               withIgnoreHeaderCase\n+  #450 = Methodref          #10.#451      // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #451 = NameAndType        #452:#388     // withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #452 = Utf8               withIgnoreSurroundingSpaces\n+  #453 = Methodref          #10.#454      // org/apache/commons/csv/CSVFormat.withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #454 = NameAndType        #455:#395     // withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #455 = Utf8               withQuote\n+  #456 = String             #457          // The quoteChar cannot be a line break\n+  #457 = Utf8               The quoteChar cannot be a line break\n+  #458 = Methodref          #112.#459     // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #459 = NameAndType        #23:#460      // valueOf:(C)Ljava/lang/String;\n+  #460 = Utf8               (C)Ljava/lang/String;\n+  #461 = Methodref          #10.#462      // org/apache/commons/csv/CSVFormat.withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #462 = NameAndType        #463:#464     // withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #463 = Utf8               withRecordSeparator\n+  #464 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #465 = Methodref          #10.#466      // org/apache/commons/csv/CSVFormat.withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #466 = NameAndType        #412:#388     // withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #467 = String             #468          // line.separator\n+  #468 = Utf8               line.separator\n+  #469 = Methodref          #284.#470     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #470 = NameAndType        #471:#472     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #471 = Utf8               getProperty\n+  #472 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #473 = Methodref          #10.#474      // org/apache/commons/csv/CSVFormat.withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #474 = NameAndType        #475:#388     // withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #475 = Utf8               withTrailingDelimiter\n+  #476 = Methodref          #10.#477      // org/apache/commons/csv/CSVFormat.withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #477 = NameAndType        #478:#388     // withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n+  #478 = Utf8               withTrim\n+  #479 = Fieldref           #1.#480       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #480 = NameAndType        #481:#41      // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #481 = Utf8               DOUBLE_QUOTE_CHAR\n+  #482 = String             #483          // \\r\\n\n+  #483 = Utf8               \\r\\n\n+  #484 = Fieldref           #10.#485      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #485 = NameAndType        #486:#487     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #486 = Utf8               DEFAULT\n+  #487 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+  #488 = Methodref          #10.#489      // org/apache/commons/csv/CSVFormat.withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n+  #489 = NameAndType        #387:#28      // withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n+  #490 = Fieldref           #10.#491      // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #491 = NameAndType        #492:#487     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #492 = Utf8               EXCEL\n+  #493 = Methodref          #10.#494      // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #494 = NameAndType        #495:#496     // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #495 = Utf8               withDelimiter\n+  #496 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n+  #497 = Methodref          #10.#498      // org/apache/commons/csv/CSVFormat.withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #498 = NameAndType        #403:#496     // withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #499 = Methodref          #10.#500      // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #500 = NameAndType        #463:#496     // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+  #501 = Fieldref           #10.#502      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #502 = NameAndType        #503:#487     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #503 = Utf8               INFORMIX_UNLOAD\n+  #504 = Fieldref           #10.#505      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #505 = NameAndType        #506:#487     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #506 = Utf8               INFORMIX_UNLOAD_CSV\n+  #507 = String             #508          // \\\\N\n+  #508 = Utf8               \\\\N\n+  #509 = Methodref          #10.#510      // org/apache/commons/csv/CSVFormat.withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #510 = NameAndType        #511:#464     // withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #511 = Utf8               withNullString\n+  #512 = Fieldref           #153.#513     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #513 = NameAndType        #514:#45      // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #514 = Utf8               ALL_NON_NULL\n+  #515 = Methodref          #10.#516      // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #516 = NameAndType        #517:#518     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #517 = Utf8               withQuoteMode\n+  #518 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #519 = Fieldref           #10.#520      // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #520 = NameAndType        #521:#487     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #521 = Utf8               MYSQL\n+  #522 = Methodref          #10.#523      // org/apache/commons/csv/CSVFormat.withTrim:()Lorg/apache/commons/csv/CSVFormat;\n+  #523 = NameAndType        #478:#28      // withTrim:()Lorg/apache/commons/csv/CSVFormat;\n+  #524 = Methodref          #10.#525      // org/apache/commons/csv/CSVFormat.withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n+  #525 = NameAndType        #526:#28      // withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n+  #526 = Utf8               withSystemRecordSeparator\n+  #527 = Fieldref           #10.#528      // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #528 = NameAndType        #529:#487     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #529 = Utf8               ORACLE\n+  #530 = Fieldref           #10.#531      // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #531 = NameAndType        #532:#487     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #532 = Utf8               POSTGRESQL_CSV\n+  #533 = Fieldref           #10.#534      // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #534 = NameAndType        #535:#487     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #535 = Utf8               POSTGRESQL_TEXT\n+  #536 = Fieldref           #10.#537      // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #537 = NameAndType        #538:#487     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #538 = Utf8               RFC4180\n+  #539 = Methodref          #10.#540      // org/apache/commons/csv/CSVFormat.withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n+  #540 = NameAndType        #452:#28      // withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n+  #541 = Fieldref           #10.#542      // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #542 = NameAndType        #543:#487     // TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #543 = Utf8               TDF\n+  #544 = Class              #545          // java/io/Serializable\n+  #545 = Utf8               java/io/Serializable\n+  #546 = Utf8               serialVersionUID\n+  #547 = Utf8               J\n+  #548 = Utf8               ConstantValue\n+  #549 = Long               1l\n+  #551 = Utf8               Code\n+  #552 = Utf8               LineNumberTable\n+  #553 = Utf8               LocalVariableTable\n+  #554 = Utf8               c\n+  #555 = Utf8               StackMapTable\n+  #556 = Utf8               newFormat\n+  #557 = Utf8               format\n+  #558 = Utf8               this\n+  #559 = Utf8               quoteChar\n+  #560 = Utf8               commentStart\n+  #561 = Utf8               escape\n+  #562 = Utf8               [Ljava/lang/Object;\n+  #563 = Class              #562          // \"[Ljava/lang/Object;\"\n+  #564 = Utf8               obj\n+  #565 = Utf8               Ljava/lang/Object;\n+  #566 = Utf8               other\n+  #567 = Utf8               csvPrinter\n+  #568 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n+  #569 = Utf8               e\n+  #570 = Utf8               Ljava/io/IOException;\n+  #571 = Utf8               values\n+  #572 = Utf8               Ljava/io/StringWriter;\n+  #573 = Utf8               getAllowMissingColumnNames\n+  #574 = Utf8               getAutoFlush\n+  #575 = Utf8               getCommentMarker\n+  #576 = Utf8               getHeader\n+  #577 = Utf8               ()[Ljava/lang/String;\n+  #578 = Utf8               getHeaderComments\n+  #579 = Utf8               getNullString\n+  #580 = Utf8               getRecordSeparator\n+  #581 = Utf8               getSkipHeaderRecord\n+  #582 = Utf8               prime\n+  #583 = Utf8               I\n+  #584 = Utf8               result\n+  #585 = Utf8               parse\n+  #586 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #587 = Utf8               in\n+  #588 = Utf8               Ljava/io/Reader;\n+  #589 = Utf8               Exceptions\n+  #590 = Utf8               Ljava/lang/Appendable;\n+  #591 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #592 = Utf8               Ljava/io/File;\n+  #593 = Utf8               charset\n+  #594 = Utf8               Ljava/nio/charset/Charset;\n+  #595 = Utf8               charSequence\n+  #596 = Utf8               Ljava/lang/CharSequence;\n+  #597 = Utf8               value\n+  #598 = Utf8               newRecord\n+  #599 = Utf8               object\n+  #600 = Utf8               offset\n+  #601 = Utf8               len\n+  #602 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #603 = Utf8               Ljava/nio/file/Path;\n+  #604 = Utf8               start\n+  #605 = Utf8               pos\n+  #606 = Utf8               end\n+  #607 = Utf8               delim\n+  #608 = Utf8               quote\n+  #609 = Utf8               delimChar\n+  #610 = Utf8               quoteModePolicy\n+  #611 = Utf8               printer\n+  #612 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n+  #613 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n+  #614 = Utf8               i\n+  #615 = Utf8               sb\n+  #616 = Utf8               Ljava/lang/StringBuilder;\n+  #617 = Utf8               strings\n+  #618 = Utf8               count\n+  #619 = Utf8               hdr\n+  #620 = Utf8               dupCheck\n+  #621 = Utf8               Ljava/util/Set;\n+  #622 = Utf8               LocalVariableTypeTable\n+  #623 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #624 = Utf8               withAutoFlush\n+  #625 = Utf8               withFirstRecordAsHeader\n+  #626 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n+  #627 = Utf8               enumValues\n+  #628 = Utf8               headerEnum\n+  #629 = Utf8               Ljava/lang/Class;\n+  #630 = Utf8               [Ljava/lang/Enum<*>;\n+  #631 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n+  #632 = Utf8               Signature\n+  #633 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+  #634 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n+  #635 = Utf8               resultSet\n+  #636 = Utf8               Ljava/sql/ResultSet;\n+  #637 = Class              #638          // java/sql/SQLException\n+  #638 = Utf8               java/sql/SQLException\n+  #639 = Utf8               columnCount\n+  #640 = Utf8               metaData\n+  #641 = Utf8               Ljava/sql/ResultSetMetaData;\n+  #642 = Utf8               labels\n+  #643 = Utf8               withHeaderComments\n+  #644 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n+  #645 = Utf8               <clinit>\n+  #646 = Utf8               SourceFile\n+  #647 = Utf8               CSVFormat.java\n+  #648 = Utf8               InnerClasses\n+  #649 = Utf8               Predefined\n {\n   public static final org.apache.commons.csv.CSVFormat DEFAULT;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.csv.CSVFormat EXCEL;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n@@ -1369,15 +1367,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #82                 // Field header:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n          8: getfield      #82                 // Field header:[Ljava/lang/String;\n-        11: invokevirtual #152                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        11: invokevirtual #77                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n         14: checkcast     #78                 // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 843: 0\n       LocalVariableTable:\n@@ -1394,15 +1392,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n          8: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n-        11: invokevirtual #153                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        11: invokevirtual #77                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n         14: checkcast     #78                 // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 852: 0\n       LocalVariableTable:\n@@ -1575,67 +1573,67 @@\n         19: aload_0\n         20: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         23: ifnonnull     30\n         26: iconst_0\n         27: goto          37\n         30: aload_0\n         31: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        34: invokevirtual #154                // Method org/apache/commons/csv/QuoteMode.hashCode:()I\n+        34: invokevirtual #152                // Method org/apache/commons/csv/QuoteMode.hashCode:()I\n         37: iadd\n         38: istore_2\n         39: bipush        31\n         41: iload_2\n         42: imul\n         43: aload_0\n         44: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         47: ifnonnull     54\n         50: iconst_0\n         51: goto          61\n         54: aload_0\n         55: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n-        58: invokevirtual #160                // Method java/lang/Character.hashCode:()I\n+        58: invokevirtual #158                // Method java/lang/Character.hashCode:()I\n         61: iadd\n         62: istore_2\n         63: bipush        31\n         65: iload_2\n         66: imul\n         67: aload_0\n         68: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n         71: ifnonnull     78\n         74: iconst_0\n         75: goto          85\n         78: aload_0\n         79: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n-        82: invokevirtual #160                // Method java/lang/Character.hashCode:()I\n+        82: invokevirtual #158                // Method java/lang/Character.hashCode:()I\n         85: iadd\n         86: istore_2\n         87: bipush        31\n         89: iload_2\n         90: imul\n         91: aload_0\n         92: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         95: ifnonnull     102\n         98: iconst_0\n         99: goto          109\n        102: aload_0\n        103: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n-       106: invokevirtual #160                // Method java/lang/Character.hashCode:()I\n+       106: invokevirtual #158                // Method java/lang/Character.hashCode:()I\n        109: iadd\n        110: istore_2\n        111: bipush        31\n        113: iload_2\n        114: imul\n        115: aload_0\n        116: getfield      #66                 // Field nullString:Ljava/lang/String;\n        119: ifnonnull     126\n        122: iconst_0\n        123: goto          133\n        126: aload_0\n        127: getfield      #66                 // Field nullString:Ljava/lang/String;\n-       130: invokevirtual #161                // Method java/lang/String.hashCode:()I\n+       130: invokevirtual #159                // Method java/lang/String.hashCode:()I\n        133: iadd\n        134: istore_2\n        135: bipush        31\n        137: iload_2\n        138: imul\n        139: aload_0\n        140: getfield      #52                 // Field ignoreSurroundingSpaces:Z\n@@ -1684,23 +1682,23 @@\n        227: aload_0\n        228: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n        231: ifnonnull     238\n        234: iconst_0\n        235: goto          245\n        238: aload_0\n        239: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n-       242: invokevirtual #161                // Method java/lang/String.hashCode:()I\n+       242: invokevirtual #159                // Method java/lang/String.hashCode:()I\n        245: iadd\n        246: istore_2\n        247: bipush        31\n        249: iload_2\n        250: imul\n        251: aload_0\n        252: getfield      #82                 // Field header:[Ljava/lang/String;\n-       255: invokestatic  #162                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+       255: invokestatic  #160                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n        258: iadd\n        259: istore_2\n        260: iload_2\n        261: ireturn\n       LineNumberTable:\n         line 955: 0\n         line 956: 3\n@@ -1875,19 +1873,19 @@\n           stack = [ int ]\n \n   public org.apache.commons.csv.CSVParser parse(java.io.Reader) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #165                // class org/apache/commons/csv/CSVParser\n+         0: new           #163                // class org/apache/commons/csv/CSVParser\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #167                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #165                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1025: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1    in   Ljava/io/Reader;\n@@ -1917,22 +1915,22 @@\n   public org.apache.commons.csv.CSVPrinter print(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n          0: new           #122                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: new           #170                // class java/io/OutputStreamWriter\n+         4: new           #168                // class java/io/OutputStreamWriter\n          7: dup\n-         8: new           #172                // class java/io/FileOutputStream\n+         8: new           #170                // class java/io/FileOutputStream\n         11: dup\n         12: aload_1\n-        13: invokespecial #174                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+        13: invokespecial #172                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         16: aload_2\n-        17: invokespecial #177                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        17: invokespecial #175                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         20: aload_0\n         21: invokespecial #124                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         24: areturn\n       LineNumberTable:\n         line 1064: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1949,67 +1947,67 @@\n       stack=7, locals=5, args_size=4\n          0: aload_1\n          1: ifnonnull     74\n          4: aconst_null\n          5: aload_0\n          6: getfield      #66                 // Field nullString:Ljava/lang/String;\n          9: if_acmpne     19\n-        12: ldc           #180                // String\n+        12: ldc           #178                // String\n         14: astore        4\n         16: goto          94\n-        19: getstatic     #182                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+        19: getstatic     #180                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n         22: aload_0\n         23: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         26: if_acmpne     65\n-        29: new           #185                // class java/lang/StringBuilder\n+        29: new           #183                // class java/lang/StringBuilder\n         32: dup\n-        33: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n         36: aload_0\n         37: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n-        40: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        40: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         43: aload_0\n         44: getfield      #66                 // Field nullString:Ljava/lang/String;\n-        47: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         50: aload_0\n         51: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n-        54: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        57: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        57: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         60: astore        4\n         62: goto          94\n         65: aload_0\n         66: getfield      #66                 // Field nullString:Ljava/lang/String;\n         69: astore        4\n         71: goto          94\n         74: aload_1\n-        75: instanceof    #196                // class java/lang/CharSequence\n+        75: instanceof    #194                // class java/lang/CharSequence\n         78: ifeq          88\n         81: aload_1\n-        82: checkcast     #196                // class java/lang/CharSequence\n+        82: checkcast     #194                // class java/lang/CharSequence\n         85: goto          92\n         88: aload_1\n-        89: invokevirtual #198                // Method java/lang/Object.toString:()Ljava/lang/String;\n+        89: invokevirtual #196                // Method java/lang/Object.toString:()Ljava/lang/String;\n         92: astore        4\n         94: aload_0\n-        95: invokevirtual #199                // Method getTrim:()Z\n+        95: invokevirtual #197                // Method getTrim:()Z\n         98: ifeq          110\n        101: aload_0\n        102: aload         4\n-       104: invokespecial #203                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+       104: invokespecial #201                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n        107: goto          112\n        110: aload         4\n        112: astore        4\n        114: aload_0\n        115: aload_1\n        116: aload         4\n        118: iconst_0\n        119: aload         4\n-       121: invokeinterface #206,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n+       121: invokeinterface #204,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n        126: aload_2\n        127: iload_3\n-       128: invokespecial #209                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+       128: invokespecial #207                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n        131: return\n       LineNumberTable:\n         line 1085: 0\n         line 1087: 4\n         line 1088: 12\n         line 1090: 19\n         line 1091: 29\n@@ -2049,53 +2047,53 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=7, args_size=7\n          0: iload         6\n          2: ifne          17\n          5: aload         5\n          7: aload_0\n-         8: invokevirtual #213                // Method getDelimiter:()C\n-        11: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         8: invokevirtual #211                // Method getDelimiter:()C\n+        11: invokeinterface #214,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         16: pop\n         17: aload_1\n         18: ifnonnull     33\n         21: aload         5\n         23: aload_2\n-        24: invokeinterface #221,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        24: invokeinterface #219,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         29: pop\n         30: goto          90\n         33: aload_0\n-        34: invokevirtual #224                // Method isQuoteCharacterSet:()Z\n+        34: invokevirtual #222                // Method isQuoteCharacterSet:()Z\n         37: ifeq          56\n         40: aload_0\n         41: aload_1\n         42: aload_2\n         43: iload_3\n         44: iload         4\n         46: aload         5\n         48: iload         6\n-        50: invokespecial #227                // Method printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n+        50: invokespecial #225                // Method printAndQuote:(Ljava/lang/Object;Ljava/lang/CharSequence;IILjava/lang/Appendable;Z)V\n         53: goto          90\n         56: aload_0\n-        57: invokevirtual #230                // Method isEscapeCharacterSet:()Z\n+        57: invokevirtual #228                // Method isEscapeCharacterSet:()Z\n         60: ifeq          76\n         63: aload_0\n         64: aload_2\n         65: iload_3\n         66: iload         4\n         68: aload         5\n-        70: invokespecial #233                // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+        70: invokespecial #231                // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n         73: goto          90\n         76: aload         5\n         78: aload_2\n         79: iload_3\n         80: iload_3\n         81: iload         4\n         83: iadd\n-        84: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        84: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         89: pop\n         90: return\n       LineNumberTable:\n         line 1105: 0\n         line 1106: 5\n         line 1108: 17\n         line 1109: 21\n@@ -2128,17 +2126,17 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: anewarray     #240                // class java/nio/file/OpenOption\n-         7: invokestatic  #242                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-        10: invokevirtual #248                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+         4: anewarray     #238                // class java/nio/file/OpenOption\n+         7: invokestatic  #240                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+        10: invokevirtual #246                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n         13: areturn\n       LineNumberTable:\n         line 1137: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      14     1   out   Ljava/nio/file/Path;\n@@ -2156,26 +2154,26 @@\n          3: iload_2\n          4: istore        6\n          6: iload_2\n          7: iload_3\n          8: iadd\n          9: istore        7\n         11: aload_0\n-        12: invokevirtual #213                // Method getDelimiter:()C\n+        12: invokevirtual #211                // Method getDelimiter:()C\n         15: istore        8\n         17: aload_0\n-        18: invokevirtual #251                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        18: invokevirtual #249                // Method getEscapeCharacter:()Ljava/lang/Character;\n         21: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n         24: istore        9\n         26: iload         6\n         28: iload         7\n         30: if_icmpge     148\n         33: aload_1\n         34: iload         6\n-        36: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        36: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         41: istore        10\n         43: iload         10\n         45: bipush        13\n         47: if_icmpeq     71\n         50: iload         10\n         52: bipush        10\n         54: if_icmpeq     71\n@@ -2188,49 +2186,49 @@\n         71: iload         6\n         73: iload         5\n         75: if_icmple     91\n         78: aload         4\n         80: aload_1\n         81: iload         5\n         83: iload         6\n-        85: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        85: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         90: pop\n         91: iload         10\n         93: bipush        10\n         95: if_icmpne     105\n         98: bipush        110\n        100: istore        10\n        102: goto          116\n        105: iload         10\n        107: bipush        13\n        109: if_icmpne     116\n        112: bipush        114\n        114: istore        10\n        116: aload         4\n        118: iload         9\n-       120: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       120: invokeinterface #214,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        125: pop\n        126: aload         4\n        128: iload         10\n-       130: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       130: invokeinterface #214,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        135: pop\n        136: iload         6\n        138: iconst_1\n        139: iadd\n        140: istore        5\n        142: iinc          6, 1\n        145: goto          26\n        148: iload         6\n        150: iload         5\n        152: if_icmple     168\n        155: aload         4\n        157: aload_1\n        158: iload         5\n        160: iload         6\n-       162: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       162: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        167: pop\n        168: return\n       LineNumberTable:\n         line 1145: 0\n         line 1146: 3\n         line 1147: 6\n         line 1149: 11\n@@ -2295,80 +2293,80 @@\n          6: iload_3\n          7: istore        9\n          9: iload_3\n         10: iload         4\n         12: iadd\n         13: istore        10\n         15: aload_0\n-        16: invokevirtual #213                // Method getDelimiter:()C\n+        16: invokevirtual #211                // Method getDelimiter:()C\n         19: istore        11\n         21: aload_0\n-        22: invokevirtual #259                // Method getQuoteCharacter:()Ljava/lang/Character;\n+        22: invokevirtual #257                // Method getQuoteCharacter:()Ljava/lang/Character;\n         25: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n         28: istore        12\n         30: aload_0\n-        31: invokevirtual #262                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+        31: invokevirtual #260                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n         34: astore        13\n         36: aload         13\n         38: ifnonnull     46\n-        41: getstatic     #266                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+        41: getstatic     #264                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n         44: astore        13\n-        46: getstatic     #269                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+        46: getstatic     #267                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n         49: aload         13\n-        51: invokevirtual #275                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n+        51: invokevirtual #273                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n         54: iaload\n         55: tableswitch   { // 1 to 5\n                        1: 88\n                        2: 88\n                        3: 94\n                        4: 111\n                        5: 122\n                  default: 268\n             }\n         88: iconst_1\n         89: istore        7\n         91: goto          297\n         94: aload_1\n-        95: instanceof    #278                // class java/lang/Number\n+        95: instanceof    #276                // class java/lang/Number\n         98: ifne          105\n        101: iconst_1\n        102: goto          106\n        105: iconst_0\n        106: istore        7\n        108: goto          297\n        111: aload_0\n        112: aload_2\n        113: iload_3\n        114: iload         4\n        116: aload         5\n-       118: invokespecial #233                // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n+       118: invokespecial #231                // Method printAndEscape:(Ljava/lang/CharSequence;IILjava/lang/Appendable;)V\n        121: return\n        122: iload         4\n        124: ifgt          138\n        127: iload         6\n        129: ifeq          249\n        132: iconst_1\n        133: istore        7\n        135: goto          249\n        138: aload_2\n        139: iload         9\n-       141: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       141: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        146: istore        14\n        148: iload         14\n        150: bipush        35\n        152: if_icmpgt     161\n        155: iconst_1\n        156: istore        7\n        158: goto          249\n        161: iload         9\n        163: iload         10\n        165: if_icmpge     218\n        168: aload_2\n        169: iload         9\n-       171: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       171: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        176: istore        14\n        178: iload         14\n        180: bipush        10\n        182: if_icmpeq     206\n        185: iload         14\n        187: bipush        13\n        189: if_icmpeq     206\n@@ -2387,86 +2385,86 @@\n        220: ifne          249\n        223: iload         10\n        225: iconst_1\n        226: isub\n        227: istore        9\n        229: aload_2\n        230: iload         9\n-       232: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       232: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        237: istore        14\n        239: iload         14\n        241: bipush        32\n        243: if_icmpgt     249\n        246: iconst_1\n        247: istore        7\n        249: iload         7\n        251: ifne          297\n        254: aload         5\n        256: aload_2\n        257: iload         8\n        259: iload         10\n-       261: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       261: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        266: pop\n        267: return\n        268: new           #148                // class java/lang/IllegalStateException\n        271: dup\n-       272: new           #185                // class java/lang/StringBuilder\n+       272: new           #183                // class java/lang/StringBuilder\n        275: dup\n-       276: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-       279: ldc_w         #280                // String Unexpected Quote value:\n-       282: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       276: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+       279: ldc_w         #278                // String Unexpected Quote value:\n+       282: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        285: aload         13\n-       287: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       290: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       293: invokespecial #282                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       287: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       290: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       293: invokespecial #280                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        296: athrow\n        297: iload         7\n        299: ifne          316\n        302: aload         5\n        304: aload_2\n        305: iload         8\n        307: iload         10\n-       309: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       309: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        314: pop\n        315: return\n        316: aload         5\n        318: iload         12\n-       320: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       320: invokeinterface #214,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        325: pop\n        326: iload         9\n        328: iload         10\n        330: if_icmpge     375\n        333: aload_2\n        334: iload         9\n-       336: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       336: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        341: istore        14\n        343: iload         14\n        345: iload         12\n        347: if_icmpne     369\n        350: aload         5\n        352: aload_2\n        353: iload         8\n        355: iload         9\n        357: iconst_1\n        358: iadd\n-       359: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       359: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        364: pop\n        365: iload         9\n        367: istore        8\n        369: iinc          9, 1\n        372: goto          326\n        375: aload         5\n        377: aload_2\n        378: iload         8\n        380: iload         9\n-       382: invokeinterface #237,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       382: invokeinterface #235,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        387: pop\n        388: aload         5\n        390: iload         12\n-       392: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       392: invokeinterface #214,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        397: pop\n        398: return\n       LineNumberTable:\n         line 1186: 0\n         line 1187: 3\n         line 1188: 6\n         line 1189: 9\n@@ -2571,15 +2569,15 @@\n   public org.apache.commons.csv.CSVPrinter printer() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: new           #122                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: getstatic     #285                // Field java/lang/System.out:Ljava/io/PrintStream;\n+         4: getstatic     #283                // Field java/lang/System.out:Ljava/io/PrintStream;\n          7: aload_0\n          8: invokespecial #124                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         11: areturn\n       LineNumberTable:\n         line 1302: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2589,28 +2587,28 @@\n \n   public void println(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #291                // Method getTrailingDelimiter:()Z\n+         1: invokevirtual #289                // Method getTrailingDelimiter:()Z\n          4: ifeq          18\n          7: aload_1\n          8: aload_0\n-         9: invokevirtual #213                // Method getDelimiter:()C\n-        12: invokeinterface #216,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         9: invokevirtual #211                // Method getDelimiter:()C\n+        12: invokeinterface #214,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n         17: pop\n         18: aload_0\n         19: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n         22: ifnull        36\n         25: aload_1\n         26: aload_0\n         27: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n-        30: invokeinterface #221,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        30: invokeinterface #219,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         35: pop\n         36: return\n       LineNumberTable:\n         line 1315: 0\n         line 1316: 7\n         line 1318: 18\n         line 1319: 25\n@@ -2642,20 +2640,20 @@\n         11: aaload\n         12: aload_1\n         13: iload_3\n         14: ifne          21\n         17: iconst_1\n         18: goto          22\n         21: iconst_0\n-        22: invokevirtual #294                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+        22: invokevirtual #292                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n         25: iinc          3, 1\n         28: goto          2\n         31: aload_0\n         32: aload_1\n-        33: invokevirtual #297                // Method println:(Ljava/lang/Appendable;)V\n+        33: invokevirtual #295                // Method println:(Ljava/lang/Appendable;)V\n         36: return\n       LineNumberTable:\n         line 1341: 0\n         line 1342: 8\n         line 1341: 25\n         line 1344: 31\n         line 1345: 36\n@@ -2683,167 +2681,167 @@\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #185                // class java/lang/StringBuilder\n+         0: new           #183                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc_w         #301                // String Delimiter=<\n-        12: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc_w         #299                // String Delimiter=<\n+        12: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         15: aload_0\n         16: getfield      #34                 // Field delimiter:C\n-        19: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        19: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         22: bipush        62\n-        24: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        24: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         27: pop\n         28: aload_0\n-        29: invokevirtual #230                // Method isEscapeCharacterSet:()Z\n+        29: invokevirtual #228                // Method isEscapeCharacterSet:()Z\n         32: ifeq          62\n         35: aload_1\n         36: bipush        32\n-        38: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        38: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         41: pop\n         42: aload_1\n-        43: ldc_w         #306                // String Escape=<\n-        46: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        43: ldc_w         #304                // String Escape=<\n+        46: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: aload_0\n         50: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n-        53: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         56: bipush        62\n-        58: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        58: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         61: pop\n         62: aload_0\n-        63: invokevirtual #224                // Method isQuoteCharacterSet:()Z\n+        63: invokevirtual #222                // Method isQuoteCharacterSet:()Z\n         66: ifeq          96\n         69: aload_1\n         70: bipush        32\n-        72: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        72: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         75: pop\n         76: aload_1\n-        77: ldc_w         #308                // String QuoteChar=<\n-        80: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        77: ldc_w         #306                // String QuoteChar=<\n+        80: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         83: aload_0\n         84: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n-        87: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        87: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         90: bipush        62\n-        92: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        92: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         95: pop\n         96: aload_0\n-        97: invokevirtual #310                // Method isCommentMarkerSet:()Z\n+        97: invokevirtual #308                // Method isCommentMarkerSet:()Z\n        100: ifeq          130\n        103: aload_1\n        104: bipush        32\n-       106: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       106: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        109: pop\n        110: aload_1\n-       111: ldc_w         #313                // String CommentStart=<\n-       114: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       111: ldc_w         #311                // String CommentStart=<\n+       114: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        117: aload_0\n        118: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n-       121: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       121: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        124: bipush        62\n-       126: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       126: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        129: pop\n        130: aload_0\n-       131: invokevirtual #315                // Method isNullStringSet:()Z\n+       131: invokevirtual #313                // Method isNullStringSet:()Z\n        134: ifeq          164\n        137: aload_1\n        138: bipush        32\n-       140: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       140: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        143: pop\n        144: aload_1\n-       145: ldc_w         #318                // String NullString=<\n-       148: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       145: ldc_w         #316                // String NullString=<\n+       148: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        151: aload_0\n        152: getfield      #66                 // Field nullString:Ljava/lang/String;\n-       155: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       155: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        158: bipush        62\n-       160: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       160: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        163: pop\n        164: aload_0\n        165: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n        168: ifnull        198\n        171: aload_1\n        172: bipush        32\n-       174: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       174: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        177: pop\n        178: aload_1\n-       179: ldc_w         #320                // String RecordSeparator=<\n-       182: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       179: ldc_w         #318                // String RecordSeparator=<\n+       182: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        185: aload_0\n        186: getfield      #62                 // Field recordSeparator:Ljava/lang/String;\n-       189: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       189: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        192: bipush        62\n-       194: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       194: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        197: pop\n        198: aload_0\n-       199: invokevirtual #322                // Method getIgnoreEmptyLines:()Z\n+       199: invokevirtual #320                // Method getIgnoreEmptyLines:()Z\n        202: ifeq          213\n        205: aload_1\n-       206: ldc_w         #325                // String  EmptyLines:ignored\n-       209: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       206: ldc_w         #323                // String  EmptyLines:ignored\n+       209: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        212: pop\n        213: aload_0\n-       214: invokevirtual #327                // Method getIgnoreSurroundingSpaces:()Z\n+       214: invokevirtual #325                // Method getIgnoreSurroundingSpaces:()Z\n        217: ifeq          228\n        220: aload_1\n-       221: ldc_w         #330                // String  SurroundingSpaces:ignored\n-       224: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       221: ldc_w         #328                // String  SurroundingSpaces:ignored\n+       224: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        227: pop\n        228: aload_0\n-       229: invokevirtual #332                // Method getIgnoreHeaderCase:()Z\n+       229: invokevirtual #330                // Method getIgnoreHeaderCase:()Z\n        232: ifeq          243\n        235: aload_1\n-       236: ldc_w         #335                // String  IgnoreHeaderCase:ignored\n-       239: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       236: ldc_w         #333                // String  IgnoreHeaderCase:ignored\n+       239: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        242: pop\n        243: aload_1\n-       244: ldc_w         #337                // String  SkipHeaderRecord:\n-       247: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       244: ldc_w         #335                // String  SkipHeaderRecord:\n+       247: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        250: aload_0\n        251: getfield      #85                 // Field skipHeaderRecord:Z\n-       254: invokevirtual #339                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+       254: invokevirtual #337                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n        257: pop\n        258: aload_0\n        259: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n        262: ifnull        290\n        265: aload_1\n        266: bipush        32\n-       268: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       268: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        271: pop\n        272: aload_1\n-       273: ldc_w         #342                // String HeaderComments:\n-       276: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       273: ldc_w         #340                // String HeaderComments:\n+       276: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        279: aload_0\n        280: getfield      #73                 // Field headerComments:[Ljava/lang/String;\n-       283: invokestatic  #344                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       286: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       283: invokestatic  #342                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       286: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        289: pop\n        290: aload_0\n        291: getfield      #82                 // Field header:[Ljava/lang/String;\n        294: ifnull        322\n        297: aload_1\n        298: bipush        32\n-       300: invokevirtual #303                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       300: invokevirtual #301                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        303: pop\n        304: aload_1\n-       305: ldc_w         #347                // String Header:\n-       308: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       305: ldc_w         #345                // String Header:\n+       308: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        311: aload_0\n        312: getfield      #82                 // Field header:[Ljava/lang/String;\n-       315: invokestatic  #344                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       318: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       315: invokestatic  #342                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       318: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        321: pop\n        322: aload_1\n-       323: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       323: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        326: areturn\n       LineNumberTable:\n         line 1349: 0\n         line 1350: 8\n         line 1351: 28\n         line 1352: 35\n         line 1353: 42\n@@ -2917,15 +2915,15 @@\n         25: aload_2\n         26: iload_3\n         27: aload         4\n         29: ifnonnull     36\n         32: aconst_null\n         33: goto          41\n         36: aload         4\n-        38: invokevirtual #198                // Method java/lang/Object.toString:()Ljava/lang/String;\n+        38: invokevirtual #196                // Method java/lang/Object.toString:()Ljava/lang/String;\n         41: aastore\n         42: iinc          3, 1\n         45: goto          14\n         48: aload_2\n         49: areturn\n       LineNumberTable:\n         line 1393: 0\n@@ -2968,51 +2966,51 @@\n          1: instanceof    #112                // class java/lang/String\n          4: ifeq          15\n          7: aload_1\n          8: checkcast     #112                // class java/lang/String\n         11: invokevirtual #135                // Method java/lang/String.trim:()Ljava/lang/String;\n         14: areturn\n         15: aload_1\n-        16: invokeinterface #206,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n+        16: invokeinterface #204,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         21: istore_2\n         22: iload_2\n         23: istore_3\n         24: iconst_0\n         25: istore        4\n         27: iload         4\n         29: iload_3\n         30: if_icmpge     52\n         33: aload_1\n         34: iload         4\n-        36: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        36: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         41: bipush        32\n         43: if_icmpgt     52\n         46: iinc          4, 1\n         49: goto          27\n         52: iload         4\n         54: iload_3\n         55: if_icmpge     78\n         58: aload_1\n         59: iload_3\n         60: iconst_1\n         61: isub\n-        62: invokeinterface #255,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        62: invokeinterface #253,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         67: bipush        32\n         69: if_icmpgt     78\n         72: iinc          3, -1\n         75: goto          52\n         78: iload         4\n         80: ifgt          88\n         83: iload_3\n         84: iload_2\n         85: if_icmpge     100\n         88: aload_1\n         89: iload         4\n         91: iload_3\n-        92: invokeinterface #349,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+        92: invokeinterface #347,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n         97: goto          101\n        100: aload_1\n        101: areturn\n       LineNumberTable:\n         line 1405: 0\n         line 1406: 7\n         line 1408: 15\n@@ -3047,157 +3045,157 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aload_0\n          1: getfield      #34                 // Field delimiter:C\n          4: invokestatic  #9                  // Method isLineBreak:(C)Z\n          7: ifeq          21\n-        10: new           #353                // class java/lang/IllegalArgumentException\n+        10: new           #351                // class java/lang/IllegalArgumentException\n         13: dup\n-        14: ldc_w         #355                // String The delimiter cannot be a line break\n-        17: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc_w         #353                // String The delimiter cannot be a line break\n+        17: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: aload_0\n         22: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         25: ifnull        79\n         28: aload_0\n         29: getfield      #34                 // Field delimiter:C\n         32: aload_0\n         33: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         36: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n         39: if_icmpne     79\n-        42: new           #353                // class java/lang/IllegalArgumentException\n+        42: new           #351                // class java/lang/IllegalArgumentException\n         45: dup\n-        46: new           #185                // class java/lang/StringBuilder\n+        46: new           #183                // class java/lang/StringBuilder\n         49: dup\n-        50: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-        53: ldc_w         #358                // String The quoteChar character and the delimiter cannot be the same (\\'\n-        56: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+        53: ldc_w         #356                // String The quoteChar character and the delimiter cannot be the same (\\'\n+        56: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         59: aload_0\n         60: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n-        63: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        66: ldc_w         #360                // String \\')\n-        69: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        63: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        66: ldc_w         #358                // String \\')\n+        69: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         78: athrow\n         79: aload_0\n         80: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         83: ifnull        137\n         86: aload_0\n         87: getfield      #34                 // Field delimiter:C\n         90: aload_0\n         91: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         94: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n         97: if_icmpne     137\n-       100: new           #353                // class java/lang/IllegalArgumentException\n+       100: new           #351                // class java/lang/IllegalArgumentException\n        103: dup\n-       104: new           #185                // class java/lang/StringBuilder\n+       104: new           #183                // class java/lang/StringBuilder\n        107: dup\n-       108: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-       111: ldc_w         #362                // String The escape character and the delimiter cannot be the same (\\'\n-       114: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       108: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+       111: ldc_w         #360                // String The escape character and the delimiter cannot be the same (\\'\n+       114: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        117: aload_0\n        118: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n-       121: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       124: ldc_w         #360                // String \\')\n-       127: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       130: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       133: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       121: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       124: ldc_w         #358                // String \\')\n+       127: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       130: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       133: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        136: athrow\n        137: aload_0\n        138: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n        141: ifnull        195\n        144: aload_0\n        145: getfield      #34                 // Field delimiter:C\n        148: aload_0\n        149: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n        152: invokevirtual #3                  // Method java/lang/Character.charValue:()C\n        155: if_icmpne     195\n-       158: new           #353                // class java/lang/IllegalArgumentException\n+       158: new           #351                // class java/lang/IllegalArgumentException\n        161: dup\n-       162: new           #185                // class java/lang/StringBuilder\n+       162: new           #183                // class java/lang/StringBuilder\n        165: dup\n-       166: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-       169: ldc_w         #364                // String The comment start character and the delimiter cannot be the same (\\'\n-       172: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       166: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+       169: ldc_w         #362                // String The comment start character and the delimiter cannot be the same (\\'\n+       172: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        175: aload_0\n        176: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n-       179: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       182: ldc_w         #360                // String \\')\n-       185: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       188: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       191: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       179: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       182: ldc_w         #358                // String \\')\n+       185: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       188: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       191: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        194: athrow\n        195: aload_0\n        196: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n        199: ifnull        253\n        202: aload_0\n        203: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n        206: aload_0\n        207: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n        210: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n        213: ifeq          253\n-       216: new           #353                // class java/lang/IllegalArgumentException\n+       216: new           #351                // class java/lang/IllegalArgumentException\n        219: dup\n-       220: new           #185                // class java/lang/StringBuilder\n+       220: new           #183                // class java/lang/StringBuilder\n        223: dup\n-       224: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-       227: ldc_w         #366                // String The comment start character and the quoteChar cannot be the same (\\'\n-       230: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       224: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+       227: ldc_w         #364                // String The comment start character and the quoteChar cannot be the same (\\'\n+       230: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        233: aload_0\n        234: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n-       237: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       240: ldc_w         #360                // String \\')\n-       243: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       246: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       249: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       237: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       240: ldc_w         #358                // String \\')\n+       243: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       246: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       249: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        252: athrow\n        253: aload_0\n        254: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n        257: ifnull        311\n        260: aload_0\n        261: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n        264: aload_0\n        265: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n        268: invokevirtual #107                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n        271: ifeq          311\n-       274: new           #353                // class java/lang/IllegalArgumentException\n+       274: new           #351                // class java/lang/IllegalArgumentException\n        277: dup\n-       278: new           #185                // class java/lang/StringBuilder\n+       278: new           #183                // class java/lang/StringBuilder\n        281: dup\n-       282: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-       285: ldc_w         #368                // String The comment start and the escape character cannot be the same (\\'\n-       288: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       282: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+       285: ldc_w         #366                // String The comment start and the escape character cannot be the same (\\'\n+       288: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        291: aload_0\n        292: getfield      #46                 // Field commentMarker:Ljava/lang/Character;\n-       295: invokevirtual #188                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       298: ldc_w         #360                // String \\')\n-       301: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       304: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       307: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       295: invokevirtual #186                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       298: ldc_w         #358                // String \\')\n+       301: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       304: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       307: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        310: athrow\n        311: aload_0\n        312: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n        315: ifnonnull     339\n        318: aload_0\n        319: getfield      #42                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-       322: getstatic     #370                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+       322: getstatic     #368                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n        325: if_acmpne     339\n-       328: new           #353                // class java/lang/IllegalArgumentException\n+       328: new           #351                // class java/lang/IllegalArgumentException\n        331: dup\n-       332: ldc_w         #373                // String No quotes mode set but no escape character is set\n-       335: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       332: ldc_w         #371                // String No quotes mode set but no escape character is set\n+       335: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        338: athrow\n        339: aload_0\n        340: getfield      #82                 // Field header:[Ljava/lang/String;\n        343: ifnull        439\n-       346: new           #375                // class java/util/HashSet\n+       346: new           #373                // class java/util/HashSet\n        349: dup\n-       350: invokespecial #377                // Method java/util/HashSet.\"<init>\":()V\n+       350: invokespecial #375                // Method java/util/HashSet.\"<init>\":()V\n        353: astore_1\n        354: aload_0\n        355: getfield      #82                 // Field header:[Ljava/lang/String;\n        358: astore_2\n        359: aload_2\n        360: arraylength\n        361: istore_3\n@@ -3208,33 +3206,33 @@\n        368: if_icmpge     439\n        371: aload_2\n        372: iload         4\n        374: aaload\n        375: astore        5\n        377: aload_1\n        378: aload         5\n-       380: invokeinterface #378,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n+       380: invokeinterface #376,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n        385: ifne          433\n-       388: new           #353                // class java/lang/IllegalArgumentException\n+       388: new           #351                // class java/lang/IllegalArgumentException\n        391: dup\n-       392: new           #185                // class java/lang/StringBuilder\n+       392: new           #183                // class java/lang/StringBuilder\n        395: dup\n-       396: invokespecial #187                // Method java/lang/StringBuilder.\"<init>\":()V\n-       399: ldc_w         #383                // String The header contains a duplicate entry: \\'\n-       402: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       396: invokespecial #185                // Method java/lang/StringBuilder.\"<init>\":()V\n+       399: ldc_w         #381                // String The header contains a duplicate entry: \\'\n+       402: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        405: aload         5\n-       407: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       410: ldc_w         #385                // String \\' in\n-       413: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       407: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       410: ldc_w         #383                // String \\' in\n+       413: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        416: aload_0\n        417: getfield      #82                 // Field header:[Ljava/lang/String;\n-       420: invokestatic  #344                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       423: invokevirtual #192                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       426: invokevirtual #195                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       429: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       420: invokestatic  #342                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       423: invokevirtual #190                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       426: invokevirtual #193                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       429: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        432: athrow\n        433: iinc          4, 1\n        436: goto          365\n        439: return\n       LineNumberTable:\n         line 1427: 0\n         line 1428: 10\n@@ -3290,15 +3288,15 @@\n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #387                // Method withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #385                // Method withAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1480: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -3403,36 +3401,36 @@\n   public org.apache.commons.csv.CSVFormat withCommentMarker(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #391                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #394                // Method withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #389                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #392                // Method withCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1524: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 commentMarker   C\n \n   public org.apache.commons.csv.CSVFormat withCommentMarker(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #398                // Method isLineBreak:(Ljava/lang/Character;)Z\n+         1: invokestatic  #396                // Method isLineBreak:(Ljava/lang/Character;)Z\n          4: ifeq          18\n-         7: new           #353                // class java/lang/IllegalArgumentException\n+         7: new           #351                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc_w         #401                // String The comment start marker character cannot be a line break\n-        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc_w         #399                // String The comment start marker character cannot be a line break\n+        14: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: new           #10                 // class org/apache/commons/csv/CSVFormat\n         21: dup\n         22: aload_0\n         23: getfield      #34                 // Field delimiter:C\n         26: aload_0\n         27: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n@@ -3482,18 +3480,18 @@\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: iload_1\n          1: invokestatic  #9                  // Method isLineBreak:(C)Z\n          4: ifeq          18\n-         7: new           #353                // class java/lang/IllegalArgumentException\n+         7: new           #351                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc_w         #355                // String The delimiter cannot be a line break\n-        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc_w         #353                // String The delimiter cannot be a line break\n+        14: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: new           #10                 // class org/apache/commons/csv/CSVFormat\n         21: dup\n         22: iload_1\n         23: aload_0\n         24: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n         27: aload_0\n@@ -3542,36 +3540,36 @@\n   public org.apache.commons.csv.CSVFormat withEscape(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #391                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #403                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #389                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #401                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1575: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 escape   C\n \n   public org.apache.commons.csv.CSVFormat withEscape(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #398                // Method isLineBreak:(Ljava/lang/Character;)Z\n+         1: invokestatic  #396                // Method isLineBreak:(Ljava/lang/Character;)Z\n          4: ifeq          18\n-         7: new           #353                // class java/lang/IllegalArgumentException\n+         7: new           #351                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc_w         #406                // String The escape character cannot be a line break\n-        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc_w         #404                // String The escape character cannot be a line break\n+        14: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: new           #10                 // class org/apache/commons/csv/CSVFormat\n         21: dup\n         22: aload_0\n         23: getfield      #34                 // Field delimiter:C\n         26: aload_0\n         27: getfield      #38                 // Field quoteCharacter:Ljava/lang/Character;\n@@ -3621,16 +3619,16 @@\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: anewarray     #112                // class java/lang/String\n-         5: invokevirtual #408                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-         8: invokevirtual #412                // Method withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #406                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+         8: invokevirtual #410                // Method withSkipHeaderRecord:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 1613: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -3640,16 +3638,16 @@\n     Code:\n       stack=4, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokevirtual #415                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        10: checkcast     #421                // class \"[Ljava/lang/Enum;\"\n+         7: invokevirtual #413                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        10: checkcast     #419                // class \"[Ljava/lang/Enum;\"\n         13: astore_3\n         14: aload_3\n         15: arraylength\n         16: anewarray     #112                // class java/lang/String\n         19: astore_2\n         20: iconst_0\n         21: istore        4\n@@ -3658,21 +3656,21 @@\n         26: arraylength\n         27: if_icmpge     47\n         30: aload_2\n         31: iload         4\n         33: aload_3\n         34: iload         4\n         36: aaload\n-        37: invokevirtual #423                // Method java/lang/Enum.name:()Ljava/lang/String;\n+        37: invokevirtual #421                // Method java/lang/Enum.name:()Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          23\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #408                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+        49: invokevirtual #406                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n         52: areturn\n       LineNumberTable:\n         line 1643: 0\n         line 1644: 2\n         line 1645: 6\n         line 1646: 14\n         line 1647: 20\n@@ -3692,29 +3690,29 @@\n             0      53     1 headerEnum   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 254 /* append */\n           offset_delta = 23\n           locals = [ class \"[Ljava/lang/String;\", class \"[Ljava/lang/Enum;\", int ]\n         frame_type = 249 /* chop */\n           offset_delta = 23\n-    Signature: #635                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+    Signature: #633                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        14\n          5: aload_1\n-         6: invokeinterface #428,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+         6: invokeinterface #426,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n         11: goto          15\n         14: aconst_null\n-        15: invokevirtual #434                // Method withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+        15: invokevirtual #432                // Method withHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n         18: areturn\n       LineNumberTable:\n         line 1681: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      19     1 resultSet   Ljava/sql/ResultSet;\n@@ -3734,15 +3732,15 @@\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokeinterface #437,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n+         7: invokeinterface #435,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n         12: istore_3\n         13: iload_3\n         14: anewarray     #112                // class java/lang/String\n         17: astore_2\n         18: iconst_0\n         19: istore        4\n         21: iload         4\n@@ -3750,21 +3748,21 @@\n         24: if_icmpge     47\n         27: aload_2\n         28: iload         4\n         30: aload_1\n         31: iload         4\n         33: iconst_1\n         34: iadd\n-        35: invokeinterface #442,  2          // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+        35: invokeinterface #440,  2          // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          21\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #408                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+        49: invokevirtual #406                // Method withHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n         52: areturn\n       LineNumberTable:\n         line 1711: 0\n         line 1712: 2\n         line 1713: 6\n         line 1714: 13\n         line 1715: 18\n@@ -3888,15 +3886,15 @@\n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1780: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -3952,15 +3950,15 @@\n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #449                // Method withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #447                // Method withIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1805: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -4016,15 +4014,15 @@\n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #452                // Method withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #450                // Method withIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1831: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -4129,36 +4127,36 @@\n   public org.apache.commons.csv.CSVFormat withQuote(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #391                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #389                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1877: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 quoteChar   C\n \n   public org.apache.commons.csv.CSVFormat withQuote(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=19, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #398                // Method isLineBreak:(Ljava/lang/Character;)Z\n+         1: invokestatic  #396                // Method isLineBreak:(Ljava/lang/Character;)Z\n          4: ifeq          18\n-         7: new           #353                // class java/lang/IllegalArgumentException\n+         7: new           #351                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc_w         #458                // String The quoteChar cannot be a line break\n-        14: invokespecial #357                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc_w         #456                // String The quoteChar cannot be a line break\n+        14: invokespecial #355                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: new           #10                 // class org/apache/commons/csv/CSVFormat\n         21: dup\n         22: aload_0\n         23: getfield      #34                 // Field delimiter:C\n         26: aload_1\n         27: aload_0\n@@ -4256,16 +4254,16 @@\n   public org.apache.commons.csv.CSVFormat withRecordSeparator(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #460                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-         5: invokevirtual #463                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokestatic  #458                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: invokevirtual #461                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n          8: areturn\n       LineNumberTable:\n         line 1926: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       9     1 recordSeparator   C\n@@ -4322,15 +4320,15 @@\n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #467                // Method withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #465                // Method withSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 1959: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -4385,32 +4383,32 @@\n \n   public org.apache.commons.csv.CSVFormat withSystemRecordSeparator();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: ldc_w         #469                // String line.separator\n-         4: invokestatic  #471                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-         7: invokevirtual #463                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+         1: ldc_w         #467                // String line.separator\n+         4: invokestatic  #469                // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         7: invokevirtual #461                // Method withRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n         10: areturn\n       LineNumberTable:\n         line 1990: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #475                // Method withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #473                // Method withTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 2000: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -4466,15 +4464,15 @@\n   public org.apache.commons.csv.CSVFormat withTrim();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #478                // Method withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n+         2: invokevirtual #476                // Method withTrim:(Z)Lorg/apache/commons/csv/CSVFormat;\n          5: areturn\n       LineNumberTable:\n         line 2025: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -4531,128 +4529,128 @@\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=19, locals=0, args_size=0\n          0: new           #10                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: bipush        44\n-         6: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+         6: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n          9: aconst_null\n         10: aconst_null\n         11: aconst_null\n         12: iconst_0\n         13: iconst_1\n-        14: ldc_w         #484                // String \\r\\n\n+        14: ldc_w         #482                // String \\r\\n\n         17: aconst_null\n         18: aconst_null\n         19: aconst_null\n         20: iconst_0\n         21: iconst_0\n         22: iconst_0\n         23: iconst_0\n         24: iconst_0\n         25: iconst_0\n         26: invokespecial #15                 // Method \"<init>\":(CLjava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZ)V\n-        29: putstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        32: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        29: putstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        32: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n         35: iconst_0\n-        36: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-        39: invokevirtual #490                // Method withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n-        42: putstatic     #492                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-        45: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        36: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+        39: invokevirtual #488                // Method withAllowMissingColumnNames:()Lorg/apache/commons/csv/CSVFormat;\n+        42: putstatic     #490                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+        45: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n         48: bipush        124\n-        50: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+        50: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n         53: bipush        92\n-        55: invokevirtual #499                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n-        58: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        61: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+        55: invokevirtual #497                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+        58: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+        61: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n         64: bipush        10\n-        66: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-        69: putstatic     #503                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-        72: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        66: invokevirtual #499                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+        69: putstatic     #501                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+        72: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n         75: bipush        44\n-        77: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-        80: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        83: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+        77: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+        80: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+        83: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n         86: bipush        10\n-        88: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-        91: putstatic     #506                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-        94: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        88: invokevirtual #499                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+        91: putstatic     #504                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+        94: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n         97: bipush        9\n-        99: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+        99: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n        102: bipush        92\n-       104: invokevirtual #499                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+       104: invokevirtual #497                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n        107: iconst_0\n-       108: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       108: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n        111: aconst_null\n-       112: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       112: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n        115: bipush        10\n-       117: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-       120: ldc_w         #509                // String \\\\N\n-       123: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       126: getstatic     #514                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       129: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       132: putstatic     #521                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-       135: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       117: invokevirtual #499                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+       120: ldc_w         #507                // String \\\\N\n+       123: invokevirtual #509                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       126: getstatic     #512                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       129: invokevirtual #515                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       132: putstatic     #519                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+       135: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n        138: bipush        44\n-       140: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       140: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n        143: bipush        92\n-       145: invokevirtual #499                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n+       145: invokevirtual #497                // Method withEscape:(C)Lorg/apache/commons/csv/CSVFormat;\n        148: iconst_0\n-       149: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       152: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       155: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-       158: ldc_w         #509                // String \\\\N\n-       161: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       164: invokevirtual #524                // Method withTrim:()Lorg/apache/commons/csv/CSVFormat;\n-       167: invokevirtual #526                // Method withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n-       170: getstatic     #266                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       173: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       176: putstatic     #529                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-       179: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       149: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       152: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       155: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       158: ldc_w         #507                // String \\\\N\n+       161: invokevirtual #509                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       164: invokevirtual #522                // Method withTrim:()Lorg/apache/commons/csv/CSVFormat;\n+       167: invokevirtual #524                // Method withSystemRecordSeparator:()Lorg/apache/commons/csv/CSVFormat;\n+       170: getstatic     #264                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       173: invokevirtual #515                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       176: putstatic     #527                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+       179: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n        182: bipush        44\n-       184: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       187: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       190: invokevirtual #403                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       184: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       187: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       190: invokevirtual #401                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n        193: iconst_0\n-       194: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       197: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       200: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       194: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       197: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       200: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n        203: bipush        10\n-       205: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-       208: ldc           #180                // String\n-       210: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       213: getstatic     #514                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       216: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       219: putstatic     #532                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       222: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       205: invokevirtual #499                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+       208: ldc           #178                // String\n+       210: invokevirtual #509                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       213: getstatic     #512                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       216: invokevirtual #515                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       219: putstatic     #530                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       222: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n        225: bipush        9\n-       227: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       230: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       233: invokevirtual #403                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       227: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       230: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       233: invokevirtual #401                // Method withEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n        236: iconst_0\n-       237: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       240: getstatic     #481                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       243: invokevirtual #455                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+       237: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       240: getstatic     #479                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       243: invokevirtual #453                // Method withQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n        246: bipush        10\n-       248: invokevirtual #501                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-       251: ldc_w         #509                // String \\\\N\n-       254: invokevirtual #511                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-       257: getstatic     #514                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       260: invokevirtual #517                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-       263: putstatic     #535                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-       266: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       248: invokevirtual #499                // Method withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+       251: ldc_w         #507                // String \\\\N\n+       254: invokevirtual #509                // Method withNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+       257: getstatic     #512                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       260: invokevirtual #515                // Method withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+       263: putstatic     #533                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+       266: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n        269: iconst_0\n-       270: invokevirtual #446                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n-       273: putstatic     #538                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-       276: getstatic     #486                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       270: invokevirtual #444                // Method withIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat;\n+       273: putstatic     #536                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+       276: getstatic     #484                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n        279: bipush        9\n-       281: invokevirtual #495                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-       284: invokevirtual #541                // Method withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n-       287: putstatic     #543                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n+       281: invokevirtual #493                // Method withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+       284: invokevirtual #539                // Method withIgnoreSurroundingSpaces:()Lorg/apache/commons/csv/CSVFormat;\n+       287: putstatic     #541                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n        290: return\n       LineNumberTable:\n         line 254: 0\n         line 287: 32\n         line 288: 36\n         line 289: 39\n         line 317: 45\n@@ -4701,9 +4699,9 @@\n         line 538: 276\n         line 539: 281\n         line 540: 284\n         line 538: 290\n }\n SourceFile: \"CSVFormat.java\"\n InnerClasses:\n-  public static final #651= #20 of #10;   // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n-  static #270;                            // class org/apache/commons/csv/CSVFormat$1\n+  public static final #649= #20 of #10;   // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n+  static #268;                            // class org/apache/commons/csv/CSVFormat$1\n"}]}
