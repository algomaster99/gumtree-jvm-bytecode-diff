{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorInputStream.class", "source2": "second/ZstdCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,113 +1,113 @@\n-  SHA-256 checksum 919528e0f950d3d1de4646bbf92b601f794d5f7cec66676b993ef791038cd1bc\n+  SHA-256 checksum 5ee07ef73dcf192cb0e6cfc67b9c673bbb2a5dc9532ee831f159284449c36c4a\n   Compiled from \"ZstdCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  super_class: #21                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #15                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  super_class: #2                         // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 2, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #21.#69        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-   #2 = Class              #70            // com/github/luben/zstd/ZstdInputStream\n-   #3 = Class              #71            // org/apache/commons/compress/utils/CountingInputStream\n-   #4 = Methodref          #3.#72         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #5 = Fieldref           #20.#73        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #6 = Methodref          #2.#72         // com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #7 = Fieldref           #20.#74        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-   #8 = Methodref          #2.#75         // com/github/luben/zstd/ZstdInputStream.available:()I\n-   #9 = Methodref          #2.#76         // com/github/luben/zstd/ZstdInputStream.close:()V\n-  #10 = Methodref          #20.#77        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.read:([BII)I\n-  #11 = Methodref          #78.#79        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-  #12 = Methodref          #2.#80         // com/github/luben/zstd/ZstdInputStream.mark:(I)V\n-  #13 = Methodref          #2.#81         // com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n-  #14 = Methodref          #2.#82         // com/github/luben/zstd/ZstdInputStream.read:()I\n-  #15 = Methodref          #20.#83        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.count:(I)V\n-  #16 = Methodref          #2.#77         // com/github/luben/zstd/ZstdInputStream.read:([BII)I\n-  #17 = Methodref          #84.#85        // java/lang/Object.toString:()Ljava/lang/String;\n-  #18 = Methodref          #2.#86         // com/github/luben/zstd/ZstdInputStream.reset:()V\n-  #19 = Methodref          #3.#87         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-  #20 = Class              #88            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #21 = Class              #89            // org/apache/commons/compress/compressors/CompressorInputStream\n-  #22 = Class              #90            // org/apache/commons/compress/utils/InputStreamStatistics\n-  #23 = Utf8               countingStream\n-  #24 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #25 = Utf8               decIS\n-  #26 = Utf8               Lcom/github/luben/zstd/ZstdInputStream;\n-  #27 = Utf8               <init>\n-  #28 = Utf8               (Ljava/io/InputStream;)V\n-  #29 = Utf8               Code\n-  #30 = Utf8               LineNumberTable\n-  #31 = Utf8               LocalVariableTable\n-  #32 = Utf8               this\n-  #33 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n-  #34 = Utf8               in\n-  #35 = Utf8               Ljava/io/InputStream;\n-  #36 = Utf8               Exceptions\n-  #37 = Class              #91            // java/io/IOException\n-  #38 = Utf8               available\n-  #39 = Utf8               ()I\n-  #40 = Utf8               close\n-  #41 = Utf8               ()V\n-  #42 = Utf8               read\n-  #43 = Utf8               ([B)I\n-  #44 = Utf8               b\n-  #45 = Utf8               [B\n-  #46 = Utf8               skip\n-  #47 = Utf8               (J)J\n-  #48 = Utf8               n\n-  #49 = Utf8               J\n-  #50 = Utf8               mark\n-  #51 = Utf8               (I)V\n-  #52 = Utf8               readlimit\n-  #53 = Utf8               I\n-  #54 = Utf8               markSupported\n-  #55 = Utf8               ()Z\n-  #56 = Utf8               ret\n-  #57 = Utf8               StackMapTable\n-  #58 = Utf8               ([BII)I\n-  #59 = Utf8               buf\n-  #60 = Utf8               off\n-  #61 = Utf8               len\n-  #62 = Utf8               toString\n-  #63 = Utf8               ()Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/compress/compressors/CompressorInputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // com/github/luben/zstd/ZstdInputStream\n+   #8 = Utf8               com/github/luben/zstd/ZstdInputStream\n+   #9 = Class              #10            // org/apache/commons/compress/utils/CountingInputStream\n+  #10 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #11 = Methodref          #9.#12         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #12 = NameAndType        #5:#13         // \"<init>\":(Ljava/io/InputStream;)V\n+  #13 = Utf8               (Ljava/io/InputStream;)V\n+  #14 = Fieldref           #15.#16        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #15 = Class              #17            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  #16 = NameAndType        #18:#19        // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #17 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n+  #18 = Utf8               countingStream\n+  #19 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #20 = Methodref          #7.#12         // com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #21 = Fieldref           #15.#22        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+  #22 = NameAndType        #23:#24        // decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+  #23 = Utf8               decIS\n+  #24 = Utf8               Lcom/github/luben/zstd/ZstdInputStream;\n+  #25 = Methodref          #7.#26         // com/github/luben/zstd/ZstdInputStream.available:()I\n+  #26 = NameAndType        #27:#28        // available:()I\n+  #27 = Utf8               available\n+  #28 = Utf8               ()I\n+  #29 = Methodref          #7.#30         // com/github/luben/zstd/ZstdInputStream.close:()V\n+  #30 = NameAndType        #31:#6         // close:()V\n+  #31 = Utf8               close\n+  #32 = Methodref          #15.#33        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.read:([BII)I\n+  #33 = NameAndType        #34:#35        // read:([BII)I\n+  #34 = Utf8               read\n+  #35 = Utf8               ([BII)I\n+  #36 = Methodref          #37.#38        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #37 = Class              #39            // org/apache/commons/compress/utils/IOUtils\n+  #38 = NameAndType        #40:#41        // skip:(Ljava/io/InputStream;J)J\n+  #39 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #40 = Utf8               skip\n+  #41 = Utf8               (Ljava/io/InputStream;J)J\n+  #42 = Methodref          #7.#43         // com/github/luben/zstd/ZstdInputStream.mark:(I)V\n+  #43 = NameAndType        #44:#45        // mark:(I)V\n+  #44 = Utf8               mark\n+  #45 = Utf8               (I)V\n+  #46 = Methodref          #7.#47         // com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n+  #47 = NameAndType        #48:#49        // markSupported:()Z\n+  #48 = Utf8               markSupported\n+  #49 = Utf8               ()Z\n+  #50 = Methodref          #7.#51         // com/github/luben/zstd/ZstdInputStream.read:()I\n+  #51 = NameAndType        #34:#28        // read:()I\n+  #52 = Methodref          #15.#53        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream.count:(I)V\n+  #53 = NameAndType        #54:#45        // count:(I)V\n+  #54 = Utf8               count\n+  #55 = Methodref          #7.#33         // com/github/luben/zstd/ZstdInputStream.read:([BII)I\n+  #56 = Methodref          #57.#58        // java/lang/Object.toString:()Ljava/lang/String;\n+  #57 = Class              #59            // java/lang/Object\n+  #58 = NameAndType        #60:#61        // toString:()Ljava/lang/String;\n+  #59 = Utf8               java/lang/Object\n+  #60 = Utf8               toString\n+  #61 = Utf8               ()Ljava/lang/String;\n+  #62 = Methodref          #7.#63         // com/github/luben/zstd/ZstdInputStream.reset:()V\n+  #63 = NameAndType        #64:#6         // reset:()V\n   #64 = Utf8               reset\n-  #65 = Utf8               getCompressedCount\n-  #66 = Utf8               ()J\n-  #67 = Utf8               SourceFile\n-  #68 = Utf8               ZstdCompressorInputStream.java\n-  #69 = NameAndType        #27:#41        // \"<init>\":()V\n-  #70 = Utf8               com/github/luben/zstd/ZstdInputStream\n-  #71 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #72 = NameAndType        #27:#28        // \"<init>\":(Ljava/io/InputStream;)V\n-  #73 = NameAndType        #23:#24        // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #74 = NameAndType        #25:#26        // decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-  #75 = NameAndType        #38:#39        // available:()I\n-  #76 = NameAndType        #40:#41        // close:()V\n-  #77 = NameAndType        #42:#58        // read:([BII)I\n-  #78 = Class              #92            // org/apache/commons/compress/utils/IOUtils\n-  #79 = NameAndType        #46:#93        // skip:(Ljava/io/InputStream;J)J\n-  #80 = NameAndType        #50:#51        // mark:(I)V\n-  #81 = NameAndType        #54:#55        // markSupported:()Z\n-  #82 = NameAndType        #42:#39        // read:()I\n-  #83 = NameAndType        #94:#51        // count:(I)V\n-  #84 = Class              #95            // java/lang/Object\n-  #85 = NameAndType        #62:#63        // toString:()Ljava/lang/String;\n-  #86 = NameAndType        #64:#41        // reset:()V\n-  #87 = NameAndType        #96:#66        // getBytesRead:()J\n-  #88 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream\n-  #89 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #90 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #91 = Utf8               java/io/IOException\n-  #92 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #93 = Utf8               (Ljava/io/InputStream;J)J\n-  #94 = Utf8               count\n-  #95 = Utf8               java/lang/Object\n-  #96 = Utf8               getBytesRead\n+  #65 = Methodref          #9.#66         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #66 = NameAndType        #67:#68        // getBytesRead:()J\n+  #67 = Utf8               getBytesRead\n+  #68 = Utf8               ()J\n+  #69 = Class              #70            // org/apache/commons/compress/utils/InputStreamStatistics\n+  #70 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #71 = Utf8               Code\n+  #72 = Utf8               LineNumberTable\n+  #73 = Utf8               LocalVariableTable\n+  #74 = Utf8               this\n+  #75 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n+  #76 = Utf8               in\n+  #77 = Utf8               Ljava/io/InputStream;\n+  #78 = Utf8               Exceptions\n+  #79 = Class              #80            // java/io/IOException\n+  #80 = Utf8               java/io/IOException\n+  #81 = Utf8               ([B)I\n+  #82 = Utf8               b\n+  #83 = Utf8               [B\n+  #84 = Utf8               (J)J\n+  #85 = Utf8               n\n+  #86 = Utf8               J\n+  #87 = Utf8               readlimit\n+  #88 = Utf8               I\n+  #89 = Utf8               ret\n+  #90 = Utf8               StackMapTable\n+  #91 = Utf8               buf\n+  #92 = Utf8               off\n+  #93 = Utf8               len\n+  #94 = Utf8               getCompressedCount\n+  #95 = Utf8               SourceFile\n+  #96 = Utf8               ZstdCompressorInputStream.java\n {\n   private final org.apache.commons.compress.utils.CountingInputStream countingStream;\n     descriptor: Lorg/apache/commons/compress/utils/CountingInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final com.github.luben.zstd.ZstdInputStream decIS;\n     descriptor: Lcom/github/luben/zstd/ZstdInputStream;\n@@ -117,25 +117,25 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdInputStream\n+         5: new           #7                  // class com/github/luben/zstd/ZstdInputStream\n          8: dup\n          9: aload_0\n-        10: new           #3                  // class org/apache/commons/compress/utils/CountingInputStream\n+        10: new           #9                  // class org/apache/commons/compress/utils/CountingInputStream\n         13: dup\n         14: aload_1\n-        15: invokespecial #4                  // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        15: invokespecial #11                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         18: dup_x1\n-        19: putfield      #5                  // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        22: invokespecial #6                  // Method com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        25: putfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+        19: putfield      #14                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        22: invokespecial #20                 // Method com/github/luben/zstd/ZstdInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        25: putfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n         28: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 4\n         line 44: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -146,16 +146,16 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #8                  // Method com/github/luben/zstd/ZstdInputStream.available:()I\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #25                 // Method com/github/luben/zstd/ZstdInputStream.available:()I\n          7: ireturn\n       LineNumberTable:\n         line 48: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n     Exceptions:\n@@ -163,16 +163,16 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #9                  // Method com/github/luben/zstd/ZstdInputStream.close:()V\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #29                 // Method com/github/luben/zstd/ZstdInputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n@@ -185,15 +185,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #10                 // Method read:([BII)I\n+         5: invokevirtual #32                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 58: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n             0       9     1     b   [B\n@@ -202,17 +202,17 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n          4: lload_1\n-         5: invokestatic  #11                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+         5: invokestatic  #36                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n          8: lreturn\n       LineNumberTable:\n         line 63: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n             0       9     1     n   J\n@@ -221,17 +221,17 @@\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n          4: iload_1\n-         5: invokevirtual #12                 // Method com/github/luben/zstd/ZstdInputStream.mark:(I)V\n+         5: invokevirtual #42                 // Method com/github/luben/zstd/ZstdInputStream.mark:(I)V\n          8: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n@@ -239,40 +239,40 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #13                 // Method com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #46                 // Method com/github/luben/zstd/ZstdInputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 73: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #14                 // Method com/github/luben/zstd/ZstdInputStream.read:()I\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #50                 // Method com/github/luben/zstd/ZstdInputStream.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_0\n         15: goto          19\n         18: iconst_1\n-        19: invokevirtual #15                 // Method count:(I)V\n+        19: invokevirtual #52                 // Method count:(I)V\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 78: 0\n         line 79: 8\n         line 80: 22\n       LocalVariableTable:\n@@ -297,23 +297,23 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         7: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #16                 // Method com/github/luben/zstd/ZstdInputStream.read:([BII)I\n+        13: invokevirtual #55                 // Method com/github/luben/zstd/ZstdInputStream.read:([BII)I\n         16: istore        4\n         18: aload_0\n         19: iload         4\n-        21: invokevirtual #15                 // Method count:(I)V\n+        21: invokevirtual #52                 // Method count:(I)V\n         24: iload         4\n         26: ireturn\n       LineNumberTable:\n         line 85: 0\n         line 86: 4\n         line 88: 6\n         line 89: 18\n@@ -332,31 +332,31 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #17                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #56                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 95: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n-         4: invokevirtual #18                 // Method com/github/luben/zstd/ZstdInputStream.reset:()V\n+         1: getfield      #21                 // Field decIS:Lcom/github/luben/zstd/ZstdInputStream;\n+         4: invokevirtual #62                 // Method com/github/luben/zstd/ZstdInputStream.reset:()V\n          7: return\n       LineNumberTable:\n         line 100: 0\n         line 101: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n@@ -365,16 +365,16 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #19                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #14                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #65                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 108: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorInputStream;\n }\n"}]}
