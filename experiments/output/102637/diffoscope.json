{"diffoscope-json-version": 1, "source1": "first/SevenZOutputFile$OutputStreamWrapper.class", "source2": "second/SevenZOutputFile$OutputStreamWrapper.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -15,36 +15,38 @@\n         this.buffer = ByteBuffer.allocate(8192);\n     }\n     \n     @Override\n     public void write(final int b) throws IOException {\n         this.buffer.clear();\n         this.buffer.put((byte)b).flip();\n-        SevenZOutputFile.access$200(this.this$0).write(this.buffer);\n-        SevenZOutputFile.access$300(this.this$0).update(b);\n-        SevenZOutputFile.access$408(this.this$0);\n+        SevenZOutputFile.access$0(this.this$0).write(this.buffer);\n+        SevenZOutputFile.access$1(this.this$0).update(b);\n+        final SevenZOutputFile this$0 = this.this$0;\n+        SevenZOutputFile.access$3(this$0, SevenZOutputFile.access$2(this$0) + 1L);\n     }\n     \n     @Override\n     public void write(final byte[] b) throws IOException {\n         this.write(b, 0, b.length);\n     }\n     \n     @Override\n     public void write(final byte[] b, final int off, final int len) throws IOException {\n         if (len > 8192) {\n-            SevenZOutputFile.access$200(this.this$0).write(ByteBuffer.wrap(b, off, len));\n+            SevenZOutputFile.access$0(this.this$0).write(ByteBuffer.wrap(b, off, len));\n         }\n         else {\n             this.buffer.clear();\n             this.buffer.put(b, off, len).flip();\n-            SevenZOutputFile.access$200(this.this$0).write(this.buffer);\n+            SevenZOutputFile.access$0(this.this$0).write(this.buffer);\n         }\n-        SevenZOutputFile.access$300(this.this$0).update(b, off, len);\n-        SevenZOutputFile.access$414(this.this$0, (long)len);\n+        SevenZOutputFile.access$1(this.this$0).update(b, off, len);\n+        final SevenZOutputFile this$0 = this.this$0;\n+        SevenZOutputFile.access$3(this$0, SevenZOutputFile.access$2(this$0) + (long)len);\n     }\n     \n     @Override\n     public void flush() throws IOException {\n     }\n     \n     @Override\n"}]}
