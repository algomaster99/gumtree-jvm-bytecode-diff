{"diffoscope-json-version": 1, "source1": "first/X0017_StrongEncryptionHeader.class", "source2": "second/X0017_StrongEncryptionHeader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,197 +1,194 @@\n-  SHA-256 checksum 237f0d977a59c8587f43e3919cf69e3882e0c8840f33ae2d184aa2703fa8fbb3\n+  SHA-256 checksum e2454bf721f1e5f467e897c9757b842f23281956431f4243accc7d8f1eb4e6af\n   Compiled from \"X0017_StrongEncryptionHeader.java\"\n public class org.apache.commons.compress.archivers.zip.X0017_StrongEncryptionHeader extends org.apache.commons.compress.archivers.zip.PKWareExtraHeader\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #48                         // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  super_class: #49                        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  interfaces: 0, fields: 13, methods: 9, attributes: 2\n+  this_class: #38                         // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  super_class: #39                        // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  interfaces: 0, fields: 13, methods: 9, attributes: 3\n Constant pool:\n-    #1 = Class              #108          // org/apache/commons/compress/archivers/zip/ZipShort\n-    #2 = Methodref          #1.#109       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-    #3 = Methodref          #49.#110      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-    #4 = Fieldref           #48.#111      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.rcount:J\n-    #5 = Fieldref           #48.#112      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-    #6 = Fieldref           #48.#113      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-    #7 = Methodref          #48.#114      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertMinimalLength:(II)V\n-    #8 = Methodref          #1.#115       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-    #9 = Fieldref           #48.#116      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.format:I\n-   #10 = Methodref          #53.#117      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #11 = Fieldref           #48.#118      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.bitlen:I\n-   #12 = Fieldref           #48.#119      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.flags:I\n-   #13 = Methodref          #120.#121     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #14 = Methodref          #62.#122      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #15 = Fieldref           #48.#123      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashSize:I\n-   #16 = String             #96           // ivSize\n-   #17 = Methodref          #48.#124      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertDynamicLengthFits:(Ljava/lang/String;III)V\n-   #18 = Methodref          #125.#126     // java/util/Arrays.copyOfRange:([BII)[B\n-   #19 = Fieldref           #48.#127      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.ivData:[B\n-   #20 = String             #97           // erdSize\n-   #21 = Fieldref           #48.#128      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.erdData:[B\n-   #22 = String             #94           // vSize\n-   #23 = Class              #129          // java/util/zip/ZipException\n-   #24 = Class              #130          // java/lang/StringBuilder\n-   #25 = Methodref          #24.#131      // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = String             #132          // Invalid X0017_StrongEncryptionHeader: vSize\n-   #27 = Methodref          #24.#133      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #28 = Methodref          #24.#134      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #29 = String             #135          //  is too small to hold CRC\n-   #30 = Methodref          #24.#136      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #23.#137      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Fieldref           #48.#138      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vData:[B\n-   #33 = Fieldref           #48.#139      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vCRC32:[B\n-   #34 = String             #140          // Invalid X0017_StrongEncryptionHeader: resize\n-   #35 = String             #141          //  is too small to hold hashSize\n-   #36 = Fieldref           #48.#142      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.recipientKeyHash:[B\n-   #37 = Fieldref           #48.#143      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.keyBlob:[B\n-   #38 = String             #95           // resize\n-   #39 = Methodref          #144.#145     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #40 = Methodref          #49.#146      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n-   #41 = Methodref          #48.#147      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseFileFormat:([BII)V\n-   #42 = Methodref          #49.#148      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n-   #43 = Methodref          #48.#149      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseCentralDirectoryFormat:([BII)V\n-   #44 = String             #150          // Invalid X0017_StrongEncryptionHeader:\n-   #45 = String             #151          //\n-   #46 = String             #152          //  doesn\\'t fit into\n-   #47 = String             #153          //  bytes of data at position\n-   #48 = Class              #154          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-   #49 = Class              #155          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-   #50 = Utf8               format\n-   #51 = Utf8               I\n-   #52 = Utf8               algId\n-   #53 = Class              #156          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-   #54 = Utf8               EncryptionAlgorithm\n-   #55 = Utf8               InnerClasses\n-   #56 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #57 = Utf8               bitlen\n-   #58 = Utf8               flags\n-   #59 = Utf8               rcount\n-   #60 = Utf8               J\n-   #61 = Utf8               hashAlg\n-   #62 = Class              #157          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-   #63 = Utf8               HashAlgorithm\n-   #64 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #65 = Utf8               hashSize\n-   #66 = Utf8               ivData\n-   #67 = Utf8               [B\n-   #68 = Utf8               erdData\n-   #69 = Utf8               recipientKeyHash\n-   #70 = Utf8               keyBlob\n-   #71 = Utf8               vData\n-   #72 = Utf8               vCRC32\n-   #73 = Utf8               <init>\n-   #74 = Utf8               ()V\n-   #75 = Utf8               Code\n-   #76 = Utf8               LineNumberTable\n-   #77 = Utf8               LocalVariableTable\n-   #78 = Utf8               this\n-   #79 = Utf8               Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-   #80 = Utf8               getRecordCount\n-   #81 = Utf8               ()J\n-   #82 = Utf8               getHashAlgorithm\n-   #83 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-   #84 = Utf8               getEncryptionAlgorithm\n-   #85 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-   #86 = Utf8               parseCentralDirectoryFormat\n-   #87 = Utf8               ([BII)V\n-   #88 = Utf8               data\n-   #89 = Utf8               offset\n-   #90 = Utf8               length\n-   #91 = Utf8               StackMapTable\n-   #92 = Utf8               Exceptions\n-   #93 = Utf8               parseFileFormat\n-   #94 = Utf8               vSize\n-   #95 = Utf8               resize\n-   #96 = Utf8               ivSize\n-   #97 = Utf8               erdSize\n-   #98 = Utf8               parseFromLocalFileData\n-   #99 = Utf8               parseFromCentralDirectoryData\n-  #100 = Utf8               assertDynamicLengthFits\n-  #101 = Utf8               (Ljava/lang/String;III)V\n-  #102 = Utf8               what\n-  #103 = Utf8               Ljava/lang/String;\n-  #104 = Utf8               dynamicLength\n-  #105 = Utf8               prefixLength\n-  #106 = Utf8               SourceFile\n-  #107 = Utf8               X0017_StrongEncryptionHeader.java\n-  #108 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #109 = NameAndType        #73:#158      // \"<init>\":(I)V\n-  #110 = NameAndType        #73:#159      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #111 = NameAndType        #59:#60       // rcount:J\n-  #112 = NameAndType        #61:#64       // hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #113 = NameAndType        #52:#56       // algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #114 = NameAndType        #160:#161     // assertMinimalLength:(II)V\n-  #115 = NameAndType        #162:#163     // getValue:([BI)I\n-  #116 = NameAndType        #50:#51       // format:I\n-  #117 = NameAndType        #164:#165     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #118 = NameAndType        #57:#51       // bitlen:I\n-  #119 = NameAndType        #58:#51       // flags:I\n-  #120 = Class              #166          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #121 = NameAndType        #162:#167     // getValue:([BI)J\n-  #122 = NameAndType        #164:#168     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #123 = NameAndType        #65:#51       // hashSize:I\n-  #124 = NameAndType        #100:#101     // assertDynamicLengthFits:(Ljava/lang/String;III)V\n-  #125 = Class              #169          // java/util/Arrays\n-  #126 = NameAndType        #170:#171     // copyOfRange:([BII)[B\n-  #127 = NameAndType        #66:#67       // ivData:[B\n-  #128 = NameAndType        #68:#67       // erdData:[B\n-  #129 = Utf8               java/util/zip/ZipException\n-  #130 = Utf8               java/lang/StringBuilder\n-  #131 = NameAndType        #73:#74       // \"<init>\":()V\n-  #132 = Utf8               Invalid X0017_StrongEncryptionHeader: vSize\n-  #133 = NameAndType        #172:#173     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #134 = NameAndType        #172:#174     // append:(I)Ljava/lang/StringBuilder;\n-  #135 = Utf8                is too small to hold CRC\n-  #136 = NameAndType        #175:#176     // toString:()Ljava/lang/String;\n-  #137 = NameAndType        #73:#177      // \"<init>\":(Ljava/lang/String;)V\n-  #138 = NameAndType        #71:#67       // vData:[B\n-  #139 = NameAndType        #72:#67       // vCRC32:[B\n-  #140 = Utf8               Invalid X0017_StrongEncryptionHeader: resize\n-  #141 = Utf8                is too small to hold hashSize\n-  #142 = NameAndType        #69:#67       // recipientKeyHash:[B\n-  #143 = NameAndType        #70:#67       // keyBlob:[B\n-  #144 = Class              #178          // java/lang/System\n-  #145 = NameAndType        #179:#180     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #146 = NameAndType        #98:#87       // parseFromLocalFileData:([BII)V\n-  #147 = NameAndType        #93:#87       // parseFileFormat:([BII)V\n-  #148 = NameAndType        #99:#87       // parseFromCentralDirectoryData:([BII)V\n-  #149 = NameAndType        #86:#87       // parseCentralDirectoryFormat:([BII)V\n-  #150 = Utf8               Invalid X0017_StrongEncryptionHeader:\n-  #151 = Utf8\n-  #152 = Utf8                doesn\\'t fit into\n-  #153 = Utf8                bytes of data at position\n-  #154 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n-  #155 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  #156 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n-  #157 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n-  #158 = Utf8               (I)V\n-  #159 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n-  #160 = Utf8               assertMinimalLength\n-  #161 = Utf8               (II)V\n-  #162 = Utf8               getValue\n-  #163 = Utf8               ([BI)I\n-  #164 = Utf8               getAlgorithmByCode\n-  #165 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n-  #166 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #167 = Utf8               ([BI)J\n-  #168 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-  #169 = Utf8               java/util/Arrays\n-  #170 = Utf8               copyOfRange\n-  #171 = Utf8               ([BII)[B\n-  #172 = Utf8               append\n-  #173 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #174 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #175 = Utf8               toString\n-  #176 = Utf8               ()Ljava/lang/String;\n-  #177 = Utf8               (Ljava/lang/String;)V\n-  #178 = Utf8               java/lang/System\n-  #179 = Utf8               arraycopy\n-  #180 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+    #1 = Class              #98           // org/apache/commons/compress/archivers/zip/ZipShort\n+    #2 = Methodref          #1.#99        // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+    #3 = Methodref          #39.#100      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.\"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+    #4 = Fieldref           #38.#101      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.rcount:J\n+    #5 = Fieldref           #38.#102      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+    #6 = Fieldref           #38.#103      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+    #7 = Methodref          #38.#104      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertMinimalLength:(II)V\n+    #8 = Methodref          #1.#105       // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+    #9 = Fieldref           #38.#106      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.format:I\n+   #10 = Methodref          #43.#107      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #11 = Fieldref           #38.#108      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.bitlen:I\n+   #12 = Fieldref           #38.#109      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.flags:I\n+   #13 = Methodref          #110.#111     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #14 = Methodref          #52.#112      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #15 = Fieldref           #38.#113      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.hashSize:I\n+   #16 = String             #86           // ivSize\n+   #17 = Methodref          #38.#114      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.assertDynamicLengthFits:(Ljava/lang/String;III)V\n+   #18 = Methodref          #115.#116     // java/util/Arrays.copyOfRange:([BII)[B\n+   #19 = Fieldref           #38.#117      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.ivData:[B\n+   #20 = String             #87           // erdSize\n+   #21 = Fieldref           #38.#118      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.erdData:[B\n+   #22 = String             #84           // vSize\n+   #23 = Class              #119          // java/util/zip/ZipException\n+   #24 = InvokeDynamic      #0:#123       // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #25 = Methodref          #23.#124      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #26 = Fieldref           #38.#125      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vData:[B\n+   #27 = Fieldref           #38.#126      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.vCRC32:[B\n+   #28 = InvokeDynamic      #1:#128       // #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+   #29 = Fieldref           #38.#129      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.recipientKeyHash:[B\n+   #30 = Fieldref           #38.#130      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.keyBlob:[B\n+   #31 = String             #85           // resize\n+   #32 = Methodref          #131.#132     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #33 = Methodref          #39.#133      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n+   #34 = Methodref          #38.#134      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseFileFormat:([BII)V\n+   #35 = Methodref          #39.#135      // org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n+   #36 = Methodref          #38.#136      // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader.parseCentralDirectoryFormat:([BII)V\n+   #37 = InvokeDynamic      #2:#138       // #2:makeConcatWithConstants:(Ljava/lang/String;III)Ljava/lang/String;\n+   #38 = Class              #139          // org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+   #39 = Class              #140          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+   #40 = Utf8               format\n+   #41 = Utf8               I\n+   #42 = Utf8               algId\n+   #43 = Class              #141          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+   #44 = Utf8               EncryptionAlgorithm\n+   #45 = Utf8               InnerClasses\n+   #46 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #47 = Utf8               bitlen\n+   #48 = Utf8               flags\n+   #49 = Utf8               rcount\n+   #50 = Utf8               J\n+   #51 = Utf8               hashAlg\n+   #52 = Class              #142          // org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+   #53 = Utf8               HashAlgorithm\n+   #54 = Utf8               Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #55 = Utf8               hashSize\n+   #56 = Utf8               ivData\n+   #57 = Utf8               [B\n+   #58 = Utf8               erdData\n+   #59 = Utf8               recipientKeyHash\n+   #60 = Utf8               keyBlob\n+   #61 = Utf8               vData\n+   #62 = Utf8               vCRC32\n+   #63 = Utf8               <init>\n+   #64 = Utf8               ()V\n+   #65 = Utf8               Code\n+   #66 = Utf8               LineNumberTable\n+   #67 = Utf8               LocalVariableTable\n+   #68 = Utf8               this\n+   #69 = Utf8               Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+   #70 = Utf8               getRecordCount\n+   #71 = Utf8               ()J\n+   #72 = Utf8               getHashAlgorithm\n+   #73 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+   #74 = Utf8               getEncryptionAlgorithm\n+   #75 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+   #76 = Utf8               parseCentralDirectoryFormat\n+   #77 = Utf8               ([BII)V\n+   #78 = Utf8               data\n+   #79 = Utf8               offset\n+   #80 = Utf8               length\n+   #81 = Utf8               StackMapTable\n+   #82 = Utf8               Exceptions\n+   #83 = Utf8               parseFileFormat\n+   #84 = Utf8               vSize\n+   #85 = Utf8               resize\n+   #86 = Utf8               ivSize\n+   #87 = Utf8               erdSize\n+   #88 = Utf8               parseFromLocalFileData\n+   #89 = Utf8               parseFromCentralDirectoryData\n+   #90 = Utf8               assertDynamicLengthFits\n+   #91 = Utf8               (Ljava/lang/String;III)V\n+   #92 = Utf8               what\n+   #93 = Utf8               Ljava/lang/String;\n+   #94 = Utf8               dynamicLength\n+   #95 = Utf8               prefixLength\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               X0017_StrongEncryptionHeader.java\n+   #98 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #99 = NameAndType        #63:#143      // \"<init>\":(I)V\n+  #100 = NameAndType        #63:#144      // \"<init>\":(Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #101 = NameAndType        #49:#50       // rcount:J\n+  #102 = NameAndType        #51:#54       // hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #103 = NameAndType        #42:#46       // algId:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #104 = NameAndType        #145:#146     // assertMinimalLength:(II)V\n+  #105 = NameAndType        #147:#148     // getValue:([BI)I\n+  #106 = NameAndType        #40:#41       // format:I\n+  #107 = NameAndType        #149:#150     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #108 = NameAndType        #47:#41       // bitlen:I\n+  #109 = NameAndType        #48:#41       // flags:I\n+  #110 = Class              #151          // org/apache/commons/compress/archivers/zip/ZipLong\n+  #111 = NameAndType        #147:#152     // getValue:([BI)J\n+  #112 = NameAndType        #149:#153     // getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #113 = NameAndType        #55:#41       // hashSize:I\n+  #114 = NameAndType        #90:#91       // assertDynamicLengthFits:(Ljava/lang/String;III)V\n+  #115 = Class              #154          // java/util/Arrays\n+  #116 = NameAndType        #155:#156     // copyOfRange:([BII)[B\n+  #117 = NameAndType        #56:#57       // ivData:[B\n+  #118 = NameAndType        #58:#57       // erdData:[B\n+  #119 = Utf8               java/util/zip/ZipException\n+  #120 = Utf8               BootstrapMethods\n+  #121 = MethodHandle       6:#157        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #122 = String             #158          // Invalid X0017_StrongEncryptionHeader: vSize \\u0001 is too small to hold CRC\n+  #123 = NameAndType        #159:#160     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #124 = NameAndType        #63:#161      // \"<init>\":(Ljava/lang/String;)V\n+  #125 = NameAndType        #61:#57       // vData:[B\n+  #126 = NameAndType        #62:#57       // vCRC32:[B\n+  #127 = String             #162          // Invalid X0017_StrongEncryptionHeader: resize \\u0001 is too small to hold hashSize\\u0001\n+  #128 = NameAndType        #159:#163     // makeConcatWithConstants:(II)Ljava/lang/String;\n+  #129 = NameAndType        #59:#57       // recipientKeyHash:[B\n+  #130 = NameAndType        #60:#57       // keyBlob:[B\n+  #131 = Class              #164          // java/lang/System\n+  #132 = NameAndType        #165:#166     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #133 = NameAndType        #88:#77       // parseFromLocalFileData:([BII)V\n+  #134 = NameAndType        #83:#77       // parseFileFormat:([BII)V\n+  #135 = NameAndType        #89:#77       // parseFromCentralDirectoryData:([BII)V\n+  #136 = NameAndType        #76:#77       // parseCentralDirectoryFormat:([BII)V\n+  #137 = String             #167          // Invalid X0017_StrongEncryptionHeader: \\u0001 \\u0001 doesn\\'t fit into \\u0001 bytes of data at position \\u0001\n+  #138 = NameAndType        #159:#168     // makeConcatWithConstants:(Ljava/lang/String;III)Ljava/lang/String;\n+  #139 = Utf8               org/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader\n+  #140 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  #141 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm\n+  #142 = Utf8               org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm\n+  #143 = Utf8               (I)V\n+  #144 = Utf8               (Lorg/apache/commons/compress/archivers/zip/ZipShort;)V\n+  #145 = Utf8               assertMinimalLength\n+  #146 = Utf8               (II)V\n+  #147 = Utf8               getValue\n+  #148 = Utf8               ([BI)I\n+  #149 = Utf8               getAlgorithmByCode\n+  #150 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n+  #151 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #152 = Utf8               ([BI)J\n+  #153 = Utf8               (I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+  #154 = Utf8               java/util/Arrays\n+  #155 = Utf8               copyOfRange\n+  #156 = Utf8               ([BII)[B\n+  #157 = Methodref          #169.#170     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #158 = Utf8               Invalid X0017_StrongEncryptionHeader: vSize \\u0001 is too small to hold CRC\n+  #159 = Utf8               makeConcatWithConstants\n+  #160 = Utf8               (I)Ljava/lang/String;\n+  #161 = Utf8               (Ljava/lang/String;)V\n+  #162 = Utf8               Invalid X0017_StrongEncryptionHeader: resize \\u0001 is too small to hold hashSize\\u0001\n+  #163 = Utf8               (II)Ljava/lang/String;\n+  #164 = Utf8               java/lang/System\n+  #165 = Utf8               arraycopy\n+  #166 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #167 = Utf8               Invalid X0017_StrongEncryptionHeader: \\u0001 \\u0001 doesn\\'t fit into \\u0001 bytes of data at position \\u0001\n+  #168 = Utf8               (Ljava/lang/String;III)Ljava/lang/String;\n+  #169 = Class              #171          // java/lang/invoke/StringConcatFactory\n+  #170 = NameAndType        #159:#174     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #171 = Utf8               java/lang/invoke/StringConcatFactory\n+  #172 = Class              #176          // java/lang/invoke/MethodHandles$Lookup\n+  #173 = Utf8               Lookup\n+  #174 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #175 = Class              #177          // java/lang/invoke/MethodHandles\n+  #176 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #177 = Utf8               java/lang/invoke/MethodHandles\n {\n   private int format;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.archivers.zip.PKWareExtraHeader$EncryptionAlgorithm algId;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm;\n@@ -523,15 +520,15 @@\n        199: iadd\n        200: invokestatic  #13                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n        203: putfield      #4                  // Field rcount:J\n        206: aload_0\n        207: getfield      #4                  // Field rcount:J\n        210: lconst_0\n        211: lcmp\n-       212: ifne          389\n+       212: ifne          371\n        215: aload_0\n        216: iload         4\n        218: bipush        20\n        220: iadd\n        221: iload         5\n        223: iadd\n        224: iconst_2\n@@ -556,305 +553,280 @@\n        255: iadd\n        256: iload         5\n        258: iadd\n        259: iload_3\n        260: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n        263: iload         6\n        265: iconst_4\n-       266: if_icmpge     302\n+       266: if_icmpge     284\n        269: new           #23                 // class java/util/zip/ZipException\n        272: dup\n-       273: new           #24                 // class java/lang/StringBuilder\n-       276: dup\n-       277: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       280: ldc           #26                 // String Invalid X0017_StrongEncryptionHeader: vSize\n-       282: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       285: iload         6\n-       287: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       290: ldc           #29                 // String  is too small to hold CRC\n-       292: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       295: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       298: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       301: athrow\n+       273: iload         6\n+       275: invokedynamic #24,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+       280: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       283: athrow\n+       284: aload_0\n+       285: iload_2\n+       286: iload         4\n+       288: iadd\n+       289: bipush        22\n+       291: iadd\n+       292: iload         5\n+       294: iadd\n+       295: iload         6\n+       297: iconst_4\n+       298: isub\n+       299: invokevirtual #7                  // Method assertMinimalLength:(II)V\n        302: aload_0\n-       303: iload_2\n-       304: iload         4\n-       306: iadd\n-       307: bipush        22\n-       309: iadd\n-       310: iload         5\n-       312: iadd\n-       313: iload         6\n-       315: iconst_4\n-       316: isub\n-       317: invokevirtual #7                  // Method assertMinimalLength:(II)V\n-       320: aload_0\n-       321: aload_1\n-       322: iload_2\n-       323: iload         4\n-       325: iadd\n-       326: bipush        22\n+       303: aload_1\n+       304: iload_2\n+       305: iload         4\n+       307: iadd\n+       308: bipush        22\n+       310: iadd\n+       311: iload         5\n+       313: iadd\n+       314: iload         6\n+       316: iconst_4\n+       317: isub\n+       318: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+       321: putfield      #26                 // Field vData:[B\n+       324: aload_0\n+       325: iload_2\n+       326: iload         4\n        328: iadd\n-       329: iload         5\n+       329: bipush        22\n        331: iadd\n-       332: iload         6\n-       334: iconst_4\n-       335: isub\n-       336: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-       339: putfield      #32                 // Field vData:[B\n-       342: aload_0\n-       343: iload_2\n-       344: iload         4\n-       346: iadd\n-       347: bipush        22\n+       332: iload         5\n+       334: iadd\n+       335: iload         6\n+       337: iadd\n+       338: iconst_4\n+       339: isub\n+       340: iconst_4\n+       341: invokevirtual #7                  // Method assertMinimalLength:(II)V\n+       344: aload_0\n+       345: aload_1\n+       346: iload_2\n+       347: iload         4\n        349: iadd\n-       350: iload         5\n+       350: bipush        22\n        352: iadd\n-       353: iload         6\n+       353: iload         5\n        355: iadd\n-       356: iconst_4\n-       357: isub\n-       358: iconst_4\n-       359: invokevirtual #7                  // Method assertMinimalLength:(II)V\n-       362: aload_0\n-       363: aload_1\n-       364: iload_2\n-       365: iload         4\n-       367: iadd\n-       368: bipush        22\n-       370: iadd\n-       371: iload         5\n-       373: iadd\n-       374: iload         6\n+       356: iload         6\n+       358: iadd\n+       359: iconst_4\n+       360: isub\n+       361: iconst_4\n+       362: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+       365: putfield      #27                 // Field vCRC32:[B\n+       368: goto          713\n+       371: aload_0\n+       372: iload         4\n+       374: bipush        20\n        376: iadd\n-       377: iconst_4\n-       378: isub\n-       379: iconst_4\n-       380: invokestatic  #18                 // Method java/util/Arrays.copyOfRange:([BII)[B\n-       383: putfield      #33                 // Field vCRC32:[B\n-       386: goto          770\n-       389: aload_0\n+       377: iload         5\n+       379: iadd\n+       380: bipush        6\n+       382: iadd\n+       383: iload_3\n+       384: invokevirtual #7                  // Method assertMinimalLength:(II)V\n+       387: aload_0\n+       388: aload_1\n+       389: iload_2\n        390: iload         4\n-       392: bipush        20\n-       394: iadd\n-       395: iload         5\n-       397: iadd\n-       398: bipush        6\n-       400: iadd\n-       401: iload_3\n-       402: invokevirtual #7                  // Method assertMinimalLength:(II)V\n-       405: aload_0\n-       406: aload_1\n-       407: iload_2\n-       408: iload         4\n-       410: iadd\n-       411: bipush        20\n+       392: iadd\n+       393: bipush        20\n+       395: iadd\n+       396: iload         5\n+       398: iadd\n+       399: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       402: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+       405: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n+       408: aload_0\n+       409: aload_1\n+       410: iload_2\n+       411: iload         4\n        413: iadd\n-       414: iload         5\n+       414: bipush        22\n        416: iadd\n-       417: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       420: invokestatic  #14                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm.getAlgorithmByCode:(I)Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-       423: putfield      #5                  // Field hashAlg:Lorg/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm;\n-       426: aload_0\n-       427: aload_1\n-       428: iload_2\n-       429: iload         4\n-       431: iadd\n-       432: bipush        22\n-       434: iadd\n-       435: iload         5\n-       437: iadd\n-       438: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       441: putfield      #15                 // Field hashSize:I\n-       444: aload_1\n-       445: iload_2\n-       446: iload         4\n-       448: iadd\n-       449: bipush        24\n-       451: iadd\n-       452: iload         5\n-       454: iadd\n-       455: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       458: istore        6\n-       460: iload         6\n-       462: aload_0\n-       463: getfield      #15                 // Field hashSize:I\n-       466: if_icmpge     509\n-       469: new           #23                 // class java/util/zip/ZipException\n-       472: dup\n-       473: new           #24                 // class java/lang/StringBuilder\n-       476: dup\n-       477: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       480: ldc           #34                 // String Invalid X0017_StrongEncryptionHeader: resize\n-       482: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       485: iload         6\n-       487: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       490: ldc           #35                 // String  is too small to hold hashSize\n-       492: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       495: aload_0\n-       496: getfield      #15                 // Field hashSize:I\n-       499: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       502: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       505: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       508: athrow\n-       509: aload_0\n-       510: aload_0\n-       511: getfield      #15                 // Field hashSize:I\n-       514: newarray       byte\n-       516: putfield      #36                 // Field recipientKeyHash:[B\n-       519: aload_0\n-       520: iload         6\n-       522: aload_0\n-       523: getfield      #15                 // Field hashSize:I\n-       526: isub\n-       527: newarray       byte\n-       529: putfield      #37                 // Field keyBlob:[B\n-       532: aload_0\n-       533: ldc           #38                 // String resize\n-       535: iload         6\n-       537: iload         4\n-       539: bipush        24\n-       541: iadd\n-       542: iload         5\n-       544: iadd\n-       545: iload_3\n-       546: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n-       549: aload_1\n-       550: iload_2\n-       551: iload         4\n-       553: iadd\n-       554: bipush        24\n-       556: iadd\n-       557: iload         5\n-       559: iadd\n-       560: aload_0\n-       561: getfield      #36                 // Field recipientKeyHash:[B\n-       564: iconst_0\n-       565: aload_0\n-       566: getfield      #15                 // Field hashSize:I\n-       569: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       572: aload_1\n-       573: iload_2\n-       574: iload         4\n-       576: iadd\n-       577: bipush        24\n-       579: iadd\n-       580: iload         5\n-       582: iadd\n-       583: aload_0\n-       584: getfield      #15                 // Field hashSize:I\n-       587: iadd\n-       588: aload_0\n-       589: getfield      #37                 // Field keyBlob:[B\n-       592: iconst_0\n+       417: iload         5\n+       419: iadd\n+       420: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       423: putfield      #15                 // Field hashSize:I\n+       426: aload_1\n+       427: iload_2\n+       428: iload         4\n+       430: iadd\n+       431: bipush        24\n+       433: iadd\n+       434: iload         5\n+       436: iadd\n+       437: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       440: istore        6\n+       442: iload         6\n+       444: aload_0\n+       445: getfield      #15                 // Field hashSize:I\n+       448: if_icmpge     470\n+       451: new           #23                 // class java/util/zip/ZipException\n+       454: dup\n+       455: iload         6\n+       457: aload_0\n+       458: getfield      #15                 // Field hashSize:I\n+       461: invokedynamic #28,  0             // InvokeDynamic #1:makeConcatWithConstants:(II)Ljava/lang/String;\n+       466: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       469: athrow\n+       470: aload_0\n+       471: aload_0\n+       472: getfield      #15                 // Field hashSize:I\n+       475: newarray       byte\n+       477: putfield      #29                 // Field recipientKeyHash:[B\n+       480: aload_0\n+       481: iload         6\n+       483: aload_0\n+       484: getfield      #15                 // Field hashSize:I\n+       487: isub\n+       488: newarray       byte\n+       490: putfield      #30                 // Field keyBlob:[B\n+       493: aload_0\n+       494: ldc           #31                 // String resize\n+       496: iload         6\n+       498: iload         4\n+       500: bipush        24\n+       502: iadd\n+       503: iload         5\n+       505: iadd\n+       506: iload_3\n+       507: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n+       510: aload_1\n+       511: iload_2\n+       512: iload         4\n+       514: iadd\n+       515: bipush        24\n+       517: iadd\n+       518: iload         5\n+       520: iadd\n+       521: aload_0\n+       522: getfield      #29                 // Field recipientKeyHash:[B\n+       525: iconst_0\n+       526: aload_0\n+       527: getfield      #15                 // Field hashSize:I\n+       530: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       533: aload_1\n+       534: iload_2\n+       535: iload         4\n+       537: iadd\n+       538: bipush        24\n+       540: iadd\n+       541: iload         5\n+       543: iadd\n+       544: aload_0\n+       545: getfield      #15                 // Field hashSize:I\n+       548: iadd\n+       549: aload_0\n+       550: getfield      #30                 // Field keyBlob:[B\n+       553: iconst_0\n+       554: iload         6\n+       556: aload_0\n+       557: getfield      #15                 // Field hashSize:I\n+       560: isub\n+       561: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       564: aload_0\n+       565: iload         4\n+       567: bipush        26\n+       569: iadd\n+       570: iload         5\n+       572: iadd\n+       573: iload         6\n+       575: iadd\n+       576: iconst_2\n+       577: iadd\n+       578: iload_3\n+       579: invokevirtual #7                  // Method assertMinimalLength:(II)V\n+       582: aload_1\n+       583: iload_2\n+       584: iload         4\n+       586: iadd\n+       587: bipush        26\n+       589: iadd\n+       590: iload         5\n+       592: iadd\n        593: iload         6\n-       595: aload_0\n-       596: getfield      #15                 // Field hashSize:I\n-       599: isub\n-       600: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       603: aload_0\n-       604: iload         4\n-       606: bipush        26\n-       608: iadd\n-       609: iload         5\n-       611: iadd\n-       612: iload         6\n-       614: iadd\n-       615: iconst_2\n-       616: iadd\n-       617: iload_3\n-       618: invokevirtual #7                  // Method assertMinimalLength:(II)V\n-       621: aload_1\n-       622: iload_2\n-       623: iload         4\n-       625: iadd\n-       626: bipush        26\n-       628: iadd\n-       629: iload         5\n+       595: iadd\n+       596: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       599: istore        7\n+       601: iload         7\n+       603: iconst_4\n+       604: if_icmpge     622\n+       607: new           #23                 // class java/util/zip/ZipException\n+       610: dup\n+       611: iload         7\n+       613: invokedynamic #24,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+       618: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       621: athrow\n+       622: aload_0\n+       623: ldc           #22                 // String vSize\n+       625: iload         7\n+       627: iload         4\n+       629: bipush        22\n        631: iadd\n-       632: iload         6\n+       632: iload         5\n        634: iadd\n-       635: invokestatic  #8                  // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       638: istore        7\n-       640: iload         7\n-       642: iconst_4\n-       643: if_icmpge     679\n-       646: new           #23                 // class java/util/zip/ZipException\n-       649: dup\n-       650: new           #24                 // class java/lang/StringBuilder\n-       653: dup\n-       654: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       657: ldc           #26                 // String Invalid X0017_StrongEncryptionHeader: vSize\n-       659: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       662: iload         7\n-       664: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       667: ldc           #29                 // String  is too small to hold CRC\n-       669: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       672: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       675: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       678: athrow\n-       679: aload_0\n-       680: ldc           #22                 // String vSize\n-       682: iload         7\n-       684: iload         4\n-       686: bipush        22\n-       688: iadd\n-       689: iload         5\n-       691: iadd\n-       692: iload         6\n-       694: iadd\n-       695: iload_3\n-       696: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n-       699: aload_0\n-       700: iload         7\n+       635: iload         6\n+       637: iadd\n+       638: iload_3\n+       639: invokespecial #17                 // Method assertDynamicLengthFits:(Ljava/lang/String;III)V\n+       642: aload_0\n+       643: iload         7\n+       645: iconst_4\n+       646: isub\n+       647: newarray       byte\n+       649: putfield      #26                 // Field vData:[B\n+       652: aload_0\n+       653: iconst_4\n+       654: newarray       byte\n+       656: putfield      #27                 // Field vCRC32:[B\n+       659: aload_1\n+       660: iload_2\n+       661: iload         4\n+       663: iadd\n+       664: bipush        22\n+       666: iadd\n+       667: iload         5\n+       669: iadd\n+       670: iload         6\n+       672: iadd\n+       673: aload_0\n+       674: getfield      #26                 // Field vData:[B\n+       677: iconst_0\n+       678: iload         7\n+       680: iconst_4\n+       681: isub\n+       682: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       685: aload_1\n+       686: iload_2\n+       687: iload         4\n+       689: iadd\n+       690: bipush        22\n+       692: iadd\n+       693: iload         5\n+       695: iadd\n+       696: iload         6\n+       698: iadd\n+       699: iload         7\n+       701: iadd\n        702: iconst_4\n        703: isub\n-       704: newarray       byte\n-       706: putfield      #32                 // Field vData:[B\n-       709: aload_0\n-       710: iconst_4\n-       711: newarray       byte\n-       713: putfield      #33                 // Field vCRC32:[B\n-       716: aload_1\n-       717: iload_2\n-       718: iload         4\n-       720: iadd\n-       721: bipush        22\n-       723: iadd\n-       724: iload         5\n-       726: iadd\n-       727: iload         6\n-       729: iadd\n-       730: aload_0\n-       731: getfield      #32                 // Field vData:[B\n-       734: iconst_0\n-       735: iload         7\n-       737: iconst_4\n-       738: isub\n-       739: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       742: aload_1\n-       743: iload_2\n-       744: iload         4\n-       746: iadd\n-       747: bipush        22\n-       749: iadd\n-       750: iload         5\n-       752: iadd\n-       753: iload         6\n-       755: iadd\n-       756: iload         7\n-       758: iadd\n-       759: iconst_4\n-       760: isub\n-       761: aload_0\n-       762: getfield      #33                 // Field vCRC32:[B\n-       765: iconst_0\n-       766: iconst_4\n-       767: invokestatic  #39                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       770: return\n+       704: aload_0\n+       705: getfield      #27                 // Field vCRC32:[B\n+       708: iconst_0\n+       709: iconst_4\n+       710: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       713: return\n       LineNumberTable:\n         line 335: 0\n         line 336: 6\n         line 337: 13\n         line 338: 23\n         line 340: 32\n         line 342: 45\n@@ -870,62 +842,62 @@\n         line 355: 188\n         line 356: 206\n         line 357: 215\n         line 358: 230\n         line 359: 246\n         line 360: 263\n         line 361: 269\n-        line 364: 302\n-        line 365: 320\n-        line 366: 342\n-        line 367: 362\n-        line 368: 386\n-        line 369: 389\n-        line 370: 405\n-        line 371: 426\n-        line 372: 444\n-        line 374: 460\n-        line 375: 469\n-        line 378: 509\n-        line 379: 519\n-        line 381: 532\n-        line 383: 549\n-        line 384: 572\n-        line 386: 603\n-        line 387: 621\n-        line 388: 640\n-        line 389: 646\n-        line 393: 679\n-        line 395: 699\n-        line 396: 709\n-        line 397: 716\n-        line 398: 742\n-        line 402: 770\n+        line 364: 284\n+        line 365: 302\n+        line 366: 324\n+        line 367: 344\n+        line 368: 368\n+        line 369: 371\n+        line 370: 387\n+        line 371: 408\n+        line 372: 426\n+        line 374: 442\n+        line 375: 451\n+        line 378: 470\n+        line 379: 480\n+        line 381: 493\n+        line 383: 510\n+        line 384: 533\n+        line 386: 564\n+        line 387: 582\n+        line 388: 601\n+        line 389: 607\n+        line 393: 622\n+        line 395: 642\n+        line 396: 652\n+        line 397: 659\n+        line 398: 685\n+        line 402: 713\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-          246     140     6 vSize   I\n-          460     310     6 resize   I\n-          640     130     7 vSize   I\n-            0     771     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-            0     771     1  data   [B\n-            0     771     2 offset   I\n-            0     771     3 length   I\n-           13     758     4 ivSize   I\n-          131     640     5 erdSize   I\n+          246     122     6 vSize   I\n+          442     271     6 resize   I\n+          601     112     7 vSize   I\n+            0     714     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+            0     714     1  data   [B\n+            0     714     2 offset   I\n+            0     714     3 length   I\n+           13     701     4 ivSize   I\n+          131     583     5 erdSize   I\n       StackMapTable: number_of_entries = 5\n         frame_type = 254 /* append */\n-          offset_delta = 302\n+          offset_delta = 284\n           locals = [ int, int, int ]\n         frame_type = 250 /* chop */\n           offset_delta = 86\n         frame_type = 252 /* append */\n-          offset_delta = 119\n+          offset_delta = 98\n           locals = [ int ]\n         frame_type = 252 /* append */\n-          offset_delta = 169\n+          offset_delta = 151\n           locals = [ int ]\n         frame_type = 249 /* chop */\n           offset_delta = 90\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;\n@@ -933,20 +905,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #40                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n+         4: invokespecial #33                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromLocalFileData:([BII)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #41                 // Method parseFileFormat:([BII)V\n+        11: invokevirtual #34                 // Method parseFileFormat:([BII)V\n         14: return\n       LineNumberTable:\n         line 407: 0\n         line 408: 7\n         line 409: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -962,20 +934,20 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokespecial #42                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n+         4: invokespecial #35                 // Method org/apache/commons/compress/archivers/zip/PKWareExtraHeader.parseFromCentralDirectoryData:([BII)V\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokevirtual #43                 // Method parseCentralDirectoryFormat:([BII)V\n+        11: invokevirtual #36                 // Method parseCentralDirectoryFormat:([BII)V\n         14: return\n       LineNumberTable:\n         line 414: 0\n         line 415: 7\n         line 416: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -986,58 +958,54 @@\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   private void assertDynamicLengthFits(java.lang.String, int, int, int) throws java.util.zip.ZipException;\n     descriptor: (Ljava/lang/String;III)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n-      stack=4, locals=5, args_size=5\n+      stack=6, locals=5, args_size=5\n          0: iload_3\n          1: iload_2\n          2: iadd\n          3: iload         4\n-         5: if_icmple     63\n+         5: if_icmple     26\n          8: new           #23                 // class java/util/zip/ZipException\n         11: dup\n-        12: new           #24                 // class java/lang/StringBuilder\n-        15: dup\n-        16: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #44                 // String Invalid X0017_StrongEncryptionHeader:\n-        21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: aload_1\n-        25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        28: ldc           #45                 // String\n-        30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: iload_2\n-        34: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: ldc           #46                 // String  doesn\\'t fit into\n-        39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: iload         4\n-        44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: ldc           #47                 // String  bytes of data at position\n-        49: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: iload_3\n-        53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        56: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        59: invokespecial #31                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        62: athrow\n-        63: return\n+        12: aload_1\n+        13: iload_2\n+        14: iload         4\n+        16: iload_3\n+        17: invokedynamic #37,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;III)Ljava/lang/String;\n+        22: invokespecial #25                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        25: athrow\n+        26: return\n       LineNumberTable:\n         line 420: 0\n         line 421: 8\n-        line 425: 63\n+        line 425: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      64     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n-            0      64     1  what   Ljava/lang/String;\n-            0      64     2 dynamicLength   I\n-            0      64     3 prefixLength   I\n-            0      64     4 length   I\n+            0      27     0  this   Lorg/apache/commons/compress/archivers/zip/X0017_StrongEncryptionHeader;\n+            0      27     1  what   Ljava/lang/String;\n+            0      27     2 dynamicLength   I\n+            0      27     3 prefixLength   I\n+            0      27     4 length   I\n       StackMapTable: number_of_entries = 1\n-        frame_type = 63 /* same */\n+        frame_type = 26 /* same */\n     Exceptions:\n       throws java.util.zip.ZipException\n }\n SourceFile: \"X0017_StrongEncryptionHeader.java\"\n InnerClasses:\n-  public static final #54= #53 of #49;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n-  public static final #63= #62 of #49;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #44= #43 of #39;    // EncryptionAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$EncryptionAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #53= #52 of #39;    // HashAlgorithm=class org/apache/commons/compress/archivers/zip/PKWareExtraHeader$HashAlgorithm of class org/apache/commons/compress/archivers/zip/PKWareExtraHeader\n+  public static final #173= #172 of #175; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #121 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #122 Invalid X0017_StrongEncryptionHeader: vSize \\u0001 is too small to hold CRC\n+  1: #121 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #127 Invalid X0017_StrongEncryptionHeader: resize \\u0001 is too small to hold hashSize\\u0001\n+  2: #121 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #137 Invalid X0017_StrongEncryptionHeader: \\u0001 \\u0001 doesn\\'t fit into \\u0001 bytes of data at position \\u0001\n"}]}
