{"diffoscope-json-version": 1, "source1": "first/SnappyCompressorOutputStream.class", "source2": "second/SnappyCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,277 +1,271 @@\n-  SHA-256 checksum 0a62fbc9a647467dc93d6d4803fdb1ad440a38af71ffef1cde652a283621c692\n+  SHA-256 checksum 659810b6d3efcf97c44223c36cd496ba163defd00b63d8e71480babdc1b2a4f5\n   Compiled from \"SnappyCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #31                         // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-  super_class: #56                        // org/apache/commons/compress/compressors/CompressorOutputStream\n+  this_class: #1                          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 22, methods: 24, attributes: 2\n Constant pool:\n-    #1 = Methodref          #31.#179      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-    #2 = Methodref          #31.#180      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-    #3 = Class              #181          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-    #4 = Integer            32768\n-    #5 = Methodref          #31.#182      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JI)V\n-    #6 = Methodref          #31.#183      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-    #7 = Methodref          #168.#184     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-    #8 = Methodref          #31.#185      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-    #9 = Methodref          #56.#186      // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #10 = Fieldref           #31.#187      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.oneByte:[B\n-   #11 = Fieldref           #31.#188      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finished:Z\n-   #12 = Fieldref           #31.#189      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.os:Ljava/io/OutputStream;\n-   #13 = Class              #191          // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-   #14 = Methodref          #13.#193      // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n-   #15 = Fieldref           #31.#194      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #16 = Class              #195          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-   #17 = Class              #196          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n-   #18 = Methodref          #17.#197      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n-   #19 = Methodref          #16.#198      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-   #20 = Fieldref           #31.#199      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-   #21 = Methodref          #31.#200      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeUncompressedSize:(J)V\n-   #22 = Methodref          #31.#201      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.write:([B)V\n-   #23 = Methodref          #16.#202      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n-   #24 = Methodref          #31.#203      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finish:()V\n-   #25 = Methodref          #204.#205     // java/io/OutputStream.close:()V\n-   #26 = Methodref          #16.#203      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n-   #27 = Long               127l\n-   #29 = Methodref          #204.#206     // java/io/OutputStream.write:(I)V\n-   #30 = Methodref          #135.#207     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n-   #31 = Class              #208          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-   #32 = Methodref          #31.#209      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #33 = Methodref          #31.#210      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #34 = Integer            65536\n-   #35 = Methodref          #31.#211      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #36 = Integer            16777216\n-   #37 = Methodref          #31.#212      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #38 = Methodref          #31.#213      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #39 = Methodref          #31.#214      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-   #40 = Methodref          #31.#215      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLittleEndian:(II)V\n-   #41 = Methodref          #135.#216     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n-   #42 = Methodref          #135.#217     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n-   #43 = Methodref          #204.#218     // java/io/OutputStream.write:([BII)V\n-   #44 = Methodref          #190.#219     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-   #45 = Methodref          #155.#207     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n-   #46 = Methodref          #155.#217     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n-   #47 = Methodref          #31.#220      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithOneOffsetByte:(II)V\n-   #48 = Methodref          #31.#221      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithTwoOffsetBytes:(II)V\n-   #49 = Methodref          #31.#222      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithFourOffsetBytes:(II)V\n-   #50 = Methodref          #31.#223      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithLittleEndianOffset:(IIII)V\n-   #51 = Methodref          #224.#225     // org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #52 = Methodref          #168.#226     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #53 = Methodref          #168.#227     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #54 = Methodref          #168.#228     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #55 = Methodref          #168.#229     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #56 = Class              #230          // org/apache/commons/compress/compressors/CompressorOutputStream\n-   #57 = Class              #231          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$2\n-   #58 = Utf8               InnerClasses\n-   #59 = Utf8               compressor\n-   #60 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-   #61 = Utf8               os\n-   #62 = Utf8               Ljava/io/OutputStream;\n-   #63 = Utf8               consumer\n-   #64 = Class              #232          // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-   #65 = Utf8               ByteConsumer\n-   #66 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #67 = Utf8               oneByte\n-   #68 = Utf8               [B\n-   #69 = Utf8               finished\n-   #70 = Utf8               Z\n-   #71 = Utf8               MAX_LITERAL_SIZE_WITHOUT_SIZE_BYTES\n-   #72 = Utf8               I\n-   #73 = Utf8               ConstantValue\n-   #74 = Integer            60\n-   #75 = Utf8               MAX_LITERAL_SIZE_WITH_ONE_SIZE_BYTE\n-   #76 = Integer            256\n-   #77 = Utf8               MAX_LITERAL_SIZE_WITH_TWO_SIZE_BYTES\n-   #78 = Utf8               MAX_LITERAL_SIZE_WITH_THREE_SIZE_BYTES\n-   #79 = Utf8               ONE_SIZE_BYTE_MARKER\n-   #80 = Integer            240\n-   #81 = Utf8               TWO_SIZE_BYTE_MARKER\n-   #82 = Integer            244\n-   #83 = Utf8               THREE_SIZE_BYTE_MARKER\n-   #84 = Integer            248\n-   #85 = Utf8               FOUR_SIZE_BYTE_MARKER\n-   #86 = Integer            252\n-   #87 = Utf8               MIN_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n-   #88 = Integer            4\n-   #89 = Utf8               MAX_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n-   #90 = Integer            11\n-   #91 = Utf8               MAX_OFFSET_WITH_ONE_OFFSET_BYTE\n-   #92 = Integer            1024\n-   #93 = Utf8               MAX_OFFSET_WITH_TWO_OFFSET_BYTES\n-   #94 = Utf8               ONE_BYTE_COPY_TAG\n-   #95 = Integer            1\n-   #96 = Utf8               TWO_BYTE_COPY_TAG\n-   #97 = Integer            2\n-   #98 = Utf8               FOUR_BYTE_COPY_TAG\n-   #99 = Integer            3\n-  #100 = Utf8               MIN_MATCH_LENGTH\n-  #101 = Utf8               MAX_MATCH_LENGTH\n-  #102 = Integer            64\n-  #103 = Utf8               <init>\n-  #104 = Utf8               (Ljava/io/OutputStream;J)V\n-  #105 = Utf8               Code\n-  #106 = Utf8               LineNumberTable\n-  #107 = Utf8               LocalVariableTable\n-  #108 = Utf8               this\n-  #109 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n-  #110 = Utf8               uncompressedSize\n-  #111 = Utf8               J\n-  #112 = Utf8               Exceptions\n-  #113 = Class              #233          // java/io/IOException\n-  #114 = Utf8               (Ljava/io/OutputStream;JI)V\n-  #115 = Utf8               blockSize\n-  #116 = Utf8               (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-  #117 = Utf8               params\n-  #118 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #119 = Utf8               write\n-  #120 = Utf8               (I)V\n-  #121 = Utf8               b\n-  #122 = Utf8               ([BII)V\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+    #3 = Class              #4            // org/apache/commons/compress/compressors/CompressorOutputStream\n+    #4 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+    #5 = Utf8               compressor\n+    #6 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+    #7 = Utf8               os\n+    #8 = Utf8               Ljava/io/OutputStream;\n+    #9 = Utf8               consumer\n+   #10 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #11 = Utf8               oneByte\n+   #12 = Utf8               [B\n+   #13 = Utf8               finished\n+   #14 = Utf8               Z\n+   #15 = Utf8               MAX_LITERAL_SIZE_WITHOUT_SIZE_BYTES\n+   #16 = Utf8               I\n+   #17 = Utf8               ConstantValue\n+   #18 = Integer            60\n+   #19 = Utf8               MAX_LITERAL_SIZE_WITH_ONE_SIZE_BYTE\n+   #20 = Integer            256\n+   #21 = Utf8               MAX_LITERAL_SIZE_WITH_TWO_SIZE_BYTES\n+   #22 = Integer            65536\n+   #23 = Utf8               MAX_LITERAL_SIZE_WITH_THREE_SIZE_BYTES\n+   #24 = Integer            16777216\n+   #25 = Utf8               ONE_SIZE_BYTE_MARKER\n+   #26 = Integer            240\n+   #27 = Utf8               TWO_SIZE_BYTE_MARKER\n+   #28 = Integer            244\n+   #29 = Utf8               THREE_SIZE_BYTE_MARKER\n+   #30 = Integer            248\n+   #31 = Utf8               FOUR_SIZE_BYTE_MARKER\n+   #32 = Integer            252\n+   #33 = Utf8               MIN_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n+   #34 = Integer            4\n+   #35 = Utf8               MAX_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n+   #36 = Integer            11\n+   #37 = Utf8               MAX_OFFSET_WITH_ONE_OFFSET_BYTE\n+   #38 = Integer            1024\n+   #39 = Utf8               MAX_OFFSET_WITH_TWO_OFFSET_BYTES\n+   #40 = Integer            32768\n+   #41 = Utf8               ONE_BYTE_COPY_TAG\n+   #42 = Integer            1\n+   #43 = Utf8               TWO_BYTE_COPY_TAG\n+   #44 = Integer            2\n+   #45 = Utf8               FOUR_BYTE_COPY_TAG\n+   #46 = Integer            3\n+   #47 = Utf8               MIN_MATCH_LENGTH\n+   #48 = Utf8               MAX_MATCH_LENGTH\n+   #49 = Integer            64\n+   #50 = Utf8               <init>\n+   #51 = Utf8               (Ljava/io/OutputStream;J)V\n+   #52 = Utf8               Exceptions\n+   #53 = Class              #54           // java/io/IOException\n+   #54 = Utf8               java/io/IOException\n+   #55 = Utf8               Code\n+   #56 = Methodref          #1.#57        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JI)V\n+   #57 = NameAndType        #50:#58       // \"<init>\":(Ljava/io/OutputStream;JI)V\n+   #58 = Utf8               (Ljava/io/OutputStream;JI)V\n+   #59 = Utf8               LineNumberTable\n+   #60 = Utf8               LocalVariableTable\n+   #61 = Utf8               this\n+   #62 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n+   #63 = Utf8               uncompressedSize\n+   #64 = Utf8               J\n+   #65 = Methodref          #1.#66        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #66 = NameAndType        #67:#68       // createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #67 = Utf8               createParameterBuilder\n+   #68 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #69 = Methodref          #70.#72       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #70 = Class              #71           // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+   #71 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+   #72 = NameAndType        #73:#74       // build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #73 = Utf8               build\n+   #74 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #75 = Methodref          #1.#76        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #76 = NameAndType        #50:#77       // \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #77 = Utf8               (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #78 = Utf8               blockSize\n+   #79 = Methodref          #3.#80        // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+   #80 = NameAndType        #50:#81       // \"<init>\":()V\n+   #81 = Utf8               ()V\n+   #82 = Fieldref           #1.#83        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.oneByte:[B\n+   #83 = NameAndType        #11:#12       // oneByte:[B\n+   #84 = Fieldref           #1.#85        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finished:Z\n+   #85 = NameAndType        #13:#14       // finished:Z\n+   #86 = Fieldref           #1.#87        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.os:Ljava/io/OutputStream;\n+   #87 = NameAndType        #7:#8         // os:Ljava/io/OutputStream;\n+   #88 = Class              #89           // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+   #89 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+   #90 = Methodref          #88.#91       // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n+   #91 = NameAndType        #50:#92       // \"<init>\":(Ljava/io/OutputStream;)V\n+   #92 = Utf8               (Ljava/io/OutputStream;)V\n+   #93 = Fieldref           #1.#94        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #94 = NameAndType        #9:#10        // consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #95 = Class              #96           // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+   #96 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+   #97 = Class              #98           // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+   #98 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+   #99 = Methodref          #97.#100      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n+  #100 = NameAndType        #50:#101      // \"<init>\":(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n+  #101 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n+  #102 = Methodref          #95.#103      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+  #103 = NameAndType        #50:#104      // \"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+  #104 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+  #105 = Fieldref           #1.#106       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+  #106 = NameAndType        #5:#6         // compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+  #107 = Methodref          #1.#108       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeUncompressedSize:(J)V\n+  #108 = NameAndType        #109:#110     // writeUncompressedSize:(J)V\n+  #109 = Utf8               writeUncompressedSize\n+  #110 = Utf8               (J)V\n+  #111 = Utf8               params\n+  #112 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+  #113 = Utf8               write\n+  #114 = Utf8               (I)V\n+  #115 = Methodref          #1.#116       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.write:([B)V\n+  #116 = NameAndType        #113:#117     // write:([B)V\n+  #117 = Utf8               ([B)V\n+  #118 = Utf8               b\n+  #119 = Utf8               ([BII)V\n+  #120 = Methodref          #95.#121      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n+  #121 = NameAndType        #122:#119     // compress:([BII)V\n+  #122 = Utf8               compress\n   #123 = Utf8               data\n   #124 = Utf8               off\n   #125 = Utf8               len\n   #126 = Utf8               close\n-  #127 = Utf8               ()V\n-  #128 = Utf8               finish\n-  #129 = Utf8               StackMapTable\n-  #130 = Utf8               writeUncompressedSize\n-  #131 = Utf8               (J)V\n-  #132 = Utf8               currentByte\n-  #133 = Utf8               more\n-  #134 = Utf8               writeLiteralBlock\n-  #135 = Class              #234          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-  #136 = Utf8               LiteralBlock\n-  #137 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #138 = Utf8               block\n-  #139 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n-  #140 = Utf8               writeLiteralBlockNoSizeBytes\n-  #141 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #142 = Utf8               writeLiteralBlockOneSizeByte\n-  #143 = Utf8               writeLiteralBlockTwoSizeBytes\n-  #144 = Utf8               writeLiteralBlockThreeSizeBytes\n-  #145 = Utf8               writeLiteralBlockFourSizeBytes\n-  #146 = Utf8               writeLiteralBlockWithSize\n-  #147 = Utf8               (IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #148 = Utf8               tagByte\n-  #149 = Utf8               sizeBytes\n-  #150 = Utf8               writeLittleEndian\n-  #151 = Utf8               (II)V\n-  #152 = Utf8               numBytes\n-  #153 = Utf8               num\n-  #154 = Utf8               writeBackReference\n-  #155 = Class              #235          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-  #156 = Utf8               BackReference\n-  #157 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-  #158 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n-  #159 = Utf8               offset\n-  #160 = Utf8               writeBackReferenceWithOneOffsetByte\n-  #161 = Utf8               writeBackReferenceWithTwoOffsetBytes\n-  #162 = Utf8               writeBackReferenceWithFourOffsetBytes\n-  #163 = Utf8               writeBackReferenceWithLittleEndianOffset\n-  #164 = Utf8               (IIII)V\n-  #165 = Utf8               tag\n-  #166 = Utf8               offsetBytes\n-  #167 = Utf8               createParameterBuilder\n-  #168 = Class              #236          // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  #169 = Utf8               Builder\n-  #170 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #171 = Utf8               access$000\n-  #172 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #173 = Utf8               x0\n-  #174 = Utf8               x1\n-  #175 = Utf8               access$100\n-  #176 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-  #177 = Utf8               SourceFile\n-  #178 = Utf8               SnappyCompressorOutputStream.java\n-  #179 = NameAndType        #154:#157     // writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-  #180 = NameAndType        #134:#137     // writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #181 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #182 = NameAndType        #103:#114     // \"<init>\":(Ljava/io/OutputStream;JI)V\n-  #183 = NameAndType        #167:#170     // createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #184 = NameAndType        #237:#238     // build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #185 = NameAndType        #103:#116     // \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-  #186 = NameAndType        #103:#127     // \"<init>\":()V\n-  #187 = NameAndType        #67:#68       // oneByte:[B\n-  #188 = NameAndType        #69:#70       // finished:Z\n-  #189 = NameAndType        #61:#62       // os:Ljava/io/OutputStream;\n-  #190 = Class              #239          // org/apache/commons/compress/utils/ByteUtils\n-  #191 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-  #192 = Utf8               OutputStreamByteConsumer\n-  #193 = NameAndType        #103:#240     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #194 = NameAndType        #63:#66       // consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-  #195 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #196 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n-  #197 = NameAndType        #103:#241     // \"<init>\":(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n-  #198 = NameAndType        #103:#244     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-  #199 = NameAndType        #59:#60       // compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-  #200 = NameAndType        #130:#131     // writeUncompressedSize:(J)V\n-  #201 = NameAndType        #119:#245     // write:([B)V\n-  #202 = NameAndType        #246:#122     // compress:([BII)V\n-  #203 = NameAndType        #128:#127     // finish:()V\n-  #204 = Class              #247          // java/io/OutputStream\n-  #205 = NameAndType        #126:#127     // close:()V\n-  #206 = NameAndType        #119:#120     // write:(I)V\n-  #207 = NameAndType        #248:#249     // getLength:()I\n-  #208 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-  #209 = NameAndType        #140:#141     // writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #210 = NameAndType        #142:#141     // writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #211 = NameAndType        #143:#141     // writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #212 = NameAndType        #144:#141     // writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #213 = NameAndType        #145:#141     // writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #214 = NameAndType        #146:#147     // writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #215 = NameAndType        #150:#151     // writeLittleEndian:(II)V\n-  #216 = NameAndType        #250:#251     // getData:()[B\n-  #217 = NameAndType        #252:#249     // getOffset:()I\n-  #218 = NameAndType        #119:#122     // write:([BII)V\n-  #219 = NameAndType        #253:#254     // toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #220 = NameAndType        #160:#151     // writeBackReferenceWithOneOffsetByte:(II)V\n-  #221 = NameAndType        #161:#151     // writeBackReferenceWithTwoOffsetBytes:(II)V\n-  #222 = NameAndType        #162:#151     // writeBackReferenceWithFourOffsetBytes:(II)V\n-  #223 = NameAndType        #163:#164     // writeBackReferenceWithLittleEndianOffset:(IIII)V\n-  #224 = Class              #255          // org/apache/commons/compress/compressors/lz77support/Parameters\n-  #225 = NameAndType        #256:#170     // builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #226 = NameAndType        #257:#170     // withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #227 = NameAndType        #258:#170     // withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #228 = NameAndType        #259:#170     // withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #229 = NameAndType        #260:#170     // withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #230 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-  #231 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$2\n-  #232 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-  #233 = Utf8               java/io/IOException\n-  #234 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-  #235 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-  #236 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  #237 = Utf8               build\n-  #238 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #239 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #240 = Utf8               (Ljava/io/OutputStream;)V\n-  #241 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n-  #242 = Class              #261          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n-  #243 = Utf8               Callback\n-  #244 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-  #245 = Utf8               ([B)V\n-  #246 = Utf8               compress\n-  #247 = Utf8               java/io/OutputStream\n-  #248 = Utf8               getLength\n-  #249 = Utf8               ()I\n-  #250 = Utf8               getData\n-  #251 = Utf8               ()[B\n-  #252 = Utf8               getOffset\n-  #253 = Utf8               toLittleEndian\n-  #254 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #255 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n-  #256 = Utf8               builder\n-  #257 = Utf8               withMinBackReferenceLength\n-  #258 = Utf8               withMaxBackReferenceLength\n-  #259 = Utf8               withMaxOffset\n-  #260 = Utf8               withMaxLiteralLength\n-  #261 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #127 = Methodref          #1.#128       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finish:()V\n+  #128 = NameAndType        #129:#81      // finish:()V\n+  #129 = Utf8               finish\n+  #130 = Methodref          #131.#133     // java/io/OutputStream.close:()V\n+  #131 = Class              #132          // java/io/OutputStream\n+  #132 = Utf8               java/io/OutputStream\n+  #133 = NameAndType        #126:#81      // close:()V\n+  #134 = Methodref          #95.#128      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n+  #135 = Utf8               StackMapTable\n+  #136 = Long               127l\n+  #138 = Methodref          #131.#139     // java/io/OutputStream.write:(I)V\n+  #139 = NameAndType        #113:#114     // write:(I)V\n+  #140 = Utf8               more\n+  #141 = Utf8               currentByte\n+  #142 = Utf8               writeLiteralBlock\n+  #143 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #144 = Methodref          #145.#147     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n+  #145 = Class              #146          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+  #146 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+  #147 = NameAndType        #148:#149     // getLength:()I\n+  #148 = Utf8               getLength\n+  #149 = Utf8               ()I\n+  #150 = Methodref          #1.#151       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #151 = NameAndType        #152:#153     // writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #152 = Utf8               writeLiteralBlockNoSizeBytes\n+  #153 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #154 = Methodref          #1.#155       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #155 = NameAndType        #156:#153     // writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #156 = Utf8               writeLiteralBlockOneSizeByte\n+  #157 = Methodref          #1.#158       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #158 = NameAndType        #159:#153     // writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #159 = Utf8               writeLiteralBlockTwoSizeBytes\n+  #160 = Methodref          #1.#161       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #161 = NameAndType        #162:#153     // writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #162 = Utf8               writeLiteralBlockThreeSizeBytes\n+  #163 = Methodref          #1.#164       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #164 = NameAndType        #165:#153     // writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #165 = Utf8               writeLiteralBlockFourSizeBytes\n+  #166 = Utf8               block\n+  #167 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n+  #168 = Methodref          #1.#169       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #169 = NameAndType        #170:#171     // writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #170 = Utf8               writeLiteralBlockWithSize\n+  #171 = Utf8               (IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #172 = Methodref          #1.#173       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLittleEndian:(II)V\n+  #173 = NameAndType        #174:#175     // writeLittleEndian:(II)V\n+  #174 = Utf8               writeLittleEndian\n+  #175 = Utf8               (II)V\n+  #176 = Methodref          #145.#177     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n+  #177 = NameAndType        #178:#179     // getData:()[B\n+  #178 = Utf8               getData\n+  #179 = Utf8               ()[B\n+  #180 = Methodref          #145.#181     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+  #181 = NameAndType        #182:#149     // getOffset:()I\n+  #182 = Utf8               getOffset\n+  #183 = Methodref          #131.#184     // java/io/OutputStream.write:([BII)V\n+  #184 = NameAndType        #113:#119     // write:([BII)V\n+  #185 = Utf8               tagByte\n+  #186 = Utf8               sizeBytes\n+  #187 = Methodref          #188.#190     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #188 = Class              #189          // org/apache/commons/compress/utils/ByteUtils\n+  #189 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #190 = NameAndType        #191:#192     // toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #191 = Utf8               toLittleEndian\n+  #192 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #193 = Utf8               numBytes\n+  #194 = Utf8               num\n+  #195 = Utf8               writeBackReference\n+  #196 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #197 = Methodref          #198.#147     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n+  #198 = Class              #199          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+  #199 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+  #200 = Methodref          #198.#181     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n+  #201 = Methodref          #1.#202       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithOneOffsetByte:(II)V\n+  #202 = NameAndType        #203:#175     // writeBackReferenceWithOneOffsetByte:(II)V\n+  #203 = Utf8               writeBackReferenceWithOneOffsetByte\n+  #204 = Methodref          #1.#205       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithTwoOffsetBytes:(II)V\n+  #205 = NameAndType        #206:#175     // writeBackReferenceWithTwoOffsetBytes:(II)V\n+  #206 = Utf8               writeBackReferenceWithTwoOffsetBytes\n+  #207 = Methodref          #1.#208       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithFourOffsetBytes:(II)V\n+  #208 = NameAndType        #209:#175     // writeBackReferenceWithFourOffsetBytes:(II)V\n+  #209 = Utf8               writeBackReferenceWithFourOffsetBytes\n+  #210 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n+  #211 = Utf8               offset\n+  #212 = Methodref          #1.#213       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithLittleEndianOffset:(IIII)V\n+  #213 = NameAndType        #214:#215     // writeBackReferenceWithLittleEndianOffset:(IIII)V\n+  #214 = Utf8               writeBackReferenceWithLittleEndianOffset\n+  #215 = Utf8               (IIII)V\n+  #216 = Utf8               tag\n+  #217 = Utf8               offsetBytes\n+  #218 = Methodref          #219.#221     // org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #219 = Class              #220          // org/apache/commons/compress/compressors/lz77support/Parameters\n+  #220 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+  #221 = NameAndType        #222:#68      // builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #222 = Utf8               builder\n+  #223 = Methodref          #70.#224      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #224 = NameAndType        #225:#68      // withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #225 = Utf8               withMinBackReferenceLength\n+  #226 = Methodref          #70.#227      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #227 = NameAndType        #228:#68      // withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #228 = Utf8               withMaxBackReferenceLength\n+  #229 = Methodref          #70.#230      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #230 = NameAndType        #231:#68      // withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #231 = Utf8               withMaxOffset\n+  #232 = Methodref          #70.#233      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #233 = NameAndType        #234:#68      // withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #234 = Utf8               withMaxLiteralLength\n+  #235 = Utf8               access$0\n+  #236 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #237 = Methodref          #1.#238       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #238 = NameAndType        #142:#143     // writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #239 = Utf8               access$1\n+  #240 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #241 = Methodref          #1.#242       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #242 = NameAndType        #195:#196     // writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #243 = Utf8               SourceFile\n+  #244 = Utf8               SnappyCompressorOutputStream.java\n+  #245 = Utf8               InnerClasses\n+  #246 = Utf8               BackReference\n+  #247 = Class              #248          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #248 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #249 = Utf8               Callback\n+  #250 = Utf8               LiteralBlock\n+  #251 = Utf8               Builder\n+  #252 = Class              #253          // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #253 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #254 = Utf8               ByteConsumer\n+  #255 = Utf8               OutputStreamByteConsumer\n {\n   private final org.apache.commons.compress.compressors.lz77support.LZ77Compressor compressor;\n     descriptor: Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.OutputStream os;\n     descriptor: Ljava/io/OutputStream;\n@@ -373,224 +367,226 @@\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 64\n \n   public org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream(java.io.OutputStream, long) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;J)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: lload_2\n-         3: ldc           #4                  // int 32768\n-         5: invokespecial #5                  // Method \"<init>\":(Ljava/io/OutputStream;JI)V\n+         3: ldc           #40                 // int 32768\n+         5: invokespecial #56                 // Method \"<init>\":(Ljava/io/OutputStream;JI)V\n          8: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0       9     1    os   Ljava/io/OutputStream;\n             0       9     2 uncompressedSize   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream(java.io.OutputStream, long, int) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;JI)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n          2: lload_2\n          3: iload         4\n-         5: invokestatic  #6                  // Method createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-         8: invokevirtual #7                  // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-        11: invokespecial #8                  // Method \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+         5: invokestatic  #65                 // Method createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         8: invokevirtual #69                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+        11: invokespecial #75                 // Method \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n         14: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      15     1    os   Ljava/io/OutputStream;\n             0      15     2 uncompressedSize   J\n             0      15     4 blockSize   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream(java.io.OutputStream, long, org.apache.commons.compress.compressors.lz77support.Parameters) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=7, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #9                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #79                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #10                 // Field oneByte:[B\n+         8: putfield      #82                 // Field oneByte:[B\n         11: aload_0\n         12: iconst_0\n-        13: putfield      #11                 // Field finished:Z\n+        13: putfield      #84                 // Field finished:Z\n         16: aload_0\n         17: aload_1\n-        18: putfield      #12                 // Field os:Ljava/io/OutputStream;\n+        18: putfield      #86                 // Field os:Ljava/io/OutputStream;\n         21: aload_0\n-        22: new           #13                 // class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+        22: new           #88                 // class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n         25: dup\n         26: aload_1\n-        27: invokespecial #14                 // Method org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n-        30: putfield      #15                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+        27: invokespecial #90                 // Method org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n+        30: putfield      #93                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n         33: aload_0\n-        34: new           #16                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+        34: new           #95                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n         37: dup\n         38: aload         4\n-        40: new           #17                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+        40: new           #97                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n         43: dup\n         44: aload_0\n-        45: invokespecial #18                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n-        48: invokespecial #19                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-        51: putfield      #20                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+        45: invokespecial #99                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.\"<init>\":(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)V\n+        48: invokespecial #102                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+        51: putfield      #105                // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n         54: aload_0\n         55: lload_2\n-        56: invokespecial #21                 // Method writeUncompressedSize:(J)V\n+        56: invokespecial #107                // Method writeUncompressedSize:(J)V\n         59: return\n       LineNumberTable:\n-        line 99: 0\n+        line 98: 0\n         line 60: 4\n         line 62: 11\n         line 100: 16\n         line 101: 21\n         line 102: 33\n         line 117: 54\n         line 118: 59\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      60     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      60     1    os   Ljava/io/OutputStream;\n             0      60     2 uncompressedSize   J\n             0      60     4 params   Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field oneByte:[B\n+         1: getfield      #82                 // Field oneByte:[B\n          4: iconst_0\n          5: iload_1\n          6: sipush        255\n          9: iand\n         10: i2b\n         11: bastore\n         12: aload_0\n         13: aload_0\n-        14: getfield      #10                 // Field oneByte:[B\n-        17: invokevirtual #22                 // Method write:([B)V\n+        14: getfield      #82                 // Field oneByte:[B\n+        17: invokevirtual #115                // Method write:([B)V\n         20: return\n       LineNumberTable:\n         line 122: 0\n         line 123: 12\n         line 124: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      21     1     b   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #20                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+         1: getfield      #105                // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #23                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n+         7: invokevirtual #120                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n         10: return\n       LineNumberTable:\n         line 128: 0\n         line 129: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      11     1  data   [B\n             0      11     2   off   I\n             0      11     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #24                 // Method finish:()V\n+         1: invokevirtual #127                // Method finish:()V\n          4: aload_0\n-         5: getfield      #12                 // Field os:Ljava/io/OutputStream;\n-         8: invokevirtual #25                 // Method java/io/OutputStream.close:()V\n+         5: getfield      #86                 // Field os:Ljava/io/OutputStream;\n+         8: invokevirtual #130                // Method java/io/OutputStream.close:()V\n         11: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 4\n         line 135: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field finished:Z\n+         1: getfield      #84                 // Field finished:Z\n          4: ifne          19\n          7: aload_0\n-         8: getfield      #20                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-        11: invokevirtual #26                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n+         8: getfield      #105                // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+        11: invokevirtual #134                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n         14: aload_0\n         15: iconst_1\n-        16: putfield      #11                 // Field finished:Z\n+        16: putfield      #84                 // Field finished:Z\n         19: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 7\n         line 145: 14\n         line 147: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 19 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeUncompressedSize(long) throws java.io.IOException;\n     descriptor: (J)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=2\n          0: iconst_0\n          1: istore_3\n          2: lload_1\n-         3: ldc2_w        #27                 // long 127l\n+         3: ldc2_w        #136                // long 127l\n          6: land\n          7: l2i\n          8: istore        4\n         10: lload_1\n         11: iload         4\n         13: i2l\n         14: lcmp\n@@ -602,17 +598,17 @@\n         24: iload_3\n         25: ifeq          36\n         28: iload         4\n         30: sipush        128\n         33: ior\n         34: istore        4\n         36: aload_0\n-        37: getfield      #12                 // Field os:Ljava/io/OutputStream;\n+        37: getfield      #86                 // Field os:Ljava/io/OutputStream;\n         40: iload         4\n-        42: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n+        42: invokevirtual #138                // Method java/io/OutputStream.write:(I)V\n         45: lload_1\n         46: bipush        7\n         48: lshr\n         49: lstore_1\n         50: iload_3\n         51: ifne          2\n         54: return\n@@ -624,86 +620,87 @@\n         line 155: 28\n         line 157: 36\n         line 158: 45\n         line 159: 50\n         line 160: 54\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10      40     4 currentByte   I\n             0      55     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      55     1 uncompressedSize   J\n             2      53     3  more   Z\n+           10      40     4 currentByte   I\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 19\n           locals = [ int ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 12 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlock(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #30                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n+         1: invokevirtual #144                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n          4: istore_2\n          5: iload_2\n          6: bipush        60\n          8: if_icmpgt     20\n         11: aload_0\n         12: aload_1\n         13: iload_2\n-        14: invokespecial #32                 // Method writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        14: invokespecial #150                // Method writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         17: goto          72\n         20: iload_2\n         21: sipush        256\n         24: if_icmpgt     36\n         27: aload_0\n         28: aload_1\n         29: iload_2\n-        30: invokespecial #33                 // Method writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        30: invokespecial #154                // Method writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         33: goto          72\n         36: iload_2\n-        37: ldc           #34                 // int 65536\n+        37: ldc           #22                 // int 65536\n         39: if_icmpgt     51\n         42: aload_0\n         43: aload_1\n         44: iload_2\n-        45: invokespecial #35                 // Method writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        45: invokespecial #157                // Method writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         48: goto          72\n         51: iload_2\n-        52: ldc           #36                 // int 16777216\n+        52: ldc           #24                 // int 16777216\n         54: if_icmpgt     66\n         57: aload_0\n         58: aload_1\n         59: iload_2\n-        60: invokespecial #37                 // Method writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        60: invokespecial #160                // Method writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         63: goto          72\n         66: aload_0\n         67: aload_1\n         68: iload_2\n-        69: invokespecial #38                 // Method writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        69: invokespecial #163                // Method writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         72: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 5\n         line 177: 11\n-        line 178: 20\n+        line 178: 17\n         line 179: 27\n-        line 180: 36\n+        line 180: 33\n         line 181: 42\n-        line 182: 51\n+        line 182: 48\n         line 183: 57\n+        line 184: 63\n         line 185: 66\n         line 187: 72\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      73     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      73     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n             5      68     2   len   I\n@@ -711,446 +708,441 @@\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n         frame_type = 15 /* same */\n         frame_type = 14 /* same */\n         frame_type = 14 /* same */\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlockNoSizeBytes(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: iload_2\n          2: iconst_1\n          3: isub\n          4: iconst_2\n          5: ishl\n          6: iconst_0\n          7: iload_2\n          8: aload_1\n-         9: invokespecial #39                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         9: invokespecial #168                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         12: return\n       LineNumberTable:\n         line 190: 0\n         line 191: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      13     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n             0      13     2   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlockOneSizeByte(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        240\n          4: iconst_1\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #39                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #168                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 194: 0\n         line 195: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      11     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n             0      11     2   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlockTwoSizeBytes(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        244\n          4: iconst_2\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #39                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #168                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 198: 0\n         line 199: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      11     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n             0      11     2   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlockThreeSizeBytes(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        248\n          4: iconst_3\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #39                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #168                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 202: 0\n         line 203: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      11     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n             0      11     2   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlockFourSizeBytes(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock, int) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        252\n          4: iconst_4\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #39                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #168                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 206: 0\n         line 207: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      11     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n             0      11     2   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLiteralBlockWithSize(int, int, int, org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock) throws java.io.IOException;\n     descriptor: (IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_0\n-         1: getfield      #12                 // Field os:Ljava/io/OutputStream;\n+         1: getfield      #86                 // Field os:Ljava/io/OutputStream;\n          4: iload_1\n-         5: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n+         5: invokevirtual #138                // Method java/io/OutputStream.write:(I)V\n          8: aload_0\n          9: iload_2\n         10: iload_3\n         11: iconst_1\n         12: isub\n-        13: invokespecial #40                 // Method writeLittleEndian:(II)V\n+        13: invokespecial #172                // Method writeLittleEndian:(II)V\n         16: aload_0\n-        17: getfield      #12                 // Field os:Ljava/io/OutputStream;\n+        17: getfield      #86                 // Field os:Ljava/io/OutputStream;\n         20: aload         4\n-        22: invokevirtual #41                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n+        22: invokevirtual #176                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n         25: aload         4\n-        27: invokevirtual #42                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+        27: invokevirtual #180                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n         30: iload_3\n-        31: invokevirtual #43                 // Method java/io/OutputStream.write:([BII)V\n+        31: invokevirtual #183                // Method java/io/OutputStream.write:([BII)V\n         34: return\n       LineNumberTable:\n         line 211: 0\n         line 212: 8\n         line 213: 16\n         line 214: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      35     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      35     1 tagByte   I\n             0      35     2 sizeBytes   I\n             0      35     3   len   I\n             0      35     4 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeLittleEndian(int, int) throws java.io.IOException;\n     descriptor: (II)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #15                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+         1: getfield      #93                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n          4: iload_2\n          5: i2l\n          6: iload_1\n-         7: invokestatic  #44                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+         7: invokestatic  #187                // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n         10: return\n       LineNumberTable:\n         line 217: 0\n         line 218: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      11     1 numBytes   I\n             0      11     2   num   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeBackReference(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$BackReference) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_1\n-         1: invokevirtual #45                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n+         1: invokevirtual #197                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n          4: istore_2\n          5: aload_1\n-         6: invokevirtual #46                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n+         6: invokevirtual #200                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n          9: istore_3\n         10: iload_2\n         11: iconst_4\n         12: if_icmplt     37\n         15: iload_2\n         16: bipush        11\n         18: if_icmpgt     37\n         21: iload_3\n         22: sipush        1024\n         25: if_icmpgt     37\n         28: aload_0\n         29: iload_2\n         30: iload_3\n-        31: invokespecial #47                 // Method writeBackReferenceWithOneOffsetByte:(II)V\n+        31: invokespecial #201                // Method writeBackReferenceWithOneOffsetByte:(II)V\n         34: goto          58\n         37: iload_3\n-        38: ldc           #4                  // int 32768\n+        38: ldc           #40                 // int 32768\n         40: if_icmpge     52\n         43: aload_0\n         44: iload_2\n         45: iload_3\n-        46: invokespecial #48                 // Method writeBackReferenceWithTwoOffsetBytes:(II)V\n+        46: invokespecial #204                // Method writeBackReferenceWithTwoOffsetBytes:(II)V\n         49: goto          58\n         52: aload_0\n         53: iload_2\n         54: iload_3\n-        55: invokespecial #49                 // Method writeBackReferenceWithFourOffsetBytes:(II)V\n+        55: invokespecial #207                // Method writeBackReferenceWithFourOffsetBytes:(II)V\n         58: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 5\n         line 234: 10\n+        line 235: 21\n         line 236: 28\n-        line 237: 37\n+        line 237: 34\n         line 238: 43\n+        line 239: 49\n         line 240: 52\n         line 242: 58\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      59     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      59     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n             5      54     2   len   I\n            10      49     3 offset   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 253 /* append */\n           offset_delta = 37\n           locals = [ int, int ]\n         frame_type = 14 /* same */\n         frame_type = 5 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeBackReferenceWithOneOffsetByte(int, int) throws java.io.IOException;\n     descriptor: (II)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #12                 // Field os:Ljava/io/OutputStream;\n+         1: getfield      #86                 // Field os:Ljava/io/OutputStream;\n          4: iconst_1\n          5: iload_1\n          6: iconst_4\n          7: isub\n          8: iconst_2\n          9: ishl\n         10: ior\n         11: iload_2\n         12: sipush        1792\n         15: iand\n         16: iconst_3\n         17: ishr\n         18: ior\n-        19: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n+        19: invokevirtual #138                // Method java/io/OutputStream.write:(I)V\n         22: aload_0\n-        23: getfield      #12                 // Field os:Ljava/io/OutputStream;\n+        23: getfield      #86                 // Field os:Ljava/io/OutputStream;\n         26: iload_2\n         27: sipush        255\n         30: iand\n-        31: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n+        31: invokevirtual #138                // Method java/io/OutputStream.write:(I)V\n         34: return\n       LineNumberTable:\n         line 245: 0\n         line 246: 22\n         line 247: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      35     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      35     1   len   I\n             0      35     2 offset   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeBackReferenceWithTwoOffsetBytes(int, int) throws java.io.IOException;\n     descriptor: (II)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: iconst_2\n          2: iconst_2\n          3: iload_1\n          4: iload_2\n-         5: invokespecial #50                 // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n+         5: invokespecial #212                // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n          8: return\n       LineNumberTable:\n         line 250: 0\n         line 251: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0       9     1   len   I\n             0       9     2 offset   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeBackReferenceWithFourOffsetBytes(int, int) throws java.io.IOException;\n     descriptor: (II)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: iconst_3\n          2: iconst_4\n          3: iload_1\n          4: iload_2\n-         5: invokespecial #50                 // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n+         5: invokespecial #212                // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n          8: return\n       LineNumberTable:\n         line 254: 0\n         line 255: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0       9     1   len   I\n             0       9     2 offset   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void writeBackReferenceWithLittleEndianOffset(int, int, int, int) throws java.io.IOException;\n     descriptor: (IIII)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_0\n-         1: getfield      #12                 // Field os:Ljava/io/OutputStream;\n+         1: getfield      #86                 // Field os:Ljava/io/OutputStream;\n          4: iload_1\n          5: iload_3\n          6: iconst_1\n          7: isub\n          8: iconst_2\n          9: ishl\n         10: ior\n-        11: invokevirtual #29                 // Method java/io/OutputStream.write:(I)V\n+        11: invokevirtual #138                // Method java/io/OutputStream.write:(I)V\n         14: aload_0\n         15: iload_2\n         16: iload         4\n-        18: invokespecial #40                 // Method writeLittleEndian:(II)V\n+        18: invokespecial #172                // Method writeLittleEndian:(II)V\n         21: return\n       LineNumberTable:\n         line 259: 0\n         line 260: 14\n         line 261: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n             0      22     1   tag   I\n             0      22     2 offsetBytes   I\n             0      22     3   len   I\n             0      22     4 offset   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public static org.apache.commons.compress.compressors.lz77support.Parameters$Builder createParameterBuilder(int);\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: iload_0\n-         1: invokestatic  #51                 // Method org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         1: invokestatic  #218                // Method org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n          4: iconst_4\n-         5: invokevirtual #52                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         5: invokevirtual #223                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n          8: bipush        64\n-        10: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+        10: invokevirtual #226                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n         13: iload_0\n-        14: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+        14: invokevirtual #229                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n         17: iload_0\n-        18: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+        18: invokevirtual #232                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n         21: areturn\n       LineNumberTable:\n         line 279: 0\n-        line 280: 5\n-        line 281: 10\n-        line 282: 14\n-        line 283: 18\n+        line 280: 4\n+        line 281: 8\n+        line 282: 13\n+        line 283: 17\n         line 279: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0 blockSize   I\n \n-  static void access$000(org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream, org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock) throws java.io.IOException;\n+  static void access$0(org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream, org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         2: invokespecial #237                // Method writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n          5: return\n       LineNumberTable:\n-        line 54: 0\n+        line 174: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n-            0       6     1    x1   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  static void access$100(org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream, org.apache.commons.compress.compressors.lz77support.LZ77Compressor$BackReference) throws java.io.IOException;\n+  static void access$1(org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream, org.apache.commons.compress.compressors.lz77support.LZ77Compressor$BackReference) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+         2: invokespecial #241                // Method writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n          5: return\n       LineNumberTable:\n-        line 54: 0\n+        line 231: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n-            0       6     1    x1   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"SnappyCompressorOutputStream.java\"\n InnerClasses:\n-  static #57;                             // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$2\n-  #17;                                    // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n-  public static #65= #64 of #190;         // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #136= #135 of #16;  // LiteralBlock=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static final #156= #155 of #16;  // BackReference=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static #169= #168 of #224;       // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n-  public static #192= #13 of #190;        // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #243= #242 of #16;        // Callback=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static final #246= #198 of #95;  // BackReference=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static #249= #247 of #95;        // Callback=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static final #250= #145 of #95;  // LiteralBlock=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static #251= #70 of #219;        // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n+  #97;                                    // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+  public static #254= #252 of #188;       // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #255= #88 of #188;        // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n"}]}
