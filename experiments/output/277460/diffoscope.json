{"diffoscope-json-version": 1, "source1": "first/HuffmanDecoder$DecoderState.class", "source2": "second/HuffmanDecoder$DecoderState.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum ed721d3f1025fb19eb91cfd7afa1680c71015e8a052940ce7012ad35b36b80ec\n+  SHA-256 checksum d7e6b91c70e70a7a3ccb783c0b52d4c1bd8ebd096c2f70889c9fd26520da2b84\n   Compiled from \"HuffmanDecoder.java\"\n abstract class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState\n   minor version: 0\n   major version: 53\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n   this_class: #2                          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState\n   super_class: #8                         // java/lang/Object\n@@ -15,53 +15,45 @@\n    #5 = Utf8               <init>\n    #6 = Utf8               ()V\n    #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n    #8 = Class              #9             // java/lang/Object\n    #9 = Utf8               java/lang/Object\n   #10 = Utf8               Code\n   #11 = Utf8               LineNumberTable\n-  #12 = Utf8               LocalVariableTable\n-  #13 = Utf8               this\n-  #14 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState;\n-  #15 = Utf8               state\n-  #16 = Utf8               ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n-  #17 = Utf8               read\n-  #18 = Utf8               ([BII)I\n-  #19 = Utf8               Exceptions\n-  #20 = Class              #21            // java/io/IOException\n-  #21 = Utf8               java/io/IOException\n-  #22 = Utf8               hasData\n-  #23 = Utf8               ()Z\n-  #24 = Utf8               available\n-  #25 = Utf8               ()I\n-  #26 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-  #27 = Utf8               x0\n-  #28 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;\n-  #29 = Utf8               SourceFile\n-  #30 = Utf8               HuffmanDecoder.java\n-  #31 = Utf8               InnerClasses\n-  #32 = Class              #33            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #33 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #34 = Utf8               DecoderState\n-  #35 = Class              #36            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  #36 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  #12 = Utf8               state\n+  #13 = Utf8               ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n+  #14 = Utf8               read\n+  #15 = Utf8               ([BII)I\n+  #16 = Utf8               Exceptions\n+  #17 = Class              #18            // java/io/IOException\n+  #18 = Utf8               java/io/IOException\n+  #19 = Utf8               hasData\n+  #20 = Utf8               ()Z\n+  #21 = Utf8               available\n+  #22 = Utf8               ()I\n+  #23 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+  #24 = Utf8               SourceFile\n+  #25 = Utf8               HuffmanDecoder.java\n+  #26 = Utf8               InnerClasses\n+  #27 = Class              #28            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #28 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #29 = Utf8               DecoderState\n+  #30 = Class              #31            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  #31 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n {\n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecoderState();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 195: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState;\n \n   abstract org.apache.commons.compress.compressors.deflate64.HuffmanState state();\n     descriptor: ()Lorg/apache/commons/compress/compressors/deflate64/HuffmanState;\n     flags: (0x0400) ACC_ABSTRACT\n \n   abstract int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n@@ -85,16 +77,12 @@\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 195: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState;\n-            0       5     1    x0   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;\n }\n SourceFile: \"HuffmanDecoder.java\"\n InnerClasses:\n-  private static abstract #34= #2 of #32; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  static #35;                             // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n+  private static abstract #29= #2 of #27; // DecoderState=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecoderState of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  static #30;                             // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n"}]}
