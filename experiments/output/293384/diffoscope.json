{"diffoscope-json-version": 1, "source1": "first/ArrayElementValue.class", "source2": "second/ArrayElementValue.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,151 +1,151 @@\n-  SHA-256 checksum 85e72766283f6c1c9deadf6e7dd8fb118ca7b7475a8ae2e7fe73bb8e6511ef29\n+  SHA-256 checksum 6b9ff4608cb5bf44920adfa0f636144a026ef83fa22b9d1076d611a519508555\n   Compiled from \"ArrayElementValue.java\"\n public class org.apache.bcel.classfile.ArrayElementValue extends org.apache.bcel.classfile.ElementValue\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #23                         // org/apache/bcel/classfile/ArrayElementValue\n-  super_class: #11                        // org/apache/bcel/classfile/ElementValue\n+  this_class: #14                         // org/apache/bcel/classfile/ArrayElementValue\n+  super_class: #31                        // org/apache/bcel/classfile/ElementValue\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Class              #46            // java/lang/StringBuilder\n-   #2 = Methodref          #1.#47         // java/lang/StringBuilder.\"<init>\":()V\n-   #3 = String             #48            // {\n-   #4 = Methodref          #1.#49         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #5 = Fieldref           #23.#50        // org/apache/bcel/classfile/ArrayElementValue.elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n-   #6 = Methodref          #1.#51         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #7 = String             #52            // ,\n-   #8 = String             #53            // }\n-   #9 = Methodref          #1.#54         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #10 = Methodref          #11.#55        // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #11 = Class              #56            // org/apache/bcel/classfile/ElementValue\n-  #12 = Class              #57            // java/lang/IllegalArgumentException\n-  #13 = String             #58            // Only element values of type array can be built with this ctor - type specified:\n-  #14 = Methodref          #1.#59         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #15 = Methodref          #12.#60        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #16 = Methodref          #11.#61        // org/apache/bcel/classfile/ElementValue.getType:()I\n-  #17 = Methodref          #62.#63        // java/io/DataOutputStream.writeByte:(I)V\n-  #18 = Methodref          #62.#64        // java/io/DataOutputStream.writeShort:(I)V\n-  #19 = Methodref          #11.#65        // org/apache/bcel/classfile/ElementValue.dump:(Ljava/io/DataOutputStream;)V\n-  #20 = String             #66            // [\n-  #21 = Methodref          #11.#67        // org/apache/bcel/classfile/ElementValue.stringifyValue:()Ljava/lang/String;\n-  #22 = String             #68            // ]\n-  #23 = Class              #69            // org/apache/bcel/classfile/ArrayElementValue\n-  #24 = Utf8               elementValues\n-  #25 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n-  #26 = Utf8               toString\n-  #27 = Utf8               ()Ljava/lang/String;\n-  #28 = Utf8               Code\n-  #29 = Utf8               LineNumberTable\n-  #30 = Utf8               StackMapTable\n-  #31 = Utf8               <init>\n-  #32 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #33 = Class              #25            // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n-  #34 = Class              #70            // org/apache/bcel/classfile/ConstantPool\n-  #35 = Utf8               dump\n-  #36 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #37 = Utf8               Exceptions\n-  #38 = Class              #71            // java/io/IOException\n-  #39 = Utf8               stringifyValue\n-  #40 = Utf8               getElementValuesArray\n-  #41 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n-  #42 = Utf8               getElementValuesArraySize\n-  #43 = Utf8               ()I\n-  #44 = Utf8               SourceFile\n-  #45 = Utf8               ArrayElementValue.java\n-  #46 = Utf8               java/lang/StringBuilder\n-  #47 = NameAndType        #31:#72        // \"<init>\":()V\n-  #48 = Utf8               {\n-  #49 = NameAndType        #73:#74        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #50 = NameAndType        #24:#25        // elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n-  #51 = NameAndType        #73:#75        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #52 = Utf8               ,\n-  #53 = Utf8               }\n-  #54 = NameAndType        #26:#27        // toString:()Ljava/lang/String;\n-  #55 = NameAndType        #31:#76        // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #56 = Utf8               org/apache/bcel/classfile/ElementValue\n-  #57 = Utf8               java/lang/IllegalArgumentException\n-  #58 = Utf8               Only element values of type array can be built with this ctor - type specified:\n-  #59 = NameAndType        #73:#77        // append:(I)Ljava/lang/StringBuilder;\n-  #60 = NameAndType        #31:#78        // \"<init>\":(Ljava/lang/String;)V\n-  #61 = NameAndType        #79:#43        // getType:()I\n-  #62 = Class              #80            // java/io/DataOutputStream\n-  #63 = NameAndType        #81:#82        // writeByte:(I)V\n-  #64 = NameAndType        #83:#82        // writeShort:(I)V\n-  #65 = NameAndType        #35:#36        // dump:(Ljava/io/DataOutputStream;)V\n-  #66 = Utf8               [\n-  #67 = NameAndType        #39:#27        // stringifyValue:()Ljava/lang/String;\n+   #1 = Class              #2             // java/lang/StringBuilder\n+   #2 = Utf8               java/lang/StringBuilder\n+   #3 = Methodref          #1.#4          // java/lang/StringBuilder.\"<init>\":()V\n+   #4 = NameAndType        #5:#6          // \"<init>\":()V\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = String             #8             // {\n+   #8 = Utf8               {\n+   #9 = Methodref          #1.#10         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #10 = NameAndType        #11:#12        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #11 = Utf8               append\n+  #12 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #13 = Fieldref           #14.#15        // org/apache/bcel/classfile/ArrayElementValue.elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+  #14 = Class              #16            // org/apache/bcel/classfile/ArrayElementValue\n+  #15 = NameAndType        #17:#18        // elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+  #16 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n+  #17 = Utf8               elementValues\n+  #18 = Utf8               [Lorg/apache/bcel/classfile/ElementValue;\n+  #19 = Methodref          #1.#20         // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #20 = NameAndType        #11:#21        // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #21 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #22 = String             #23            // ,\n+  #23 = Utf8               ,\n+  #24 = String             #25            // }\n+  #25 = Utf8               }\n+  #26 = Methodref          #1.#27         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #27 = NameAndType        #28:#29        // toString:()Ljava/lang/String;\n+  #28 = Utf8               toString\n+  #29 = Utf8               ()Ljava/lang/String;\n+  #30 = Methodref          #31.#32        // org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #31 = Class              #33            // org/apache/bcel/classfile/ElementValue\n+  #32 = NameAndType        #5:#34         // \"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #33 = Utf8               org/apache/bcel/classfile/ElementValue\n+  #34 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n+  #35 = Class              #36            // java/lang/IllegalArgumentException\n+  #36 = Utf8               java/lang/IllegalArgumentException\n+  #37 = String             #38            // Only element values of type array can be built with this ctor - type specified:\n+  #38 = Utf8               Only element values of type array can be built with this ctor - type specified:\n+  #39 = Methodref          #1.#40         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #40 = NameAndType        #11:#41        // append:(I)Ljava/lang/StringBuilder;\n+  #41 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #42 = Methodref          #35.#43        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #43 = NameAndType        #5:#44         // \"<init>\":(Ljava/lang/String;)V\n+  #44 = Utf8               (Ljava/lang/String;)V\n+  #45 = Methodref          #31.#46        // org/apache/bcel/classfile/ElementValue.getType:()I\n+  #46 = NameAndType        #47:#48        // getType:()I\n+  #47 = Utf8               getType\n+  #48 = Utf8               ()I\n+  #49 = Methodref          #50.#51        // java/io/DataOutputStream.writeByte:(I)V\n+  #50 = Class              #52            // java/io/DataOutputStream\n+  #51 = NameAndType        #53:#54        // writeByte:(I)V\n+  #52 = Utf8               java/io/DataOutputStream\n+  #53 = Utf8               writeByte\n+  #54 = Utf8               (I)V\n+  #55 = Methodref          #50.#56        // java/io/DataOutputStream.writeShort:(I)V\n+  #56 = NameAndType        #57:#54        // writeShort:(I)V\n+  #57 = Utf8               writeShort\n+  #58 = Methodref          #31.#59        // org/apache/bcel/classfile/ElementValue.dump:(Ljava/io/DataOutputStream;)V\n+  #59 = NameAndType        #60:#61        // dump:(Ljava/io/DataOutputStream;)V\n+  #60 = Utf8               dump\n+  #61 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #62 = String             #63            // [\n+  #63 = Utf8               [\n+  #64 = Methodref          #31.#65        // org/apache/bcel/classfile/ElementValue.stringifyValue:()Ljava/lang/String;\n+  #65 = NameAndType        #66:#29        // stringifyValue:()Ljava/lang/String;\n+  #66 = Utf8               stringifyValue\n+  #67 = String             #68            // ]\n   #68 = Utf8               ]\n-  #69 = Utf8               org/apache/bcel/classfile/ArrayElementValue\n-  #70 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #71 = Utf8               java/io/IOException\n-  #72 = Utf8               ()V\n-  #73 = Utf8               append\n-  #74 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #75 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #76 = Utf8               (ILorg/apache/bcel/classfile/ConstantPool;)V\n-  #77 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #78 = Utf8               (Ljava/lang/String;)V\n-  #79 = Utf8               getType\n-  #80 = Utf8               java/io/DataOutputStream\n-  #81 = Utf8               writeByte\n-  #82 = Utf8               (I)V\n-  #83 = Utf8               writeShort\n+  #69 = Utf8               Code\n+  #70 = Utf8               LineNumberTable\n+  #71 = Utf8               StackMapTable\n+  #72 = Utf8               (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #73 = Class              #18            // \"[Lorg/apache/bcel/classfile/ElementValue;\"\n+  #74 = Class              #75            // org/apache/bcel/classfile/ConstantPool\n+  #75 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #76 = Utf8               Exceptions\n+  #77 = Class              #78            // java/io/IOException\n+  #78 = Utf8               java/io/IOException\n+  #79 = Utf8               getElementValuesArray\n+  #80 = Utf8               ()[Lorg/apache/bcel/classfile/ElementValue;\n+  #81 = Utf8               getElementValuesArraySize\n+  #82 = Utf8               SourceFile\n+  #83 = Utf8               ArrayElementValue.java\n {\n   private final org.apache.bcel.classfile.ElementValue[] elementValues;\n     descriptor: [Lorg/apache/bcel/classfile/ElementValue;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: new           #1                  // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #3                  // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #3                  // String {\n-        11: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #7                  // String {\n+        11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         14: pop\n         15: iconst_0\n         16: istore_2\n         17: iload_2\n         18: aload_0\n-        19: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        19: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         22: arraylength\n         23: if_icmpge     61\n         26: aload_1\n         27: aload_0\n-        28: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        28: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         31: iload_2\n         32: aaload\n-        33: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         36: pop\n         37: iload_2\n         38: iconst_1\n         39: iadd\n         40: aload_0\n-        41: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        41: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         44: arraylength\n         45: if_icmpge     55\n         48: aload_1\n-        49: ldc           #7                  // String ,\n-        51: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        49: ldc           #22                 // String ,\n+        51: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         54: pop\n         55: iinc          2, 1\n         58: goto          17\n         61: aload_1\n-        62: ldc           #8                  // String }\n-        64: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: ldc           #24                 // String }\n+        64: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         67: pop\n         68: aload_1\n-        69: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        69: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         72: areturn\n       LineNumberTable:\n         line 34: 0\n         line 35: 8\n         line 36: 15\n         line 38: 26\n         line 39: 37\n@@ -165,33 +165,33 @@\n     descriptor: (I[Lorg/apache/bcel/classfile/ElementValue;Lorg/apache/bcel/classfile/ConstantPool;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_3\n-         3: invokespecial #10                 // Method org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n+         3: invokespecial #30                 // Method org/apache/bcel/classfile/ElementValue.\"<init>\":(ILorg/apache/bcel/classfile/ConstantPool;)V\n          6: iload_1\n          7: bipush        91\n          9: if_icmpeq     39\n-        12: new           #12                 // class java/lang/IllegalArgumentException\n+        12: new           #35                 // class java/lang/IllegalArgumentException\n         15: dup\n         16: new           #1                  // class java/lang/StringBuilder\n         19: dup\n-        20: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        23: ldc           #13                 // String Only element values of type array can be built with this ctor - type specified:\n-        25: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: invokespecial #3                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        23: ldc           #37                 // String Only element values of type array can be built with this ctor - type specified:\n+        25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         28: iload_1\n-        29: invokevirtual #14                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        32: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        35: invokespecial #15                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        32: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        35: invokespecial #42                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: aload_2\n-        41: putfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        41: putfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         44: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 6\n         line 51: 12\n         line 54: 39\n         line 55: 44\n@@ -204,23 +204,23 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokespecial #16                 // Method org/apache/bcel/classfile/ElementValue.getType:()I\n-         5: invokevirtual #17                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: invokespecial #45                 // Method org/apache/bcel/classfile/ElementValue.getType:()I\n+         5: invokevirtual #49                 // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        10: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         13: arraylength\n-        14: invokevirtual #18                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        14: invokevirtual #55                 // Method java/io/DataOutputStream.writeShort:(I)V\n         17: aload_0\n-        18: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        18: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         21: astore_2\n         22: aload_2\n         23: arraylength\n         24: istore_3\n         25: iconst_0\n         26: istore        4\n         28: iload         4\n@@ -228,15 +228,15 @@\n         31: if_icmpge     52\n         34: aload_2\n         35: iload         4\n         37: aaload\n         38: astore        5\n         40: aload         5\n         42: aload_1\n-        43: invokevirtual #19                 // Method org/apache/bcel/classfile/ElementValue.dump:(Ljava/io/DataOutputStream;)V\n+        43: invokevirtual #58                 // Method org/apache/bcel/classfile/ElementValue.dump:(Ljava/io/DataOutputStream;)V\n         46: iinc          4, 1\n         49: goto          28\n         52: return\n       LineNumberTable:\n         line 60: 0\n         line 61: 8\n         line 62: 17\n@@ -255,54 +255,54 @@\n   public java.lang.String stringifyValue();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: new           #1                  // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #2                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #3                  // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #20                 // String [\n-        11: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #62                 // String [\n+        11: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         14: pop\n         15: iconst_0\n         16: istore_2\n         17: iload_2\n         18: aload_0\n-        19: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        19: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         22: arraylength\n         23: if_icmpge     64\n         26: aload_1\n         27: aload_0\n-        28: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        28: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         31: iload_2\n         32: aaload\n-        33: invokevirtual #21                 // Method org/apache/bcel/classfile/ElementValue.stringifyValue:()Ljava/lang/String;\n-        36: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #64                 // Method org/apache/bcel/classfile/ElementValue.stringifyValue:()Ljava/lang/String;\n+        36: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         39: pop\n         40: iload_2\n         41: iconst_1\n         42: iadd\n         43: aload_0\n-        44: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+        44: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n         47: arraylength\n         48: if_icmpge     58\n         51: aload_1\n-        52: ldc           #7                  // String ,\n-        54: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        52: ldc           #22                 // String ,\n+        54: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         57: pop\n         58: iinc          2, 1\n         61: goto          17\n         64: aload_1\n-        65: ldc           #22                 // String ]\n-        67: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: ldc           #67                 // String ]\n+        67: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         70: pop\n         71: aload_1\n-        72: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        72: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         75: areturn\n       LineNumberTable:\n         line 70: 0\n         line 71: 8\n         line 72: 15\n         line 74: 26\n         line 75: 40\n@@ -320,25 +320,25 @@\n \n   public org.apache.bcel.classfile.ElementValue[] getElementValuesArray();\n     descriptor: ()[Lorg/apache/bcel/classfile/ElementValue;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+         1: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n          4: areturn\n       LineNumberTable:\n         line 85: 0\n \n   public int getElementValuesArraySize();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n+         1: getfield      #13                 // Field elementValues:[Lorg/apache/bcel/classfile/ElementValue;\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 90: 0\n }\n SourceFile: \"ArrayElementValue.java\"\n"}]}
