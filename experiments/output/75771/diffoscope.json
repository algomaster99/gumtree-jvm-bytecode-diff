{"diffoscope-json-version": 1, "source1": "first/ThresholdingOutputStream.class", "source2": "second/ThresholdingOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,83 +1,83 @@\n-  SHA-256 checksum e75008ee3d725450c581a48f45ab04ab5682d4666d648806d91ddfd5b63c5bf9\n+  SHA-256 checksum 4338540a5082d23e2fadd31ca7a9bdc1a811be987bfccf470c2657b23c2418b9\n   Compiled from \"ThresholdingOutputStream.java\"\n public abstract class org.apache.commons.io.output.ThresholdingOutputStream extends java.io.OutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/io/output/ThresholdingOutputStream\n-  super_class: #2                         // java/io/OutputStream\n+  this_class: #1                          // org/apache/commons/io/output/ThresholdingOutputStream\n+  super_class: #3                         // java/io/OutputStream\n   interfaces: 0, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/OutputStream.\"<init>\":()V\n-   #2 = Class              #4             // java/io/OutputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/output/ThresholdingOutputStream\n+   #2 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+   #3 = Class              #4             // java/io/OutputStream\n    #4 = Utf8               java/io/OutputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n-   #8 = Class              #10            // org/apache/commons/io/output/ThresholdingOutputStream\n-   #9 = NameAndType        #11:#12        // threshold:I\n-  #10 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #11 = Utf8               threshold\n-  #12 = Utf8               I\n-  #13 = Methodref          #8.#14         // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n-  #14 = NameAndType        #15:#16        // checkThreshold:(I)V\n-  #15 = Utf8               checkThreshold\n-  #16 = Utf8               (I)V\n-  #17 = Methodref          #8.#18         // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n-  #18 = NameAndType        #19:#20        // getStream:()Ljava/io/OutputStream;\n-  #19 = Utf8               getStream\n-  #20 = Utf8               ()Ljava/io/OutputStream;\n-  #21 = Methodref          #2.#22         // java/io/OutputStream.write:(I)V\n-  #22 = NameAndType        #23:#16        // write:(I)V\n+   #5 = Utf8               threshold\n+   #6 = Utf8               I\n+   #7 = Utf8               written\n+   #8 = Utf8               J\n+   #9 = Utf8               thresholdExceeded\n+  #10 = Utf8               Z\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (I)V\n+  #13 = Utf8               Code\n+  #14 = Methodref          #3.#15         // java/io/OutputStream.\"<init>\":()V\n+  #15 = NameAndType        #11:#16        // \"<init>\":()V\n+  #16 = Utf8               ()V\n+  #17 = Fieldref           #1.#18         // org/apache/commons/io/output/ThresholdingOutputStream.threshold:I\n+  #18 = NameAndType        #5:#6          // threshold:I\n+  #19 = Utf8               LineNumberTable\n+  #20 = Utf8               LocalVariableTable\n+  #21 = Utf8               this\n+  #22 = Utf8               Lorg/apache/commons/io/output/ThresholdingOutputStream;\n   #23 = Utf8               write\n-  #24 = Fieldref           #8.#25         // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n-  #25 = NameAndType        #26:#27        // written:J\n-  #26 = Utf8               written\n-  #27 = Utf8               J\n-  #28 = Methodref          #2.#29         // java/io/OutputStream.write:([B)V\n-  #29 = NameAndType        #23:#30        // write:([B)V\n-  #30 = Utf8               ([B)V\n-  #31 = Methodref          #2.#32         // java/io/OutputStream.write:([BII)V\n-  #32 = NameAndType        #23:#33        // write:([BII)V\n-  #33 = Utf8               ([BII)V\n-  #34 = Methodref          #2.#35         // java/io/OutputStream.flush:()V\n-  #35 = NameAndType        #36:#6         // flush:()V\n-  #36 = Utf8               flush\n-  #37 = Methodref          #8.#35         // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n-  #38 = Class              #39            // java/io/IOException\n-  #39 = Utf8               java/io/IOException\n-  #40 = Methodref          #2.#41         // java/io/OutputStream.close:()V\n-  #41 = NameAndType        #42:#6         // close:()V\n-  #42 = Utf8               close\n-  #43 = Fieldref           #8.#44         // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n-  #44 = NameAndType        #45:#46        // thresholdExceeded:Z\n-  #45 = Utf8               thresholdExceeded\n-  #46 = Utf8               Z\n-  #47 = Methodref          #8.#48         // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n-  #48 = NameAndType        #49:#6         // thresholdReached:()V\n-  #49 = Utf8               thresholdReached\n-  #50 = Utf8               Code\n-  #51 = Utf8               LineNumberTable\n-  #52 = Utf8               LocalVariableTable\n-  #53 = Utf8               this\n-  #54 = Utf8               Lorg/apache/commons/io/output/ThresholdingOutputStream;\n-  #55 = Utf8               b\n-  #56 = Utf8               Exceptions\n-  #57 = Utf8               [B\n-  #58 = Utf8               off\n-  #59 = Utf8               len\n-  #60 = Utf8               StackMapTable\n-  #61 = Utf8               getThreshold\n-  #62 = Utf8               ()I\n-  #63 = Utf8               getByteCount\n-  #64 = Utf8               ()J\n-  #65 = Utf8               isThresholdExceeded\n-  #66 = Utf8               ()Z\n+  #24 = Utf8               Exceptions\n+  #25 = Class              #26            // java/io/IOException\n+  #26 = Utf8               java/io/IOException\n+  #27 = Methodref          #1.#28         // org/apache/commons/io/output/ThresholdingOutputStream.checkThreshold:(I)V\n+  #28 = NameAndType        #29:#12        // checkThreshold:(I)V\n+  #29 = Utf8               checkThreshold\n+  #30 = Methodref          #1.#31         // org/apache/commons/io/output/ThresholdingOutputStream.getStream:()Ljava/io/OutputStream;\n+  #31 = NameAndType        #32:#33        // getStream:()Ljava/io/OutputStream;\n+  #32 = Utf8               getStream\n+  #33 = Utf8               ()Ljava/io/OutputStream;\n+  #34 = Methodref          #3.#35         // java/io/OutputStream.write:(I)V\n+  #35 = NameAndType        #23:#12        // write:(I)V\n+  #36 = Fieldref           #1.#37         // org/apache/commons/io/output/ThresholdingOutputStream.written:J\n+  #37 = NameAndType        #7:#8          // written:J\n+  #38 = Utf8               b\n+  #39 = Utf8               ([B)V\n+  #40 = Methodref          #3.#41         // java/io/OutputStream.write:([B)V\n+  #41 = NameAndType        #23:#39        // write:([B)V\n+  #42 = Utf8               [B\n+  #43 = Utf8               ([BII)V\n+  #44 = Methodref          #3.#45         // java/io/OutputStream.write:([BII)V\n+  #45 = NameAndType        #23:#43        // write:([BII)V\n+  #46 = Utf8               off\n+  #47 = Utf8               len\n+  #48 = Utf8               flush\n+  #49 = Methodref          #3.#50         // java/io/OutputStream.flush:()V\n+  #50 = NameAndType        #48:#16        // flush:()V\n+  #51 = Utf8               close\n+  #52 = Methodref          #1.#50         // org/apache/commons/io/output/ThresholdingOutputStream.flush:()V\n+  #53 = Methodref          #3.#54         // java/io/OutputStream.close:()V\n+  #54 = NameAndType        #51:#16        // close:()V\n+  #55 = Utf8               StackMapTable\n+  #56 = Utf8               getThreshold\n+  #57 = Utf8               ()I\n+  #58 = Utf8               getByteCount\n+  #59 = Utf8               ()J\n+  #60 = Utf8               isThresholdExceeded\n+  #61 = Utf8               ()Z\n+  #62 = Fieldref           #1.#63         // org/apache/commons/io/output/ThresholdingOutputStream.thresholdExceeded:Z\n+  #63 = NameAndType        #9:#10         // thresholdExceeded:Z\n+  #64 = Methodref          #1.#65         // org/apache/commons/io/output/ThresholdingOutputStream.thresholdReached:()V\n+  #65 = NameAndType        #66:#16        // thresholdReached:()V\n+  #66 = Utf8               thresholdReached\n   #67 = Utf8               count\n   #68 = Utf8               resetByteCount\n   #69 = Utf8               setByteCount\n   #70 = Utf8               (J)V\n   #71 = Utf8               SourceFile\n   #72 = Utf8               ThresholdingOutputStream.java\n {\n@@ -95,282 +95,280 @@\n \n   public org.apache.commons.io.output.ThresholdingOutputStream(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/OutputStream.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/io/OutputStream.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #7                  // Field threshold:I\n+         6: putfield      #17                 // Field threshold:I\n          9: return\n       LineNumberTable:\n-        line 72: 0\n+        line 71: 0\n         line 73: 4\n         line 74: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n             0      10     1 threshold   I\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #13                 // Method checkThreshold:(I)V\n+         2: invokevirtual #27                 // Method checkThreshold:(I)V\n          5: aload_0\n-         6: invokevirtual #17                 // Method getStream:()Ljava/io/OutputStream;\n+         6: invokevirtual #30                 // Method getStream:()Ljava/io/OutputStream;\n          9: iload_1\n-        10: invokevirtual #21                 // Method java/io/OutputStream.write:(I)V\n+        10: invokevirtual #34                 // Method java/io/OutputStream.write:(I)V\n         13: aload_0\n         14: dup\n-        15: getfield      #24                 // Field written:J\n+        15: getfield      #36                 // Field written:J\n         18: lconst_1\n         19: ladd\n-        20: putfield      #24                 // Field written:J\n+        20: putfield      #36                 // Field written:J\n         23: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 5\n         line 92: 13\n         line 93: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      24     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n             0      24     1     b   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: arraylength\n-         3: invokevirtual #13                 // Method checkThreshold:(I)V\n+         3: invokevirtual #27                 // Method checkThreshold:(I)V\n          6: aload_0\n-         7: invokevirtual #17                 // Method getStream:()Ljava/io/OutputStream;\n+         7: invokevirtual #30                 // Method getStream:()Ljava/io/OutputStream;\n         10: aload_1\n-        11: invokevirtual #28                 // Method java/io/OutputStream.write:([B)V\n+        11: invokevirtual #40                 // Method java/io/OutputStream.write:([B)V\n         14: aload_0\n         15: dup\n-        16: getfield      #24                 // Field written:J\n+        16: getfield      #36                 // Field written:J\n         19: aload_1\n         20: arraylength\n         21: i2l\n         22: ladd\n-        23: putfield      #24                 // Field written:J\n+        23: putfield      #36                 // Field written:J\n         26: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 6\n         line 109: 14\n         line 110: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n             0      27     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #13                 // Method checkThreshold:(I)V\n+         2: invokevirtual #27                 // Method checkThreshold:(I)V\n          5: aload_0\n-         6: invokevirtual #17                 // Method getStream:()Ljava/io/OutputStream;\n+         6: invokevirtual #30                 // Method getStream:()Ljava/io/OutputStream;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #31                 // Method java/io/OutputStream.write:([BII)V\n+        12: invokevirtual #44                 // Method java/io/OutputStream.write:([BII)V\n         15: aload_0\n         16: dup\n-        17: getfield      #24                 // Field written:J\n+        17: getfield      #36                 // Field written:J\n         20: iload_3\n         21: i2l\n         22: ladd\n-        23: putfield      #24                 // Field written:J\n+        23: putfield      #36                 // Field written:J\n         26: return\n       LineNumberTable:\n         line 126: 0\n         line 127: 5\n         line 128: 15\n         line 129: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      27     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n             0      27     1     b   [B\n             0      27     2   off   I\n             0      27     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #17                 // Method getStream:()Ljava/io/OutputStream;\n-         4: invokevirtual #34                 // Method java/io/OutputStream.flush:()V\n+         1: invokevirtual #30                 // Method getStream:()Ljava/io/OutputStream;\n+         4: invokevirtual #49                 // Method java/io/OutputStream.flush:()V\n          7: return\n       LineNumberTable:\n         line 141: 0\n         line 142: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #37                 // Method flush:()V\n+         1: invokevirtual #52                 // Method flush:()V\n          4: goto          8\n          7: astore_1\n          8: aload_0\n-         9: invokevirtual #17                 // Method getStream:()Ljava/io/OutputStream;\n-        12: invokevirtual #40                 // Method java/io/OutputStream.close:()V\n+         9: invokevirtual #30                 // Method getStream:()Ljava/io/OutputStream;\n+        12: invokevirtual #53                 // Method java/io/OutputStream.close:()V\n         15: return\n       Exception table:\n          from    to  target type\n              0     4     7   Class java/io/IOException\n       LineNumberTable:\n         line 156: 0\n-        line 161: 4\n+        line 157: 4\n         line 158: 7\n         line 162: 8\n         line 163: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 0 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int getThreshold();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field threshold:I\n+         1: getfield      #17                 // Field threshold:I\n          4: ireturn\n       LineNumberTable:\n         line 176: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n \n   public long getByteCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field written:J\n+         1: getfield      #36                 // Field written:J\n          4: lreturn\n       LineNumberTable:\n         line 187: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n \n   public boolean isThresholdExceeded();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field written:J\n+         1: getfield      #36                 // Field written:J\n          4: aload_0\n-         5: getfield      #7                  // Field threshold:I\n+         5: getfield      #17                 // Field threshold:I\n          8: i2l\n          9: lcmp\n-        10: ifle          17\n+        10: ifle          15\n         13: iconst_1\n-        14: goto          18\n-        17: iconst_0\n-        18: ireturn\n+        14: ireturn\n+        15: iconst_0\n+        16: ireturn\n       LineNumberTable:\n         line 200: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 17 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      17     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 15 /* same */\n \n   protected void checkThreshold(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #43                 // Field thresholdExceeded:Z\n+         1: getfield      #62                 // Field thresholdExceeded:Z\n          4: ifne          32\n          7: aload_0\n-         8: getfield      #24                 // Field written:J\n+         8: getfield      #36                 // Field written:J\n         11: iload_1\n         12: i2l\n         13: ladd\n         14: aload_0\n-        15: getfield      #7                  // Field threshold:I\n+        15: getfield      #17                 // Field threshold:I\n         18: i2l\n         19: lcmp\n         20: ifle          32\n         23: aload_0\n         24: iconst_1\n-        25: putfield      #43                 // Field thresholdExceeded:Z\n+        25: putfield      #62                 // Field thresholdExceeded:Z\n         28: aload_0\n-        29: invokevirtual #47                 // Method thresholdReached:()V\n+        29: invokevirtual #64                 // Method thresholdReached:()V\n         32: return\n       LineNumberTable:\n         line 219: 0\n         line 221: 23\n         line 222: 28\n         line 224: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      33     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n             0      33     1 count   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 32 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void resetByteCount();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #43                 // Field thresholdExceeded:Z\n+         2: putfield      #62                 // Field thresholdExceeded:Z\n          5: aload_0\n          6: lconst_0\n-         7: putfield      #24                 // Field written:J\n+         7: putfield      #36                 // Field written:J\n         10: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 5\n         line 234: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -379,15 +377,15 @@\n   protected void setByteCount(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #24                 // Field written:J\n+         2: putfield      #36                 // Field written:J\n          5: return\n       LineNumberTable:\n         line 246: 0\n         line 247: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ThresholdingOutputStream;\n"}]}
