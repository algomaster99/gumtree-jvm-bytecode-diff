{"diffoscope-json-version": 1, "source1": "first/LZMACompressorInputStream.class", "source2": "second/LZMACompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,102 +1,99 @@\n-  SHA-256 checksum 34ae32c214b6dabd70ce1d62ae6a2395d44726c5432f622720aeb9d33632ff0e\n+  SHA-256 checksum 813810d839529b4ba8b3439ca5966c1e853f609cbb225c3eca39ad6fcbddff91\n   Compiled from \"LZMACompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #20                         // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n   super_class: #21                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 2, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #21.#52        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-   #2 = Class              #53            // org/tukaani/xz/LZMAInputStream\n-   #3 = Class              #54            // org/apache/commons/compress/utils/CountingInputStream\n-   #4 = Methodref          #3.#55         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #5 = Fieldref           #20.#56        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #6 = Methodref          #2.#57         // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #7 = Fieldref           #20.#58        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.in:Ljava/io/InputStream;\n-   #8 = Class              #59            // org/tukaani/xz/MemoryLimitException\n-   #9 = Class              #60            // org/apache/commons/compress/MemoryLimitException\n-  #10 = Methodref          #8.#61         // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n-  #11 = Methodref          #8.#62         // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n-  #12 = Methodref          #9.#63         // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n-  #13 = Methodref          #64.#65        // java/io/InputStream.read:()I\n-  #14 = Methodref          #20.#66        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.count:(I)V\n-  #15 = Methodref          #64.#67        // java/io/InputStream.read:([BII)I\n-  #16 = Methodref          #68.#69        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-  #17 = Methodref          #64.#70        // java/io/InputStream.available:()I\n-  #18 = Methodref          #64.#71        // java/io/InputStream.close:()V\n-  #19 = Methodref          #3.#72         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-  #20 = Class              #73            // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #21 = Class              #74            // org/apache/commons/compress/compressors/CompressorInputStream\n-  #22 = Class              #75            // org/apache/commons/compress/utils/InputStreamStatistics\n+   #1 = Methodref          #21.#50        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #2 = Class              #51            // org/tukaani/xz/LZMAInputStream\n+   #3 = Class              #52            // org/apache/commons/compress/utils/CountingInputStream\n+   #4 = Methodref          #3.#53         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #5 = Fieldref           #20.#54        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #6 = Methodref          #2.#55         // org/tukaani/xz/LZMAInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #7 = Fieldref           #20.#56        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.in:Ljava/io/InputStream;\n+   #8 = Class              #57            // org/tukaani/xz/MemoryLimitException\n+   #9 = Class              #58            // org/apache/commons/compress/MemoryLimitException\n+  #10 = Methodref          #8.#59         // org/tukaani/xz/MemoryLimitException.getMemoryNeeded:()I\n+  #11 = Methodref          #8.#60         // org/tukaani/xz/MemoryLimitException.getMemoryLimit:()I\n+  #12 = Methodref          #9.#61         // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JILjava/lang/Exception;)V\n+  #13 = Methodref          #35.#62        // java/io/InputStream.read:()I\n+  #14 = Methodref          #20.#63        // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream.count:(I)V\n+  #15 = Methodref          #35.#64        // java/io/InputStream.read:([BII)I\n+  #16 = Methodref          #65.#66        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #17 = Methodref          #35.#67        // java/io/InputStream.available:()I\n+  #18 = Methodref          #35.#68        // java/io/InputStream.close:()V\n+  #19 = Methodref          #3.#69         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #20 = Class              #70            // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+  #21 = Class              #71            // org/apache/commons/compress/compressors/CompressorInputStream\n+  #22 = Class              #72            // org/apache/commons/compress/utils/InputStreamStatistics\n   #23 = Utf8               countingStream\n   #24 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n   #25 = Utf8               in\n   #26 = Utf8               Ljava/io/InputStream;\n   #27 = Utf8               <init>\n   #28 = Utf8               (Ljava/io/InputStream;)V\n   #29 = Utf8               Code\n   #30 = Utf8               LineNumberTable\n   #31 = Utf8               Exceptions\n-  #32 = Class              #76            // java/io/IOException\n+  #32 = Class              #73            // java/io/IOException\n   #33 = Utf8               (Ljava/io/InputStream;I)V\n   #34 = Utf8               StackMapTable\n-  #35 = Class              #73            // org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #36 = Class              #77            // java/io/InputStream\n-  #37 = Class              #59            // org/tukaani/xz/MemoryLimitException\n-  #38 = Utf8               read\n-  #39 = Utf8               ()I\n-  #40 = Utf8               ([BII)I\n-  #41 = Utf8               skip\n-  #42 = Utf8               (J)J\n-  #43 = Utf8               available\n-  #44 = Utf8               close\n-  #45 = Utf8               ()V\n-  #46 = Utf8               getCompressedCount\n-  #47 = Utf8               ()J\n-  #48 = Utf8               matches\n-  #49 = Utf8               ([BI)Z\n-  #50 = Utf8               SourceFile\n-  #51 = Utf8               LZMACompressorInputStream.java\n-  #52 = NameAndType        #27:#45        // \"<init>\":()V\n-  #53 = Utf8               org/tukaani/xz/LZMAInputStream\n-  #54 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #55 = NameAndType        #27:#28        // \"<init>\":(Ljava/io/InputStream;)V\n-  #56 = NameAndType        #23:#24        // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #57 = NameAndType        #27:#33        // \"<init>\":(Ljava/io/InputStream;I)V\n-  #58 = NameAndType        #25:#26        // in:Ljava/io/InputStream;\n-  #59 = Utf8               org/tukaani/xz/MemoryLimitException\n-  #60 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #61 = NameAndType        #78:#39        // getMemoryNeeded:()I\n-  #62 = NameAndType        #79:#39        // getMemoryLimit:()I\n-  #63 = NameAndType        #27:#80        // \"<init>\":(JILjava/lang/Exception;)V\n-  #64 = Class              #77            // java/io/InputStream\n-  #65 = NameAndType        #38:#39        // read:()I\n-  #66 = NameAndType        #81:#82        // count:(I)V\n-  #67 = NameAndType        #38:#40        // read:([BII)I\n-  #68 = Class              #83            // org/apache/commons/compress/utils/IOUtils\n-  #69 = NameAndType        #41:#84        // skip:(Ljava/io/InputStream;J)J\n-  #70 = NameAndType        #43:#39        // available:()I\n-  #71 = NameAndType        #44:#45        // close:()V\n-  #72 = NameAndType        #85:#47        // getBytesRead:()J\n-  #73 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n-  #74 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #75 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #76 = Utf8               java/io/IOException\n-  #77 = Utf8               java/io/InputStream\n-  #78 = Utf8               getMemoryNeeded\n-  #79 = Utf8               getMemoryLimit\n-  #80 = Utf8               (JILjava/lang/Exception;)V\n-  #81 = Utf8               count\n-  #82 = Utf8               (I)V\n-  #83 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #84 = Utf8               (Ljava/io/InputStream;J)J\n-  #85 = Utf8               getBytesRead\n+  #35 = Class              #74            // java/io/InputStream\n+  #36 = Utf8               read\n+  #37 = Utf8               ()I\n+  #38 = Utf8               ([BII)I\n+  #39 = Utf8               skip\n+  #40 = Utf8               (J)J\n+  #41 = Utf8               available\n+  #42 = Utf8               close\n+  #43 = Utf8               ()V\n+  #44 = Utf8               getCompressedCount\n+  #45 = Utf8               ()J\n+  #46 = Utf8               matches\n+  #47 = Utf8               ([BI)Z\n+  #48 = Utf8               SourceFile\n+  #49 = Utf8               LZMACompressorInputStream.java\n+  #50 = NameAndType        #27:#43        // \"<init>\":()V\n+  #51 = Utf8               org/tukaani/xz/LZMAInputStream\n+  #52 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #53 = NameAndType        #27:#28        // \"<init>\":(Ljava/io/InputStream;)V\n+  #54 = NameAndType        #23:#24        // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #55 = NameAndType        #27:#33        // \"<init>\":(Ljava/io/InputStream;I)V\n+  #56 = NameAndType        #25:#26        // in:Ljava/io/InputStream;\n+  #57 = Utf8               org/tukaani/xz/MemoryLimitException\n+  #58 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #59 = NameAndType        #75:#37        // getMemoryNeeded:()I\n+  #60 = NameAndType        #76:#37        // getMemoryLimit:()I\n+  #61 = NameAndType        #27:#77        // \"<init>\":(JILjava/lang/Exception;)V\n+  #62 = NameAndType        #36:#37        // read:()I\n+  #63 = NameAndType        #78:#79        // count:(I)V\n+  #64 = NameAndType        #36:#38        // read:([BII)I\n+  #65 = Class              #80            // org/apache/commons/compress/utils/IOUtils\n+  #66 = NameAndType        #39:#81        // skip:(Ljava/io/InputStream;J)J\n+  #67 = NameAndType        #41:#37        // available:()I\n+  #68 = NameAndType        #42:#43        // close:()V\n+  #69 = NameAndType        #82:#45        // getBytesRead:()J\n+  #70 = Utf8               org/apache/commons/compress/compressors/lzma/LZMACompressorInputStream\n+  #71 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #72 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #73 = Utf8               java/io/IOException\n+  #74 = Utf8               java/io/InputStream\n+  #75 = Utf8               getMemoryNeeded\n+  #76 = Utf8               getMemoryLimit\n+  #77 = Utf8               (JILjava/lang/Exception;)V\n+  #78 = Utf8               count\n+  #79 = Utf8               (I)V\n+  #80 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #81 = Utf8               (Ljava/io/InputStream;J)J\n+  #82 = Utf8               getBytesRead\n {\n   private final org.apache.commons.compress.utils.CountingInputStream countingStream;\n     descriptor: Lorg/apache/commons/compress/utils/CountingInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n"}]}
