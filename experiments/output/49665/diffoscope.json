{"diffoscope-json-version": 1, "source1": "first/TelnetOptionHandler.class", "source2": "second/TelnetOptionHandler.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,88 @@\n-  SHA-256 checksum c7520650dec35464105f2f44340d3239c7a3923fa83221e0922aa06f87eba669\n+  SHA-256 checksum b4a48cbee8a90d41087895cafc90d8015e8171a9a100d335c34e513b24402262\n   Compiled from \"TelnetOptionHandler.java\"\n public abstract class org.apache.commons.net.telnet.TelnetOptionHandler\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #9                          // org/apache/commons/net/telnet/TelnetOptionHandler\n-  super_class: #10                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/net/telnet/TelnetOptionHandler\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 7, methods: 17, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#61        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #9.#62         // org/apache/commons/net/telnet/TelnetOptionHandler.optionCode:I\n-   #3 = Fieldref           #9.#63         // org/apache/commons/net/telnet/TelnetOptionHandler.initialLocal:Z\n-   #4 = Fieldref           #9.#64         // org/apache/commons/net/telnet/TelnetOptionHandler.initialRemote:Z\n-   #5 = Fieldref           #9.#65         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptLocal:Z\n-   #6 = Fieldref           #9.#66         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptRemote:Z\n-   #7 = Fieldref           #9.#67         // org/apache/commons/net/telnet/TelnetOptionHandler.doFlag:Z\n-   #8 = Fieldref           #9.#68         // org/apache/commons/net/telnet/TelnetOptionHandler.willFlag:Z\n-   #9 = Class              #69            // org/apache/commons/net/telnet/TelnetOptionHandler\n-  #10 = Class              #70            // java/lang/Object\n-  #11 = Utf8               optionCode\n-  #12 = Utf8               I\n-  #13 = Utf8               initialLocal\n-  #14 = Utf8               Z\n-  #15 = Utf8               initialRemote\n-  #16 = Utf8               acceptLocal\n-  #17 = Utf8               acceptRemote\n-  #18 = Utf8               doFlag\n-  #19 = Utf8               willFlag\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (IZZZZ)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               this\n-  #26 = Utf8               Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n-  #27 = Utf8               optcode\n-  #28 = Utf8               initlocal\n-  #29 = Utf8               initremote\n-  #30 = Utf8               acceptlocal\n-  #31 = Utf8               acceptremote\n-  #32 = Utf8               answerSubnegotiation\n-  #33 = Utf8               ([II)[I\n-  #34 = Utf8               suboptionData\n-  #35 = Utf8               [I\n-  #36 = Utf8               suboptionLength\n-  #37 = Utf8               getAcceptLocal\n-  #38 = Utf8               ()Z\n-  #39 = Utf8               getAcceptRemote\n-  #40 = Utf8               getDo\n-  #41 = Utf8               getInitLocal\n-  #42 = Utf8               getInitRemote\n-  #43 = Utf8               getOptionCode\n-  #44 = Utf8               ()I\n-  #45 = Utf8               getWill\n-  #46 = Utf8               setAcceptLocal\n-  #47 = Utf8               (Z)V\n-  #48 = Utf8               accept\n-  #49 = Utf8               setAcceptRemote\n-  #50 = Utf8               setDo\n-  #51 = Utf8               state\n-  #52 = Utf8               setInitLocal\n-  #53 = Utf8               init\n-  #54 = Utf8               setInitRemote\n-  #55 = Utf8               setWill\n-  #56 = Utf8               startSubnegotiationLocal\n-  #57 = Utf8               ()[I\n-  #58 = Utf8               startSubnegotiationRemote\n-  #59 = Utf8               SourceFile\n-  #60 = Utf8               TelnetOptionHandler.java\n-  #61 = NameAndType        #20:#71        // \"<init>\":()V\n-  #62 = NameAndType        #11:#12        // optionCode:I\n-  #63 = NameAndType        #13:#14        // initialLocal:Z\n-  #64 = NameAndType        #15:#14        // initialRemote:Z\n-  #65 = NameAndType        #16:#14        // acceptLocal:Z\n-  #66 = NameAndType        #17:#14        // acceptRemote:Z\n-  #67 = NameAndType        #18:#14        // doFlag:Z\n-  #68 = NameAndType        #19:#14        // willFlag:Z\n-  #69 = Utf8               org/apache/commons/net/telnet/TelnetOptionHandler\n-  #70 = Utf8               java/lang/Object\n-  #71 = Utf8               ()V\n+   #1 = Class              #2             // org/apache/commons/net/telnet/TelnetOptionHandler\n+   #2 = Utf8               org/apache/commons/net/telnet/TelnetOptionHandler\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               optionCode\n+   #6 = Utf8               I\n+   #7 = Utf8               initialLocal\n+   #8 = Utf8               Z\n+   #9 = Utf8               initialRemote\n+  #10 = Utf8               acceptLocal\n+  #11 = Utf8               acceptRemote\n+  #12 = Utf8               doFlag\n+  #13 = Utf8               willFlag\n+  #14 = Utf8               <init>\n+  #15 = Utf8               (IZZZZ)V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/lang/Object.\"<init>\":()V\n+  #18 = NameAndType        #14:#19        // \"<init>\":()V\n+  #19 = Utf8               ()V\n+  #20 = Fieldref           #1.#21         // org/apache/commons/net/telnet/TelnetOptionHandler.optionCode:I\n+  #21 = NameAndType        #5:#6          // optionCode:I\n+  #22 = Fieldref           #1.#23         // org/apache/commons/net/telnet/TelnetOptionHandler.initialLocal:Z\n+  #23 = NameAndType        #7:#8          // initialLocal:Z\n+  #24 = Fieldref           #1.#25         // org/apache/commons/net/telnet/TelnetOptionHandler.initialRemote:Z\n+  #25 = NameAndType        #9:#8          // initialRemote:Z\n+  #26 = Fieldref           #1.#27         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptLocal:Z\n+  #27 = NameAndType        #10:#8         // acceptLocal:Z\n+  #28 = Fieldref           #1.#29         // org/apache/commons/net/telnet/TelnetOptionHandler.acceptRemote:Z\n+  #29 = NameAndType        #11:#8         // acceptRemote:Z\n+  #30 = Utf8               LineNumberTable\n+  #31 = Utf8               LocalVariableTable\n+  #32 = Utf8               this\n+  #33 = Utf8               Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n+  #34 = Utf8               optcode\n+  #35 = Utf8               initlocal\n+  #36 = Utf8               initremote\n+  #37 = Utf8               acceptlocal\n+  #38 = Utf8               acceptremote\n+  #39 = Utf8               answerSubnegotiation\n+  #40 = Utf8               ([II)[I\n+  #41 = Utf8               suboptionData\n+  #42 = Utf8               [I\n+  #43 = Utf8               suboptionLength\n+  #44 = Utf8               getAcceptLocal\n+  #45 = Utf8               ()Z\n+  #46 = Utf8               getAcceptRemote\n+  #47 = Utf8               getDo\n+  #48 = Fieldref           #1.#49         // org/apache/commons/net/telnet/TelnetOptionHandler.doFlag:Z\n+  #49 = NameAndType        #12:#8         // doFlag:Z\n+  #50 = Utf8               getInitLocal\n+  #51 = Utf8               getInitRemote\n+  #52 = Utf8               getOptionCode\n+  #53 = Utf8               ()I\n+  #54 = Utf8               getWill\n+  #55 = Fieldref           #1.#56         // org/apache/commons/net/telnet/TelnetOptionHandler.willFlag:Z\n+  #56 = NameAndType        #13:#8         // willFlag:Z\n+  #57 = Utf8               setAcceptLocal\n+  #58 = Utf8               (Z)V\n+  #59 = Utf8               accept\n+  #60 = Utf8               setAcceptRemote\n+  #61 = Utf8               setDo\n+  #62 = Utf8               state\n+  #63 = Utf8               setInitLocal\n+  #64 = Utf8               init\n+  #65 = Utf8               setInitRemote\n+  #66 = Utf8               setWill\n+  #67 = Utf8               startSubnegotiationLocal\n+  #68 = Utf8               ()[I\n+  #69 = Utf8               startSubnegotiationRemote\n+  #70 = Utf8               SourceFile\n+  #71 = Utf8               TelnetOptionHandler.java\n {\n   private int optionCode;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean initialLocal;\n     descriptor: Z\n@@ -110,33 +110,33 @@\n \n   public org.apache.commons.net.telnet.TelnetOptionHandler(int, boolean, boolean, boolean, boolean);\n     descriptor: (IZZZZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=6, args_size=6\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_m1\n-         6: putfield      #2                  // Field optionCode:I\n+         6: putfield      #20                 // Field optionCode:I\n          9: aload_0\n         10: iload_1\n-        11: putfield      #2                  // Field optionCode:I\n+        11: putfield      #20                 // Field optionCode:I\n         14: aload_0\n         15: iload_2\n-        16: putfield      #3                  // Field initialLocal:Z\n+        16: putfield      #22                 // Field initialLocal:Z\n         19: aload_0\n         20: iload_3\n-        21: putfield      #4                  // Field initialRemote:Z\n+        21: putfield      #24                 // Field initialRemote:Z\n         24: aload_0\n         25: iload         4\n-        27: putfield      #5                  // Field acceptLocal:Z\n+        27: putfield      #26                 // Field acceptLocal:Z\n         30: aload_0\n         31: iload         5\n-        33: putfield      #6                  // Field acceptRemote:Z\n+        33: putfield      #28                 // Field acceptRemote:Z\n         36: return\n       LineNumberTable:\n         line 72: 0\n         line 29: 4\n         line 73: 9\n         line 74: 14\n         line 75: 19\n@@ -169,114 +169,114 @@\n \n   public boolean getAcceptLocal();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field acceptLocal:Z\n+         1: getfield      #26                 // Field acceptLocal:Z\n          4: ireturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   public boolean getAcceptRemote();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field acceptRemote:Z\n+         1: getfield      #28                 // Field acceptRemote:Z\n          4: ireturn\n       LineNumberTable:\n         line 113: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   boolean getDo();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field doFlag:Z\n+         1: getfield      #48                 // Field doFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   public boolean getInitLocal();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field initialLocal:Z\n+         1: getfield      #22                 // Field initialLocal:Z\n          4: ireturn\n       LineNumberTable:\n         line 133: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   public boolean getInitRemote();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field initialRemote:Z\n+         1: getfield      #24                 // Field initialRemote:Z\n          4: ireturn\n       LineNumberTable:\n         line 143: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   public int getOptionCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field optionCode:I\n+         1: getfield      #20                 // Field optionCode:I\n          4: ireturn\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   boolean getWill();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field willFlag:Z\n+         1: getfield      #55                 // Field willFlag:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n \n   public void setAcceptLocal(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field acceptLocal:Z\n+         2: putfield      #26                 // Field acceptLocal:Z\n          5: return\n       LineNumberTable:\n         line 173: 0\n         line 174: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n@@ -285,15 +285,15 @@\n   public void setAcceptRemote(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #6                  // Field acceptRemote:Z\n+         2: putfield      #28                 // Field acceptRemote:Z\n          5: return\n       LineNumberTable:\n         line 183: 0\n         line 184: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n@@ -302,15 +302,15 @@\n   void setDo(boolean);\n     descriptor: (Z)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field doFlag:Z\n+         2: putfield      #48                 // Field doFlag:Z\n          5: return\n       LineNumberTable:\n         line 193: 0\n         line 194: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n@@ -319,15 +319,15 @@\n   public void setInitLocal(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #3                  // Field initialLocal:Z\n+         2: putfield      #22                 // Field initialLocal:Z\n          5: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n@@ -336,15 +336,15 @@\n   public void setInitRemote(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #4                  // Field initialRemote:Z\n+         2: putfield      #24                 // Field initialRemote:Z\n          5: return\n       LineNumberTable:\n         line 213: 0\n         line 214: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n@@ -353,15 +353,15 @@\n   void setWill(boolean);\n     descriptor: (Z)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field willFlag:Z\n+         2: putfield      #55                 // Field willFlag:Z\n          5: return\n       LineNumberTable:\n         line 223: 0\n         line 224: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/net/telnet/TelnetOptionHandler;\n"}]}
