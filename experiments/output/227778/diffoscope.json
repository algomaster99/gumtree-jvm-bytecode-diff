{"diffoscope-json-version": 1, "source1": "first/JavaLanguageParser$SingleLambdaParamContext.class", "source2": "second/JavaLanguageParser$SingleLambdaParamContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,18 +6,18 @@\n \n public static class SingleLambdaParamContext extends JavaLanguageParser.LambdaParametersContext\n {\n     public JavaLanguageParser.IdContext id() {\n         return (JavaLanguageParser.IdContext)this.getRuleContext((Class)JavaLanguageParser.IdContext.class, 0);\n     }\n     \n-    public SingleLambdaParamContext(final JavaLanguageParser.LambdaParametersContext ctx) {\n-        this.copyFrom(ctx);\n+    public SingleLambdaParamContext(final JavaLanguageParser.LambdaParametersContext lambdaParametersContext) {\n+        this.copyFrom(lambdaParametersContext);\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavaLanguageParserVisitor) {\n-            return (T)((JavaLanguageParserVisitor)visitor).visitSingleLambdaParam(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavaLanguageParserVisitor) {\n+            return (T)((JavaLanguageParserVisitor)parseTreeVisitor).visitSingleLambdaParam(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
