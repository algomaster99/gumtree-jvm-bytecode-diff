{"diffoscope-json-version": 1, "source1": "first/LZ77Compressor.class", "source2": "second/LZ77Compressor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,81 +1,81 @@\n-  SHA-256 checksum 08ed227e320559e5b3288614be61d701ee5a93a019c5754630c1fedebdc56d0f\n+  SHA-256 checksum 4eefe901fde137136d6bd535e53e008f472376c271ca78d1e19eb9c89194218d\n   Compiled from \"LZ77Compressor.java\"\n public class org.apache.commons.compress.compressors.lz77support.LZ77Compressor\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n   super_class: #57                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 18, attributes: 2\n Constant pool:\n-    #1 = Class              #129          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-    #2 = Methodref          #57.#130      // java/lang/Object.\"<init>\":()V\n-    #3 = Fieldref           #1.#131       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialized:Z\n-    #4 = Fieldref           #1.#132       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.lookahead:I\n-    #5 = Fieldref           #1.#133       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertHash:I\n-    #6 = Fieldref           #1.#134       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.blockStart:I\n-    #7 = Fieldref           #1.#135       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.matchStart:I\n-    #8 = Fieldref           #1.#136       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.missedInserts:I\n+    #1 = Class              #128          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+    #2 = Methodref          #57.#129      // java/lang/Object.\"<init>\":()V\n+    #3 = Fieldref           #1.#130       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialized:Z\n+    #4 = Fieldref           #1.#131       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.lookahead:I\n+    #5 = Fieldref           #1.#132       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertHash:I\n+    #6 = Fieldref           #1.#133       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.blockStart:I\n+    #7 = Fieldref           #1.#134       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.matchStart:I\n+    #8 = Fieldref           #1.#135       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.missedInserts:I\n     #9 = String             #74           // params\n-   #10 = Methodref          #137.#138     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #10 = Methodref          #136.#137     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n    #11 = String             #76           // callback\n-   #12 = Fieldref           #1.#139       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-   #13 = Fieldref           #1.#140       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-   #14 = Methodref          #141.#142     // org/apache/commons/compress/compressors/lz77support/Parameters.getWindowSize:()I\n-   #15 = Fieldref           #1.#143       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.window:[B\n-   #16 = Fieldref           #1.#144       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.wMask:I\n+   #12 = Fieldref           #1.#138       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #13 = Fieldref           #1.#139       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+   #14 = Methodref          #140.#141     // org/apache/commons/compress/compressors/lz77support/Parameters.getWindowSize:()I\n+   #15 = Fieldref           #1.#142       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.window:[B\n+   #16 = Fieldref           #1.#143       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.wMask:I\n    #17 = Integer            32768\n-   #18 = Fieldref           #1.#145       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.head:[I\n-   #19 = Methodref          #146.#147     // java/util/Arrays.fill:([II)V\n-   #20 = Fieldref           #1.#148       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.prev:[I\n-   #21 = Methodref          #1.#149       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n-   #22 = Methodref          #1.#150       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.doCompress:([BII)V\n-   #23 = Fieldref           #1.#151       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.currentPosition:I\n-   #24 = Methodref          #1.#152       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushLiteralBlock:()V\n-   #25 = Fieldref           #1.#153       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n-   #26 = InterfaceMethodref #58.#154      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback.accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-   #27 = Class              #155          // java/lang/IllegalStateException\n-   #28 = String             #156          // The compressor has already started to accept data, can\\'t prefill anymore\n-   #29 = Methodref          #27.#157      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Methodref          #158.#159     // java/lang/Math.min:(II)I\n-   #31 = Methodref          #160.#161     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #32 = Methodref          #1.#162       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialize:()V\n-   #33 = Methodref          #1.#163       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertString:(I)I\n-   #34 = Methodref          #1.#164       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.slide:()V\n-   #35 = Methodref          #141.#165     // org/apache/commons/compress/compressors/lz77support/Parameters.getMinBackReferenceLength:()I\n-   #36 = Methodref          #1.#166       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:()V\n-   #37 = Methodref          #1.#167       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.nextHash:(IB)I\n-   #38 = Methodref          #141.#168     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatching:()Z\n-   #39 = Methodref          #141.#169     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatchingThreshold:()I\n-   #40 = Methodref          #1.#170       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.catchUpMissedInserts:()V\n-   #41 = Methodref          #141.#171     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxOffset:()I\n-   #42 = Methodref          #1.#172       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatch:(I)I\n-   #43 = Methodref          #1.#173       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatchForNextPosition:(I)I\n-   #44 = Methodref          #1.#174       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushBackReference:(I)V\n-   #45 = Methodref          #1.#175       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertStringsInMatch:(I)V\n-   #46 = Methodref          #141.#176     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxLiteralLength:()I\n-   #47 = Class              #177          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-   #48 = Methodref          #47.#178      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.\"<init>\":(II)V\n-   #49 = Class              #179          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-   #50 = Methodref          #49.#180      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.\"<init>\":([BII)V\n-   #51 = Methodref          #141.#181     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxBackReferenceLength:()I\n-   #52 = Methodref          #158.#182     // java/lang/Math.max:(II)I\n-   #53 = Methodref          #141.#183     // org/apache/commons/compress/compressors/lz77support/Parameters.getNiceBackReferenceLength:()I\n-   #54 = Methodref          #141.#184     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxCandidates:()I\n-   #55 = Class              #185          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n-   #56 = Methodref          #55.#130      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD.\"<init>\":()V\n-   #57 = Class              #186          // java/lang/Object\n-   #58 = Class              #187          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+   #18 = Fieldref           #1.#144       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.head:[I\n+   #19 = Methodref          #145.#146     // java/util/Arrays.fill:([II)V\n+   #20 = Fieldref           #1.#147       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.prev:[I\n+   #21 = Methodref          #1.#148       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n+   #22 = Methodref          #1.#149       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.doCompress:([BII)V\n+   #23 = Fieldref           #1.#150       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.currentPosition:I\n+   #24 = Methodref          #1.#151       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushLiteralBlock:()V\n+   #25 = Fieldref           #1.#152       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n+   #26 = InterfaceMethodref #58.#153      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback.accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+   #27 = Class              #154          // java/lang/IllegalStateException\n+   #28 = String             #155          // The compressor has already started to accept data, can\\'t prefill anymore\n+   #29 = Methodref          #27.#156      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Methodref          #157.#158     // java/lang/Math.min:(II)I\n+   #31 = Methodref          #159.#160     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #32 = Methodref          #1.#161       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.initialize:()V\n+   #33 = Methodref          #1.#162       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertString:(I)I\n+   #34 = Methodref          #1.#163       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.slide:()V\n+   #35 = Methodref          #140.#164     // org/apache/commons/compress/compressors/lz77support/Parameters.getMinBackReferenceLength:()I\n+   #36 = Methodref          #1.#165       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:()V\n+   #37 = Methodref          #1.#166       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.nextHash:(IB)I\n+   #38 = Methodref          #140.#167     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatching:()Z\n+   #39 = Methodref          #140.#168     // org/apache/commons/compress/compressors/lz77support/Parameters.getLazyMatchingThreshold:()I\n+   #40 = Methodref          #1.#169       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.catchUpMissedInserts:()V\n+   #41 = Methodref          #140.#170     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxOffset:()I\n+   #42 = Methodref          #1.#171       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatch:(I)I\n+   #43 = Methodref          #1.#172       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.longestMatchForNextPosition:(I)I\n+   #44 = Methodref          #1.#173       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.flushBackReference:(I)V\n+   #45 = Methodref          #1.#174       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.insertStringsInMatch:(I)V\n+   #46 = Methodref          #140.#175     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxLiteralLength:()I\n+   #47 = Class              #176          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+   #48 = Methodref          #47.#177      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.\"<init>\":(II)V\n+   #49 = Class              #178          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+   #50 = Methodref          #49.#179      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.\"<init>\":([BII)V\n+   #51 = Methodref          #140.#180     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxBackReferenceLength:()I\n+   #52 = Methodref          #157.#181     // java/lang/Math.max:(II)I\n+   #53 = Methodref          #140.#182     // org/apache/commons/compress/compressors/lz77support/Parameters.getNiceBackReferenceLength:()I\n+   #54 = Methodref          #140.#183     // org/apache/commons/compress/compressors/lz77support/Parameters.getMaxCandidates:()I\n+   #55 = Class              #184          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n+   #56 = Methodref          #55.#129      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD.\"<init>\":()V\n+   #57 = Class              #185          // java/lang/Object\n+   #58 = Class              #186          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n    #59 = Utf8               Callback\n    #60 = Utf8               InnerClasses\n    #61 = Utf8               EOD\n    #62 = Utf8               BackReference\n    #63 = Utf8               LiteralBlock\n-   #64 = Class              #188          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+   #64 = Class              #187          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n    #65 = Utf8               Block\n    #66 = Utf8               THE_EOD\n    #67 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n    #68 = Utf8               NUMBER_OF_BYTES_IN_HASH\n    #69 = Utf8               I\n    #70 = Utf8               ConstantValue\n    #71 = Integer            3\n@@ -107,129 +107,128 @@\n    #97 = Utf8               <init>\n    #98 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n    #99 = Utf8               Code\n   #100 = Utf8               LineNumberTable\n   #101 = Utf8               compress\n   #102 = Utf8               ([B)V\n   #103 = Utf8               Exceptions\n-  #104 = Class              #189          // java/io/IOException\n+  #104 = Class              #188          // java/io/IOException\n   #105 = Utf8               ([BII)V\n   #106 = Utf8               StackMapTable\n   #107 = Utf8               finish\n   #108 = Utf8               ()V\n   #109 = Utf8               prefill\n   #110 = Utf8               nextHash\n   #111 = Utf8               (IB)I\n   #112 = Utf8               doCompress\n   #113 = Utf8               slide\n-  #114 = Class              #129          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #115 = Class              #81           // \"[I\"\n-  #116 = Utf8               initialize\n-  #117 = Utf8               insertString\n-  #118 = Utf8               (I)I\n-  #119 = Utf8               longestMatchForNextPosition\n-  #120 = Utf8               insertStringsInMatch\n-  #121 = Utf8               (I)V\n-  #122 = Utf8               catchUpMissedInserts\n-  #123 = Utf8               flushBackReference\n-  #124 = Utf8               flushLiteralBlock\n-  #125 = Utf8               longestMatch\n-  #126 = Utf8               <clinit>\n-  #127 = Utf8               SourceFile\n-  #128 = Utf8               LZ77Compressor.java\n-  #129 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #130 = NameAndType        #97:#108      // \"<init>\":()V\n-  #131 = NameAndType        #84:#85       // initialized:Z\n-  #132 = NameAndType        #87:#69       // lookahead:I\n-  #133 = NameAndType        #88:#69       // insertHash:I\n-  #134 = NameAndType        #89:#69       // blockStart:I\n-  #135 = NameAndType        #90:#69       // matchStart:I\n-  #136 = NameAndType        #91:#69       // missedInserts:I\n-  #137 = Class              #190          // java/util/Objects\n-  #138 = NameAndType        #191:#192     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #139 = NameAndType        #74:#75       // params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #140 = NameAndType        #76:#77       // callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-  #141 = Class              #193          // org/apache/commons/compress/compressors/lz77support/Parameters\n-  #142 = NameAndType        #194:#195     // getWindowSize:()I\n-  #143 = NameAndType        #78:#79       // window:[B\n-  #144 = NameAndType        #83:#69       // wMask:I\n-  #145 = NameAndType        #80:#81       // head:[I\n-  #146 = Class              #196          // java/util/Arrays\n-  #147 = NameAndType        #197:#198     // fill:([II)V\n-  #148 = NameAndType        #82:#81       // prev:[I\n-  #149 = NameAndType        #101:#105     // compress:([BII)V\n-  #150 = NameAndType        #112:#105     // doCompress:([BII)V\n-  #151 = NameAndType        #86:#69       // currentPosition:I\n-  #152 = NameAndType        #124:#108     // flushLiteralBlock:()V\n-  #153 = NameAndType        #66:#67       // THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n-  #154 = NameAndType        #199:#200     // accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #155 = Utf8               java/lang/IllegalStateException\n-  #156 = Utf8               The compressor has already started to accept data, can\\'t prefill anymore\n-  #157 = NameAndType        #97:#201      // \"<init>\":(Ljava/lang/String;)V\n-  #158 = Class              #202          // java/lang/Math\n-  #159 = NameAndType        #203:#204     // min:(II)I\n-  #160 = Class              #205          // java/lang/System\n-  #161 = NameAndType        #206:#207     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #162 = NameAndType        #116:#108     // initialize:()V\n-  #163 = NameAndType        #117:#118     // insertString:(I)I\n-  #164 = NameAndType        #113:#108     // slide:()V\n-  #165 = NameAndType        #208:#195     // getMinBackReferenceLength:()I\n-  #166 = NameAndType        #101:#108     // compress:()V\n-  #167 = NameAndType        #110:#111     // nextHash:(IB)I\n-  #168 = NameAndType        #209:#210     // getLazyMatching:()Z\n-  #169 = NameAndType        #211:#195     // getLazyMatchingThreshold:()I\n-  #170 = NameAndType        #122:#108     // catchUpMissedInserts:()V\n-  #171 = NameAndType        #212:#195     // getMaxOffset:()I\n-  #172 = NameAndType        #125:#118     // longestMatch:(I)I\n-  #173 = NameAndType        #119:#118     // longestMatchForNextPosition:(I)I\n-  #174 = NameAndType        #123:#121     // flushBackReference:(I)V\n-  #175 = NameAndType        #120:#121     // insertStringsInMatch:(I)V\n-  #176 = NameAndType        #213:#195     // getMaxLiteralLength:()I\n-  #177 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-  #178 = NameAndType        #97:#214      // \"<init>\":(II)V\n-  #179 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-  #180 = NameAndType        #97:#105      // \"<init>\":([BII)V\n-  #181 = NameAndType        #215:#195     // getMaxBackReferenceLength:()I\n-  #182 = NameAndType        #216:#204     // max:(II)I\n-  #183 = NameAndType        #217:#195     // getNiceBackReferenceLength:()I\n-  #184 = NameAndType        #218:#195     // getMaxCandidates:()I\n-  #185 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n-  #186 = Utf8               java/lang/Object\n-  #187 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n-  #188 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n-  #189 = Utf8               java/io/IOException\n-  #190 = Utf8               java/util/Objects\n-  #191 = Utf8               requireNonNull\n-  #192 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #193 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n-  #194 = Utf8               getWindowSize\n-  #195 = Utf8               ()I\n-  #196 = Utf8               java/util/Arrays\n-  #197 = Utf8               fill\n-  #198 = Utf8               ([II)V\n-  #199 = Utf8               accept\n-  #200 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #201 = Utf8               (Ljava/lang/String;)V\n-  #202 = Utf8               java/lang/Math\n-  #203 = Utf8               min\n-  #204 = Utf8               (II)I\n-  #205 = Utf8               java/lang/System\n-  #206 = Utf8               arraycopy\n-  #207 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #208 = Utf8               getMinBackReferenceLength\n-  #209 = Utf8               getLazyMatching\n-  #210 = Utf8               ()Z\n-  #211 = Utf8               getLazyMatchingThreshold\n-  #212 = Utf8               getMaxOffset\n-  #213 = Utf8               getMaxLiteralLength\n-  #214 = Utf8               (II)V\n-  #215 = Utf8               getMaxBackReferenceLength\n-  #216 = Utf8               max\n-  #217 = Utf8               getNiceBackReferenceLength\n-  #218 = Utf8               getMaxCandidates\n+  #114 = Class              #81           // \"[I\"\n+  #115 = Utf8               initialize\n+  #116 = Utf8               insertString\n+  #117 = Utf8               (I)I\n+  #118 = Utf8               longestMatchForNextPosition\n+  #119 = Utf8               insertStringsInMatch\n+  #120 = Utf8               (I)V\n+  #121 = Utf8               catchUpMissedInserts\n+  #122 = Utf8               flushBackReference\n+  #123 = Utf8               flushLiteralBlock\n+  #124 = Utf8               longestMatch\n+  #125 = Utf8               <clinit>\n+  #126 = Utf8               SourceFile\n+  #127 = Utf8               LZ77Compressor.java\n+  #128 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  #129 = NameAndType        #97:#108      // \"<init>\":()V\n+  #130 = NameAndType        #84:#85       // initialized:Z\n+  #131 = NameAndType        #87:#69       // lookahead:I\n+  #132 = NameAndType        #88:#69       // insertHash:I\n+  #133 = NameAndType        #89:#69       // blockStart:I\n+  #134 = NameAndType        #90:#69       // matchStart:I\n+  #135 = NameAndType        #91:#69       // missedInserts:I\n+  #136 = Class              #189          // java/util/Objects\n+  #137 = NameAndType        #190:#191     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #138 = NameAndType        #74:#75       // params:Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+  #139 = NameAndType        #76:#77       // callback:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+  #140 = Class              #192          // org/apache/commons/compress/compressors/lz77support/Parameters\n+  #141 = NameAndType        #193:#194     // getWindowSize:()I\n+  #142 = NameAndType        #78:#79       // window:[B\n+  #143 = NameAndType        #83:#69       // wMask:I\n+  #144 = NameAndType        #80:#81       // head:[I\n+  #145 = Class              #195          // java/util/Arrays\n+  #146 = NameAndType        #196:#197     // fill:([II)V\n+  #147 = NameAndType        #82:#81       // prev:[I\n+  #148 = NameAndType        #101:#105     // compress:([BII)V\n+  #149 = NameAndType        #112:#105     // doCompress:([BII)V\n+  #150 = NameAndType        #86:#69       // currentPosition:I\n+  #151 = NameAndType        #123:#108     // flushLiteralBlock:()V\n+  #152 = NameAndType        #66:#67       // THE_EOD:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n+  #153 = NameAndType        #198:#199     // accept:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #154 = Utf8               java/lang/IllegalStateException\n+  #155 = Utf8               The compressor has already started to accept data, can\\'t prefill anymore\n+  #156 = NameAndType        #97:#200      // \"<init>\":(Ljava/lang/String;)V\n+  #157 = Class              #201          // java/lang/Math\n+  #158 = NameAndType        #202:#203     // min:(II)I\n+  #159 = Class              #204          // java/lang/System\n+  #160 = NameAndType        #205:#206     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #161 = NameAndType        #115:#108     // initialize:()V\n+  #162 = NameAndType        #116:#117     // insertString:(I)I\n+  #163 = NameAndType        #113:#108     // slide:()V\n+  #164 = NameAndType        #207:#194     // getMinBackReferenceLength:()I\n+  #165 = NameAndType        #101:#108     // compress:()V\n+  #166 = NameAndType        #110:#111     // nextHash:(IB)I\n+  #167 = NameAndType        #208:#209     // getLazyMatching:()Z\n+  #168 = NameAndType        #210:#194     // getLazyMatchingThreshold:()I\n+  #169 = NameAndType        #121:#108     // catchUpMissedInserts:()V\n+  #170 = NameAndType        #211:#194     // getMaxOffset:()I\n+  #171 = NameAndType        #124:#117     // longestMatch:(I)I\n+  #172 = NameAndType        #118:#117     // longestMatchForNextPosition:(I)I\n+  #173 = NameAndType        #122:#120     // flushBackReference:(I)V\n+  #174 = NameAndType        #119:#120     // insertStringsInMatch:(I)V\n+  #175 = NameAndType        #212:#194     // getMaxLiteralLength:()I\n+  #176 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+  #177 = NameAndType        #97:#213      // \"<init>\":(II)V\n+  #178 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+  #179 = NameAndType        #97:#105      // \"<init>\":([BII)V\n+  #180 = NameAndType        #214:#194     // getMaxBackReferenceLength:()I\n+  #181 = NameAndType        #215:#203     // max:(II)I\n+  #182 = NameAndType        #216:#194     // getNiceBackReferenceLength:()I\n+  #183 = NameAndType        #217:#194     // getMaxCandidates:()I\n+  #184 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$EOD\n+  #185 = Utf8               java/lang/Object\n+  #186 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #187 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+  #188 = Utf8               java/io/IOException\n+  #189 = Utf8               java/util/Objects\n+  #190 = Utf8               requireNonNull\n+  #191 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #192 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+  #193 = Utf8               getWindowSize\n+  #194 = Utf8               ()I\n+  #195 = Utf8               java/util/Arrays\n+  #196 = Utf8               fill\n+  #197 = Utf8               ([II)V\n+  #198 = Utf8               accept\n+  #199 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #200 = Utf8               (Ljava/lang/String;)V\n+  #201 = Utf8               java/lang/Math\n+  #202 = Utf8               min\n+  #203 = Utf8               (II)I\n+  #204 = Utf8               java/lang/System\n+  #205 = Utf8               arraycopy\n+  #206 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #207 = Utf8               getMinBackReferenceLength\n+  #208 = Utf8               getLazyMatching\n+  #209 = Utf8               ()Z\n+  #210 = Utf8               getLazyMatchingThreshold\n+  #211 = Utf8               getMaxOffset\n+  #212 = Utf8               getMaxLiteralLength\n+  #213 = Utf8               (II)V\n+  #214 = Utf8               getMaxBackReferenceLength\n+  #215 = Utf8               max\n+  #216 = Utf8               getNiceBackReferenceLength\n+  #217 = Utf8               getMaxCandidates\n {\n   private static final org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block THE_EOD;\n     descriptor: Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   static final int NUMBER_OF_BYTES_IN_HASH = 3;\n     descriptor: I\n"}]}
