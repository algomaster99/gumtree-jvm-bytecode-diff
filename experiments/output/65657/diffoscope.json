{"diffoscope-json-version": 1, "source1": "first/IntList.class", "source2": "second/IntList.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,15 +31,15 @@\n         this.array[this.lastIndex++] = object;\n         ++this.modCount;\n         return true;\n     }\n     \n     public void add(final int location, final int object) {\n         final int size = this.lastIndex - this.firstIndex;\n-        if (0 < location && location < size) {\n+        if (location > 0 && location < size) {\n             if (this.firstIndex == 0 && this.lastIndex == this.array.length) {\n                 this.growForInsert(location, 1);\n             }\n             else if ((location < size / 2 && this.firstIndex > 0) || this.lastIndex == this.array.length) {\n                 System.arraycopy(this.array, this.firstIndex, this.array, --this.firstIndex, location);\n             }\n             else {\n@@ -74,18 +74,18 @@\n             this.lastIndex = n;\n             this.firstIndex = n;\n             ++this.modCount;\n         }\n     }\n     \n     public int get(final int location) {\n-        if (0 <= location && location < this.lastIndex - this.firstIndex) {\n+        if (location >= 0 && location < this.lastIndex - this.firstIndex) {\n             return this.array[this.firstIndex + location];\n         }\n-        throw new IndexOutOfBoundsException(\"\" + location);\n+        throw new IndexOutOfBoundsException(new StringBuilder().append(location).toString());\n     }\n     \n     private void growAtEnd(final int required) {\n         final int size = this.lastIndex - this.firstIndex;\n         if (this.firstIndex >= required - (this.array.length - this.lastIndex)) {\n             final int newLast = this.lastIndex - this.firstIndex;\n             if (size > 0) {\n@@ -155,29 +155,29 @@\n         System.arraycopy(this.array, this.firstIndex, newArray, newFirst, location);\n         this.firstIndex = newFirst;\n         this.lastIndex = size + increment;\n         this.array = newArray;\n     }\n     \n     public void increment(final int location) {\n-        if (0 > location || location >= this.lastIndex - this.firstIndex) {\n-            throw new IndexOutOfBoundsException(\"\" + location);\n+        if (location < 0 || location >= this.lastIndex - this.firstIndex) {\n+            throw new IndexOutOfBoundsException(new StringBuilder().append(location).toString());\n         }\n         final int[] array = this.array;\n         final int n = this.firstIndex + location;\n         ++array[n];\n     }\n     \n     public boolean isEmpty() {\n         return this.lastIndex == this.firstIndex;\n     }\n     \n     public int remove(final int location) {\n         final int size = this.lastIndex - this.firstIndex;\n-        if (0 > location || location >= size) {\n+        if (location < 0 || location >= size) {\n             throw new IndexOutOfBoundsException();\n         }\n         int result;\n         if (location == size - 1) {\n             final int[] array = this.array;\n             final int lastIndex = this.lastIndex - 1;\n             this.lastIndex = lastIndex;\n"}]}
