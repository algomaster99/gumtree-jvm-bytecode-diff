{"diffoscope-json-version": 1, "source1": "first/NumericEntityEscaper.class", "source2": "second/NumericEntityEscaper.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,38 +17,38 @@\n         this.between = between;\n     }\n     \n     public NumericEntityEscaper() {\n         this(0, Integer.MAX_VALUE, true);\n     }\n     \n-    public static NumericEntityEscaper below(final int codepoint) {\n-        return outsideOf(codepoint, Integer.MAX_VALUE);\n+    public static NumericEntityEscaper below(final int n) {\n+        return outsideOf(n, Integer.MAX_VALUE);\n     }\n     \n-    public static NumericEntityEscaper above(final int codepoint) {\n-        return outsideOf(0, codepoint);\n+    public static NumericEntityEscaper above(final int n) {\n+        return outsideOf(0, n);\n     }\n     \n-    public static NumericEntityEscaper between(final int codepointLow, final int codepointHigh) {\n-        return new NumericEntityEscaper(codepointLow, codepointHigh, true);\n+    public static NumericEntityEscaper between(final int n, final int n2) {\n+        return new NumericEntityEscaper(n, n2, true);\n     }\n     \n-    public static NumericEntityEscaper outsideOf(final int codepointLow, final int codepointHigh) {\n-        return new NumericEntityEscaper(codepointLow, codepointHigh, false);\n+    public static NumericEntityEscaper outsideOf(final int n, final int n2) {\n+        return new NumericEntityEscaper(n, n2, false);\n     }\n     \n-    public boolean translate(final int codepoint, final Writer out) throws IOException {\n+    public boolean translate(final int i, final Writer writer) throws IOException {\n         if (this.between) {\n-            if (codepoint < this.below || codepoint > this.above) {\n+            if (i < this.below || i > this.above) {\n                 return false;\n             }\n         }\n-        else if (codepoint >= this.below && codepoint <= this.above) {\n+        else if (i >= this.below && i <= this.above) {\n             return false;\n         }\n-        out.write(\"&#\");\n-        out.write(Integer.toString(codepoint, 10));\n-        out.write(59);\n+        writer.write(\"&#\");\n+        writer.write(Integer.toString(i, 10));\n+        writer.write(59);\n         return true;\n     }\n }\n"}]}
