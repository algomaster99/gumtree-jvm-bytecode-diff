{"diffoscope-json-version": 1, "source1": "first/IOIterator.class", "source2": "second/IOIterator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,92 +1,92 @@\n-  SHA-256 checksum 37468f22386f4a1b4dd7f78603ada7e886f045cc212d0d5dd2c14e5429469e63\n+  SHA-256 checksum 54626568929df8d4941c45b5c703f6096b02eb0a8ee100a7c79f455e741c2728\n   Compiled from \"IOIterator.java\"\n public interface org.apache.commons.io.function.IOIterator<E extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #10                         // org/apache/commons/io/function/IOIterator\n-  super_class: #11                        // java/lang/Object\n+  this_class: #20                         // org/apache/commons/io/function/IOIterator\n+  super_class: #45                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 7, attributes: 2\n Constant pool:\n-   #1 = Methodref          #49.#50        // org/apache/commons/io/function/IOIteratorAdapter.adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n-   #2 = Class              #51            // org/apache/commons/io/function/UncheckedIOIterator\n-   #3 = Methodref          #2.#52         // org/apache/commons/io/function/UncheckedIOIterator.\"<init>\":(Lorg/apache/commons/io/function/IOIterator;)V\n-   #4 = Methodref          #53.#54        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #5 = InterfaceMethodref #10.#55        // org/apache/commons/io/function/IOIterator.hasNext:()Z\n-   #6 = InterfaceMethodref #10.#56        // org/apache/commons/io/function/IOIterator.next:()Ljava/lang/Object;\n-   #7 = InterfaceMethodref #57.#58        // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n-   #8 = InterfaceMethodref #10.#59        // org/apache/commons/io/function/IOIterator.unwrap:()Ljava/util/Iterator;\n-   #9 = InterfaceMethodref #60.#61        // java/util/Iterator.remove:()V\n-  #10 = Class              #62            // org/apache/commons/io/function/IOIterator\n-  #11 = Class              #63            // java/lang/Object\n-  #12 = Utf8               adapt\n-  #13 = Utf8               (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIterator;\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               LocalVariableTable\n-  #17 = Utf8               iterator\n-  #18 = Utf8               Ljava/util/Iterator;\n-  #19 = Utf8               LocalVariableTypeTable\n-  #20 = Utf8               Ljava/util/Iterator<TE;>;\n-  #21 = Utf8               Signature\n-  #22 = Utf8               <E:Ljava/lang/Object;>(Ljava/util/Iterator<TE;>;)Lorg/apache/commons/io/function/IOIterator<TE;>;\n-  #23 = Utf8               asIterator\n-  #24 = Utf8               ()Ljava/util/Iterator;\n-  #25 = Utf8               this\n-  #26 = Utf8               Lorg/apache/commons/io/function/IOIterator;\n-  #27 = Utf8               Lorg/apache/commons/io/function/IOIterator<TE;>;\n-  #28 = Utf8               ()Ljava/util/Iterator<TE;>;\n-  #29 = Utf8               forEachRemaining\n-  #30 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)V\n-  #31 = Utf8               action\n-  #32 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n-  #33 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TE;>;\n-  #34 = Utf8               StackMapTable\n-  #35 = Utf8               Exceptions\n-  #36 = Class              #64            // java/io/IOException\n-  #37 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TE;>;)V\n-  #38 = Utf8               hasNext\n-  #39 = Utf8               ()Z\n-  #40 = Utf8               next\n-  #41 = Utf8               ()Ljava/lang/Object;\n-  #42 = Utf8               ()TE;\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/function/IOIteratorAdapter.adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+   #2 = Class              #4             // org/apache/commons/io/function/IOIteratorAdapter\n+   #3 = NameAndType        #5:#6          // adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+   #4 = Utf8               org/apache/commons/io/function/IOIteratorAdapter\n+   #5 = Utf8               adapt\n+   #6 = Utf8               (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n+   #7 = Class              #8             // org/apache/commons/io/function/UncheckedIOIterator\n+   #8 = Utf8               org/apache/commons/io/function/UncheckedIOIterator\n+   #9 = Methodref          #7.#10         // org/apache/commons/io/function/UncheckedIOIterator.\"<init>\":(Lorg/apache/commons/io/function/IOIterator;)V\n+  #10 = NameAndType        #11:#12        // \"<init>\":(Lorg/apache/commons/io/function/IOIterator;)V\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Lorg/apache/commons/io/function/IOIterator;)V\n+  #13 = Methodref          #14.#15        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #14 = Class              #16            // java/util/Objects\n+  #15 = NameAndType        #17:#18        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #16 = Utf8               java/util/Objects\n+  #17 = Utf8               requireNonNull\n+  #18 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #19 = InterfaceMethodref #20.#21        // org/apache/commons/io/function/IOIterator.hasNext:()Z\n+  #20 = Class              #22            // org/apache/commons/io/function/IOIterator\n+  #21 = NameAndType        #23:#24        // hasNext:()Z\n+  #22 = Utf8               org/apache/commons/io/function/IOIterator\n+  #23 = Utf8               hasNext\n+  #24 = Utf8               ()Z\n+  #25 = InterfaceMethodref #20.#26        // org/apache/commons/io/function/IOIterator.next:()Ljava/lang/Object;\n+  #26 = NameAndType        #27:#28        // next:()Ljava/lang/Object;\n+  #27 = Utf8               next\n+  #28 = Utf8               ()Ljava/lang/Object;\n+  #29 = InterfaceMethodref #30.#31        // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+  #30 = Class              #32            // org/apache/commons/io/function/IOConsumer\n+  #31 = NameAndType        #33:#34        // accept:(Ljava/lang/Object;)V\n+  #32 = Utf8               org/apache/commons/io/function/IOConsumer\n+  #33 = Utf8               accept\n+  #34 = Utf8               (Ljava/lang/Object;)V\n+  #35 = InterfaceMethodref #20.#36        // org/apache/commons/io/function/IOIterator.unwrap:()Ljava/util/Iterator;\n+  #36 = NameAndType        #37:#38        // unwrap:()Ljava/util/Iterator;\n+  #37 = Utf8               unwrap\n+  #38 = Utf8               ()Ljava/util/Iterator;\n+  #39 = InterfaceMethodref #40.#41        // java/util/Iterator.remove:()V\n+  #40 = Class              #42            // java/util/Iterator\n+  #41 = NameAndType        #43:#44        // remove:()V\n+  #42 = Utf8               java/util/Iterator\n   #43 = Utf8               remove\n   #44 = Utf8               ()V\n-  #45 = Utf8               unwrap\n-  #46 = Utf8               <E:Ljava/lang/Object;>Ljava/lang/Object;\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               IOIterator.java\n-  #49 = Class              #65            // org/apache/commons/io/function/IOIteratorAdapter\n-  #50 = NameAndType        #12:#66        // adapt:(Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n-  #51 = Utf8               org/apache/commons/io/function/UncheckedIOIterator\n-  #52 = NameAndType        #67:#68        // \"<init>\":(Lorg/apache/commons/io/function/IOIterator;)V\n-  #53 = Class              #69            // java/util/Objects\n-  #54 = NameAndType        #70:#71        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #55 = NameAndType        #38:#39        // hasNext:()Z\n-  #56 = NameAndType        #40:#41        // next:()Ljava/lang/Object;\n-  #57 = Class              #72            // org/apache/commons/io/function/IOConsumer\n-  #58 = NameAndType        #73:#74        // accept:(Ljava/lang/Object;)V\n-  #59 = NameAndType        #45:#24        // unwrap:()Ljava/util/Iterator;\n-  #60 = Class              #75            // java/util/Iterator\n-  #61 = NameAndType        #43:#44        // remove:()V\n-  #62 = Utf8               org/apache/commons/io/function/IOIterator\n-  #63 = Utf8               java/lang/Object\n-  #64 = Utf8               java/io/IOException\n-  #65 = Utf8               org/apache/commons/io/function/IOIteratorAdapter\n-  #66 = Utf8               (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIteratorAdapter;\n-  #67 = Utf8               <init>\n-  #68 = Utf8               (Lorg/apache/commons/io/function/IOIterator;)V\n-  #69 = Utf8               java/util/Objects\n-  #70 = Utf8               requireNonNull\n-  #71 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #72 = Utf8               org/apache/commons/io/function/IOConsumer\n-  #73 = Utf8               accept\n-  #74 = Utf8               (Ljava/lang/Object;)V\n-  #75 = Utf8               java/util/Iterator\n+  #45 = Class              #46            // java/lang/Object\n+  #46 = Utf8               java/lang/Object\n+  #47 = Utf8               (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIterator;\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               LocalVariableTable\n+  #51 = Utf8               iterator\n+  #52 = Utf8               Ljava/util/Iterator;\n+  #53 = Utf8               LocalVariableTypeTable\n+  #54 = Utf8               Ljava/util/Iterator<TE;>;\n+  #55 = Utf8               Signature\n+  #56 = Utf8               <E:Ljava/lang/Object;>(Ljava/util/Iterator<TE;>;)Lorg/apache/commons/io/function/IOIterator<TE;>;\n+  #57 = Utf8               asIterator\n+  #58 = Utf8               this\n+  #59 = Utf8               Lorg/apache/commons/io/function/IOIterator;\n+  #60 = Utf8               Lorg/apache/commons/io/function/IOIterator<TE;>;\n+  #61 = Utf8               ()Ljava/util/Iterator<TE;>;\n+  #62 = Utf8               forEachRemaining\n+  #63 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)V\n+  #64 = Utf8               action\n+  #65 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n+  #66 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TE;>;\n+  #67 = Utf8               StackMapTable\n+  #68 = Utf8               Exceptions\n+  #69 = Class              #70            // java/io/IOException\n+  #70 = Utf8               java/io/IOException\n+  #71 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TE;>;)V\n+  #72 = Utf8               ()TE;\n+  #73 = Utf8               <E:Ljava/lang/Object;>Ljava/lang/Object;\n+  #74 = Utf8               SourceFile\n+  #75 = Utf8               IOIterator.java\n {\n   public static <E extends java.lang.Object> org.apache.commons.io.function.IOIterator<E> adapt(java.util.Iterator<E>);\n     descriptor: (Ljava/util/Iterator;)Lorg/apache/commons/io/function/IOIterator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -96,51 +96,51 @@\n         line 43: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 iterator   Ljava/util/Iterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 iterator   Ljava/util/Iterator<TE;>;\n-    Signature: #22                          // <E:Ljava/lang/Object;>(Ljava/util/Iterator<TE;>;)Lorg/apache/commons/io/function/IOIterator<TE;>;\n+    Signature: #56                          // <E:Ljava/lang/Object;>(Ljava/util/Iterator<TE;>;)Lorg/apache/commons/io/function/IOIterator<TE;>;\n \n   public default java.util.Iterator<E> asIterator();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #2                  // class org/apache/commons/io/function/UncheckedIOIterator\n+         0: new           #7                  // class org/apache/commons/io/function/UncheckedIOIterator\n          3: dup\n          4: aload_0\n-         5: invokespecial #3                  // Method org/apache/commons/io/function/UncheckedIOIterator.\"<init>\":(Lorg/apache/commons/io/function/IOIterator;)V\n+         5: invokespecial #9                  // Method org/apache/commons/io/function/UncheckedIOIterator.\"<init>\":(Lorg/apache/commons/io/function/IOIterator;)V\n          8: areturn\n       LineNumberTable:\n         line 53: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/function/IOIterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/function/IOIterator<TE;>;\n-    Signature: #28                          // ()Ljava/util/Iterator<TE;>;\n+    Signature: #61                          // ()Ljava/util/Iterator<TE;>;\n \n   public default void forEachRemaining(org.apache.commons.io.function.IOConsumer<? super E>) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n-         6: invokeinterface #5,  1            // InterfaceMethod hasNext:()Z\n+         6: invokeinterface #19,  1           // InterfaceMethod hasNext:()Z\n         11: ifeq          29\n         14: aload_1\n         15: aload_0\n-        16: invokeinterface #6,  1            // InterfaceMethod next:()Ljava/lang/Object;\n-        21: invokeinterface #7,  2            // InterfaceMethod org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+        16: invokeinterface #25,  1           // InterfaceMethod next:()Ljava/lang/Object;\n+        21: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n         26: goto          5\n         29: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 5\n         line 65: 14\n         line 67: 29\n@@ -153,37 +153,37 @@\n             0      30     0  this   Lorg/apache/commons/io/function/IOIterator<TE;>;\n             0      30     1 action   Lorg/apache/commons/io/function/IOConsumer<-TE;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 5 /* same */\n         frame_type = 23 /* same */\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #37                          // (Lorg/apache/commons/io/function/IOConsumer<-TE;>;)V\n+    Signature: #71                          // (Lorg/apache/commons/io/function/IOConsumer<-TE;>;)V\n \n   public abstract boolean hasNext() throws java.io.IOException;\n     descriptor: ()Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   public abstract E next() throws java.io.IOException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #42                          // ()TE;\n+    Signature: #72                          // ()TE;\n \n   public default void remove() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #8,  1            // InterfaceMethod unwrap:()Ljava/util/Iterator;\n-         6: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.remove:()V\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Iterator;\n+         6: invokeinterface #39,  1           // InterfaceMethod java/util/Iterator.remove:()V\n         11: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOIterator;\n@@ -192,11 +192,11 @@\n             0      12     0  this   Lorg/apache/commons/io/function/IOIterator<TE;>;\n     Exceptions:\n       throws java.io.IOException\n \n   public abstract java.util.Iterator<E> unwrap();\n     descriptor: ()Ljava/util/Iterator;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #28                          // ()Ljava/util/Iterator<TE;>;\n+    Signature: #61                          // ()Ljava/util/Iterator<TE;>;\n }\n-Signature: #46                          // <E:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #73                          // <E:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"IOIterator.java\"\n"}]}
