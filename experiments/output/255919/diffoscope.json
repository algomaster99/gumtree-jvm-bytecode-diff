{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Union.class", "source2": "second/NewAttributeBands$Union.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,92 +11,88 @@\n {\n     private final NewAttributeBands.Integral unionTag;\n     private final List unionCases;\n     private final List defaultCaseBody;\n     private int[] caseCounts;\n     private int defaultCount;\n     \n-    public Union(final NewAttributeBands this$0, final String tag, final List unionCases, final List body) {\n+    public Union(final NewAttributeBands this$0, final String s, final List unionCases, final List defaultCaseBody) {\n         super(this.this$0 = this$0, (NewAttributeBands.NewAttributeBands$1)null);\n-        this.unionTag = new NewAttributeBands.Integral(this$0, tag);\n+        this.unionTag = new NewAttributeBands.Integral(this$0, s);\n         this.unionCases = unionCases;\n-        this.defaultCaseBody = body;\n+        this.defaultCaseBody = defaultCaseBody;\n     }\n     \n-    public void readBands(final InputStream in, final int count) throws IOException, Pack200Exception {\n-        this.unionTag.readBands(in, count);\n-        final int[] values = NewAttributeBands.Integral.access$600(this.unionTag);\n+    public void readBands(final InputStream inputStream, final int n) throws IOException, Pack200Exception {\n+        this.unionTag.readBands(inputStream, n);\n+        final int[] access$600 = NewAttributeBands.Integral.access$600(this.unionTag);\n         this.caseCounts = new int[this.unionCases.size()];\n         for (int i = 0; i < this.caseCounts.length; ++i) {\n             final NewAttributeBands.UnionCase unionCase = (NewAttributeBands.UnionCase)this.unionCases.get(i);\n-            for (int j = 0; j < values.length; ++j) {\n-                if (unionCase.hasTag((long)values[j])) {\n+            for (int j = 0; j < access$600.length; ++j) {\n+                if (unionCase.hasTag((long)access$600[j])) {\n                     final int[] caseCounts = this.caseCounts;\n-                    final int n = i;\n-                    ++caseCounts[n];\n+                    final int n2 = i;\n+                    ++caseCounts[n2];\n                 }\n             }\n-            unionCase.readBands(in, this.caseCounts[i]);\n+            unionCase.readBands(inputStream, this.caseCounts[i]);\n         }\n-        for (int i = 0; i < values.length; ++i) {\n-            boolean found = false;\n-            for (int it = 0; it < this.unionCases.size(); ++it) {\n-                final NewAttributeBands.UnionCase unionCase2 = (NewAttributeBands.UnionCase)this.unionCases.get(it);\n-                if (unionCase2.hasTag((long)values[i])) {\n-                    found = true;\n+        for (int k = 0; k < access$600.length; ++k) {\n+            boolean b = false;\n+            for (int l = 0; l < this.unionCases.size(); ++l) {\n+                if (((NewAttributeBands.UnionCase)this.unionCases.get(l)).hasTag((long)access$600[k])) {\n+                    b = true;\n                 }\n             }\n-            if (!found) {\n+            if (!b) {\n                 ++this.defaultCount;\n             }\n         }\n         if (this.defaultCaseBody != null) {\n-            for (int i = 0; i < this.defaultCaseBody.size(); ++i) {\n-                final NewAttributeBands.LayoutElement element = (NewAttributeBands.LayoutElement)this.defaultCaseBody.get(i);\n-                element.readBands(in, this.defaultCount);\n+            for (int n3 = 0; n3 < this.defaultCaseBody.size(); ++n3) {\n+                ((NewAttributeBands.LayoutElement)this.defaultCaseBody.get(n3)).readBands(inputStream, this.defaultCount);\n             }\n         }\n     }\n     \n-    public void addToAttribute(final int n, final NewAttribute attribute) {\n-        this.unionTag.addToAttribute(n, attribute);\n-        int offset = 0;\n-        final int[] tagBand = NewAttributeBands.Integral.access$600(this.unionTag);\n-        final long tag = this.unionTag.getValue(n);\n-        boolean defaultCase = true;\n+    public void addToAttribute(final int n, final NewAttribute newAttribute) {\n+        this.unionTag.addToAttribute(n, newAttribute);\n+        int n2 = 0;\n+        final int[] access$600 = NewAttributeBands.Integral.access$600(this.unionTag);\n+        final long value = this.unionTag.getValue(n);\n+        boolean b = true;\n         for (int i = 0; i < this.unionCases.size(); ++i) {\n-            final NewAttributeBands.UnionCase element = (NewAttributeBands.UnionCase)this.unionCases.get(i);\n-            if (element.hasTag(tag)) {\n-                defaultCase = false;\n+            final NewAttributeBands.UnionCase unionCase = (NewAttributeBands.UnionCase)this.unionCases.get(i);\n+            if (unionCase.hasTag(value)) {\n+                b = false;\n                 for (int j = 0; j < n; ++j) {\n-                    if (element.hasTag((long)tagBand[j])) {\n-                        ++offset;\n+                    if (unionCase.hasTag((long)access$600[j])) {\n+                        ++n2;\n                     }\n                 }\n-                element.addToAttribute(offset, attribute);\n+                unionCase.addToAttribute(n2, newAttribute);\n             }\n         }\n-        if (defaultCase) {\n-            int defaultOffset = 0;\n+        if (b) {\n+            int n3 = 0;\n             for (int k = 0; k < n; ++k) {\n-                boolean found = false;\n+                boolean b2 = false;\n                 for (int l = 0; l < this.unionCases.size(); ++l) {\n-                    final NewAttributeBands.UnionCase element2 = (NewAttributeBands.UnionCase)this.unionCases.get(l);\n-                    if (element2.hasTag((long)tagBand[k])) {\n-                        found = true;\n+                    if (((NewAttributeBands.UnionCase)this.unionCases.get(l)).hasTag((long)access$600[k])) {\n+                        b2 = true;\n                     }\n                 }\n-                if (!found) {\n-                    ++defaultOffset;\n+                if (!b2) {\n+                    ++n3;\n                 }\n             }\n             if (this.defaultCaseBody != null) {\n-                for (int m = 0; m < this.defaultCaseBody.size(); ++m) {\n-                    final NewAttributeBands.LayoutElement element3 = (NewAttributeBands.LayoutElement)this.defaultCaseBody.get(m);\n-                    element3.addToAttribute(defaultOffset, attribute);\n+                for (int n4 = 0; n4 < this.defaultCaseBody.size(); ++n4) {\n+                    ((NewAttributeBands.LayoutElement)this.defaultCaseBody.get(n4)).addToAttribute(n3, newAttribute);\n                 }\n             }\n         }\n     }\n     \n     public NewAttributeBands.Integral getUnionTag() {\n         return this.unionTag;\n"}]}
