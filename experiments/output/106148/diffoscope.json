{"diffoscope-json-version": 1, "source1": "first/FileFilterUtils.class", "source2": "second/FileFilterUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -22,14 +22,19 @@\n import java.util.Date;\n \n public class FileFilterUtils\n {\n     private static final IOFileFilter CVS_FILTER;\n     private static final IOFileFilter SVN_FILTER;\n     \n+    static {\n+        CVS_FILTER = notFileFilter(and(directoryFileFilter(), nameFileFilter(\"CVS\")));\n+        SVN_FILTER = notFileFilter(and(directoryFileFilter(), nameFileFilter(\".svn\")));\n+    }\n+    \n     public static IOFileFilter ageFileFilter(final Date cutoffDate) {\n         return (IOFileFilter)new AgeFileFilter(cutoffDate);\n     }\n     \n     public static IOFileFilter ageFileFilter(final Date cutoffDate, final boolean acceptOlder) {\n         return (IOFileFilter)new AgeFileFilter(cutoffDate, acceptOlder);\n     }\n@@ -93,15 +98,14 @@\n     \n     private static <R, A> R filterFiles(final IOFileFilter filter, final Stream<File> stream, final Collector<? super File, A, R> collector) {\n         Objects.requireNonNull(filter, \"filter\");\n         Objects.requireNonNull(collector, \"collector\");\n         if (stream == null) {\n             return Stream.empty().collect((Collector<? super Object, A, R>)collector);\n         }\n-        Objects.requireNonNull(filter);\n         return stream.filter(filter::accept).collect(collector);\n     }\n     \n     public static List<File> filterList(final IOFileFilter filter, final File... files) {\n         return Arrays.asList(filter(filter, files));\n     }\n     \n@@ -215,13 +219,8 @@\n     public static List<IOFileFilter> toList(final IOFileFilter... filters) {\n         return Stream.of((Object[])(T[])Objects.requireNonNull((T[])filters, \"filters\")).map((Function<? super Object, ?>)Objects::requireNonNull).collect((Collector<? super Object, ?, List<IOFileFilter>>)Collectors.toList());\n     }\n     \n     public static IOFileFilter trueFileFilter() {\n         return TrueFileFilter.TRUE;\n     }\n-    \n-    static {\n-        CVS_FILTER = notFileFilter(and(directoryFileFilter(), nameFileFilter(\"CVS\")));\n-        SVN_FILTER = notFileFilter(and(directoryFileFilter(), nameFileFilter(\".svn\")));\n-    }\n }\n"}]}
