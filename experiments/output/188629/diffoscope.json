{"diffoscope-json-version": 1, "source1": "first/FramedSnappyCompressorInputStream.class", "source2": "second/FramedSnappyCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,354 +1,354 @@\n-  SHA-256 checksum 94aa84ed4ea239a32e91d58ae1dfc024d3fe683fea2a5fe70a5734cae0b76c87\n+  SHA-256 checksum 48dfd9e9912169e3dd7e0951ad622f2b8bbbae3c152e1dfb637347af91f35290\n   Compiled from \"FramedSnappyCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #51                         // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-  super_class: #96                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #8                          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+  super_class: #20                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 22, methods: 19, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #155.#193     // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-    #2 = Methodref          #51.#194      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-    #3 = Class              #195          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-    #4 = Integer            32768\n-    #5 = Methodref          #51.#196      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-    #6 = Methodref          #96.#197      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #7 = Fieldref           #51.#198      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.oneByte:[B\n-    #8 = Long               -1l\n-   #10 = Fieldref           #51.#199      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.expectedChecksum:J\n-   #11 = Class              #200          // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n-   #12 = Methodref          #11.#197      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n-   #13 = Fieldref           #51.#201      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-   #14 = InvokeDynamic      #0:#206       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #15 = Fieldref           #51.#207      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #16 = Class              #208          // java/lang/IllegalArgumentException\n-   #17 = String             #209          // blockSize must be bigger than 0\n-   #18 = Methodref          #16.#210      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Class              #211          // org/apache/commons/compress/utils/CountingInputStream\n-   #20 = Methodref          #19.#212      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #21 = Fieldref           #51.#213      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #22 = Class              #214          // java/io/PushbackInputStream\n-   #23 = Methodref          #22.#215      // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #24 = Fieldref           #51.#216      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inputStream:Ljava/io/PushbackInputStream;\n-   #25 = Fieldref           #51.#217      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.blockSize:I\n-   #26 = Fieldref           #51.#218      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-   #27 = Methodref          #155.#219     // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n-   #28 = Methodref          #51.#220      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readStreamIdentifier:()V\n-   #29 = Methodref          #51.#221      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.read:([BII)I\n-   #30 = Fieldref           #51.#222      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-   #31 = Methodref          #3.#223       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n-   #32 = Methodref          #22.#223      // java/io/PushbackInputStream.close:()V\n-   #33 = Methodref          #51.#224      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOnce:([BII)I\n-   #34 = Methodref          #51.#225      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readNextBlock:()V\n-   #35 = Fieldref           #51.#226      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.endReached:Z\n-   #36 = Fieldref           #51.#227      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inUncompressedChunk:Z\n-   #37 = Fieldref           #51.#228      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.uncompressedBytesRemaining:I\n-   #38 = Methodref          #22.#229      // java/io/PushbackInputStream.available:()I\n-   #39 = Methodref          #230.#231     // java/lang/Math.min:(II)I\n-   #40 = Methodref          #3.#229       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n-   #41 = Methodref          #19.#232      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #42 = Fieldref           #51.#233      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unreadBytes:J\n-   #43 = Methodref          #22.#221      // java/io/PushbackInputStream.read:([BII)I\n-   #44 = Methodref          #51.#234      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(I)V\n-   #45 = Methodref          #3.#232       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n-   #46 = Methodref          #3.#221       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n-   #47 = Methodref          #51.#235      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(J)V\n-   #48 = Methodref          #11.#236      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n-   #49 = Methodref          #51.#237      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.verifyLastChecksumAndReset:()V\n-   #50 = Methodref          #51.#238      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n-   #51 = Class              #239          // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-   #52 = Methodref          #22.#240      // java/io/PushbackInputStream.unread:(I)V\n-   #53 = Methodref          #51.#241      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.pushedBackBytes:(J)V\n-   #54 = Methodref          #51.#242      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.skipBlock:()V\n-   #55 = Class              #243          // java/io/IOException\n-   #56 = Class              #244          // java/lang/StringBuilder\n-   #57 = Methodref          #56.#197      // java/lang/StringBuilder.\"<init>\":()V\n-   #58 = String             #245          // Unskippable chunk with type\n-   #59 = Methodref          #56.#246      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #60 = Methodref          #56.#247      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #61 = String             #248          //  (hex\n-   #62 = Methodref          #249.#250     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-   #63 = String             #251          // ) detected.\n-   #64 = Methodref          #56.#252      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #65 = Methodref          #55.#210      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #66 = Methodref          #51.#253      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readSize:()I\n-   #67 = String             #254          // Found illegal chunk with negative size\n-   #68 = Methodref          #51.#255      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readCrc:()J\n-   #69 = Methodref          #51.#256      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unmask:(J)J\n-   #70 = Methodref          #155.#257     // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n-   #71 = Long               4l\n-   #73 = Class              #258          // org/apache/commons/compress/utils/BoundedInputStream\n-   #74 = Methodref          #73.#259      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #75 = Methodref          #3.#215       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #76 = String             #260          // Unknown chunk type\n-   #77 = String             #261          //  detected.\n-   #78 = Methodref          #262.#263     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #79 = String             #264          // Premature end of stream\n-   #80 = Methodref          #265.#266     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #81 = Long               2726488792l\n-   #83 = Long               4294967295l\n-   #85 = Methodref          #265.#267     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #86 = Methodref          #262.#268     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #87 = Methodref          #51.#269      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n-   #88 = String             #270          // Not a framed Snappy stream\n-   #89 = Methodref          #22.#271      // java/io/PushbackInputStream.read:()I\n-   #90 = Methodref          #11.#272      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n-   #91 = String             #273          // Checksum verification failed\n-   #92 = Methodref          #11.#274      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n-   #93 = Fieldref           #51.#275      // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n-   #94 = Methodref          #276.#277     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #95 = Methodref          #278.#279     // java/util/Arrays.equals:([B[B)Z\n-   #96 = Class              #280          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #97 = Class              #281          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #98 = Utf8               MASK_OFFSET\n-   #99 = Utf8               J\n-  #100 = Utf8               ConstantValue\n-  #101 = Utf8               STREAM_IDENTIFIER_TYPE\n-  #102 = Utf8               I\n-  #103 = Integer            255\n-  #104 = Utf8               COMPRESSED_CHUNK_TYPE\n-  #105 = Integer            0\n-  #106 = Utf8               UNCOMPRESSED_CHUNK_TYPE\n-  #107 = Integer            1\n-  #108 = Utf8               PADDING_CHUNK_TYPE\n-  #109 = Integer            254\n-  #110 = Utf8               MIN_UNSKIPPABLE_TYPE\n-  #111 = Integer            2\n-  #112 = Utf8               MAX_UNSKIPPABLE_TYPE\n-  #113 = Integer            127\n-  #114 = Utf8               MAX_SKIPPABLE_TYPE\n-  #115 = Integer            253\n-  #116 = Utf8               SZ_SIGNATURE\n-  #117 = Utf8               [B\n-  #118 = Utf8               unreadBytes\n-  #119 = Utf8               countingStream\n-  #120 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #121 = Utf8               inputStream\n-  #122 = Utf8               Ljava/io/PushbackInputStream;\n-  #123 = Utf8               dialect\n-  #124 = Utf8               Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-  #125 = Utf8               currentCompressedChunk\n-  #126 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-  #127 = Utf8               oneByte\n-  #128 = Utf8               endReached\n-  #129 = Utf8               Z\n-  #130 = Utf8               inUncompressedChunk\n-  #131 = Utf8               uncompressedBytesRemaining\n-  #132 = Utf8               expectedChecksum\n-  #133 = Utf8               blockSize\n-  #134 = Utf8               checksum\n-  #135 = Utf8               Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-  #136 = Utf8               supplier\n-  #137 = Class              #282          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #138 = Utf8               ByteSupplier\n-  #139 = Utf8               InnerClasses\n-  #140 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #141 = Utf8               <init>\n-  #142 = Utf8               (Ljava/io/InputStream;)V\n-  #143 = Utf8               Code\n-  #144 = Utf8               LineNumberTable\n-  #145 = Utf8               LocalVariableTable\n-  #146 = Utf8               this\n-  #147 = Utf8               Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;\n-  #148 = Utf8               in\n-  #149 = Utf8               Ljava/io/InputStream;\n-  #150 = Utf8               Exceptions\n-  #151 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #152 = Utf8               (Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #153 = Utf8               StackMapTable\n-  #154 = Class              #283          // java/io/InputStream\n-  #155 = Class              #284          // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n-  #156 = Utf8               read\n-  #157 = Utf8               ()I\n-  #158 = Utf8               close\n-  #159 = Utf8               ()V\n-  #160 = Class              #285          // java/lang/Throwable\n-  #161 = Utf8               ([BII)I\n-  #162 = Utf8               b\n-  #163 = Utf8               off\n-  #164 = Utf8               len\n-  #165 = Utf8               available\n-  #166 = Utf8               getCompressedCount\n-  #167 = Utf8               ()J\n-  #168 = Utf8               readOnce\n-  #169 = Utf8               amount\n-  #170 = Utf8               before\n-  #171 = Utf8               readNextBlock\n-  #172 = Utf8               expectChecksum\n-  #173 = Utf8               size\n-  #174 = Utf8               type\n-  #175 = Utf8               readCrc\n-  #176 = Class              #117          // \"[B\"\n-  #177 = Utf8               unmask\n-  #178 = Utf8               (J)J\n-  #179 = Utf8               x\n-  #180 = Utf8               readSize\n-  #181 = Utf8               skipBlock\n-  #182 = Utf8               readStreamIdentifier\n-  #183 = Utf8               readOneByte\n-  #184 = Utf8               verifyLastChecksumAndReset\n-  #185 = Utf8               matches\n-  #186 = Utf8               ([BI)Z\n-  #187 = Utf8               signature\n-  #188 = Utf8               length\n-  #189 = Utf8               shortenedSig\n-  #190 = Utf8               <clinit>\n-  #191 = Utf8               SourceFile\n-  #192 = Utf8               FramedSnappyCompressorInputStream.java\n-  #193 = NameAndType        #286:#124     // STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-  #194 = NameAndType        #141:#151     // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #195 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #196 = NameAndType        #141:#152     // \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n-  #197 = NameAndType        #141:#159     // \"<init>\":()V\n-  #198 = NameAndType        #127:#117     // oneByte:[B\n-  #199 = NameAndType        #132:#99      // expectedChecksum:J\n-  #200 = Utf8               org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n-  #201 = NameAndType        #134:#135     // checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-  #202 = Utf8               BootstrapMethods\n-  #203 = MethodHandle       6:#287        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #204 = MethodType         #157          //  ()I\n-  #205 = MethodHandle       7:#50         // REF_invokeSpecial org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n-  #206 = NameAndType        #288:#289     // getAsByte:(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #207 = NameAndType        #136:#140     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #208 = Utf8               java/lang/IllegalArgumentException\n-  #209 = Utf8               blockSize must be bigger than 0\n-  #210 = NameAndType        #141:#290     // \"<init>\":(Ljava/lang/String;)V\n-  #211 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #212 = NameAndType        #141:#142     // \"<init>\":(Ljava/io/InputStream;)V\n-  #213 = NameAndType        #119:#120     // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #214 = Utf8               java/io/PushbackInputStream\n-  #215 = NameAndType        #141:#291     // \"<init>\":(Ljava/io/InputStream;I)V\n-  #216 = NameAndType        #121:#122     // inputStream:Ljava/io/PushbackInputStream;\n-  #217 = NameAndType        #133:#102     // blockSize:I\n-  #218 = NameAndType        #123:#124     // dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-  #219 = NameAndType        #292:#293     // hasStreamIdentifier:()Z\n-  #220 = NameAndType        #182:#159     // readStreamIdentifier:()V\n-  #221 = NameAndType        #156:#161     // read:([BII)I\n-  #222 = NameAndType        #125:#126     // currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-  #223 = NameAndType        #158:#159     // close:()V\n-  #224 = NameAndType        #168:#161     // readOnce:([BII)I\n-  #225 = NameAndType        #171:#159     // readNextBlock:()V\n-  #226 = NameAndType        #128:#129     // endReached:Z\n-  #227 = NameAndType        #130:#129     // inUncompressedChunk:Z\n-  #228 = NameAndType        #131:#102     // uncompressedBytesRemaining:I\n-  #229 = NameAndType        #165:#157     // available:()I\n-  #230 = Class              #294          // java/lang/Math\n-  #231 = NameAndType        #295:#296     // min:(II)I\n-  #232 = NameAndType        #297:#167     // getBytesRead:()J\n-  #233 = NameAndType        #118:#99      // unreadBytes:J\n-  #234 = NameAndType        #298:#299     // count:(I)V\n-  #235 = NameAndType        #298:#300     // count:(J)V\n-  #236 = NameAndType        #301:#302     // update:([BII)V\n-  #237 = NameAndType        #184:#159     // verifyLastChecksumAndReset:()V\n-  #238 = NameAndType        #183:#157     // readOneByte:()I\n-  #239 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n-  #240 = NameAndType        #303:#299     // unread:(I)V\n-  #241 = NameAndType        #304:#300     // pushedBackBytes:(J)V\n-  #242 = NameAndType        #181:#159     // skipBlock:()V\n-  #243 = Utf8               java/io/IOException\n-  #244 = Utf8               java/lang/StringBuilder\n-  #245 = Utf8               Unskippable chunk with type\n-  #246 = NameAndType        #305:#306     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #247 = NameAndType        #305:#307     // append:(I)Ljava/lang/StringBuilder;\n-  #248 = Utf8                (hex\n-  #249 = Class              #308          // java/lang/Integer\n-  #250 = NameAndType        #309:#310     // toHexString:(I)Ljava/lang/String;\n-  #251 = Utf8               ) detected.\n-  #252 = NameAndType        #311:#312     // toString:()Ljava/lang/String;\n-  #253 = NameAndType        #180:#157     // readSize:()I\n-  #254 = Utf8               Found illegal chunk with negative size\n-  #255 = NameAndType        #175:#167     // readCrc:()J\n-  #256 = NameAndType        #177:#178     // unmask:(J)J\n-  #257 = NameAndType        #313:#293     // usesChecksumWithCompressedChunks:()Z\n-  #258 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #259 = NameAndType        #141:#314     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #260 = Utf8               Unknown chunk type\n-  #261 = Utf8                detected.\n-  #262 = Class              #315          // org/apache/commons/compress/utils/IOUtils\n-  #263 = NameAndType        #316:#317     // readFully:(Ljava/io/InputStream;[B)I\n-  #264 = Utf8               Premature end of stream\n-  #265 = Class              #318          // org/apache/commons/compress/utils/ByteUtils\n-  #266 = NameAndType        #319:#320     // fromLittleEndian:([B)J\n-  #267 = NameAndType        #319:#321     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #268 = NameAndType        #322:#323     // skip:(Ljava/io/InputStream;J)J\n-  #269 = NameAndType        #185:#186     // matches:([BI)Z\n-  #270 = Utf8               Not a framed Snappy stream\n-  #271 = NameAndType        #156:#157     // read:()I\n-  #272 = NameAndType        #324:#167     // getValue:()J\n-  #273 = Utf8               Checksum verification failed\n-  #274 = NameAndType        #325:#159     // reset:()V\n-  #275 = NameAndType        #116:#117     // SZ_SIGNATURE:[B\n-  #276 = Class              #326          // java/lang/System\n-  #277 = NameAndType        #327:#328     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #278 = Class              #329          // java/util/Arrays\n-  #279 = NameAndType        #330:#331     // equals:([B[B)Z\n-  #280 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #281 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #282 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #283 = Utf8               java/io/InputStream\n-  #284 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n-  #285 = Utf8               java/lang/Throwable\n-  #286 = Utf8               STANDARD\n-  #287 = Methodref          #332.#333     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #288 = Utf8               getAsByte\n-  #289 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #290 = Utf8               (Ljava/lang/String;)V\n-  #291 = Utf8               (Ljava/io/InputStream;I)V\n-  #292 = Utf8               hasStreamIdentifier\n-  #293 = Utf8               ()Z\n-  #294 = Utf8               java/lang/Math\n-  #295 = Utf8               min\n-  #296 = Utf8               (II)I\n-  #297 = Utf8               getBytesRead\n-  #298 = Utf8               count\n-  #299 = Utf8               (I)V\n-  #300 = Utf8               (J)V\n-  #301 = Utf8               update\n-  #302 = Utf8               ([BII)V\n-  #303 = Utf8               unread\n-  #304 = Utf8               pushedBackBytes\n-  #305 = Utf8               append\n-  #306 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #307 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #308 = Utf8               java/lang/Integer\n-  #309 = Utf8               toHexString\n-  #310 = Utf8               (I)Ljava/lang/String;\n-  #311 = Utf8               toString\n-  #312 = Utf8               ()Ljava/lang/String;\n-  #313 = Utf8               usesChecksumWithCompressedChunks\n-  #314 = Utf8               (Ljava/io/InputStream;J)V\n-  #315 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #316 = Utf8               readFully\n-  #317 = Utf8               (Ljava/io/InputStream;[B)I\n-  #318 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #319 = Utf8               fromLittleEndian\n-  #320 = Utf8               ([B)J\n-  #321 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #322 = Utf8               skip\n-  #323 = Utf8               (Ljava/io/InputStream;J)J\n-  #324 = Utf8               getValue\n-  #325 = Utf8               reset\n-  #326 = Utf8               java/lang/System\n-  #327 = Utf8               arraycopy\n-  #328 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #329 = Utf8               java/util/Arrays\n-  #330 = Utf8               equals\n-  #331 = Utf8               ([B[B)Z\n-  #332 = Class              #334          // java/lang/invoke/LambdaMetafactory\n-  #333 = NameAndType        #335:#338     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #334 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #335 = Utf8               metafactory\n-  #336 = Class              #340          // java/lang/invoke/MethodHandles$Lookup\n-  #337 = Utf8               Lookup\n-  #338 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #339 = Class              #341          // java/lang/invoke/MethodHandles\n-  #340 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #341 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Fieldref           #2.#3         // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+    #2 = Class              #4            // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n+    #3 = NameAndType        #5:#6         // STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+    #4 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyDialect\n+    #5 = Utf8               STANDARD\n+    #6 = Utf8               Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+    #9 = NameAndType        #11:#12       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #10 = Utf8               org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #13 = Class              #14           // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+   #14 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+   #15 = Integer            32768\n+   #16 = Methodref          #8.#17        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #17 = NameAndType        #11:#18       // \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #18 = Utf8               (Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+   #19 = Methodref          #20.#21       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #20 = Class              #22           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #21 = NameAndType        #11:#23       // \"<init>\":()V\n+   #22 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #23 = Utf8               ()V\n+   #24 = Fieldref           #8.#25        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.oneByte:[B\n+   #25 = NameAndType        #26:#27       // oneByte:[B\n+   #26 = Utf8               oneByte\n+   #27 = Utf8               [B\n+   #28 = Long               -1l\n+   #30 = Fieldref           #8.#31        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.expectedChecksum:J\n+   #31 = NameAndType        #32:#33       // expectedChecksum:J\n+   #32 = Utf8               expectedChecksum\n+   #33 = Utf8               J\n+   #34 = Class              #35           // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+   #35 = Utf8               org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+   #36 = Methodref          #34.#21       // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n+   #37 = Fieldref           #8.#38        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #38 = NameAndType        #39:#40       // checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #39 = Utf8               checksum\n+   #40 = Utf8               Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+   #41 = InvokeDynamic      #0:#42        // #0:getAsByte:(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #42 = NameAndType        #43:#44       // getAsByte:(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #43 = Utf8               getAsByte\n+   #44 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #45 = Fieldref           #8.#46        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #46 = NameAndType        #47:#48       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #47 = Utf8               supplier\n+   #48 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #49 = Class              #50           // java/lang/IllegalArgumentException\n+   #50 = Utf8               java/lang/IllegalArgumentException\n+   #51 = String             #52           // blockSize must be bigger than 0\n+   #52 = Utf8               blockSize must be bigger than 0\n+   #53 = Methodref          #49.#54       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #54 = NameAndType        #11:#55       // \"<init>\":(Ljava/lang/String;)V\n+   #55 = Utf8               (Ljava/lang/String;)V\n+   #56 = Class              #57           // org/apache/commons/compress/utils/CountingInputStream\n+   #57 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #58 = Methodref          #56.#59       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #59 = NameAndType        #11:#60       // \"<init>\":(Ljava/io/InputStream;)V\n+   #60 = Utf8               (Ljava/io/InputStream;)V\n+   #61 = Fieldref           #8.#62        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #62 = NameAndType        #63:#64       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #63 = Utf8               countingStream\n+   #64 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #65 = Class              #66           // java/io/PushbackInputStream\n+   #66 = Utf8               java/io/PushbackInputStream\n+   #67 = Methodref          #65.#68       // java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #68 = NameAndType        #11:#69       // \"<init>\":(Ljava/io/InputStream;I)V\n+   #69 = Utf8               (Ljava/io/InputStream;I)V\n+   #70 = Fieldref           #8.#71        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inputStream:Ljava/io/PushbackInputStream;\n+   #71 = NameAndType        #72:#73       // inputStream:Ljava/io/PushbackInputStream;\n+   #72 = Utf8               inputStream\n+   #73 = Utf8               Ljava/io/PushbackInputStream;\n+   #74 = Fieldref           #8.#75        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.blockSize:I\n+   #75 = NameAndType        #76:#77       // blockSize:I\n+   #76 = Utf8               blockSize\n+   #77 = Utf8               I\n+   #78 = Fieldref           #8.#79        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+   #79 = NameAndType        #80:#6        // dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+   #80 = Utf8               dialect\n+   #81 = Methodref          #2.#82        // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n+   #82 = NameAndType        #83:#84       // hasStreamIdentifier:()Z\n+   #83 = Utf8               hasStreamIdentifier\n+   #84 = Utf8               ()Z\n+   #85 = Methodref          #8.#86        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readStreamIdentifier:()V\n+   #86 = NameAndType        #87:#23       // readStreamIdentifier:()V\n+   #87 = Utf8               readStreamIdentifier\n+   #88 = Methodref          #8.#89        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.read:([BII)I\n+   #89 = NameAndType        #90:#91       // read:([BII)I\n+   #90 = Utf8               read\n+   #91 = Utf8               ([BII)I\n+   #92 = Fieldref           #8.#93        // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+   #93 = NameAndType        #94:#95       // currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+   #94 = Utf8               currentCompressedChunk\n+   #95 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+   #96 = Methodref          #13.#97       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n+   #97 = NameAndType        #98:#23       // close:()V\n+   #98 = Utf8               close\n+   #99 = Methodref          #65.#97       // java/io/PushbackInputStream.close:()V\n+  #100 = Methodref          #8.#101       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOnce:([BII)I\n+  #101 = NameAndType        #102:#91      // readOnce:([BII)I\n+  #102 = Utf8               readOnce\n+  #103 = Methodref          #8.#104       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readNextBlock:()V\n+  #104 = NameAndType        #105:#23      // readNextBlock:()V\n+  #105 = Utf8               readNextBlock\n+  #106 = Fieldref           #8.#107       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.endReached:Z\n+  #107 = NameAndType        #108:#109     // endReached:Z\n+  #108 = Utf8               endReached\n+  #109 = Utf8               Z\n+  #110 = Fieldref           #8.#111       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.inUncompressedChunk:Z\n+  #111 = NameAndType        #112:#109     // inUncompressedChunk:Z\n+  #112 = Utf8               inUncompressedChunk\n+  #113 = Fieldref           #8.#114       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.uncompressedBytesRemaining:I\n+  #114 = NameAndType        #115:#77      // uncompressedBytesRemaining:I\n+  #115 = Utf8               uncompressedBytesRemaining\n+  #116 = Methodref          #65.#117      // java/io/PushbackInputStream.available:()I\n+  #117 = NameAndType        #118:#119     // available:()I\n+  #118 = Utf8               available\n+  #119 = Utf8               ()I\n+  #120 = Methodref          #121.#122     // java/lang/Math.min:(II)I\n+  #121 = Class              #123          // java/lang/Math\n+  #122 = NameAndType        #124:#125     // min:(II)I\n+  #123 = Utf8               java/lang/Math\n+  #124 = Utf8               min\n+  #125 = Utf8               (II)I\n+  #126 = Methodref          #13.#117      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n+  #127 = Methodref          #56.#128      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #128 = NameAndType        #129:#130     // getBytesRead:()J\n+  #129 = Utf8               getBytesRead\n+  #130 = Utf8               ()J\n+  #131 = Fieldref           #8.#132       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unreadBytes:J\n+  #132 = NameAndType        #133:#33      // unreadBytes:J\n+  #133 = Utf8               unreadBytes\n+  #134 = Methodref          #65.#89       // java/io/PushbackInputStream.read:([BII)I\n+  #135 = Methodref          #8.#136       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(I)V\n+  #136 = NameAndType        #137:#138     // count:(I)V\n+  #137 = Utf8               count\n+  #138 = Utf8               (I)V\n+  #139 = Methodref          #13.#128      // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+  #140 = Methodref          #13.#89       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n+  #141 = Methodref          #8.#142       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.count:(J)V\n+  #142 = NameAndType        #137:#143     // count:(J)V\n+  #143 = Utf8               (J)V\n+  #144 = Methodref          #34.#145      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n+  #145 = NameAndType        #146:#147     // update:([BII)V\n+  #146 = Utf8               update\n+  #147 = Utf8               ([BII)V\n+  #148 = Methodref          #8.#149       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.verifyLastChecksumAndReset:()V\n+  #149 = NameAndType        #150:#23      // verifyLastChecksumAndReset:()V\n+  #150 = Utf8               verifyLastChecksumAndReset\n+  #151 = Methodref          #8.#152       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n+  #152 = NameAndType        #153:#119     // readOneByte:()I\n+  #153 = Utf8               readOneByte\n+  #154 = Methodref          #65.#155      // java/io/PushbackInputStream.unread:(I)V\n+  #155 = NameAndType        #156:#138     // unread:(I)V\n+  #156 = Utf8               unread\n+  #157 = Methodref          #8.#158       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.pushedBackBytes:(J)V\n+  #158 = NameAndType        #159:#143     // pushedBackBytes:(J)V\n+  #159 = Utf8               pushedBackBytes\n+  #160 = Methodref          #8.#161       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.skipBlock:()V\n+  #161 = NameAndType        #162:#23      // skipBlock:()V\n+  #162 = Utf8               skipBlock\n+  #163 = Class              #164          // java/io/IOException\n+  #164 = Utf8               java/io/IOException\n+  #165 = Class              #166          // java/lang/StringBuilder\n+  #166 = Utf8               java/lang/StringBuilder\n+  #167 = Methodref          #165.#21      // java/lang/StringBuilder.\"<init>\":()V\n+  #168 = String             #169          // Unskippable chunk with type\n+  #169 = Utf8               Unskippable chunk with type\n+  #170 = Methodref          #165.#171     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #171 = NameAndType        #172:#173     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #172 = Utf8               append\n+  #173 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #174 = Methodref          #165.#175     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #175 = NameAndType        #172:#176     // append:(I)Ljava/lang/StringBuilder;\n+  #176 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #177 = String             #178          //  (hex\n+  #178 = Utf8                (hex\n+  #179 = Methodref          #180.#181     // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #180 = Class              #182          // java/lang/Integer\n+  #181 = NameAndType        #183:#184     // toHexString:(I)Ljava/lang/String;\n+  #182 = Utf8               java/lang/Integer\n+  #183 = Utf8               toHexString\n+  #184 = Utf8               (I)Ljava/lang/String;\n+  #185 = String             #186          // ) detected.\n+  #186 = Utf8               ) detected.\n+  #187 = Methodref          #165.#188     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #188 = NameAndType        #189:#190     // toString:()Ljava/lang/String;\n+  #189 = Utf8               toString\n+  #190 = Utf8               ()Ljava/lang/String;\n+  #191 = Methodref          #163.#54      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #192 = Methodref          #8.#193       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readSize:()I\n+  #193 = NameAndType        #194:#119     // readSize:()I\n+  #194 = Utf8               readSize\n+  #195 = String             #196          // Found illegal chunk with negative size\n+  #196 = Utf8               Found illegal chunk with negative size\n+  #197 = Methodref          #8.#198       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readCrc:()J\n+  #198 = NameAndType        #199:#130     // readCrc:()J\n+  #199 = Utf8               readCrc\n+  #200 = Methodref          #8.#201       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.unmask:(J)J\n+  #201 = NameAndType        #202:#203     // unmask:(J)J\n+  #202 = Utf8               unmask\n+  #203 = Utf8               (J)J\n+  #204 = Methodref          #2.#205       // org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n+  #205 = NameAndType        #206:#84      // usesChecksumWithCompressedChunks:()Z\n+  #206 = Utf8               usesChecksumWithCompressedChunks\n+  #207 = Long               4l\n+  #209 = Class              #210          // org/apache/commons/compress/utils/BoundedInputStream\n+  #210 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #211 = Methodref          #209.#212     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #212 = NameAndType        #11:#213      // \"<init>\":(Ljava/io/InputStream;J)V\n+  #213 = Utf8               (Ljava/io/InputStream;J)V\n+  #214 = Methodref          #13.#68       // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+  #215 = String             #216          // Unknown chunk type\n+  #216 = Utf8               Unknown chunk type\n+  #217 = String             #218          //  detected.\n+  #218 = Utf8                detected.\n+  #219 = Methodref          #220.#221     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #220 = Class              #222          // org/apache/commons/compress/utils/IOUtils\n+  #221 = NameAndType        #223:#224     // readFully:(Ljava/io/InputStream;[B)I\n+  #222 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #223 = Utf8               readFully\n+  #224 = Utf8               (Ljava/io/InputStream;[B)I\n+  #225 = String             #226          // Premature end of stream\n+  #226 = Utf8               Premature end of stream\n+  #227 = Methodref          #228.#229     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+  #228 = Class              #230          // org/apache/commons/compress/utils/ByteUtils\n+  #229 = NameAndType        #231:#232     // fromLittleEndian:([B)J\n+  #230 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #231 = Utf8               fromLittleEndian\n+  #232 = Utf8               ([B)J\n+  #233 = Long               2726488792l\n+  #235 = Long               4294967295l\n+  #237 = Methodref          #228.#238     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #238 = NameAndType        #231:#239     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #239 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #240 = Methodref          #220.#241     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #241 = NameAndType        #242:#243     // skip:(Ljava/io/InputStream;J)J\n+  #242 = Utf8               skip\n+  #243 = Utf8               (Ljava/io/InputStream;J)J\n+  #244 = Methodref          #8.#245       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.matches:([BI)Z\n+  #245 = NameAndType        #246:#247     // matches:([BI)Z\n+  #246 = Utf8               matches\n+  #247 = Utf8               ([BI)Z\n+  #248 = String             #249          // Not a framed Snappy stream\n+  #249 = Utf8               Not a framed Snappy stream\n+  #250 = Methodref          #65.#251      // java/io/PushbackInputStream.read:()I\n+  #251 = NameAndType        #90:#119      // read:()I\n+  #252 = Methodref          #34.#253      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n+  #253 = NameAndType        #254:#130     // getValue:()J\n+  #254 = Utf8               getValue\n+  #255 = String             #256          // Checksum verification failed\n+  #256 = Utf8               Checksum verification failed\n+  #257 = Methodref          #34.#258      // org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n+  #258 = NameAndType        #259:#23      // reset:()V\n+  #259 = Utf8               reset\n+  #260 = Fieldref           #8.#261       // org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.SZ_SIGNATURE:[B\n+  #261 = NameAndType        #262:#27      // SZ_SIGNATURE:[B\n+  #262 = Utf8               SZ_SIGNATURE\n+  #263 = Methodref          #264.#265     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #264 = Class              #266          // java/lang/System\n+  #265 = NameAndType        #267:#268     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #266 = Utf8               java/lang/System\n+  #267 = Utf8               arraycopy\n+  #268 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #269 = Methodref          #270.#271     // java/util/Arrays.equals:([B[B)Z\n+  #270 = Class              #272          // java/util/Arrays\n+  #271 = NameAndType        #273:#274     // equals:([B[B)Z\n+  #272 = Utf8               java/util/Arrays\n+  #273 = Utf8               equals\n+  #274 = Utf8               ([B[B)Z\n+  #275 = Class              #276          // org/apache/commons/compress/utils/InputStreamStatistics\n+  #276 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #277 = Utf8               MASK_OFFSET\n+  #278 = Utf8               ConstantValue\n+  #279 = Utf8               STREAM_IDENTIFIER_TYPE\n+  #280 = Integer            255\n+  #281 = Utf8               COMPRESSED_CHUNK_TYPE\n+  #282 = Integer            0\n+  #283 = Utf8               UNCOMPRESSED_CHUNK_TYPE\n+  #284 = Integer            1\n+  #285 = Utf8               PADDING_CHUNK_TYPE\n+  #286 = Integer            254\n+  #287 = Utf8               MIN_UNSKIPPABLE_TYPE\n+  #288 = Integer            2\n+  #289 = Utf8               MAX_UNSKIPPABLE_TYPE\n+  #290 = Integer            127\n+  #291 = Utf8               MAX_SKIPPABLE_TYPE\n+  #292 = Integer            253\n+  #293 = Utf8               Code\n+  #294 = Utf8               LineNumberTable\n+  #295 = Utf8               LocalVariableTable\n+  #296 = Utf8               this\n+  #297 = Utf8               Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;\n+  #298 = Utf8               in\n+  #299 = Utf8               Ljava/io/InputStream;\n+  #300 = Utf8               Exceptions\n+  #301 = Utf8               StackMapTable\n+  #302 = Class              #303          // java/io/InputStream\n+  #303 = Utf8               java/io/InputStream\n+  #304 = Class              #305          // java/lang/Throwable\n+  #305 = Utf8               java/lang/Throwable\n+  #306 = Utf8               b\n+  #307 = Utf8               off\n+  #308 = Utf8               len\n+  #309 = Utf8               getCompressedCount\n+  #310 = Utf8               amount\n+  #311 = Utf8               before\n+  #312 = Utf8               expectChecksum\n+  #313 = Utf8               size\n+  #314 = Utf8               type\n+  #315 = Class              #27           // \"[B\"\n+  #316 = Utf8               x\n+  #317 = Utf8               signature\n+  #318 = Utf8               length\n+  #319 = Utf8               shortenedSig\n+  #320 = Utf8               <clinit>\n+  #321 = Utf8               SourceFile\n+  #322 = Utf8               FramedSnappyCompressorInputStream.java\n+  #323 = Utf8               BootstrapMethods\n+  #324 = MethodHandle       6:#325        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #325 = Methodref          #326.#327     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #326 = Class              #328          // java/lang/invoke/LambdaMetafactory\n+  #327 = NameAndType        #329:#330     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #328 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #329 = Utf8               metafactory\n+  #330 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #331 = MethodType         #119          //  ()I\n+  #332 = MethodHandle       7:#151        // REF_invokeSpecial org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n+  #333 = Utf8               InnerClasses\n+  #334 = Class              #335          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #335 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #336 = Utf8               ByteSupplier\n+  #337 = Class              #338          // java/lang/invoke/MethodHandles$Lookup\n+  #338 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #339 = Class              #340          // java/lang/invoke/MethodHandles\n+  #340 = Utf8               java/lang/invoke/MethodHandles\n+  #341 = Utf8               Lookup\n {\n   static final long MASK_OFFSET = 2726488792l;\n     descriptor: J\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: long 2726488792l\n \n   private static final int STREAM_IDENTIFIER_TYPE = 255;\n@@ -446,15 +446,15 @@\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: getstatic     #1                  // Field org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.STANDARD:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-         5: invokespecial #2                  // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+         5: invokespecial #7                  // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n          8: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;\n@@ -465,17 +465,17 @@\n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream(java.io.InputStream, org.apache.commons.compress.compressors.snappy.FramedSnappyDialect) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: ldc           #4                  // int 32768\n+         2: ldc           #15                 // int 32768\n          4: aload_2\n-         5: invokespecial #5                  // Method \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n+         5: invokespecial #16                 // Method \"<init>\":(Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n          8: return\n       LineNumberTable:\n         line 108: 0\n         line 109: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;\n@@ -486,63 +486,63 @@\n \n   public org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream(java.io.InputStream, int, org.apache.commons.compress.compressors.snappy.FramedSnappyDialect) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;ILorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #6                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #19                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #7                  // Field oneByte:[B\n+         8: putfield      #24                 // Field oneByte:[B\n         11: aload_0\n-        12: ldc2_w        #8                  // long -1l\n-        15: putfield      #10                 // Field expectedChecksum:J\n+        12: ldc2_w        #28                 // long -1l\n+        15: putfield      #30                 // Field expectedChecksum:J\n         18: aload_0\n-        19: new           #11                 // class org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n+        19: new           #34                 // class org/apache/commons/compress/compressors/snappy/PureJavaCrc32C\n         22: dup\n-        23: invokespecial #12                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n-        26: putfield      #13                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        23: invokespecial #36                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.\"<init>\":()V\n+        26: putfield      #37                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n         29: aload_0\n         30: aload_0\n-        31: invokedynamic #14,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-        36: putfield      #15                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        31: invokedynamic #41,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        36: putfield      #45                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         39: iload_2\n         40: ifgt          53\n-        43: new           #16                 // class java/lang/IllegalArgumentException\n+        43: new           #49                 // class java/lang/IllegalArgumentException\n         46: dup\n-        47: ldc           #17                 // String blockSize must be bigger than 0\n-        49: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        47: ldc           #51                 // String blockSize must be bigger than 0\n+        49: invokespecial #53                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: aload_0\n-        54: new           #19                 // class org/apache/commons/compress/utils/CountingInputStream\n+        54: new           #56                 // class org/apache/commons/compress/utils/CountingInputStream\n         57: dup\n         58: aload_1\n-        59: invokespecial #20                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        62: putfield      #21                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        59: invokespecial #58                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        62: putfield      #61                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         65: aload_0\n-        66: new           #22                 // class java/io/PushbackInputStream\n+        66: new           #65                 // class java/io/PushbackInputStream\n         69: dup\n         70: aload_0\n-        71: getfield      #21                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        71: getfield      #61                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         74: iconst_1\n-        75: invokespecial #23                 // Method java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-        78: putfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        75: invokespecial #67                 // Method java/io/PushbackInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+        78: putfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n         81: aload_0\n         82: iload_2\n-        83: putfield      #25                 // Field blockSize:I\n+        83: putfield      #74                 // Field blockSize:I\n         86: aload_0\n         87: aload_3\n-        88: putfield      #26                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+        88: putfield      #78                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n         91: aload_3\n-        92: invokevirtual #27                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n+        92: invokevirtual #81                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.hasStreamIdentifier:()Z\n         95: ifeq          102\n         98: aload_0\n-        99: invokespecial #28                 // Method readStreamIdentifier:()V\n+        99: invokespecial #85                 // Method readStreamIdentifier:()V\n        102: return\n       LineNumberTable:\n         line 124: 0\n         line 76: 4\n         line 81: 11\n         line 83: 18\n         line 85: 29\n@@ -573,24 +573,24 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #7                  // Field oneByte:[B\n+         2: getfield      #24                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #29                 // Method read:([BII)I\n+         7: invokevirtual #88                 // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #7                  // Field oneByte:[B\n+        19: getfield      #24                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 140: 0\n@@ -606,30 +606,30 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+         1: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-        11: invokevirtual #31                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n+         8: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        11: invokevirtual #96                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        16: putfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         19: aload_0\n-        20: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n-        23: invokevirtual #32                 // Method java/io/PushbackInputStream.close:()V\n+        20: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        23: invokevirtual #99                 // Method java/io/PushbackInputStream.close:()V\n         26: goto          39\n         29: astore_1\n         30: aload_0\n-        31: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n-        34: invokevirtual #32                 // Method java/io/PushbackInputStream.close:()V\n+        31: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        34: invokevirtual #99                 // Method java/io/PushbackInputStream.close:()V\n         37: aload_1\n         38: athrow\n         39: return\n       Exception table:\n          from    to  target type\n              0    19    29   any\n       LineNumberTable:\n@@ -661,31 +661,31 @@\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n          7: aload_1\n          8: iload_2\n          9: iload_3\n-        10: invokespecial #33                 // Method readOnce:([BII)I\n+        10: invokespecial #100                // Method readOnce:([BII)I\n         13: istore        4\n         15: iload         4\n         17: iconst_m1\n         18: if_icmpne     43\n         21: aload_0\n-        22: invokespecial #34                 // Method readNextBlock:()V\n+        22: invokespecial #103                // Method readNextBlock:()V\n         25: aload_0\n-        26: getfield      #35                 // Field endReached:Z\n+        26: getfield      #106                // Field endReached:Z\n         29: ifeq          34\n         32: iconst_m1\n         33: ireturn\n         34: aload_0\n         35: aload_1\n         36: iload_2\n         37: iload_3\n-        38: invokespecial #33                 // Method readOnce:([BII)I\n+        38: invokespecial #100                // Method readOnce:([BII)I\n         41: istore        4\n         43: iload         4\n         45: ireturn\n       LineNumberTable:\n         line 159: 0\n         line 160: 4\n         line 162: 6\n@@ -713,29 +713,29 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #36                 // Field inUncompressedChunk:Z\n+         1: getfield      #110                // Field inUncompressedChunk:Z\n          4: ifeq          22\n          7: aload_0\n-         8: getfield      #37                 // Field uncompressedBytesRemaining:I\n+         8: getfield      #113                // Field uncompressedBytesRemaining:I\n         11: aload_0\n-        12: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n-        15: invokevirtual #38                 // Method java/io/PushbackInputStream.available:()I\n-        18: invokestatic  #39                 // Method java/lang/Math.min:(II)I\n+        12: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        15: invokevirtual #116                // Method java/io/PushbackInputStream.available:()I\n+        18: invokestatic  #120                // Method java/lang/Math.min:(II)I\n         21: ireturn\n         22: aload_0\n-        23: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        23: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         26: ifnull        37\n         29: aload_0\n-        30: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-        33: invokevirtual #40                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n+        30: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        33: invokevirtual #126                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.available:()I\n         36: ireturn\n         37: iconst_0\n         38: ireturn\n       LineNumberTable:\n         line 176: 0\n         line 177: 7\n         line 178: 15\n@@ -754,18 +754,18 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #41                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #61                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #127                // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: aload_0\n-         8: getfield      #42                 // Field unreadBytes:J\n+         8: getfield      #131                // Field unreadBytes:J\n         11: lsub\n         12: lreturn\n       LineNumberTable:\n         line 191: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;\n@@ -774,84 +774,84 @@\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=4\n          0: iconst_m1\n          1: istore        4\n          3: aload_0\n-         4: getfield      #36                 // Field inUncompressedChunk:Z\n+         4: getfield      #110                // Field inUncompressedChunk:Z\n          7: ifeq          66\n         10: aload_0\n-        11: getfield      #37                 // Field uncompressedBytesRemaining:I\n+        11: getfield      #113                // Field uncompressedBytesRemaining:I\n         14: iload_3\n-        15: invokestatic  #39                 // Method java/lang/Math.min:(II)I\n+        15: invokestatic  #120                // Method java/lang/Math.min:(II)I\n         18: istore        5\n         20: iload         5\n         22: ifne          27\n         25: iconst_m1\n         26: ireturn\n         27: aload_0\n-        28: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        28: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n         31: aload_1\n         32: iload_2\n         33: iload         5\n-        35: invokevirtual #43                 // Method java/io/PushbackInputStream.read:([BII)I\n+        35: invokevirtual #134                // Method java/io/PushbackInputStream.read:([BII)I\n         38: istore        4\n         40: iload         4\n         42: iconst_m1\n         43: if_icmpeq     63\n         46: aload_0\n         47: dup\n-        48: getfield      #37                 // Field uncompressedBytesRemaining:I\n+        48: getfield      #113                // Field uncompressedBytesRemaining:I\n         51: iload         4\n         53: isub\n-        54: putfield      #37                 // Field uncompressedBytesRemaining:I\n+        54: putfield      #113                // Field uncompressedBytesRemaining:I\n         57: aload_0\n         58: iload         4\n-        60: invokevirtual #44                 // Method count:(I)V\n+        60: invokevirtual #135                // Method count:(I)V\n         63: goto          129\n         66: aload_0\n-        67: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        67: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         70: ifnull        129\n         73: aload_0\n-        74: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-        77: invokevirtual #45                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+        74: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        77: invokevirtual #139                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n         80: lstore        5\n         82: aload_0\n-        83: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+        83: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n         86: aload_1\n         87: iload_2\n         88: iload_3\n-        89: invokevirtual #46                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n+        89: invokevirtual #140                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.read:([BII)I\n         92: istore        4\n         94: iload         4\n         96: iconst_m1\n         97: if_icmpne     115\n        100: aload_0\n-       101: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-       104: invokevirtual #31                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n+       101: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       104: invokevirtual #96                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.close:()V\n        107: aload_0\n        108: aconst_null\n-       109: putfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       109: putfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n        112: goto          129\n        115: aload_0\n        116: aload_0\n-       117: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-       120: invokevirtual #45                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+       117: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       120: invokevirtual #139                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n        123: lload         5\n        125: lsub\n-       126: invokevirtual #47                 // Method count:(J)V\n+       126: invokevirtual #141                // Method count:(J)V\n        129: iload         4\n        131: ifle          145\n        134: aload_0\n-       135: getfield      #13                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+       135: getfield      #37                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n        138: aload_1\n        139: iload_2\n        140: iload         4\n-       142: invokevirtual #48                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n+       142: invokevirtual #144                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.update:([BII)V\n        145: iload         4\n        147: ireturn\n       LineNumberTable:\n         line 202: 0\n         line 203: 3\n         line 204: 10\n         line 205: 20\n@@ -897,182 +897,182 @@\n \n   private void readNextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=8, locals=5, args_size=1\n          0: aload_0\n-         1: invokespecial #49                 // Method verifyLastChecksumAndReset:()V\n+         1: invokespecial #148                // Method verifyLastChecksumAndReset:()V\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #36                 // Field inUncompressedChunk:Z\n+         6: putfield      #110                // Field inUncompressedChunk:Z\n          9: aload_0\n-        10: invokespecial #50                 // Method readOneByte:()I\n+        10: invokespecial #151                // Method readOneByte:()I\n         13: istore_1\n         14: iload_1\n         15: iconst_m1\n         16: if_icmpne     27\n         19: aload_0\n         20: iconst_1\n-        21: putfield      #35                 // Field endReached:Z\n+        21: putfield      #106                // Field endReached:Z\n         24: goto          349\n         27: iload_1\n         28: sipush        255\n         31: if_icmpne     68\n         34: aload_0\n-        35: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        35: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n         38: iload_1\n-        39: invokevirtual #52                 // Method java/io/PushbackInputStream.unread:(I)V\n+        39: invokevirtual #154                // Method java/io/PushbackInputStream.unread:(I)V\n         42: aload_0\n         43: dup\n-        44: getfield      #42                 // Field unreadBytes:J\n+        44: getfield      #131                // Field unreadBytes:J\n         47: lconst_1\n         48: ladd\n-        49: putfield      #42                 // Field unreadBytes:J\n+        49: putfield      #131                // Field unreadBytes:J\n         52: aload_0\n         53: lconst_1\n-        54: invokevirtual #53                 // Method pushedBackBytes:(J)V\n+        54: invokevirtual #157                // Method pushedBackBytes:(J)V\n         57: aload_0\n-        58: invokespecial #28                 // Method readStreamIdentifier:()V\n+        58: invokespecial #85                 // Method readStreamIdentifier:()V\n         61: aload_0\n-        62: invokespecial #34                 // Method readNextBlock:()V\n+        62: invokespecial #103                // Method readNextBlock:()V\n         65: goto          349\n         68: iload_1\n         69: sipush        254\n         72: if_icmpeq     88\n         75: iload_1\n         76: bipush        127\n         78: if_icmple     99\n         81: iload_1\n         82: sipush        253\n         85: if_icmpgt     99\n         88: aload_0\n-        89: invokespecial #54                 // Method skipBlock:()V\n+        89: invokespecial #160                // Method skipBlock:()V\n         92: aload_0\n-        93: invokespecial #34                 // Method readNextBlock:()V\n+        93: invokespecial #103                // Method readNextBlock:()V\n         96: goto          349\n         99: iload_1\n        100: iconst_2\n        101: if_icmplt     154\n        104: iload_1\n        105: bipush        127\n        107: if_icmpgt     154\n-       110: new           #55                 // class java/io/IOException\n+       110: new           #163                // class java/io/IOException\n        113: dup\n-       114: new           #56                 // class java/lang/StringBuilder\n+       114: new           #165                // class java/lang/StringBuilder\n        117: dup\n-       118: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       121: ldc           #58                 // String Unskippable chunk with type\n-       123: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       118: invokespecial #167                // Method java/lang/StringBuilder.\"<init>\":()V\n+       121: ldc           #168                // String Unskippable chunk with type\n+       123: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        126: iload_1\n-       127: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       130: ldc           #61                 // String  (hex\n-       132: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       127: invokevirtual #174                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       130: ldc           #177                // String  (hex\n+       132: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        135: iload_1\n-       136: invokestatic  #62                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-       139: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       142: ldc           #63                 // String ) detected.\n-       144: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       147: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       150: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       136: invokestatic  #179                // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+       139: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       142: ldc           #185                // String ) detected.\n+       144: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       147: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       150: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        153: athrow\n        154: iload_1\n        155: iconst_1\n        156: if_icmpne     205\n        159: aload_0\n        160: iconst_1\n-       161: putfield      #36                 // Field inUncompressedChunk:Z\n+       161: putfield      #110                // Field inUncompressedChunk:Z\n        164: aload_0\n        165: aload_0\n-       166: invokespecial #66                 // Method readSize:()I\n+       166: invokespecial #192                // Method readSize:()I\n        169: iconst_4\n        170: isub\n-       171: putfield      #37                 // Field uncompressedBytesRemaining:I\n+       171: putfield      #113                // Field uncompressedBytesRemaining:I\n        174: aload_0\n-       175: getfield      #37                 // Field uncompressedBytesRemaining:I\n+       175: getfield      #113                // Field uncompressedBytesRemaining:I\n        178: ifge          191\n-       181: new           #55                 // class java/io/IOException\n+       181: new           #163                // class java/io/IOException\n        184: dup\n-       185: ldc           #67                 // String Found illegal chunk with negative size\n-       187: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       185: ldc           #195                // String Found illegal chunk with negative size\n+       187: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        190: athrow\n        191: aload_0\n        192: aload_0\n-       193: invokespecial #68                 // Method readCrc:()J\n-       196: invokestatic  #69                 // Method unmask:(J)J\n-       199: putfield      #10                 // Field expectedChecksum:J\n+       193: invokespecial #197                // Method readCrc:()J\n+       196: invokestatic  #200                // Method unmask:(J)J\n+       199: putfield      #30                 // Field expectedChecksum:J\n        202: goto          349\n        205: iload_1\n        206: ifne          317\n        209: aload_0\n-       210: getfield      #26                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n-       213: invokevirtual #70                 // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n+       210: getfield      #78                 // Field dialect:Lorg/apache/commons/compress/compressors/snappy/FramedSnappyDialect;\n+       213: invokevirtual #204                // Method org/apache/commons/compress/compressors/snappy/FramedSnappyDialect.usesChecksumWithCompressedChunks:()Z\n        216: istore_2\n        217: aload_0\n-       218: invokespecial #66                 // Method readSize:()I\n+       218: invokespecial #192                // Method readSize:()I\n        221: i2l\n        222: iload_2\n        223: ifeq          232\n-       226: ldc2_w        #71                 // long 4l\n+       226: ldc2_w        #207                // long 4l\n        229: goto          233\n        232: lconst_0\n        233: lsub\n        234: lstore_3\n        235: lload_3\n        236: lconst_0\n        237: lcmp\n        238: ifge          251\n-       241: new           #55                 // class java/io/IOException\n+       241: new           #163                // class java/io/IOException\n        244: dup\n-       245: ldc           #67                 // String Found illegal chunk with negative size\n-       247: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       245: ldc           #195                // String Found illegal chunk with negative size\n+       247: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        250: athrow\n        251: iload_2\n        252: ifeq          269\n        255: aload_0\n        256: aload_0\n-       257: invokespecial #68                 // Method readCrc:()J\n-       260: invokestatic  #69                 // Method unmask:(J)J\n-       263: putfield      #10                 // Field expectedChecksum:J\n+       257: invokespecial #197                // Method readCrc:()J\n+       260: invokestatic  #200                // Method unmask:(J)J\n+       263: putfield      #30                 // Field expectedChecksum:J\n        266: goto          276\n        269: aload_0\n-       270: ldc2_w        #8                  // long -1l\n-       273: putfield      #10                 // Field expectedChecksum:J\n+       270: ldc2_w        #28                 // long -1l\n+       273: putfield      #30                 // Field expectedChecksum:J\n        276: aload_0\n-       277: new           #3                  // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+       277: new           #13                 // class org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n        280: dup\n-       281: new           #73                 // class org/apache/commons/compress/utils/BoundedInputStream\n+       281: new           #209                // class org/apache/commons/compress/utils/BoundedInputStream\n        284: dup\n        285: aload_0\n-       286: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+       286: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n        289: lload_3\n-       290: invokespecial #74                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+       290: invokespecial #211                // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n        293: aload_0\n-       294: getfield      #25                 // Field blockSize:I\n-       297: invokespecial #75                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-       300: putfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       294: getfield      #74                 // Field blockSize:I\n+       297: invokespecial #214                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+       300: putfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n        303: aload_0\n        304: aload_0\n-       305: getfield      #30                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n-       308: invokevirtual #45                 // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n-       311: invokevirtual #47                 // Method count:(J)V\n+       305: getfield      #92                 // Field currentCompressedChunk:Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream;\n+       308: invokevirtual #139                // Method org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream.getBytesRead:()J\n+       311: invokevirtual #141                // Method count:(J)V\n        314: goto          349\n-       317: new           #55                 // class java/io/IOException\n+       317: new           #163                // class java/io/IOException\n        320: dup\n-       321: new           #56                 // class java/lang/StringBuilder\n+       321: new           #165                // class java/lang/StringBuilder\n        324: dup\n-       325: invokespecial #57                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       328: ldc           #76                 // String Unknown chunk type\n-       330: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       325: invokespecial #167                // Method java/lang/StringBuilder.\"<init>\":()V\n+       328: ldc           #215                // String Unknown chunk type\n+       330: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        333: iload_1\n-       334: invokevirtual #60                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       337: ldc           #77                 // String  detected.\n-       339: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       342: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       345: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       334: invokevirtual #174                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       337: ldc           #217                // String  detected.\n+       339: invokevirtual #170                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       342: invokevirtual #187                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       345: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        348: athrow\n        349: return\n       LineNumberTable:\n         line 230: 0\n         line 231: 4\n         line 232: 9\n         line 233: 14\n@@ -1148,31 +1148,31 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=1\n          0: iconst_4\n          1: newarray       byte\n          3: astore_1\n          4: aload_0\n-         5: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+         5: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n          8: aload_1\n-         9: invokestatic  #78                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+         9: invokestatic  #219                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore_2\n         13: aload_0\n         14: iload_2\n-        15: invokevirtual #44                 // Method count:(I)V\n+        15: invokevirtual #135                // Method count:(I)V\n         18: iload_2\n         19: iconst_4\n         20: if_icmpeq     33\n-        23: new           #55                 // class java/io/IOException\n+        23: new           #163                // class java/io/IOException\n         26: dup\n-        27: ldc           #79                 // String Premature end of stream\n-        29: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        27: ldc           #225                // String Premature end of stream\n+        29: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         32: athrow\n         33: aload_1\n-        34: invokestatic  #80                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        34: invokestatic  #227                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n         37: lreturn\n       LineNumberTable:\n         line 279: 0\n         line 280: 4\n         line 281: 13\n         line 282: 18\n         line 283: 23\n@@ -1191,29 +1191,29 @@\n \n   static long unmask(long);\n     descriptor: (J)J\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: lload_0\n-         1: ldc2_w        #81                 // long 2726488792l\n+         1: ldc2_w        #233                // long 2726488792l\n          4: lsub\n          5: lstore_0\n          6: lload_0\n-         7: ldc2_w        #83                 // long 4294967295l\n+         7: ldc2_w        #235                // long 4294967295l\n         10: land\n         11: lstore_0\n         12: lload_0\n         13: bipush        17\n         15: lshr\n         16: lload_0\n         17: bipush        15\n         19: lshl\n         20: lor\n-        21: ldc2_w        #83                 // long 4294967295l\n+        21: ldc2_w        #235                // long 4294967295l\n         24: land\n         25: lreturn\n       LineNumberTable:\n         line 291: 0\n         line 292: 6\n         line 293: 12\n       LocalVariableTable:\n@@ -1222,17 +1222,17 @@\n \n   private int readSize() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         1: getfield      #45                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          4: iconst_3\n-         5: invokestatic  #85                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         5: invokestatic  #237                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n          8: l2i\n          9: ireturn\n       LineNumberTable:\n         line 297: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream;\n@@ -1241,41 +1241,41 @@\n \n   private void skipBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokespecial #66                 // Method readSize:()I\n+         1: invokespecial #192                // Method readSize:()I\n          4: istore_1\n          5: iload_1\n          6: ifge          19\n-         9: new           #55                 // class java/io/IOException\n+         9: new           #163                // class java/io/IOException\n         12: dup\n-        13: ldc           #67                 // String Found illegal chunk with negative size\n-        15: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #195                // String Found illegal chunk with negative size\n+        15: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_0\n-        20: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+        20: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n         23: iload_1\n         24: i2l\n-        25: invokestatic  #86                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        25: invokestatic  #240                // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         28: lstore_2\n         29: aload_0\n         30: lload_2\n-        31: invokevirtual #47                 // Method count:(J)V\n+        31: invokevirtual #141                // Method count:(J)V\n         34: lload_2\n         35: iload_1\n         36: i2l\n         37: lcmp\n         38: ifeq          51\n-        41: new           #55                 // class java/io/IOException\n+        41: new           #163                // class java/io/IOException\n         44: dup\n-        45: ldc           #79                 // String Premature end of stream\n-        47: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        45: ldc           #225                // String Premature end of stream\n+        47: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         50: athrow\n         51: return\n       LineNumberTable:\n         line 301: 0\n         line 302: 5\n         line 303: 9\n         line 305: 19\n@@ -1303,32 +1303,32 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=1\n          0: bipush        10\n          2: newarray       byte\n          4: astore_1\n          5: aload_0\n-         6: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n+         6: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n          9: aload_1\n-        10: invokestatic  #78                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        10: invokestatic  #219                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         13: istore_2\n         14: aload_0\n         15: iload_2\n-        16: invokevirtual #44                 // Method count:(I)V\n+        16: invokevirtual #135                // Method count:(I)V\n         19: bipush        10\n         21: iload_2\n         22: if_icmpne     34\n         25: aload_1\n         26: bipush        10\n-        28: invokestatic  #87                 // Method matches:([BI)Z\n+        28: invokestatic  #244                // Method matches:([BI)Z\n         31: ifne          44\n-        34: new           #55                 // class java/io/IOException\n+        34: new           #163                // class java/io/IOException\n         37: dup\n-        38: ldc           #88                 // String Not a framed Snappy stream\n-        40: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        38: ldc           #248                // String Not a framed Snappy stream\n+        40: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         43: athrow\n         44: return\n       LineNumberTable:\n         line 313: 0\n         line 314: 5\n         line 315: 14\n         line 316: 19\n@@ -1349,23 +1349,23 @@\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field inputStream:Ljava/io/PushbackInputStream;\n-         4: invokevirtual #89                 // Method java/io/PushbackInputStream.read:()I\n+         1: getfield      #70                 // Field inputStream:Ljava/io/PushbackInputStream;\n+         4: invokevirtual #250                // Method java/io/PushbackInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #44                 // Method count:(I)V\n+        15: invokevirtual #135                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1387,36 +1387,36 @@\n \n   private void verifyLastChecksumAndReset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field expectedChecksum:J\n+         1: getfield      #30                 // Field expectedChecksum:J\n          4: lconst_0\n          5: lcmp\n          6: iflt          34\n          9: aload_0\n-        10: getfield      #10                 // Field expectedChecksum:J\n+        10: getfield      #30                 // Field expectedChecksum:J\n         13: aload_0\n-        14: getfield      #13                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-        17: invokevirtual #90                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n+        14: getfield      #37                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        17: invokevirtual #252                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.getValue:()J\n         20: lcmp\n         21: ifeq          34\n-        24: new           #55                 // class java/io/IOException\n+        24: new           #163                // class java/io/IOException\n         27: dup\n-        28: ldc           #91                 // String Checksum verification failed\n-        30: invokespecial #65                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        28: ldc           #255                // String Checksum verification failed\n+        30: invokespecial #191                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: aload_0\n-        35: ldc2_w        #8                  // long -1l\n-        38: putfield      #10                 // Field expectedChecksum:J\n+        35: ldc2_w        #28                 // long -1l\n+        38: putfield      #30                 // Field expectedChecksum:J\n         41: aload_0\n-        42: getfield      #13                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n-        45: invokevirtual #92                 // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n+        42: getfield      #37                 // Field checksum:Lorg/apache/commons/compress/compressors/snappy/PureJavaCrc32C;\n+        45: invokevirtual #257                // Method org/apache/commons/compress/compressors/snappy/PureJavaCrc32C.reset:()V\n         48: return\n       LineNumberTable:\n         line 331: 0\n         line 332: 24\n         line 334: 34\n         line 335: 41\n         line 336: 48\n@@ -1430,40 +1430,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #93                 // Field SZ_SIGNATURE:[B\n+         1: getstatic     #260                // Field SZ_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #93                 // Field SZ_SIGNATURE:[B\n+        14: getstatic     #260                // Field SZ_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #93                 // Field SZ_SIGNATURE:[B\n+        21: getstatic     #260                // Field SZ_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #93                 // Field SZ_SIGNATURE:[B\n+        32: getstatic     #260                // Field SZ_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #94                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #263                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #93                 // Field SZ_SIGNATURE:[B\n-        43: invokestatic  #95                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #260                // Field SZ_SIGNATURE:[B\n+        43: invokestatic  #269                // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 349: 0\n         line 350: 8\n         line 353: 10\n         line 354: 12\n         line 355: 21\n@@ -1523,22 +1523,22 @@\n         44: bipush        8\n         46: bipush        112\n         48: bastore\n         49: dup\n         50: bipush        9\n         52: bipush        89\n         54: bastore\n-        55: putstatic     #93                 // Field SZ_SIGNATURE:[B\n+        55: putstatic     #260                // Field SZ_SIGNATURE:[B\n         58: return\n       LineNumberTable:\n         line 58: 0\n }\n SourceFile: \"FramedSnappyCompressorInputStream.java\"\n-InnerClasses:\n-  public static #138= #137 of #265;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #337= #336 of #339; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #203 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #324 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #204 ()I\n-      #205 REF_invokeSpecial org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n-      #204 ()I\n+      #331 ()I\n+      #332 REF_invokeSpecial org/apache/commons/compress/compressors/snappy/FramedSnappyCompressorInputStream.readOneByte:()I\n+      #331 ()I\n+InnerClasses:\n+  public static #336= #334 of #228;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #341= #337 of #339; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
