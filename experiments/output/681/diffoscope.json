{"diffoscope-json-version": 1, "source1": "first/Pass3aVerifier.class", "source2": "second/Pass3aVerifier.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,152 +1,152 @@\n-  SHA-256 checksum 4709ebf617d9ba7603df4987a382f80cc68e4a4f9b194d423e8d331487e4211b\n+  SHA-256 checksum 09502b8a3084b4dc6f54c2a0333d1ba8c8ca6b16be42ca1209a40ff51ea51d2d\n   Compiled from \"Pass3aVerifier.java\"\n public final class org.apache.bcel.verifier.statics.Pass3aVerifier extends org.apache.bcel.verifier.PassVerifier\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #134                        // org/apache/bcel/verifier/statics/Pass3aVerifier\n   super_class: #135                       // org/apache/bcel/verifier/PassVerifier\n   interfaces: 0, fields: 4, methods: 11, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #134.#256     // org/apache/bcel/verifier/statics/Pass3aVerifier.methodNo:I\n-    #2 = Fieldref           #134.#257     // org/apache/bcel/verifier/statics/Pass3aVerifier.myOwner:Lorg/apache/bcel/verifier/Verifier;\n-    #3 = Methodref          #135.#258     // org/apache/bcel/verifier/PassVerifier.\"<init>\":()V\n-    #4 = Fieldref           #134.#259     // org/apache/bcel/verifier/statics/Pass3aVerifier.instructionList:Lorg/apache/bcel/generic/InstructionList;\n-    #5 = Methodref          #62.#260      // org/apache/bcel/generic/InstructionList.getInstructionPositions:()[I\n-    #6 = Fieldref           #134.#261     // org/apache/bcel/verifier/statics/Pass3aVerifier.code:Lorg/apache/bcel/classfile/Code;\n-    #7 = Methodref          #262.#263     // org/apache/bcel/classfile/Code.getCode:()[B\n-    #8 = Methodref          #262.#264     // org/apache/bcel/classfile/Code.getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n-    #9 = Methodref          #265.#266     // org/apache/bcel/classfile/LineNumberTable.getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n-   #10 = Class              #267          // org/apache/bcel/verifier/statics/IntList\n-   #11 = Methodref          #10.#258      // org/apache/bcel/verifier/statics/IntList.\"<init>\":()V\n-   #12 = Methodref          #268.#269     // org/apache/bcel/classfile/LineNumber.getStartPC:()I\n-   #13 = Methodref          #10.#270      // org/apache/bcel/verifier/statics/IntList.contains:(I)Z\n-   #14 = Class              #271          // java/lang/StringBuilder\n-   #15 = Methodref          #14.#258      // java/lang/StringBuilder.\"<init>\":()V\n-   #16 = String             #272          // LineNumberTable attribute \\'\n-   #17 = Methodref          #14.#273      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #14.#274      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #19 = String             #275          // \\' refers to the same code offset (\\'\n-   #20 = Methodref          #14.#276      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #21 = String             #277          // \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n-   #22 = Methodref          #14.#278      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = Methodref          #134.#279     // org/apache/bcel/verifier/statics/Pass3aVerifier.addMessage:(Ljava/lang/String;)V\n-   #24 = Methodref          #10.#280      // org/apache/bcel/verifier/statics/IntList.add:(I)V\n-   #25 = Class              #281          // org/apache/bcel/verifier/exc/ClassConstraintException\n-   #26 = String             #282          // Code attribute \\'\n-   #27 = Methodref          #134.#283     // org/apache/bcel/verifier/statics/Pass3aVerifier.tostring:(Ljava/lang/Object;)Ljava/lang/String;\n-   #28 = String             #284          // \\' has a LineNumberTable attribute \\'\n-   #29 = String             #285          // \\' referring to a code offset (\\'\n-   #30 = String             #286          // \\') that does not exist.\n-   #31 = Methodref          #25.#287      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #262.#288     // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-   #33 = Class              #289          // org/apache/bcel/classfile/LocalVariableTable\n-   #34 = InvokeDynamic      #0:#295       // #0:accept:(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;[II)Ljava/util/function/Consumer;\n-   #35 = Methodref          #33.#296      // org/apache/bcel/classfile/LocalVariableTable.forEach:(Ljava/util/function/Consumer;)V\n-   #36 = Methodref          #262.#297     // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-   #37 = Methodref          #298.#269     // org/apache/bcel/classfile/CodeException.getStartPC:()I\n-   #38 = Methodref          #298.#299     // org/apache/bcel/classfile/CodeException.getEndPC:()I\n-   #39 = Methodref          #298.#300     // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n-   #40 = String             #301          // \\' has an exception_table entry \\'\n-   #41 = String             #302          // \\' that has its start_pc (\\'\n-   #42 = String             #303          // \\') not smaller than its end_pc (\\'\n-   #43 = String             #304          // \\').\n-   #44 = Methodref          #134.#305     // org/apache/bcel/verifier/statics/Pass3aVerifier.contains:([II)Z\n-   #45 = String             #306          // \\' that has a non-existant bytecode offset as its start_pc (\\'\n-   #46 = String             #307          // \\' that has a non-existant bytecode offset as its end_pc (\\'\n-   #47 = String             #308          // \\') [that is also not equal to code_length (\\'\n-   #48 = String             #309          // \\')].\n-   #49 = String             #310          // \\' that has a non-existant bytecode offset as its handler_pc (\\'\n-   #50 = Methodref          #311.#312     // org/apache/bcel/verifier/Verifier.doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n-   #51 = Fieldref           #65.#313      // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-   #52 = Methodref          #65.#314      // org/apache/bcel/verifier/VerificationResult.equals:(Ljava/lang/Object;)Z\n-   #53 = Methodref          #311.#315     // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n-   #54 = Methodref          #316.#317     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-   #55 = Methodref          #318.#319     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n-   #56 = Class              #320          // org/apache/bcel/verifier/exc/InvalidMethodException\n-   #57 = String             #321          // METHOD DOES NOT EXIST!\n-   #58 = Methodref          #56.#287      // org/apache/bcel/verifier/exc/InvalidMethodException.\"<init>\":(Ljava/lang/String;)V\n-   #59 = Methodref          #322.#323     // org/apache/bcel/classfile/Method.getCode:()Lorg/apache/bcel/classfile/Code;\n-   #60 = Methodref          #322.#324     // org/apache/bcel/classfile/Method.isAbstract:()Z\n-   #61 = Methodref          #322.#325     // org/apache/bcel/classfile/Method.isNative:()Z\n-   #62 = Class              #326          // org/apache/bcel/generic/InstructionList\n-   #63 = Methodref          #62.#327      // org/apache/bcel/generic/InstructionList.\"<init>\":([B)V\n-   #64 = Class              #328          // java/lang/RuntimeException\n-   #65 = Class              #329          // org/apache/bcel/verifier/VerificationResult\n-   #66 = String             #330          // Bad bytecode in the code array of the Code attribute of method \\'\n-   #67 = String             #331          // \\'.\n-   #68 = Methodref          #65.#332      // org/apache/bcel/verifier/VerificationResult.\"<init>\":(ILjava/lang/String;)V\n-   #69 = Methodref          #62.#333      // org/apache/bcel/generic/InstructionList.setPositions:(Z)V\n-   #70 = Methodref          #134.#334     // org/apache/bcel/verifier/statics/Pass3aVerifier.delayedPass2Checks:()V\n-   #71 = Class              #335          // org/apache/bcel/classfile/ClassFormatException\n-   #72 = Methodref          #64.#336      // java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n-   #73 = Methodref          #134.#337     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionChecks:()V\n-   #74 = Methodref          #134.#338     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionOperandsChecks:()V\n-   #75 = Class              #339          // org/apache/bcel/verifier/exc/StaticCodeConstraintException\n-   #76 = Class              #340          // java/lang/ClassCastException\n-   #77 = String             #341          // Class Cast Exception:\n-   #78 = Methodref          #76.#336      // java/lang/ClassCastException.getMessage:()Ljava/lang/String;\n-   #79 = Fieldref           #65.#342      // org/apache/bcel/verifier/VerificationResult.VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n-   #80 = Class              #343          // java/lang/ClassNotFoundException\n-   #81 = Class              #344          // org/apache/bcel/verifier/exc/AssertionViolatedException\n-   #82 = String             #345          // Missing class:\n-   #83 = Methodref          #81.#346      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #84 = Class              #347          // org/apache/bcel/Const\n+    #1 = Fieldref           #134.#248     // org/apache/bcel/verifier/statics/Pass3aVerifier.methodNo:I\n+    #2 = Fieldref           #134.#249     // org/apache/bcel/verifier/statics/Pass3aVerifier.myOwner:Lorg/apache/bcel/verifier/Verifier;\n+    #3 = Methodref          #135.#250     // org/apache/bcel/verifier/PassVerifier.\"<init>\":()V\n+    #4 = Fieldref           #134.#251     // org/apache/bcel/verifier/statics/Pass3aVerifier.instructionList:Lorg/apache/bcel/generic/InstructionList;\n+    #5 = Methodref          #62.#252      // org/apache/bcel/generic/InstructionList.getInstructionPositions:()[I\n+    #6 = Fieldref           #134.#253     // org/apache/bcel/verifier/statics/Pass3aVerifier.code:Lorg/apache/bcel/classfile/Code;\n+    #7 = Methodref          #254.#255     // org/apache/bcel/classfile/Code.getCode:()[B\n+    #8 = Methodref          #254.#256     // org/apache/bcel/classfile/Code.getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n+    #9 = Methodref          #187.#257     // org/apache/bcel/classfile/LineNumberTable.getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n+   #10 = Class              #258          // org/apache/bcel/verifier/statics/IntList\n+   #11 = Methodref          #10.#250      // org/apache/bcel/verifier/statics/IntList.\"<init>\":()V\n+   #12 = Methodref          #189.#259     // org/apache/bcel/classfile/LineNumber.getStartPC:()I\n+   #13 = Methodref          #10.#260      // org/apache/bcel/verifier/statics/IntList.contains:(I)Z\n+   #14 = Class              #261          // java/lang/StringBuilder\n+   #15 = Methodref          #14.#250      // java/lang/StringBuilder.\"<init>\":()V\n+   #16 = String             #262          // LineNumberTable attribute \\'\n+   #17 = Methodref          #14.#263      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #18 = Methodref          #14.#264      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #19 = String             #265          // \\' refers to the same code offset (\\'\n+   #20 = Methodref          #14.#266      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #21 = String             #267          // \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n+   #22 = Methodref          #14.#268      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #23 = Methodref          #134.#269     // org/apache/bcel/verifier/statics/Pass3aVerifier.addMessage:(Ljava/lang/String;)V\n+   #24 = Methodref          #10.#270      // org/apache/bcel/verifier/statics/IntList.add:(I)V\n+   #25 = Class              #271          // org/apache/bcel/verifier/exc/ClassConstraintException\n+   #26 = String             #272          // Code attribute \\'\n+   #27 = Methodref          #134.#273     // org/apache/bcel/verifier/statics/Pass3aVerifier.tostring:(Ljava/lang/Object;)Ljava/lang/String;\n+   #28 = String             #274          // \\' has a LineNumberTable attribute \\'\n+   #29 = String             #275          // \\' referring to a code offset (\\'\n+   #30 = String             #276          // \\') that does not exist.\n+   #31 = Methodref          #25.#277      // org/apache/bcel/verifier/exc/ClassConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #32 = Methodref          #254.#278     // org/apache/bcel/classfile/Code.getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+   #33 = Class              #279          // org/apache/bcel/classfile/LocalVariableTable\n+   #34 = InvokeDynamic      #0:#285       // #0:accept:(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;[II)Ljava/util/function/Consumer;\n+   #35 = Methodref          #33.#286      // org/apache/bcel/classfile/LocalVariableTable.forEach:(Ljava/util/function/Consumer;)V\n+   #36 = Methodref          #254.#287     // org/apache/bcel/classfile/Code.getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+   #37 = Methodref          #192.#259     // org/apache/bcel/classfile/CodeException.getStartPC:()I\n+   #38 = Methodref          #192.#288     // org/apache/bcel/classfile/CodeException.getEndPC:()I\n+   #39 = Methodref          #192.#289     // org/apache/bcel/classfile/CodeException.getHandlerPC:()I\n+   #40 = String             #290          // \\' has an exception_table entry \\'\n+   #41 = String             #291          // \\' that has its start_pc (\\'\n+   #42 = String             #292          // \\') not smaller than its end_pc (\\'\n+   #43 = String             #293          // \\').\n+   #44 = Methodref          #134.#294     // org/apache/bcel/verifier/statics/Pass3aVerifier.contains:([II)Z\n+   #45 = String             #295          // \\' that has a non-existant bytecode offset as its start_pc (\\'\n+   #46 = String             #296          // \\' that has a non-existant bytecode offset as its end_pc (\\'\n+   #47 = String             #297          // \\') [that is also not equal to code_length (\\'\n+   #48 = String             #298          // \\')].\n+   #49 = String             #299          // \\' that has a non-existant bytecode offset as its handler_pc (\\'\n+   #50 = Methodref          #300.#301     // org/apache/bcel/verifier/Verifier.doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n+   #51 = Fieldref           #65.#302      // org/apache/bcel/verifier/VerificationResult.VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+   #52 = Methodref          #65.#303      // org/apache/bcel/verifier/VerificationResult.equals:(Ljava/lang/Object;)Z\n+   #53 = Methodref          #300.#304     // org/apache/bcel/verifier/Verifier.getClassName:()Ljava/lang/String;\n+   #54 = Methodref          #305.#306     // org/apache/bcel/Repository.lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+   #55 = Methodref          #210.#307     // org/apache/bcel/classfile/JavaClass.getMethods:()[Lorg/apache/bcel/classfile/Method;\n+   #56 = Class              #308          // org/apache/bcel/verifier/exc/InvalidMethodException\n+   #57 = String             #309          // METHOD DOES NOT EXIST!\n+   #58 = Methodref          #56.#277      // org/apache/bcel/verifier/exc/InvalidMethodException.\"<init>\":(Ljava/lang/String;)V\n+   #59 = Methodref          #212.#310     // org/apache/bcel/classfile/Method.getCode:()Lorg/apache/bcel/classfile/Code;\n+   #60 = Methodref          #212.#311     // org/apache/bcel/classfile/Method.isAbstract:()Z\n+   #61 = Methodref          #212.#312     // org/apache/bcel/classfile/Method.isNative:()Z\n+   #62 = Class              #313          // org/apache/bcel/generic/InstructionList\n+   #63 = Methodref          #62.#314      // org/apache/bcel/generic/InstructionList.\"<init>\":([B)V\n+   #64 = Class              #315          // java/lang/RuntimeException\n+   #65 = Class              #316          // org/apache/bcel/verifier/VerificationResult\n+   #66 = String             #317          // Bad bytecode in the code array of the Code attribute of method \\'\n+   #67 = String             #318          // \\'.\n+   #68 = Methodref          #65.#319      // org/apache/bcel/verifier/VerificationResult.\"<init>\":(ILjava/lang/String;)V\n+   #69 = Methodref          #62.#320      // org/apache/bcel/generic/InstructionList.setPositions:(Z)V\n+   #70 = Methodref          #134.#321     // org/apache/bcel/verifier/statics/Pass3aVerifier.delayedPass2Checks:()V\n+   #71 = Class              #322          // org/apache/bcel/classfile/ClassFormatException\n+   #72 = Methodref          #64.#323      // java/lang/RuntimeException.getMessage:()Ljava/lang/String;\n+   #73 = Methodref          #134.#324     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionChecks:()V\n+   #74 = Methodref          #134.#325     // org/apache/bcel/verifier/statics/Pass3aVerifier.pass3StaticInstructionOperandsChecks:()V\n+   #75 = Class              #326          // org/apache/bcel/verifier/exc/StaticCodeConstraintException\n+   #76 = Class              #327          // java/lang/ClassCastException\n+   #77 = String             #328          // Class Cast Exception:\n+   #78 = Methodref          #76.#323      // java/lang/ClassCastException.getMessage:()Ljava/lang/String;\n+   #79 = Fieldref           #65.#329      // org/apache/bcel/verifier/VerificationResult.VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n+   #80 = Class              #330          // java/lang/ClassNotFoundException\n+   #81 = Class              #331          // org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #82 = String             #332          // Missing class:\n+   #83 = Methodref          #81.#333      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #84 = Class              #334          // org/apache/bcel/Const\n    #85 = Integer            65536\n-   #86 = Class              #348          // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n-   #87 = String             #349          // Code array in code attribute \\'\n-   #88 = String             #350          // \\' too big: must be smaller than\n-   #89 = String             #351          // 65536 bytes.\n-   #90 = Methodref          #86.#287      // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #91 = Methodref          #62.#352      // org/apache/bcel/generic/InstructionList.getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n-   #92 = Methodref          #353.#354     // org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n-   #93 = Class              #355          // org/apache/bcel/generic/IMPDEP1\n-   #94 = String             #356          // IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-   #95 = Class              #357          // org/apache/bcel/generic/IMPDEP2\n-   #96 = String             #358          // IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-   #97 = Class              #359          // org/apache/bcel/generic/BREAKPOINT\n-   #98 = String             #360          // BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-   #99 = Methodref          #353.#361     // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #100 = Methodref          #62.#362      // org/apache/bcel/generic/InstructionList.getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #101 = Class              #363          // org/apache/bcel/generic/ReturnInstruction\n-  #102 = Class              #364          // org/apache/bcel/generic/RET\n-  #103 = Class              #365          // org/apache/bcel/generic/GotoInstruction\n-  #104 = Class              #366          // org/apache/bcel/generic/ATHROW\n-  #105 = String             #367          // Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n-  #106 = Class              #368          // org/apache/bcel/generic/ConstantPoolGen\n-  #107 = Methodref          #318.#369     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #108 = Methodref          #106.#370     // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #109 = Class              #371          // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n-  #110 = Methodref          #109.#372     // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #111 = Class              #373          // org/apache/bcel/generic/JsrInstruction\n-  #112 = Methodref          #111.#374     // org/apache/bcel/generic/JsrInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #113 = Class              #375          // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n-  #114 = String             #376          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n-  #115 = String             #377          // \\' as its target.\n-  #116 = Methodref          #113.#287     // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException.\"<init>\":(Ljava/lang/String;)V\n-  #117 = Class              #378          // org/apache/bcel/generic/ASTORE\n-  #118 = String             #379          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n-  #119 = String             #380          // \\' targets \\'\n-  #120 = Methodref          #353.#381     // org/apache/bcel/generic/InstructionHandle.accept:(Lorg/apache/bcel/generic/Visitor;)V\n-  #121 = Methodref          #382.#278     // java/lang/Object.toString:()Ljava/lang/String;\n-  #122 = Methodref          #382.#383     // java/lang/Object.getClass:()Ljava/lang/Class;\n-  #123 = Methodref          #384.#385     // java/lang/Class.getName:()Ljava/lang/String;\n-  #124 = String             #386          // .\n-  #125 = Methodref          #387.#388     // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-  #126 = Methodref          #387.#389     // java/lang/String.substring:(I)Ljava/lang/String;\n-  #127 = String             #390          // <<\n-  #128 = String             #391          // >>\n-  #129 = Methodref          #392.#269     // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n-  #130 = Methodref          #392.#393     // org/apache/bcel/classfile/LocalVariable.getLength:()I\n-  #131 = String             #394          // \\' has a LocalVariableTable attribute \\'\n-  #132 = Methodref          #262.#395     // org/apache/bcel/classfile/Code.getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n-  #133 = String             #396          // \\' referring to a code offset start_pc+length (\\'\n-  #134 = Class              #397          // org/apache/bcel/verifier/statics/Pass3aVerifier\n-  #135 = Class              #398          // org/apache/bcel/verifier/PassVerifier\n+   #86 = Class              #335          // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n+   #87 = String             #336          // Code array in code attribute \\'\n+   #88 = String             #337          // \\' too big: must be smaller than\n+   #89 = String             #338          // 65536 bytes.\n+   #90 = Methodref          #86.#277      // org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException.\"<init>\":(Ljava/lang/String;)V\n+   #91 = Methodref          #62.#339      // org/apache/bcel/generic/InstructionList.getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n+   #92 = Methodref          #220.#340     // org/apache/bcel/generic/InstructionHandle.getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+   #93 = Class              #341          // org/apache/bcel/generic/IMPDEP1\n+   #94 = String             #342          // IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+   #95 = Class              #343          // org/apache/bcel/generic/IMPDEP2\n+   #96 = String             #344          // IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+   #97 = Class              #345          // org/apache/bcel/generic/BREAKPOINT\n+   #98 = String             #346          // BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+   #99 = Methodref          #220.#347     // org/apache/bcel/generic/InstructionHandle.getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #100 = Methodref          #62.#348      // org/apache/bcel/generic/InstructionList.getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #101 = Class              #349          // org/apache/bcel/generic/ReturnInstruction\n+  #102 = Class              #350          // org/apache/bcel/generic/RET\n+  #103 = Class              #351          // org/apache/bcel/generic/GotoInstruction\n+  #104 = Class              #352          // org/apache/bcel/generic/ATHROW\n+  #105 = String             #353          // Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n+  #106 = Class              #354          // org/apache/bcel/generic/ConstantPoolGen\n+  #107 = Methodref          #210.#355     // org/apache/bcel/classfile/JavaClass.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #108 = Methodref          #106.#356     // org/apache/bcel/generic/ConstantPoolGen.\"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #109 = Class              #357          // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n+  #110 = Methodref          #109.#358     // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor.\"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #111 = Class              #359          // org/apache/bcel/generic/JsrInstruction\n+  #112 = Methodref          #111.#360     // org/apache/bcel/generic/JsrInstruction.getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #113 = Class              #361          // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n+  #114 = String             #362          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n+  #115 = String             #363          // \\' as its target.\n+  #116 = Methodref          #113.#277     // org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException.\"<init>\":(Ljava/lang/String;)V\n+  #117 = Class              #364          // org/apache/bcel/generic/ASTORE\n+  #118 = String             #365          // Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n+  #119 = String             #366          // \\' targets \\'\n+  #120 = Methodref          #220.#367     // org/apache/bcel/generic/InstructionHandle.accept:(Lorg/apache/bcel/generic/Visitor;)V\n+  #121 = Methodref          #368.#268     // java/lang/Object.toString:()Ljava/lang/String;\n+  #122 = Methodref          #368.#369     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #123 = Methodref          #370.#371     // java/lang/Class.getName:()Ljava/lang/String;\n+  #124 = String             #372          // .\n+  #125 = Methodref          #235.#373     // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+  #126 = Methodref          #235.#374     // java/lang/String.substring:(I)Ljava/lang/String;\n+  #127 = String             #375          // <<\n+  #128 = String             #376          // >>\n+  #129 = Methodref          #377.#259     // org/apache/bcel/classfile/LocalVariable.getStartPC:()I\n+  #130 = Methodref          #377.#378     // org/apache/bcel/classfile/LocalVariable.getLength:()I\n+  #131 = String             #379          // \\' has a LocalVariableTable attribute \\'\n+  #132 = Methodref          #254.#380     // org/apache/bcel/classfile/Code.getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n+  #133 = String             #381          // \\' referring to a code offset start_pc+length (\\'\n+  #134 = Class              #382          // org/apache/bcel/verifier/statics/Pass3aVerifier\n+  #135 = Class              #383          // org/apache/bcel/verifier/PassVerifier\n   #136 = Utf8               InstOperandConstraintVisitor\n   #137 = Utf8               InnerClasses\n   #138 = Utf8               myOwner\n   #139 = Utf8               Lorg/apache/bcel/verifier/Verifier;\n   #140 = Utf8               methodNo\n   #141 = Utf8               I\n   #142 = Utf8               instructionList\n@@ -190,326 +190,311 @@\n   #180 = Utf8               codeLength\n   #181 = Utf8               lnt\n   #182 = Utf8               Lorg/apache/bcel/classfile/LineNumberTable;\n   #183 = Utf8               atts\n   #184 = Utf8               [Lorg/apache/bcel/classfile/Attribute;\n   #185 = Utf8               exceptionTable\n   #186 = Utf8               [Lorg/apache/bcel/classfile/CodeException;\n-  #187 = Class              #397          // org/apache/bcel/verifier/statics/Pass3aVerifier\n-  #188 = Class              #399          // org/apache/bcel/classfile/LineNumberTable\n-  #189 = Class              #169          // \"[Lorg/apache/bcel/classfile/LineNumber;\"\n-  #190 = Class              #267          // org/apache/bcel/verifier/statics/IntList\n-  #191 = Class              #400          // org/apache/bcel/classfile/LineNumber\n-  #192 = Class              #184          // \"[Lorg/apache/bcel/classfile/Attribute;\"\n-  #193 = Class              #186          // \"[Lorg/apache/bcel/classfile/CodeException;\"\n-  #194 = Class              #401          // org/apache/bcel/classfile/CodeException\n-  #195 = Utf8               do_verify\n-  #196 = Utf8               ()Lorg/apache/bcel/verifier/VerificationResult;\n-  #197 = Utf8               re\n-  #198 = Utf8               Ljava/lang/RuntimeException;\n-  #199 = Utf8               cce\n-  #200 = Utf8               scce\n-  #201 = Utf8               Ljava/lang/ClassCastException;\n-  #202 = Utf8               jc\n-  #203 = Utf8               Lorg/apache/bcel/classfile/JavaClass;\n-  #204 = Utf8               methods\n-  #205 = Utf8               [Lorg/apache/bcel/classfile/Method;\n-  #206 = Utf8               method\n-  #207 = Utf8               Lorg/apache/bcel/classfile/Method;\n-  #208 = Utf8               vr\n-  #209 = Utf8               Lorg/apache/bcel/verifier/VerificationResult;\n-  #210 = Utf8               e\n-  #211 = Utf8               Ljava/lang/ClassNotFoundException;\n-  #212 = Class              #402          // org/apache/bcel/classfile/JavaClass\n-  #213 = Class              #205          // \"[Lorg/apache/bcel/classfile/Method;\"\n-  #214 = Class              #403          // org/apache/bcel/classfile/Method\n-  #215 = Class              #328          // java/lang/RuntimeException\n-  #216 = Class              #329          // org/apache/bcel/verifier/VerificationResult\n-  #217 = Class              #340          // java/lang/ClassCastException\n-  #218 = Class              #343          // java/lang/ClassNotFoundException\n-  #219 = Utf8               getMethodNo\n-  #220 = Utf8               ()I\n-  #221 = Utf8               pass3StaticInstructionChecks\n-  #222 = Utf8               Lorg/apache/bcel/generic/Instruction;\n-  #223 = Utf8               ih\n-  #224 = Utf8               Lorg/apache/bcel/generic/InstructionHandle;\n-  #225 = Utf8               last\n-  #226 = Class              #404          // org/apache/bcel/generic/InstructionHandle\n-  #227 = Class              #405          // org/apache/bcel/generic/Instruction\n-  #228 = Utf8               pass3StaticInstructionOperandsChecks\n-  #229 = Utf8               target\n-  #230 = Utf8               cpg\n-  #231 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #232 = Utf8               v\n-  #233 = Utf8               Lorg/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor;\n-  #234 = Class              #368          // org/apache/bcel/generic/ConstantPoolGen\n-  #235 = Class              #371          // org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n-  #236 = Utf8               tostring\n-  #237 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n-  #238 = Utf8               ret\n-  #239 = Utf8               Ljava/lang/String;\n-  #240 = Utf8               s\n-  #241 = Utf8               obj\n-  #242 = Utf8               Ljava/lang/Object;\n-  #243 = Class              #406          // java/lang/String\n-  #244 = Utf8               lambda$delayedPass2Checks$0\n-  #245 = Utf8               ([IILorg/apache/bcel/classfile/LocalVariable;)V\n-  #246 = Utf8               localVariable\n-  #247 = Utf8               Lorg/apache/bcel/classfile/LocalVariable;\n-  #248 = Utf8               length\n-  #249 = Utf8               access$000\n-  #250 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)Lorg/apache/bcel/verifier/Verifier;\n-  #251 = Utf8               x0\n-  #252 = Utf8               access$100\n-  #253 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)I\n-  #254 = Utf8               SourceFile\n-  #255 = Utf8               Pass3aVerifier.java\n-  #256 = NameAndType        #140:#141     // methodNo:I\n-  #257 = NameAndType        #138:#139     // myOwner:Lorg/apache/bcel/verifier/Verifier;\n-  #258 = NameAndType        #157:#163     // \"<init>\":()V\n-  #259 = NameAndType        #142:#143     // instructionList:Lorg/apache/bcel/generic/InstructionList;\n-  #260 = NameAndType        #407:#408     // getInstructionPositions:()[I\n-  #261 = NameAndType        #144:#145     // code:Lorg/apache/bcel/classfile/Code;\n-  #262 = Class              #409          // org/apache/bcel/classfile/Code\n-  #263 = NameAndType        #410:#411     // getCode:()[B\n-  #264 = NameAndType        #412:#413     // getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n-  #265 = Class              #399          // org/apache/bcel/classfile/LineNumberTable\n-  #266 = NameAndType        #412:#414     // getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n-  #267 = Utf8               org/apache/bcel/verifier/statics/IntList\n-  #268 = Class              #400          // org/apache/bcel/classfile/LineNumber\n-  #269 = NameAndType        #415:#220     // getStartPC:()I\n-  #270 = NameAndType        #146:#416     // contains:(I)Z\n-  #271 = Utf8               java/lang/StringBuilder\n-  #272 = Utf8               LineNumberTable attribute \\'\n-  #273 = NameAndType        #417:#418     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #274 = NameAndType        #417:#419     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #275 = Utf8               \\' refers to the same code offset (\\'\n-  #276 = NameAndType        #417:#420     // append:(I)Ljava/lang/StringBuilder;\n-  #277 = Utf8               \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n-  #278 = NameAndType        #421:#422     // toString:()Ljava/lang/String;\n-  #279 = NameAndType        #423:#424     // addMessage:(Ljava/lang/String;)V\n-  #280 = NameAndType        #425:#426     // add:(I)V\n-  #281 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n-  #282 = Utf8               Code attribute \\'\n-  #283 = NameAndType        #236:#237     // tostring:(Ljava/lang/Object;)Ljava/lang/String;\n-  #284 = Utf8               \\' has a LineNumberTable attribute \\'\n-  #285 = Utf8               \\' referring to a code offset (\\'\n-  #286 = Utf8               \\') that does not exist.\n-  #287 = NameAndType        #157:#424     // \"<init>\":(Ljava/lang/String;)V\n-  #288 = NameAndType        #427:#428     // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n-  #289 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n-  #290 = Utf8               BootstrapMethods\n-  #291 = MethodHandle       6:#429        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #292 = MethodType         #430          //  (Ljava/lang/Object;)V\n-  #293 = MethodHandle       7:#431        // REF_invokeSpecial org/apache/bcel/verifier/statics/Pass3aVerifier.lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n-  #294 = MethodType         #432          //  (Lorg/apache/bcel/classfile/LocalVariable;)V\n-  #295 = NameAndType        #433:#434     // accept:(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;[II)Ljava/util/function/Consumer;\n-  #296 = NameAndType        #435:#436     // forEach:(Ljava/util/function/Consumer;)V\n-  #297 = NameAndType        #437:#438     // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n-  #298 = Class              #401          // org/apache/bcel/classfile/CodeException\n-  #299 = NameAndType        #439:#220     // getEndPC:()I\n-  #300 = NameAndType        #440:#220     // getHandlerPC:()I\n-  #301 = Utf8               \\' has an exception_table entry \\'\n-  #302 = Utf8               \\' that has its start_pc (\\'\n-  #303 = Utf8               \\') not smaller than its end_pc (\\'\n-  #304 = Utf8               \\').\n-  #305 = NameAndType        #146:#147     // contains:([II)Z\n-  #306 = Utf8               \\' that has a non-existant bytecode offset as its start_pc (\\'\n-  #307 = Utf8               \\' that has a non-existant bytecode offset as its end_pc (\\'\n-  #308 = Utf8               \\') [that is also not equal to code_length (\\'\n-  #309 = Utf8               \\')].\n-  #310 = Utf8               \\' that has a non-existant bytecode offset as its handler_pc (\\'\n-  #311 = Class              #441          // org/apache/bcel/verifier/Verifier\n-  #312 = NameAndType        #442:#196     // doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n-  #313 = NameAndType        #443:#209     // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n-  #314 = NameAndType        #444:#445     // equals:(Ljava/lang/Object;)Z\n-  #315 = NameAndType        #446:#422     // getClassName:()Ljava/lang/String;\n-  #316 = Class              #447          // org/apache/bcel/Repository\n-  #317 = NameAndType        #448:#449     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #318 = Class              #402          // org/apache/bcel/classfile/JavaClass\n-  #319 = NameAndType        #450:#451     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n-  #320 = Utf8               org/apache/bcel/verifier/exc/InvalidMethodException\n-  #321 = Utf8               METHOD DOES NOT EXIST!\n-  #322 = Class              #403          // org/apache/bcel/classfile/Method\n-  #323 = NameAndType        #410:#452     // getCode:()Lorg/apache/bcel/classfile/Code;\n-  #324 = NameAndType        #453:#454     // isAbstract:()Z\n-  #325 = NameAndType        #455:#454     // isNative:()Z\n-  #326 = Utf8               org/apache/bcel/generic/InstructionList\n-  #327 = NameAndType        #157:#456     // \"<init>\":([B)V\n-  #328 = Utf8               java/lang/RuntimeException\n-  #329 = Utf8               org/apache/bcel/verifier/VerificationResult\n-  #330 = Utf8               Bad bytecode in the code array of the Code attribute of method \\'\n-  #331 = Utf8               \\'.\n-  #332 = NameAndType        #157:#457     // \"<init>\":(ILjava/lang/String;)V\n-  #333 = NameAndType        #458:#459     // setPositions:(Z)V\n-  #334 = NameAndType        #162:#163     // delayedPass2Checks:()V\n-  #335 = Utf8               org/apache/bcel/classfile/ClassFormatException\n-  #336 = NameAndType        #460:#422     // getMessage:()Ljava/lang/String;\n-  #337 = NameAndType        #221:#163     // pass3StaticInstructionChecks:()V\n-  #338 = NameAndType        #228:#163     // pass3StaticInstructionOperandsChecks:()V\n-  #339 = Utf8               org/apache/bcel/verifier/exc/StaticCodeConstraintException\n-  #340 = Utf8               java/lang/ClassCastException\n-  #341 = Utf8               Class Cast Exception:\n-  #342 = NameAndType        #461:#209     // VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n-  #343 = Utf8               java/lang/ClassNotFoundException\n-  #344 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #345 = Utf8               Missing class:\n-  #346 = NameAndType        #157:#462     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #347 = Utf8               org/apache/bcel/Const\n-  #348 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n-  #349 = Utf8               Code array in code attribute \\'\n-  #350 = Utf8               \\' too big: must be smaller than\n-  #351 = Utf8               65536 bytes.\n-  #352 = NameAndType        #463:#464     // getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #353 = Class              #404          // org/apache/bcel/generic/InstructionHandle\n-  #354 = NameAndType        #465:#466     // getInstruction:()Lorg/apache/bcel/generic/Instruction;\n-  #355 = Utf8               org/apache/bcel/generic/IMPDEP1\n-  #356 = Utf8               IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #357 = Utf8               org/apache/bcel/generic/IMPDEP2\n-  #358 = Utf8               IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #359 = Utf8               org/apache/bcel/generic/BREAKPOINT\n-  #360 = Utf8               BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n-  #361 = NameAndType        #467:#464     // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #362 = NameAndType        #468:#464     // getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #363 = Utf8               org/apache/bcel/generic/ReturnInstruction\n-  #364 = Utf8               org/apache/bcel/generic/RET\n-  #365 = Utf8               org/apache/bcel/generic/GotoInstruction\n-  #366 = Utf8               org/apache/bcel/generic/ATHROW\n-  #367 = Utf8               Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n-  #368 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #369 = NameAndType        #469:#470     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #370 = NameAndType        #157:#471     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #371 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n-  #372 = NameAndType        #157:#472     // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #373 = Utf8               org/apache/bcel/generic/JsrInstruction\n-  #374 = NameAndType        #473:#464     // getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n-  #375 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n-  #376 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n-  #377 = Utf8               \\' as its target.\n-  #378 = Utf8               org/apache/bcel/generic/ASTORE\n-  #379 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n-  #380 = Utf8               \\' targets \\'\n-  #381 = NameAndType        #433:#474     // accept:(Lorg/apache/bcel/generic/Visitor;)V\n-  #382 = Class              #475          // java/lang/Object\n-  #383 = NameAndType        #476:#477     // getClass:()Ljava/lang/Class;\n-  #384 = Class              #478          // java/lang/Class\n-  #385 = NameAndType        #479:#422     // getName:()Ljava/lang/String;\n-  #386 = Utf8               .\n-  #387 = Class              #406          // java/lang/String\n-  #388 = NameAndType        #480:#481     // lastIndexOf:(Ljava/lang/String;)I\n-  #389 = NameAndType        #482:#483     // substring:(I)Ljava/lang/String;\n-  #390 = Utf8               <<\n-  #391 = Utf8               >>\n-  #392 = Class              #484          // org/apache/bcel/classfile/LocalVariable\n-  #393 = NameAndType        #485:#220     // getLength:()I\n-  #394 = Utf8               \\' has a LocalVariableTable attribute \\'\n-  #395 = NameAndType        #486:#487     // getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n-  #396 = Utf8               \\' referring to a code offset start_pc+length (\\'\n-  #397 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier\n-  #398 = Utf8               org/apache/bcel/verifier/PassVerifier\n-  #399 = Utf8               org/apache/bcel/classfile/LineNumberTable\n-  #400 = Utf8               org/apache/bcel/classfile/LineNumber\n-  #401 = Utf8               org/apache/bcel/classfile/CodeException\n-  #402 = Utf8               org/apache/bcel/classfile/JavaClass\n-  #403 = Utf8               org/apache/bcel/classfile/Method\n-  #404 = Utf8               org/apache/bcel/generic/InstructionHandle\n-  #405 = Utf8               org/apache/bcel/generic/Instruction\n-  #406 = Utf8               java/lang/String\n-  #407 = Utf8               getInstructionPositions\n-  #408 = Utf8               ()[I\n-  #409 = Utf8               org/apache/bcel/classfile/Code\n-  #410 = Utf8               getCode\n-  #411 = Utf8               ()[B\n-  #412 = Utf8               getLineNumberTable\n-  #413 = Utf8               ()Lorg/apache/bcel/classfile/LineNumberTable;\n-  #414 = Utf8               ()[Lorg/apache/bcel/classfile/LineNumber;\n-  #415 = Utf8               getStartPC\n-  #416 = Utf8               (I)Z\n-  #417 = Utf8               append\n-  #418 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #419 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #420 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #421 = Utf8               toString\n-  #422 = Utf8               ()Ljava/lang/String;\n-  #423 = Utf8               addMessage\n-  #424 = Utf8               (Ljava/lang/String;)V\n-  #425 = Utf8               add\n-  #426 = Utf8               (I)V\n-  #427 = Utf8               getAttributes\n-  #428 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n-  #429 = Methodref          #488.#489     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #430 = Utf8               (Ljava/lang/Object;)V\n-  #431 = Methodref          #134.#490     // org/apache/bcel/verifier/statics/Pass3aVerifier.lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n-  #432 = Utf8               (Lorg/apache/bcel/classfile/LocalVariable;)V\n-  #433 = Utf8               accept\n-  #434 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;[II)Ljava/util/function/Consumer;\n-  #435 = Utf8               forEach\n-  #436 = Utf8               (Ljava/util/function/Consumer;)V\n-  #437 = Utf8               getExceptionTable\n-  #438 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n-  #439 = Utf8               getEndPC\n-  #440 = Utf8               getHandlerPC\n-  #441 = Utf8               org/apache/bcel/verifier/Verifier\n-  #442 = Utf8               doPass2\n-  #443 = Utf8               VR_OK\n-  #444 = Utf8               equals\n-  #445 = Utf8               (Ljava/lang/Object;)Z\n-  #446 = Utf8               getClassName\n-  #447 = Utf8               org/apache/bcel/Repository\n-  #448 = Utf8               lookupClass\n-  #449 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n-  #450 = Utf8               getMethods\n-  #451 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n-  #452 = Utf8               ()Lorg/apache/bcel/classfile/Code;\n-  #453 = Utf8               isAbstract\n-  #454 = Utf8               ()Z\n-  #455 = Utf8               isNative\n-  #456 = Utf8               ([B)V\n-  #457 = Utf8               (ILjava/lang/String;)V\n-  #458 = Utf8               setPositions\n-  #459 = Utf8               (Z)V\n-  #460 = Utf8               getMessage\n-  #461 = Utf8               VR_NOTYET\n-  #462 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #463 = Utf8               getStart\n-  #464 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n-  #465 = Utf8               getInstruction\n-  #466 = Utf8               ()Lorg/apache/bcel/generic/Instruction;\n-  #467 = Utf8               getNext\n-  #468 = Utf8               getEnd\n-  #469 = Utf8               getConstantPool\n-  #470 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #471 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n-  #472 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #473 = Utf8               getTarget\n-  #474 = Utf8               (Lorg/apache/bcel/generic/Visitor;)V\n-  #475 = Utf8               java/lang/Object\n-  #476 = Utf8               getClass\n-  #477 = Utf8               ()Ljava/lang/Class;\n-  #478 = Utf8               java/lang/Class\n-  #479 = Utf8               getName\n-  #480 = Utf8               lastIndexOf\n-  #481 = Utf8               (Ljava/lang/String;)I\n-  #482 = Utf8               substring\n-  #483 = Utf8               (I)Ljava/lang/String;\n-  #484 = Utf8               org/apache/bcel/classfile/LocalVariable\n-  #485 = Utf8               getLength\n-  #486 = Utf8               getLocalVariableTable\n-  #487 = Utf8               ()Lorg/apache/bcel/classfile/LocalVariableTable;\n-  #488 = Class              #491          // java/lang/invoke/LambdaMetafactory\n-  #489 = NameAndType        #492:#495     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #490 = NameAndType        #244:#245     // lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n-  #491 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #492 = Utf8               metafactory\n-  #493 = Class              #497          // java/lang/invoke/MethodHandles$Lookup\n-  #494 = Utf8               Lookup\n-  #495 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #496 = Class              #498          // java/lang/invoke/MethodHandles\n-  #497 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #498 = Utf8               java/lang/invoke/MethodHandles\n+  #187 = Class              #384          // org/apache/bcel/classfile/LineNumberTable\n+  #188 = Class              #169          // \"[Lorg/apache/bcel/classfile/LineNumber;\"\n+  #189 = Class              #385          // org/apache/bcel/classfile/LineNumber\n+  #190 = Class              #184          // \"[Lorg/apache/bcel/classfile/Attribute;\"\n+  #191 = Class              #186          // \"[Lorg/apache/bcel/classfile/CodeException;\"\n+  #192 = Class              #386          // org/apache/bcel/classfile/CodeException\n+  #193 = Utf8               do_verify\n+  #194 = Utf8               ()Lorg/apache/bcel/verifier/VerificationResult;\n+  #195 = Utf8               re\n+  #196 = Utf8               Ljava/lang/RuntimeException;\n+  #197 = Utf8               cce\n+  #198 = Utf8               scce\n+  #199 = Utf8               Ljava/lang/ClassCastException;\n+  #200 = Utf8               jc\n+  #201 = Utf8               Lorg/apache/bcel/classfile/JavaClass;\n+  #202 = Utf8               methods\n+  #203 = Utf8               [Lorg/apache/bcel/classfile/Method;\n+  #204 = Utf8               method\n+  #205 = Utf8               Lorg/apache/bcel/classfile/Method;\n+  #206 = Utf8               vr\n+  #207 = Utf8               Lorg/apache/bcel/verifier/VerificationResult;\n+  #208 = Utf8               e\n+  #209 = Utf8               Ljava/lang/ClassNotFoundException;\n+  #210 = Class              #387          // org/apache/bcel/classfile/JavaClass\n+  #211 = Class              #203          // \"[Lorg/apache/bcel/classfile/Method;\"\n+  #212 = Class              #388          // org/apache/bcel/classfile/Method\n+  #213 = Utf8               getMethodNo\n+  #214 = Utf8               ()I\n+  #215 = Utf8               pass3StaticInstructionChecks\n+  #216 = Utf8               Lorg/apache/bcel/generic/Instruction;\n+  #217 = Utf8               ih\n+  #218 = Utf8               Lorg/apache/bcel/generic/InstructionHandle;\n+  #219 = Utf8               last\n+  #220 = Class              #389          // org/apache/bcel/generic/InstructionHandle\n+  #221 = Class              #390          // org/apache/bcel/generic/Instruction\n+  #222 = Utf8               pass3StaticInstructionOperandsChecks\n+  #223 = Utf8               target\n+  #224 = Utf8               cpg\n+  #225 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #226 = Utf8               v\n+  #227 = Utf8               Lorg/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor;\n+  #228 = Utf8               tostring\n+  #229 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n+  #230 = Utf8               ret\n+  #231 = Utf8               Ljava/lang/String;\n+  #232 = Utf8               s\n+  #233 = Utf8               obj\n+  #234 = Utf8               Ljava/lang/Object;\n+  #235 = Class              #391          // java/lang/String\n+  #236 = Utf8               lambda$delayedPass2Checks$0\n+  #237 = Utf8               ([IILorg/apache/bcel/classfile/LocalVariable;)V\n+  #238 = Utf8               localVariable\n+  #239 = Utf8               Lorg/apache/bcel/classfile/LocalVariable;\n+  #240 = Utf8               length\n+  #241 = Utf8               access$000\n+  #242 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)Lorg/apache/bcel/verifier/Verifier;\n+  #243 = Utf8               x0\n+  #244 = Utf8               access$100\n+  #245 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;)I\n+  #246 = Utf8               SourceFile\n+  #247 = Utf8               Pass3aVerifier.java\n+  #248 = NameAndType        #140:#141     // methodNo:I\n+  #249 = NameAndType        #138:#139     // myOwner:Lorg/apache/bcel/verifier/Verifier;\n+  #250 = NameAndType        #157:#163     // \"<init>\":()V\n+  #251 = NameAndType        #142:#143     // instructionList:Lorg/apache/bcel/generic/InstructionList;\n+  #252 = NameAndType        #392:#393     // getInstructionPositions:()[I\n+  #253 = NameAndType        #144:#145     // code:Lorg/apache/bcel/classfile/Code;\n+  #254 = Class              #394          // org/apache/bcel/classfile/Code\n+  #255 = NameAndType        #395:#396     // getCode:()[B\n+  #256 = NameAndType        #397:#398     // getLineNumberTable:()Lorg/apache/bcel/classfile/LineNumberTable;\n+  #257 = NameAndType        #397:#399     // getLineNumberTable:()[Lorg/apache/bcel/classfile/LineNumber;\n+  #258 = Utf8               org/apache/bcel/verifier/statics/IntList\n+  #259 = NameAndType        #400:#214     // getStartPC:()I\n+  #260 = NameAndType        #146:#401     // contains:(I)Z\n+  #261 = Utf8               java/lang/StringBuilder\n+  #262 = Utf8               LineNumberTable attribute \\'\n+  #263 = NameAndType        #402:#403     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #264 = NameAndType        #402:#404     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #265 = Utf8               \\' refers to the same code offset (\\'\n+  #266 = NameAndType        #402:#405     // append:(I)Ljava/lang/StringBuilder;\n+  #267 = Utf8               \\') more than once which is violating the semantics [but is sometimes produced by IBM\\'s \\'jikes\\' compiler].\n+  #268 = NameAndType        #406:#407     // toString:()Ljava/lang/String;\n+  #269 = NameAndType        #408:#409     // addMessage:(Ljava/lang/String;)V\n+  #270 = NameAndType        #410:#411     // add:(I)V\n+  #271 = Utf8               org/apache/bcel/verifier/exc/ClassConstraintException\n+  #272 = Utf8               Code attribute \\'\n+  #273 = NameAndType        #228:#229     // tostring:(Ljava/lang/Object;)Ljava/lang/String;\n+  #274 = Utf8               \\' has a LineNumberTable attribute \\'\n+  #275 = Utf8               \\' referring to a code offset (\\'\n+  #276 = Utf8               \\') that does not exist.\n+  #277 = NameAndType        #157:#409     // \"<init>\":(Ljava/lang/String;)V\n+  #278 = NameAndType        #412:#413     // getAttributes:()[Lorg/apache/bcel/classfile/Attribute;\n+  #279 = Utf8               org/apache/bcel/classfile/LocalVariableTable\n+  #280 = Utf8               BootstrapMethods\n+  #281 = MethodHandle       6:#414        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #282 = MethodType         #415          //  (Ljava/lang/Object;)V\n+  #283 = MethodHandle       7:#416        // REF_invokeSpecial org/apache/bcel/verifier/statics/Pass3aVerifier.lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n+  #284 = MethodType         #417          //  (Lorg/apache/bcel/classfile/LocalVariable;)V\n+  #285 = NameAndType        #418:#419     // accept:(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;[II)Ljava/util/function/Consumer;\n+  #286 = NameAndType        #420:#421     // forEach:(Ljava/util/function/Consumer;)V\n+  #287 = NameAndType        #422:#423     // getExceptionTable:()[Lorg/apache/bcel/classfile/CodeException;\n+  #288 = NameAndType        #424:#214     // getEndPC:()I\n+  #289 = NameAndType        #425:#214     // getHandlerPC:()I\n+  #290 = Utf8               \\' has an exception_table entry \\'\n+  #291 = Utf8               \\' that has its start_pc (\\'\n+  #292 = Utf8               \\') not smaller than its end_pc (\\'\n+  #293 = Utf8               \\').\n+  #294 = NameAndType        #146:#147     // contains:([II)Z\n+  #295 = Utf8               \\' that has a non-existant bytecode offset as its start_pc (\\'\n+  #296 = Utf8               \\' that has a non-existant bytecode offset as its end_pc (\\'\n+  #297 = Utf8               \\') [that is also not equal to code_length (\\'\n+  #298 = Utf8               \\')].\n+  #299 = Utf8               \\' that has a non-existant bytecode offset as its handler_pc (\\'\n+  #300 = Class              #426          // org/apache/bcel/verifier/Verifier\n+  #301 = NameAndType        #427:#194     // doPass2:()Lorg/apache/bcel/verifier/VerificationResult;\n+  #302 = NameAndType        #428:#207     // VR_OK:Lorg/apache/bcel/verifier/VerificationResult;\n+  #303 = NameAndType        #429:#430     // equals:(Ljava/lang/Object;)Z\n+  #304 = NameAndType        #431:#407     // getClassName:()Ljava/lang/String;\n+  #305 = Class              #432          // org/apache/bcel/Repository\n+  #306 = NameAndType        #433:#434     // lookupClass:(Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #307 = NameAndType        #435:#436     // getMethods:()[Lorg/apache/bcel/classfile/Method;\n+  #308 = Utf8               org/apache/bcel/verifier/exc/InvalidMethodException\n+  #309 = Utf8               METHOD DOES NOT EXIST!\n+  #310 = NameAndType        #395:#437     // getCode:()Lorg/apache/bcel/classfile/Code;\n+  #311 = NameAndType        #438:#439     // isAbstract:()Z\n+  #312 = NameAndType        #440:#439     // isNative:()Z\n+  #313 = Utf8               org/apache/bcel/generic/InstructionList\n+  #314 = NameAndType        #157:#441     // \"<init>\":([B)V\n+  #315 = Utf8               java/lang/RuntimeException\n+  #316 = Utf8               org/apache/bcel/verifier/VerificationResult\n+  #317 = Utf8               Bad bytecode in the code array of the Code attribute of method \\'\n+  #318 = Utf8               \\'.\n+  #319 = NameAndType        #157:#442     // \"<init>\":(ILjava/lang/String;)V\n+  #320 = NameAndType        #443:#444     // setPositions:(Z)V\n+  #321 = NameAndType        #162:#163     // delayedPass2Checks:()V\n+  #322 = Utf8               org/apache/bcel/classfile/ClassFormatException\n+  #323 = NameAndType        #445:#407     // getMessage:()Ljava/lang/String;\n+  #324 = NameAndType        #215:#163     // pass3StaticInstructionChecks:()V\n+  #325 = NameAndType        #222:#163     // pass3StaticInstructionOperandsChecks:()V\n+  #326 = Utf8               org/apache/bcel/verifier/exc/StaticCodeConstraintException\n+  #327 = Utf8               java/lang/ClassCastException\n+  #328 = Utf8               Class Cast Exception:\n+  #329 = NameAndType        #446:#207     // VR_NOTYET:Lorg/apache/bcel/verifier/VerificationResult;\n+  #330 = Utf8               java/lang/ClassNotFoundException\n+  #331 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+  #332 = Utf8               Missing class:\n+  #333 = NameAndType        #157:#447     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #334 = Utf8               org/apache/bcel/Const\n+  #335 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionConstraintException\n+  #336 = Utf8               Code array in code attribute \\'\n+  #337 = Utf8               \\' too big: must be smaller than\n+  #338 = Utf8               65536 bytes.\n+  #339 = NameAndType        #448:#449     // getStart:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #340 = NameAndType        #450:#451     // getInstruction:()Lorg/apache/bcel/generic/Instruction;\n+  #341 = Utf8               org/apache/bcel/generic/IMPDEP1\n+  #342 = Utf8               IMPDEP1 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #343 = Utf8               org/apache/bcel/generic/IMPDEP2\n+  #344 = Utf8               IMPDEP2 must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #345 = Utf8               org/apache/bcel/generic/BREAKPOINT\n+  #346 = Utf8               BREAKPOINT must not be in the code, it is an illegal instruction for _internal_ JVM use!\n+  #347 = NameAndType        #452:#449     // getNext:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #348 = NameAndType        #453:#449     // getEnd:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #349 = Utf8               org/apache/bcel/generic/ReturnInstruction\n+  #350 = Utf8               org/apache/bcel/generic/RET\n+  #351 = Utf8               org/apache/bcel/generic/GotoInstruction\n+  #352 = Utf8               org/apache/bcel/generic/ATHROW\n+  #353 = Utf8               Execution must not fall off the bottom of the code array. This constraint is enforced statically as some existing verifiers do - so it may be a false alarm if the last instruction is not reachable.\n+  #354 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #355 = NameAndType        #454:#455     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #356 = NameAndType        #157:#456     // \"<init>\":(Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #357 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor\n+  #358 = NameAndType        #157:#457     // \"<init>\":(Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #359 = Utf8               org/apache/bcel/generic/JsrInstruction\n+  #360 = NameAndType        #458:#449     // getTarget:()Lorg/apache/bcel/generic/InstructionHandle;\n+  #361 = Utf8               org/apache/bcel/verifier/exc/StaticCodeInstructionOperandConstraintException\n+  #362 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may have a top-level instruction (such as the very first instruction, which is targeted by instruction \\'\n+  #363 = Utf8               \\' as its target.\n+  #364 = Utf8               org/apache/bcel/generic/ASTORE\n+  #365 = Utf8               Due to JustIce\\'s clear definition of subroutines, no JSR or JSR_W may target anything else than an ASTORE instruction. Instruction \\'\n+  #366 = Utf8               \\' targets \\'\n+  #367 = NameAndType        #418:#459     // accept:(Lorg/apache/bcel/generic/Visitor;)V\n+  #368 = Class              #460          // java/lang/Object\n+  #369 = NameAndType        #461:#462     // getClass:()Ljava/lang/Class;\n+  #370 = Class              #463          // java/lang/Class\n+  #371 = NameAndType        #464:#407     // getName:()Ljava/lang/String;\n+  #372 = Utf8               .\n+  #373 = NameAndType        #465:#466     // lastIndexOf:(Ljava/lang/String;)I\n+  #374 = NameAndType        #467:#468     // substring:(I)Ljava/lang/String;\n+  #375 = Utf8               <<\n+  #376 = Utf8               >>\n+  #377 = Class              #469          // org/apache/bcel/classfile/LocalVariable\n+  #378 = NameAndType        #470:#214     // getLength:()I\n+  #379 = Utf8               \\' has a LocalVariableTable attribute \\'\n+  #380 = NameAndType        #471:#472     // getLocalVariableTable:()Lorg/apache/bcel/classfile/LocalVariableTable;\n+  #381 = Utf8               \\' referring to a code offset start_pc+length (\\'\n+  #382 = Utf8               org/apache/bcel/verifier/statics/Pass3aVerifier\n+  #383 = Utf8               org/apache/bcel/verifier/PassVerifier\n+  #384 = Utf8               org/apache/bcel/classfile/LineNumberTable\n+  #385 = Utf8               org/apache/bcel/classfile/LineNumber\n+  #386 = Utf8               org/apache/bcel/classfile/CodeException\n+  #387 = Utf8               org/apache/bcel/classfile/JavaClass\n+  #388 = Utf8               org/apache/bcel/classfile/Method\n+  #389 = Utf8               org/apache/bcel/generic/InstructionHandle\n+  #390 = Utf8               org/apache/bcel/generic/Instruction\n+  #391 = Utf8               java/lang/String\n+  #392 = Utf8               getInstructionPositions\n+  #393 = Utf8               ()[I\n+  #394 = Utf8               org/apache/bcel/classfile/Code\n+  #395 = Utf8               getCode\n+  #396 = Utf8               ()[B\n+  #397 = Utf8               getLineNumberTable\n+  #398 = Utf8               ()Lorg/apache/bcel/classfile/LineNumberTable;\n+  #399 = Utf8               ()[Lorg/apache/bcel/classfile/LineNumber;\n+  #400 = Utf8               getStartPC\n+  #401 = Utf8               (I)Z\n+  #402 = Utf8               append\n+  #403 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #404 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #405 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #406 = Utf8               toString\n+  #407 = Utf8               ()Ljava/lang/String;\n+  #408 = Utf8               addMessage\n+  #409 = Utf8               (Ljava/lang/String;)V\n+  #410 = Utf8               add\n+  #411 = Utf8               (I)V\n+  #412 = Utf8               getAttributes\n+  #413 = Utf8               ()[Lorg/apache/bcel/classfile/Attribute;\n+  #414 = Methodref          #473.#474     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #415 = Utf8               (Ljava/lang/Object;)V\n+  #416 = Methodref          #134.#475     // org/apache/bcel/verifier/statics/Pass3aVerifier.lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n+  #417 = Utf8               (Lorg/apache/bcel/classfile/LocalVariable;)V\n+  #418 = Utf8               accept\n+  #419 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;[II)Ljava/util/function/Consumer;\n+  #420 = Utf8               forEach\n+  #421 = Utf8               (Ljava/util/function/Consumer;)V\n+  #422 = Utf8               getExceptionTable\n+  #423 = Utf8               ()[Lorg/apache/bcel/classfile/CodeException;\n+  #424 = Utf8               getEndPC\n+  #425 = Utf8               getHandlerPC\n+  #426 = Utf8               org/apache/bcel/verifier/Verifier\n+  #427 = Utf8               doPass2\n+  #428 = Utf8               VR_OK\n+  #429 = Utf8               equals\n+  #430 = Utf8               (Ljava/lang/Object;)Z\n+  #431 = Utf8               getClassName\n+  #432 = Utf8               org/apache/bcel/Repository\n+  #433 = Utf8               lookupClass\n+  #434 = Utf8               (Ljava/lang/String;)Lorg/apache/bcel/classfile/JavaClass;\n+  #435 = Utf8               getMethods\n+  #436 = Utf8               ()[Lorg/apache/bcel/classfile/Method;\n+  #437 = Utf8               ()Lorg/apache/bcel/classfile/Code;\n+  #438 = Utf8               isAbstract\n+  #439 = Utf8               ()Z\n+  #440 = Utf8               isNative\n+  #441 = Utf8               ([B)V\n+  #442 = Utf8               (ILjava/lang/String;)V\n+  #443 = Utf8               setPositions\n+  #444 = Utf8               (Z)V\n+  #445 = Utf8               getMessage\n+  #446 = Utf8               VR_NOTYET\n+  #447 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #448 = Utf8               getStart\n+  #449 = Utf8               ()Lorg/apache/bcel/generic/InstructionHandle;\n+  #450 = Utf8               getInstruction\n+  #451 = Utf8               ()Lorg/apache/bcel/generic/Instruction;\n+  #452 = Utf8               getNext\n+  #453 = Utf8               getEnd\n+  #454 = Utf8               getConstantPool\n+  #455 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #456 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)V\n+  #457 = Utf8               (Lorg/apache/bcel/verifier/statics/Pass3aVerifier;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #458 = Utf8               getTarget\n+  #459 = Utf8               (Lorg/apache/bcel/generic/Visitor;)V\n+  #460 = Utf8               java/lang/Object\n+  #461 = Utf8               getClass\n+  #462 = Utf8               ()Ljava/lang/Class;\n+  #463 = Utf8               java/lang/Class\n+  #464 = Utf8               getName\n+  #465 = Utf8               lastIndexOf\n+  #466 = Utf8               (Ljava/lang/String;)I\n+  #467 = Utf8               substring\n+  #468 = Utf8               (I)Ljava/lang/String;\n+  #469 = Utf8               org/apache/bcel/classfile/LocalVariable\n+  #470 = Utf8               getLength\n+  #471 = Utf8               getLocalVariableTable\n+  #472 = Utf8               ()Lorg/apache/bcel/classfile/LocalVariableTable;\n+  #473 = Class              #476          // java/lang/invoke/LambdaMetafactory\n+  #474 = NameAndType        #477:#480     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #475 = NameAndType        #236:#237     // lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n+  #476 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #477 = Utf8               metafactory\n+  #478 = Class              #482          // java/lang/invoke/MethodHandles$Lookup\n+  #479 = Utf8               Lookup\n+  #480 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #481 = Class              #483          // java/lang/invoke/MethodHandles\n+  #482 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #483 = Utf8               java/lang/invoke/MethodHandles\n {\n   private final org.apache.bcel.verifier.Verifier myOwner;\n     descriptor: Lorg/apache/bcel/verifier/Verifier;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int methodNo;\n     descriptor: I\n@@ -1732,14 +1717,14 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/bcel/verifier/statics/Pass3aVerifier;\n }\n SourceFile: \"Pass3aVerifier.java\"\n InnerClasses:\n   private #136= #109 of #134;             // InstOperandConstraintVisitor=class org/apache/bcel/verifier/statics/Pass3aVerifier$InstOperandConstraintVisitor of class org/apache/bcel/verifier/statics/Pass3aVerifier\n-  public static final #494= #493 of #496; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #479= #478 of #481; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #291 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #281 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #292 (Ljava/lang/Object;)V\n-      #293 REF_invokeSpecial org/apache/bcel/verifier/statics/Pass3aVerifier.lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n-      #294 (Lorg/apache/bcel/classfile/LocalVariable;)V\n+      #282 (Ljava/lang/Object;)V\n+      #283 REF_invokeSpecial org/apache/bcel/verifier/statics/Pass3aVerifier.lambda$delayedPass2Checks$0:([IILorg/apache/bcel/classfile/LocalVariable;)V\n+      #284 (Lorg/apache/bcel/classfile/LocalVariable;)V\n"}]}
