{"diffoscope-json-version": 1, "source1": "first/AttributeLayout.class", "source2": "second/AttributeLayout.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,276 +1,276 @@\n-  SHA-256 checksum a74ae9f056498bc6e1359a48ccd26014bb2e6be2b7a6251b14b3b9f4d4315fcd\n+  SHA-256 checksum 6b382e3f2edd5f5b52e1d4586b122a67e663593932121d4c726634d74509130f\n   Compiled from \"AttributeLayout.java\"\n public class org.apache.commons.compress.harmony.unpack200.AttributeLayout implements org.apache.commons.compress.harmony.unpack200.IMatcher\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #22                         // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-  super_class: #53                        // java/lang/Object\n+  this_class: #51                         // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+  super_class: #56                        // java/lang/Object\n   interfaces: 1, fields: 44, methods: 17, attributes: 1\n Constant pool:\n-    #1 = String             #172          // R\n-    #2 = Methodref          #48.#173      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #3 = Methodref          #48.#174      // java/lang/String.indexOf:(I)I\n-    #4 = String             #175          // RU\n-    #5 = Class              #176          // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n-    #6 = Methodref          #5.#177       // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-    #7 = String             #178          // RS\n-    #8 = String             #179          // K\n-    #9 = Methodref          #48.#180      // java/lang/String.charAt:(I)C\n-   #10 = Class              #181          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-   #11 = Class              #182          // java/lang/StringBuilder\n-   #12 = Methodref          #11.#183      // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #184          // Unknown layout encoding:\n-   #14 = Methodref          #11.#185      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#186      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #10.#187      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #22.#188      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.\"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n-   #18 = Methodref          #53.#183      // java/lang/Object.\"<init>\":()V\n-   #19 = Fieldref           #22.#189      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.index:I\n-   #20 = Fieldref           #22.#190      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.context:I\n-   #21 = Fieldref           #22.#191      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.mask:J\n-   #22 = Class              #192          // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-   #23 = String             #193          // Attribute context out of range:\n-   #24 = Methodref          #11.#194      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #25 = String             #195          // Cannot have a null layout\n-   #26 = Methodref          #48.#196      // java/lang/String.length:()I\n-   #27 = String             #197          // Cannot have an unnamed layout\n-   #28 = Fieldref           #22.#198      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.name:Ljava/lang/String;\n-   #29 = Fieldref           #22.#199      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.layout:Ljava/lang/String;\n-   #30 = Fieldref           #22.#200      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.isDefault:Z\n-   #31 = Fieldref           #201.#202     // org/apache/commons/compress/harmony/pack200/Codec.BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #32 = Fieldref           #201.#203     // org/apache/commons/compress/harmony/pack200/Codec.BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #33 = String             #204          // KS\n-   #34 = Methodref          #48.#205      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #35 = Fieldref           #201.#206     // org/apache/commons/compress/harmony/pack200/Codec.SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #36 = Fieldref           #201.#207     // org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #37 = Fieldref           #201.#208     // org/apache/commons/compress/harmony/pack200/Codec.UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #38 = Methodref          #22.#209      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #39 = String             #210          // KQ\n-   #40 = String             #56           // Ljava/lang/String;\n-   #41 = Methodref          #48.#211      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #42 = Methodref          #48.#212      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #43 = Methodref          #48.#213      // java/lang/String.hashCode:()I\n-   #44 = String             #214          // *\n-   #45 = Fieldref           #22.#215      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.backwardsCallCount:I\n-   #46 = Fieldref           #22.#216      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n-   #47 = String             #217          // :\n-   #48 = Class              #218          // java/lang/String\n-   #49 = String             #219          // Class\n-   #50 = String             #220          // Field\n-   #51 = String             #221          // Method\n-   #52 = String             #142          // Code\n-   #53 = Class              #222          // java/lang/Object\n-   #54 = Class              #223          // org/apache/commons/compress/harmony/unpack200/IMatcher\n-   #55 = Utf8               ACC_ABSTRACT\n-   #56 = Utf8               Ljava/lang/String;\n-   #57 = Utf8               ConstantValue\n-   #58 = String             #55           // ACC_ABSTRACT\n-   #59 = Utf8               ACC_ANNOTATION\n-   #60 = String             #59           // ACC_ANNOTATION\n-   #61 = Utf8               ACC_ENUM\n-   #62 = String             #61           // ACC_ENUM\n-   #63 = Utf8               ACC_FINAL\n-   #64 = String             #63           // ACC_FINAL\n-   #65 = Utf8               ACC_INTERFACE\n-   #66 = String             #65           // ACC_INTERFACE\n-   #67 = Utf8               ACC_NATIVE\n-   #68 = String             #67           // ACC_NATIVE\n-   #69 = Utf8               ACC_PRIVATE\n-   #70 = String             #69           // ACC_PRIVATE\n-   #71 = Utf8               ACC_PROTECTED\n-   #72 = String             #71           // ACC_PROTECTED\n-   #73 = Utf8               ACC_PUBLIC\n-   #74 = String             #73           // ACC_PUBLIC\n-   #75 = Utf8               ACC_STATIC\n-   #76 = String             #75           // ACC_STATIC\n-   #77 = Utf8               ACC_STRICT\n-   #78 = String             #77           // ACC_STRICT\n-   #79 = Utf8               ACC_SYNCHRONIZED\n-   #80 = String             #79           // ACC_SYNCHRONIZED\n-   #81 = Utf8               ACC_SYNTHETIC\n-   #82 = String             #81           // ACC_SYNTHETIC\n-   #83 = Utf8               ACC_TRANSIENT\n-   #84 = String             #83           // ACC_TRANSIENT\n-   #85 = Utf8               ACC_VOLATILE\n-   #86 = String             #85           // ACC_VOLATILE\n-   #87 = Utf8               ATTRIBUTE_ANNOTATION_DEFAULT\n-   #88 = String             #224          // AnnotationDefault\n-   #89 = Utf8               ATTRIBUTE_CLASS_FILE_VERSION\n-   #90 = String             #225          // class-file version\n-   #91 = Utf8               ATTRIBUTE_CODE\n-   #92 = Utf8               ATTRIBUTE_CONSTANT_VALUE\n-   #93 = String             #57           // ConstantValue\n-   #94 = Utf8               ATTRIBUTE_DEPRECATED\n-   #95 = String             #226          // Deprecated\n-   #96 = Utf8               ATTRIBUTE_ENCLOSING_METHOD\n-   #97 = String             #227          // EnclosingMethod\n-   #98 = Utf8               ATTRIBUTE_EXCEPTIONS\n-   #99 = String             #145          // Exceptions\n-  #100 = Utf8               ATTRIBUTE_INNER_CLASSES\n-  #101 = String             #228          // InnerClasses\n-  #102 = Utf8               ATTRIBUTE_LINE_NUMBER_TABLE\n-  #103 = String             #143          // LineNumberTable\n-  #104 = Utf8               ATTRIBUTE_LOCAL_VARIABLE_TABLE\n-  #105 = String             #229          // LocalVariableTable\n-  #106 = Utf8               ATTRIBUTE_LOCAL_VARIABLE_TYPE_TABLE\n-  #107 = String             #230          // LocalVariableTypeTable\n-  #108 = Utf8               ATTRIBUTE_RUNTIME_INVISIBLE_ANNOTATIONS\n-  #109 = String             #231          // RuntimeInvisibleAnnotations\n-  #110 = Utf8               ATTRIBUTE_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS\n-  #111 = String             #232          // RuntimeInvisibleParameterAnnotations\n-  #112 = Utf8               ATTRIBUTE_RUNTIME_VISIBLE_ANNOTATIONS\n-  #113 = String             #233          // RuntimeVisibleAnnotations\n-  #114 = Utf8               ATTRIBUTE_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS\n-  #115 = String             #234          // RuntimeVisibleParameterAnnotations\n-  #116 = Utf8               ATTRIBUTE_SIGNATURE\n-  #117 = String             #235          // Signature\n-  #118 = Utf8               ATTRIBUTE_SOURCE_FILE\n-  #119 = String             #170          // SourceFile\n-  #120 = Utf8               CONTEXT_CLASS\n-  #121 = Utf8               I\n-  #122 = Integer            0\n-  #123 = Utf8               CONTEXT_CODE\n-  #124 = Integer            3\n-  #125 = Utf8               CONTEXT_FIELD\n-  #126 = Integer            1\n-  #127 = Utf8               CONTEXT_METHOD\n-  #128 = Integer            2\n-  #129 = Utf8               contextNames\n-  #130 = Utf8               [Ljava/lang/String;\n-  #131 = Utf8               context\n-  #132 = Utf8               index\n-  #133 = Utf8               layout\n-  #134 = Utf8               mask\n-  #135 = Utf8               J\n-  #136 = Utf8               name\n-  #137 = Utf8               isDefault\n-  #138 = Utf8               Z\n-  #139 = Utf8               backwardsCallCount\n-  #140 = Utf8               getValue\n-  #141 = Utf8               (Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #142 = Utf8               Code\n-  #143 = Utf8               LineNumberTable\n-  #144 = Utf8               StackMapTable\n-  #145 = Utf8               Exceptions\n-  #146 = Utf8               <init>\n-  #147 = Utf8               (Ljava/lang/String;ILjava/lang/String;I)V\n-  #148 = Utf8               (Ljava/lang/String;ILjava/lang/String;IZ)V\n-  #149 = Utf8               getCodec\n-  #150 = Utf8               ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n-  #151 = Utf8               getContext\n-  #152 = Utf8               ()I\n-  #153 = Utf8               getIndex\n-  #154 = Utf8               getLayout\n-  #155 = Utf8               ()Ljava/lang/String;\n-  #156 = Utf8               getName\n-  #157 = Utf8               (JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #158 = Utf8               (JLjava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #159 = Utf8               hashCode\n-  #160 = Utf8               isDefaultLayout\n-  #161 = Utf8               ()Z\n-  #162 = Utf8               matches\n-  #163 = Utf8               (J)Z\n-  #164 = Utf8               numBackwardsCallables\n-  #165 = Utf8               setBackwardsCallCount\n-  #166 = Utf8               (I)V\n-  #167 = Utf8               toString\n-  #168 = Utf8               <clinit>\n-  #169 = Utf8               ()V\n-  #170 = Utf8               SourceFile\n-  #171 = Utf8               AttributeLayout.java\n-  #172 = Utf8               R\n-  #173 = NameAndType        #236:#237     // startsWith:(Ljava/lang/String;)Z\n-  #174 = NameAndType        #238:#239     // indexOf:(I)I\n-  #175 = Utf8               RU\n-  #176 = Utf8               org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n-  #177 = NameAndType        #140:#240     // getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #178 = Utf8               RS\n-  #179 = Utf8               K\n-  #180 = NameAndType        #241:#242     // charAt:(I)C\n-  #181 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #182 = Utf8               java/lang/StringBuilder\n-  #183 = NameAndType        #146:#169     // \"<init>\":()V\n-  #184 = Utf8               Unknown layout encoding:\n-  #185 = NameAndType        #243:#244     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #186 = NameAndType        #167:#155     // toString:()Ljava/lang/String;\n-  #187 = NameAndType        #146:#245     // \"<init>\":(Ljava/lang/String;)V\n-  #188 = NameAndType        #146:#148     // \"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n-  #189 = NameAndType        #132:#121     // index:I\n-  #190 = NameAndType        #131:#121     // context:I\n-  #191 = NameAndType        #134:#135     // mask:J\n-  #192 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayout\n-  #193 = Utf8               Attribute context out of range:\n-  #194 = NameAndType        #243:#246     // append:(I)Ljava/lang/StringBuilder;\n-  #195 = Utf8               Cannot have a null layout\n-  #196 = NameAndType        #247:#152     // length:()I\n-  #197 = Utf8               Cannot have an unnamed layout\n-  #198 = NameAndType        #136:#56      // name:Ljava/lang/String;\n-  #199 = NameAndType        #133:#56      // layout:Ljava/lang/String;\n-  #200 = NameAndType        #137:#138     // isDefault:Z\n-  #201 = Class              #248          // org/apache/commons/compress/harmony/pack200/Codec\n-  #202 = NameAndType        #249:#250     // BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #203 = NameAndType        #251:#250     // BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #204 = Utf8               KS\n-  #205 = NameAndType        #238:#252     // indexOf:(Ljava/lang/String;)I\n-  #206 = NameAndType        #253:#250     // SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #207 = NameAndType        #254:#250     // BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #208 = NameAndType        #255:#250     // UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #209 = NameAndType        #140:#141     // getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #210 = Utf8               KQ\n-  #211 = NameAndType        #256:#257     // equals:(Ljava/lang/Object;)Z\n-  #212 = NameAndType        #258:#259     // substring:(I)Ljava/lang/String;\n-  #213 = NameAndType        #159:#152     // hashCode:()I\n-  #214 = Utf8               *\n-  #215 = NameAndType        #139:#121     // backwardsCallCount:I\n-  #216 = NameAndType        #129:#130     // contextNames:[Ljava/lang/String;\n-  #217 = Utf8               :\n-  #218 = Utf8               java/lang/String\n-  #219 = Utf8               Class\n-  #220 = Utf8               Field\n-  #221 = Utf8               Method\n-  #222 = Utf8               java/lang/Object\n-  #223 = Utf8               org/apache/commons/compress/harmony/unpack200/IMatcher\n-  #224 = Utf8               AnnotationDefault\n-  #225 = Utf8               class-file version\n-  #226 = Utf8               Deprecated\n-  #227 = Utf8               EnclosingMethod\n-  #228 = Utf8               InnerClasses\n-  #229 = Utf8               LocalVariableTable\n-  #230 = Utf8               LocalVariableTypeTable\n-  #231 = Utf8               RuntimeInvisibleAnnotations\n-  #232 = Utf8               RuntimeInvisibleParameterAnnotations\n-  #233 = Utf8               RuntimeVisibleAnnotations\n-  #234 = Utf8               RuntimeVisibleParameterAnnotations\n-  #235 = Utf8               Signature\n-  #236 = Utf8               startsWith\n-  #237 = Utf8               (Ljava/lang/String;)Z\n-  #238 = Utf8               indexOf\n-  #239 = Utf8               (I)I\n-  #240 = Utf8               (IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #241 = Utf8               charAt\n-  #242 = Utf8               (I)C\n-  #243 = Utf8               append\n-  #244 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #245 = Utf8               (Ljava/lang/String;)V\n-  #246 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #247 = Utf8               length\n-  #248 = Utf8               org/apache/commons/compress/harmony/pack200/Codec\n-  #249 = Utf8               BRANCH5\n-  #250 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #251 = Utf8               BCI5\n-  #252 = Utf8               (Ljava/lang/String;)I\n-  #253 = Utf8               SIGNED5\n-  #254 = Utf8               BYTE1\n-  #255 = Utf8               UNSIGNED5\n-  #256 = Utf8               equals\n-  #257 = Utf8               (Ljava/lang/Object;)Z\n-  #258 = Utf8               substring\n-  #259 = Utf8               (I)Ljava/lang/String;\n+    #1 = String             #2            // R\n+    #2 = Utf8               R\n+    #3 = Methodref          #4.#5         // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+    #4 = Class              #6            // java/lang/String\n+    #5 = NameAndType        #7:#8         // startsWith:(Ljava/lang/String;)Z\n+    #6 = Utf8               java/lang/String\n+    #7 = Utf8               startsWith\n+    #8 = Utf8               (Ljava/lang/String;)Z\n+    #9 = Methodref          #4.#10        // java/lang/String.indexOf:(I)I\n+   #10 = NameAndType        #11:#12       // indexOf:(I)I\n+   #11 = Utf8               indexOf\n+   #12 = Utf8               (I)I\n+   #13 = String             #14           // RU\n+   #14 = Utf8               RU\n+   #15 = Class              #16           // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n+   #16 = Utf8               org/apache/commons/compress/harmony/unpack200/SegmentConstantPool\n+   #17 = Methodref          #15.#18       // org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+   #18 = NameAndType        #19:#20       // getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+   #19 = Utf8               getValue\n+   #20 = Utf8               (IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+   #21 = String             #22           // RS\n+   #22 = Utf8               RS\n+   #23 = String             #24           // K\n+   #24 = Utf8               K\n+   #25 = Methodref          #4.#26        // java/lang/String.charAt:(I)C\n+   #26 = NameAndType        #27:#28       // charAt:(I)C\n+   #27 = Utf8               charAt\n+   #28 = Utf8               (I)C\n+   #29 = Class              #30           // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+   #30 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+   #31 = Class              #32           // java/lang/StringBuilder\n+   #32 = Utf8               java/lang/StringBuilder\n+   #33 = Methodref          #31.#34       // java/lang/StringBuilder.\"<init>\":()V\n+   #34 = NameAndType        #35:#36       // \"<init>\":()V\n+   #35 = Utf8               <init>\n+   #36 = Utf8               ()V\n+   #37 = String             #38           // Unknown layout encoding:\n+   #38 = Utf8               Unknown layout encoding:\n+   #39 = Methodref          #31.#40       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #40 = NameAndType        #41:#42       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #41 = Utf8               append\n+   #42 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #43 = Methodref          #31.#44       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = NameAndType        #45:#46       // toString:()Ljava/lang/String;\n+   #45 = Utf8               toString\n+   #46 = Utf8               ()Ljava/lang/String;\n+   #47 = Methodref          #29.#48       // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+   #48 = NameAndType        #35:#49       // \"<init>\":(Ljava/lang/String;)V\n+   #49 = Utf8               (Ljava/lang/String;)V\n+   #50 = Methodref          #51.#52       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.\"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n+   #51 = Class              #53           // org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+   #52 = NameAndType        #35:#54       // \"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n+   #53 = Utf8               org/apache/commons/compress/harmony/unpack200/AttributeLayout\n+   #54 = Utf8               (Ljava/lang/String;ILjava/lang/String;IZ)V\n+   #55 = Methodref          #56.#34       // java/lang/Object.\"<init>\":()V\n+   #56 = Class              #57           // java/lang/Object\n+   #57 = Utf8               java/lang/Object\n+   #58 = Fieldref           #51.#59       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.index:I\n+   #59 = NameAndType        #60:#61       // index:I\n+   #60 = Utf8               index\n+   #61 = Utf8               I\n+   #62 = Fieldref           #51.#63       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.context:I\n+   #63 = NameAndType        #64:#61       // context:I\n+   #64 = Utf8               context\n+   #65 = Fieldref           #51.#66       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.mask:J\n+   #66 = NameAndType        #67:#68       // mask:J\n+   #67 = Utf8               mask\n+   #68 = Utf8               J\n+   #69 = String             #70           // Attribute context out of range:\n+   #70 = Utf8               Attribute context out of range:\n+   #71 = Methodref          #31.#72       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #72 = NameAndType        #41:#73       // append:(I)Ljava/lang/StringBuilder;\n+   #73 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #74 = String             #75           // Cannot have a null layout\n+   #75 = Utf8               Cannot have a null layout\n+   #76 = Methodref          #4.#77        // java/lang/String.length:()I\n+   #77 = NameAndType        #78:#79       // length:()I\n+   #78 = Utf8               length\n+   #79 = Utf8               ()I\n+   #80 = String             #81           // Cannot have an unnamed layout\n+   #81 = Utf8               Cannot have an unnamed layout\n+   #82 = Fieldref           #51.#83       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.name:Ljava/lang/String;\n+   #83 = NameAndType        #84:#85       // name:Ljava/lang/String;\n+   #84 = Utf8               name\n+   #85 = Utf8               Ljava/lang/String;\n+   #86 = Fieldref           #51.#87       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.layout:Ljava/lang/String;\n+   #87 = NameAndType        #88:#85       // layout:Ljava/lang/String;\n+   #88 = Utf8               layout\n+   #89 = Fieldref           #51.#90       // org/apache/commons/compress/harmony/unpack200/AttributeLayout.isDefault:Z\n+   #90 = NameAndType        #91:#92       // isDefault:Z\n+   #91 = Utf8               isDefault\n+   #92 = Utf8               Z\n+   #93 = Fieldref           #94.#95       // org/apache/commons/compress/harmony/pack200/Codec.BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #94 = Class              #96           // org/apache/commons/compress/harmony/pack200/Codec\n+   #95 = NameAndType        #97:#98       // BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #96 = Utf8               org/apache/commons/compress/harmony/pack200/Codec\n+   #97 = Utf8               BRANCH5\n+   #98 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #99 = Fieldref           #94.#100      // org/apache/commons/compress/harmony/pack200/Codec.BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #100 = NameAndType        #101:#98      // BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #101 = Utf8               BCI5\n+  #102 = String             #103          // KS\n+  #103 = Utf8               KS\n+  #104 = Methodref          #4.#105       // java/lang/String.indexOf:(Ljava/lang/String;)I\n+  #105 = NameAndType        #11:#106      // indexOf:(Ljava/lang/String;)I\n+  #106 = Utf8               (Ljava/lang/String;)I\n+  #107 = Fieldref           #94.#108      // org/apache/commons/compress/harmony/pack200/Codec.SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #108 = NameAndType        #109:#98      // SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #109 = Utf8               SIGNED5\n+  #110 = Fieldref           #94.#111      // org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #111 = NameAndType        #112:#98      // BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #112 = Utf8               BYTE1\n+  #113 = Fieldref           #94.#114      // org/apache/commons/compress/harmony/pack200/Codec.UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #114 = NameAndType        #115:#98      // UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #115 = Utf8               UNSIGNED5\n+  #116 = Methodref          #51.#117      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #117 = NameAndType        #19:#118      // getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #118 = Utf8               (Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #119 = String             #120          // KQ\n+  #120 = Utf8               KQ\n+  #121 = String             #85           // Ljava/lang/String;\n+  #122 = Methodref          #4.#123       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #123 = NameAndType        #124:#125     // equals:(Ljava/lang/Object;)Z\n+  #124 = Utf8               equals\n+  #125 = Utf8               (Ljava/lang/Object;)Z\n+  #126 = Methodref          #4.#127       // java/lang/String.substring:(I)Ljava/lang/String;\n+  #127 = NameAndType        #128:#129     // substring:(I)Ljava/lang/String;\n+  #128 = Utf8               substring\n+  #129 = Utf8               (I)Ljava/lang/String;\n+  #130 = Methodref          #4.#131       // java/lang/String.hashCode:()I\n+  #131 = NameAndType        #132:#79      // hashCode:()I\n+  #132 = Utf8               hashCode\n+  #133 = String             #134          // *\n+  #134 = Utf8               *\n+  #135 = Fieldref           #51.#136      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.backwardsCallCount:I\n+  #136 = NameAndType        #137:#61      // backwardsCallCount:I\n+  #137 = Utf8               backwardsCallCount\n+  #138 = Fieldref           #51.#139      // org/apache/commons/compress/harmony/unpack200/AttributeLayout.contextNames:[Ljava/lang/String;\n+  #139 = NameAndType        #140:#141     // contextNames:[Ljava/lang/String;\n+  #140 = Utf8               contextNames\n+  #141 = Utf8               [Ljava/lang/String;\n+  #142 = String             #143          // :\n+  #143 = Utf8               :\n+  #144 = String             #145          // Class\n+  #145 = Utf8               Class\n+  #146 = String             #147          // Field\n+  #147 = Utf8               Field\n+  #148 = String             #149          // Method\n+  #149 = Utf8               Method\n+  #150 = String             #151          // Code\n+  #151 = Utf8               Code\n+  #152 = Class              #153          // org/apache/commons/compress/harmony/unpack200/IMatcher\n+  #153 = Utf8               org/apache/commons/compress/harmony/unpack200/IMatcher\n+  #154 = Utf8               ACC_ABSTRACT\n+  #155 = Utf8               ConstantValue\n+  #156 = String             #154          // ACC_ABSTRACT\n+  #157 = Utf8               ACC_ANNOTATION\n+  #158 = String             #157          // ACC_ANNOTATION\n+  #159 = Utf8               ACC_ENUM\n+  #160 = String             #159          // ACC_ENUM\n+  #161 = Utf8               ACC_FINAL\n+  #162 = String             #161          // ACC_FINAL\n+  #163 = Utf8               ACC_INTERFACE\n+  #164 = String             #163          // ACC_INTERFACE\n+  #165 = Utf8               ACC_NATIVE\n+  #166 = String             #165          // ACC_NATIVE\n+  #167 = Utf8               ACC_PRIVATE\n+  #168 = String             #167          // ACC_PRIVATE\n+  #169 = Utf8               ACC_PROTECTED\n+  #170 = String             #169          // ACC_PROTECTED\n+  #171 = Utf8               ACC_PUBLIC\n+  #172 = String             #171          // ACC_PUBLIC\n+  #173 = Utf8               ACC_STATIC\n+  #174 = String             #173          // ACC_STATIC\n+  #175 = Utf8               ACC_STRICT\n+  #176 = String             #175          // ACC_STRICT\n+  #177 = Utf8               ACC_SYNCHRONIZED\n+  #178 = String             #177          // ACC_SYNCHRONIZED\n+  #179 = Utf8               ACC_SYNTHETIC\n+  #180 = String             #179          // ACC_SYNTHETIC\n+  #181 = Utf8               ACC_TRANSIENT\n+  #182 = String             #181          // ACC_TRANSIENT\n+  #183 = Utf8               ACC_VOLATILE\n+  #184 = String             #183          // ACC_VOLATILE\n+  #185 = Utf8               ATTRIBUTE_ANNOTATION_DEFAULT\n+  #186 = String             #187          // AnnotationDefault\n+  #187 = Utf8               AnnotationDefault\n+  #188 = Utf8               ATTRIBUTE_CLASS_FILE_VERSION\n+  #189 = String             #190          // class-file version\n+  #190 = Utf8               class-file version\n+  #191 = Utf8               ATTRIBUTE_CODE\n+  #192 = Utf8               ATTRIBUTE_CONSTANT_VALUE\n+  #193 = String             #155          // ConstantValue\n+  #194 = Utf8               ATTRIBUTE_DEPRECATED\n+  #195 = String             #196          // Deprecated\n+  #196 = Utf8               Deprecated\n+  #197 = Utf8               ATTRIBUTE_ENCLOSING_METHOD\n+  #198 = String             #199          // EnclosingMethod\n+  #199 = Utf8               EnclosingMethod\n+  #200 = Utf8               ATTRIBUTE_EXCEPTIONS\n+  #201 = String             #202          // Exceptions\n+  #202 = Utf8               Exceptions\n+  #203 = Utf8               ATTRIBUTE_INNER_CLASSES\n+  #204 = String             #205          // InnerClasses\n+  #205 = Utf8               InnerClasses\n+  #206 = Utf8               ATTRIBUTE_LINE_NUMBER_TABLE\n+  #207 = String             #208          // LineNumberTable\n+  #208 = Utf8               LineNumberTable\n+  #209 = Utf8               ATTRIBUTE_LOCAL_VARIABLE_TABLE\n+  #210 = String             #211          // LocalVariableTable\n+  #211 = Utf8               LocalVariableTable\n+  #212 = Utf8               ATTRIBUTE_LOCAL_VARIABLE_TYPE_TABLE\n+  #213 = String             #214          // LocalVariableTypeTable\n+  #214 = Utf8               LocalVariableTypeTable\n+  #215 = Utf8               ATTRIBUTE_RUNTIME_INVISIBLE_ANNOTATIONS\n+  #216 = String             #217          // RuntimeInvisibleAnnotations\n+  #217 = Utf8               RuntimeInvisibleAnnotations\n+  #218 = Utf8               ATTRIBUTE_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS\n+  #219 = String             #220          // RuntimeInvisibleParameterAnnotations\n+  #220 = Utf8               RuntimeInvisibleParameterAnnotations\n+  #221 = Utf8               ATTRIBUTE_RUNTIME_VISIBLE_ANNOTATIONS\n+  #222 = String             #223          // RuntimeVisibleAnnotations\n+  #223 = Utf8               RuntimeVisibleAnnotations\n+  #224 = Utf8               ATTRIBUTE_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS\n+  #225 = String             #226          // RuntimeVisibleParameterAnnotations\n+  #226 = Utf8               RuntimeVisibleParameterAnnotations\n+  #227 = Utf8               ATTRIBUTE_SIGNATURE\n+  #228 = String             #229          // Signature\n+  #229 = Utf8               Signature\n+  #230 = Utf8               ATTRIBUTE_SOURCE_FILE\n+  #231 = String             #232          // SourceFile\n+  #232 = Utf8               SourceFile\n+  #233 = Utf8               CONTEXT_CLASS\n+  #234 = Integer            0\n+  #235 = Utf8               CONTEXT_CODE\n+  #236 = Integer            3\n+  #237 = Utf8               CONTEXT_FIELD\n+  #238 = Integer            1\n+  #239 = Utf8               CONTEXT_METHOD\n+  #240 = Integer            2\n+  #241 = Utf8               StackMapTable\n+  #242 = Utf8               (Ljava/lang/String;ILjava/lang/String;I)V\n+  #243 = Utf8               getCodec\n+  #244 = Utf8               ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n+  #245 = Utf8               getContext\n+  #246 = Utf8               getIndex\n+  #247 = Utf8               getLayout\n+  #248 = Utf8               getName\n+  #249 = Utf8               (JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #250 = Utf8               (JLjava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #251 = Utf8               isDefaultLayout\n+  #252 = Utf8               ()Z\n+  #253 = Utf8               matches\n+  #254 = Utf8               (J)Z\n+  #255 = Utf8               numBackwardsCallables\n+  #256 = Utf8               setBackwardsCallCount\n+  #257 = Utf8               (I)V\n+  #258 = Utf8               <clinit>\n+  #259 = Utf8               AttributeLayout.java\n {\n   public static final java.lang.String ACC_ABSTRACT = \"ACC_ABSTRACT\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: String ACC_ABSTRACT\n \n   public static final java.lang.String ACC_ANNOTATION = \"ACC_ANNOTATION\";\n@@ -483,50 +483,50 @@\n   private static org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry getValue(java.lang.String, long, org.apache.commons.compress.harmony.unpack200.SegmentConstantPool) throws org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: (Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_0\n          1: ldc           #1                  // String R\n-         3: invokevirtual #2                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+         3: invokevirtual #3                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n          6: ifeq          56\n          9: aload_0\n         10: bipush        78\n-        12: invokevirtual #3                  // Method java/lang/String.indexOf:(I)I\n+        12: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: lload_1\n         20: lconst_1\n         21: lsub\n         22: lstore_1\n         23: aload_0\n-        24: ldc           #4                  // String RU\n-        26: invokevirtual #2                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        24: ldc           #13                 // String RU\n+        26: invokevirtual #3                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         29: ifeq          39\n         32: aload_3\n         33: iconst_1\n         34: lload_1\n-        35: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+        35: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n         38: areturn\n         39: aload_0\n-        40: ldc           #7                  // String RS\n-        42: invokevirtual #2                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        40: ldc           #21                 // String RS\n+        42: invokevirtual #3                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         45: ifeq          192\n         48: aload_3\n         49: bipush        8\n         51: lload_1\n-        52: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+        52: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n         55: areturn\n         56: aload_0\n-        57: ldc           #8                  // String K\n-        59: invokevirtual #2                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        57: ldc           #23                 // String K\n+        59: invokevirtual #3                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         62: ifeq          192\n         65: aload_0\n         66: iconst_1\n-        67: invokevirtual #9                  // Method java/lang/String.charAt:(I)C\n+        67: invokevirtual #25                 // Method java/lang/String.charAt:(I)C\n         70: istore        4\n         72: iload         4\n         74: tableswitch   { // 67 to 83\n                       67: 164\n                       68: 185\n                       69: 192\n                       70: 171\n@@ -544,47 +544,47 @@\n                       82: 192\n                       83: 156\n                  default: 192\n             }\n        156: aload_3\n        157: bipush        6\n        159: lload_1\n-       160: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+       160: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n        163: areturn\n        164: aload_3\n        165: iconst_2\n        166: lload_1\n-       167: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+       167: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n        170: areturn\n        171: aload_3\n        172: iconst_3\n        173: lload_1\n-       174: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+       174: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n        177: areturn\n        178: aload_3\n        179: iconst_4\n        180: lload_1\n-       181: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+       181: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n        184: areturn\n        185: aload_3\n        186: iconst_5\n        187: lload_1\n-       188: invokevirtual #6                  // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+       188: invokevirtual #17                 // Method org/apache/commons/compress/harmony/unpack200/SegmentConstantPool.getValue:(IJ)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n        191: areturn\n-       192: new           #10                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n+       192: new           #29                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n        195: dup\n-       196: new           #11                 // class java/lang/StringBuilder\n+       196: new           #31                 // class java/lang/StringBuilder\n        199: dup\n-       200: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       203: ldc           #13                 // String Unknown layout encoding:\n-       205: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       200: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       203: ldc           #37                 // String Unknown layout encoding:\n+       205: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        208: aload_0\n-       209: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       212: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       215: invokespecial #16                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+       209: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       212: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       215: invokespecial #47                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n        218: athrow\n       LineNumberTable:\n         line 69: 0\n         line 71: 9\n         line 72: 19\n         line 74: 23\n         line 75: 32\n@@ -622,95 +622,95 @@\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aload_3\n          4: iload         4\n          6: iconst_1\n-         7: invokespecial #17                 // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n+         7: invokespecial #50                 // Method \"<init>\":(Ljava/lang/String;ILjava/lang/String;IZ)V\n         10: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 10\n     Exceptions:\n       throws org.apache.commons.compress.harmony.pack200.Pack200Exception\n \n   public org.apache.commons.compress.harmony.unpack200.AttributeLayout(java.lang.String, int, java.lang.String, int, boolean) throws org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: (Ljava/lang/String;ILjava/lang/String;IZ)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=6\n          0: aload_0\n-         1: invokespecial #18                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #55                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload         4\n-         7: putfield      #19                 // Field index:I\n+         7: putfield      #58                 // Field index:I\n         10: aload_0\n         11: iload_2\n-        12: putfield      #20                 // Field context:I\n+        12: putfield      #62                 // Field context:I\n         15: iload         4\n         17: iflt          31\n         20: aload_0\n         21: lconst_1\n         22: iload         4\n         24: lshl\n-        25: putfield      #21                 // Field mask:J\n+        25: putfield      #65                 // Field mask:J\n         28: goto          36\n         31: aload_0\n         32: lconst_0\n-        33: putfield      #21                 // Field mask:J\n+        33: putfield      #65                 // Field mask:J\n         36: iload_2\n         37: ifeq          82\n         40: iload_2\n         41: iconst_3\n         42: if_icmpeq     82\n         45: iload_2\n         46: iconst_1\n         47: if_icmpeq     82\n         50: iload_2\n         51: iconst_2\n         52: if_icmpeq     82\n-        55: new           #10                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n+        55: new           #29                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n         58: dup\n-        59: new           #11                 // class java/lang/StringBuilder\n+        59: new           #31                 // class java/lang/StringBuilder\n         62: dup\n-        63: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        66: ldc           #23                 // String Attribute context out of range:\n-        68: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        63: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        66: ldc           #69                 // String Attribute context out of range:\n+        68: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         71: iload_2\n-        72: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        75: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        78: invokespecial #16                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+        72: invokevirtual #71                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        75: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        78: invokespecial #47                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n         81: athrow\n         82: aload_3\n         83: ifnonnull     96\n-        86: new           #10                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n+        86: new           #29                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n         89: dup\n-        90: ldc           #25                 // String Cannot have a null layout\n-        92: invokespecial #16                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+        90: ldc           #74                 // String Cannot have a null layout\n+        92: invokespecial #47                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n         95: athrow\n         96: aload_1\n         97: ifnull        107\n        100: aload_1\n-       101: invokevirtual #26                 // Method java/lang/String.length:()I\n+       101: invokevirtual #76                 // Method java/lang/String.length:()I\n        104: ifne          117\n-       107: new           #10                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n+       107: new           #29                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n        110: dup\n-       111: ldc           #27                 // String Cannot have an unnamed layout\n-       113: invokespecial #16                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+       111: ldc           #80                 // String Cannot have an unnamed layout\n+       113: invokespecial #47                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n        116: athrow\n        117: aload_0\n        118: aload_1\n-       119: putfield      #28                 // Field name:Ljava/lang/String;\n+       119: putfield      #82                 // Field name:Ljava/lang/String;\n        122: aload_0\n        123: aload_3\n-       124: putfield      #29                 // Field layout:Ljava/lang/String;\n+       124: putfield      #86                 // Field layout:Ljava/lang/String;\n        127: aload_0\n        128: iload         5\n-       130: putfield      #30                 // Field isDefault:Z\n+       130: putfield      #89                 // Field isDefault:Z\n        133: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 4\n         line 131: 10\n         line 132: 15\n         line 133: 20\n@@ -740,52 +740,52 @@\n \n   public org.apache.commons.compress.harmony.pack200.Codec getCodec();\n     descriptor: ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #29                 // Field layout:Ljava/lang/String;\n+         1: getfield      #86                 // Field layout:Ljava/lang/String;\n          4: bipush        79\n-         6: invokevirtual #3                  // Method java/lang/String.indexOf:(I)I\n+         6: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I\n          9: iflt          16\n-        12: getstatic     #31                 // Field org/apache/commons/compress/harmony/pack200/Codec.BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+        12: getstatic     #93                 // Field org/apache/commons/compress/harmony/pack200/Codec.BRANCH5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n         15: areturn\n         16: aload_0\n-        17: getfield      #29                 // Field layout:Ljava/lang/String;\n+        17: getfield      #86                 // Field layout:Ljava/lang/String;\n         20: bipush        80\n-        22: invokevirtual #3                  // Method java/lang/String.indexOf:(I)I\n+        22: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I\n         25: iflt          32\n-        28: getstatic     #32                 // Field org/apache/commons/compress/harmony/pack200/Codec.BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+        28: getstatic     #99                 // Field org/apache/commons/compress/harmony/pack200/Codec.BCI5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n         31: areturn\n         32: aload_0\n-        33: getfield      #29                 // Field layout:Ljava/lang/String;\n+        33: getfield      #86                 // Field layout:Ljava/lang/String;\n         36: bipush        83\n-        38: invokevirtual #3                  // Method java/lang/String.indexOf:(I)I\n+        38: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I\n         41: iflt          72\n         44: aload_0\n-        45: getfield      #29                 // Field layout:Ljava/lang/String;\n-        48: ldc           #33                 // String KS\n-        50: invokevirtual #34                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        45: getfield      #86                 // Field layout:Ljava/lang/String;\n+        48: ldc           #102                // String KS\n+        50: invokevirtual #104                // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n         53: ifge          72\n         56: aload_0\n-        57: getfield      #29                 // Field layout:Ljava/lang/String;\n-        60: ldc           #7                  // String RS\n-        62: invokevirtual #34                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        57: getfield      #86                 // Field layout:Ljava/lang/String;\n+        60: ldc           #21                 // String RS\n+        62: invokevirtual #104                // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n         65: ifge          72\n-        68: getstatic     #35                 // Field org/apache/commons/compress/harmony/pack200/Codec.SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+        68: getstatic     #107                // Field org/apache/commons/compress/harmony/pack200/Codec.SIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n         71: areturn\n         72: aload_0\n-        73: getfield      #29                 // Field layout:Ljava/lang/String;\n+        73: getfield      #86                 // Field layout:Ljava/lang/String;\n         76: bipush        66\n-        78: invokevirtual #3                  // Method java/lang/String.indexOf:(I)I\n+        78: invokevirtual #9                  // Method java/lang/String.indexOf:(I)I\n         81: iflt          88\n-        84: getstatic     #36                 // Field org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+        84: getstatic     #110                // Field org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n         87: areturn\n-        88: getstatic     #37                 // Field org/apache/commons/compress/harmony/pack200/Codec.UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+        88: getstatic     #113                // Field org/apache/commons/compress/harmony/pack200/Codec.UNSIGNED5:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n         91: areturn\n       LineNumberTable:\n         line 153: 0\n         line 154: 12\n         line 156: 16\n         line 157: 28\n         line 159: 32\n@@ -802,109 +802,109 @@\n \n   public int getContext();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field context:I\n+         1: getfield      #62                 // Field context:I\n          4: ireturn\n       LineNumberTable:\n         line 170: 0\n \n   public int getIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field index:I\n+         1: getfield      #58                 // Field index:I\n          4: ireturn\n       LineNumberTable:\n         line 174: 0\n \n   public java.lang.String getLayout();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #29                 // Field layout:Ljava/lang/String;\n+         1: getfield      #86                 // Field layout:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 178: 0\n \n   public java.lang.String getName();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #28                 // Field name:Ljava/lang/String;\n+         1: getfield      #82                 // Field name:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 182: 0\n \n   public org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry getValue(long, org.apache.commons.compress.harmony.unpack200.SegmentConstantPool) throws org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: (JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_0\n-         1: getfield      #29                 // Field layout:Ljava/lang/String;\n+         1: getfield      #86                 // Field layout:Ljava/lang/String;\n          4: lload_1\n          5: aload_3\n-         6: invokestatic  #38                 // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+         6: invokestatic  #116                // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n          9: areturn\n       LineNumberTable:\n         line 186: 0\n     Exceptions:\n       throws org.apache.commons.compress.harmony.pack200.Pack200Exception\n \n   public org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry getValue(long, java.lang.String, org.apache.commons.compress.harmony.unpack200.SegmentConstantPool) throws org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: (JLjava/lang/String;Lorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #29                 // Field layout:Ljava/lang/String;\n-         4: ldc           #39                 // String KQ\n-         6: invokevirtual #2                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+         1: getfield      #86                 // Field layout:Ljava/lang/String;\n+         4: ldc           #119                // String KQ\n+         6: invokevirtual #3                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n          9: ifne          23\n         12: aload_0\n-        13: getfield      #29                 // Field layout:Ljava/lang/String;\n+        13: getfield      #86                 // Field layout:Ljava/lang/String;\n         16: lload_1\n         17: aload         4\n-        19: invokestatic  #38                 // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+        19: invokestatic  #116                // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n         22: areturn\n         23: aload_3\n-        24: ldc           #40                 // String Ljava/lang/String;\n-        26: invokevirtual #41                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        24: ldc           #121                // String Ljava/lang/String;\n+        26: invokevirtual #122                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         29: ifeq          41\n-        32: ldc           #33                 // String KS\n+        32: ldc           #102                // String KS\n         34: lload_1\n         35: aload         4\n-        37: invokestatic  #38                 // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+        37: invokestatic  #116                // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n         40: areturn\n-        41: new           #11                 // class java/lang/StringBuilder\n+        41: new           #31                 // class java/lang/StringBuilder\n         44: dup\n-        45: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        48: ldc           #8                  // String K\n-        50: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        48: ldc           #23                 // String K\n+        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         53: aload_3\n-        54: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        54: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         57: aload_0\n-        58: getfield      #29                 // Field layout:Ljava/lang/String;\n+        58: getfield      #86                 // Field layout:Ljava/lang/String;\n         61: iconst_2\n-        62: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-        65: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        68: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        62: invokevirtual #126                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        65: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         71: lload_1\n         72: aload         4\n-        74: invokestatic  #38                 // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+        74: invokestatic  #116                // Method getValue:(Ljava/lang/String;JLorg/apache/commons/compress/harmony/unpack200/SegmentConstantPool;)Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n         77: areturn\n       LineNumberTable:\n         line 194: 0\n         line 195: 12\n         line 197: 23\n         line 198: 32\n         line 200: 41\n@@ -914,89 +914,89 @@\n     Exceptions:\n       throws org.apache.commons.compress.harmony.pack200.Pack200Exception\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=3, args_size=1\n+      stack=2, locals=2, args_size=1\n          0: iconst_1\n-         1: istore_2\n+         1: istore_1\n          2: aload_0\n-         3: getfield      #28                 // Field name:Ljava/lang/String;\n+         3: getfield      #82                 // Field name:Ljava/lang/String;\n          6: ifnull        22\n-         9: iload_2\n+         9: iload_1\n         10: bipush        31\n         12: imul\n         13: aload_0\n-        14: getfield      #28                 // Field name:Ljava/lang/String;\n-        17: invokevirtual #43                 // Method java/lang/String.hashCode:()I\n+        14: getfield      #82                 // Field name:Ljava/lang/String;\n+        17: invokevirtual #130                // Method java/lang/String.hashCode:()I\n         20: iadd\n-        21: istore_2\n+        21: istore_1\n         22: aload_0\n-        23: getfield      #29                 // Field layout:Ljava/lang/String;\n+        23: getfield      #86                 // Field layout:Ljava/lang/String;\n         26: ifnull        42\n-        29: iload_2\n+        29: iload_1\n         30: bipush        31\n         32: imul\n         33: aload_0\n-        34: getfield      #29                 // Field layout:Ljava/lang/String;\n-        37: invokevirtual #43                 // Method java/lang/String.hashCode:()I\n+        34: getfield      #86                 // Field layout:Ljava/lang/String;\n+        37: invokevirtual #130                // Method java/lang/String.hashCode:()I\n         40: iadd\n-        41: istore_2\n-        42: iload_2\n+        41: istore_1\n+        42: iload_1\n         43: bipush        31\n         45: imul\n         46: aload_0\n-        47: getfield      #19                 // Field index:I\n+        47: getfield      #58                 // Field index:I\n         50: iadd\n-        51: istore_2\n-        52: iload_2\n+        51: istore_1\n+        52: iload_1\n         53: bipush        31\n         55: imul\n         56: aload_0\n-        57: getfield      #20                 // Field context:I\n+        57: getfield      #62                 // Field context:I\n         60: iadd\n-        61: istore_2\n-        62: iload_2\n+        61: istore_1\n+        62: iload_1\n         63: ireturn\n       LineNumberTable:\n         line 207: 0\n         line 208: 2\n         line 209: 9\n         line 211: 22\n         line 212: 29\n         line 214: 42\n         line 215: 52\n         line 216: 62\n       StackMapTable: number_of_entries = 2\n-        frame_type = 253 /* append */\n+        frame_type = 252 /* append */\n           offset_delta = 22\n-          locals = [ top, int ]\n+          locals = [ int ]\n         frame_type = 19 /* same */\n \n   public boolean isDefaultLayout();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field isDefault:Z\n+         1: getfield      #89                 // Field isDefault:Z\n          4: ireturn\n       LineNumberTable:\n         line 220: 0\n \n   public boolean matches(long);\n     descriptor: (J)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=2\n          0: lload_1\n          1: aload_0\n-         2: getfield      #21                 // Field mask:J\n+         2: getfield      #65                 // Field mask:J\n          5: land\n          6: lconst_0\n          7: lcmp\n          8: ifeq          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n@@ -1010,21 +1010,21 @@\n \n   public int numBackwardsCallables();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #29                 // Field layout:Ljava/lang/String;\n-         4: ldc           #44                 // String *\n+         1: getfield      #86                 // Field layout:Ljava/lang/String;\n+         4: ldc           #133                // String *\n          6: if_acmpne     11\n          9: iconst_1\n         10: ireturn\n         11: aload_0\n-        12: getfield      #45                 // Field backwardsCallCount:I\n+        12: getfield      #135                // Field backwardsCallCount:I\n         15: ireturn\n       LineNumberTable:\n         line 234: 0\n         line 235: 9\n         line 237: 11\n       StackMapTable: number_of_entries = 1\n         frame_type = 11 /* same */\n@@ -1032,65 +1032,65 @@\n   public void setBackwardsCallCount(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #45                 // Field backwardsCallCount:I\n+         2: putfield      #135                // Field backwardsCallCount:I\n          5: return\n       LineNumberTable:\n         line 241: 0\n         line 242: 5\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #11                 // class java/lang/StringBuilder\n+         0: new           #31                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: getstatic     #46                 // Field contextNames:[Ljava/lang/String;\n+         4: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: getstatic     #138                // Field contextNames:[Ljava/lang/String;\n         10: aload_0\n-        11: getfield      #20                 // Field context:I\n+        11: getfield      #62                 // Field context:I\n         14: aaload\n-        15: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        18: ldc           #47                 // String :\n-        20: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        18: ldc           #142                // String :\n+        20: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         23: aload_0\n-        24: getfield      #28                 // Field name:Ljava/lang/String;\n-        27: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        24: getfield      #82                 // Field name:Ljava/lang/String;\n+        27: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         33: areturn\n       LineNumberTable:\n         line 246: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: iconst_4\n-         1: anewarray     #48                 // class java/lang/String\n+         1: anewarray     #4                  // class java/lang/String\n          4: dup\n          5: iconst_0\n-         6: ldc           #49                 // String Class\n+         6: ldc           #144                // String Class\n          8: aastore\n          9: dup\n         10: iconst_1\n-        11: ldc           #50                 // String Field\n+        11: ldc           #146                // String Field\n         13: aastore\n         14: dup\n         15: iconst_2\n-        16: ldc           #51                 // String Method\n+        16: ldc           #148                // String Method\n         18: aastore\n         19: dup\n         20: iconst_3\n-        21: ldc           #52                 // String Code\n+        21: ldc           #150                // String Code\n         23: aastore\n-        24: putstatic     #46                 // Field contextNames:[Ljava/lang/String;\n+        24: putstatic     #138                // Field contextNames:[Ljava/lang/String;\n         27: return\n       LineNumberTable:\n         line 64: 0\n }\n SourceFile: \"AttributeLayout.java\"\n"}]}
