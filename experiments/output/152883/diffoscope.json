{"diffoscope-json-version": 1, "source1": "first/SequenceReader.class", "source2": "second/SequenceReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,449 +1,449 @@\n-  SHA-256 checksum 9c95337cc3696aa5c03692c7b1dd774e6020235d45c2a1b3b2d547b30ee92c61\n+  SHA-256 checksum 983435facd38c1021ee618440446c1455ae1ab9fe02841e286e5d15b60ead31e\n   Compiled from \"SequenceReader.java\"\n public class org.apache.commons.io.input.SequenceReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #24                         // org/apache/commons/io/input/SequenceReader\n-  super_class: #4                         // java/io/Reader\n+  this_class: #1                          // org/apache/commons/io/input/SequenceReader\n+  super_class: #3                         // java/io/Reader\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Methodref          #4.#5         // java/io/Reader.\"<init>\":()V\n-    #4 = Class              #6            // java/io/Reader\n-    #5 = NameAndType        #7:#8         // \"<init>\":()V\n-    #6 = Utf8               java/io/Reader\n-    #7 = Utf8               <init>\n-    #8 = Utf8               ()V\n-    #9 = String             #10           // readers\n-   #10 = Utf8               readers\n-   #11 = Methodref          #12.#13       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #12 = Class              #14           // java/util/Objects\n-   #13 = NameAndType        #15:#16       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #14 = Utf8               java/util/Objects\n-   #15 = Utf8               requireNonNull\n-   #16 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #17 = Class              #18           // java/lang/Iterable\n-   #18 = Utf8               java/lang/Iterable\n-   #19 = InterfaceMethodref #17.#20       // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #20 = NameAndType        #21:#22       // iterator:()Ljava/util/Iterator;\n-   #21 = Utf8               iterator\n-   #22 = Utf8               ()Ljava/util/Iterator;\n-   #23 = Fieldref           #24.#25       // org/apache/commons/io/input/SequenceReader.readers:Ljava/util/Iterator;\n-   #24 = Class              #26           // org/apache/commons/io/input/SequenceReader\n-   #25 = NameAndType        #10:#27       // readers:Ljava/util/Iterator;\n-   #26 = Utf8               org/apache/commons/io/input/SequenceReader\n-   #27 = Utf8               Ljava/util/Iterator;\n-   #28 = Methodref          #24.#29       // org/apache/commons/io/input/SequenceReader.nextReader:()Ljava/io/Reader;\n-   #29 = NameAndType        #30:#31       // nextReader:()Ljava/io/Reader;\n-   #30 = Utf8               nextReader\n-   #31 = Utf8               ()Ljava/io/Reader;\n-   #32 = Fieldref           #24.#33       // org/apache/commons/io/input/SequenceReader.reader:Ljava/io/Reader;\n-   #33 = NameAndType        #34:#35       // reader:Ljava/io/Reader;\n-   #34 = Utf8               reader\n-   #35 = Utf8               Ljava/io/Reader;\n-   #36 = Class              #37           // java/io/IOException\n-   #37 = Utf8               java/io/IOException\n-   #38 = Class              #39           // java/io/UncheckedIOException\n-   #39 = Utf8               java/io/UncheckedIOException\n-   #40 = Methodref          #38.#41       // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n-   #41 = NameAndType        #7:#42        // \"<init>\":(Ljava/io/IOException;)V\n-   #42 = Utf8               (Ljava/io/IOException;)V\n-   #43 = Methodref          #44.#45       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #44 = Class              #46           // java/util/Arrays\n-   #45 = NameAndType        #47:#48       // asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #46 = Utf8               java/util/Arrays\n-   #47 = Utf8               asList\n-   #48 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-   #49 = Methodref          #24.#50       // org/apache/commons/io/input/SequenceReader.\"<init>\":(Ljava/lang/Iterable;)V\n-   #50 = NameAndType        #7:#51        // \"<init>\":(Ljava/lang/Iterable;)V\n-   #51 = Utf8               (Ljava/lang/Iterable;)V\n-   #52 = Methodref          #4.#53        // java/io/Reader.close:()V\n-   #53 = NameAndType        #54:#8        // close:()V\n-   #54 = Utf8               close\n-   #55 = InterfaceMethodref #56.#57       // java/util/Iterator.hasNext:()Z\n-   #56 = Class              #58           // java/util/Iterator\n-   #57 = NameAndType        #59:#60       // hasNext:()Z\n-   #58 = Utf8               java/util/Iterator\n-   #59 = Utf8               hasNext\n-   #60 = Utf8               ()Z\n-   #61 = InterfaceMethodref #56.#62       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #62 = NameAndType        #63:#64       // next:()Ljava/lang/Object;\n-   #63 = Utf8               next\n-   #64 = Utf8               ()Ljava/lang/Object;\n-   #65 = Methodref          #4.#66        // java/io/Reader.read:()I\n-   #66 = NameAndType        #67:#68       // read:()I\n-   #67 = Utf8               read\n-   #68 = Utf8               ()I\n-   #69 = String             #70           // cbuf\n-   #70 = Utf8               cbuf\n-   #71 = Class              #72           // java/lang/IndexOutOfBoundsException\n-   #72 = Utf8               java/lang/IndexOutOfBoundsException\n-   #73 = Class              #74           // java/lang/StringBuilder\n-   #74 = Utf8               java/lang/StringBuilder\n-   #75 = Methodref          #73.#5        // java/lang/StringBuilder.\"<init>\":()V\n-   #76 = String             #77           // Array Size=\n-   #77 = Utf8               Array Size=\n-   #78 = Methodref          #73.#79       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #79 = NameAndType        #80:#81       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #80 = Utf8               append\n-   #81 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #82 = Methodref          #73.#83       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #83 = NameAndType        #80:#84       // append:(I)Ljava/lang/StringBuilder;\n-   #84 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #85 = String             #86           // , offset=\n-   #86 = Utf8               , offset=\n-   #87 = String             #88           // , length=\n-   #88 = Utf8               , length=\n-   #89 = Methodref          #73.#90       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #90 = NameAndType        #91:#92       // toString:()Ljava/lang/String;\n-   #91 = Utf8               toString\n-   #92 = Utf8               ()Ljava/lang/String;\n-   #93 = Methodref          #71.#94       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #94 = NameAndType        #7:#95        // \"<init>\":(Ljava/lang/String;)V\n-   #95 = Utf8               (Ljava/lang/String;)V\n-   #96 = Methodref          #4.#97        // java/io/Reader.read:([CII)I\n-   #97 = NameAndType        #67:#98       // read:([CII)I\n-   #98 = Utf8               ([CII)I\n-   #99 = Utf8               Signature\n-  #100 = Utf8               Ljava/util/Iterator<+Ljava/io/Reader;>;\n-  #101 = Utf8               Code\n-  #102 = Utf8               LineNumberTable\n-  #103 = Utf8               LocalVariableTable\n-  #104 = Utf8               e\n-  #105 = Utf8               Ljava/io/IOException;\n-  #106 = Utf8               this\n-  #107 = Utf8               Lorg/apache/commons/io/input/SequenceReader;\n-  #108 = Utf8               Ljava/lang/Iterable;\n-  #109 = Utf8               LocalVariableTypeTable\n-  #110 = Utf8               Ljava/lang/Iterable<+Ljava/io/Reader;>;\n-  #111 = Utf8               StackMapTable\n-  #112 = Utf8               (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n-  #113 = Utf8               ([Ljava/io/Reader;)V\n-  #114 = Utf8               [Ljava/io/Reader;\n-  #115 = Utf8               Exceptions\n-  #116 = Utf8               c\n-  #117 = Utf8               I\n-  #118 = Utf8               readLen\n-  #119 = Utf8               [C\n-  #120 = Utf8               off\n-  #121 = Utf8               len\n-  #122 = Utf8               count\n-  #123 = Utf8               SourceFile\n-  #124 = Utf8               SequenceReader.java\n+    #1 = Class              #2            // org/apache/commons/io/input/SequenceReader\n+    #2 = Utf8               org/apache/commons/io/input/SequenceReader\n+    #3 = Class              #4            // java/io/Reader\n+    #4 = Utf8               java/io/Reader\n+    #5 = Utf8               reader\n+    #6 = Utf8               Ljava/io/Reader;\n+    #7 = Utf8               readers\n+    #8 = Utf8               Ljava/util/Iterator;\n+    #9 = Utf8               Signature\n+   #10 = Utf8               Ljava/util/Iterator<+Ljava/io/Reader;>;\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Ljava/lang/Iterable;)V\n+   #13 = Utf8               (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n+   #14 = Utf8               Code\n+   #15 = Methodref          #3.#16        // java/io/Reader.\"<init>\":()V\n+   #16 = NameAndType        #11:#17       // \"<init>\":()V\n+   #17 = Utf8               ()V\n+   #18 = String             #7            // readers\n+   #19 = Methodref          #20.#22       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #20 = Class              #21           // java/util/Objects\n+   #21 = Utf8               java/util/Objects\n+   #22 = NameAndType        #23:#24       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #23 = Utf8               requireNonNull\n+   #24 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #25 = Class              #26           // java/lang/Iterable\n+   #26 = Utf8               java/lang/Iterable\n+   #27 = InterfaceMethodref #25.#28       // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #28 = NameAndType        #29:#30       // iterator:()Ljava/util/Iterator;\n+   #29 = Utf8               iterator\n+   #30 = Utf8               ()Ljava/util/Iterator;\n+   #31 = Fieldref           #1.#32        // org/apache/commons/io/input/SequenceReader.readers:Ljava/util/Iterator;\n+   #32 = NameAndType        #7:#8         // readers:Ljava/util/Iterator;\n+   #33 = Methodref          #1.#34        // org/apache/commons/io/input/SequenceReader.nextReader:()Ljava/io/Reader;\n+   #34 = NameAndType        #35:#36       // nextReader:()Ljava/io/Reader;\n+   #35 = Utf8               nextReader\n+   #36 = Utf8               ()Ljava/io/Reader;\n+   #37 = Fieldref           #1.#38        // org/apache/commons/io/input/SequenceReader.reader:Ljava/io/Reader;\n+   #38 = NameAndType        #5:#6         // reader:Ljava/io/Reader;\n+   #39 = Class              #40           // java/io/UncheckedIOException\n+   #40 = Utf8               java/io/UncheckedIOException\n+   #41 = Methodref          #39.#42       // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+   #42 = NameAndType        #11:#43       // \"<init>\":(Ljava/io/IOException;)V\n+   #43 = Utf8               (Ljava/io/IOException;)V\n+   #44 = Class              #45           // java/io/IOException\n+   #45 = Utf8               java/io/IOException\n+   #46 = Utf8               LineNumberTable\n+   #47 = Utf8               LocalVariableTable\n+   #48 = Utf8               this\n+   #49 = Utf8               Lorg/apache/commons/io/input/SequenceReader;\n+   #50 = Utf8               Ljava/lang/Iterable;\n+   #51 = Utf8               e\n+   #52 = Utf8               Ljava/io/IOException;\n+   #53 = Utf8               LocalVariableTypeTable\n+   #54 = Utf8               Ljava/lang/Iterable<+Ljava/io/Reader;>;\n+   #55 = Utf8               StackMapTable\n+   #56 = Utf8               ([Ljava/io/Reader;)V\n+   #57 = Methodref          #58.#60       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #58 = Class              #59           // java/util/Arrays\n+   #59 = Utf8               java/util/Arrays\n+   #60 = NameAndType        #61:#62       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #61 = Utf8               asList\n+   #62 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #63 = Methodref          #1.#64        // org/apache/commons/io/input/SequenceReader.\"<init>\":(Ljava/lang/Iterable;)V\n+   #64 = NameAndType        #11:#12       // \"<init>\":(Ljava/lang/Iterable;)V\n+   #65 = Utf8               [Ljava/io/Reader;\n+   #66 = Utf8               close\n+   #67 = Utf8               Exceptions\n+   #68 = Methodref          #3.#69        // java/io/Reader.close:()V\n+   #69 = NameAndType        #66:#17       // close:()V\n+   #70 = InterfaceMethodref #71.#73       // java/util/Iterator.hasNext:()Z\n+   #71 = Class              #72           // java/util/Iterator\n+   #72 = Utf8               java/util/Iterator\n+   #73 = NameAndType        #74:#75       // hasNext:()Z\n+   #74 = Utf8               hasNext\n+   #75 = Utf8               ()Z\n+   #76 = InterfaceMethodref #71.#77       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #77 = NameAndType        #78:#79       // next:()Ljava/lang/Object;\n+   #78 = Utf8               next\n+   #79 = Utf8               ()Ljava/lang/Object;\n+   #80 = Utf8               read\n+   #81 = Utf8               ()I\n+   #82 = Methodref          #3.#83        // java/io/Reader.read:()I\n+   #83 = NameAndType        #80:#81       // read:()I\n+   #84 = Utf8               c\n+   #85 = Utf8               I\n+   #86 = Utf8               ([CII)I\n+   #87 = String             #88           // cbuf\n+   #88 = Utf8               cbuf\n+   #89 = Class              #90           // java/lang/IndexOutOfBoundsException\n+   #90 = Utf8               java/lang/IndexOutOfBoundsException\n+   #91 = Class              #92           // java/lang/StringBuilder\n+   #92 = Utf8               java/lang/StringBuilder\n+   #93 = String             #94           // Array Size=\n+   #94 = Utf8               Array Size=\n+   #95 = Methodref          #91.#96       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #96 = NameAndType        #11:#97       // \"<init>\":(Ljava/lang/String;)V\n+   #97 = Utf8               (Ljava/lang/String;)V\n+   #98 = Methodref          #91.#99       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #99 = NameAndType        #100:#101     // append:(I)Ljava/lang/StringBuilder;\n+  #100 = Utf8               append\n+  #101 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #102 = String             #103          // , offset=\n+  #103 = Utf8               , offset=\n+  #104 = Methodref          #91.#105      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #105 = NameAndType        #100:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #107 = String             #108          // , length=\n+  #108 = Utf8               , length=\n+  #109 = Methodref          #91.#110      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #110 = NameAndType        #111:#112     // toString:()Ljava/lang/String;\n+  #111 = Utf8               toString\n+  #112 = Utf8               ()Ljava/lang/String;\n+  #113 = Methodref          #89.#96       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #114 = Methodref          #3.#115       // java/io/Reader.read:([CII)I\n+  #115 = NameAndType        #80:#86       // read:([CII)I\n+  #116 = Utf8               [C\n+  #117 = Utf8               off\n+  #118 = Utf8               len\n+  #119 = Utf8               count\n+  #120 = Utf8               readLen\n+  #121 = Utf8               SourceFile\n+  #122 = Utf8               SequenceReader.java\n {\n   private java.io.Reader reader;\n     descriptor: Ljava/io/Reader;\n     flags: (0x0002) ACC_PRIVATE\n \n   private final java.util.Iterator<? extends java.io.Reader> readers;\n     descriptor: Ljava/util/Iterator;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #100                         // Ljava/util/Iterator<+Ljava/io/Reader;>;\n+    Signature: #10                          // Ljava/util/Iterator<+Ljava/io/Reader;>;\n \n   public org.apache.commons.io.input.SequenceReader(java.lang.Iterable<? extends java.io.Reader>);\n     descriptor: (Ljava/lang/Iterable;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #13                          // (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/io/Reader.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #9                  // String readers\n-         8: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #17                 // class java/lang/Iterable\n-        14: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-        19: putfield      #23                 // Field readers:Ljava/util/Iterator;\n+         6: ldc           #18                 // String readers\n+         8: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #25                 // class java/lang/Iterable\n+        14: invokeinterface #27,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+        19: putfield      #31                 // Field readers:Ljava/util/Iterator;\n         22: aload_0\n         23: aload_0\n-        24: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n-        27: putfield      #32                 // Field reader:Ljava/io/Reader;\n+        24: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n+        27: putfield      #37                 // Field reader:Ljava/io/Reader;\n         30: goto          43\n         33: astore_2\n-        34: new           #38                 // class java/io/UncheckedIOException\n+        34: new           #39                 // class java/io/UncheckedIOException\n         37: dup\n         38: aload_2\n-        39: invokespecial #40                 // Method java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+        39: invokespecial #41                 // Method java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n         42: athrow\n         43: return\n       Exception table:\n          from    to  target type\n             22    30    33   Class java/io/IOException\n       LineNumberTable:\n         line 47: 0\n         line 48: 4\n         line 50: 22\n-        line 53: 30\n-        line 51: 33\n+        line 51: 30\n         line 52: 34\n         line 54: 43\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           34       9     2     e   Ljava/io/IOException;\n             0      44     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             0      44     1 readers   Ljava/lang/Iterable;\n+           34       9     2     e   Ljava/io/IOException;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      44     1 readers   Ljava/lang/Iterable<+Ljava/io/Reader;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 33\n           locals = [ class org/apache/commons/io/input/SequenceReader, class java/lang/Iterable ]\n           stack = [ class java/io/IOException ]\n         frame_type = 9 /* same */\n-    Signature: #112                         // (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n \n   public org.apache.commons.io.input.SequenceReader(java.io.Reader...);\n     descriptor: ([Ljava/io/Reader;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #43                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-         5: invokespecial #49                 // Method \"<init>\":(Ljava/lang/Iterable;)V\n+         2: invokestatic  #57                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+         5: invokespecial #63                 // Method \"<init>\":(Ljava/lang/Iterable;)V\n          8: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             0       9     1 readers   [Ljava/io/Reader;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n+         1: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n          4: ifnonnull     0\n          7: return\n       LineNumberTable:\n         line 74: 0\n         line 75: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/SequenceReader;\n       StackMapTable: number_of_entries = 1\n         frame_type = 0 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   private java.io.Reader nextReader() throws java.io.IOException;\n     descriptor: ()Ljava/io/Reader;\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #32                 // Field reader:Ljava/io/Reader;\n+         1: getfield      #37                 // Field reader:Ljava/io/Reader;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        11: invokevirtual #52                 // Method java/io/Reader.close:()V\n+         8: getfield      #37                 // Field reader:Ljava/io/Reader;\n+        11: invokevirtual #68                 // Method java/io/Reader.close:()V\n         14: aload_0\n-        15: getfield      #23                 // Field readers:Ljava/util/Iterator;\n-        18: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        15: getfield      #31                 // Field readers:Ljava/util/Iterator;\n+        18: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         23: ifeq          45\n         26: aload_0\n         27: aload_0\n-        28: getfield      #23                 // Field readers:Ljava/util/Iterator;\n-        31: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        36: checkcast     #4                  // class java/io/Reader\n-        39: putfield      #32                 // Field reader:Ljava/io/Reader;\n+        28: getfield      #31                 // Field readers:Ljava/util/Iterator;\n+        31: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        36: checkcast     #3                  // class java/io/Reader\n+        39: putfield      #37                 // Field reader:Ljava/io/Reader;\n         42: goto          50\n         45: aload_0\n         46: aconst_null\n-        47: putfield      #32                 // Field reader:Ljava/io/Reader;\n+        47: putfield      #37                 // Field reader:Ljava/io/Reader;\n         50: aload_0\n-        51: getfield      #32                 // Field reader:Ljava/io/Reader;\n+        51: getfield      #37                 // Field reader:Ljava/io/Reader;\n         54: areturn\n       LineNumberTable:\n         line 84: 0\n         line 85: 7\n         line 87: 14\n         line 88: 26\n+        line 89: 42\n         line 90: 45\n         line 92: 50\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      55     0  this   Lorg/apache/commons/io/input/SequenceReader;\n       StackMapTable: number_of_entries = 3\n         frame_type = 14 /* same */\n         frame_type = 30 /* same */\n         frame_type = 4 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: iconst_m1\n          1: istore_1\n-         2: aload_0\n-         3: getfield      #32                 // Field reader:Ljava/io/Reader;\n-         6: ifnull        33\n-         9: aload_0\n-        10: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        13: invokevirtual #65                 // Method java/io/Reader.read:()I\n-        16: istore_1\n-        17: iload_1\n-        18: iconst_m1\n-        19: if_icmpeq     25\n-        22: goto          33\n-        25: aload_0\n-        26: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n-        29: pop\n-        30: goto          2\n+         2: goto          26\n+         5: aload_0\n+         6: getfield      #37                 // Field reader:Ljava/io/Reader;\n+         9: invokevirtual #82                 // Method java/io/Reader.read:()I\n+        12: istore_1\n+        13: iload_1\n+        14: iconst_m1\n+        15: if_icmpeq     21\n+        18: goto          33\n+        21: aload_0\n+        22: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n+        25: pop\n+        26: aload_0\n+        27: getfield      #37                 // Field reader:Ljava/io/Reader;\n+        30: ifnonnull     5\n         33: iload_1\n         34: ireturn\n       LineNumberTable:\n         line 102: 0\n         line 103: 2\n-        line 104: 9\n-        line 105: 17\n-        line 106: 22\n-        line 108: 25\n+        line 104: 5\n+        line 105: 13\n+        line 106: 18\n+        line 108: 21\n+        line 103: 26\n         line 110: 33\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      35     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             2      33     1     c   I\n-      StackMapTable: number_of_entries = 3\n+      StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 22 /* same */\n-        frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 15 /* same */\n+        frame_type = 4 /* same */\n+        frame_type = 6 /* same */\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=6, args_size=4\n+      stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #69                 // String cbuf\n-         3: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #87                 // String cbuf\n+         3: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          23\n         11: iload_2\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n-        20: if_icmple     69\n-        23: new           #71                 // class java/lang/IndexOutOfBoundsException\n+        20: if_icmple     66\n+        23: new           #89                 // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: new           #73                 // class java/lang/StringBuilder\n+        27: new           #91                 // class java/lang/StringBuilder\n         30: dup\n-        31: invokespecial #75                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        34: ldc           #76                 // String Array Size=\n-        36: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: aload_1\n-        40: arraylength\n-        41: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        44: ldc           #85                 // String , offset=\n-        46: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        49: iload_2\n-        50: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        53: ldc           #87                 // String , length=\n-        55: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: iload_3\n-        59: invokevirtual #82                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        62: invokevirtual #89                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #93                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-        68: athrow\n-        69: iconst_0\n-        70: istore        4\n+        31: ldc           #93                 // String Array Size=\n+        33: invokespecial #95                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        36: aload_1\n+        37: arraylength\n+        38: invokevirtual #98                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        41: ldc           #102                // String , offset=\n+        43: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: iload_2\n+        47: invokevirtual #98                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: ldc           #107                // String , length=\n+        52: invokevirtual #104                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: iload_3\n+        56: invokevirtual #98                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        59: invokevirtual #109                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        62: invokespecial #113                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        65: athrow\n+        66: iconst_0\n+        67: istore        4\n+        69: goto          122\n         72: aload_0\n-        73: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        76: ifnull        132\n-        79: aload_0\n-        80: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        83: aload_1\n-        84: iload_2\n-        85: iload_3\n-        86: invokevirtual #96                 // Method java/io/Reader.read:([CII)I\n-        89: istore        5\n-        91: iload         5\n-        93: iconst_m1\n-        94: if_icmpne     105\n-        97: aload_0\n-        98: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n-       101: pop\n-       102: goto          129\n-       105: iload         4\n-       107: iload         5\n-       109: iadd\n-       110: istore        4\n-       112: iload_2\n-       113: iload         5\n-       115: iadd\n-       116: istore_2\n-       117: iload_3\n-       118: iload         5\n-       120: isub\n-       121: istore_3\n-       122: iload_3\n-       123: ifgt          129\n-       126: goto          132\n-       129: goto          72\n-       132: iload         4\n-       134: ifle          140\n-       137: iload         4\n-       139: ireturn\n-       140: iconst_m1\n-       141: ireturn\n+        73: getfield      #37                 // Field reader:Ljava/io/Reader;\n+        76: aload_1\n+        77: iload_2\n+        78: iload_3\n+        79: invokevirtual #114                // Method java/io/Reader.read:([CII)I\n+        82: istore        5\n+        84: iload         5\n+        86: iconst_m1\n+        87: if_icmpne     98\n+        90: aload_0\n+        91: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n+        94: pop\n+        95: goto          122\n+        98: iload         4\n+       100: iload         5\n+       102: iadd\n+       103: istore        4\n+       105: iload_2\n+       106: iload         5\n+       108: iadd\n+       109: istore_2\n+       110: iload_3\n+       111: iload         5\n+       113: isub\n+       114: istore_3\n+       115: iload_3\n+       116: ifgt          122\n+       119: goto          129\n+       122: aload_0\n+       123: getfield      #37                 // Field reader:Ljava/io/Reader;\n+       126: ifnonnull     72\n+       129: iload         4\n+       131: ifle          137\n+       134: iload         4\n+       136: ireturn\n+       137: iconst_m1\n+       138: ireturn\n       LineNumberTable:\n         line 120: 0\n         line 121: 7\n         line 122: 23\n-        line 124: 69\n-        line 125: 72\n-        line 126: 79\n-        line 127: 91\n-        line 128: 97\n-        line 130: 105\n-        line 131: 112\n-        line 132: 117\n-        line 133: 122\n-        line 134: 126\n-        line 137: 129\n-        line 138: 132\n-        line 139: 137\n-        line 141: 140\n+        line 124: 66\n+        line 125: 69\n+        line 126: 72\n+        line 127: 84\n+        line 128: 90\n+        line 129: 95\n+        line 130: 98\n+        line 131: 105\n+        line 132: 110\n+        line 133: 115\n+        line 134: 119\n+        line 125: 122\n+        line 138: 129\n+        line 139: 134\n+        line 141: 137\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           91      38     5 readLen   I\n-            0     142     0  this   Lorg/apache/commons/io/input/SequenceReader;\n-            0     142     1  cbuf   [C\n-            0     142     2   off   I\n-            0     142     3   len   I\n-           72      70     4 count   I\n+            0     139     0  this   Lorg/apache/commons/io/input/SequenceReader;\n+            0     139     1  cbuf   [C\n+            0     139     2   off   I\n+            0     139     3   len   I\n+           69      70     4 count   I\n+           84      38     5 readLen   I\n       StackMapTable: number_of_entries = 7\n         frame_type = 23 /* same */\n-        frame_type = 45 /* same */\n+        frame_type = 42 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n         frame_type = 252 /* append */\n-          offset_delta = 32\n+          offset_delta = 25\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 23\n-        frame_type = 2 /* same */\n+        frame_type = 6 /* same */\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"SequenceReader.java\"\n"}]}
