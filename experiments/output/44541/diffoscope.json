{"diffoscope-json-version": 1, "source1": "first/CircularBufferInputStream.class", "source2": "second/CircularBufferInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,157 +1,152 @@\n-  SHA-256 checksum 7edc6e52c29f5b6819792aba55b5e29296627cea49ee2f47ba00a13e362f2da8\n+  SHA-256 checksum 9c2d6eb208385191500370216bde791c561cced431ed8736edf99f1c7b9922b3\n   Compiled from \"CircularBufferInputStream.java\"\n public class org.apache.commons.io.input.buffer.CircularBufferInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #37                         // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  super_class: #13                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Class              #82           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #13.#83       // java/io/InputStream.\"<init>\":()V\n-    #3 = Class              #84           // java/lang/IllegalArgumentException\n-    #4 = Class              #85           // java/lang/StringBuilder\n-    #5 = Methodref          #4.#83        // java/lang/StringBuilder.\"<init>\":()V\n-    #6 = String             #86           // Invalid bufferSize:\n-    #7 = Methodref          #4.#87        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #4.#88        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #4.#89        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Methodref          #3.#90        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #11 = String             #53           // inputStream\n-   #12 = Methodref          #91.#92       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #13 = Class              #93           // java/io/InputStream\n-   #14 = Fieldref           #37.#94       // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n-   #15 = Class              #95           // org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #16 = Methodref          #15.#96       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-   #17 = Fieldref           #37.#97       // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #18 = Fieldref           #37.#98       // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n-   #19 = Fieldref           #37.#99       // org/apache/commons/io/input/buffer/CircularBufferInputStream.eof:Z\n-   #20 = Methodref          #37.#100      // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-   #21 = Methodref          #15.#101      // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n-   #22 = Methodref          #1.#102       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-   #23 = Methodref          #13.#103      // java/io/InputStream.read:([BII)I\n-   #24 = Methodref          #15.#104      // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n-   #25 = Methodref          #15.#105      // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-   #26 = Methodref          #37.#106      // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n-   #27 = Methodref          #15.#107      // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n-   #28 = Methodref          #37.#108      // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n-   #29 = Methodref          #15.#109      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n-   #30 = Methodref          #37.#103      // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I\n-   #31 = String             #75           // targetBuffer\n-   #32 = String             #110          // Offset must not be negative\n-   #33 = String             #111          // Length must not be negative\n-   #34 = Methodref          #112.#113     // java/lang/Math.min:(II)I\n-   #35 = Methodref          #13.#114      // java/io/InputStream.close:()V\n-   #36 = Methodref          #15.#115      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n-   #37 = Class              #116          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-   #38 = Utf8               in\n-   #39 = Utf8               Ljava/io/InputStream;\n-   #40 = Utf8               buffer\n-   #41 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #42 = Utf8               bufferSize\n-   #43 = Utf8               I\n-   #44 = Utf8               eof\n-   #45 = Utf8               Z\n-   #46 = Utf8               <init>\n-   #47 = Utf8               (Ljava/io/InputStream;I)V\n-   #48 = Utf8               Code\n-   #49 = Utf8               LineNumberTable\n-   #50 = Utf8               LocalVariableTable\n-   #51 = Utf8               this\n-   #52 = Utf8               Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n-   #53 = Utf8               inputStream\n-   #54 = Utf8               StackMapTable\n-   #55 = Class              #116          // org/apache/commons/io/input/buffer/CircularBufferInputStream\n-   #56 = Class              #93           // java/io/InputStream\n-   #57 = Utf8               (Ljava/io/InputStream;)V\n-   #58 = Utf8               fillBuffer\n-   #59 = Utf8               ()V\n-   #60 = Utf8               res\n-   #61 = Utf8               space\n-   #62 = Utf8               buf\n-   #63 = Utf8               [B\n-   #64 = Class              #63           // \"[B\"\n-   #65 = Utf8               Exceptions\n-   #66 = Class              #117          // java/io/IOException\n-   #67 = Utf8               haveBytes\n-   #68 = Utf8               (I)Z\n-   #69 = Utf8               count\n-   #70 = Utf8               read\n-   #71 = Utf8               ()I\n-   #72 = Utf8               ([B)I\n-   #73 = Utf8               ([BII)I\n-   #74 = Utf8               i\n-   #75 = Utf8               targetBuffer\n-   #76 = Utf8               offset\n-   #77 = Utf8               length\n-   #78 = Utf8               result\n-   #79 = Utf8               close\n-   #80 = Utf8               SourceFile\n-   #81 = Utf8               CircularBufferInputStream.java\n-   #82 = Utf8               org/apache/commons/io/IOUtils\n-   #83 = NameAndType        #46:#59       // \"<init>\":()V\n-   #84 = Utf8               java/lang/IllegalArgumentException\n-   #85 = Utf8               java/lang/StringBuilder\n-   #86 = Utf8               Invalid bufferSize:\n-   #87 = NameAndType        #118:#119     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #88 = NameAndType        #118:#120     // append:(I)Ljava/lang/StringBuilder;\n-   #89 = NameAndType        #121:#122     // toString:()Ljava/lang/String;\n-   #90 = NameAndType        #46:#123      // \"<init>\":(Ljava/lang/String;)V\n-   #91 = Class              #124          // java/util/Objects\n-   #92 = NameAndType        #125:#126     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #93 = Utf8               java/io/InputStream\n-   #94 = NameAndType        #38:#39       // in:Ljava/io/InputStream;\n-   #95 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #96 = NameAndType        #46:#127      // \"<init>\":(I)V\n-   #97 = NameAndType        #40:#41       // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #98 = NameAndType        #42:#43       // bufferSize:I\n-   #99 = NameAndType        #44:#45       // eof:Z\n-  #100 = NameAndType        #46:#47       // \"<init>\":(Ljava/io/InputStream;I)V\n-  #101 = NameAndType        #128:#71      // getSpace:()I\n-  #102 = NameAndType        #129:#130     // byteArray:(I)[B\n-  #103 = NameAndType        #70:#73       // read:([BII)I\n-  #104 = NameAndType        #131:#132     // add:([BII)V\n-  #105 = NameAndType        #133:#71      // getCurrentNumberOfBytes:()I\n-  #106 = NameAndType        #58:#59       // fillBuffer:()V\n-  #107 = NameAndType        #134:#135     // hasBytes:()Z\n-  #108 = NameAndType        #67:#68       // haveBytes:(I)Z\n-  #109 = NameAndType        #70:#136      // read:()B\n-  #110 = Utf8               Offset must not be negative\n-  #111 = Utf8               Length must not be negative\n-  #112 = Class              #137          // java/lang/Math\n-  #113 = NameAndType        #138:#139     // min:(II)I\n-  #114 = NameAndType        #79:#59       // close:()V\n-  #115 = NameAndType        #140:#59      // clear:()V\n-  #116 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n-  #117 = Utf8               java/io/IOException\n-  #118 = Utf8               append\n-  #119 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #120 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #121 = Utf8               toString\n-  #122 = Utf8               ()Ljava/lang/String;\n-  #123 = Utf8               (Ljava/lang/String;)V\n-  #124 = Utf8               java/util/Objects\n-  #125 = Utf8               requireNonNull\n-  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #127 = Utf8               (I)V\n-  #128 = Utf8               getSpace\n-  #129 = Utf8               byteArray\n-  #130 = Utf8               (I)[B\n-  #131 = Utf8               add\n-  #132 = Utf8               ([BII)V\n-  #133 = Utf8               getCurrentNumberOfBytes\n-  #134 = Utf8               hasBytes\n-  #135 = Utf8               ()Z\n-  #136 = Utf8               ()B\n-  #137 = Utf8               java/lang/Math\n-  #138 = Utf8               min\n-  #139 = Utf8               (II)I\n-  #140 = Utf8               clear\n+    #1 = Class              #2            // org/apache/commons/io/input/buffer/CircularBufferInputStream\n+    #2 = Utf8               org/apache/commons/io/input/buffer/CircularBufferInputStream\n+    #3 = Class              #4            // java/io/InputStream\n+    #4 = Utf8               java/io/InputStream\n+    #5 = Utf8               in\n+    #6 = Utf8               Ljava/io/InputStream;\n+    #7 = Utf8               buffer\n+    #8 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+    #9 = Utf8               bufferSize\n+   #10 = Utf8               I\n+   #11 = Utf8               eof\n+   #12 = Utf8               Z\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (Ljava/io/InputStream;I)V\n+   #15 = Utf8               Code\n+   #16 = Methodref          #3.#17        // java/io/InputStream.\"<init>\":()V\n+   #17 = NameAndType        #13:#18       // \"<init>\":()V\n+   #18 = Utf8               ()V\n+   #19 = Class              #20           // java/lang/IllegalArgumentException\n+   #20 = Utf8               java/lang/IllegalArgumentException\n+   #21 = Class              #22           // java/lang/StringBuilder\n+   #22 = Utf8               java/lang/StringBuilder\n+   #23 = String             #24           // Invalid bufferSize:\n+   #24 = Utf8               Invalid bufferSize:\n+   #25 = Methodref          #21.#26       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #26 = NameAndType        #13:#27       // \"<init>\":(Ljava/lang/String;)V\n+   #27 = Utf8               (Ljava/lang/String;)V\n+   #28 = Methodref          #21.#29       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #29 = NameAndType        #30:#31       // append:(I)Ljava/lang/StringBuilder;\n+   #30 = Utf8               append\n+   #31 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #32 = Methodref          #21.#33       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #33 = NameAndType        #34:#35       // toString:()Ljava/lang/String;\n+   #34 = Utf8               toString\n+   #35 = Utf8               ()Ljava/lang/String;\n+   #36 = Methodref          #19.#26       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = String             #38           // inputStream\n+   #38 = Utf8               inputStream\n+   #39 = Methodref          #40.#42       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #40 = Class              #41           // java/util/Objects\n+   #41 = Utf8               java/util/Objects\n+   #42 = NameAndType        #43:#44       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #43 = Utf8               requireNonNull\n+   #44 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #45 = Fieldref           #1.#46        // org/apache/commons/io/input/buffer/CircularBufferInputStream.in:Ljava/io/InputStream;\n+   #46 = NameAndType        #5:#6         // in:Ljava/io/InputStream;\n+   #47 = Class              #48           // org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #48 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #49 = Methodref          #47.#50       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+   #50 = NameAndType        #13:#51       // \"<init>\":(I)V\n+   #51 = Utf8               (I)V\n+   #52 = Fieldref           #1.#53        // org/apache/commons/io/input/buffer/CircularBufferInputStream.buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #53 = NameAndType        #7:#8         // buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #54 = Fieldref           #1.#55        // org/apache/commons/io/input/buffer/CircularBufferInputStream.bufferSize:I\n+   #55 = NameAndType        #9:#10        // bufferSize:I\n+   #56 = Fieldref           #1.#57        // org/apache/commons/io/input/buffer/CircularBufferInputStream.eof:Z\n+   #57 = NameAndType        #11:#12       // eof:Z\n+   #58 = Utf8               LineNumberTable\n+   #59 = Utf8               LocalVariableTable\n+   #60 = Utf8               this\n+   #61 = Utf8               Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n+   #62 = Utf8               StackMapTable\n+   #63 = Utf8               (Ljava/io/InputStream;)V\n+   #64 = Methodref          #1.#65        // org/apache/commons/io/input/buffer/CircularBufferInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+   #65 = NameAndType        #13:#14       // \"<init>\":(Ljava/io/InputStream;I)V\n+   #66 = Utf8               fillBuffer\n+   #67 = Utf8               Exceptions\n+   #68 = Class              #69           // java/io/IOException\n+   #69 = Utf8               java/io/IOException\n+   #70 = Methodref          #47.#71       // org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+   #71 = NameAndType        #72:#73       // getSpace:()I\n+   #72 = Utf8               getSpace\n+   #73 = Utf8               ()I\n+   #74 = Methodref          #75.#77       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #75 = Class              #76           // org/apache/commons/io/IOUtils\n+   #76 = Utf8               org/apache/commons/io/IOUtils\n+   #77 = NameAndType        #78:#79       // byteArray:(I)[B\n+   #78 = Utf8               byteArray\n+   #79 = Utf8               (I)[B\n+   #80 = Methodref          #3.#81        // java/io/InputStream.read:([BII)I\n+   #81 = NameAndType        #82:#83       // read:([BII)I\n+   #82 = Utf8               read\n+   #83 = Utf8               ([BII)I\n+   #84 = Methodref          #47.#85       // org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+   #85 = NameAndType        #86:#87       // add:([BII)V\n+   #86 = Utf8               add\n+   #87 = Utf8               ([BII)V\n+   #88 = Utf8               space\n+   #89 = Utf8               buf\n+   #90 = Utf8               [B\n+   #91 = Utf8               res\n+   #92 = Class              #90           // \"[B\"\n+   #93 = Utf8               haveBytes\n+   #94 = Utf8               (I)Z\n+   #95 = Methodref          #47.#96       // org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+   #96 = NameAndType        #97:#73       // getCurrentNumberOfBytes:()I\n+   #97 = Utf8               getCurrentNumberOfBytes\n+   #98 = Methodref          #1.#99        // org/apache/commons/io/input/buffer/CircularBufferInputStream.fillBuffer:()V\n+   #99 = NameAndType        #66:#18       // fillBuffer:()V\n+  #100 = Methodref          #47.#101      // org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+  #101 = NameAndType        #102:#103     // hasBytes:()Z\n+  #102 = Utf8               hasBytes\n+  #103 = Utf8               ()Z\n+  #104 = Utf8               count\n+  #105 = Methodref          #1.#106       // org/apache/commons/io/input/buffer/CircularBufferInputStream.haveBytes:(I)Z\n+  #106 = NameAndType        #93:#94       // haveBytes:(I)Z\n+  #107 = Methodref          #47.#108      // org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+  #108 = NameAndType        #82:#109      // read:()B\n+  #109 = Utf8               ()B\n+  #110 = Utf8               ([B)I\n+  #111 = Methodref          #1.#81        // org/apache/commons/io/input/buffer/CircularBufferInputStream.read:([BII)I\n+  #112 = String             #113          // targetBuffer\n+  #113 = Utf8               targetBuffer\n+  #114 = String             #115          // Offset must not be negative\n+  #115 = Utf8               Offset must not be negative\n+  #116 = String             #117          // Length must not be negative\n+  #117 = Utf8               Length must not be negative\n+  #118 = Methodref          #119.#121     // java/lang/Math.min:(II)I\n+  #119 = Class              #120          // java/lang/Math\n+  #120 = Utf8               java/lang/Math\n+  #121 = NameAndType        #122:#123     // min:(II)I\n+  #122 = Utf8               min\n+  #123 = Utf8               (II)I\n+  #124 = Utf8               offset\n+  #125 = Utf8               length\n+  #126 = Utf8               result\n+  #127 = Utf8               i\n+  #128 = Utf8               close\n+  #129 = Methodref          #3.#130       // java/io/InputStream.close:()V\n+  #130 = NameAndType        #128:#18      // close:()V\n+  #131 = Methodref          #47.#132      // org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+  #132 = NameAndType        #133:#18      // clear:()V\n+  #133 = Utf8               clear\n+  #134 = Utf8               SourceFile\n+  #135 = Utf8               CircularBufferInputStream.java\n {\n   protected final java.io.InputStream in;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   protected final org.apache.commons.io.input.buffer.CircularByteBuffer buffer;\n     descriptor: Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n@@ -165,353 +160,350 @@\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.io.input.buffer.CircularBufferInputStream(java.io.InputStream, int);\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=3, args_size=3\n+      stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/io/InputStream.\"<init>\":()V\n          4: iload_2\n-         5: ifgt          35\n-         8: new           #3                  // class java/lang/IllegalArgumentException\n+         5: ifgt          32\n+         8: new           #19                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: new           #4                  // class java/lang/StringBuilder\n+        12: new           #21                 // class java/lang/StringBuilder\n         15: dup\n-        16: invokespecial #5                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #6                  // String Invalid bufferSize:\n-        21: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: iload_2\n-        25: invokevirtual #8                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        28: invokevirtual #9                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        31: invokespecial #10                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        34: athrow\n-        35: aload_0\n-        36: aload_1\n-        37: ldc           #11                 // String inputStream\n-        39: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        42: checkcast     #13                 // class java/io/InputStream\n-        45: putfield      #14                 // Field in:Ljava/io/InputStream;\n-        48: aload_0\n-        49: new           #15                 // class org/apache/commons/io/input/buffer/CircularByteBuffer\n-        52: dup\n-        53: iload_2\n-        54: invokespecial #16                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-        57: putfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        60: aload_0\n-        61: iload_2\n-        62: putfield      #18                 // Field bufferSize:I\n-        65: aload_0\n-        66: iconst_0\n-        67: putfield      #19                 // Field eof:Z\n-        70: return\n+        16: ldc           #23                 // String Invalid bufferSize:\n+        18: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        21: iload_2\n+        22: invokevirtual #28                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        25: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        28: invokespecial #36                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        31: athrow\n+        32: aload_0\n+        33: aload_1\n+        34: ldc           #37                 // String inputStream\n+        36: invokestatic  #39                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        39: checkcast     #3                  // class java/io/InputStream\n+        42: putfield      #45                 // Field in:Ljava/io/InputStream;\n+        45: aload_0\n+        46: new           #47                 // class org/apache/commons/io/input/buffer/CircularByteBuffer\n+        49: dup\n+        50: iload_2\n+        51: invokespecial #49                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+        54: putfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        57: aload_0\n+        58: iload_2\n+        59: putfield      #54                 // Field bufferSize:I\n+        62: aload_0\n+        63: iconst_0\n+        64: putfield      #56                 // Field eof:Z\n+        67: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 8\n-        line 55: 35\n-        line 56: 48\n-        line 57: 60\n-        line 58: 65\n-        line 59: 70\n+        line 55: 32\n+        line 56: 45\n+        line 57: 57\n+        line 58: 62\n+        line 59: 67\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      71     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n-            0      71     1 inputStream   Ljava/io/InputStream;\n-            0      71     2 bufferSize   I\n+            0      68     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n+            0      68     1 inputStream   Ljava/io/InputStream;\n+            0      68     2 bufferSize   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n-          offset_delta = 35\n+          offset_delta = 32\n           locals = [ class org/apache/commons/io/input/buffer/CircularBufferInputStream, class java/io/InputStream, int ]\n           stack = []\n \n   public org.apache.commons.io.input.buffer.CircularBufferInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: sipush        8192\n-         5: invokespecial #20                 // Method \"<init>\":(Ljava/io/InputStream;I)V\n+         5: invokespecial #64                 // Method \"<init>\":(Ljava/io/InputStream;I)V\n          8: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n             0       9     1 inputStream   Ljava/io/InputStream;\n \n   protected void fillBuffer() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field eof:Z\n+         1: getfield      #56                 // Field eof:Z\n          4: ifeq          8\n          7: return\n          8: aload_0\n-         9: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        12: invokevirtual #21                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n+         9: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        12: invokevirtual #70                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getSpace:()I\n         15: istore_1\n         16: iload_1\n-        17: invokestatic  #22                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+        17: invokestatic  #74                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n         20: astore_2\n-        21: iload_1\n-        22: ifle          68\n-        25: aload_0\n-        26: getfield      #14                 // Field in:Ljava/io/InputStream;\n-        29: aload_2\n-        30: iconst_0\n-        31: iload_1\n-        32: invokevirtual #23                 // Method java/io/InputStream.read:([BII)I\n-        35: istore_3\n-        36: iload_3\n-        37: iconst_m1\n-        38: if_icmpne     47\n-        41: aload_0\n-        42: iconst_1\n-        43: putfield      #19                 // Field eof:Z\n-        46: return\n-        47: iload_3\n-        48: ifle          65\n-        51: aload_0\n-        52: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        55: aload_2\n-        56: iconst_0\n-        57: iload_3\n-        58: invokevirtual #24                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n-        61: iload_1\n-        62: iload_3\n-        63: isub\n-        64: istore_1\n-        65: goto          21\n+        21: goto          64\n+        24: aload_0\n+        25: getfield      #45                 // Field in:Ljava/io/InputStream;\n+        28: aload_2\n+        29: iconst_0\n+        30: iload_1\n+        31: invokevirtual #80                 // Method java/io/InputStream.read:([BII)I\n+        34: istore_3\n+        35: iload_3\n+        36: iconst_m1\n+        37: if_icmpne     46\n+        40: aload_0\n+        41: iconst_1\n+        42: putfield      #56                 // Field eof:Z\n+        45: return\n+        46: iload_3\n+        47: ifle          64\n+        50: aload_0\n+        51: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        54: aload_2\n+        55: iconst_0\n+        56: iload_3\n+        57: invokevirtual #84                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.add:([BII)V\n+        60: iload_1\n+        61: iload_3\n+        62: isub\n+        63: istore_1\n+        64: iload_1\n+        65: ifgt          24\n         68: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 7\n         line 80: 8\n         line 81: 16\n         line 82: 21\n-        line 83: 25\n-        line 84: 36\n-        line 85: 41\n-        line 86: 46\n-        line 88: 47\n-        line 89: 51\n-        line 90: 61\n-        line 92: 65\n+        line 83: 24\n+        line 84: 35\n+        line 85: 40\n+        line 86: 45\n+        line 88: 46\n+        line 89: 50\n+        line 90: 60\n+        line 82: 64\n         line 93: 68\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           36      29     3   res   I\n             0      69     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n            16      53     1 space   I\n            21      48     2   buf   [B\n-      StackMapTable: number_of_entries = 5\n+           35      29     3   res   I\n+      StackMapTable: number_of_entries = 4\n         frame_type = 8 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 12\n+          offset_delta = 15\n           locals = [ int, class \"[B\" ]\n         frame_type = 252 /* append */\n-          offset_delta = 25\n+          offset_delta = 21\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 17\n-        frame_type = 2 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected boolean haveBytes(int) throws java.io.IOException;\n     descriptor: (I)Z\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-         4: invokevirtual #25                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+         1: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+         4: invokevirtual #95                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n          7: iload_1\n          8: if_icmpge     15\n         11: aload_0\n-        12: invokevirtual #26                 // Method fillBuffer:()V\n+        12: invokevirtual #98                 // Method fillBuffer:()V\n         15: aload_0\n-        16: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        19: invokevirtual #27                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n+        16: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        19: invokevirtual #100                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.hasBytes:()Z\n         22: ireturn\n       LineNumberTable:\n         line 103: 0\n         line 104: 11\n         line 106: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n             0      23     1 count   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #28                 // Method haveBytes:(I)Z\n+         2: invokevirtual #105                // Method haveBytes:(I)Z\n          5: ifne          10\n          8: iconst_m1\n          9: ireturn\n         10: aload_0\n-        11: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        14: invokevirtual #29                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+        11: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        14: invokevirtual #107                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n         17: sipush        255\n         20: iand\n         21: ireturn\n       LineNumberTable:\n         line 111: 0\n         line 112: 8\n         line 114: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 10 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #30                 // Method read:([BII)I\n+         5: invokevirtual #111                // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 119: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n             0       9     1 buffer   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #31                 // String targetBuffer\n-         3: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #112                // String targetBuffer\n+         3: invokestatic  #39                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: ifge          21\n-        11: new           #3                  // class java/lang/IllegalArgumentException\n+        11: new           #19                 // class java/lang/IllegalArgumentException\n         14: dup\n-        15: ldc           #32                 // String Offset must not be negative\n-        17: invokespecial #10                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        15: ldc           #114                // String Offset must not be negative\n+        17: invokespecial #36                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         20: athrow\n         21: iload_3\n         22: ifge          35\n-        25: new           #3                  // class java/lang/IllegalArgumentException\n+        25: new           #19                 // class java/lang/IllegalArgumentException\n         28: dup\n-        29: ldc           #33                 // String Length must not be negative\n-        31: invokespecial #10                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: ldc           #116                // String Length must not be negative\n+        31: invokespecial #36                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: iload_3\n-        37: invokevirtual #28                 // Method haveBytes:(I)Z\n+        37: invokevirtual #105                // Method haveBytes:(I)Z\n         40: ifne          45\n         43: iconst_m1\n         44: ireturn\n         45: iload_3\n         46: aload_0\n-        47: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        50: invokevirtual #25                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n-        53: invokestatic  #34                 // Method java/lang/Math.min:(II)I\n+        47: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        50: invokevirtual #95                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.getCurrentNumberOfBytes:()I\n+        53: invokestatic  #118                // Method java/lang/Math.min:(II)I\n         56: istore        4\n         58: iconst_0\n         59: istore        5\n-        61: iload         5\n-        63: iload         4\n-        65: if_icmpge     87\n-        68: aload_1\n-        69: iload_2\n-        70: iload         5\n-        72: iadd\n-        73: aload_0\n-        74: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        77: invokevirtual #29                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n-        80: bastore\n-        81: iinc          5, 1\n-        84: goto          61\n+        61: goto          80\n+        64: aload_1\n+        65: iload_2\n+        66: iload         5\n+        68: iadd\n+        69: aload_0\n+        70: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        73: invokevirtual #107                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.read:()B\n+        76: bastore\n+        77: iinc          5, 1\n+        80: iload         5\n+        82: iload         4\n+        84: if_icmplt     64\n         87: iload         4\n         89: ireturn\n       LineNumberTable:\n         line 124: 0\n         line 125: 7\n         line 126: 11\n         line 128: 21\n         line 129: 25\n         line 131: 35\n         line 132: 43\n         line 134: 45\n         line 135: 58\n-        line 136: 68\n-        line 135: 81\n+        line 136: 64\n+        line 135: 77\n         line 138: 87\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           61      26     5     i   I\n             0      90     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n             0      90     1 targetBuffer   [B\n             0      90     2 offset   I\n             0      90     3 length   I\n            58      32     4 result   I\n+           61      26     5     i   I\n       StackMapTable: number_of_entries = 5\n         frame_type = 21 /* same */\n         frame_type = 13 /* same */\n         frame_type = 9 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 15\n+          offset_delta = 18\n           locals = [ int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 25\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 15 /* same */\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #35                 // Method java/io/InputStream.close:()V\n+         1: getfield      #45                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #129                // Method java/io/InputStream.close:()V\n          7: aload_0\n          8: iconst_1\n-         9: putfield      #19                 // Field eof:Z\n+         9: putfield      #56                 // Field eof:Z\n         12: aload_0\n-        13: getfield      #17                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-        16: invokevirtual #36                 // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n+        13: getfield      #52                 // Field buffer:Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+        16: invokevirtual #131                // Method org/apache/commons/io/input/buffer/CircularByteBuffer.clear:()V\n         19: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 7\n         line 145: 12\n         line 146: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/io/input/buffer/CircularBufferInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"CircularBufferInputStream.java\"\n"}]}
