{"diffoscope-json-version": 1, "source1": "first/IOBiFunction.class", "source2": "second/IOBiFunction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,166 +1,166 @@\n-  SHA-256 checksum bee9e4b490140ab443efcd77a5da4a5ebf150e7e9839c5c5d3b6888bd5a322aa\n+  SHA-256 checksum 69402409fb74b922a14edc1700237b70992d3aa7420277761876263f4241accd\n   Compiled from \"IOBiFunction.java\"\n public interface org.apache.commons.io.function.IOBiFunction<T extends java.lang.Object, U extends java.lang.Object, R extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #7                          // org/apache/commons/io/function/IOBiFunction\n-  super_class: #8                         // java/lang/Object\n+  this_class: #20                         // org/apache/commons/io/function/IOBiFunction\n+  super_class: #28                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 5, attributes: 5\n Constant pool:\n-   #1 = Methodref          #31.#32        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #2 = InvokeDynamic      #0:#37         // #0:apply:(Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n-   #3 = InvokeDynamic      #1:#39         // #1:apply:(Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n-   #4 = Methodref          #40.#41        // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #5 = InterfaceMethodref #7.#42         // org/apache/commons/io/function/IOBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #6 = InterfaceMethodref #43.#44        // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #7 = Class              #45            // org/apache/commons/io/function/IOBiFunction\n-   #8 = Class              #46            // java/lang/Object\n-   #9 = Utf8               andThen\n-  #10 = Utf8               (Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n-  #11 = Utf8               Code\n-  #12 = Utf8               LineNumberTable\n-  #13 = Utf8               Signature\n-  #14 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/io/function/IOFunction<-TR;+TV;>;)Lorg/apache/commons/io/function/IOBiFunction<TT;TU;TV;>;\n-  #15 = Utf8               apply\n-  #16 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #17 = Utf8               Exceptions\n-  #18 = Class              #47            // java/io/IOException\n-  #19 = Utf8               (TT;TU;)TR;\n-  #20 = Utf8               asBiFunction\n-  #21 = Utf8               ()Ljava/util/function/BiFunction;\n-  #22 = Utf8               ()Ljava/util/function/BiFunction<TT;TU;TR;>;\n-  #23 = Utf8               lambda$asBiFunction$1\n-  #24 = Utf8               lambda$andThen$0\n-  #25 = Utf8               (Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #26 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n-  #27 = Utf8               SourceFile\n-  #28 = Utf8               IOBiFunction.java\n-  #29 = Utf8               RuntimeVisibleAnnotations\n-  #30 = Utf8               Ljava/lang/FunctionalInterface;\n-  #31 = Class              #48            // java/util/Objects\n-  #32 = NameAndType        #49:#50        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #33 = Utf8               BootstrapMethods\n-  #34 = MethodHandle       6:#51          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #35 = MethodType         #16            //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #36 = MethodHandle       7:#52          // REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #37 = NameAndType        #15:#53        // apply:(Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n-  #38 = MethodHandle       7:#54          // REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #39 = NameAndType        #15:#55        // apply:(Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n-  #40 = Class              #56            // org/apache/commons/io/function/Uncheck\n-  #41 = NameAndType        #15:#57        // apply:(Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #42 = NameAndType        #15:#16        // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #43 = Class              #58            // org/apache/commons/io/function/IOFunction\n-  #44 = NameAndType        #15:#50        // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #45 = Utf8               org/apache/commons/io/function/IOBiFunction\n-  #46 = Utf8               java/lang/Object\n-  #47 = Utf8               java/io/IOException\n-  #48 = Utf8               java/util/Objects\n-  #49 = Utf8               requireNonNull\n-  #50 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #51 = Methodref          #59.#60        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #52 = InterfaceMethodref #7.#61         // org/apache/commons/io/function/IOBiFunction.lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #53 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n-  #54 = InterfaceMethodref #7.#62         // org/apache/commons/io/function/IOBiFunction.lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #55 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n-  #56 = Utf8               org/apache/commons/io/function/Uncheck\n-  #57 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #58 = Utf8               org/apache/commons/io/function/IOFunction\n-  #59 = Class              #63            // java/lang/invoke/LambdaMetafactory\n-  #60 = NameAndType        #64:#68        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #61 = NameAndType        #24:#25        // lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #62 = NameAndType        #23:#16        // lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #63 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #64 = Utf8               metafactory\n-  #65 = Class              #70            // java/lang/invoke/MethodHandles$Lookup\n-  #66 = Utf8               Lookup\n-  #67 = Utf8               InnerClasses\n-  #68 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #69 = Class              #71            // java/lang/invoke/MethodHandles\n-  #70 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #71 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Methodref          #2.#3          // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #2 = Class              #4             // java/util/Objects\n+   #3 = NameAndType        #5:#6          // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #4 = Utf8               java/util/Objects\n+   #5 = Utf8               requireNonNull\n+   #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #7 = InvokeDynamic      #0:#8          // #0:apply:(Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n+   #8 = NameAndType        #9:#10         // apply:(Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n+   #9 = Utf8               apply\n+  #10 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n+  #11 = InvokeDynamic      #1:#12         // #1:apply:(Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n+  #12 = NameAndType        #9:#13         // apply:(Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n+  #13 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n+  #14 = Methodref          #15.#16        // org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #15 = Class              #17            // org/apache/commons/io/function/Uncheck\n+  #16 = NameAndType        #9:#18         // apply:(Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #17 = Utf8               org/apache/commons/io/function/Uncheck\n+  #18 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #19 = InterfaceMethodref #20.#21        // org/apache/commons/io/function/IOBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #20 = Class              #22            // org/apache/commons/io/function/IOBiFunction\n+  #21 = NameAndType        #9:#23         // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #22 = Utf8               org/apache/commons/io/function/IOBiFunction\n+  #23 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #24 = InterfaceMethodref #25.#26        // org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #25 = Class              #27            // org/apache/commons/io/function/IOFunction\n+  #26 = NameAndType        #9:#6          // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #27 = Utf8               org/apache/commons/io/function/IOFunction\n+  #28 = Class              #29            // java/lang/Object\n+  #29 = Utf8               java/lang/Object\n+  #30 = Utf8               andThen\n+  #31 = Utf8               (Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n+  #32 = Utf8               Code\n+  #33 = Utf8               LineNumberTable\n+  #34 = Utf8               Signature\n+  #35 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/io/function/IOFunction<-TR;+TV;>;)Lorg/apache/commons/io/function/IOBiFunction<TT;TU;TV;>;\n+  #36 = Utf8               Exceptions\n+  #37 = Class              #38            // java/io/IOException\n+  #38 = Utf8               java/io/IOException\n+  #39 = Utf8               (TT;TU;)TR;\n+  #40 = Utf8               asBiFunction\n+  #41 = Utf8               ()Ljava/util/function/BiFunction;\n+  #42 = Utf8               ()Ljava/util/function/BiFunction<TT;TU;TR;>;\n+  #43 = Utf8               lambda$asBiFunction$1\n+  #44 = Utf8               lambda$andThen$0\n+  #45 = Utf8               (Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #46 = Utf8               <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n+  #47 = Utf8               SourceFile\n+  #48 = Utf8               IOBiFunction.java\n+  #49 = Utf8               RuntimeVisibleAnnotations\n+  #50 = Utf8               Ljava/lang/FunctionalInterface;\n+  #51 = Utf8               BootstrapMethods\n+  #52 = MethodHandle       6:#53          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #53 = Methodref          #54.#55        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #54 = Class              #56            // java/lang/invoke/LambdaMetafactory\n+  #55 = NameAndType        #57:#58        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #56 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #57 = Utf8               metafactory\n+  #58 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #59 = MethodType         #23            //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #60 = MethodHandle       7:#61          // REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #61 = InterfaceMethodref #20.#62        // org/apache/commons/io/function/IOBiFunction.lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #62 = NameAndType        #44:#45        // lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #63 = MethodHandle       7:#64          // REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #64 = InterfaceMethodref #20.#65        // org/apache/commons/io/function/IOBiFunction.lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #65 = NameAndType        #43:#23        // lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #66 = Utf8               InnerClasses\n+  #67 = Class              #68            // java/lang/invoke/MethodHandles$Lookup\n+  #68 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #69 = Class              #70            // java/lang/invoke/MethodHandles\n+  #70 = Utf8               java/lang/invoke/MethodHandles\n+  #71 = Utf8               Lookup\n {\n   public default <V extends java.lang.Object> org.apache.commons.io.function.IOBiFunction<T, U, V> andThen(org.apache.commons.io.function.IOFunction<? super R, ? extends V>);\n     descriptor: (Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: invokestatic  #1                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #2,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n+         7: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/io/function/IOBiFunction;Lorg/apache/commons/io/function/IOFunction;)Lorg/apache/commons/io/function/IOBiFunction;\n         12: areturn\n       LineNumberTable:\n         line 55: 0\n         line 56: 5\n-    Signature: #14                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/io/function/IOFunction<-TR;+TV;>;)Lorg/apache/commons/io/function/IOBiFunction<TT;TU;TV;>;\n+    Signature: #35                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/io/function/IOFunction<-TR;+TV;>;)Lorg/apache/commons/io/function/IOBiFunction<TT;TU;TV;>;\n \n   public abstract R apply(T, U) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #19                          // (TT;TU;)TR;\n+    Signature: #39                          // (TT;TU;)TR;\n \n   public default java.util.function.BiFunction<T, U, R> asBiFunction();\n     descriptor: ()Ljava/util/function/BiFunction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #3,  0              // InvokeDynamic #1:apply:(Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n+         1: invokedynamic #11,  0             // InvokeDynamic #1:apply:(Lorg/apache/commons/io/function/IOBiFunction;)Ljava/util/function/BiFunction;\n          6: areturn\n       LineNumberTable:\n         line 76: 0\n-    Signature: #22                          // ()Ljava/util/function/BiFunction<TT;TU;TR;>;\n+    Signature: #42                          // ()Ljava/util/function/BiFunction<TT;TU;TR;>;\n \n   private java.lang.Object lambda$asBiFunction$1(java.lang.Object, java.lang.Object);\n     descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #4                  // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         3: invokestatic  #14                 // Method org/apache/commons/io/function/Uncheck.apply:(Lorg/apache/commons/io/function/IOBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n          6: areturn\n       LineNumberTable:\n         line 76: 0\n \n   private java.lang.Object lambda$andThen$0(org.apache.commons.io.function.IOFunction, java.lang.Object, java.lang.Object) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_1\n          1: aload_0\n          2: aload_2\n          3: aload_3\n-         4: invokeinterface #5,  3            // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-         9: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         4: invokeinterface #19,  3           // InterfaceMethod apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokeinterface #24,  2           // InterfaceMethod org/apache/commons/io/function/IOFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n         14: areturn\n       LineNumberTable:\n         line 56: 0\n     Exceptions:\n       throws java.io.IOException\n }\n-Signature: #26                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #46                          // <T:Ljava/lang/Object;U:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"IOBiFunction.java\"\n RuntimeVisibleAnnotations:\n-  0: #30()\n+  0: #50()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #66= #65 of #69;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #34 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #35 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #36 REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #35 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  1: #34 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #60 REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$andThen$0:(Lorg/apache/commons/io/function/IOFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  1: #52 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #35 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #38 REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #35 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #63 REF_invokeSpecial org/apache/commons/io/function/IOBiFunction.lambda$asBiFunction$1:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #59 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+InnerClasses:\n+  public static final #71= #67 of #69;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
