{"diffoscope-json-version": 1, "source1": "first/CircularByteBuffer.class", "source2": "second/CircularByteBuffer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,117 +1,117 @@\n-  SHA-256 checksum 18311965d60ef2d5cfd76b63a1009a7ad5c9dda7fa1b2234920423048f6b15fb\n+  SHA-256 checksum 4cb918a40f79a6d374a55253763db02a299e4e0ad2b9c5205b0e27fe54b4dfe5\n   Compiled from \"CircularByteBuffer.java\"\n public class org.apache.commons.io.input.buffer.CircularByteBuffer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/input/buffer/CircularByteBuffer\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/input/buffer/CircularByteBuffer\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/io/input/buffer/CircularByteBuffer\n+    #2 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Methodref          #8.#9         // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-    #8 = Class              #10           // org/apache/commons/io/IOUtils\n-    #9 = NameAndType        #11:#12       // byteArray:(I)[B\n-   #10 = Utf8               org/apache/commons/io/IOUtils\n-   #11 = Utf8               byteArray\n-   #12 = Utf8               (I)[B\n-   #13 = Fieldref           #14.#15       // org/apache/commons/io/input/buffer/CircularByteBuffer.buffer:[B\n-   #14 = Class              #16           // org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #15 = NameAndType        #17:#18       // buffer:[B\n-   #16 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #17 = Utf8               buffer\n-   #18 = Utf8               [B\n-   #19 = Fieldref           #14.#20       // org/apache/commons/io/input/buffer/CircularByteBuffer.startOffset:I\n-   #20 = NameAndType        #21:#22       // startOffset:I\n-   #21 = Utf8               startOffset\n-   #22 = Utf8               I\n-   #23 = Fieldref           #14.#24       // org/apache/commons/io/input/buffer/CircularByteBuffer.endOffset:I\n-   #24 = NameAndType        #25:#22       // endOffset:I\n-   #25 = Utf8               endOffset\n-   #26 = Fieldref           #14.#27       // org/apache/commons/io/input/buffer/CircularByteBuffer.currentNumberOfBytes:I\n-   #27 = NameAndType        #28:#22       // currentNumberOfBytes:I\n-   #28 = Utf8               currentNumberOfBytes\n-   #29 = Methodref          #14.#30       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-   #30 = NameAndType        #5:#31        // \"<init>\":(I)V\n-   #31 = Utf8               (I)V\n-   #32 = Class              #33           // java/lang/IllegalStateException\n-   #33 = Utf8               java/lang/IllegalStateException\n-   #34 = String             #35           // No bytes available.\n-   #35 = Utf8               No bytes available.\n-   #36 = Methodref          #32.#37       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = NameAndType        #5:#38        // \"<init>\":(Ljava/lang/String;)V\n-   #38 = Utf8               (Ljava/lang/String;)V\n-   #39 = String             #40           // targetBuffer\n-   #40 = Utf8               targetBuffer\n-   #41 = Methodref          #42.#43       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #42 = Class              #44           // java/util/Objects\n-   #43 = NameAndType        #45:#46       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #44 = Utf8               java/util/Objects\n-   #45 = Utf8               requireNonNull\n-   #46 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #47 = Class              #48           // java/lang/IllegalArgumentException\n-   #48 = Utf8               java/lang/IllegalArgumentException\n-   #49 = Class              #50           // java/lang/StringBuilder\n-   #50 = Utf8               java/lang/StringBuilder\n-   #51 = Methodref          #49.#3        // java/lang/StringBuilder.\"<init>\":()V\n-   #52 = String             #53           // Invalid offset:\n-   #53 = Utf8               Invalid offset:\n-   #54 = Methodref          #49.#55       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #55 = NameAndType        #56:#57       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #56 = Utf8               append\n-   #57 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #58 = Methodref          #49.#59       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #59 = NameAndType        #56:#60       // append:(I)Ljava/lang/StringBuilder;\n-   #60 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #61 = Methodref          #49.#62       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #62 = NameAndType        #63:#64       // toString:()Ljava/lang/String;\n-   #63 = Utf8               toString\n-   #64 = Utf8               ()Ljava/lang/String;\n-   #65 = Methodref          #47.#37       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #66 = String             #67           // Invalid length:\n-   #67 = Utf8               Invalid length:\n-   #68 = String             #69           // The supplied byte array contains only\n-   #69 = Utf8               The supplied byte array contains only\n-   #70 = String             #71           //  bytes, but offset, and length would require\n-   #71 = Utf8                bytes, but offset, and length would require\n-   #72 = String             #73           // Currently, there are only\n-   #73 = Utf8               Currently, there are only\n-   #74 = String             #75           // in the buffer, not\n-   #75 = Utf8               in the buffer, not\n-   #76 = String             #77           // No space available\n-   #77 = Utf8               No space available\n-   #78 = String             #79           // Buffer\n-   #79 = Utf8               Buffer\n-   #80 = Utf8               Code\n-   #81 = Utf8               LineNumberTable\n-   #82 = Utf8               LocalVariableTable\n-   #83 = Utf8               this\n-   #84 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #85 = Utf8               size\n-   #86 = Utf8               read\n-   #87 = Utf8               ()B\n-   #88 = Utf8               b\n-   #89 = Utf8               B\n-   #90 = Utf8               StackMapTable\n-   #91 = Utf8               ([BII)V\n-   #92 = Utf8               i\n-   #93 = Utf8               targetOffset\n-   #94 = Utf8               length\n-   #95 = Utf8               offset\n-   #96 = Utf8               add\n-   #97 = Utf8               (B)V\n-   #98 = Utf8               value\n-   #99 = Utf8               peek\n-  #100 = Utf8               ([BII)Z\n+    #5 = Utf8               buffer\n+    #6 = Utf8               [B\n+    #7 = Utf8               startOffset\n+    #8 = Utf8               I\n+    #9 = Utf8               endOffset\n+   #10 = Utf8               currentNumberOfBytes\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (I)V\n+   #13 = Utf8               Code\n+   #14 = Methodref          #3.#15        // java/lang/Object.\"<init>\":()V\n+   #15 = NameAndType        #11:#16       // \"<init>\":()V\n+   #16 = Utf8               ()V\n+   #17 = Methodref          #18.#20       // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+   #18 = Class              #19           // org/apache/commons/io/IOUtils\n+   #19 = Utf8               org/apache/commons/io/IOUtils\n+   #20 = NameAndType        #21:#22       // byteArray:(I)[B\n+   #21 = Utf8               byteArray\n+   #22 = Utf8               (I)[B\n+   #23 = Fieldref           #1.#24        // org/apache/commons/io/input/buffer/CircularByteBuffer.buffer:[B\n+   #24 = NameAndType        #5:#6         // buffer:[B\n+   #25 = Fieldref           #1.#26        // org/apache/commons/io/input/buffer/CircularByteBuffer.startOffset:I\n+   #26 = NameAndType        #7:#8         // startOffset:I\n+   #27 = Fieldref           #1.#28        // org/apache/commons/io/input/buffer/CircularByteBuffer.endOffset:I\n+   #28 = NameAndType        #9:#8         // endOffset:I\n+   #29 = Fieldref           #1.#30        // org/apache/commons/io/input/buffer/CircularByteBuffer.currentNumberOfBytes:I\n+   #30 = NameAndType        #10:#8        // currentNumberOfBytes:I\n+   #31 = Utf8               LineNumberTable\n+   #32 = Utf8               LocalVariableTable\n+   #33 = Utf8               this\n+   #34 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #35 = Utf8               size\n+   #36 = Methodref          #1.#37        // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+   #37 = NameAndType        #11:#12       // \"<init>\":(I)V\n+   #38 = Utf8               read\n+   #39 = Utf8               ()B\n+   #40 = Class              #41           // java/lang/IllegalStateException\n+   #41 = Utf8               java/lang/IllegalStateException\n+   #42 = String             #43           // No bytes available.\n+   #43 = Utf8               No bytes available.\n+   #44 = Methodref          #40.#45       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #45 = NameAndType        #11:#46       // \"<init>\":(Ljava/lang/String;)V\n+   #46 = Utf8               (Ljava/lang/String;)V\n+   #47 = Utf8               b\n+   #48 = Utf8               B\n+   #49 = Utf8               StackMapTable\n+   #50 = Utf8               ([BII)V\n+   #51 = String             #52           // targetBuffer\n+   #52 = Utf8               targetBuffer\n+   #53 = Methodref          #54.#56       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #54 = Class              #55           // java/util/Objects\n+   #55 = Utf8               java/util/Objects\n+   #56 = NameAndType        #57:#58       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #57 = Utf8               requireNonNull\n+   #58 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #59 = Class              #60           // java/lang/IllegalArgumentException\n+   #60 = Utf8               java/lang/IllegalArgumentException\n+   #61 = Class              #62           // java/lang/StringBuilder\n+   #62 = Utf8               java/lang/StringBuilder\n+   #63 = String             #64           // Invalid offset:\n+   #64 = Utf8               Invalid offset:\n+   #65 = Methodref          #61.#45       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #66 = Methodref          #61.#67       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #67 = NameAndType        #68:#69       // append:(I)Ljava/lang/StringBuilder;\n+   #68 = Utf8               append\n+   #69 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #70 = Methodref          #61.#71       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #71 = NameAndType        #72:#73       // toString:()Ljava/lang/String;\n+   #72 = Utf8               toString\n+   #73 = Utf8               ()Ljava/lang/String;\n+   #74 = Methodref          #59.#45       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #75 = String             #76           // Invalid length:\n+   #76 = Utf8               Invalid length:\n+   #77 = String             #78           // The supplied byte array contains only\n+   #78 = Utf8               The supplied byte array contains only\n+   #79 = String             #80           //  bytes, but offset, and length would require\n+   #80 = Utf8                bytes, but offset, and length would require\n+   #81 = Methodref          #61.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #82 = NameAndType        #68:#83       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #84 = String             #85           // Currently, there are only\n+   #85 = Utf8               Currently, there are only\n+   #86 = String             #87           // in the buffer, not\n+   #87 = Utf8               in the buffer, not\n+   #88 = Utf8               targetOffset\n+   #89 = Utf8               length\n+   #90 = Utf8               offset\n+   #91 = Utf8               i\n+   #92 = Utf8               add\n+   #93 = Utf8               (B)V\n+   #94 = String             #95           // No space available\n+   #95 = Utf8               No space available\n+   #96 = Utf8               value\n+   #97 = Utf8               peek\n+   #98 = Utf8               ([BII)Z\n+   #99 = String             #100          // Buffer\n+  #100 = Utf8               Buffer\n   #101 = Utf8               sourceBuffer\n   #102 = Utf8               localOffset\n   #103 = Utf8               hasSpace\n   #104 = Utf8               ()Z\n   #105 = Utf8               (I)Z\n   #106 = Utf8               count\n   #107 = Utf8               hasBytes\n@@ -140,28 +140,28 @@\n \n   public org.apache.commons.io.input.buffer.CircularByteBuffer(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: invokestatic  #7                  // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n-         9: putfield      #13                 // Field buffer:[B\n+         6: invokestatic  #17                 // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+         9: putfield      #23                 // Field buffer:[B\n         12: aload_0\n         13: iconst_0\n-        14: putfield      #19                 // Field startOffset:I\n+        14: putfield      #25                 // Field startOffset:I\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #23                 // Field endOffset:I\n+        19: putfield      #27                 // Field endOffset:I\n         22: aload_0\n         23: iconst_0\n-        24: putfield      #26                 // Field currentNumberOfBytes:I\n+        24: putfield      #29                 // Field currentNumberOfBytes:I\n         27: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 4\n         line 43: 12\n         line 44: 17\n         line 45: 22\n@@ -174,62 +174,62 @@\n   public org.apache.commons.io.input.buffer.CircularByteBuffer();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: sipush        8192\n-         4: invokespecial #29                 // Method \"<init>\":(I)V\n+         4: invokespecial #36                 // Method \"<init>\":(I)V\n          7: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n \n   public byte read();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field currentNumberOfBytes:I\n+         1: getfield      #29                 // Field currentNumberOfBytes:I\n          4: ifgt          17\n-         7: new           #32                 // class java/lang/IllegalStateException\n+         7: new           #40                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #34                 // String No bytes available.\n-        13: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #42                 // String No bytes available.\n+        13: invokespecial #44                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #13                 // Field buffer:[B\n+        18: getfield      #23                 // Field buffer:[B\n         21: aload_0\n-        22: getfield      #19                 // Field startOffset:I\n+        22: getfield      #25                 // Field startOffset:I\n         25: baload\n         26: istore_1\n         27: aload_0\n         28: dup\n-        29: getfield      #26                 // Field currentNumberOfBytes:I\n+        29: getfield      #29                 // Field currentNumberOfBytes:I\n         32: iconst_1\n         33: isub\n-        34: putfield      #26                 // Field currentNumberOfBytes:I\n+        34: putfield      #29                 // Field currentNumberOfBytes:I\n         37: aload_0\n         38: dup\n-        39: getfield      #19                 // Field startOffset:I\n+        39: getfield      #25                 // Field startOffset:I\n         42: iconst_1\n         43: iadd\n         44: dup_x1\n-        45: putfield      #19                 // Field startOffset:I\n+        45: putfield      #25                 // Field startOffset:I\n         48: aload_0\n-        49: getfield      #13                 // Field buffer:[B\n+        49: getfield      #23                 // Field buffer:[B\n         52: arraylength\n         53: if_icmpne     61\n         56: aload_0\n         57: iconst_0\n-        58: putfield      #19                 // Field startOffset:I\n+        58: putfield      #25                 // Field startOffset:I\n         61: iload_1\n         62: ireturn\n       LineNumberTable:\n         line 64: 0\n         line 65: 7\n         line 67: 17\n         line 68: 27\n@@ -248,223 +248,223 @@\n \n   public void read(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #39                 // String targetBuffer\n-         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #51                 // String targetBuffer\n+         3: invokestatic  #53                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          17\n         11: iload_2\n         12: aload_1\n         13: arraylength\n-        14: if_icmplt     44\n-        17: new           #47                 // class java/lang/IllegalArgumentException\n+        14: if_icmplt     41\n+        17: new           #59                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #49                 // class java/lang/StringBuilder\n+        21: new           #61                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #52                 // String Invalid offset:\n-        30: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: iload_2\n-        34: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        43: athrow\n-        44: iload_3\n-        45: iflt          57\n-        48: iload_3\n-        49: aload_0\n-        50: getfield      #13                 // Field buffer:[B\n-        53: arraylength\n-        54: if_icmple     84\n-        57: new           #47                 // class java/lang/IllegalArgumentException\n-        60: dup\n-        61: new           #49                 // class java/lang/StringBuilder\n-        64: dup\n-        65: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        68: ldc           #66                 // String Invalid length:\n-        70: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        73: iload_3\n-        74: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        80: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        83: athrow\n-        84: iload_2\n-        85: iload_3\n-        86: iadd\n-        87: aload_1\n-        88: arraylength\n-        89: if_icmple     133\n-        92: new           #47                 // class java/lang/IllegalArgumentException\n-        95: dup\n-        96: new           #49                 // class java/lang/StringBuilder\n-        99: dup\n-       100: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       103: ldc           #68                 // String The supplied byte array contains only\n-       105: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       108: aload_1\n-       109: arraylength\n-       110: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       113: ldc           #70                 // String  bytes, but offset, and length would require\n-       115: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       118: iload_2\n-       119: iload_3\n-       120: iadd\n-       121: iconst_1\n-       122: isub\n-       123: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       126: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       129: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       132: athrow\n-       133: aload_0\n-       134: getfield      #26                 // Field currentNumberOfBytes:I\n-       137: iload_3\n-       138: if_icmpge     180\n-       141: new           #32                 // class java/lang/IllegalStateException\n-       144: dup\n-       145: new           #49                 // class java/lang/StringBuilder\n-       148: dup\n-       149: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       152: ldc           #72                 // String Currently, there are only\n-       154: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       157: aload_0\n-       158: getfield      #26                 // Field currentNumberOfBytes:I\n-       161: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       164: ldc           #74                 // String in the buffer, not\n-       166: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       169: iload_3\n-       170: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       173: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       176: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       179: athrow\n-       180: iload_2\n-       181: istore        4\n-       183: iconst_0\n-       184: istore        5\n-       186: iload         5\n-       188: iload_3\n-       189: if_icmpge     248\n-       192: aload_1\n-       193: iload         4\n-       195: iinc          4, 1\n-       198: aload_0\n-       199: getfield      #13                 // Field buffer:[B\n-       202: aload_0\n-       203: getfield      #19                 // Field startOffset:I\n-       206: baload\n-       207: bastore\n-       208: aload_0\n-       209: dup\n-       210: getfield      #26                 // Field currentNumberOfBytes:I\n-       213: iconst_1\n-       214: isub\n-       215: putfield      #26                 // Field currentNumberOfBytes:I\n-       218: aload_0\n-       219: dup\n-       220: getfield      #19                 // Field startOffset:I\n-       223: iconst_1\n-       224: iadd\n-       225: dup_x1\n-       226: putfield      #19                 // Field startOffset:I\n-       229: aload_0\n-       230: getfield      #13                 // Field buffer:[B\n-       233: arraylength\n-       234: if_icmpne     242\n-       237: aload_0\n-       238: iconst_0\n-       239: putfield      #19                 // Field startOffset:I\n-       242: iinc          5, 1\n-       245: goto          186\n-       248: return\n+        25: ldc           #63                 // String Invalid offset:\n+        27: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        30: iload_2\n+        31: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        40: athrow\n+        41: iload_3\n+        42: iflt          54\n+        45: iload_3\n+        46: aload_0\n+        47: getfield      #23                 // Field buffer:[B\n+        50: arraylength\n+        51: if_icmple     78\n+        54: new           #59                 // class java/lang/IllegalArgumentException\n+        57: dup\n+        58: new           #61                 // class java/lang/StringBuilder\n+        61: dup\n+        62: ldc           #75                 // String Invalid length:\n+        64: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        67: iload_3\n+        68: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        71: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        74: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        77: athrow\n+        78: iload_2\n+        79: iload_3\n+        80: iadd\n+        81: aload_1\n+        82: arraylength\n+        83: if_icmple     124\n+        86: new           #59                 // class java/lang/IllegalArgumentException\n+        89: dup\n+        90: new           #61                 // class java/lang/StringBuilder\n+        93: dup\n+        94: ldc           #77                 // String The supplied byte array contains only\n+        96: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        99: aload_1\n+       100: arraylength\n+       101: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       104: ldc           #79                 // String  bytes, but offset, and length would require\n+       106: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       109: iload_2\n+       110: iload_3\n+       111: iadd\n+       112: iconst_1\n+       113: isub\n+       114: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       117: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       120: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       123: athrow\n+       124: aload_0\n+       125: getfield      #29                 // Field currentNumberOfBytes:I\n+       128: iload_3\n+       129: if_icmpge     168\n+       132: new           #40                 // class java/lang/IllegalStateException\n+       135: dup\n+       136: new           #61                 // class java/lang/StringBuilder\n+       139: dup\n+       140: ldc           #84                 // String Currently, there are only\n+       142: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       145: aload_0\n+       146: getfield      #29                 // Field currentNumberOfBytes:I\n+       149: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       152: ldc           #86                 // String in the buffer, not\n+       154: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       157: iload_3\n+       158: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       161: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       164: invokespecial #44                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       167: athrow\n+       168: iload_2\n+       169: istore        4\n+       171: iconst_0\n+       172: istore        5\n+       174: goto          230\n+       177: aload_1\n+       178: iload         4\n+       180: iinc          4, 1\n+       183: aload_0\n+       184: getfield      #23                 // Field buffer:[B\n+       187: aload_0\n+       188: getfield      #25                 // Field startOffset:I\n+       191: baload\n+       192: bastore\n+       193: aload_0\n+       194: dup\n+       195: getfield      #29                 // Field currentNumberOfBytes:I\n+       198: iconst_1\n+       199: isub\n+       200: putfield      #29                 // Field currentNumberOfBytes:I\n+       203: aload_0\n+       204: dup\n+       205: getfield      #25                 // Field startOffset:I\n+       208: iconst_1\n+       209: iadd\n+       210: dup_x1\n+       211: putfield      #25                 // Field startOffset:I\n+       214: aload_0\n+       215: getfield      #23                 // Field buffer:[B\n+       218: arraylength\n+       219: if_icmpne     227\n+       222: aload_0\n+       223: iconst_0\n+       224: putfield      #25                 // Field startOffset:I\n+       227: iinc          5, 1\n+       230: iload         5\n+       232: iload_3\n+       233: if_icmplt     177\n+       236: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 7\n         line 92: 17\n-        line 94: 44\n-        line 95: 57\n-        line 97: 84\n-        line 98: 92\n-        line 102: 133\n-        line 103: 141\n-        line 106: 180\n-        line 107: 183\n-        line 108: 192\n-        line 109: 208\n-        line 110: 218\n-        line 111: 237\n-        line 107: 242\n-        line 114: 248\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          186      62     5     i   I\n-            0     249     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-            0     249     1 targetBuffer   [B\n-            0     249     2 targetOffset   I\n-            0     249     3 length   I\n-          183      66     4 offset   I\n+        line 94: 41\n+        line 95: 54\n+        line 97: 78\n+        line 98: 86\n+        line 99: 99\n+        line 100: 109\n+        line 98: 120\n+        line 102: 124\n+        line 103: 132\n+        line 104: 152\n+        line 103: 164\n+        line 106: 168\n+        line 107: 171\n+        line 108: 177\n+        line 109: 193\n+        line 110: 203\n+        line 111: 222\n+        line 107: 227\n+        line 114: 236\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     237     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+            0     237     1 targetBuffer   [B\n+            0     237     2 targetOffset   I\n+            0     237     3 length   I\n+          171      66     4 offset   I\n+          174      62     5     i   I\n       StackMapTable: number_of_entries = 9\n         frame_type = 17 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n         frame_type = 12 /* same */\n-        frame_type = 26 /* same */\n-        frame_type = 48 /* same */\n-        frame_type = 46 /* same */\n+        frame_type = 23 /* same */\n+        frame_type = 45 /* same */\n+        frame_type = 43 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 5\n+          offset_delta = 8\n           locals = [ int, int ]\n-        frame_type = 55 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 5\n+        frame_type = 49 /* same */\n+        frame_type = 2 /* same */\n \n   public void add(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #26                 // Field currentNumberOfBytes:I\n+         1: getfield      #29                 // Field currentNumberOfBytes:I\n          4: aload_0\n-         5: getfield      #13                 // Field buffer:[B\n+         5: getfield      #23                 // Field buffer:[B\n          8: arraylength\n          9: if_icmplt     22\n-        12: new           #32                 // class java/lang/IllegalStateException\n+        12: new           #40                 // class java/lang/IllegalStateException\n         15: dup\n-        16: ldc           #76                 // String No space available\n-        18: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #94                 // String No space available\n+        18: invokespecial #44                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: aload_0\n-        23: getfield      #13                 // Field buffer:[B\n+        23: getfield      #23                 // Field buffer:[B\n         26: aload_0\n-        27: getfield      #23                 // Field endOffset:I\n+        27: getfield      #27                 // Field endOffset:I\n         30: iload_1\n         31: bastore\n         32: aload_0\n         33: dup\n-        34: getfield      #26                 // Field currentNumberOfBytes:I\n+        34: getfield      #29                 // Field currentNumberOfBytes:I\n         37: iconst_1\n         38: iadd\n-        39: putfield      #26                 // Field currentNumberOfBytes:I\n+        39: putfield      #29                 // Field currentNumberOfBytes:I\n         42: aload_0\n         43: dup\n-        44: getfield      #23                 // Field endOffset:I\n+        44: getfield      #27                 // Field endOffset:I\n         47: iconst_1\n         48: iadd\n         49: dup_x1\n-        50: putfield      #23                 // Field endOffset:I\n+        50: putfield      #27                 // Field endOffset:I\n         53: aload_0\n-        54: getfield      #13                 // Field buffer:[B\n+        54: getfield      #23                 // Field buffer:[B\n         57: arraylength\n         58: if_icmpne     66\n         61: aload_0\n         62: iconst_0\n-        63: putfield      #23                 // Field endOffset:I\n+        63: putfield      #27                 // Field endOffset:I\n         66: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 12\n         line 128: 22\n         line 129: 32\n         line 130: 42\n@@ -478,379 +478,367 @@\n         frame_type = 22 /* same */\n         frame_type = 43 /* same */\n \n   public boolean peek(byte[], int, int);\n     descriptor: ([BII)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=6, args_size=4\n+      stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #78                 // String Buffer\n-         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #99                 // String Buffer\n+         3: invokestatic  #53                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          17\n         11: iload_2\n         12: aload_1\n         13: arraylength\n-        14: if_icmplt     44\n-        17: new           #47                 // class java/lang/IllegalArgumentException\n+        14: if_icmplt     41\n+        17: new           #59                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #49                 // class java/lang/StringBuilder\n+        21: new           #61                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #52                 // String Invalid offset:\n-        30: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: iload_2\n-        34: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        43: athrow\n-        44: iload_3\n-        45: iflt          57\n-        48: iload_3\n-        49: aload_0\n-        50: getfield      #13                 // Field buffer:[B\n-        53: arraylength\n-        54: if_icmple     84\n-        57: new           #47                 // class java/lang/IllegalArgumentException\n-        60: dup\n-        61: new           #49                 // class java/lang/StringBuilder\n-        64: dup\n-        65: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        68: ldc           #66                 // String Invalid length:\n-        70: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        73: iload_3\n-        74: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        80: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        83: athrow\n-        84: iload_3\n-        85: aload_0\n-        86: getfield      #26                 // Field currentNumberOfBytes:I\n-        89: if_icmpge     94\n-        92: iconst_0\n-        93: ireturn\n-        94: aload_0\n-        95: getfield      #19                 // Field startOffset:I\n-        98: istore        4\n-       100: iconst_0\n-       101: istore        5\n-       103: iload         5\n-       105: iload_3\n-       106: if_icmpge     149\n-       109: aload_0\n-       110: getfield      #13                 // Field buffer:[B\n-       113: iload         4\n-       115: baload\n-       116: aload_1\n-       117: iload         5\n-       119: iload_2\n-       120: iadd\n-       121: baload\n-       122: if_icmpeq     127\n-       125: iconst_0\n-       126: ireturn\n-       127: iinc          4, 1\n-       130: iload         4\n-       132: aload_0\n-       133: getfield      #13                 // Field buffer:[B\n-       136: arraylength\n-       137: if_icmpne     143\n-       140: iconst_0\n-       141: istore        4\n-       143: iinc          5, 1\n-       146: goto          103\n-       149: iconst_1\n-       150: ireturn\n+        25: ldc           #63                 // String Invalid offset:\n+        27: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        30: iload_2\n+        31: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        40: athrow\n+        41: iload_3\n+        42: iflt          54\n+        45: iload_3\n+        46: aload_0\n+        47: getfield      #23                 // Field buffer:[B\n+        50: arraylength\n+        51: if_icmple     78\n+        54: new           #59                 // class java/lang/IllegalArgumentException\n+        57: dup\n+        58: new           #61                 // class java/lang/StringBuilder\n+        61: dup\n+        62: ldc           #75                 // String Invalid length:\n+        64: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        67: iload_3\n+        68: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        71: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        74: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        77: athrow\n+        78: iload_3\n+        79: aload_0\n+        80: getfield      #29                 // Field currentNumberOfBytes:I\n+        83: if_icmpge     88\n+        86: iconst_0\n+        87: ireturn\n+        88: aload_0\n+        89: getfield      #25                 // Field startOffset:I\n+        92: istore        4\n+        94: iconst_0\n+        95: istore        5\n+        97: goto          137\n+       100: aload_0\n+       101: getfield      #23                 // Field buffer:[B\n+       104: iload         4\n+       106: baload\n+       107: aload_1\n+       108: iload         5\n+       110: iload_2\n+       111: iadd\n+       112: baload\n+       113: if_icmpeq     118\n+       116: iconst_0\n+       117: ireturn\n+       118: iinc          4, 1\n+       121: iload         4\n+       123: aload_0\n+       124: getfield      #23                 // Field buffer:[B\n+       127: arraylength\n+       128: if_icmpne     134\n+       131: iconst_0\n+       132: istore        4\n+       134: iinc          5, 1\n+       137: iload         5\n+       139: iload_3\n+       140: if_icmplt     100\n+       143: iconst_1\n+       144: ireturn\n       LineNumberTable:\n         line 151: 0\n         line 152: 7\n         line 153: 17\n-        line 155: 44\n-        line 156: 57\n-        line 158: 84\n-        line 159: 92\n-        line 161: 94\n-        line 162: 100\n-        line 163: 109\n-        line 164: 125\n-        line 166: 127\n-        line 167: 140\n-        line 162: 143\n-        line 170: 149\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          103      46     5     i   I\n-            0     151     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-            0     151     1 sourceBuffer   [B\n-            0     151     2 offset   I\n-            0     151     3 length   I\n-          100      51     4 localOffset   I\n+        line 155: 41\n+        line 156: 54\n+        line 158: 78\n+        line 159: 86\n+        line 161: 88\n+        line 162: 94\n+        line 163: 100\n+        line 164: 116\n+        line 166: 118\n+        line 167: 131\n+        line 162: 134\n+        line 170: 143\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     145     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+            0     145     1 sourceBuffer   [B\n+            0     145     2 offset   I\n+            0     145     3 length   I\n+           94      51     4 localOffset   I\n+           97      46     5     i   I\n       StackMapTable: number_of_entries = 9\n         frame_type = 17 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n         frame_type = 12 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n         frame_type = 9 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 8\n+          offset_delta = 11\n           locals = [ int, int ]\n-        frame_type = 23 /* same */\n+        frame_type = 17 /* same */\n         frame_type = 15 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 5\n+        frame_type = 2 /* same */\n \n   public void add(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: ldc           #78                 // String Buffer\n-         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #99                 // String Buffer\n+         3: invokestatic  #53                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          17\n         11: iload_2\n         12: aload_1\n         13: arraylength\n-        14: if_icmplt     44\n-        17: new           #47                 // class java/lang/IllegalArgumentException\n+        14: if_icmplt     41\n+        17: new           #59                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #49                 // class java/lang/StringBuilder\n+        21: new           #61                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #52                 // String Invalid offset:\n-        30: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        33: iload_2\n-        34: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        43: athrow\n-        44: iload_3\n-        45: ifge          75\n-        48: new           #47                 // class java/lang/IllegalArgumentException\n-        51: dup\n-        52: new           #49                 // class java/lang/StringBuilder\n-        55: dup\n-        56: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        59: ldc           #66                 // String Invalid length:\n-        61: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        64: iload_3\n-        65: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        68: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        71: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        74: athrow\n+        25: ldc           #63                 // String Invalid offset:\n+        27: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        30: iload_2\n+        31: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        34: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        40: athrow\n+        41: iload_3\n+        42: ifge          69\n+        45: new           #59                 // class java/lang/IllegalArgumentException\n+        48: dup\n+        49: new           #61                 // class java/lang/StringBuilder\n+        52: dup\n+        53: ldc           #75                 // String Invalid length:\n+        55: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        58: iload_3\n+        59: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        62: invokevirtual #70                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        65: invokespecial #74                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        68: athrow\n+        69: aload_0\n+        70: getfield      #29                 // Field currentNumberOfBytes:I\n+        73: iload_3\n+        74: iadd\n         75: aload_0\n-        76: getfield      #26                 // Field currentNumberOfBytes:I\n-        79: iload_3\n-        80: iadd\n-        81: aload_0\n-        82: getfield      #13                 // Field buffer:[B\n-        85: arraylength\n-        86: if_icmple     99\n-        89: new           #32                 // class java/lang/IllegalStateException\n-        92: dup\n-        93: ldc           #76                 // String No space available\n-        95: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        98: athrow\n-        99: iconst_0\n-       100: istore        4\n-       102: iload         4\n-       104: iload_3\n-       105: if_icmpge     153\n-       108: aload_0\n-       109: getfield      #13                 // Field buffer:[B\n-       112: aload_0\n-       113: getfield      #23                 // Field endOffset:I\n-       116: aload_1\n-       117: iload_2\n-       118: iload         4\n+        76: getfield      #23                 // Field buffer:[B\n+        79: arraylength\n+        80: if_icmple     93\n+        83: new           #40                 // class java/lang/IllegalStateException\n+        86: dup\n+        87: ldc           #94                 // String No space available\n+        89: invokespecial #44                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        92: athrow\n+        93: iconst_0\n+        94: istore        4\n+        96: goto          141\n+        99: aload_0\n+       100: getfield      #23                 // Field buffer:[B\n+       103: aload_0\n+       104: getfield      #27                 // Field endOffset:I\n+       107: aload_1\n+       108: iload_2\n+       109: iload         4\n+       111: iadd\n+       112: baload\n+       113: bastore\n+       114: aload_0\n+       115: dup\n+       116: getfield      #27                 // Field endOffset:I\n+       119: iconst_1\n        120: iadd\n-       121: baload\n-       122: bastore\n-       123: aload_0\n-       124: dup\n-       125: getfield      #23                 // Field endOffset:I\n-       128: iconst_1\n-       129: iadd\n-       130: dup_x1\n-       131: putfield      #23                 // Field endOffset:I\n-       134: aload_0\n-       135: getfield      #13                 // Field buffer:[B\n-       138: arraylength\n-       139: if_icmpne     147\n-       142: aload_0\n-       143: iconst_0\n-       144: putfield      #23                 // Field endOffset:I\n-       147: iinc          4, 1\n-       150: goto          102\n-       153: aload_0\n-       154: dup\n-       155: getfield      #26                 // Field currentNumberOfBytes:I\n-       158: iload_3\n-       159: iadd\n-       160: putfield      #26                 // Field currentNumberOfBytes:I\n-       163: return\n+       121: dup_x1\n+       122: putfield      #27                 // Field endOffset:I\n+       125: aload_0\n+       126: getfield      #23                 // Field buffer:[B\n+       129: arraylength\n+       130: if_icmpne     138\n+       133: aload_0\n+       134: iconst_0\n+       135: putfield      #27                 // Field endOffset:I\n+       138: iinc          4, 1\n+       141: iload         4\n+       143: iload_3\n+       144: if_icmplt     99\n+       147: aload_0\n+       148: dup\n+       149: getfield      #29                 // Field currentNumberOfBytes:I\n+       152: iload_3\n+       153: iadd\n+       154: putfield      #29                 // Field currentNumberOfBytes:I\n+       157: return\n       LineNumberTable:\n         line 187: 0\n         line 188: 7\n         line 189: 17\n-        line 191: 44\n-        line 192: 48\n-        line 194: 75\n-        line 195: 89\n-        line 197: 99\n-        line 198: 108\n-        line 199: 123\n-        line 200: 142\n-        line 197: 147\n-        line 203: 153\n-        line 204: 163\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          102      51     4     i   I\n-            0     164     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-            0     164     1 targetBuffer   [B\n-            0     164     2 offset   I\n-            0     164     3 length   I\n+        line 191: 41\n+        line 192: 45\n+        line 194: 69\n+        line 195: 83\n+        line 197: 93\n+        line 198: 99\n+        line 199: 114\n+        line 200: 133\n+        line 197: 138\n+        line 203: 147\n+        line 204: 157\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     158     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+            0     158     1 targetBuffer   [B\n+            0     158     2 offset   I\n+            0     158     3 length   I\n+           96      51     4     i   I\n       StackMapTable: number_of_entries = 7\n         frame_type = 17 /* same */\n-        frame_type = 26 /* same */\n-        frame_type = 30 /* same */\n+        frame_type = 23 /* same */\n+        frame_type = 27 /* same */\n         frame_type = 23 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 2\n-          locals = [ int ]\n-        frame_type = 44 /* same */\n-        frame_type = 250 /* chop */\n           offset_delta = 5\n+          locals = [ int ]\n+        frame_type = 38 /* same */\n+        frame_type = 2 /* same */\n \n   public boolean hasSpace();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field currentNumberOfBytes:I\n+         1: getfield      #29                 // Field currentNumberOfBytes:I\n          4: aload_0\n-         5: getfield      #13                 // Field buffer:[B\n+         5: getfield      #23                 // Field buffer:[B\n          8: arraylength\n-         9: if_icmpge     16\n+         9: if_icmpge     14\n         12: iconst_1\n-        13: goto          17\n-        16: iconst_0\n-        17: ireturn\n+        13: ireturn\n+        14: iconst_0\n+        15: ireturn\n       LineNumberTable:\n         line 215: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      18     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 16 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      16     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 14 /* same */\n \n   public boolean hasSpace(int);\n     descriptor: (I)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #26                 // Field currentNumberOfBytes:I\n+         1: getfield      #29                 // Field currentNumberOfBytes:I\n          4: iload_1\n          5: iadd\n          6: aload_0\n-         7: getfield      #13                 // Field buffer:[B\n+         7: getfield      #23                 // Field buffer:[B\n         10: arraylength\n-        11: if_icmpgt     18\n+        11: if_icmpgt     16\n         14: iconst_1\n-        15: goto          19\n-        18: iconst_0\n-        19: ireturn\n+        15: ireturn\n+        16: iconst_0\n+        17: ireturn\n       LineNumberTable:\n         line 227: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      20     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-            0      20     1 count   I\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 18 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      18     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+            0      18     1 count   I\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 16 /* same */\n \n   public boolean hasBytes();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field currentNumberOfBytes:I\n-         4: ifle          11\n+         1: getfield      #29                 // Field currentNumberOfBytes:I\n+         4: ifle          9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 236: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      11     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   public int getSpace();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field buffer:[B\n+         1: getfield      #23                 // Field buffer:[B\n          4: arraylength\n          5: aload_0\n-         6: getfield      #26                 // Field currentNumberOfBytes:I\n+         6: getfield      #29                 // Field currentNumberOfBytes:I\n          9: isub\n         10: ireturn\n       LineNumberTable:\n         line 245: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n \n   public int getCurrentNumberOfBytes();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field currentNumberOfBytes:I\n+         1: getfield      #29                 // Field currentNumberOfBytes:I\n          4: ireturn\n       LineNumberTable:\n         line 254: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n \n   public void clear();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #19                 // Field startOffset:I\n+         2: putfield      #25                 // Field startOffset:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #23                 // Field endOffset:I\n+         7: putfield      #27                 // Field endOffset:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #26                 // Field currentNumberOfBytes:I\n+        12: putfield      #29                 // Field currentNumberOfBytes:I\n         15: return\n       LineNumberTable:\n         line 261: 0\n         line 262: 5\n         line 263: 10\n         line 264: 15\n       LocalVariableTable:\n"}]}
