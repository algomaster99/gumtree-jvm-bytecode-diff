{"diffoscope-json-version": 1, "source1": "first/SequenceReader.class", "source2": "second/SequenceReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,184 +1,184 @@\n-  SHA-256 checksum cd5d091b5a012cce0f0c9de57b6aa736174e4e7e812ba48d9d6ab4239727464d\n+  SHA-256 checksum ea9f21b18dbd5abc0dae68dce6c0e236db3ebba7a08b3c9546a7052e17ff8159\n   Compiled from \"SequenceReader.java\"\n public class org.apache.commons.io.input.SequenceReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #28                         // org/apache/commons/io/input/SequenceReader\n-  super_class: #14                        // java/io/Reader\n+  this_class: #24                         // org/apache/commons/io/input/SequenceReader\n+  super_class: #4                         // java/io/Reader\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #68           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #14.#69       // java/io/Reader.\"<init>\":()V\n-    #3 = String             #31           // readers\n-    #4 = Methodref          #70.#71       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #5 = Class              #72           // java/lang/Iterable\n-    #6 = InterfaceMethodref #5.#73        // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-    #7 = Fieldref           #28.#74       // org/apache/commons/io/input/SequenceReader.readers:Ljava/util/Iterator;\n-    #8 = Methodref          #28.#75       // org/apache/commons/io/input/SequenceReader.nextReader:()Ljava/io/Reader;\n-    #9 = Fieldref           #28.#76       // org/apache/commons/io/input/SequenceReader.reader:Ljava/io/Reader;\n-   #10 = Methodref          #77.#78       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #11 = Methodref          #28.#79       // org/apache/commons/io/input/SequenceReader.\"<init>\":(Ljava/lang/Iterable;)V\n-   #12 = InterfaceMethodref #80.#81       // java/util/Iterator.hasNext:()Z\n-   #13 = InterfaceMethodref #80.#82       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #14 = Class              #83           // java/io/Reader\n-   #15 = Methodref          #14.#84       // java/io/Reader.read:()I\n-   #16 = String             #61           // cbuf\n-   #17 = Class              #85           // java/lang/IndexOutOfBoundsException\n-   #18 = Class              #86           // java/lang/StringBuilder\n-   #19 = Methodref          #18.#69       // java/lang/StringBuilder.\"<init>\":()V\n-   #20 = String             #87           // Array Size=\n-   #21 = Methodref          #18.#88       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #22 = Methodref          #18.#89       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #23 = String             #90           // , offset=\n-   #24 = String             #91           // , length=\n-   #25 = Methodref          #18.#92       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #17.#93       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #14.#94       // java/io/Reader.read:([CII)I\n-   #28 = Class              #95           // org/apache/commons/io/input/SequenceReader\n-   #29 = Utf8               reader\n-   #30 = Utf8               Ljava/io/Reader;\n-   #31 = Utf8               readers\n-   #32 = Utf8               Ljava/util/Iterator;\n-   #33 = Utf8               Signature\n-   #34 = Utf8               Ljava/util/Iterator<+Ljava/io/Reader;>;\n-   #35 = Utf8               <init>\n-   #36 = Utf8               (Ljava/lang/Iterable;)V\n-   #37 = Utf8               Code\n-   #38 = Utf8               LineNumberTable\n-   #39 = Utf8               LocalVariableTable\n-   #40 = Utf8               this\n-   #41 = Utf8               Lorg/apache/commons/io/input/SequenceReader;\n-   #42 = Utf8               Ljava/lang/Iterable;\n-   #43 = Utf8               LocalVariableTypeTable\n-   #44 = Utf8               Ljava/lang/Iterable<+Ljava/io/Reader;>;\n-   #45 = Utf8               (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n-   #46 = Utf8               ([Ljava/io/Reader;)V\n-   #47 = Utf8               [Ljava/io/Reader;\n-   #48 = Utf8               close\n-   #49 = Utf8               ()V\n-   #50 = Utf8               Exceptions\n-   #51 = Class              #96           // java/io/IOException\n-   #52 = Utf8               nextReader\n-   #53 = Utf8               ()Ljava/io/Reader;\n-   #54 = Utf8               StackMapTable\n-   #55 = Utf8               read\n-   #56 = Utf8               ()I\n-   #57 = Utf8               c\n-   #58 = Utf8               I\n-   #59 = Utf8               ([CII)I\n-   #60 = Utf8               readLen\n-   #61 = Utf8               cbuf\n-   #62 = Utf8               [C\n-   #63 = Utf8               off\n-   #64 = Utf8               len\n-   #65 = Utf8               count\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               SequenceReader.java\n-   #68 = Utf8               org/apache/commons/io/IOUtils\n-   #69 = NameAndType        #35:#49       // \"<init>\":()V\n-   #70 = Class              #97           // java/util/Objects\n-   #71 = NameAndType        #98:#99       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #72 = Utf8               java/lang/Iterable\n-   #73 = NameAndType        #100:#101     // iterator:()Ljava/util/Iterator;\n-   #74 = NameAndType        #31:#32       // readers:Ljava/util/Iterator;\n-   #75 = NameAndType        #52:#53       // nextReader:()Ljava/io/Reader;\n-   #76 = NameAndType        #29:#30       // reader:Ljava/io/Reader;\n-   #77 = Class              #102          // java/util/Arrays\n-   #78 = NameAndType        #103:#104     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #79 = NameAndType        #35:#36       // \"<init>\":(Ljava/lang/Iterable;)V\n-   #80 = Class              #105          // java/util/Iterator\n-   #81 = NameAndType        #106:#107     // hasNext:()Z\n-   #82 = NameAndType        #108:#109     // next:()Ljava/lang/Object;\n-   #83 = Utf8               java/io/Reader\n-   #84 = NameAndType        #55:#56       // read:()I\n-   #85 = Utf8               java/lang/IndexOutOfBoundsException\n-   #86 = Utf8               java/lang/StringBuilder\n-   #87 = Utf8               Array Size=\n-   #88 = NameAndType        #110:#111     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #89 = NameAndType        #110:#112     // append:(I)Ljava/lang/StringBuilder;\n-   #90 = Utf8               , offset=\n-   #91 = Utf8               , length=\n-   #92 = NameAndType        #113:#114     // toString:()Ljava/lang/String;\n-   #93 = NameAndType        #35:#115      // \"<init>\":(Ljava/lang/String;)V\n-   #94 = NameAndType        #55:#59       // read:([CII)I\n-   #95 = Utf8               org/apache/commons/io/input/SequenceReader\n-   #96 = Utf8               java/io/IOException\n-   #97 = Utf8               java/util/Objects\n-   #98 = Utf8               requireNonNull\n-   #99 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #100 = Utf8               iterator\n-  #101 = Utf8               ()Ljava/util/Iterator;\n-  #102 = Utf8               java/util/Arrays\n-  #103 = Utf8               asList\n-  #104 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #105 = Utf8               java/util/Iterator\n-  #106 = Utf8               hasNext\n-  #107 = Utf8               ()Z\n-  #108 = Utf8               next\n-  #109 = Utf8               ()Ljava/lang/Object;\n-  #110 = Utf8               append\n-  #111 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #112 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #113 = Utf8               toString\n-  #114 = Utf8               ()Ljava/lang/String;\n-  #115 = Utf8               (Ljava/lang/String;)V\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // java/io/Reader.\"<init>\":()V\n+    #4 = Class              #6            // java/io/Reader\n+    #5 = NameAndType        #7:#8         // \"<init>\":()V\n+    #6 = Utf8               java/io/Reader\n+    #7 = Utf8               <init>\n+    #8 = Utf8               ()V\n+    #9 = String             #10           // readers\n+   #10 = Utf8               readers\n+   #11 = Methodref          #12.#13       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #12 = Class              #14           // java/util/Objects\n+   #13 = NameAndType        #15:#16       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #14 = Utf8               java/util/Objects\n+   #15 = Utf8               requireNonNull\n+   #16 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #17 = Class              #18           // java/lang/Iterable\n+   #18 = Utf8               java/lang/Iterable\n+   #19 = InterfaceMethodref #17.#20       // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #20 = NameAndType        #21:#22       // iterator:()Ljava/util/Iterator;\n+   #21 = Utf8               iterator\n+   #22 = Utf8               ()Ljava/util/Iterator;\n+   #23 = Fieldref           #24.#25       // org/apache/commons/io/input/SequenceReader.readers:Ljava/util/Iterator;\n+   #24 = Class              #26           // org/apache/commons/io/input/SequenceReader\n+   #25 = NameAndType        #10:#27       // readers:Ljava/util/Iterator;\n+   #26 = Utf8               org/apache/commons/io/input/SequenceReader\n+   #27 = Utf8               Ljava/util/Iterator;\n+   #28 = Methodref          #24.#29       // org/apache/commons/io/input/SequenceReader.nextReader:()Ljava/io/Reader;\n+   #29 = NameAndType        #30:#31       // nextReader:()Ljava/io/Reader;\n+   #30 = Utf8               nextReader\n+   #31 = Utf8               ()Ljava/io/Reader;\n+   #32 = Fieldref           #24.#33       // org/apache/commons/io/input/SequenceReader.reader:Ljava/io/Reader;\n+   #33 = NameAndType        #34:#35       // reader:Ljava/io/Reader;\n+   #34 = Utf8               reader\n+   #35 = Utf8               Ljava/io/Reader;\n+   #36 = Methodref          #37.#38       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #37 = Class              #39           // java/util/Arrays\n+   #38 = NameAndType        #40:#41       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #39 = Utf8               java/util/Arrays\n+   #40 = Utf8               asList\n+   #41 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #42 = Methodref          #24.#43       // org/apache/commons/io/input/SequenceReader.\"<init>\":(Ljava/lang/Iterable;)V\n+   #43 = NameAndType        #7:#44        // \"<init>\":(Ljava/lang/Iterable;)V\n+   #44 = Utf8               (Ljava/lang/Iterable;)V\n+   #45 = InterfaceMethodref #46.#47       // java/util/Iterator.hasNext:()Z\n+   #46 = Class              #48           // java/util/Iterator\n+   #47 = NameAndType        #49:#50       // hasNext:()Z\n+   #48 = Utf8               java/util/Iterator\n+   #49 = Utf8               hasNext\n+   #50 = Utf8               ()Z\n+   #51 = InterfaceMethodref #46.#52       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #52 = NameAndType        #53:#54       // next:()Ljava/lang/Object;\n+   #53 = Utf8               next\n+   #54 = Utf8               ()Ljava/lang/Object;\n+   #55 = Methodref          #4.#56        // java/io/Reader.read:()I\n+   #56 = NameAndType        #57:#58       // read:()I\n+   #57 = Utf8               read\n+   #58 = Utf8               ()I\n+   #59 = String             #60           // cbuf\n+   #60 = Utf8               cbuf\n+   #61 = Class              #62           // java/lang/IndexOutOfBoundsException\n+   #62 = Utf8               java/lang/IndexOutOfBoundsException\n+   #63 = Class              #64           // java/lang/StringBuilder\n+   #64 = Utf8               java/lang/StringBuilder\n+   #65 = Methodref          #63.#5        // java/lang/StringBuilder.\"<init>\":()V\n+   #66 = String             #67           // Array Size=\n+   #67 = Utf8               Array Size=\n+   #68 = Methodref          #63.#69       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #69 = NameAndType        #70:#71       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #70 = Utf8               append\n+   #71 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #72 = Methodref          #63.#73       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #73 = NameAndType        #70:#74       // append:(I)Ljava/lang/StringBuilder;\n+   #74 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #75 = String             #76           // , offset=\n+   #76 = Utf8               , offset=\n+   #77 = String             #78           // , length=\n+   #78 = Utf8               , length=\n+   #79 = Methodref          #63.#80       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #80 = NameAndType        #81:#82       // toString:()Ljava/lang/String;\n+   #81 = Utf8               toString\n+   #82 = Utf8               ()Ljava/lang/String;\n+   #83 = Methodref          #61.#84       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+   #84 = NameAndType        #7:#85        // \"<init>\":(Ljava/lang/String;)V\n+   #85 = Utf8               (Ljava/lang/String;)V\n+   #86 = Methodref          #4.#87        // java/io/Reader.read:([CII)I\n+   #87 = NameAndType        #57:#88       // read:([CII)I\n+   #88 = Utf8               ([CII)I\n+   #89 = Utf8               Signature\n+   #90 = Utf8               Ljava/util/Iterator<+Ljava/io/Reader;>;\n+   #91 = Utf8               Code\n+   #92 = Utf8               LineNumberTable\n+   #93 = Utf8               LocalVariableTable\n+   #94 = Utf8               this\n+   #95 = Utf8               Lorg/apache/commons/io/input/SequenceReader;\n+   #96 = Utf8               Ljava/lang/Iterable;\n+   #97 = Utf8               LocalVariableTypeTable\n+   #98 = Utf8               Ljava/lang/Iterable<+Ljava/io/Reader;>;\n+   #99 = Utf8               (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n+  #100 = Utf8               ([Ljava/io/Reader;)V\n+  #101 = Utf8               [Ljava/io/Reader;\n+  #102 = Utf8               close\n+  #103 = Utf8               Exceptions\n+  #104 = Class              #105          // java/io/IOException\n+  #105 = Utf8               java/io/IOException\n+  #106 = Utf8               StackMapTable\n+  #107 = Utf8               c\n+  #108 = Utf8               I\n+  #109 = Utf8               readLen\n+  #110 = Utf8               [C\n+  #111 = Utf8               off\n+  #112 = Utf8               len\n+  #113 = Utf8               count\n+  #114 = Utf8               SourceFile\n+  #115 = Utf8               SequenceReader.java\n {\n   private java.io.Reader reader;\n     descriptor: Ljava/io/Reader;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.Iterator<? extends java.io.Reader> readers;\n     descriptor: Ljava/util/Iterator;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #34                          // Ljava/util/Iterator<+Ljava/io/Reader;>;\n+    Signature: #90                          // Ljava/util/Iterator<+Ljava/io/Reader;>;\n \n   public org.apache.commons.io.input.SequenceReader(java.lang.Iterable<? extends java.io.Reader>);\n     descriptor: (Ljava/lang/Iterable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #2                  // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #3                  // Method java/io/Reader.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #3                  // String readers\n-         8: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #5                  // class java/lang/Iterable\n-        14: invokeinterface #6,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-        19: putfield      #7                  // Field readers:Ljava/util/Iterator;\n+         6: ldc           #9                  // String readers\n+         8: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #17                 // class java/lang/Iterable\n+        14: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+        19: putfield      #23                 // Field readers:Ljava/util/Iterator;\n         22: aload_0\n         23: aload_0\n-        24: invokespecial #8                  // Method nextReader:()Ljava/io/Reader;\n-        27: putfield      #9                  // Field reader:Ljava/io/Reader;\n+        24: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n+        27: putfield      #32                 // Field reader:Ljava/io/Reader;\n         30: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 4\n         line 44: 22\n         line 45: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             0      31     1 readers   Ljava/lang/Iterable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      31     1 readers   Ljava/lang/Iterable<+Ljava/io/Reader;>;\n-    Signature: #45                          // (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n+    Signature: #99                          // (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n \n   public org.apache.commons.io.input.SequenceReader(java.io.Reader...);\n     descriptor: ([Ljava/io/Reader;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-         5: invokespecial #11                 // Method \"<init>\":(Ljava/lang/Iterable;)V\n+         2: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+         5: invokespecial #42                 // Method \"<init>\":(Ljava/lang/Iterable;)V\n          8: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/SequenceReader;\n@@ -187,18 +187,18 @@\n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #7                  // Field readers:Ljava/util/Iterator;\n+         2: putfield      #23                 // Field readers:Ljava/util/Iterator;\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #9                  // Field reader:Ljava/io/Reader;\n+         7: putfield      #32                 // Field reader:Ljava/io/Reader;\n         10: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 5\n         line 65: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -208,21 +208,21 @@\n \n   private java.io.Reader nextReader();\n     descriptor: ()Ljava/io/Reader;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field readers:Ljava/util/Iterator;\n-         4: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         1: getfield      #23                 // Field readers:Ljava/util/Iterator;\n+         4: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n          9: ifeq          27\n         12: aload_0\n-        13: getfield      #7                  // Field readers:Ljava/util/Iterator;\n-        16: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        21: checkcast     #14                 // class java/io/Reader\n+        13: getfield      #23                 // Field readers:Ljava/util/Iterator;\n+        16: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        21: checkcast     #4                  // class java/io/Reader\n         24: goto          28\n         27: aconst_null\n         28: areturn\n       LineNumberTable:\n         line 73: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -236,28 +236,28 @@\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: iconst_m1\n          1: istore_1\n          2: aload_0\n-         3: getfield      #9                  // Field reader:Ljava/io/Reader;\n+         3: getfield      #32                 // Field reader:Ljava/io/Reader;\n          6: ifnull        36\n          9: aload_0\n-        10: getfield      #9                  // Field reader:Ljava/io/Reader;\n-        13: invokevirtual #15                 // Method java/io/Reader.read:()I\n+        10: getfield      #32                 // Field reader:Ljava/io/Reader;\n+        13: invokevirtual #55                 // Method java/io/Reader.read:()I\n         16: istore_1\n         17: iload_1\n         18: iconst_m1\n         19: if_icmpeq     25\n         22: goto          36\n         25: aload_0\n         26: aload_0\n-        27: invokespecial #8                  // Method nextReader:()Ljava/io/Reader;\n-        30: putfield      #9                  // Field reader:Ljava/io/Reader;\n+        27: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n+        30: putfield      #32                 // Field reader:Ljava/io/Reader;\n         33: goto          2\n         36: iload_1\n         37: ireturn\n       LineNumberTable:\n         line 83: 0\n         line 84: 2\n         line 85: 9\n@@ -280,67 +280,67 @@\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #16                 // String cbuf\n-         3: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #59                 // String cbuf\n+         3: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          23\n         11: iload_2\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n         20: if_icmple     69\n-        23: new           #17                 // class java/lang/IndexOutOfBoundsException\n+        23: new           #61                 // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: new           #18                 // class java/lang/StringBuilder\n+        27: new           #63                 // class java/lang/StringBuilder\n         30: dup\n-        31: invokespecial #19                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        34: ldc           #20                 // String Array Size=\n-        36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        34: ldc           #66                 // String Array Size=\n+        36: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         39: aload_1\n         40: arraylength\n-        41: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        44: ldc           #23                 // String , offset=\n-        46: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        44: ldc           #75                 // String , offset=\n+        46: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: iload_2\n-        50: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        53: ldc           #24                 // String , length=\n-        55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        53: ldc           #77                 // String , length=\n+        55: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: iload_3\n-        59: invokevirtual #22                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        62: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #26                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        59: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        62: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        65: invokespecial #83                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: iconst_0\n         70: istore        4\n         72: aload_0\n-        73: getfield      #9                  // Field reader:Ljava/io/Reader;\n+        73: getfield      #32                 // Field reader:Ljava/io/Reader;\n         76: ifnull        135\n         79: aload_0\n-        80: getfield      #9                  // Field reader:Ljava/io/Reader;\n+        80: getfield      #32                 // Field reader:Ljava/io/Reader;\n         83: aload_1\n         84: iload_2\n         85: iload_3\n-        86: invokevirtual #27                 // Method java/io/Reader.read:([CII)I\n+        86: invokevirtual #86                 // Method java/io/Reader.read:([CII)I\n         89: istore        5\n         91: iload         5\n         93: iconst_m1\n         94: if_icmpne     108\n         97: aload_0\n         98: aload_0\n-        99: invokespecial #8                  // Method nextReader:()Ljava/io/Reader;\n-       102: putfield      #9                  // Field reader:Ljava/io/Reader;\n+        99: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n+       102: putfield      #32                 // Field reader:Ljava/io/Reader;\n        105: goto          132\n        108: iload         4\n        110: iload         5\n        112: iadd\n        113: istore        4\n        115: iload_2\n        116: iload         5\n"}]}
