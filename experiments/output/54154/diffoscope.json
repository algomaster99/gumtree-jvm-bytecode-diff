{"diffoscope-json-version": 1, "source1": "first/BinaryTree.class", "source2": "second/BinaryTree.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -24,15 +24,17 @@\n         final byte[] encodedTree = IOUtils.readRange(inputStream, size);\n         if (encodedTree.length != size) {\n             throw new EOFException();\n         }\n         int maxLength = 0;\n         final int[] originalBitLengths = new int[totalNumberOfValues];\n         int pos = 0;\n-        for (final byte b : encodedTree) {\n+        byte[] array;\n+        for (int length = (array = encodedTree).length, n = 0; n < length; ++n) {\n+            final byte b = array[n];\n             final int numberOfValues = ((b & 0xF0) >> 4) + 1;\n             if (pos + numberOfValues > totalNumberOfValues) {\n                 throw new IOException(\"Number of values exceeds given total number of values\");\n             }\n             final int bitLength = (b & 0xF) + 1;\n             for (int j = 0; j < numberOfValues; ++j) {\n                 originalBitLengths[pos++] = bitLength;\n"}]}
