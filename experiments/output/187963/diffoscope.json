{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$AttributeLayoutElement.class", "source2": "second/NewAttributeBands$AttributeLayoutElement.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,38 +1,38 @@\n-  SHA-256 checksum 4df7695aafd3e87d9dd5e8509d58a4f393adbb1aaa73cf07f2e68ecc53bad341\n+  SHA-256 checksum 8d20e1c365efe9f0f5679689c8a2b446847f6eda84690f2acdd60f299bdc5ba2\n   Compiled from \"NewAttributeBands.java\"\n public interface org.apache.commons.compress.harmony.pack200.NewAttributeBands$AttributeLayoutElement\n   minor version: 0\n   major version: 53\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement\n-  super_class: #2                         // java/lang/Object\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Class              #15            // org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement\n-   #2 = Class              #18            // java/lang/Object\n-   #3 = Utf8               addAttributeToBand\n-   #4 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V\n-   #5 = Utf8               pack\n-   #6 = Utf8               (Ljava/io/OutputStream;)V\n-   #7 = Utf8               Exceptions\n-   #8 = Class              #19            // java/io/IOException\n-   #9 = Class              #20            // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #10 = Utf8               renumberBci\n-  #11 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V\n-  #12 = Utf8               SourceFile\n-  #13 = Utf8               NewAttributeBands.java\n-  #14 = Class              #21            // org/apache/commons/compress/harmony/pack200/NewAttributeBands\n-  #15 = Utf8               org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement\n-  #16 = Utf8               AttributeLayoutElement\n-  #17 = Utf8               InnerClasses\n-  #18 = Utf8               java/lang/Object\n-  #19 = Utf8               java/io/IOException\n-  #20 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #21 = Utf8               org/apache/commons/compress/harmony/pack200/NewAttributeBands\n+   #1 = Class              #2             // org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement\n+   #2 = Utf8               org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               addAttributeToBand\n+   #6 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V\n+   #7 = Utf8               pack\n+   #8 = Utf8               (Ljava/io/OutputStream;)V\n+   #9 = Utf8               Exceptions\n+  #10 = Class              #11            // java/io/IOException\n+  #11 = Utf8               java/io/IOException\n+  #12 = Class              #13            // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #13 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #14 = Utf8               renumberBci\n+  #15 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V\n+  #16 = Utf8               SourceFile\n+  #17 = Utf8               NewAttributeBands.java\n+  #18 = Utf8               InnerClasses\n+  #19 = Class              #20            // org/apache/commons/compress/harmony/pack200/NewAttributeBands\n+  #20 = Utf8               org/apache/commons/compress/harmony/pack200/NewAttributeBands\n+  #21 = Utf8               AttributeLayoutElement\n {\n   public abstract void addAttributeToBand(org.apache.commons.compress.harmony.pack200.NewAttribute, java.io.InputStream);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/NewAttribute;Ljava/io/InputStream;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract void pack(java.io.OutputStream) throws java.io.IOException, org.apache.commons.compress.harmony.pack200.Pack200Exception;\n     descriptor: (Ljava/io/OutputStream;)V\n@@ -42,8 +42,8 @@\n \n   public abstract void renumberBci(org.apache.commons.compress.harmony.pack200.IntList, java.util.Map);\n     descriptor: (Lorg/apache/commons/compress/harmony/pack200/IntList;Ljava/util/Map;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n }\n SourceFile: \"NewAttributeBands.java\"\n InnerClasses:\n-  public static #16= #1 of #14;           // AttributeLayoutElement=class org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement of class org/apache/commons/compress/harmony/pack200/NewAttributeBands\n+  public static #21= #1 of #19;           // AttributeLayoutElement=class org/apache/commons/compress/harmony/pack200/NewAttributeBands$AttributeLayoutElement of class org/apache/commons/compress/harmony/pack200/NewAttributeBands\n"}]}
