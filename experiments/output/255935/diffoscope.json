{"diffoscope-json-version": 1, "source1": "first/BCIRenumberedAttribute.class", "source2": "second/BCIRenumberedAttribute.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -10,30 +10,30 @@\n {\n     protected boolean renumbered;\n     \n     public boolean hasBCIRenumbering() {\n         return true;\n     }\n     \n-    public BCIRenumberedAttribute(final CPUTF8 attributeName) {\n-        super(attributeName);\n+    public BCIRenumberedAttribute(final CPUTF8 cputf8) {\n+        super(cputf8);\n     }\n     \n     protected abstract int getLength();\n     \n     protected abstract void writeBody(final DataOutputStream p0) throws IOException;\n     \n     public abstract String toString();\n     \n     protected abstract int[] getStartPCs();\n     \n-    public void renumber(final List byteCodeOffsets) throws Pack200Exception {\n+    public void renumber(final List list) throws Pack200Exception {\n         if (this.renumbered) {\n             throw new Error(\"Trying to renumber a line number table that has already been renumbered\");\n         }\n         this.renumbered = true;\n         final int[] startPCs = this.getStartPCs();\n-        for (int index = 0; index < startPCs.length; ++index) {\n-            startPCs[index] = Integer.valueOf(byteCodeOffsets.get(startPCs[index]));\n+        for (int i = 0; i < startPCs.length; ++i) {\n+            startPCs[i] = (int)list.get(startPCs[i]);\n         }\n     }\n }\n"}]}
