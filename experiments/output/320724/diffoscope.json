{"diffoscope-json-version": 1, "source1": "first/CountingPathVisitor.class", "source2": "second/CountingPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum eb011953846e6488f335bb1caeda75651a460f3549ed2241e8b5f03ad135d83f\n+  SHA-256 checksum 4d06eee0b18ecd9bc67c1c7a1a3b8939fe86787a236f51cbaf98ec696688c376\n   Compiled from \"CountingPathVisitor.java\"\n public class org.apache.commons.io.file.CountingPathVisitor extends org.apache.commons.io.file.SimplePathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/io/file/CountingPathVisitor\n   super_class: #47                        // org/apache/commons/io/file/SimplePathVisitor\n@@ -103,15 +103,15 @@\n    #93 = InterfaceMethodref #67.#94       // org/apache/commons/io/file/PathFilter.accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #94 = NameAndType        #95:#96       // accept:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #95 = Utf8               accept\n    #96 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n    #97 = Fieldref           #10.#98       // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n    #98 = NameAndType        #99:#14       // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n    #99 = Utf8               SKIP_SUBTREE\n-  #100 = Methodref          #83.#101      // java/lang/Object.toString:()Ljava/lang/String;\n+  #100 = InterfaceMethodref #59.#101      // org/apache/commons/io/file/Counters$PathCounters.toString:()Ljava/lang/String;\n   #101 = NameAndType        #102:#103     // toString:()Ljava/lang/String;\n   #102 = Utf8               toString\n   #103 = Utf8               ()Ljava/lang/String;\n   #104 = InterfaceMethodref #59.#105      // org/apache/commons/io/file/Counters$PathCounters.getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n   #105 = NameAndType        #106:#107     // getDirectoryCounter:()Lorg/apache/commons/io/file/Counters$Counter;\n   #106 = Utf8               getDirectoryCounter\n   #107 = Utf8               ()Lorg/apache/commons/io/file/Counters$Counter;\n@@ -453,16 +453,16 @@\n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #61                 // Field pathCounters:Lorg/apache/commons/io/file/Counters$PathCounters;\n-         4: invokevirtual #100                // Method java/lang/Object.toString:()Ljava/lang/String;\n-         7: areturn\n+         4: invokeinterface #100,  1          // InterfaceMethod org/apache/commons/io/file/Counters$PathCounters.toString:()Ljava/lang/String;\n+         9: areturn\n       LineNumberTable:\n         line 153: 0\n \n   protected void updateDirCounter(java.nio.file.Path, java.io.IOException);\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n"}]}
