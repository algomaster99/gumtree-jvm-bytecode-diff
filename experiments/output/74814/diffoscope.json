{"diffoscope-json-version": 1, "source1": "first/LineIterator.class", "source2": "second/LineIterator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,14 +1,13 @@\n \n package org.apache.commons.io;\n \n import java.util.NoSuchElementException;\n import java.io.IOException;\n import java.util.function.Consumer;\n-import java.util.Objects;\n import java.io.Reader;\n import java.io.BufferedReader;\n import java.io.Closeable;\n import java.util.Iterator;\n \n public class LineIterator implements Iterator<String>, Closeable\n {\n@@ -35,30 +34,27 @@\n         }\n         if (this.finished) {\n             return false;\n         }\n         Label_0018: {\n             break Label_0018;\n             try {\n-                while (true) {\n-                    final String line = this.bufferedReader.readLine();\n+                String line;\n+                do {\n+                    line = this.bufferedReader.readLine();\n                     if (line == null) {\n                         this.finished = true;\n                         return false;\n                     }\n-                    if (this.isValidLine(line)) {\n-                        this.cachedLine = line;\n-                        return true;\n-                    }\n-                }\n+                } while (!this.isValidLine(line));\n+                this.cachedLine = line;\n+                return true;\n             }\n             catch (final IOException ioe) {\n-                final IOException obj = ioe;\n-                Objects.requireNonNull(obj);\n-                IOUtils.closeQuietly((Closeable)this, (Consumer)obj::addSuppressed);\n+                IOUtils.closeQuietly((Closeable)this, (Consumer)ioe::addSuppressed);\n                 throw new IllegalStateException(ioe);\n             }\n         }\n     }\n     \n     protected boolean isValidLine(final String line) {\n         return true;\n"}]}
