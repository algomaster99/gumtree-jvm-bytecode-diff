{"diffoscope-json-version": 1, "source1": "first/FTPClient$CSL.class", "source2": "second/FTPClient$CSL.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -33,32 +33,35 @@\n     public void bytesTransferred(final long totalBytesTransferred, final int bytesTransferred, final long streamSize) {\n         final long nowMillis = System.currentTimeMillis();\n         if (nowMillis - this.lastIdleTimeMillis > this.idleMillis) {\n             try {\n                 this.parent.__noop();\n                 ++this.acksAcked;\n             }\n-            catch (final SocketTimeoutException e) {\n+            catch (final SocketTimeoutException ex) {\n                 ++this.notAcked;\n             }\n-            catch (final IOException e2) {\n+            catch (final IOException ex2) {\n                 ++this.ioErrors;\n             }\n             this.lastIdleTimeMillis = nowMillis;\n         }\n     }\n     \n     int[] cleanUp() throws IOException {\n         final int remain = this.notAcked;\n         try {\n             while (this.notAcked > 0) {\n                 this.parent.getReply();\n                 --this.notAcked;\n             }\n         }\n-        catch (final SocketTimeoutException ex) {}\n+        catch (final SocketTimeoutException ex) {\n+            return new int[] { this.acksAcked, remain, this.notAcked, this.ioErrors };\n+        }\n         finally {\n             this.parent.setSoTimeout(this.currentSoTimeoutMillis);\n         }\n+        this.parent.setSoTimeout(this.currentSoTimeoutMillis);\n         return new int[] { this.acksAcked, remain, this.notAcked, this.ioErrors };\n     }\n }\n"}]}
