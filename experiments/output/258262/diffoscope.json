{"diffoscope-json-version": 1, "source1": "first/StrictConfigurationComparator.class", "source2": "second/StrictConfigurationComparator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,33 +1,31 @@\n \n package org.apache.commons.configuration2;\n \n import java.util.Iterator;\n \n public class StrictConfigurationComparator implements ConfigurationComparator\n {\n-    public boolean compare(final Configuration a, final Configuration b) {\n-        if (a == null && b == null) {\n+    public boolean compare(final Configuration configuration, final Configuration configuration2) {\n+        if (configuration == null && configuration2 == null) {\n             return true;\n         }\n-        if (a == null || b == null) {\n+        if (configuration == null || configuration2 == null) {\n             return false;\n         }\n-        Iterator<String> keys = a.getKeys();\n+        final Iterator keys = configuration.getKeys();\n         while (keys.hasNext()) {\n-            final String key = (String)keys.next();\n-            final Object value = a.getProperty(key);\n-            if (!value.equals(b.getProperty(key))) {\n+            final String s = (String)keys.next();\n+            if (!configuration.getProperty(s).equals(configuration2.getProperty(s))) {\n                 return false;\n             }\n         }\n-        keys = b.getKeys();\n-        while (keys.hasNext()) {\n-            final String key = (String)keys.next();\n-            final Object value = b.getProperty(key);\n-            if (!value.equals(a.getProperty(key))) {\n+        final Iterator keys2 = configuration2.getKeys();\n+        while (keys2.hasNext()) {\n+            final String s2 = (String)keys2.next();\n+            if (!configuration2.getProperty(s2).equals(configuration.getProperty(s2))) {\n                 return false;\n             }\n         }\n         return true;\n     }\n }\n"}]}
