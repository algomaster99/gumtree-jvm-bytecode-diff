{"diffoscope-json-version": 1, "source1": "first/MetadataBandGroup.class", "source2": "second/MetadataBandGroup.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,8 +1,8 @@\n-  SHA-256 checksum e21b5ce9b65f4d66fbef806c1a0ba0f5996d31135f9131bcfb3a5b257f7290bb\n+  SHA-256 checksum 5504ad1fbff409835d517c7159681fb86760c31f141884208952ef30d56fcacd\n   Compiled from \"MetadataBandGroup.java\"\n public class org.apache.commons.compress.harmony.pack200.MetadataBandGroup extends org.apache.commons.compress.harmony.pack200.BandSet\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/compress/harmony/pack200/MetadataBandGroup\n   super_class: #3                         // org/apache/commons/compress/harmony/pack200/BandSet\n@@ -295,18 +295,18 @@\n   #285 = Utf8               StackMapTable\n   #286 = Class              #284          // \"[B\"\n   #287 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)[I\n   #288 = InterfaceMethodref #215.#289     // java/util/List.stream:()Ljava/util/stream/Stream;\n   #289 = NameAndType        #290:#291     // stream:()Ljava/util/stream/Stream;\n   #290 = Utf8               stream\n   #291 = Utf8               ()Ljava/util/stream/Stream;\n-  #292 = NameAndType        #293:#294     // applyAsInt:()Ljava/util/function/ToIntFunction;\n-  #293 = Utf8               applyAsInt\n-  #294 = Utf8               ()Ljava/util/function/ToIntFunction;\n-  #295 = InvokeDynamic      #0:#292       // #0:applyAsInt:()Ljava/util/function/ToIntFunction;\n+  #292 = InvokeDynamic      #0:#293       // #0:applyAsInt:()Ljava/util/function/ToIntFunction;\n+  #293 = NameAndType        #294:#295     // applyAsInt:()Ljava/util/function/ToIntFunction;\n+  #294 = Utf8               applyAsInt\n+  #295 = Utf8               ()Ljava/util/function/ToIntFunction;\n   #296 = InterfaceMethodref #297.#299     // java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;\n   #297 = Class              #298          // java/util/stream/Stream\n   #298 = Utf8               java/util/stream/Stream\n   #299 = NameAndType        #300:#301     // mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;\n   #300 = Utf8               mapToInt\n   #301 = Utf8               (Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;\n   #302 = InterfaceMethodref #303.#167     // java/util/stream/IntStream.toArray:()[I\n@@ -1825,15 +1825,15 @@\n     descriptor: (Ljava/util/List;)[I\n     flags: (0x0002) ACC_PRIVATE\n     Signature: #287                         // (Ljava/util/List<Ljava/lang/String;>;)[I\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: invokeinterface #288,  1          // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;\n-         6: invokedynamic #295,  0            // InvokeDynamic #0:applyAsInt:()Ljava/util/function/ToIntFunction;\n+         6: invokedynamic #292,  0            // InvokeDynamic #0:applyAsInt:()Ljava/util/function/ToIntFunction;\n         11: invokeinterface #296,  2          // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;\n         16: invokeinterface #302,  1          // InterfaceMethod java/util/stream/IntStream.toArray:()[I\n         21: areturn\n       LineNumberTable:\n         line 203: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
