{"diffoscope-json-version": 1, "source1": "first/AnnotationDefault.class", "source2": "second/AnnotationDefault.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,38 +5,38 @@\n import java.io.IOException;\n import java.io.DataInput;\n \n public class AnnotationDefault extends Attribute\n {\n     private ElementValue defaultValue;\n     \n-    AnnotationDefault(final int name_index, final int length, final DataInput input, final ConstantPool constant_pool) throws IOException {\n-        this(name_index, length, (ElementValue)null, constant_pool);\n-        this.defaultValue = ElementValue.readElementValue(input, constant_pool);\n+    AnnotationDefault(final int n, final int n2, final DataInput dataInput, final ConstantPool constantPool) throws IOException {\n+        this(n, n2, (ElementValue)null, constantPool);\n+        this.defaultValue = ElementValue.readElementValue(dataInput, constantPool);\n     }\n     \n-    public AnnotationDefault(final int name_index, final int length, final ElementValue defaultValue, final ConstantPool constant_pool) {\n-        super((byte)16, name_index, length, constant_pool);\n+    public AnnotationDefault(final int n, final int n2, final ElementValue defaultValue, final ConstantPool constantPool) {\n+        super((byte)16, n, n2, constantPool);\n         this.defaultValue = defaultValue;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitAnnotationDefault(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitAnnotationDefault(this);\n     }\n     \n     public final void setDefaultValue(final ElementValue defaultValue) {\n         this.defaultValue = defaultValue;\n     }\n     \n     public final ElementValue getDefaultValue() {\n         return this.defaultValue;\n     }\n     \n-    public Attribute copy(final ConstantPool _constant_pool) {\n+    public Attribute copy(final ConstantPool constantPool) {\n         return (Attribute)this.clone();\n     }\n     \n-    public final void dump(final DataOutputStream dos) throws IOException {\n-        super.dump(dos);\n-        this.defaultValue.dump(dos);\n+    public final void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        super.dump(dataOutputStream);\n+        this.defaultValue.dump(dataOutputStream);\n     }\n }\n"}]}
