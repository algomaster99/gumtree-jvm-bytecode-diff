{"diffoscope-json-version": 1, "source1": "first/TokenStreamFactory.class", "source2": "second/TokenStreamFactory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,214 +1,214 @@\n-  SHA-256 checksum 3c34b48528bc7a560faea20fc74b4969c49c625c28f88d0ffe6c657951c6eb6e\n+  SHA-256 checksum 14154a5138fe2beab62b46c09c92507c941ed8d81059b75f55d8884dfed76a19\n   Compiled from \"TokenStreamFactory.java\"\n public abstract class com.fasterxml.jackson.core.TokenStreamFactory implements com.fasterxml.jackson.core.Versioned,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #58                         // com/fasterxml/jackson/core/TokenStreamFactory\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // com/fasterxml/jackson/core/TokenStreamFactory\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 1, methods: 40, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // com/fasterxml/jackson/core/TokenStreamFactory\n+    #2 = Utf8               com/fasterxml/jackson/core/TokenStreamFactory\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Class              #8            // com/fasterxml/jackson/core/io/DataOutputAsStream\n-    #8 = Utf8               com/fasterxml/jackson/core/io/DataOutputAsStream\n-    #9 = Methodref          #7.#10        // com/fasterxml/jackson/core/io/DataOutputAsStream.\"<init>\":(Ljava/io/DataOutput;)V\n-   #10 = NameAndType        #5:#11        // \"<init>\":(Ljava/io/DataOutput;)V\n-   #11 = Utf8               (Ljava/io/DataOutput;)V\n-   #12 = String             #13           // file\n-   #13 = Utf8               file\n-   #14 = Methodref          #15.#16       // java/net/URL.getProtocol:()Ljava/lang/String;\n-   #15 = Class              #17           // java/net/URL\n-   #16 = NameAndType        #18:#19       // getProtocol:()Ljava/lang/String;\n-   #17 = Utf8               java/net/URL\n-   #18 = Utf8               getProtocol\n-   #19 = Utf8               ()Ljava/lang/String;\n-   #20 = Methodref          #21.#22       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #21 = Class              #23           // java/lang/String\n-   #22 = NameAndType        #24:#25       // equals:(Ljava/lang/Object;)Z\n-   #23 = Utf8               java/lang/String\n-   #24 = Utf8               equals\n-   #25 = Utf8               (Ljava/lang/Object;)Z\n-   #26 = Methodref          #15.#27       // java/net/URL.getHost:()Ljava/lang/String;\n-   #27 = NameAndType        #28:#19       // getHost:()Ljava/lang/String;\n-   #28 = Utf8               getHost\n-   #29 = Methodref          #21.#30       // java/lang/String.length:()I\n-   #30 = NameAndType        #31:#32       // length:()I\n-   #31 = Utf8               length\n-   #32 = Utf8               ()I\n-   #33 = Methodref          #15.#34       // java/net/URL.getPath:()Ljava/lang/String;\n-   #34 = NameAndType        #35:#19       // getPath:()Ljava/lang/String;\n-   #35 = Utf8               getPath\n-   #36 = Methodref          #21.#37       // java/lang/String.indexOf:(I)I\n-   #37 = NameAndType        #38:#39       // indexOf:(I)I\n-   #38 = Utf8               indexOf\n-   #39 = Utf8               (I)I\n-   #40 = Class              #41           // java/io/FileInputStream\n-   #41 = Utf8               java/io/FileInputStream\n-   #42 = Methodref          #40.#43       // java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n-   #43 = NameAndType        #5:#44        // \"<init>\":(Ljava/lang/String;)V\n-   #44 = Utf8               (Ljava/lang/String;)V\n-   #45 = Methodref          #15.#46       // java/net/URL.openStream:()Ljava/io/InputStream;\n-   #46 = NameAndType        #47:#48       // openStream:()Ljava/io/InputStream;\n-   #47 = Utf8               openStream\n-   #48 = Utf8               ()Ljava/io/InputStream;\n-   #49 = Methodref          #40.#50       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #50 = NameAndType        #5:#51        // \"<init>\":(Ljava/io/File;)V\n-   #51 = Utf8               (Ljava/io/File;)V\n-   #52 = Class              #53           // java/io/FileOutputStream\n-   #53 = Utf8               java/io/FileOutputStream\n-   #54 = Methodref          #52.#50       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-   #55 = String             #56           // Invalid `byte[]` argument: `null`\n-   #56 = Utf8               Invalid `byte[]` argument: `null`\n-   #57 = Methodref          #58.#59       // com/fasterxml/jackson/core/TokenStreamFactory._reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n-   #58 = Class              #60           // com/fasterxml/jackson/core/TokenStreamFactory\n-   #59 = NameAndType        #61:#62       // _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n-   #60 = Utf8               com/fasterxml/jackson/core/TokenStreamFactory\n-   #61 = Utf8               _reportRangeError\n-   #62 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n-   #63 = String             #64           // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n-   #64 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n-   #65 = Methodref          #66.#67       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #66 = Class              #68           // java/lang/Integer\n-   #67 = NameAndType        #69:#70       // valueOf:(I)Ljava/lang/Integer;\n-   #68 = Utf8               java/lang/Integer\n-   #69 = Utf8               valueOf\n-   #70 = Utf8               (I)Ljava/lang/Integer;\n-   #71 = Methodref          #21.#72       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #72 = NameAndType        #73:#74       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #73 = Utf8               format\n-   #74 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #75 = String             #76           // Invalid `char[]` argument: `null`\n-   #76 = Utf8               Invalid `char[]` argument: `null`\n-   #77 = String             #78           // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n-   #78 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n-   #79 = Class              #80           // java/lang/IllegalArgumentException\n-   #80 = Utf8               java/lang/IllegalArgumentException\n-   #81 = Methodref          #79.#43       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #82 = Class              #83           // com/fasterxml/jackson/core/Versioned\n-   #83 = Utf8               com/fasterxml/jackson/core/Versioned\n-   #84 = Class              #85           // java/io/Serializable\n-   #85 = Utf8               java/io/Serializable\n-   #86 = Utf8               serialVersionUID\n-   #87 = Utf8               J\n-   #88 = Utf8               ConstantValue\n-   #89 = Long               2l\n-   #91 = Utf8               Code\n-   #92 = Utf8               LineNumberTable\n-   #93 = Utf8               LocalVariableTable\n-   #94 = Utf8               this\n-   #95 = Utf8               Lcom/fasterxml/jackson/core/TokenStreamFactory;\n-   #96 = Utf8               requiresPropertyOrdering\n-   #97 = Utf8               ()Z\n-   #98 = Utf8               canHandleBinaryNatively\n-   #99 = Utf8               canParseAsync\n-  #100 = Utf8               getFormatReadFeatureType\n-  #101 = Utf8               ()Ljava/lang/Class;\n-  #102 = Utf8               Signature\n-  #103 = Utf8               ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n-  #104 = Utf8               getFormatWriteFeatureType\n-  #105 = Utf8               canUseSchema\n-  #106 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n-  #107 = Utf8               getFormatName\n-  #108 = Utf8               isEnabled\n-  #109 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n-  #110 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #111 = Utf8               getParserFeatures\n-  #112 = Utf8               getGeneratorFeatures\n-  #113 = Utf8               getFormatParserFeatures\n-  #114 = Utf8               getFormatGeneratorFeatures\n-  #115 = Utf8               streamReadConstraints\n-  #116 = Utf8               ()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n-  #117 = Utf8               createParser\n-  #118 = Utf8               ([B)Lcom/fasterxml/jackson/core/JsonParser;\n-  #119 = Utf8               Exceptions\n-  #120 = Class              #121          // java/io/IOException\n-  #121 = Utf8               java/io/IOException\n-  #122 = Utf8               ([BII)Lcom/fasterxml/jackson/core/JsonParser;\n-  #123 = Utf8               ([C)Lcom/fasterxml/jackson/core/JsonParser;\n-  #124 = Utf8               ([CII)Lcom/fasterxml/jackson/core/JsonParser;\n-  #125 = Utf8               (Ljava/io/DataInput;)Lcom/fasterxml/jackson/core/JsonParser;\n-  #126 = Utf8               (Ljava/io/File;)Lcom/fasterxml/jackson/core/JsonParser;\n-  #127 = Utf8               (Ljava/io/InputStream;)Lcom/fasterxml/jackson/core/JsonParser;\n-  #128 = Utf8               (Ljava/io/Reader;)Lcom/fasterxml/jackson/core/JsonParser;\n-  #129 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParser;\n-  #130 = Utf8               (Ljava/net/URL;)Lcom/fasterxml/jackson/core/JsonParser;\n-  #131 = Utf8               createNonBlockingByteArrayParser\n-  #132 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser;\n-  #133 = Utf8               createNonBlockingByteBufferParser\n-  #134 = Utf8               createGenerator\n-  #135 = Utf8               (Ljava/io/DataOutput;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #136 = Utf8               (Ljava/io/DataOutput;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #137 = Utf8               (Ljava/io/File;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #138 = Utf8               (Ljava/io/OutputStream;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #139 = Utf8               (Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #140 = Utf8               (Ljava/io/Writer;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #141 = Utf8               _createDataOutputWrapper\n-  #142 = Utf8               (Ljava/io/DataOutput;)Ljava/io/OutputStream;\n-  #143 = Utf8               out\n-  #144 = Utf8               Ljava/io/DataOutput;\n-  #145 = Utf8               _optimizedStreamFromURL\n-  #146 = Utf8               (Ljava/net/URL;)Ljava/io/InputStream;\n-  #147 = Utf8               path\n-  #148 = Utf8               Ljava/lang/String;\n-  #149 = Utf8               host\n-  #150 = Utf8               url\n-  #151 = Utf8               Ljava/net/URL;\n-  #152 = Utf8               StackMapTable\n-  #153 = Utf8               _fileInputStream\n-  #154 = Utf8               (Ljava/io/File;)Ljava/io/InputStream;\n-  #155 = Utf8               f\n-  #156 = Utf8               Ljava/io/File;\n-  #157 = Utf8               _fileOutputStream\n-  #158 = Utf8               (Ljava/io/File;)Ljava/io/OutputStream;\n-  #159 = Utf8               _checkRangeBoundsForByteArray\n-  #160 = Utf8               ([BII)V\n-  #161 = Utf8               data\n-  #162 = Utf8               [B\n-  #163 = Utf8               offset\n-  #164 = Utf8               I\n-  #165 = Utf8               len\n-  #166 = Utf8               dataLen\n-  #167 = Utf8               end\n-  #168 = Utf8               anyNegs\n-  #169 = Utf8               _checkRangeBoundsForCharArray\n-  #170 = Utf8               ([CII)V\n-  #171 = Utf8               [C\n-  #172 = Utf8               msg\n-  #173 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;\n+    #5 = Class              #6            // com/fasterxml/jackson/core/Versioned\n+    #6 = Utf8               com/fasterxml/jackson/core/Versioned\n+    #7 = Class              #8            // java/io/Serializable\n+    #8 = Utf8               java/io/Serializable\n+    #9 = Utf8               serialVersionUID\n+   #10 = Utf8               J\n+   #11 = Utf8               ConstantValue\n+   #12 = Long               2l\n+   #14 = Utf8               <init>\n+   #15 = Utf8               ()V\n+   #16 = Utf8               Code\n+   #17 = Methodref          #3.#18        // java/lang/Object.\"<init>\":()V\n+   #18 = NameAndType        #14:#15       // \"<init>\":()V\n+   #19 = Utf8               LineNumberTable\n+   #20 = Utf8               LocalVariableTable\n+   #21 = Utf8               this\n+   #22 = Utf8               Lcom/fasterxml/jackson/core/TokenStreamFactory;\n+   #23 = Utf8               requiresPropertyOrdering\n+   #24 = Utf8               ()Z\n+   #25 = Utf8               canHandleBinaryNatively\n+   #26 = Utf8               canParseAsync\n+   #27 = Utf8               getFormatReadFeatureType\n+   #28 = Utf8               ()Ljava/lang/Class;\n+   #29 = Utf8               Signature\n+   #30 = Utf8               ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n+   #31 = Utf8               getFormatWriteFeatureType\n+   #32 = Utf8               canUseSchema\n+   #33 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n+   #34 = Utf8               getFormatName\n+   #35 = Utf8               ()Ljava/lang/String;\n+   #36 = Utf8               isEnabled\n+   #37 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser$Feature;)Z\n+   #38 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #39 = Utf8               getParserFeatures\n+   #40 = Utf8               ()I\n+   #41 = Utf8               getGeneratorFeatures\n+   #42 = Utf8               getFormatParserFeatures\n+   #43 = Utf8               getFormatGeneratorFeatures\n+   #44 = Utf8               streamReadConstraints\n+   #45 = Utf8               ()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n+   #46 = Utf8               createParser\n+   #47 = Utf8               ([B)Lcom/fasterxml/jackson/core/JsonParser;\n+   #48 = Utf8               Exceptions\n+   #49 = Class              #50           // java/io/IOException\n+   #50 = Utf8               java/io/IOException\n+   #51 = Utf8               ([BII)Lcom/fasterxml/jackson/core/JsonParser;\n+   #52 = Utf8               ([C)Lcom/fasterxml/jackson/core/JsonParser;\n+   #53 = Utf8               ([CII)Lcom/fasterxml/jackson/core/JsonParser;\n+   #54 = Utf8               (Ljava/io/DataInput;)Lcom/fasterxml/jackson/core/JsonParser;\n+   #55 = Utf8               (Ljava/io/File;)Lcom/fasterxml/jackson/core/JsonParser;\n+   #56 = Utf8               (Ljava/io/InputStream;)Lcom/fasterxml/jackson/core/JsonParser;\n+   #57 = Utf8               (Ljava/io/Reader;)Lcom/fasterxml/jackson/core/JsonParser;\n+   #58 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParser;\n+   #59 = Utf8               (Ljava/net/URL;)Lcom/fasterxml/jackson/core/JsonParser;\n+   #60 = Utf8               createNonBlockingByteArrayParser\n+   #61 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser;\n+   #62 = Utf8               createNonBlockingByteBufferParser\n+   #63 = Utf8               createGenerator\n+   #64 = Utf8               (Ljava/io/DataOutput;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #65 = Utf8               (Ljava/io/DataOutput;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #66 = Utf8               (Ljava/io/File;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #67 = Utf8               (Ljava/io/OutputStream;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #68 = Utf8               (Ljava/io/OutputStream;Lcom/fasterxml/jackson/core/JsonEncoding;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #69 = Utf8               (Ljava/io/Writer;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #70 = Utf8               _createDataOutputWrapper\n+   #71 = Utf8               (Ljava/io/DataOutput;)Ljava/io/OutputStream;\n+   #72 = Class              #73           // com/fasterxml/jackson/core/io/DataOutputAsStream\n+   #73 = Utf8               com/fasterxml/jackson/core/io/DataOutputAsStream\n+   #74 = Methodref          #72.#75       // com/fasterxml/jackson/core/io/DataOutputAsStream.\"<init>\":(Ljava/io/DataOutput;)V\n+   #75 = NameAndType        #14:#76       // \"<init>\":(Ljava/io/DataOutput;)V\n+   #76 = Utf8               (Ljava/io/DataOutput;)V\n+   #77 = Utf8               out\n+   #78 = Utf8               Ljava/io/DataOutput;\n+   #79 = Utf8               _optimizedStreamFromURL\n+   #80 = Utf8               (Ljava/net/URL;)Ljava/io/InputStream;\n+   #81 = String             #82           // file\n+   #82 = Utf8               file\n+   #83 = Methodref          #84.#86       // java/net/URL.getProtocol:()Ljava/lang/String;\n+   #84 = Class              #85           // java/net/URL\n+   #85 = Utf8               java/net/URL\n+   #86 = NameAndType        #87:#35       // getProtocol:()Ljava/lang/String;\n+   #87 = Utf8               getProtocol\n+   #88 = Methodref          #89.#91       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #89 = Class              #90           // java/lang/String\n+   #90 = Utf8               java/lang/String\n+   #91 = NameAndType        #92:#93       // equals:(Ljava/lang/Object;)Z\n+   #92 = Utf8               equals\n+   #93 = Utf8               (Ljava/lang/Object;)Z\n+   #94 = Methodref          #84.#95       // java/net/URL.getHost:()Ljava/lang/String;\n+   #95 = NameAndType        #96:#35       // getHost:()Ljava/lang/String;\n+   #96 = Utf8               getHost\n+   #97 = Methodref          #89.#98       // java/lang/String.length:()I\n+   #98 = NameAndType        #99:#40       // length:()I\n+   #99 = Utf8               length\n+  #100 = Methodref          #84.#101      // java/net/URL.getPath:()Ljava/lang/String;\n+  #101 = NameAndType        #102:#35      // getPath:()Ljava/lang/String;\n+  #102 = Utf8               getPath\n+  #103 = Methodref          #89.#104      // java/lang/String.indexOf:(I)I\n+  #104 = NameAndType        #105:#106     // indexOf:(I)I\n+  #105 = Utf8               indexOf\n+  #106 = Utf8               (I)I\n+  #107 = Class              #108          // java/io/FileInputStream\n+  #108 = Utf8               java/io/FileInputStream\n+  #109 = Methodref          #107.#110     // java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n+  #110 = NameAndType        #14:#111      // \"<init>\":(Ljava/lang/String;)V\n+  #111 = Utf8               (Ljava/lang/String;)V\n+  #112 = Methodref          #84.#113      // java/net/URL.openStream:()Ljava/io/InputStream;\n+  #113 = NameAndType        #114:#115     // openStream:()Ljava/io/InputStream;\n+  #114 = Utf8               openStream\n+  #115 = Utf8               ()Ljava/io/InputStream;\n+  #116 = Utf8               url\n+  #117 = Utf8               Ljava/net/URL;\n+  #118 = Utf8               host\n+  #119 = Utf8               Ljava/lang/String;\n+  #120 = Utf8               path\n+  #121 = Utf8               StackMapTable\n+  #122 = Utf8               _fileInputStream\n+  #123 = Utf8               (Ljava/io/File;)Ljava/io/InputStream;\n+  #124 = Methodref          #107.#125     // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+  #125 = NameAndType        #14:#126      // \"<init>\":(Ljava/io/File;)V\n+  #126 = Utf8               (Ljava/io/File;)V\n+  #127 = Utf8               f\n+  #128 = Utf8               Ljava/io/File;\n+  #129 = Utf8               _fileOutputStream\n+  #130 = Utf8               (Ljava/io/File;)Ljava/io/OutputStream;\n+  #131 = Class              #132          // java/io/FileOutputStream\n+  #132 = Utf8               java/io/FileOutputStream\n+  #133 = Methodref          #131.#125     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+  #134 = Utf8               _checkRangeBoundsForByteArray\n+  #135 = Utf8               ([BII)V\n+  #136 = Class              #137          // java/lang/IllegalArgumentException\n+  #137 = Utf8               java/lang/IllegalArgumentException\n+  #138 = String             #139          // Invalid `byte[]` argument: `null`\n+  #139 = Utf8               Invalid `byte[]` argument: `null`\n+  #140 = Methodref          #1.#141       // com/fasterxml/jackson/core/TokenStreamFactory._reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+  #141 = NameAndType        #142:#143     // _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+  #142 = Utf8               _reportRangeError\n+  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/Object;\n+  #144 = String             #145          // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n+  #145 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n+  #146 = Methodref          #147.#149     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #147 = Class              #148          // java/lang/Integer\n+  #148 = Utf8               java/lang/Integer\n+  #149 = NameAndType        #150:#151     // valueOf:(I)Ljava/lang/Integer;\n+  #150 = Utf8               valueOf\n+  #151 = Utf8               (I)Ljava/lang/Integer;\n+  #152 = Methodref          #89.#153      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #153 = NameAndType        #154:#155     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #154 = Utf8               format\n+  #155 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #156 = Utf8               data\n+  #157 = Utf8               [B\n+  #158 = Utf8               offset\n+  #159 = Utf8               I\n+  #160 = Utf8               len\n+  #161 = Utf8               dataLen\n+  #162 = Utf8               end\n+  #163 = Utf8               anyNegs\n+  #164 = Utf8               _checkRangeBoundsForCharArray\n+  #165 = Utf8               ([CII)V\n+  #166 = String             #167          // Invalid `char[]` argument: `null`\n+  #167 = Utf8               Invalid `char[]` argument: `null`\n+  #168 = String             #169          // Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n+  #169 = Utf8               Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n+  #170 = Utf8               [C\n+  #171 = Utf8               <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;\n+  #172 = Methodref          #136.#110     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #173 = Utf8               msg\n   #174 = Utf8               SourceFile\n   #175 = Utf8               TokenStreamFactory.java\n   #176 = Utf8               InnerClasses\n-  #177 = Class              #178          // com/fasterxml/jackson/core/JsonParser$Feature\n-  #178 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n-  #179 = Class              #180          // com/fasterxml/jackson/core/JsonParser\n-  #180 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #177 = Class              #178          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #178 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #179 = Class              #180          // com/fasterxml/jackson/core/JsonGenerator\n+  #180 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n   #181 = Utf8               Feature\n-  #182 = Class              #183          // com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #183 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #184 = Class              #185          // com/fasterxml/jackson/core/JsonGenerator\n-  #185 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+  #182 = Class              #183          // com/fasterxml/jackson/core/JsonParser$Feature\n+  #183 = Utf8               com/fasterxml/jackson/core/JsonParser$Feature\n+  #184 = Class              #185          // com/fasterxml/jackson/core/JsonParser\n+  #185 = Utf8               com/fasterxml/jackson/core/JsonParser\n {\n   private static final long serialVersionUID = 2l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 2l\n \n   public com.fasterxml.jackson.core.TokenStreamFactory();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 16: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n \n@@ -223,20 +223,20 @@\n   public abstract boolean canParseAsync();\n     descriptor: ()Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatReadFeatureType();\n     descriptor: ()Ljava/lang/Class;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #103                         // ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n+    Signature: #30                          // ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n \n   public abstract java.lang.Class<? extends com.fasterxml.jackson.core.FormatFeature> getFormatWriteFeatureType();\n     descriptor: ()Ljava/lang/Class;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #103                         // ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n+    Signature: #30                          // ()Ljava/lang/Class<+Lcom/fasterxml/jackson/core/FormatFeature;>;\n \n   public abstract boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema);\n     descriptor: (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract java.lang.String getFormatName();\n     descriptor: ()Ljava/lang/String;\n@@ -379,131 +379,133 @@\n       throws java.io.IOException\n \n   protected java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput);\n     descriptor: (Ljava/io/DataOutput;)Ljava/io/OutputStream;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #7                  // class com/fasterxml/jackson/core/io/DataOutputAsStream\n+         0: new           #72                 // class com/fasterxml/jackson/core/io/DataOutputAsStream\n          3: dup\n          4: aload_1\n-         5: invokespecial #9                  // Method com/fasterxml/jackson/core/io/DataOutputAsStream.\"<init>\":(Ljava/io/DataOutput;)V\n+         5: invokespecial #74                 // Method com/fasterxml/jackson/core/io/DataOutputAsStream.\"<init>\":(Ljava/io/DataOutput;)V\n          8: areturn\n       LineNumberTable:\n         line 229: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0       9     1   out   Ljava/io/DataOutput;\n \n   protected java.io.InputStream _optimizedStreamFromURL(java.net.URL) throws java.io.IOException;\n     descriptor: (Ljava/net/URL;)Ljava/io/InputStream;\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=4, args_size=2\n-         0: ldc           #12                 // String file\n+         0: ldc           #81                 // String file\n          2: aload_1\n-         3: invokevirtual #14                 // Method java/net/URL.getProtocol:()Ljava/lang/String;\n-         6: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+         3: invokevirtual #83                 // Method java/net/URL.getProtocol:()Ljava/lang/String;\n+         6: invokevirtual #88                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n          9: ifeq          54\n         12: aload_1\n-        13: invokevirtual #26                 // Method java/net/URL.getHost:()Ljava/lang/String;\n+        13: invokevirtual #94                 // Method java/net/URL.getHost:()Ljava/lang/String;\n         16: astore_2\n         17: aload_2\n         18: ifnull        28\n         21: aload_2\n-        22: invokevirtual #29                 // Method java/lang/String.length:()I\n+        22: invokevirtual #97                 // Method java/lang/String.length:()I\n         25: ifne          54\n         28: aload_1\n-        29: invokevirtual #33                 // Method java/net/URL.getPath:()Ljava/lang/String;\n+        29: invokevirtual #100                // Method java/net/URL.getPath:()Ljava/lang/String;\n         32: astore_3\n         33: aload_3\n         34: bipush        37\n-        36: invokevirtual #36                 // Method java/lang/String.indexOf:(I)I\n+        36: invokevirtual #103                // Method java/lang/String.indexOf:(I)I\n         39: ifge          54\n-        42: new           #40                 // class java/io/FileInputStream\n+        42: new           #107                // class java/io/FileInputStream\n         45: dup\n         46: aload_1\n-        47: invokevirtual #33                 // Method java/net/URL.getPath:()Ljava/lang/String;\n-        50: invokespecial #42                 // Method java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n+        47: invokevirtual #100                // Method java/net/URL.getPath:()Ljava/lang/String;\n+        50: invokespecial #109                // Method java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n         53: areturn\n         54: aload_1\n-        55: invokevirtual #45                 // Method java/net/URL.openStream:()Ljava/io/InputStream;\n+        55: invokevirtual #112                // Method java/net/URL.openStream:()Ljava/io/InputStream;\n         58: areturn\n       LineNumberTable:\n         line 244: 0\n         line 251: 12\n         line 252: 17\n         line 254: 28\n         line 255: 33\n         line 256: 42\n         line 262: 54\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           33      21     3  path   Ljava/lang/String;\n-           17      37     2  host   Ljava/lang/String;\n             0      59     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0      59     1   url   Ljava/net/URL;\n+           17      37     2  host   Ljava/lang/String;\n+           33      21     3  path   Ljava/lang/String;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 28\n           locals = [ class java/lang/String ]\n         frame_type = 250 /* chop */\n           offset_delta = 25\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected java.io.InputStream _fileInputStream(java.io.File) throws java.io.IOException;\n     descriptor: (Ljava/io/File;)Ljava/io/InputStream;\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #40                 // class java/io/FileInputStream\n+         0: new           #107                // class java/io/FileInputStream\n          3: dup\n          4: aload_1\n-         5: invokespecial #49                 // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+         5: invokespecial #124                // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n          8: areturn\n       LineNumberTable:\n         line 278: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0       9     1     f   Ljava/io/File;\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected java.io.OutputStream _fileOutputStream(java.io.File) throws java.io.IOException;\n     descriptor: (Ljava/io/File;)Ljava/io/OutputStream;\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #52                 // class java/io/FileOutputStream\n+         0: new           #131                // class java/io/FileOutputStream\n          3: dup\n          4: aload_1\n-         5: invokespecial #54                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+         5: invokespecial #133                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n          8: areturn\n       LineNumberTable:\n         line 294: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0       9     1     f   Ljava/io/File;\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected void _checkRangeBoundsForByteArray(byte[], int, int) throws java.lang.IllegalArgumentException;\n     descriptor: ([BII)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.lang.IllegalArgumentException\n     Code:\n       stack=6, locals=7, args_size=4\n          0: aload_1\n          1: ifnonnull     11\n          4: aload_0\n-         5: ldc           #55                 // String Invalid `byte[]` argument: `null`\n-         7: invokevirtual #57                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+         5: ldc           #138                // String Invalid `byte[]` argument: `null`\n+         7: invokevirtual #140                // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n         10: pop\n         11: aload_1\n         12: arraylength\n         13: istore        4\n         15: iload_2\n         16: iload_3\n         17: iadd\n@@ -517,45 +519,46 @@\n         28: iload         5\n         30: isub\n         31: ior\n         32: istore        6\n         34: iload         6\n         36: ifge          75\n         39: aload_0\n-        40: ldc           #63                 // String Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n+        40: ldc           #144                // String Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `byte[]` of length %d\n         42: iconst_3\n-        43: anewarray     #2                  // class java/lang/Object\n+        43: anewarray     #3                  // class java/lang/Object\n         46: dup\n         47: iconst_0\n         48: iload_2\n-        49: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        49: invokestatic  #146                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         52: aastore\n         53: dup\n         54: iconst_1\n         55: iload_3\n-        56: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        56: invokestatic  #146                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         59: aastore\n         60: dup\n         61: iconst_2\n         62: iload         4\n-        64: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        64: invokestatic  #146                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         67: aastore\n-        68: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        71: invokevirtual #57                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+        68: invokestatic  #152                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        71: invokevirtual #140                // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n         74: pop\n         75: return\n       LineNumberTable:\n         line 307: 0\n         line 308: 4\n         line 310: 11\n         line 311: 15\n         line 321: 20\n         line 322: 34\n         line 323: 39\n-        line 325: 49\n+        line 324: 40\n+        line 325: 48\n         line 323: 68\n         line 327: 75\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      76     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0      76     1  data   [B\n             0      76     2 offset   I\n@@ -564,27 +567,27 @@\n            20      56     5   end   I\n            34      42     6 anyNegs   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 63\n           locals = [ int, int, int ]\n-    Exceptions:\n-      throws java.lang.IllegalArgumentException\n \n   protected void _checkRangeBoundsForCharArray(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=6, locals=7, args_size=4\n          0: aload_1\n          1: ifnonnull     11\n          4: aload_0\n-         5: ldc           #75                 // String Invalid `char[]` argument: `null`\n-         7: invokevirtual #57                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+         5: ldc           #166                // String Invalid `char[]` argument: `null`\n+         7: invokevirtual #140                // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n         10: pop\n         11: aload_1\n         12: arraylength\n         13: istore        4\n         15: iload_2\n         16: iload_3\n         17: iadd\n@@ -598,45 +601,46 @@\n         28: iload         5\n         30: isub\n         31: ior\n         32: istore        6\n         34: iload         6\n         36: ifge          75\n         39: aload_0\n-        40: ldc           #77                 // String Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n+        40: ldc           #168                // String Invalid \\'offset\\' (%d) and/or \\'len\\' (%d) arguments for `char[]` of length %d\n         42: iconst_3\n-        43: anewarray     #2                  // class java/lang/Object\n+        43: anewarray     #3                  // class java/lang/Object\n         46: dup\n         47: iconst_0\n         48: iload_2\n-        49: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        49: invokestatic  #146                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         52: aastore\n         53: dup\n         54: iconst_1\n         55: iload_3\n-        56: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        56: invokestatic  #146                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         59: aastore\n         60: dup\n         61: iconst_2\n         62: iload         4\n-        64: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        64: invokestatic  #146                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         67: aastore\n-        68: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        71: invokevirtual #57                 // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n+        68: invokestatic  #152                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        71: invokevirtual #140                // Method _reportRangeError:(Ljava/lang/String;)Ljava/lang/Object;\n         74: pop\n         75: return\n       LineNumberTable:\n         line 333: 0\n         line 334: 4\n         line 336: 11\n         line 337: 15\n         line 339: 20\n         line 340: 34\n         line 341: 39\n-        line 343: 49\n+        line 342: 40\n+        line 343: 48\n         line 341: 68\n         line 345: 75\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      76     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0      76     1  data   [C\n             0      76     2 offset   I\n@@ -645,34 +649,32 @@\n            20      56     5   end   I\n            34      42     6 anyNegs   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 63\n           locals = [ int, int, int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   protected <T extends java.lang.Object> T _reportRangeError(java.lang.String) throws java.lang.IllegalArgumentException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/Object;\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.lang.IllegalArgumentException\n+    Signature: #171                         // <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;\n     Code:\n       stack=3, locals=2, args_size=2\n-         0: new           #79                 // class java/lang/IllegalArgumentException\n+         0: new           #136                // class java/lang/IllegalArgumentException\n          3: dup\n          4: aload_1\n-         5: invokespecial #81                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         5: invokespecial #172                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n          8: athrow\n       LineNumberTable:\n         line 349: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/TokenStreamFactory;\n             0       9     1   msg   Ljava/lang/String;\n-    Exceptions:\n-      throws java.lang.IllegalArgumentException\n-    Signature: #173                         // <T:Ljava/lang/Object;>(Ljava/lang/String;)TT;\n }\n SourceFile: \"TokenStreamFactory.java\"\n InnerClasses:\n-  public static final #181= #177 of #179; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n-  public static final #181= #182 of #184; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n+  public static final #181= #177 of #179; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n+  public static final #181= #182 of #184; // Feature=class com/fasterxml/jackson/core/JsonParser$Feature of class com/fasterxml/jackson/core/JsonParser\n"}]}
