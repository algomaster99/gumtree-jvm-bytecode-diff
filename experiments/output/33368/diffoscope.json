{"diffoscope-json-version": 1, "source1": "first/Memoizer.class", "source2": "second/Memoizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,171 +1,171 @@\n-  SHA-256 checksum a7739895bc467ffcf54813ac92010030c99d58ec8bce81d62d63093888f9151a\n+  SHA-256 checksum 18eef8471c1f00e7d94e3083e1a3edd3ddc61f3edf07c83b6d67f12ed8f3a7e0\n   Compiled from \"Memoizer.java\"\n public class org.apache.commons.lang3.concurrent.Memoizer<I extends java.lang.Object, O extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.Computable<I, O>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #27                         // org/apache/commons/lang3/concurrent/Memoizer\n-  super_class: #28                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/concurrent/Memoizer\n+  super_class: #8                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 5, attributes: 4\n Constant pool:\n-    #1 = Methodref          #27.#81       // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-    #2 = Methodref          #28.#82       // java/lang/Object.\"<init>\":()V\n-    #3 = Class              #83           // java/util/concurrent/ConcurrentHashMap\n-    #4 = Methodref          #3.#82        // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-    #5 = Fieldref           #27.#84       // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n-    #6 = Fieldref           #27.#85       // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-    #7 = Fieldref           #27.#86       // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n-    #8 = InterfaceMethodref #87.#88       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #9 = Class              #89           // java/util/concurrent/Future\n-   #10 = InvokeDynamic      #0:#94        // #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-   #11 = Class              #95           // java/util/concurrent/FutureTask\n-   #12 = Methodref          #11.#96       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #13 = InterfaceMethodref #87.#97       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #14 = Methodref          #11.#98       // java/util/concurrent/FutureTask.run:()V\n-   #15 = InterfaceMethodref #9.#99        // java/util/concurrent/Future.get:()Ljava/lang/Object;\n-   #16 = Class              #100          // java/util/concurrent/CancellationException\n-   #17 = InterfaceMethodref #87.#101      // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #18 = Class              #102          // java/util/concurrent/ExecutionException\n-   #19 = Methodref          #18.#103      // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-   #20 = Methodref          #27.#104      // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #21 = Class              #105          // java/lang/RuntimeException\n-   #22 = Class              #106          // java/lang/Error\n-   #23 = Class              #107          // java/lang/IllegalStateException\n-   #24 = String             #108          // Unchecked exception\n-   #25 = Methodref          #23.#109      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #26 = InterfaceMethodref #29.#110      // org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #27 = Class              #111          // org/apache/commons/lang3/concurrent/Memoizer\n-   #28 = Class              #112          // java/lang/Object\n-   #29 = Class              #113          // org/apache/commons/lang3/concurrent/Computable\n-   #30 = Utf8               cache\n-   #31 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n-   #32 = Utf8               Signature\n-   #33 = Utf8               Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n-   #34 = Utf8               computable\n-   #35 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable;\n-   #36 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-   #37 = Utf8               recalculate\n-   #38 = Utf8               Z\n-   #39 = Utf8               <init>\n-   #40 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;)V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               LocalVariableTable\n-   #44 = Utf8               this\n-   #45 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer;\n-   #46 = Utf8               LocalVariableTypeTable\n-   #47 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n-   #48 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n-   #49 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-   #50 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n-   #51 = Utf8               compute\n-   #52 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #53 = Utf8               eval\n-   #54 = Utf8               Ljava/util/concurrent/Callable;\n-   #55 = Utf8               futureTask\n-   #56 = Utf8               Ljava/util/concurrent/FutureTask;\n-   #57 = Utf8               e\n-   #58 = Utf8               Ljava/util/concurrent/CancellationException;\n-   #59 = Utf8               Ljava/util/concurrent/ExecutionException;\n-   #60 = Utf8               future\n-   #61 = Utf8               Ljava/util/concurrent/Future;\n-   #62 = Utf8               arg\n-   #63 = Utf8               Ljava/lang/Object;\n-   #64 = Utf8               Ljava/util/concurrent/Callable<TO;>;\n-   #65 = Utf8               Ljava/util/concurrent/FutureTask<TO;>;\n-   #66 = Utf8               Ljava/util/concurrent/Future<TO;>;\n-   #67 = Utf8               TI;\n-   #68 = Utf8               StackMapTable\n-   #69 = Utf8               Exceptions\n-   #70 = Class              #114          // java/lang/InterruptedException\n-   #71 = Utf8               (TI;)TO;\n-   #72 = Utf8               launderException\n-   #73 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-   #74 = Utf8               throwable\n-   #75 = Utf8               Ljava/lang/Throwable;\n-   #76 = Utf8               lambda$compute$0\n-   #77 = Class              #115          // java/lang/Exception\n-   #78 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-   #79 = Utf8               SourceFile\n-   #80 = Utf8               Memoizer.java\n-   #81 = NameAndType        #39:#49       // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n-   #82 = NameAndType        #39:#116      // \"<init>\":()V\n-   #83 = Utf8               java/util/concurrent/ConcurrentHashMap\n-   #84 = NameAndType        #30:#31       // cache:Ljava/util/concurrent/ConcurrentMap;\n-   #85 = NameAndType        #34:#35       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n-   #86 = NameAndType        #37:#38       // recalculate:Z\n-   #87 = Class              #117          // java/util/concurrent/ConcurrentMap\n-   #88 = NameAndType        #118:#52      // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #89 = Utf8               java/util/concurrent/Future\n-   #90 = Utf8               BootstrapMethods\n-   #91 = MethodHandle       6:#119        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #92 = MethodType         #120          //  ()Ljava/lang/Object;\n-   #93 = MethodHandle       7:#121        // REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #94 = NameAndType        #122:#123     // call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-   #95 = Utf8               java/util/concurrent/FutureTask\n-   #96 = NameAndType        #39:#124      // \"<init>\":(Ljava/util/concurrent/Callable;)V\n-   #97 = NameAndType        #125:#126     // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #98 = NameAndType        #127:#116     // run:()V\n-   #99 = NameAndType        #118:#120     // get:()Ljava/lang/Object;\n-  #100 = Utf8               java/util/concurrent/CancellationException\n-  #101 = NameAndType        #128:#129     // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #102 = Utf8               java/util/concurrent/ExecutionException\n-  #103 = NameAndType        #130:#131     // getCause:()Ljava/lang/Throwable;\n-  #104 = NameAndType        #72:#73       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #105 = Utf8               java/lang/RuntimeException\n-  #106 = Utf8               java/lang/Error\n-  #107 = Utf8               java/lang/IllegalStateException\n-  #108 = Utf8               Unchecked exception\n-  #109 = NameAndType        #39:#132      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #110 = NameAndType        #51:#52       // compute:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #111 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n-  #112 = Utf8               java/lang/Object\n-  #113 = Utf8               org/apache/commons/lang3/concurrent/Computable\n-  #114 = Utf8               java/lang/InterruptedException\n-  #115 = Utf8               java/lang/Exception\n-  #116 = Utf8               ()V\n-  #117 = Utf8               java/util/concurrent/ConcurrentMap\n-  #118 = Utf8               get\n-  #119 = Methodref          #133.#134     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #120 = Utf8               ()Ljava/lang/Object;\n-  #121 = Methodref          #27.#135      // org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #122 = Utf8               call\n-  #123 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n-  #124 = Utf8               (Ljava/util/concurrent/Callable;)V\n-  #125 = Utf8               putIfAbsent\n-  #126 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #127 = Utf8               run\n-  #128 = Utf8               remove\n-  #129 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #130 = Utf8               getCause\n-  #131 = Utf8               ()Ljava/lang/Throwable;\n-  #132 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #133 = Class              #136          // java/lang/invoke/LambdaMetafactory\n-  #134 = NameAndType        #137:#141     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #135 = NameAndType        #76:#52       // lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #136 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #137 = Utf8               metafactory\n-  #138 = Class              #143          // java/lang/invoke/MethodHandles$Lookup\n-  #139 = Utf8               Lookup\n-  #140 = Utf8               InnerClasses\n-  #141 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #142 = Class              #144          // java/lang/invoke/MethodHandles\n-  #143 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #144 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/lang3/concurrent/Memoizer.\"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+    #2 = Class              #4            // org/apache/commons/lang3/concurrent/Memoizer\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+    #4 = Utf8               org/apache/commons/lang3/concurrent/Memoizer\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n+    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n+    #8 = Class              #10           // java/lang/Object\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               java/lang/Object\n+   #11 = Utf8               ()V\n+   #12 = Class              #13           // java/util/concurrent/ConcurrentHashMap\n+   #13 = Utf8               java/util/concurrent/ConcurrentHashMap\n+   #14 = Methodref          #12.#9        // java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+   #15 = Fieldref           #2.#16        // org/apache/commons/lang3/concurrent/Memoizer.cache:Ljava/util/concurrent/ConcurrentMap;\n+   #16 = NameAndType        #17:#18       // cache:Ljava/util/concurrent/ConcurrentMap;\n+   #17 = Utf8               cache\n+   #18 = Utf8               Ljava/util/concurrent/ConcurrentMap;\n+   #19 = Fieldref           #2.#20        // org/apache/commons/lang3/concurrent/Memoizer.computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+   #20 = NameAndType        #21:#22       // computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+   #21 = Utf8               computable\n+   #22 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable;\n+   #23 = Fieldref           #2.#24        // org/apache/commons/lang3/concurrent/Memoizer.recalculate:Z\n+   #24 = NameAndType        #25:#26       // recalculate:Z\n+   #25 = Utf8               recalculate\n+   #26 = Utf8               Z\n+   #27 = InterfaceMethodref #28.#29       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #28 = Class              #30           // java/util/concurrent/ConcurrentMap\n+   #29 = NameAndType        #31:#32       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #30 = Utf8               java/util/concurrent/ConcurrentMap\n+   #31 = Utf8               get\n+   #32 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #33 = Class              #34           // java/util/concurrent/Future\n+   #34 = Utf8               java/util/concurrent/Future\n+   #35 = InvokeDynamic      #0:#36        // #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #36 = NameAndType        #37:#38       // call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #37 = Utf8               call\n+   #38 = Utf8               (Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+   #39 = Class              #40           // java/util/concurrent/FutureTask\n+   #40 = Utf8               java/util/concurrent/FutureTask\n+   #41 = Methodref          #39.#42       // java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #42 = NameAndType        #5:#43        // \"<init>\":(Ljava/util/concurrent/Callable;)V\n+   #43 = Utf8               (Ljava/util/concurrent/Callable;)V\n+   #44 = InterfaceMethodref #28.#45       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #45 = NameAndType        #46:#47       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #46 = Utf8               putIfAbsent\n+   #47 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #48 = Methodref          #39.#49       // java/util/concurrent/FutureTask.run:()V\n+   #49 = NameAndType        #50:#11       // run:()V\n+   #50 = Utf8               run\n+   #51 = InterfaceMethodref #33.#52       // java/util/concurrent/Future.get:()Ljava/lang/Object;\n+   #52 = NameAndType        #31:#53       // get:()Ljava/lang/Object;\n+   #53 = Utf8               ()Ljava/lang/Object;\n+   #54 = Class              #55           // java/util/concurrent/CancellationException\n+   #55 = Utf8               java/util/concurrent/CancellationException\n+   #56 = InterfaceMethodref #28.#57       // java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #57 = NameAndType        #58:#59       // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #58 = Utf8               remove\n+   #59 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #60 = Class              #61           // java/util/concurrent/ExecutionException\n+   #61 = Utf8               java/util/concurrent/ExecutionException\n+   #62 = Methodref          #60.#63       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+   #63 = NameAndType        #64:#65       // getCause:()Ljava/lang/Throwable;\n+   #64 = Utf8               getCause\n+   #65 = Utf8               ()Ljava/lang/Throwable;\n+   #66 = Methodref          #2.#67        // org/apache/commons/lang3/concurrent/Memoizer.launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #67 = NameAndType        #68:#69       // launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #68 = Utf8               launderException\n+   #69 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+   #70 = Class              #71           // java/lang/RuntimeException\n+   #71 = Utf8               java/lang/RuntimeException\n+   #72 = Class              #73           // java/lang/Error\n+   #73 = Utf8               java/lang/Error\n+   #74 = Class              #75           // java/lang/IllegalStateException\n+   #75 = Utf8               java/lang/IllegalStateException\n+   #76 = String             #77           // Unchecked exception\n+   #77 = Utf8               Unchecked exception\n+   #78 = Methodref          #74.#79       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #79 = NameAndType        #5:#80        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #80 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #81 = InterfaceMethodref #82.#83       // org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #82 = Class              #84           // org/apache/commons/lang3/concurrent/Computable\n+   #83 = NameAndType        #85:#32       // compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #84 = Utf8               org/apache/commons/lang3/concurrent/Computable\n+   #85 = Utf8               compute\n+   #86 = Utf8               Signature\n+   #87 = Utf8               Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n+   #88 = Utf8               Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+   #89 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable;)V\n+   #90 = Utf8               Code\n+   #91 = Utf8               LineNumberTable\n+   #92 = Utf8               LocalVariableTable\n+   #93 = Utf8               this\n+   #94 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer;\n+   #95 = Utf8               LocalVariableTypeTable\n+   #96 = Utf8               Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n+   #97 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n+   #98 = Utf8               (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n+   #99 = Utf8               eval\n+  #100 = Utf8               Ljava/util/concurrent/Callable;\n+  #101 = Utf8               futureTask\n+  #102 = Utf8               Ljava/util/concurrent/FutureTask;\n+  #103 = Utf8               e\n+  #104 = Utf8               Ljava/util/concurrent/CancellationException;\n+  #105 = Utf8               Ljava/util/concurrent/ExecutionException;\n+  #106 = Utf8               future\n+  #107 = Utf8               Ljava/util/concurrent/Future;\n+  #108 = Utf8               arg\n+  #109 = Utf8               Ljava/lang/Object;\n+  #110 = Utf8               Ljava/util/concurrent/Callable<TO;>;\n+  #111 = Utf8               Ljava/util/concurrent/FutureTask<TO;>;\n+  #112 = Utf8               Ljava/util/concurrent/Future<TO;>;\n+  #113 = Utf8               TI;\n+  #114 = Utf8               StackMapTable\n+  #115 = Utf8               Exceptions\n+  #116 = Class              #117          // java/lang/InterruptedException\n+  #117 = Utf8               java/lang/InterruptedException\n+  #118 = Utf8               (TI;)TO;\n+  #119 = Utf8               throwable\n+  #120 = Utf8               Ljava/lang/Throwable;\n+  #121 = Utf8               lambda$compute$0\n+  #122 = Class              #123          // java/lang/Exception\n+  #123 = Utf8               java/lang/Exception\n+  #124 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+  #125 = Utf8               SourceFile\n+  #126 = Utf8               Memoizer.java\n+  #127 = Utf8               BootstrapMethods\n+  #128 = MethodHandle       6:#129        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #129 = Methodref          #130.#131     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #130 = Class              #132          // java/lang/invoke/LambdaMetafactory\n+  #131 = NameAndType        #133:#134     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #132 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #133 = Utf8               metafactory\n+  #134 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #135 = MethodType         #53           //  ()Ljava/lang/Object;\n+  #136 = MethodHandle       7:#137        // REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #137 = Methodref          #2.#138       // org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #138 = NameAndType        #121:#32      // lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #139 = Utf8               InnerClasses\n+  #140 = Class              #141          // java/lang/invoke/MethodHandles$Lookup\n+  #141 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #142 = Class              #143          // java/lang/invoke/MethodHandles\n+  #143 = Utf8               java/lang/invoke/MethodHandles\n+  #144 = Utf8               Lookup\n {\n   private final java.util.concurrent.ConcurrentMap<I, java.util.concurrent.Future<O>> cache;\n     descriptor: Ljava/util/concurrent/ConcurrentMap;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #33                          // Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n+    Signature: #87                          // Ljava/util/concurrent/ConcurrentMap<TI;Ljava/util/concurrent/Future<TO;>;>;\n \n   private final org.apache.commons.lang3.concurrent.Computable<I, O> computable;\n     descriptor: Lorg/apache/commons/lang3/concurrent/Computable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #36                          // Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+    Signature: #88                          // Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n \n   private final boolean recalculate;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/Computable;)V\n@@ -184,34 +184,34 @@\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n             0       7     1 computable   Lorg/apache/commons/lang3/concurrent/Computable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n             0       7     1 computable   Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-    Signature: #48                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n+    Signature: #97                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;)V\n \n   public org.apache.commons.lang3.concurrent.Memoizer(org.apache.commons.lang3.concurrent.Computable<I, O>, boolean);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/Computable;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #3                  // class java/util/concurrent/ConcurrentHashMap\n+         5: new           #12                 // class java/util/concurrent/ConcurrentHashMap\n          8: dup\n-         9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n-        12: putfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+         9: invokespecial #14                 // Method java/util/concurrent/ConcurrentHashMap.\"<init>\":()V\n+        12: putfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         15: aload_0\n         16: aload_1\n-        17: putfield      #6                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+        17: putfield      #19                 // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n         20: aload_0\n         21: iload_2\n-        22: putfield      #7                  // Field recalculate:Z\n+        22: putfield      #23                 // Field recalculate:Z\n         25: return\n       LineNumberTable:\n         line 90: 0\n         line 56: 4\n         line 91: 15\n         line 92: 20\n         line 93: 25\n@@ -220,76 +220,76 @@\n             0      26     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n             0      26     1 computable   Lorg/apache/commons/lang3/concurrent/Computable;\n             0      26     2 recalculate   Z\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n             0      26     1 computable   Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n-    Signature: #50                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n+    Signature: #98                          // (Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;Z)V\n \n   public O compute(I) throws java.lang.InterruptedException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+         1: getfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n          4: aload_1\n-         5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        10: checkcast     #9                  // class java/util/concurrent/Future\n+         5: invokeinterface #27,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        10: checkcast     #33                 // class java/util/concurrent/Future\n         13: astore_2\n         14: aload_2\n         15: ifnonnull     64\n         18: aload_0\n         19: aload_1\n-        20: invokedynamic #10,  0             // InvokeDynamic #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n+        20: invokedynamic #35,  0             // InvokeDynamic #0:call:(Lorg/apache/commons/lang3/concurrent/Memoizer;Ljava/lang/Object;)Ljava/util/concurrent/Callable;\n         25: astore_3\n-        26: new           #11                 // class java/util/concurrent/FutureTask\n+        26: new           #39                 // class java/util/concurrent/FutureTask\n         29: dup\n         30: aload_3\n-        31: invokespecial #12                 // Method java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n+        31: invokespecial #41                 // Method java/util/concurrent/FutureTask.\"<init>\":(Ljava/util/concurrent/Callable;)V\n         34: astore        4\n         36: aload_0\n-        37: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+        37: getfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         40: aload_1\n         41: aload         4\n-        43: invokeinterface #13,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        48: checkcast     #9                  // class java/util/concurrent/Future\n+        43: invokeinterface #44,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        48: checkcast     #33                 // class java/util/concurrent/Future\n         51: astore_2\n         52: aload_2\n         53: ifnonnull     64\n         56: aload         4\n         58: astore_2\n         59: aload         4\n-        61: invokevirtual #14                 // Method java/util/concurrent/FutureTask.run:()V\n+        61: invokevirtual #48                 // Method java/util/concurrent/FutureTask.run:()V\n         64: aload_2\n-        65: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n+        65: invokeinterface #51,  1           // InterfaceMethod java/util/concurrent/Future.get:()Ljava/lang/Object;\n         70: areturn\n         71: astore_3\n         72: aload_0\n-        73: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+        73: getfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         76: aload_1\n         77: aload_2\n-        78: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        78: invokeinterface #56,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         83: pop\n         84: goto          116\n         87: astore_3\n         88: aload_0\n-        89: getfield      #7                  // Field recalculate:Z\n+        89: getfield      #23                 // Field recalculate:Z\n         92: ifeq          107\n         95: aload_0\n-        96: getfield      #5                  // Field cache:Ljava/util/concurrent/ConcurrentMap;\n+        96: getfield      #15                 // Field cache:Ljava/util/concurrent/ConcurrentMap;\n         99: aload_1\n        100: aload_2\n-       101: invokeinterface #17,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       101: invokeinterface #56,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        106: pop\n        107: aload_0\n        108: aload_3\n-       109: invokevirtual #19                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-       112: invokespecial #20                 // Method launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+       109: invokevirtual #62                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+       112: invokespecial #66                 // Method launderException:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n        115: athrow\n        116: goto          0\n       Exception table:\n          from    to  target type\n             64    70    71   Class java/util/concurrent/CancellationException\n             64    70    87   Class java/util/concurrent/ExecutionException\n       LineNumberTable:\n@@ -338,38 +338,38 @@\n         frame_type = 252 /* append */\n           offset_delta = 19\n           locals = [ class java/util/concurrent/ExecutionException ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n     Exceptions:\n       throws java.lang.InterruptedException\n-    Signature: #71                          // (TI;)TO;\n+    Signature: #118                         // (TI;)TO;\n \n   private java.lang.RuntimeException launderException(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #21                 // class java/lang/RuntimeException\n+         1: instanceof    #70                 // class java/lang/RuntimeException\n          4: ifeq          12\n          7: aload_1\n-         8: checkcast     #21                 // class java/lang/RuntimeException\n+         8: checkcast     #70                 // class java/lang/RuntimeException\n         11: areturn\n         12: aload_1\n-        13: instanceof    #22                 // class java/lang/Error\n+        13: instanceof    #72                 // class java/lang/Error\n         16: ifeq          24\n         19: aload_1\n-        20: checkcast     #22                 // class java/lang/Error\n+        20: checkcast     #72                 // class java/lang/Error\n         23: athrow\n-        24: new           #23                 // class java/lang/IllegalStateException\n+        24: new           #74                 // class java/lang/IllegalStateException\n         27: dup\n-        28: ldc           #24                 // String Unchecked exception\n+        28: ldc           #76                 // String Unchecked exception\n         30: aload_1\n-        31: invokespecial #25                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        31: invokespecial #78                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         34: athrow\n       LineNumberTable:\n         line 151: 0\n         line 152: 7\n         line 153: 12\n         line 154: 19\n         line 156: 24\n@@ -386,33 +386,33 @@\n \n   private java.lang.Object lambda$compute$0(java.lang.Object) throws java.lang.Exception;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n+         1: getfield      #19                 // Field computable:Lorg/apache/commons/lang3/concurrent/Computable;\n          4: aload_1\n-         5: invokeinterface #26,  2           // InterfaceMethod org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n+         5: invokeinterface #81,  2           // InterfaceMethod org/apache/commons/lang3/concurrent/Computable.compute:(Ljava/lang/Object;)Ljava/lang/Object;\n         10: areturn\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer;\n             0      11     1   arg   Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/lang3/concurrent/Memoizer<TI;TO;>;\n     Exceptions:\n       throws java.lang.Exception\n }\n-Signature: #78                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n+Signature: #124                         // <I:Ljava/lang/Object;O:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/Computable<TI;TO;>;\n SourceFile: \"Memoizer.java\"\n-InnerClasses:\n-  public static final #139= #138 of #142; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #91 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #128 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #92 ()Ljava/lang/Object;\n-      #93 REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-      #92 ()Ljava/lang/Object;\n+      #135 ()Ljava/lang/Object;\n+      #136 REF_invokeSpecial org/apache/commons/lang3/concurrent/Memoizer.lambda$compute$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+      #135 ()Ljava/lang/Object;\n+InnerClasses:\n+  public static final #144= #140 of #142; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
