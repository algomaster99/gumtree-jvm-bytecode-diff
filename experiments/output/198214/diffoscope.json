{"diffoscope-json-version": 1, "source1": "first/FieldGenOrMethodGen.class", "source2": "second/FieldGenOrMethodGen.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,16 +18,16 @@\n     private final List<AnnotationEntryGen> annotation_vec;\n     \n     protected FieldGenOrMethodGen() {\n         this.attribute_vec = new ArrayList<Attribute>();\n         this.annotation_vec = new ArrayList<AnnotationEntryGen>();\n     }\n     \n-    protected FieldGenOrMethodGen(final int access_flags) {\n-        super(access_flags);\n+    protected FieldGenOrMethodGen(final int n) {\n+        super(n);\n         this.attribute_vec = new ArrayList<Attribute>();\n         this.annotation_vec = new ArrayList<AnnotationEntryGen>();\n     }\n     \n     public void setType(final Type type) {\n         if (type.getType() == 16) {\n             throw new IllegalArgumentException(\"Type can not be \" + type);\n@@ -51,54 +51,54 @@\n         return this.cp;\n     }\n     \n     public void setConstantPool(final ConstantPoolGen cp) {\n         this.cp = cp;\n     }\n     \n-    public void addAttribute(final Attribute a) {\n-        this.attribute_vec.add(a);\n+    public void addAttribute(final Attribute attribute) {\n+        this.attribute_vec.add(attribute);\n     }\n     \n-    protected void addAnnotationEntry(final AnnotationEntryGen ag) {\n-        this.annotation_vec.add(ag);\n+    protected void addAnnotationEntry(final AnnotationEntryGen annotationEntryGen) {\n+        this.annotation_vec.add(annotationEntryGen);\n     }\n     \n-    public void removeAttribute(final Attribute a) {\n-        this.attribute_vec.remove(a);\n+    public void removeAttribute(final Attribute attribute) {\n+        this.attribute_vec.remove(attribute);\n     }\n     \n-    protected void removeAnnotationEntry(final AnnotationEntryGen ag) {\n-        this.annotation_vec.remove(ag);\n+    protected void removeAnnotationEntry(final AnnotationEntryGen annotationEntryGen) {\n+        this.annotation_vec.remove(annotationEntryGen);\n     }\n     \n     public void removeAttributes() {\n         this.attribute_vec.clear();\n     }\n     \n     protected void removeAnnotationEntries() {\n         this.annotation_vec.clear();\n     }\n     \n     public Attribute[] getAttributes() {\n-        final Attribute[] attributes = new Attribute[this.attribute_vec.size()];\n-        this.attribute_vec.toArray(attributes);\n-        return attributes;\n+        final Attribute[] array = new Attribute[this.attribute_vec.size()];\n+        this.attribute_vec.toArray(array);\n+        return array;\n     }\n     \n     public AnnotationEntryGen[] getAnnotationEntries() {\n-        final AnnotationEntryGen[] annotations = new AnnotationEntryGen[this.annotation_vec.size()];\n-        this.annotation_vec.toArray(annotations);\n-        return annotations;\n+        final AnnotationEntryGen[] array = new AnnotationEntryGen[this.annotation_vec.size()];\n+        this.annotation_vec.toArray(array);\n+        return array;\n     }\n     \n     public abstract String getSignature();\n     \n     public Object clone() {\n         try {\n             return super.clone();\n         }\n-        catch (final CloneNotSupportedException e) {\n+        catch (final CloneNotSupportedException ex) {\n             throw new Error(\"Clone Not Supported\");\n         }\n     }\n }\n"}]}
