{"diffoscope-json-version": 1, "source1": "first/IOFileFilter.class", "source2": "second/IOFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,62 @@\n-  SHA-256 checksum 188658095f8ec204b6f30724afd0fb97e767ad0be673d3336dede66ce4ba8c61\n+  SHA-256 checksum 1dbc5ded5b2061f7df9a05e20da7522c40a52a8e151d44ca97c6ecc5399d6d5b\n   Compiled from \"IOFileFilter.java\"\n public interface org.apache.commons.io.filefilter.IOFileFilter extends java.io.FileFilter,java.io.FilenameFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #3                          // org/apache/commons/io/filefilter/IOFileFilter\n-  super_class: #4                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/filefilter/IOFileFilter\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Class              #18            // java/lang/String\n-   #2 = Fieldref           #3.#19         // org/apache/commons/io/filefilter/IOFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #3 = Class              #20            // org/apache/commons/io/filefilter/IOFileFilter\n-   #4 = Class              #21            // java/lang/Object\n-   #5 = Class              #22            // java/io/FileFilter\n-   #6 = Class              #23            // java/io/FilenameFilter\n-   #7 = Utf8               EMPTY_STRING_ARRAY\n-   #8 = Utf8               [Ljava/lang/String;\n-   #9 = Utf8               accept\n-  #10 = Utf8               (Ljava/io/File;)Z\n-  #11 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #12 = Utf8               <clinit>\n-  #13 = Utf8               ()V\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               SourceFile\n-  #17 = Utf8               IOFileFilter.java\n-  #18 = Utf8               java/lang/String\n-  #19 = NameAndType        #7:#8          // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #20 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #21 = Utf8               java/lang/Object\n-  #22 = Utf8               java/io/FileFilter\n-  #23 = Utf8               java/io/FilenameFilter\n+   #1 = Class              #2             // org/apache/commons/io/filefilter/IOFileFilter\n+   #2 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Class              #6             // java/io/FileFilter\n+   #6 = Utf8               java/io/FileFilter\n+   #7 = Class              #8             // java/io/FilenameFilter\n+   #8 = Utf8               java/io/FilenameFilter\n+   #9 = Utf8               EMPTY_STRING_ARRAY\n+  #10 = Utf8               [Ljava/lang/String;\n+  #11 = Utf8               <clinit>\n+  #12 = Utf8               ()V\n+  #13 = Utf8               Code\n+  #14 = Class              #15            // java/lang/String\n+  #15 = Utf8               java/lang/String\n+  #16 = Fieldref           #1.#17         // org/apache/commons/io/filefilter/IOFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #17 = NameAndType        #9:#10         // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #18 = Utf8               LineNumberTable\n+  #19 = Utf8               LocalVariableTable\n+  #20 = Utf8               accept\n+  #21 = Utf8               (Ljava/io/File;)Z\n+  #22 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #23 = Utf8               SourceFile\n+  #24 = Utf8               IOFileFilter.java\n {\n   public static final java.lang.String[] EMPTY_STRING_ARRAY;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n-  public abstract boolean accept(java.io.File);\n-    descriptor: (Ljava/io/File;)Z\n-    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-\n-  public abstract boolean accept(java.io.File, java.lang.String);\n-    descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n-    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #1                  // class java/lang/String\n-         4: putstatic     #2                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         1: anewarray     #14                 // class java/lang/String\n+         4: putstatic     #16                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n          7: return\n       LineNumberTable:\n         line 35: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+\n+  public abstract boolean accept(java.io.File);\n+    descriptor: (Ljava/io/File;)Z\n+    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n+\n+  public abstract boolean accept(java.io.File, java.lang.String);\n+    descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n+    flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n }\n SourceFile: \"IOFileFilter.java\"\n"}]}
