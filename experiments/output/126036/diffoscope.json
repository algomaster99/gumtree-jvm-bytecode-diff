{"diffoscope-json-version": 1, "source1": "first/PackingUtils$PackingLogger.class", "source2": "second/PackingUtils$PackingLogger.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum 47f18817f4a745c43dd038622fdad77232b2200090cdb922f437eda5a542e155\n+  SHA-256 checksum c625472fc001ce2d5a55459bf8872c5b1912ec80f7e3809a3822d0b25039c831\n   Compiled from \"PackingUtils.java\"\n class org.apache.commons.compress.harmony.pack200.PackingUtils$PackingLogger extends java.util.logging.Logger\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #8                          // org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger\n-  super_class: #2                         // java/util/logging/Logger\n+  this_class: #1                          // org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger\n+  super_class: #3                         // java/util/logging/Logger\n   interfaces: 0, fields: 1, methods: 3, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/util/logging/Logger.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #2 = Class              #4             // java/util/logging/Logger\n-   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+   #1 = Class              #2             // org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger\n+   #2 = Utf8               org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger\n+   #3 = Class              #4             // java/util/logging/Logger\n    #4 = Utf8               java/util/logging/Logger\n-   #5 = Utf8               <init>\n-   #6 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger.verbose:Z\n-   #8 = Class              #10            // org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger\n-   #9 = NameAndType        #11:#12        // verbose:Z\n-  #10 = Utf8               org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger\n-  #11 = Utf8               verbose\n-  #12 = Utf8               Z\n-  #13 = Methodref          #2.#14         // java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V\n-  #14 = NameAndType        #15:#16        // log:(Ljava/util/logging/LogRecord;)V\n-  #15 = Utf8               log\n-  #16 = Utf8               (Ljava/util/logging/LogRecord;)V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               LocalVariableTable\n-  #20 = Utf8               this\n-  #21 = Utf8               Lorg/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger;\n-  #22 = Utf8               name\n-  #23 = Utf8               Ljava/lang/String;\n-  #24 = Utf8               resourceBundleName\n+   #5 = Utf8               verbose\n+   #6 = Utf8               Z\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // java/util/logging/Logger.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #12 = Fieldref           #1.#13         // org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger.verbose:Z\n+  #13 = NameAndType        #5:#6          // verbose:Z\n+  #14 = Utf8               LineNumberTable\n+  #15 = Utf8               LocalVariableTable\n+  #16 = Utf8               this\n+  #17 = Utf8               Lorg/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger;\n+  #18 = Utf8               name\n+  #19 = Utf8               Ljava/lang/String;\n+  #20 = Utf8               resourceBundleName\n+  #21 = Utf8               log\n+  #22 = Utf8               (Ljava/util/logging/LogRecord;)V\n+  #23 = Methodref          #3.#24         // java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V\n+  #24 = NameAndType        #21:#22        // log:(Ljava/util/logging/LogRecord;)V\n   #25 = Utf8               logRecord\n   #26 = Utf8               Ljava/util/logging/LogRecord;\n   #27 = Utf8               StackMapTable\n   #28 = Utf8               setVerbose\n   #29 = Utf8               (Z)V\n   #30 = Utf8               isVerbose\n   #31 = Utf8               SourceFile\n@@ -53,18 +53,18 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #1                  // Method java/util/logging/Logger.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+         3: invokespecial #10                 // Method java/util/logging/Logger.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n          6: aload_0\n          7: iconst_0\n-         8: putfield      #7                  // Field verbose:Z\n+         8: putfield      #12                 // Field verbose:Z\n         11: return\n       LineNumberTable:\n         line 56: 0\n         line 53: 6\n         line 57: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -74,19 +74,19 @@\n \n   public void log(java.util.logging.LogRecord);\n     descriptor: (Ljava/util/logging/LogRecord;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field verbose:Z\n+         1: getfield      #12                 // Field verbose:Z\n          4: ifeq          12\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #13                 // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V\n+         9: invokespecial #23                 // Method java/util/logging/Logger.log:(Ljava/util/logging/LogRecord;)V\n         12: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 7\n         line 64: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -98,20 +98,20 @@\n   public void setVerbose(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field verbose:Z\n+         2: putfield      #12                 // Field verbose:Z\n          5: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger;\n             0       6     1 isVerbose   Z\n }\n SourceFile: \"PackingUtils.java\"\n InnerClasses:\n-  private static #36= #8 of #34;          // PackingLogger=class org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger of class org/apache/commons/compress/harmony/pack200/PackingUtils\n+  private static #36= #1 of #34;          // PackingLogger=class org/apache/commons/compress/harmony/pack200/PackingUtils$PackingLogger of class org/apache/commons/compress/harmony/pack200/PackingUtils\n"}]}
