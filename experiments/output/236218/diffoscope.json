{"diffoscope-json-version": 1, "source1": "first/UnixLineEndingInputStream.class", "source2": "second/UnixLineEndingInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,54 +8,54 @@\n {\n     private boolean slashNSeen;\n     private boolean slashRSeen;\n     private boolean eofSeen;\n     private final InputStream target;\n     private final boolean ensureLineFeedAtEndOfFile;\n     \n-    public UnixLineEndingInputStream(final InputStream in, final boolean ensureLineFeedAtEndOfFile) {\n+    public UnixLineEndingInputStream(final InputStream target, final boolean ensureLineFeedAtEndOfFile) {\n         this.slashNSeen = false;\n         this.slashRSeen = false;\n         this.eofSeen = false;\n-        this.target = in;\n+        this.target = target;\n         this.ensureLineFeedAtEndOfFile = ensureLineFeedAtEndOfFile;\n     }\n     \n     private int readWithUpdate() throws IOException {\n-        final int target = this.target.read();\n-        this.eofSeen = (target == -1);\n+        final int read = this.target.read();\n+        this.eofSeen = (read == -1);\n         if (this.eofSeen) {\n-            return target;\n+            return read;\n         }\n-        this.slashNSeen = (target == 10);\n-        this.slashRSeen = (target == 13);\n-        return target;\n+        this.slashNSeen = (read == 10);\n+        this.slashRSeen = (read == 13);\n+        return read;\n     }\n     \n     @Override\n     public int read() throws IOException {\n-        final boolean previousWasSlashR = this.slashRSeen;\n+        final boolean slashRSeen = this.slashRSeen;\n         if (this.eofSeen) {\n-            return this.eofGame(previousWasSlashR);\n+            return this.eofGame(slashRSeen);\n         }\n-        final int target = this.readWithUpdate();\n+        final int withUpdate = this.readWithUpdate();\n         if (this.eofSeen) {\n-            return this.eofGame(previousWasSlashR);\n+            return this.eofGame(slashRSeen);\n         }\n         if (this.slashRSeen) {\n             return 10;\n         }\n-        if (previousWasSlashR && this.slashNSeen) {\n+        if (slashRSeen && this.slashNSeen) {\n             return this.read();\n         }\n-        return target;\n+        return withUpdate;\n     }\n     \n-    private int eofGame(final boolean previousWasSlashR) {\n-        if (previousWasSlashR || !this.ensureLineFeedAtEndOfFile) {\n+    private int eofGame(final boolean b) {\n+        if (b || !this.ensureLineFeedAtEndOfFile) {\n             return -1;\n         }\n         if (!this.slashNSeen) {\n             this.slashNSeen = true;\n             return 10;\n         }\n         return -1;\n@@ -64,11 +64,11 @@\n     @Override\n     public void close() throws IOException {\n         super.close();\n         this.target.close();\n     }\n     \n     @Override\n-    public synchronized void mark(final int readlimit) {\n+    public synchronized void mark(final int n) {\n         throw new UnsupportedOperationException(\"Mark notsupported\");\n     }\n }\n"}]}
