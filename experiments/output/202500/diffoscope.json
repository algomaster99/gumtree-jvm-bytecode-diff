{"diffoscope-json-version": 1, "source1": "first/PKWareExtraHeader$EncryptionAlgorithm.class", "source2": "second/PKWareExtraHeader$EncryptionAlgorithm.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -28,30 +28,30 @@\n         this.code = code;\n     }\n     \n     public int getCode() {\n         return this.code;\n     }\n     \n-    public static EncryptionAlgorithm getAlgorithmByCode(final int code) {\n-        return EncryptionAlgorithm.codeToEnum.get(Integer.valueOf(code));\n+    public static EncryptionAlgorithm getAlgorithmByCode(final int i) {\n+        return EncryptionAlgorithm.codeToEnum.get(Integer.valueOf(i));\n     }\n     \n     static {\n         EncryptionAlgorithm.DES = new EncryptionAlgorithm(\"DES\", 0, 26113);\n         EncryptionAlgorithm.RC2pre52 = new EncryptionAlgorithm(\"RC2pre52\", 1, 26114);\n         EncryptionAlgorithm.TripleDES168 = new EncryptionAlgorithm(\"TripleDES168\", 2, 26115);\n         EncryptionAlgorithm.TripleDES192 = new EncryptionAlgorithm(\"TripleDES192\", 3, 26121);\n         EncryptionAlgorithm.AES128 = new EncryptionAlgorithm(\"AES128\", 4, 26126);\n         EncryptionAlgorithm.AES192 = new EncryptionAlgorithm(\"AES192\", 5, 26127);\n         EncryptionAlgorithm.AES256 = new EncryptionAlgorithm(\"AES256\", 6, 26128);\n         EncryptionAlgorithm.RC2 = new EncryptionAlgorithm(\"RC2\", 7, 26370);\n         EncryptionAlgorithm.RC4 = new EncryptionAlgorithm(\"RC4\", 8, 26625);\n         EncryptionAlgorithm.UNKNOWN = new EncryptionAlgorithm(\"UNKNOWN\", 9, 65535);\n         EncryptionAlgorithm.$VALUES = new EncryptionAlgorithm[] { EncryptionAlgorithm.DES, EncryptionAlgorithm.RC2pre52, EncryptionAlgorithm.TripleDES168, EncryptionAlgorithm.TripleDES192, EncryptionAlgorithm.AES128, EncryptionAlgorithm.AES192, EncryptionAlgorithm.AES256, EncryptionAlgorithm.RC2, EncryptionAlgorithm.RC4, EncryptionAlgorithm.UNKNOWN };\n-        final Map<Integer, EncryptionAlgorithm> cte = new HashMap<Integer, EncryptionAlgorithm>();\n-        for (final EncryptionAlgorithm method : values()) {\n-            cte.put(Integer.valueOf(method.getCode()), method);\n+        final HashMap m = new HashMap();\n+        for (final EncryptionAlgorithm encryptionAlgorithm : values()) {\n+            m.put(Integer.valueOf(encryptionAlgorithm.getCode()), encryptionAlgorithm);\n         }\n-        EncryptionAlgorithm.codeToEnum = Collections.unmodifiableMap((Map<?, ?>)cte);\n+        EncryptionAlgorithm.codeToEnum = Collections.unmodifiableMap((Map<?, ?>)m);\n     }\n }\n"}]}
