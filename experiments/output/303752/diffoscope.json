{"diffoscope-json-version": 1, "source1": "first/BlockTagUtil.class", "source2": "second/BlockTagUtil.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,119 +1,119 @@\n-  SHA-256 checksum 68f3be5c530724a75cf0818d32cfd8e58b337adb5784ff359f2774feeda98cb0\n+  SHA-256 checksum 251ef6acfc09424cc2b075dc35209892b25492ea53149283f2641b8c08066c76\n   Compiled from \"BlockTagUtil.java\"\n public final class com.puppycrawl.tools.checkstyle.checks.javadoc.utils.BlockTagUtil\n   minor version: 0\n   major version: 55\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #13                         // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil\n-  super_class: #26                        // java/lang/Object\n+  this_class: #11                         // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 3, attributes: 1\n Constant pool:\n-    #1 = Methodref          #26.#50       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #51           // java/util/ArrayList\n-    #3 = Methodref          #2.#50        // java/util/ArrayList.\"<init>\":()V\n-    #4 = Fieldref           #13.#52       // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil.BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n-    #5 = Fieldref           #13.#53       // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil.BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n-    #6 = Methodref          #41.#54       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-    #7 = Methodref          #44.#55       // java/util/regex/Matcher.find:()Z\n-    #8 = Methodref          #44.#56       // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-    #9 = Methodref          #44.#57       // java/util/regex/Matcher.start:(I)I\n-   #10 = Methodref          #44.#58       // java/util/regex/Matcher.end:(I)I\n-   #11 = Methodref          #43.#59       // java/lang/String.substring:(I)Ljava/lang/String;\n-   #12 = Methodref          #43.#60       // java/lang/String.trim:()Ljava/lang/String;\n-   #13 = Class              #61           // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil\n-   #14 = String             #62           // */\n-   #15 = Methodref          #43.#63       // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-   #16 = Methodref          #43.#64       // java/lang/String.length:()I\n-   #17 = Methodref          #43.#65       // java/lang/String.substring:(II)Ljava/lang/String;\n-   #18 = Class              #66           // com/puppycrawl/tools/checkstyle/api/LineColumn\n-   #19 = Methodref          #18.#67       // com/puppycrawl/tools/checkstyle/api/LineColumn.\"<init>\":(II)V\n-   #20 = Class              #68           // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo\n-   #21 = Methodref          #20.#69       // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n-   #22 = InterfaceMethodref #40.#70       // java/util/List.add:(Ljava/lang/Object;)Z\n-   #23 = String             #71           // /\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\n-   #24 = Methodref          #41.#72       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #25 = String             #73           // ^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\n-   #26 = Class              #74           // java/lang/Object\n-   #27 = Utf8               BLOCK_TAG_PATTERN_FIRST_LINE\n-   #28 = Utf8               Ljava/util/regex/Pattern;\n-   #29 = Utf8               BLOCK_TAG_PATTERN\n-   #30 = Utf8               JAVADOC_CLOSING_TAG\n-   #31 = Utf8               Ljava/lang/String;\n-   #32 = Utf8               ConstantValue\n-   #33 = Utf8               <init>\n-   #34 = Utf8               ()V\n-   #35 = Utf8               Code\n-   #36 = Utf8               LineNumberTable\n-   #37 = Utf8               extractBlockTags\n-   #38 = Utf8               ([Ljava/lang/String;)Ljava/util/List;\n-   #39 = Utf8               StackMapTable\n-   #40 = Class              #75           // java/util/List\n-   #41 = Class              #76           // java/util/regex/Pattern\n-   #42 = Class              #77           // \"[Ljava/lang/String;\"\n-   #43 = Class              #78           // java/lang/String\n-   #44 = Class              #79           // java/util/regex/Matcher\n-   #45 = Utf8               Signature\n-   #46 = Utf8               ([Ljava/lang/String;)Ljava/util/List<Lcom/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo;>;\n-   #47 = Utf8               <clinit>\n-   #48 = Utf8               SourceFile\n-   #49 = Utf8               BlockTagUtil.java\n-   #50 = NameAndType        #33:#34       // \"<init>\":()V\n-   #51 = Utf8               java/util/ArrayList\n-   #52 = NameAndType        #27:#28       // BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n-   #53 = NameAndType        #29:#28       // BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n-   #54 = NameAndType        #80:#81       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #55 = NameAndType        #82:#83       // find:()Z\n-   #56 = NameAndType        #84:#85       // group:(I)Ljava/lang/String;\n-   #57 = NameAndType        #86:#87       // start:(I)I\n-   #58 = NameAndType        #88:#87       // end:(I)I\n-   #59 = NameAndType        #89:#85       // substring:(I)Ljava/lang/String;\n-   #60 = NameAndType        #90:#91       // trim:()Ljava/lang/String;\n-   #61 = Utf8               com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil\n-   #62 = Utf8               */\n-   #63 = NameAndType        #92:#93       // endsWith:(Ljava/lang/String;)Z\n-   #64 = NameAndType        #94:#95       // length:()I\n-   #65 = NameAndType        #89:#96       // substring:(II)Ljava/lang/String;\n-   #66 = Utf8               com/puppycrawl/tools/checkstyle/api/LineColumn\n-   #67 = NameAndType        #33:#97       // \"<init>\":(II)V\n-   #68 = Utf8               com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo\n-   #69 = NameAndType        #33:#98       // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n-   #70 = NameAndType        #99:#100      // add:(Ljava/lang/Object;)Z\n-   #71 = Utf8               /\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\n-   #72 = NameAndType        #101:#102     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #73 = Utf8               ^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\n-   #74 = Utf8               java/lang/Object\n-   #75 = Utf8               java/util/List\n-   #76 = Utf8               java/util/regex/Pattern\n-   #77 = Utf8               [Ljava/lang/String;\n-   #78 = Utf8               java/lang/String\n-   #79 = Utf8               java/util/regex/Matcher\n-   #80 = Utf8               matcher\n-   #81 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #82 = Utf8               find\n-   #83 = Utf8               ()Z\n-   #84 = Utf8               group\n-   #85 = Utf8               (I)Ljava/lang/String;\n-   #86 = Utf8               start\n-   #87 = Utf8               (I)I\n-   #88 = Utf8               end\n-   #89 = Utf8               substring\n-   #90 = Utf8               trim\n-   #91 = Utf8               ()Ljava/lang/String;\n-   #92 = Utf8               endsWith\n-   #93 = Utf8               (Ljava/lang/String;)Z\n-   #94 = Utf8               length\n-   #95 = Utf8               ()I\n-   #96 = Utf8               (II)Ljava/lang/String;\n-   #97 = Utf8               (II)V\n-   #98 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n-   #99 = Utf8               add\n-  #100 = Utf8               (Ljava/lang/Object;)Z\n-  #101 = Utf8               compile\n-  #102 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/util/ArrayList\n+    #8 = Utf8               java/util/ArrayList\n+    #9 = Methodref          #7.#3         // java/util/ArrayList.\"<init>\":()V\n+   #10 = Fieldref           #11.#12       // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil.BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n+   #11 = Class              #13           // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil\n+   #12 = NameAndType        #14:#15       // BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n+   #13 = Utf8               com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil\n+   #14 = Utf8               BLOCK_TAG_PATTERN_FIRST_LINE\n+   #15 = Utf8               Ljava/util/regex/Pattern;\n+   #16 = Fieldref           #11.#17       // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/BlockTagUtil.BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n+   #17 = NameAndType        #18:#15       // BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n+   #18 = Utf8               BLOCK_TAG_PATTERN\n+   #19 = Methodref          #20.#21       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #20 = Class              #22           // java/util/regex/Pattern\n+   #21 = NameAndType        #23:#24       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #22 = Utf8               java/util/regex/Pattern\n+   #23 = Utf8               matcher\n+   #24 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #25 = Methodref          #26.#27       // java/util/regex/Matcher.find:()Z\n+   #26 = Class              #28           // java/util/regex/Matcher\n+   #27 = NameAndType        #29:#30       // find:()Z\n+   #28 = Utf8               java/util/regex/Matcher\n+   #29 = Utf8               find\n+   #30 = Utf8               ()Z\n+   #31 = Methodref          #26.#32       // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+   #32 = NameAndType        #33:#34       // group:(I)Ljava/lang/String;\n+   #33 = Utf8               group\n+   #34 = Utf8               (I)Ljava/lang/String;\n+   #35 = Methodref          #26.#36       // java/util/regex/Matcher.start:(I)I\n+   #36 = NameAndType        #37:#38       // start:(I)I\n+   #37 = Utf8               start\n+   #38 = Utf8               (I)I\n+   #39 = Methodref          #26.#40       // java/util/regex/Matcher.end:(I)I\n+   #40 = NameAndType        #41:#38       // end:(I)I\n+   #41 = Utf8               end\n+   #42 = Methodref          #43.#44       // java/lang/String.substring:(I)Ljava/lang/String;\n+   #43 = Class              #45           // java/lang/String\n+   #44 = NameAndType        #46:#34       // substring:(I)Ljava/lang/String;\n+   #45 = Utf8               java/lang/String\n+   #46 = Utf8               substring\n+   #47 = Methodref          #43.#48       // java/lang/String.trim:()Ljava/lang/String;\n+   #48 = NameAndType        #49:#50       // trim:()Ljava/lang/String;\n+   #49 = Utf8               trim\n+   #50 = Utf8               ()Ljava/lang/String;\n+   #51 = String             #52           // */\n+   #52 = Utf8               */\n+   #53 = Methodref          #43.#54       // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #54 = NameAndType        #55:#56       // endsWith:(Ljava/lang/String;)Z\n+   #55 = Utf8               endsWith\n+   #56 = Utf8               (Ljava/lang/String;)Z\n+   #57 = Methodref          #43.#58       // java/lang/String.length:()I\n+   #58 = NameAndType        #59:#60       // length:()I\n+   #59 = Utf8               length\n+   #60 = Utf8               ()I\n+   #61 = Methodref          #43.#62       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #62 = NameAndType        #46:#63       // substring:(II)Ljava/lang/String;\n+   #63 = Utf8               (II)Ljava/lang/String;\n+   #64 = Class              #65           // com/puppycrawl/tools/checkstyle/api/LineColumn\n+   #65 = Utf8               com/puppycrawl/tools/checkstyle/api/LineColumn\n+   #66 = Methodref          #64.#67       // com/puppycrawl/tools/checkstyle/api/LineColumn.\"<init>\":(II)V\n+   #67 = NameAndType        #5:#68        // \"<init>\":(II)V\n+   #68 = Utf8               (II)V\n+   #69 = Class              #70           // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo\n+   #70 = Utf8               com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo\n+   #71 = Methodref          #69.#72       // com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n+   #72 = NameAndType        #5:#73        // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n+   #73 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n+   #74 = InterfaceMethodref #75.#76       // java/util/List.add:(Ljava/lang/Object;)Z\n+   #75 = Class              #77           // java/util/List\n+   #76 = NameAndType        #78:#79       // add:(Ljava/lang/Object;)Z\n+   #77 = Utf8               java/util/List\n+   #78 = Utf8               add\n+   #79 = Utf8               (Ljava/lang/Object;)Z\n+   #80 = String             #81           // /\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\n+   #81 = Utf8               /\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\n+   #82 = Methodref          #20.#83       // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #83 = NameAndType        #84:#85       // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #84 = Utf8               compile\n+   #85 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #86 = String             #87           // ^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\n+   #87 = Utf8               ^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\n+   #88 = Utf8               JAVADOC_CLOSING_TAG\n+   #89 = Utf8               Ljava/lang/String;\n+   #90 = Utf8               ConstantValue\n+   #91 = Utf8               Code\n+   #92 = Utf8               LineNumberTable\n+   #93 = Utf8               extractBlockTags\n+   #94 = Utf8               ([Ljava/lang/String;)Ljava/util/List;\n+   #95 = Utf8               StackMapTable\n+   #96 = Class              #97           // \"[Ljava/lang/String;\"\n+   #97 = Utf8               [Ljava/lang/String;\n+   #98 = Utf8               Signature\n+   #99 = Utf8               ([Ljava/lang/String;)Ljava/util/List<Lcom/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo;>;\n+  #100 = Utf8               <clinit>\n+  #101 = Utf8               SourceFile\n+  #102 = Utf8               BlockTagUtil.java\n {\n   private static final java.util.regex.Pattern BLOCK_TAG_PATTERN_FIRST_LINE;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.util.regex.Pattern BLOCK_TAG_PATTERN;\n     descriptor: Ljava/util/regex/Pattern;\n@@ -137,17 +137,17 @@\n         line 48: 4\n \n   public static java.util.List<com.puppycrawl.tools.checkstyle.checks.javadoc.utils.TagInfo> extractBlockTags(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Ljava/util/List;\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=6, locals=13, args_size=1\n-         0: new           #2                  // class java/util/ArrayList\n+         0: new           #7                  // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #3                  // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_1\n          8: iconst_0\n          9: istore_2\n         10: iload_2\n         11: aload_0\n         12: arraylength\n         13: if_icmpge     183\n@@ -155,83 +155,83 @@\n         17: ifne          24\n         20: iconst_1\n         21: goto          25\n         24: iconst_0\n         25: istore_3\n         26: iload_3\n         27: ifeq          38\n-        30: getstatic     #4                  // Field BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n+        30: getstatic     #10                 // Field BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n         33: astore        4\n         35: goto          43\n-        38: getstatic     #5                  // Field BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n+        38: getstatic     #16                 // Field BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n         41: astore        4\n         43: aload_0\n         44: iload_2\n         45: aaload\n         46: astore        5\n         48: aload         4\n         50: aload         5\n-        52: invokevirtual #6                  // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        52: invokevirtual #19                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n         55: astore        6\n         57: aload         6\n-        59: invokevirtual #7                  // Method java/util/regex/Matcher.find:()Z\n+        59: invokevirtual #25                 // Method java/util/regex/Matcher.find:()Z\n         62: ifeq          177\n         65: aload         6\n         67: iconst_1\n-        68: invokevirtual #8                  // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        68: invokevirtual #31                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n         71: astore        7\n         73: aload         6\n         75: iconst_1\n-        76: invokevirtual #9                  // Method java/util/regex/Matcher.start:(I)I\n+        76: invokevirtual #35                 // Method java/util/regex/Matcher.start:(I)I\n         79: iconst_1\n         80: isub\n         81: istore        8\n         83: iload_2\n         84: iconst_1\n         85: iadd\n         86: istore        9\n         88: aload         5\n         90: aload         6\n         92: iconst_1\n-        93: invokevirtual #10                 // Method java/util/regex/Matcher.end:(I)I\n-        96: invokevirtual #11                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        93: invokevirtual #39                 // Method java/util/regex/Matcher.end:(I)I\n+        96: invokevirtual #42                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n         99: astore        10\n        101: aload         10\n-       103: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;\n+       103: invokevirtual #47                 // Method java/lang/String.trim:()Ljava/lang/String;\n        106: astore        11\n        108: aload         11\n-       110: ldc           #14                 // String */\n-       112: invokevirtual #15                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+       110: ldc           #51                 // String */\n+       112: invokevirtual #53                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n        115: ifeq          144\n        118: aload         11\n-       120: invokevirtual #16                 // Method java/lang/String.length:()I\n-       123: ldc           #14                 // String */\n-       125: invokevirtual #16                 // Method java/lang/String.length:()I\n+       120: invokevirtual #57                 // Method java/lang/String.length:()I\n+       123: ldc           #51                 // String */\n+       125: invokevirtual #57                 // Method java/lang/String.length:()I\n        128: isub\n        129: istore        12\n        131: aload         11\n        133: iconst_0\n        134: iload         12\n-       136: invokevirtual #17                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       139: invokevirtual #12                 // Method java/lang/String.trim:()Ljava/lang/String;\n+       136: invokevirtual #61                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       139: invokevirtual #47                 // Method java/lang/String.trim:()Ljava/lang/String;\n        142: astore        11\n-       144: new           #18                 // class com/puppycrawl/tools/checkstyle/api/LineColumn\n+       144: new           #64                 // class com/puppycrawl/tools/checkstyle/api/LineColumn\n        147: dup\n        148: iload         9\n        150: iload         8\n-       152: invokespecial #19                 // Method com/puppycrawl/tools/checkstyle/api/LineColumn.\"<init>\":(II)V\n+       152: invokespecial #66                 // Method com/puppycrawl/tools/checkstyle/api/LineColumn.\"<init>\":(II)V\n        155: astore        12\n        157: aload_1\n-       158: new           #20                 // class com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo\n+       158: new           #69                 // class com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo\n        161: dup\n        162: aload         7\n        164: aload         11\n        166: aload         12\n-       168: invokespecial #21                 // Method com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n-       171: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       168: invokespecial #71                 // Method com/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Lcom/puppycrawl/tools/checkstyle/api/LineColumn;)V\n+       171: invokeinterface #74,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        176: pop\n        177: iinc          2, 1\n        180: goto          10\n        183: aload_1\n        184: areturn\n       LineNumberTable:\n         line 57: 0\n@@ -274,26 +274,26 @@\n           stack = []\n         frame_type = 255 /* full_frame */\n           offset_delta = 32\n           locals = [ class \"[Ljava/lang/String;\", class java/util/List, int ]\n           stack = []\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #46                          // ([Ljava/lang/String;)Ljava/util/List<Lcom/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo;>;\n+    Signature: #99                          // ([Ljava/lang/String;)Ljava/util/List<Lcom/puppycrawl/tools/checkstyle/checks/javadoc/utils/TagInfo;>;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #23                 // String /\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\n-         2: invokestatic  #24                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-         5: putstatic     #4                  // Field BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n-         8: ldc           #25                 // String ^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\n-        10: invokestatic  #24                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        13: putstatic     #5                  // Field BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n+         0: ldc           #80                 // String /\\\\*{2,}\\\\s*@(\\\\p{Alpha}+)\\\\s\n+         2: invokestatic  #82                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+         5: putstatic     #10                 // Field BLOCK_TAG_PATTERN_FIRST_LINE:Ljava/util/regex/Pattern;\n+         8: ldc           #86                 // String ^\\\\s*\\\\**\\\\s*@(\\\\p{Alpha}+)\\\\s\n+        10: invokestatic  #82                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        13: putstatic     #16                 // Field BLOCK_TAG_PATTERN:Ljava/util/regex/Pattern;\n         16: return\n       LineNumberTable:\n         line 36: 0\n         line 40: 8\n }\n SourceFile: \"BlockTagUtil.java\"\n"}]}
