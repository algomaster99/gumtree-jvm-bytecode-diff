{"diffoscope-json-version": 1, "source1": "first/ParseException.class", "source2": "second/ParseException.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -42,35 +42,35 @@\n             }\n             expected.append(eol).append(\"    \");\n         }\n         String retval = \"Encountered \\\"\";\n         Token tok = currentToken.next;\n         for (int k = 0; k < maxSize; ++k) {\n             if (k != 0) {\n-                retval += \" \";\n+                retval = String.valueOf(retval) + \" \";\n             }\n             if (tok.kind == 0) {\n-                retval += tokenImage[0];\n+                retval = String.valueOf(retval) + tokenImage[0];\n                 break;\n             }\n-            retval = retval + \" \" + tokenImage[tok.kind];\n-            retval += \" \\\"\";\n-            retval += add_escapes(tok.image);\n-            retval += \" \\\"\";\n+            retval = String.valueOf(retval) + \" \" + tokenImage[tok.kind];\n+            retval = String.valueOf(retval) + \" \\\"\";\n+            retval = String.valueOf(retval) + add_escapes(tok.image);\n+            retval = String.valueOf(retval) + \" \\\"\";\n             tok = tok.next;\n         }\n-        retval = retval + \"\\\" at line \" + currentToken.next.beginLine + \", column \" + currentToken.next.beginColumn;\n-        retval = retval + \".\" + eol;\n+        retval = String.valueOf(retval) + \"\\\" at line \" + currentToken.next.beginLine + \", column \" + currentToken.next.beginColumn;\n+        retval = String.valueOf(retval) + \".\" + eol;\n         if (expectedTokenSequences.length == 1) {\n-            retval = retval + \"Was expecting:\" + eol + \"    \";\n+            retval = String.valueOf(retval) + \"Was expecting:\" + eol + \"    \";\n         }\n         else {\n-            retval = retval + \"Was expecting one of:\" + eol + \"    \";\n+            retval = String.valueOf(retval) + \"Was expecting one of:\" + eol + \"    \";\n         }\n-        retval += expected.toString();\n+        retval = String.valueOf(retval) + expected.toString();\n         return retval;\n     }\n     \n     static String add_escapes(final String str) {\n         final StringBuffer retval = new StringBuffer();\n         for (int i = 0; i < str.length(); ++i) {\n             switch (str.charAt(i)) {\n"}]}
