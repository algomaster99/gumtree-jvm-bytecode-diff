{"diffoscope-json-version": 1, "source1": "first/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.class", "source2": "second/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,118 @@\n-  SHA-256 checksum 01566a9aa8a557f78cb1f01fe132420e9441c5d04c657c75dfda8ef689d0a1d0\n+  SHA-256 checksum 2bbbcd270f41570e170f1f66d991c73857e26cdcd1c28e9f0d10cac61e21b4a4\n   Compiled from \"FixedLengthBlockOutputStream.java\"\n class org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel implements java.nio.channels.WritableByteChannel\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n-  super_class: #8                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 5, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.\"<init>\":(Ljava/io/OutputStream;)V\n-    #2 = Class              #4            // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n-    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/OutputStream;)V\n-    #4 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n-    #5 = Utf8               <init>\n-    #6 = Utf8               (Ljava/io/OutputStream;)V\n-    #7 = Methodref          #8.#9         // java/lang/Object.\"<init>\":()V\n-    #8 = Class              #10           // java/lang/Object\n-    #9 = NameAndType        #5:#11        // \"<init>\":()V\n-   #10 = Utf8               java/lang/Object\n-   #11 = Utf8               ()V\n-   #12 = Class              #13           // java/util/concurrent/atomic/AtomicBoolean\n-   #13 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n-   #14 = Methodref          #12.#15       // java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n-   #15 = NameAndType        #5:#16        // \"<init>\":(Z)V\n-   #16 = Utf8               (Z)V\n-   #17 = Fieldref           #2.#18        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-   #18 = NameAndType        #19:#20       // closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-   #19 = Utf8               closed\n-   #20 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;\n-   #21 = Fieldref           #2.#22        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.out:Ljava/io/OutputStream;\n-   #22 = NameAndType        #23:#24       // out:Ljava/io/OutputStream;\n-   #23 = Utf8               out\n-   #24 = Utf8               Ljava/io/OutputStream;\n-   #25 = Methodref          #12.#26       // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n-   #26 = NameAndType        #27:#28       // compareAndSet:(ZZ)Z\n-   #27 = Utf8               compareAndSet\n-   #28 = Utf8               (ZZ)Z\n-   #29 = Methodref          #30.#31       // java/io/OutputStream.close:()V\n-   #30 = Class              #32           // java/io/OutputStream\n-   #31 = NameAndType        #33:#11       // close:()V\n-   #32 = Utf8               java/io/OutputStream\n-   #33 = Utf8               close\n-   #34 = Methodref          #12.#35       // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-   #35 = NameAndType        #36:#37       // get:()Z\n-   #36 = Utf8               get\n-   #37 = Utf8               ()Z\n-   #38 = Methodref          #2.#39        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.isOpen:()Z\n-   #39 = NameAndType        #40:#37       // isOpen:()Z\n-   #40 = Utf8               isOpen\n-   #41 = Class              #42           // java/nio/channels/ClosedChannelException\n-   #42 = Utf8               java/nio/channels/ClosedChannelException\n-   #43 = Methodref          #41.#9        // java/nio/channels/ClosedChannelException.\"<init>\":()V\n-   #44 = Methodref          #45.#46       // java/nio/ByteBuffer.hasArray:()Z\n-   #45 = Class              #47           // java/nio/ByteBuffer\n-   #46 = NameAndType        #48:#37       // hasArray:()Z\n-   #47 = Utf8               java/nio/ByteBuffer\n-   #48 = Utf8               hasArray\n-   #49 = Class              #50           // java/io/IOException\n-   #50 = Utf8               java/io/IOException\n-   #51 = String             #52           // Direct buffer somehow written to BufferAtATimeOutputChannel\n-   #52 = Utf8               Direct buffer somehow written to BufferAtATimeOutputChannel\n-   #53 = Methodref          #49.#54       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #54 = NameAndType        #5:#55        // \"<init>\":(Ljava/lang/String;)V\n-   #55 = Utf8               (Ljava/lang/String;)V\n-   #56 = Methodref          #45.#57       // java/nio/ByteBuffer.position:()I\n-   #57 = NameAndType        #58:#59       // position:()I\n-   #58 = Utf8               position\n-   #59 = Utf8               ()I\n-   #60 = Methodref          #45.#61       // java/nio/ByteBuffer.limit:()I\n-   #61 = NameAndType        #62:#59       // limit:()I\n-   #62 = Utf8               limit\n-   #63 = Methodref          #45.#64       // java/nio/ByteBuffer.array:()[B\n-   #64 = NameAndType        #65:#66       // array:()[B\n-   #65 = Utf8               array\n-   #66 = Utf8               ()[B\n-   #67 = Methodref          #45.#68       // java/nio/ByteBuffer.arrayOffset:()I\n-   #68 = NameAndType        #69:#59       // arrayOffset:()I\n-   #69 = Utf8               arrayOffset\n-   #70 = Methodref          #30.#71       // java/io/OutputStream.write:([BII)V\n-   #71 = NameAndType        #72:#73       // write:([BII)V\n-   #72 = Utf8               write\n-   #73 = Utf8               ([BII)V\n-   #74 = Methodref          #45.#75       // java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n-   #75 = NameAndType        #58:#76       // position:(I)Ljava/nio/Buffer;\n-   #76 = Utf8               (I)Ljava/nio/Buffer;\n-   #77 = Methodref          #2.#31        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.close:()V\n-   #78 = Class              #79           // java/nio/channels/WritableByteChannel\n-   #79 = Utf8               java/nio/channels/WritableByteChannel\n-   #80 = Utf8               Code\n-   #81 = Utf8               LineNumberTable\n-   #82 = Utf8               LocalVariableTable\n-   #83 = Utf8               this\n-   #84 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n-   #85 = Utf8               StackMapTable\n-   #86 = Utf8               Exceptions\n-   #87 = Utf8               (Ljava/nio/ByteBuffer;)I\n+    #1 = Class              #2            // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n+    #2 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // java/nio/channels/WritableByteChannel\n+    #6 = Utf8               java/nio/channels/WritableByteChannel\n+    #7 = Utf8               out\n+    #8 = Utf8               Ljava/io/OutputStream;\n+    #9 = Utf8               closed\n+   #10 = Utf8               Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Ljava/io/OutputStream;)V\n+   #13 = Utf8               Code\n+   #14 = Methodref          #3.#15        // java/lang/Object.\"<init>\":()V\n+   #15 = NameAndType        #11:#16       // \"<init>\":()V\n+   #16 = Utf8               ()V\n+   #17 = Class              #18           // java/util/concurrent/atomic/AtomicBoolean\n+   #18 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n+   #19 = Methodref          #17.#20       // java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n+   #20 = NameAndType        #11:#21       // \"<init>\":(Z)V\n+   #21 = Utf8               (Z)V\n+   #22 = Fieldref           #1.#23        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #23 = NameAndType        #9:#10        // closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+   #24 = Fieldref           #1.#25        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.out:Ljava/io/OutputStream;\n+   #25 = NameAndType        #7:#8         // out:Ljava/io/OutputStream;\n+   #26 = Utf8               LineNumberTable\n+   #27 = Utf8               LocalVariableTable\n+   #28 = Utf8               this\n+   #29 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n+   #30 = Utf8               close\n+   #31 = Utf8               Exceptions\n+   #32 = Class              #33           // java/io/IOException\n+   #33 = Utf8               java/io/IOException\n+   #34 = Methodref          #17.#35       // java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n+   #35 = NameAndType        #36:#37       // compareAndSet:(ZZ)Z\n+   #36 = Utf8               compareAndSet\n+   #37 = Utf8               (ZZ)Z\n+   #38 = Methodref          #39.#41       // java/io/OutputStream.close:()V\n+   #39 = Class              #40           // java/io/OutputStream\n+   #40 = Utf8               java/io/OutputStream\n+   #41 = NameAndType        #30:#16       // close:()V\n+   #42 = Utf8               StackMapTable\n+   #43 = Utf8               isOpen\n+   #44 = Utf8               ()Z\n+   #45 = Methodref          #17.#46       // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+   #46 = NameAndType        #47:#44       // get:()Z\n+   #47 = Utf8               get\n+   #48 = Utf8               write\n+   #49 = Utf8               (Ljava/nio/ByteBuffer;)I\n+   #50 = Methodref          #1.#51        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.isOpen:()Z\n+   #51 = NameAndType        #43:#44       // isOpen:()Z\n+   #52 = Class              #53           // java/nio/channels/ClosedChannelException\n+   #53 = Utf8               java/nio/channels/ClosedChannelException\n+   #54 = Methodref          #52.#15       // java/nio/channels/ClosedChannelException.\"<init>\":()V\n+   #55 = Methodref          #56.#58       // java/nio/ByteBuffer.hasArray:()Z\n+   #56 = Class              #57           // java/nio/ByteBuffer\n+   #57 = Utf8               java/nio/ByteBuffer\n+   #58 = NameAndType        #59:#44       // hasArray:()Z\n+   #59 = Utf8               hasArray\n+   #60 = String             #61           // Direct buffer somehow written to BufferAtATimeOutputChannel\n+   #61 = Utf8               Direct buffer somehow written to BufferAtATimeOutputChannel\n+   #62 = Methodref          #32.#63       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #63 = NameAndType        #11:#64       // \"<init>\":(Ljava/lang/String;)V\n+   #64 = Utf8               (Ljava/lang/String;)V\n+   #65 = Methodref          #56.#66       // java/nio/ByteBuffer.position:()I\n+   #66 = NameAndType        #67:#68       // position:()I\n+   #67 = Utf8               position\n+   #68 = Utf8               ()I\n+   #69 = Methodref          #56.#70       // java/nio/ByteBuffer.limit:()I\n+   #70 = NameAndType        #71:#68       // limit:()I\n+   #71 = Utf8               limit\n+   #72 = Methodref          #56.#73       // java/nio/ByteBuffer.array:()[B\n+   #73 = NameAndType        #74:#75       // array:()[B\n+   #74 = Utf8               array\n+   #75 = Utf8               ()[B\n+   #76 = Methodref          #56.#77       // java/nio/ByteBuffer.arrayOffset:()I\n+   #77 = NameAndType        #78:#68       // arrayOffset:()I\n+   #78 = Utf8               arrayOffset\n+   #79 = Methodref          #39.#80       // java/io/OutputStream.write:([BII)V\n+   #80 = NameAndType        #48:#81       // write:([BII)V\n+   #81 = Utf8               ([BII)V\n+   #82 = Methodref          #56.#83       // java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n+   #83 = NameAndType        #67:#84       // position:(I)Ljava/nio/Buffer;\n+   #84 = Utf8               (I)Ljava/nio/Buffer;\n+   #85 = Methodref          #1.#41        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.close:()V\n+   #86 = Utf8               buffer\n+   #87 = Utf8               Ljava/nio/ByteBuffer;\n    #88 = Utf8               pos\n    #89 = Utf8               I\n    #90 = Utf8               len\n    #91 = Utf8               e\n    #92 = Utf8               Ljava/io/IOException;\n-   #93 = Utf8               buffer\n-   #94 = Utf8               Ljava/nio/ByteBuffer;\n-   #95 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;)V\n-   #96 = Utf8               x0\n-   #97 = Utf8               x1\n-   #98 = Utf8               Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               FixedLengthBlockOutputStream.java\n-  #101 = Utf8               InnerClasses\n-  #102 = Class              #103          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n-  #103 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n-  #104 = Utf8               BufferAtATimeOutputChannel\n-  #105 = Class              #106          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n-  #106 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n+   #93 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;)V\n+   #94 = Methodref          #1.#95        // org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel.\"<init>\":(Ljava/io/OutputStream;)V\n+   #95 = NameAndType        #11:#12       // \"<init>\":(Ljava/io/OutputStream;)V\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               FixedLengthBlockOutputStream.java\n+   #98 = Utf8               InnerClasses\n+   #99 = Class              #100          // org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n+  #100 = Utf8               org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n+  #101 = Utf8               BufferAtATimeOutputChannel\n {\n   private final java.io.OutputStream out;\n     descriptor: Ljava/io/OutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.concurrent.atomic.AtomicBoolean closed;\n     descriptor: Ljava/util/concurrent/atomic/AtomicBoolean;\n@@ -125,133 +120,135 @@\n \n   private org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #14                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #12                 // class java/util/concurrent/atomic/AtomicBoolean\n+         5: new           #17                 // class java/util/concurrent/atomic/AtomicBoolean\n          8: dup\n          9: iconst_0\n-        10: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n-        13: putfield      #17                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+        10: invokespecial #19                 // Method java/util/concurrent/atomic/AtomicBoolean.\"<init>\":(Z)V\n+        13: putfield      #22                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n         16: aload_0\n         17: aload_1\n-        18: putfield      #21                 // Field out:Ljava/io/OutputStream;\n+        18: putfield      #24                 // Field out:Ljava/io/OutputStream;\n         21: return\n       LineNumberTable:\n         line 63: 0\n         line 61: 4\n         line 64: 16\n         line 65: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n             0      22     1   out   Ljava/io/OutputStream;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+         1: getfield      #22                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n          4: iconst_0\n          5: iconst_1\n-         6: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n+         6: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z\n          9: ifeq          19\n         12: aload_0\n-        13: getfield      #21                 // Field out:Ljava/io/OutputStream;\n-        16: invokevirtual #29                 // Method java/io/OutputStream.close:()V\n+        13: getfield      #24                 // Field out:Ljava/io/OutputStream;\n+        16: invokevirtual #38                 // Method java/io/OutputStream.close:()V\n         19: return\n       LineNumberTable:\n         line 69: 0\n         line 70: 12\n         line 72: 19\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n       StackMapTable: number_of_entries = 1\n         frame_type = 19 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public boolean isOpen();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n-         4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-         7: ifne          14\n-        10: iconst_1\n+         1: getfield      #22                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;\n+         4: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+         7: ifeq          14\n+        10: iconst_0\n         11: goto          15\n-        14: iconst_0\n+        14: iconst_1\n         15: ireturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public int write(java.nio.ByteBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/ByteBuffer;)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n-         1: invokevirtual #38                 // Method isOpen:()Z\n+         1: invokevirtual #50                 // Method isOpen:()Z\n          4: ifne          15\n-         7: new           #41                 // class java/nio/channels/ClosedChannelException\n+         7: new           #52                 // class java/nio/channels/ClosedChannelException\n         10: dup\n-        11: invokespecial #43                 // Method java/nio/channels/ClosedChannelException.\"<init>\":()V\n+        11: invokespecial #54                 // Method java/nio/channels/ClosedChannelException.\"<init>\":()V\n         14: athrow\n         15: aload_1\n-        16: invokevirtual #44                 // Method java/nio/ByteBuffer.hasArray:()Z\n+        16: invokevirtual #55                 // Method java/nio/ByteBuffer.hasArray:()Z\n         19: ifne          32\n-        22: new           #49                 // class java/io/IOException\n+        22: new           #32                 // class java/io/IOException\n         25: dup\n-        26: ldc           #51                 // String Direct buffer somehow written to BufferAtATimeOutputChannel\n-        28: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #60                 // String Direct buffer somehow written to BufferAtATimeOutputChannel\n+        28: invokespecial #62                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: aload_1\n-        33: invokevirtual #56                 // Method java/nio/ByteBuffer.position:()I\n+        33: invokevirtual #65                 // Method java/nio/ByteBuffer.position:()I\n         36: istore_2\n         37: aload_1\n-        38: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:()I\n+        38: invokevirtual #69                 // Method java/nio/ByteBuffer.limit:()I\n         41: iload_2\n         42: isub\n         43: istore_3\n         44: aload_0\n-        45: getfield      #21                 // Field out:Ljava/io/OutputStream;\n+        45: getfield      #24                 // Field out:Ljava/io/OutputStream;\n         48: aload_1\n-        49: invokevirtual #63                 // Method java/nio/ByteBuffer.array:()[B\n+        49: invokevirtual #72                 // Method java/nio/ByteBuffer.array:()[B\n         52: aload_1\n-        53: invokevirtual #67                 // Method java/nio/ByteBuffer.arrayOffset:()I\n+        53: invokevirtual #76                 // Method java/nio/ByteBuffer.arrayOffset:()I\n         56: iload_2\n         57: iadd\n         58: iload_3\n-        59: invokevirtual #70                 // Method java/io/OutputStream.write:([BII)V\n+        59: invokevirtual #79                 // Method java/io/OutputStream.write:([BII)V\n         62: aload_1\n         63: aload_1\n-        64: invokevirtual #60                 // Method java/nio/ByteBuffer.limit:()I\n-        67: invokevirtual #74                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n+        64: invokevirtual #69                 // Method java/nio/ByteBuffer.limit:()I\n+        67: invokevirtual #82                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;\n         70: pop\n         71: iload_3\n         72: ireturn\n         73: astore_2\n         74: aload_0\n-        75: invokevirtual #77                 // Method close:()V\n+        75: invokevirtual #85                 // Method close:()V\n         78: goto          82\n         81: astore_3\n         82: aload_2\n         83: athrow\n       Exception table:\n          from    to  target type\n             32    72    73   Class java/io/IOException\n@@ -264,51 +261,44 @@\n         line 89: 32\n         line 90: 37\n         line 91: 44\n         line 92: 62\n         line 93: 71\n         line 94: 73\n         line 96: 74\n-        line 98: 78\n-        line 97: 81\n+        line 97: 78\n         line 99: 82\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n+            0      84     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n+            0      84     1 buffer   Ljava/nio/ByteBuffer;\n            37      36     2   pos   I\n            44      29     3   len   I\n            74      10     2     e   Ljava/io/IOException;\n-            0      84     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n-            0      84     1 buffer   Ljava/nio/ByteBuffer;\n       StackMapTable: number_of_entries = 5\n         frame_type = 15 /* same */\n         frame_type = 16 /* same */\n         frame_type = 104 /* same_locals_1_stack_item */\n           stack = [ class java/io/IOException ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 7\n           locals = [ class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel, class java/nio/ByteBuffer, class java/io/IOException ]\n           stack = [ class java/io/IOException ]\n         frame_type = 0 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n-  org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel(java.io.OutputStream, org.apache.commons.compress.utils.FixedLengthBlockOutputStream$1);\n-    descriptor: (Ljava/io/OutputStream;Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;)V\n+  org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel(java.io.OutputStream, org.apache.commons.compress.utils.FixedLengthBlockOutputStream$BufferAtATimeOutputChannel);\n+    descriptor: (Ljava/io/OutputStream;Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method \"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #94                 // Method \"<init>\":(Ljava/io/OutputStream;)V\n          5: return\n       LineNumberTable:\n-        line 58: 0\n+        line 63: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0  this   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel;\n-            0       6     1    x0   Ljava/io/OutputStream;\n-            0       6     2    x1   Lorg/apache/commons/compress/utils/FixedLengthBlockOutputStream$1;\n }\n SourceFile: \"FixedLengthBlockOutputStream.java\"\n InnerClasses:\n-  private static #104= #2 of #102;        // BufferAtATimeOutputChannel=class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel of class org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n-  static #105;                            // class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$1\n+  private static #101= #1 of #99;         // BufferAtATimeOutputChannel=class org/apache/commons/compress/utils/FixedLengthBlockOutputStream$BufferAtATimeOutputChannel of class org/apache/commons/compress/utils/FixedLengthBlockOutputStream\n"}]}
