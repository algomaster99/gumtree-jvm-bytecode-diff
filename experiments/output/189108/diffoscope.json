{"diffoscope-json-version": 1, "source1": "first/ArchiveStreamFactory.class", "source2": "second/ArchiveStreamFactory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,481 +1,481 @@\n-  SHA-256 checksum ca2412fc5c48cd6b38e2ba7d7be449cfece8029fdfe6a79326ed41ba26bc0ceb\n+  SHA-256 checksum 23feb89a888606ba3bcd75e48f077188c7c1da765e9324b4b9563e3f6111819a\n   Compiled from \"ArchiveStreamFactory.java\"\n public class org.apache.commons.compress.archivers.ArchiveStreamFactory implements org.apache.commons.compress.archivers.ArchiveStreamProvider\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #9                          // org/apache/commons/compress/archivers/ArchiveStreamFactory\n-  super_class: #136                       // java/lang/Object\n+  this_class: #31                         // org/apache/commons/compress/archivers/ArchiveStreamFactory\n+  super_class: #166                       // java/lang/Object\n   interfaces: 1, fields: 20, methods: 25, attributes: 3\n Constant pool:\n-    #1 = Class              #253          // org/apache/commons/compress/archivers/ArchiveStreamProvider\n-    #2 = Methodref          #254.#255     // java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;\n-    #3 = Methodref          #256.#257     // java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n-    #4 = Class              #258          // java/lang/IllegalArgumentException\n-    #5 = String             #259          // Stream must not be null.\n-    #6 = Methodref          #4.#260       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Methodref          #190.#261     // java/io/InputStream.markSupported:()Z\n-    #8 = String             #262          // Mark is not supported.\n-    #9 = Class              #263          // org/apache/commons/compress/archivers/ArchiveStreamFactory\n-   #10 = Methodref          #190.#264     // java/io/InputStream.mark:(I)V\n-   #11 = Methodref          #265.#266     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #12 = Methodref          #190.#267     // java/io/InputStream.reset:()V\n-   #13 = Class              #268          // java/io/IOException\n-   #14 = Class              #269          // org/apache/commons/compress/archivers/ArchiveException\n-   #15 = String             #270          // IOException while reading signature.\n-   #16 = Methodref          #14.#271      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-   #17 = Methodref          #68.#272      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n-   #18 = String             #229          // zip\n-   #19 = Methodref          #73.#272      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n-   #20 = String             #273          // jar\n-   #21 = Methodref          #63.#272      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n-   #22 = String             #274          // ar\n-   #23 = Methodref          #76.#272      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n-   #24 = String             #275          // cpio\n-   #25 = Methodref          #65.#272      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n-   #26 = String             #276          // arj\n-   #27 = Methodref          #277.#272     // org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n-   #28 = String             #278          // 7z\n-   #29 = String             #279          // IOException while reading dump signature\n-   #30 = Methodref          #79.#272      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n-   #31 = String             #280          // dump\n-   #32 = String             #281          // IOException while reading tar signature\n-   #33 = Methodref          #35.#272      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n-   #34 = String             #282          // tar\n-   #35 = Class              #283          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-   #36 = Class              #284          // java/io/ByteArrayInputStream\n-   #37 = Methodref          #36.#285      // java/io/ByteArrayInputStream.\"<init>\":([B)V\n-   #38 = Methodref          #35.#286      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #39 = Methodref          #35.#287      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-   #40 = Methodref          #288.#289     // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n-   #41 = Methodref          #265.#290     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-   #42 = Class              #291          // java/lang/Exception\n-   #43 = String             #292          // No Archiver found for the stream signature\n-   #44 = Methodref          #14.#260      // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = InvokeDynamic      #0:#298       // #0:run:()Ljava/security/PrivilegedAction;\n-   #46 = Methodref          #299.#300     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-   #47 = Class              #301          // java/util/SortedMap\n-   #48 = InvokeDynamic      #1:#298       // #1:run:()Ljava/security/PrivilegedAction;\n-   #49 = InvokeDynamic      #2:#306       // #2:accept:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n-   #50 = InterfaceMethodref #307.#308     // java/util/Set.forEach:(Ljava/util/function/Consumer;)V\n-   #51 = Fieldref           #309.#310     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #52 = Methodref          #117.#311     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #53 = Methodref          #9.#260       // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":(Ljava/lang/String;)V\n-   #54 = Methodref          #136.#312     // java/lang/Object.\"<init>\":()V\n-   #55 = Fieldref           #9.#313       // org/apache/commons/compress/archivers/ArchiveStreamFactory.encoding:Ljava/lang/String;\n-   #56 = Fieldref           #9.#314       // org/apache/commons/compress/archivers/ArchiveStreamFactory.entryEncoding:Ljava/lang/String;\n-   #57 = Methodref          #9.#315       // org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-   #58 = Methodref          #9.#316       // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #59 = Methodref          #9.#317       // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #60 = String             #318          // Archivername must not be null.\n-   #61 = String             #319          // InputStream must not be null.\n-   #62 = Methodref          #117.#320     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #63 = Class              #321          // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-   #64 = Methodref          #63.#286      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #65 = Class              #322          // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-   #66 = Methodref          #65.#323      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #67 = Methodref          #65.#286      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #68 = Class              #324          // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-   #69 = Methodref          #68.#323      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #70 = Methodref          #68.#286      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #71 = Methodref          #35.#323      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #72 = String             #325          // apk\n-   #73 = Class              #326          // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-   #74 = Methodref          #73.#323      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #75 = Methodref          #73.#286      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #76 = Class              #327          // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-   #77 = Methodref          #76.#323      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #78 = Methodref          #76.#286      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #79 = Class              #328          // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-   #80 = Methodref          #79.#323      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #81 = Methodref          #79.#286      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #82 = Class              #329          // org/apache/commons/compress/archivers/StreamingNotSupportedException\n-   #83 = Methodref          #82.#260      // org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n-   #84 = Methodref          #9.#330       // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-   #85 = Methodref          #9.#331       // org/apache/commons/compress/archivers/ArchiveStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n-   #86 = InterfaceMethodref #47.#332      // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #87 = InterfaceMethodref #1.#317       // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-   #88 = Class              #333          // java/lang/StringBuilder\n-   #89 = Methodref          #88.#312      // java/lang/StringBuilder.\"<init>\":()V\n-   #90 = String             #334          // Archiver:\n-   #91 = Methodref          #88.#335      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #92 = String             #336          //  not found.\n-   #93 = Methodref          #88.#337      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #94 = Methodref          #9.#338       // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-   #95 = String             #339          // OutputStream must not be null.\n-   #96 = Class              #340          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-   #97 = Methodref          #96.#341      // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #98 = Class              #342          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-   #99 = Methodref          #98.#341      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #100 = Methodref          #98.#343      // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n-  #101 = Class              #344          // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n-  #102 = Methodref          #101.#345     // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #103 = Methodref          #101.#341     // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #104 = Class              #346          // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n-  #105 = Methodref          #104.#345     // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #106 = Methodref          #104.#341     // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #107 = Class              #347          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #108 = Methodref          #107.#345     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #109 = Methodref          #107.#341     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-  #110 = Methodref          #9.#348       // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #111 = InterfaceMethodref #1.#338       // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #112 = Fieldref           #9.#349       // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveInputStreamProviders:Ljava/util/SortedMap;\n-  #113 = Methodref          #9.#350       // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #114 = Methodref          #351.#352     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #115 = Fieldref           #9.#353       // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveOutputStreamProviders:Ljava/util/SortedMap;\n-  #116 = Methodref          #9.#354       // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #117 = Class              #355          // java/lang/String\n-  #118 = Methodref          #356.#357     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #119 = Class              #358          // java/lang/IllegalStateException\n-  #120 = String             #359          // Cannot overide encoding set by the constructor\n-  #121 = Methodref          #119.#260     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #122 = Methodref          #123.#360     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #123 = Class              #361          // java/util/TreeMap\n-  #124 = Methodref          #123.#312     // java/util/TreeMap.\"<init>\":()V\n-  #125 = Fieldref           #9.#362       // org/apache/commons/compress/archivers/ArchiveStreamFactory.DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #126 = Methodref          #9.#363       // org/apache/commons/compress/archivers/ArchiveStreamFactory.getOutputStreamArchiveNames:()Ljava/util/Set;\n-  #127 = Methodref          #9.#364       // org/apache/commons/compress/archivers/ArchiveStreamFactory.putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-  #128 = Methodref          #9.#365       // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveStreamProviderIterable:()Ljava/lang/Iterable;\n-  #129 = InvokeDynamic      #3:#368       // #3:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n-  #130 = InterfaceMethodref #369.#308     // java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V\n-  #131 = InterfaceMethodref #1.#363       // org/apache/commons/compress/archivers/ArchiveStreamProvider.getOutputStreamArchiveNames:()Ljava/util/Set;\n-  #132 = Methodref          #9.#370       // org/apache/commons/compress/archivers/ArchiveStreamFactory.getInputStreamArchiveNames:()Ljava/util/Set;\n-  #133 = InvokeDynamic      #4:#368       // #4:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n-  #134 = InterfaceMethodref #1.#370       // org/apache/commons/compress/archivers/ArchiveStreamProvider.getInputStreamArchiveNames:()Ljava/util/Set;\n-  #135 = Methodref          #9.#312       // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":()V\n-  #136 = Class              #372          // java/lang/Object\n-  #137 = Utf8               TAR_HEADER_SIZE\n-  #138 = Utf8               I\n-  #139 = Utf8               ConstantValue\n-  #140 = Integer            512\n-  #141 = Utf8               DUMP_SIGNATURE_SIZE\n-  #142 = Integer            32\n-  #143 = Utf8               SIGNATURE_SIZE\n-  #144 = Integer            12\n-  #145 = Utf8               DEFAULT\n-  #146 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #147 = Utf8               APK\n-  #148 = Utf8               Ljava/lang/String;\n-  #149 = Utf8               XAPK\n-  #150 = String             #373          // xapk\n-  #151 = Utf8               APKS\n-  #152 = String             #374          // apks\n-  #153 = Utf8               APKM\n-  #154 = String             #375          // apkm\n-  #155 = Utf8               AR\n-  #156 = Utf8               ARJ\n-  #157 = Utf8               CPIO\n-  #158 = Utf8               DUMP\n-  #159 = Utf8               JAR\n-  #160 = Utf8               TAR\n-  #161 = Utf8               ZIP\n-  #162 = Utf8               SEVEN_Z\n-  #163 = Utf8               encoding\n-  #164 = Utf8               entryEncoding\n-  #165 = Utf8               archiveInputStreamProviders\n-  #166 = Utf8               Ljava/util/SortedMap;\n-  #167 = Utf8               Signature\n-  #168 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #169 = Utf8               archiveOutputStreamProviders\n-  #170 = Utf8               archiveStreamProviderIterable\n-  #171 = Utf8               ()Ljava/lang/Iterable;\n-  #172 = Utf8               Code\n-  #173 = Utf8               LineNumberTable\n-  #174 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #175 = Utf8               detect\n-  #176 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n-  #177 = Utf8               LocalVariableTable\n-  #178 = Utf8               e\n-  #179 = Utf8               Ljava/io/IOException;\n-  #180 = Utf8               tais\n-  #181 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveInputStream;\n-  #182 = Utf8               in\n-  #183 = Utf8               Ljava/io/InputStream;\n-  #184 = Utf8               signature\n-  #185 = Utf8               [B\n-  #186 = Utf8               signatureLength\n-  #187 = Utf8               dumpsig\n-  #188 = Utf8               tarHeader\n-  #189 = Utf8               StackMapTable\n-  #190 = Class              #376          // java/io/InputStream\n-  #191 = Class              #185          // \"[B\"\n-  #192 = Class              #377          // java/lang/Throwable\n-  #193 = Utf8               Exceptions\n-  #194 = Utf8               findAvailableArchiveInputStreamProviders\n-  #195 = Utf8               ()Ljava/util/SortedMap;\n-  #196 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #197 = Utf8               findAvailableArchiveOutputStreamProviders\n-  #198 = Utf8               putAll\n-  #199 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-  #200 = Utf8               names\n-  #201 = Utf8               Ljava/util/Set;\n-  #202 = Utf8               provider\n-  #203 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n-  #204 = Utf8               map\n-  #205 = Utf8               Ljava/util/TreeMap;\n-  #206 = Utf8               LocalVariableTypeTable\n-  #207 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #208 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-  #209 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n-  #210 = Utf8               toKey\n-  #211 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #212 = Utf8               name\n-  #213 = Utf8               <init>\n-  #214 = Utf8               ()V\n-  #215 = Utf8               this\n-  #216 = Utf8               (Ljava/lang/String;)V\n-  #217 = Utf8               createArchiveInputStream\n-  #218 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #219 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #220 = Utf8               archiverName\n-  #221 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #222 = Utf8               actualEncoding\n-  #223 = Utf8               archiveStreamProvider\n-  #224 = Utf8               createArchiveOutputStream\n-  #225 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #226 = Utf8               out\n-  #227 = Utf8               Ljava/io/OutputStream;\n-  #228 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #229 = Utf8               zip\n-  #230 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n-  #231 = Utf8               getArchiveInputStreamProviders\n-  #232 = Utf8               getArchiveOutputStreamProviders\n-  #233 = Utf8               getEntryEncoding\n-  #234 = Utf8               ()Ljava/lang/String;\n-  #235 = Utf8               getInputStreamArchiveNames\n-  #236 = Utf8               ()Ljava/util/Set;\n-  #237 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n-  #238 = Utf8               getOutputStreamArchiveNames\n-  #239 = Utf8               setEntryEncoding\n-  #240 = Utf8               Deprecated\n-  #241 = Utf8               RuntimeVisibleAnnotations\n-  #242 = Utf8               Ljava/lang/Deprecated;\n-  #243 = Utf8               lambda$putAll$4\n-  #244 = Utf8               (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n-  #245 = Utf8               lambda$findAvailableArchiveOutputStreamProviders$3\n-  #246 = Utf8               lambda$findAvailableArchiveOutputStreamProviders$2\n-  #247 = Utf8               (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #248 = Utf8               lambda$findAvailableArchiveInputStreamProviders$1\n-  #249 = Utf8               lambda$findAvailableArchiveInputStreamProviders$0\n-  #250 = Utf8               <clinit>\n-  #251 = Utf8               SourceFile\n-  #252 = Utf8               ArchiveStreamFactory.java\n-  #253 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamProvider\n-  #254 = Class              #378          // java/lang/ClassLoader\n-  #255 = NameAndType        #379:#380     // getSystemClassLoader:()Ljava/lang/ClassLoader;\n-  #256 = Class              #381          // java/util/ServiceLoader\n-  #257 = NameAndType        #382:#383     // load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n-  #258 = Utf8               java/lang/IllegalArgumentException\n-  #259 = Utf8               Stream must not be null.\n-  #260 = NameAndType        #213:#216     // \"<init>\":(Ljava/lang/String;)V\n-  #261 = NameAndType        #384:#385     // markSupported:()Z\n-  #262 = Utf8               Mark is not supported.\n-  #263 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory\n-  #264 = NameAndType        #386:#387     // mark:(I)V\n-  #265 = Class              #388          // org/apache/commons/compress/utils/IOUtils\n-  #266 = NameAndType        #389:#390     // readFully:(Ljava/io/InputStream;[B)I\n-  #267 = NameAndType        #391:#214     // reset:()V\n-  #268 = Utf8               java/io/IOException\n-  #269 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n-  #270 = Utf8               IOException while reading signature.\n-  #271 = NameAndType        #213:#392     // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n-  #272 = NameAndType        #393:#394     // matches:([BI)Z\n-  #273 = Utf8               jar\n-  #274 = Utf8               ar\n-  #275 = Utf8               cpio\n-  #276 = Utf8               arj\n-  #277 = Class              #395          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #278 = Utf8               7z\n-  #279 = Utf8               IOException while reading dump signature\n-  #280 = Utf8               dump\n-  #281 = Utf8               IOException while reading tar signature\n-  #282 = Utf8               tar\n-  #283 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n-  #284 = Utf8               java/io/ByteArrayInputStream\n-  #285 = NameAndType        #213:#396     // \"<init>\":([B)V\n-  #286 = NameAndType        #213:#397     // \"<init>\":(Ljava/io/InputStream;)V\n-  #287 = NameAndType        #398:#399     // getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #288 = Class              #400          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #289 = NameAndType        #401:#385     // isCheckSumOK:()Z\n-  #290 = NameAndType        #402:#403     // closeQuietly:(Ljava/io/Closeable;)V\n-  #291 = Utf8               java/lang/Exception\n-  #292 = Utf8               No Archiver found for the stream signature\n-  #293 = Utf8               BootstrapMethods\n-  #294 = MethodHandle       6:#404        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #295 = MethodType         #405          //  ()Ljava/lang/Object;\n-  #296 = MethodHandle       6:#406        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n-  #297 = MethodType         #195          //  ()Ljava/util/SortedMap;\n-  #298 = NameAndType        #407:#408     // run:()Ljava/security/PrivilegedAction;\n-  #299 = Class              #409          // java/security/AccessController\n-  #300 = NameAndType        #410:#411     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #301 = Utf8               java/util/SortedMap\n-  #302 = MethodHandle       6:#412        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n-  #303 = MethodType         #413          //  (Ljava/lang/Object;)V\n-  #304 = MethodHandle       6:#414        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n-  #305 = MethodType         #216          //  (Ljava/lang/String;)V\n-  #306 = NameAndType        #415:#416     // accept:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n-  #307 = Class              #417          // java/util/Set\n-  #308 = NameAndType        #418:#419     // forEach:(Ljava/util/function/Consumer;)V\n-  #309 = Class              #420          // java/util/Locale\n-  #310 = NameAndType        #421:#422     // ROOT:Ljava/util/Locale;\n-  #311 = NameAndType        #423:#424     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #312 = NameAndType        #213:#214     // \"<init>\":()V\n-  #313 = NameAndType        #163:#148     // encoding:Ljava/lang/String;\n-  #314 = NameAndType        #164:#148     // entryEncoding:Ljava/lang/String;\n-  #315 = NameAndType        #175:#176     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n-  #316 = NameAndType        #217:#219     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #317 = NameAndType        #217:#221     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #318 = Utf8               Archivername must not be null.\n-  #319 = Utf8               InputStream must not be null.\n-  #320 = NameAndType        #425:#426     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-  #321 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n-  #322 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n-  #323 = NameAndType        #213:#427     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #324 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n-  #325 = Utf8               apk\n-  #326 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n-  #327 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n-  #328 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n-  #329 = Utf8               org/apache/commons/compress/archivers/StreamingNotSupportedException\n-  #330 = NameAndType        #231:#195     // getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #331 = NameAndType        #210:#211     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n-  #332 = NameAndType        #428:#429     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #333 = Utf8               java/lang/StringBuilder\n-  #334 = Utf8               Archiver:\n-  #335 = NameAndType        #430:#431     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #336 = Utf8                not found.\n-  #337 = NameAndType        #432:#234     // toString:()Ljava/lang/String;\n-  #338 = NameAndType        #224:#228     // createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n-  #339 = Utf8               OutputStream must not be null.\n-  #340 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n-  #341 = NameAndType        #213:#433     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #342 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n-  #343 = NameAndType        #434:#216     // setEncoding:(Ljava/lang/String;)V\n-  #344 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n-  #345 = NameAndType        #213:#435     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #346 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n-  #347 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n-  #348 = NameAndType        #232:#195     // getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #349 = NameAndType        #165:#166     // archiveInputStreamProviders:Ljava/util/SortedMap;\n-  #350 = NameAndType        #194:#195     // findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-  #351 = Class              #436          // java/util/Collections\n-  #352 = NameAndType        #437:#438     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #353 = NameAndType        #169:#166     // archiveOutputStreamProviders:Ljava/util/SortedMap;\n-  #354 = NameAndType        #197:#195     // findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-  #355 = Utf8               java/lang/String\n-  #356 = Class              #439          // org/apache/commons/compress/utils/Sets\n-  #357 = NameAndType        #440:#441     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #358 = Utf8               java/lang/IllegalStateException\n-  #359 = Utf8               Cannot overide encoding set by the constructor\n-  #360 = NameAndType        #442:#443     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #361 = Utf8               java/util/TreeMap\n-  #362 = NameAndType        #145:#146     // DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-  #363 = NameAndType        #238:#236     // getOutputStreamArchiveNames:()Ljava/util/Set;\n-  #364 = NameAndType        #198:#199     // putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-  #365 = NameAndType        #170:#171     // archiveStreamProviderIterable:()Ljava/lang/Iterable;\n-  #366 = MethodHandle       6:#444        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #367 = MethodType         #445          //  (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #368 = NameAndType        #415:#446     // accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n-  #369 = Class              #447          // java/lang/Iterable\n-  #370 = NameAndType        #235:#236     // getInputStreamArchiveNames:()Ljava/util/Set;\n-  #371 = MethodHandle       6:#448        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #372 = Utf8               java/lang/Object\n-  #373 = Utf8               xapk\n-  #374 = Utf8               apks\n-  #375 = Utf8               apkm\n-  #376 = Utf8               java/io/InputStream\n-  #377 = Utf8               java/lang/Throwable\n-  #378 = Utf8               java/lang/ClassLoader\n-  #379 = Utf8               getSystemClassLoader\n-  #380 = Utf8               ()Ljava/lang/ClassLoader;\n-  #381 = Utf8               java/util/ServiceLoader\n-  #382 = Utf8               load\n-  #383 = Utf8               (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n-  #384 = Utf8               markSupported\n-  #385 = Utf8               ()Z\n-  #386 = Utf8               mark\n-  #387 = Utf8               (I)V\n-  #388 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #389 = Utf8               readFully\n-  #390 = Utf8               (Ljava/io/InputStream;[B)I\n-  #391 = Utf8               reset\n-  #392 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n-  #393 = Utf8               matches\n-  #394 = Utf8               ([BI)Z\n-  #395 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #396 = Utf8               ([B)V\n-  #397 = Utf8               (Ljava/io/InputStream;)V\n-  #398 = Utf8               getNextTarEntry\n-  #399 = Utf8               ()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #400 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #401 = Utf8               isCheckSumOK\n-  #402 = Utf8               closeQuietly\n-  #403 = Utf8               (Ljava/io/Closeable;)V\n-  #404 = Methodref          #449.#450     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #405 = Utf8               ()Ljava/lang/Object;\n-  #406 = Methodref          #9.#451       // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n-  #407 = Utf8               run\n-  #408 = Utf8               ()Ljava/security/PrivilegedAction;\n-  #409 = Utf8               java/security/AccessController\n-  #410 = Utf8               doPrivileged\n-  #411 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-  #412 = Methodref          #9.#452       // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n-  #413 = Utf8               (Ljava/lang/Object;)V\n-  #414 = Methodref          #9.#453       // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n-  #415 = Utf8               accept\n-  #416 = Utf8               (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n-  #417 = Utf8               java/util/Set\n-  #418 = Utf8               forEach\n-  #419 = Utf8               (Ljava/util/function/Consumer;)V\n-  #420 = Utf8               java/util/Locale\n-  #421 = Utf8               ROOT\n-  #422 = Utf8               Ljava/util/Locale;\n-  #423 = Utf8               toUpperCase\n-  #424 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #425 = Utf8               equalsIgnoreCase\n-  #426 = Utf8               (Ljava/lang/String;)Z\n-  #427 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #428 = Utf8               get\n-  #429 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #430 = Utf8               append\n-  #431 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #432 = Utf8               toString\n-  #433 = Utf8               (Ljava/io/OutputStream;)V\n-  #434 = Utf8               setEncoding\n-  #435 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #436 = Utf8               java/util/Collections\n-  #437 = Utf8               unmodifiableSortedMap\n-  #438 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-  #439 = Utf8               org/apache/commons/compress/utils/Sets\n-  #440 = Utf8               newHashSet\n-  #441 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n-  #442 = Utf8               put\n-  #443 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #444 = Methodref          #9.#454       // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #445 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #446 = Utf8               (Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n-  #447 = Utf8               java/lang/Iterable\n-  #448 = Methodref          #9.#455       // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #449 = Class              #456          // java/lang/invoke/LambdaMetafactory\n-  #450 = NameAndType        #457:#461     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #451 = NameAndType        #248:#195     // lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n-  #452 = NameAndType        #245:#195     // lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n-  #453 = NameAndType        #243:#244     // lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n-  #454 = NameAndType        #246:#247     // lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #455 = NameAndType        #249:#247     // lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  #456 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #457 = Utf8               metafactory\n-  #458 = Class              #463          // java/lang/invoke/MethodHandles$Lookup\n-  #459 = Utf8               Lookup\n-  #460 = Utf8               InnerClasses\n-  #461 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #462 = Class              #464          // java/lang/invoke/MethodHandles\n-  #463 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #464 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/ArchiveStreamProvider\n+    #2 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamProvider\n+    #3 = Methodref          #4.#5         // java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;\n+    #4 = Class              #6            // java/lang/ClassLoader\n+    #5 = NameAndType        #7:#8         // getSystemClassLoader:()Ljava/lang/ClassLoader;\n+    #6 = Utf8               java/lang/ClassLoader\n+    #7 = Utf8               getSystemClassLoader\n+    #8 = Utf8               ()Ljava/lang/ClassLoader;\n+    #9 = Methodref          #10.#11       // java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n+   #10 = Class              #12           // java/util/ServiceLoader\n+   #11 = NameAndType        #13:#14       // load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n+   #12 = Utf8               java/util/ServiceLoader\n+   #13 = Utf8               load\n+   #14 = Utf8               (Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n+   #15 = Class              #16           // java/lang/IllegalArgumentException\n+   #16 = Utf8               java/lang/IllegalArgumentException\n+   #17 = String             #18           // Stream must not be null.\n+   #18 = Utf8               Stream must not be null.\n+   #19 = Methodref          #15.#20       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #20 = NameAndType        #21:#22       // \"<init>\":(Ljava/lang/String;)V\n+   #21 = Utf8               <init>\n+   #22 = Utf8               (Ljava/lang/String;)V\n+   #23 = Methodref          #24.#25       // java/io/InputStream.markSupported:()Z\n+   #24 = Class              #26           // java/io/InputStream\n+   #25 = NameAndType        #27:#28       // markSupported:()Z\n+   #26 = Utf8               java/io/InputStream\n+   #27 = Utf8               markSupported\n+   #28 = Utf8               ()Z\n+   #29 = String             #30           // Mark is not supported.\n+   #30 = Utf8               Mark is not supported.\n+   #31 = Class              #32           // org/apache/commons/compress/archivers/ArchiveStreamFactory\n+   #32 = Utf8               org/apache/commons/compress/archivers/ArchiveStreamFactory\n+   #33 = Methodref          #24.#34       // java/io/InputStream.mark:(I)V\n+   #34 = NameAndType        #35:#36       // mark:(I)V\n+   #35 = Utf8               mark\n+   #36 = Utf8               (I)V\n+   #37 = Methodref          #38.#39       // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #38 = Class              #40           // org/apache/commons/compress/utils/IOUtils\n+   #39 = NameAndType        #41:#42       // readFully:(Ljava/io/InputStream;[B)I\n+   #40 = Utf8               org/apache/commons/compress/utils/IOUtils\n+   #41 = Utf8               readFully\n+   #42 = Utf8               (Ljava/io/InputStream;[B)I\n+   #43 = Methodref          #24.#44       // java/io/InputStream.reset:()V\n+   #44 = NameAndType        #45:#46       // reset:()V\n+   #45 = Utf8               reset\n+   #46 = Utf8               ()V\n+   #47 = Class              #48           // java/io/IOException\n+   #48 = Utf8               java/io/IOException\n+   #49 = Class              #50           // org/apache/commons/compress/archivers/ArchiveException\n+   #50 = Utf8               org/apache/commons/compress/archivers/ArchiveException\n+   #51 = String             #52           // IOException while reading signature.\n+   #52 = Utf8               IOException while reading signature.\n+   #53 = Methodref          #49.#54       // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+   #54 = NameAndType        #21:#55       // \"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+   #55 = Utf8               (Ljava/lang/String;Ljava/lang/Exception;)V\n+   #56 = Methodref          #57.#58       // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+   #57 = Class              #59           // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+   #58 = NameAndType        #60:#61       // matches:([BI)Z\n+   #59 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+   #60 = Utf8               matches\n+   #61 = Utf8               ([BI)Z\n+   #62 = String             #63           // zip\n+   #63 = Utf8               zip\n+   #64 = Methodref          #65.#58       // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n+   #65 = Class              #66           // org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+   #66 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+   #67 = String             #68           // jar\n+   #68 = Utf8               jar\n+   #69 = Methodref          #70.#58       // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n+   #70 = Class              #71           // org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+   #71 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+   #72 = String             #73           // ar\n+   #73 = Utf8               ar\n+   #74 = Methodref          #75.#58       // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n+   #75 = Class              #76           // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+   #76 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+   #77 = String             #78           // cpio\n+   #78 = Utf8               cpio\n+   #79 = Methodref          #80.#58       // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n+   #80 = Class              #81           // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+   #81 = Utf8               org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+   #82 = String             #83           // arj\n+   #83 = Utf8               arj\n+   #84 = Methodref          #85.#58       // org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n+   #85 = Class              #86           // org/apache/commons/compress/archivers/sevenz/SevenZFile\n+   #86 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n+   #87 = String             #88           // 7z\n+   #88 = Utf8               7z\n+   #89 = String             #90           // IOException while reading dump signature\n+   #90 = Utf8               IOException while reading dump signature\n+   #91 = Methodref          #92.#58       // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n+   #92 = Class              #93           // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+   #93 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+   #94 = String             #95           // dump\n+   #95 = Utf8               dump\n+   #96 = String             #97           // IOException while reading tar signature\n+   #97 = Utf8               IOException while reading tar signature\n+   #98 = Methodref          #99.#58       // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n+   #99 = Class              #100          // org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+  #100 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+  #101 = String             #102          // tar\n+  #102 = Utf8               tar\n+  #103 = Class              #104          // java/io/ByteArrayInputStream\n+  #104 = Utf8               java/io/ByteArrayInputStream\n+  #105 = Methodref          #103.#106     // java/io/ByteArrayInputStream.\"<init>\":([B)V\n+  #106 = NameAndType        #21:#107      // \"<init>\":([B)V\n+  #107 = Utf8               ([B)V\n+  #108 = Methodref          #99.#109      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #109 = NameAndType        #21:#110      // \"<init>\":(Ljava/io/InputStream;)V\n+  #110 = Utf8               (Ljava/io/InputStream;)V\n+  #111 = Methodref          #99.#112      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #112 = NameAndType        #113:#114     // getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #113 = Utf8               getNextTarEntry\n+  #114 = Utf8               ()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #115 = Methodref          #116.#117     // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n+  #116 = Class              #118          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #117 = NameAndType        #119:#28      // isCheckSumOK:()Z\n+  #118 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #119 = Utf8               isCheckSumOK\n+  #120 = Methodref          #38.#121      // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+  #121 = NameAndType        #122:#123     // closeQuietly:(Ljava/io/Closeable;)V\n+  #122 = Utf8               closeQuietly\n+  #123 = Utf8               (Ljava/io/Closeable;)V\n+  #124 = Class              #125          // java/lang/Exception\n+  #125 = Utf8               java/lang/Exception\n+  #126 = String             #127          // No Archiver found for the stream signature\n+  #127 = Utf8               No Archiver found for the stream signature\n+  #128 = Methodref          #49.#20       // org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+  #129 = InvokeDynamic      #0:#130       // #0:run:()Ljava/security/PrivilegedAction;\n+  #130 = NameAndType        #131:#132     // run:()Ljava/security/PrivilegedAction;\n+  #131 = Utf8               run\n+  #132 = Utf8               ()Ljava/security/PrivilegedAction;\n+  #133 = Methodref          #134.#135     // java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #134 = Class              #136          // java/security/AccessController\n+  #135 = NameAndType        #137:#138     // doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #136 = Utf8               java/security/AccessController\n+  #137 = Utf8               doPrivileged\n+  #138 = Utf8               (Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+  #139 = Class              #140          // java/util/SortedMap\n+  #140 = Utf8               java/util/SortedMap\n+  #141 = InvokeDynamic      #1:#130       // #1:run:()Ljava/security/PrivilegedAction;\n+  #142 = InvokeDynamic      #2:#143       // #2:accept:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n+  #143 = NameAndType        #144:#145     // accept:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n+  #144 = Utf8               accept\n+  #145 = Utf8               (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n+  #146 = InterfaceMethodref #147.#148     // java/util/Set.forEach:(Ljava/util/function/Consumer;)V\n+  #147 = Class              #149          // java/util/Set\n+  #148 = NameAndType        #150:#151     // forEach:(Ljava/util/function/Consumer;)V\n+  #149 = Utf8               java/util/Set\n+  #150 = Utf8               forEach\n+  #151 = Utf8               (Ljava/util/function/Consumer;)V\n+  #152 = Fieldref           #153.#154     // java/util/Locale.ROOT:Ljava/util/Locale;\n+  #153 = Class              #155          // java/util/Locale\n+  #154 = NameAndType        #156:#157     // ROOT:Ljava/util/Locale;\n+  #155 = Utf8               java/util/Locale\n+  #156 = Utf8               ROOT\n+  #157 = Utf8               Ljava/util/Locale;\n+  #158 = Methodref          #159.#160     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #159 = Class              #161          // java/lang/String\n+  #160 = NameAndType        #162:#163     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #161 = Utf8               java/lang/String\n+  #162 = Utf8               toUpperCase\n+  #163 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #164 = Methodref          #31.#20       // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":(Ljava/lang/String;)V\n+  #165 = Methodref          #166.#167     // java/lang/Object.\"<init>\":()V\n+  #166 = Class              #168          // java/lang/Object\n+  #167 = NameAndType        #21:#46       // \"<init>\":()V\n+  #168 = Utf8               java/lang/Object\n+  #169 = Fieldref           #31.#170      // org/apache/commons/compress/archivers/ArchiveStreamFactory.encoding:Ljava/lang/String;\n+  #170 = NameAndType        #171:#172     // encoding:Ljava/lang/String;\n+  #171 = Utf8               encoding\n+  #172 = Utf8               Ljava/lang/String;\n+  #173 = Fieldref           #31.#174      // org/apache/commons/compress/archivers/ArchiveStreamFactory.entryEncoding:Ljava/lang/String;\n+  #174 = NameAndType        #175:#172     // entryEncoding:Ljava/lang/String;\n+  #175 = Utf8               entryEncoding\n+  #176 = Methodref          #31.#177      // org/apache/commons/compress/archivers/ArchiveStreamFactory.detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+  #177 = NameAndType        #178:#179     // detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+  #178 = Utf8               detect\n+  #179 = Utf8               (Ljava/io/InputStream;)Ljava/lang/String;\n+  #180 = Methodref          #31.#181      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #181 = NameAndType        #182:#183     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #182 = Utf8               createArchiveInputStream\n+  #183 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #184 = Methodref          #31.#185      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #185 = NameAndType        #182:#186     // createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #186 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #187 = String             #188          // Archivername must not be null.\n+  #188 = Utf8               Archivername must not be null.\n+  #189 = String             #190          // InputStream must not be null.\n+  #190 = Utf8               InputStream must not be null.\n+  #191 = Methodref          #159.#192     // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #192 = NameAndType        #193:#194     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+  #193 = Utf8               equalsIgnoreCase\n+  #194 = Utf8               (Ljava/lang/String;)Z\n+  #195 = Methodref          #70.#109      // org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #196 = Methodref          #80.#197      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #197 = NameAndType        #21:#198      // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #198 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #199 = Methodref          #80.#109      // org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #200 = Methodref          #57.#197      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #201 = Methodref          #57.#109      // org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #202 = Methodref          #99.#197      // org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #203 = String             #204          // apk\n+  #204 = Utf8               apk\n+  #205 = Methodref          #65.#197      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #206 = Methodref          #65.#109      // org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #207 = Methodref          #75.#197      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #208 = Methodref          #75.#109      // org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #209 = Methodref          #92.#197      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #210 = Methodref          #92.#109      // org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #211 = Class              #212          // org/apache/commons/compress/archivers/StreamingNotSupportedException\n+  #212 = Utf8               org/apache/commons/compress/archivers/StreamingNotSupportedException\n+  #213 = Methodref          #211.#20      // org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+  #214 = Methodref          #31.#215      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #215 = NameAndType        #216:#217     // getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #216 = Utf8               getArchiveInputStreamProviders\n+  #217 = Utf8               ()Ljava/util/SortedMap;\n+  #218 = Methodref          #31.#219      // org/apache/commons/compress/archivers/ArchiveStreamFactory.toKey:(Ljava/lang/String;)Ljava/lang/String;\n+  #219 = NameAndType        #220:#221     // toKey:(Ljava/lang/String;)Ljava/lang/String;\n+  #220 = Utf8               toKey\n+  #221 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #222 = InterfaceMethodref #139.#223     // java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #223 = NameAndType        #224:#225     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #224 = Utf8               get\n+  #225 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #226 = InterfaceMethodref #1.#185       // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #227 = Class              #228          // java/lang/StringBuilder\n+  #228 = Utf8               java/lang/StringBuilder\n+  #229 = Methodref          #227.#167     // java/lang/StringBuilder.\"<init>\":()V\n+  #230 = String             #231          // Archiver:\n+  #231 = Utf8               Archiver:\n+  #232 = Methodref          #227.#233     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #233 = NameAndType        #234:#235     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #234 = Utf8               append\n+  #235 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #236 = String             #237          //  not found.\n+  #237 = Utf8                not found.\n+  #238 = Methodref          #227.#239     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #239 = NameAndType        #240:#241     // toString:()Ljava/lang/String;\n+  #240 = Utf8               toString\n+  #241 = Utf8               ()Ljava/lang/String;\n+  #242 = Methodref          #31.#243      // org/apache/commons/compress/archivers/ArchiveStreamFactory.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #243 = NameAndType        #244:#245     // createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #244 = Utf8               createArchiveOutputStream\n+  #245 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #246 = String             #247          // OutputStream must not be null.\n+  #247 = Utf8               OutputStream must not be null.\n+  #248 = Class              #249          // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  #249 = Utf8               org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+  #250 = Methodref          #248.#251     // org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #251 = NameAndType        #21:#252      // \"<init>\":(Ljava/io/OutputStream;)V\n+  #252 = Utf8               (Ljava/io/OutputStream;)V\n+  #253 = Class              #254          // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #254 = Utf8               org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+  #255 = Methodref          #253.#251     // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #256 = Methodref          #253.#257     // org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n+  #257 = NameAndType        #258:#22      // setEncoding:(Ljava/lang/String;)V\n+  #258 = Utf8               setEncoding\n+  #259 = Class              #260          // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+  #260 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+  #261 = Methodref          #259.#262     // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #262 = NameAndType        #21:#263      // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #263 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #264 = Methodref          #259.#251     // org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #265 = Class              #266          // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+  #266 = Utf8               org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+  #267 = Methodref          #265.#262     // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #268 = Methodref          #265.#251     // org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #269 = Class              #270          // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #270 = Utf8               org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+  #271 = Methodref          #269.#262     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #272 = Methodref          #269.#251     // org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #273 = Methodref          #31.#274      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #274 = NameAndType        #275:#217     // getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #275 = Utf8               getArchiveOutputStreamProviders\n+  #276 = InterfaceMethodref #1.#243       // org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #277 = Fieldref           #31.#278      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveInputStreamProviders:Ljava/util/SortedMap;\n+  #278 = NameAndType        #279:#280     // archiveInputStreamProviders:Ljava/util/SortedMap;\n+  #279 = Utf8               archiveInputStreamProviders\n+  #280 = Utf8               Ljava/util/SortedMap;\n+  #281 = Methodref          #31.#282      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #282 = NameAndType        #283:#217     // findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+  #283 = Utf8               findAvailableArchiveInputStreamProviders\n+  #284 = Methodref          #285.#286     // java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #285 = Class              #287          // java/util/Collections\n+  #286 = NameAndType        #288:#289     // unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #287 = Utf8               java/util/Collections\n+  #288 = Utf8               unmodifiableSortedMap\n+  #289 = Utf8               (Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+  #290 = Fieldref           #31.#291      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveOutputStreamProviders:Ljava/util/SortedMap;\n+  #291 = NameAndType        #292:#280     // archiveOutputStreamProviders:Ljava/util/SortedMap;\n+  #292 = Utf8               archiveOutputStreamProviders\n+  #293 = Methodref          #31.#294      // org/apache/commons/compress/archivers/ArchiveStreamFactory.findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #294 = NameAndType        #295:#217     // findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+  #295 = Utf8               findAvailableArchiveOutputStreamProviders\n+  #296 = Methodref          #297.#298     // org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #297 = Class              #299          // org/apache/commons/compress/utils/Sets\n+  #298 = NameAndType        #300:#301     // newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #299 = Utf8               org/apache/commons/compress/utils/Sets\n+  #300 = Utf8               newHashSet\n+  #301 = Utf8               ([Ljava/lang/Object;)Ljava/util/HashSet;\n+  #302 = Class              #303          // java/lang/IllegalStateException\n+  #303 = Utf8               java/lang/IllegalStateException\n+  #304 = String             #305          // Cannot overide encoding set by the constructor\n+  #305 = Utf8               Cannot overide encoding set by the constructor\n+  #306 = Methodref          #302.#20      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #307 = Methodref          #308.#309     // java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #308 = Class              #310          // java/util/TreeMap\n+  #309 = NameAndType        #311:#312     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #310 = Utf8               java/util/TreeMap\n+  #311 = Utf8               put\n+  #312 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #313 = Methodref          #308.#167     // java/util/TreeMap.\"<init>\":()V\n+  #314 = Fieldref           #31.#315      // org/apache/commons/compress/archivers/ArchiveStreamFactory.DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #315 = NameAndType        #316:#317     // DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #316 = Utf8               DEFAULT\n+  #317 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+  #318 = Methodref          #31.#319      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getOutputStreamArchiveNames:()Ljava/util/Set;\n+  #319 = NameAndType        #320:#321     // getOutputStreamArchiveNames:()Ljava/util/Set;\n+  #320 = Utf8               getOutputStreamArchiveNames\n+  #321 = Utf8               ()Ljava/util/Set;\n+  #322 = Methodref          #31.#323      // org/apache/commons/compress/archivers/ArchiveStreamFactory.putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+  #323 = NameAndType        #324:#325     // putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+  #324 = Utf8               putAll\n+  #325 = Utf8               (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+  #326 = Methodref          #31.#327      // org/apache/commons/compress/archivers/ArchiveStreamFactory.archiveStreamProviderIterable:()Ljava/lang/Iterable;\n+  #327 = NameAndType        #328:#329     // archiveStreamProviderIterable:()Ljava/lang/Iterable;\n+  #328 = Utf8               archiveStreamProviderIterable\n+  #329 = Utf8               ()Ljava/lang/Iterable;\n+  #330 = InvokeDynamic      #3:#331       // #3:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n+  #331 = NameAndType        #144:#332     // accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n+  #332 = Utf8               (Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n+  #333 = InterfaceMethodref #334.#148     // java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V\n+  #334 = Class              #335          // java/lang/Iterable\n+  #335 = Utf8               java/lang/Iterable\n+  #336 = InterfaceMethodref #1.#319       // org/apache/commons/compress/archivers/ArchiveStreamProvider.getOutputStreamArchiveNames:()Ljava/util/Set;\n+  #337 = Methodref          #31.#338      // org/apache/commons/compress/archivers/ArchiveStreamFactory.getInputStreamArchiveNames:()Ljava/util/Set;\n+  #338 = NameAndType        #339:#321     // getInputStreamArchiveNames:()Ljava/util/Set;\n+  #339 = Utf8               getInputStreamArchiveNames\n+  #340 = InvokeDynamic      #4:#331       // #4:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n+  #341 = InterfaceMethodref #1.#338       // org/apache/commons/compress/archivers/ArchiveStreamProvider.getInputStreamArchiveNames:()Ljava/util/Set;\n+  #342 = Methodref          #31.#167      // org/apache/commons/compress/archivers/ArchiveStreamFactory.\"<init>\":()V\n+  #343 = Utf8               TAR_HEADER_SIZE\n+  #344 = Utf8               I\n+  #345 = Utf8               ConstantValue\n+  #346 = Integer            512\n+  #347 = Utf8               DUMP_SIGNATURE_SIZE\n+  #348 = Integer            32\n+  #349 = Utf8               SIGNATURE_SIZE\n+  #350 = Integer            12\n+  #351 = Utf8               APK\n+  #352 = Utf8               XAPK\n+  #353 = String             #354          // xapk\n+  #354 = Utf8               xapk\n+  #355 = Utf8               APKS\n+  #356 = String             #357          // apks\n+  #357 = Utf8               apks\n+  #358 = Utf8               APKM\n+  #359 = String             #360          // apkm\n+  #360 = Utf8               apkm\n+  #361 = Utf8               AR\n+  #362 = Utf8               ARJ\n+  #363 = Utf8               CPIO\n+  #364 = Utf8               DUMP\n+  #365 = Utf8               JAR\n+  #366 = Utf8               TAR\n+  #367 = Utf8               ZIP\n+  #368 = Utf8               SEVEN_Z\n+  #369 = Utf8               Signature\n+  #370 = Utf8               Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #371 = Utf8               Code\n+  #372 = Utf8               LineNumberTable\n+  #373 = Utf8               ()Ljava/lang/Iterable<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #374 = Utf8               LocalVariableTable\n+  #375 = Utf8               e\n+  #376 = Utf8               Ljava/io/IOException;\n+  #377 = Utf8               tais\n+  #378 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveInputStream;\n+  #379 = Utf8               in\n+  #380 = Utf8               Ljava/io/InputStream;\n+  #381 = Utf8               signature\n+  #382 = Utf8               [B\n+  #383 = Utf8               signatureLength\n+  #384 = Utf8               dumpsig\n+  #385 = Utf8               tarHeader\n+  #386 = Utf8               StackMapTable\n+  #387 = Class              #382          // \"[B\"\n+  #388 = Class              #389          // java/lang/Throwable\n+  #389 = Utf8               java/lang/Throwable\n+  #390 = Utf8               Exceptions\n+  #391 = Utf8               ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #392 = Utf8               names\n+  #393 = Utf8               Ljava/util/Set;\n+  #394 = Utf8               provider\n+  #395 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n+  #396 = Utf8               map\n+  #397 = Utf8               Ljava/util/TreeMap;\n+  #398 = Utf8               LocalVariableTypeTable\n+  #399 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #400 = Utf8               Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+  #401 = Utf8               (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n+  #402 = Utf8               name\n+  #403 = Utf8               this\n+  #404 = Utf8               (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #405 = Utf8               archiverName\n+  #406 = Utf8               actualEncoding\n+  #407 = Utf8               archiveStreamProvider\n+  #408 = Utf8               (Ljava/lang/String;Ljava/io/OutputStream;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+  #409 = Utf8               out\n+  #410 = Utf8               Ljava/io/OutputStream;\n+  #411 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipArchiveOutputStream;\n+  #412 = Utf8               getEntryEncoding\n+  #413 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;\n+  #414 = Utf8               setEntryEncoding\n+  #415 = Utf8               Deprecated\n+  #416 = Utf8               RuntimeVisibleAnnotations\n+  #417 = Utf8               Ljava/lang/Deprecated;\n+  #418 = Utf8               lambda$putAll$4\n+  #419 = Utf8               (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n+  #420 = Utf8               lambda$findAvailableArchiveOutputStreamProviders$3\n+  #421 = Utf8               lambda$findAvailableArchiveOutputStreamProviders$2\n+  #422 = Utf8               (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #423 = Utf8               lambda$findAvailableArchiveInputStreamProviders$1\n+  #424 = Utf8               lambda$findAvailableArchiveInputStreamProviders$0\n+  #425 = Utf8               <clinit>\n+  #426 = Utf8               SourceFile\n+  #427 = Utf8               ArchiveStreamFactory.java\n+  #428 = Utf8               BootstrapMethods\n+  #429 = MethodHandle       6:#430        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #430 = Methodref          #431.#432     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #431 = Class              #433          // java/lang/invoke/LambdaMetafactory\n+  #432 = NameAndType        #434:#435     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #433 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #434 = Utf8               metafactory\n+  #435 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #436 = MethodType         #437          //  ()Ljava/lang/Object;\n+  #437 = Utf8               ()Ljava/lang/Object;\n+  #438 = MethodHandle       6:#439        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n+  #439 = Methodref          #31.#440      // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n+  #440 = NameAndType        #423:#217     // lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n+  #441 = MethodType         #217          //  ()Ljava/util/SortedMap;\n+  #442 = MethodHandle       6:#443        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n+  #443 = Methodref          #31.#444      // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n+  #444 = NameAndType        #420:#217     // lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n+  #445 = MethodType         #446          //  (Ljava/lang/Object;)V\n+  #446 = Utf8               (Ljava/lang/Object;)V\n+  #447 = MethodHandle       6:#448        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n+  #448 = Methodref          #31.#449      // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n+  #449 = NameAndType        #418:#419     // lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n+  #450 = MethodType         #22           //  (Ljava/lang/String;)V\n+  #451 = MethodHandle       6:#452        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #452 = Methodref          #31.#453      // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #453 = NameAndType        #421:#422     // lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #454 = MethodType         #455          //  (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #455 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #456 = MethodHandle       6:#457        // REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #457 = Methodref          #31.#458      // org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #458 = NameAndType        #424:#422     // lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  #459 = Utf8               InnerClasses\n+  #460 = Class              #461          // java/lang/invoke/MethodHandles$Lookup\n+  #461 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #462 = Class              #463          // java/lang/invoke/MethodHandles\n+  #463 = Utf8               java/lang/invoke/MethodHandles\n+  #464 = Utf8               Lookup\n {\n   private static final int TAR_HEADER_SIZE = 512;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 512\n \n   private static final int DUMP_SIGNATURE_SIZE = 32;\n@@ -559,206 +559,206 @@\n   private volatile java.lang.String entryEncoding;\n     descriptor: Ljava/lang/String;\n     flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveInputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #168                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #370                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveOutputStreamProviders;\n     descriptor: Ljava/util/SortedMap;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #168                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #370                         // Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   private static java.lang.Iterable<org.apache.commons.compress.archivers.ArchiveStreamProvider> archiveStreamProviderIterable();\n     descriptor: ()Ljava/lang/Iterable;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: ldc           #1                  // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n-         2: invokestatic  #2                  // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;\n-         5: invokestatic  #3                  // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n+         2: invokestatic  #3                  // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;\n+         5: invokestatic  #9                  // Method java/util/ServiceLoader.load:(Ljava/lang/Class;Ljava/lang/ClassLoader;)Ljava/util/ServiceLoader;\n          8: areturn\n       LineNumberTable:\n         line 191: 0\n-    Signature: #174                         // ()Ljava/lang/Iterable<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #373                         // ()Ljava/lang/Iterable<Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public static java.lang.String detect(java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=8, args_size=1\n          0: aload_0\n          1: ifnonnull     14\n-         4: new           #4                  // class java/lang/IllegalArgumentException\n+         4: new           #15                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #5                  // String Stream must not be null.\n-        10: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #17                 // String Stream must not be null.\n+        10: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_0\n-        15: invokevirtual #7                  // Method java/io/InputStream.markSupported:()Z\n+        15: invokevirtual #23                 // Method java/io/InputStream.markSupported:()Z\n         18: ifne          31\n-        21: new           #4                  // class java/lang/IllegalArgumentException\n+        21: new           #15                 // class java/lang/IllegalArgumentException\n         24: dup\n-        25: ldc           #8                  // String Mark is not supported.\n-        27: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: ldc           #29                 // String Mark is not supported.\n+        27: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         30: athrow\n         31: bipush        12\n         33: newarray       byte\n         35: astore_1\n         36: aload_0\n         37: aload_1\n         38: arraylength\n-        39: invokevirtual #10                 // Method java/io/InputStream.mark:(I)V\n+        39: invokevirtual #33                 // Method java/io/InputStream.mark:(I)V\n         42: iconst_m1\n         43: istore_2\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #11                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        46: invokestatic  #37                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         49: istore_2\n         50: aload_0\n-        51: invokevirtual #12                 // Method java/io/InputStream.reset:()V\n+        51: invokevirtual #43                 // Method java/io/InputStream.reset:()V\n         54: goto          69\n         57: astore_3\n-        58: new           #14                 // class org/apache/commons/compress/archivers/ArchiveException\n+        58: new           #49                 // class org/apache/commons/compress/archivers/ArchiveException\n         61: dup\n-        62: ldc           #15                 // String IOException while reading signature.\n+        62: ldc           #51                 // String IOException while reading signature.\n         64: aload_3\n-        65: invokespecial #16                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+        65: invokespecial #53                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n         68: athrow\n         69: aload_1\n         70: iload_2\n-        71: invokestatic  #17                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n+        71: invokestatic  #56                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.matches:([BI)Z\n         74: ifeq          80\n-        77: ldc           #18                 // String zip\n+        77: ldc           #62                 // String zip\n         79: areturn\n         80: aload_1\n         81: iload_2\n-        82: invokestatic  #19                 // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n+        82: invokestatic  #64                 // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.matches:([BI)Z\n         85: ifeq          91\n-        88: ldc           #20                 // String jar\n+        88: ldc           #67                 // String jar\n         90: areturn\n         91: aload_1\n         92: iload_2\n-        93: invokestatic  #21                 // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n+        93: invokestatic  #69                 // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.matches:([BI)Z\n         96: ifeq          102\n-        99: ldc           #22                 // String ar\n+        99: ldc           #72                 // String ar\n        101: areturn\n        102: aload_1\n        103: iload_2\n-       104: invokestatic  #23                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n+       104: invokestatic  #74                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.matches:([BI)Z\n        107: ifeq          113\n-       110: ldc           #24                 // String cpio\n+       110: ldc           #77                 // String cpio\n        112: areturn\n        113: aload_1\n        114: iload_2\n-       115: invokestatic  #25                 // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n+       115: invokestatic  #79                 // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.matches:([BI)Z\n        118: ifeq          124\n-       121: ldc           #26                 // String arj\n+       121: ldc           #82                 // String arj\n        123: areturn\n        124: aload_1\n        125: iload_2\n-       126: invokestatic  #27                 // Method org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n+       126: invokestatic  #84                 // Method org/apache/commons/compress/archivers/sevenz/SevenZFile.matches:([BI)Z\n        129: ifeq          135\n-       132: ldc           #28                 // String 7z\n+       132: ldc           #87                 // String 7z\n        134: areturn\n        135: bipush        32\n        137: newarray       byte\n        139: astore_3\n        140: aload_0\n        141: aload_3\n        142: arraylength\n-       143: invokevirtual #10                 // Method java/io/InputStream.mark:(I)V\n+       143: invokevirtual #33                 // Method java/io/InputStream.mark:(I)V\n        146: aload_0\n        147: aload_3\n-       148: invokestatic  #11                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       148: invokestatic  #37                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        151: istore_2\n        152: aload_0\n-       153: invokevirtual #12                 // Method java/io/InputStream.reset:()V\n+       153: invokevirtual #43                 // Method java/io/InputStream.reset:()V\n        156: goto          173\n        159: astore        4\n-       161: new           #14                 // class org/apache/commons/compress/archivers/ArchiveException\n+       161: new           #49                 // class org/apache/commons/compress/archivers/ArchiveException\n        164: dup\n-       165: ldc           #29                 // String IOException while reading dump signature\n+       165: ldc           #89                 // String IOException while reading dump signature\n        167: aload         4\n-       169: invokespecial #16                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       169: invokespecial #53                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n        172: athrow\n        173: aload_3\n        174: iload_2\n-       175: invokestatic  #30                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n+       175: invokestatic  #91                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.matches:([BI)Z\n        178: ifeq          184\n-       181: ldc           #31                 // String dump\n+       181: ldc           #94                 // String dump\n        183: areturn\n        184: sipush        512\n        187: newarray       byte\n        189: astore        4\n        191: aload_0\n        192: aload         4\n        194: arraylength\n-       195: invokevirtual #10                 // Method java/io/InputStream.mark:(I)V\n+       195: invokevirtual #33                 // Method java/io/InputStream.mark:(I)V\n        198: aload_0\n        199: aload         4\n-       201: invokestatic  #11                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       201: invokestatic  #37                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        204: istore_2\n        205: aload_0\n-       206: invokevirtual #12                 // Method java/io/InputStream.reset:()V\n+       206: invokevirtual #43                 // Method java/io/InputStream.reset:()V\n        209: goto          226\n        212: astore        5\n-       214: new           #14                 // class org/apache/commons/compress/archivers/ArchiveException\n+       214: new           #49                 // class org/apache/commons/compress/archivers/ArchiveException\n        217: dup\n-       218: ldc           #32                 // String IOException while reading tar signature\n+       218: ldc           #96                 // String IOException while reading tar signature\n        220: aload         5\n-       222: invokespecial #16                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n+       222: invokespecial #53                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Exception;)V\n        225: athrow\n        226: aload         4\n        228: iload_2\n-       229: invokestatic  #33                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n+       229: invokestatic  #98                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.matches:([BI)Z\n        232: ifeq          238\n-       235: ldc           #34                 // String tar\n+       235: ldc           #101                // String tar\n        237: areturn\n        238: iload_2\n        239: sipush        512\n        242: if_icmplt     317\n        245: aconst_null\n        246: astore        5\n-       248: new           #35                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+       248: new           #99                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n        251: dup\n-       252: new           #36                 // class java/io/ByteArrayInputStream\n+       252: new           #103                // class java/io/ByteArrayInputStream\n        255: dup\n        256: aload         4\n-       258: invokespecial #37                 // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n-       261: invokespecial #38                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       258: invokespecial #105                // Method java/io/ByteArrayInputStream.\"<init>\":([B)V\n+       261: invokespecial #108                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        264: astore        5\n        266: aload         5\n-       268: invokevirtual #39                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-       271: invokevirtual #40                 // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n+       268: invokevirtual #111                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.getNextTarEntry:()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+       271: invokevirtual #115                // Method org/apache/commons/compress/archivers/tar/TarArchiveEntry.isCheckSumOK:()Z\n        274: ifeq          289\n-       277: ldc           #34                 // String tar\n+       277: ldc           #101                // String tar\n        279: astore        6\n        281: aload         5\n-       283: invokestatic  #41                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       283: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        286: aload         6\n        288: areturn\n        289: aload         5\n-       291: invokestatic  #41                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       291: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        294: goto          317\n        297: astore        6\n        299: aload         5\n-       301: invokestatic  #41                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       301: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        304: goto          317\n        307: astore        7\n        309: aload         5\n-       311: invokestatic  #41                 // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+       311: invokestatic  #120                // Method org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n        314: aload         7\n        316: athrow\n-       317: new           #14                 // class org/apache/commons/compress/archivers/ArchiveException\n+       317: new           #49                 // class org/apache/commons/compress/archivers/ArchiveException\n        320: dup\n-       321: ldc           #43                 // String No Archiver found for the stream signature\n-       323: invokespecial #44                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       321: ldc           #126                // String No Archiver found for the stream signature\n+       323: invokespecial #128                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n        326: athrow\n       Exception table:\n          from    to  target type\n             44    54    57   Class java/io/IOException\n            146   156   159   Class java/io/IOException\n            198   209   212   Class java/io/IOException\n            248   281   297   Class java/lang/Exception\n@@ -873,104 +873,104 @@\n       throws org.apache.commons.compress.archivers.ArchiveException\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> findAvailableArchiveInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #45,  0             // InvokeDynamic #0:run:()Ljava/security/PrivilegedAction;\n-         5: invokestatic  #46                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-         8: checkcast     #47                 // class java/util/SortedMap\n+         0: invokedynamic #129,  0            // InvokeDynamic #0:run:()Ljava/security/PrivilegedAction;\n+         5: invokestatic  #133                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+         8: checkcast     #139                // class java/util/SortedMap\n         11: areturn\n       LineNumberTable:\n         line 314: 0\n-    Signature: #196                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #391                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public static java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> findAvailableArchiveOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #48,  0             // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;\n-         5: invokestatic  #46                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n-         8: checkcast     #47                 // class java/util/SortedMap\n+         0: invokedynamic #141,  0            // InvokeDynamic #1:run:()Ljava/security/PrivilegedAction;\n+         5: invokestatic  #133                // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;\n+         8: checkcast     #139                // class java/util/SortedMap\n         11: areturn\n       LineNumberTable:\n         line 350: 0\n-    Signature: #196                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #391                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   static void putAll(java.util.Set<java.lang.String>, org.apache.commons.compress.archivers.ArchiveStreamProvider, java.util.TreeMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider>);\n     descriptor: (Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n          2: aload_1\n-         3: invokedynamic #49,  0             // InvokeDynamic #2:accept:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n-         8: invokeinterface #50,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V\n+         3: invokedynamic #142,  0            // InvokeDynamic #2:accept:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)Ljava/util/function/Consumer;\n+         8: invokeinterface #146,  2          // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V\n         13: return\n       LineNumberTable:\n         line 359: 0\n         line 360: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 names   Ljava/util/Set;\n             0      14     1 provider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n             0      14     2   map   Ljava/util/TreeMap;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 names   Ljava/util/Set<Ljava/lang/String;>;\n             0      14     2   map   Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n-    Signature: #209                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n+    Signature: #401                         // (Ljava/util/Set<Ljava/lang/String;>;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;)V\n \n   private static java.lang.String toKey(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #51                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-         4: invokevirtual #52                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         1: getstatic     #152                // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+         4: invokevirtual #158                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 363: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  name   Ljava/lang/String;\n \n   public org.apache.commons.compress.archivers.ArchiveStreamFactory();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: invokespecial #53                 // Method \"<init>\":(Ljava/lang/String;)V\n+         2: invokespecial #164                // Method \"<init>\":(Ljava/lang/String;)V\n          5: return\n       LineNumberTable:\n         line 384: 0\n         line 385: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n \n   public org.apache.commons.compress.archivers.ArchiveStreamFactory(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #54                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #165                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #55                 // Field encoding:Ljava/lang/String;\n+         6: putfield      #169                // Field encoding:Ljava/lang/String;\n          9: aload_0\n         10: aload_1\n-        11: putfield      #56                 // Field entryEncoding:Ljava/lang/String;\n+        11: putfield      #173                // Field entryEncoding:Ljava/lang/String;\n         14: return\n       LineNumberTable:\n         line 394: 0\n         line 395: 4\n         line 397: 9\n         line 398: 14\n       LocalVariableTable:\n@@ -981,17 +981,17 @@\n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.io.InputStream) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #57                 // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n+         2: invokestatic  #176                // Method detect:(Ljava/io/InputStream;)Ljava/lang/String;\n          5: aload_1\n-         6: invokevirtual #58                 // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+         6: invokevirtual #180                // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n          9: areturn\n       LineNumberTable:\n         line 414: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n             0      10     1    in   Ljava/io/InputStream;\n@@ -1003,16 +1003,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n-         4: getfield      #56                 // Field entryEncoding:Ljava/lang/String;\n-         7: invokevirtual #59                 // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+         4: getfield      #173                // Field entryEncoding:Ljava/lang/String;\n+         7: invokevirtual #184                // Method createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n         10: areturn\n       LineNumberTable:\n         line 430: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n             0      11     1 archiverName   Ljava/lang/String;\n@@ -1023,178 +1023,178 @@\n   public org.apache.commons.compress.archivers.ArchiveInputStream createArchiveInputStream(java.lang.String, java.io.InputStream, java.lang.String) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #4                  // class java/lang/IllegalArgumentException\n+         4: new           #15                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #60                 // String Archivername must not be null.\n-        10: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #187                // String Archivername must not be null.\n+        10: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_2\n         15: ifnonnull     28\n-        18: new           #4                  // class java/lang/IllegalArgumentException\n+        18: new           #15                 // class java/lang/IllegalArgumentException\n         21: dup\n-        22: ldc           #61                 // String InputStream must not be null.\n-        24: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #189                // String InputStream must not be null.\n+        24: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n-        28: ldc           #22                 // String ar\n+        28: ldc           #72                 // String ar\n         30: aload_1\n-        31: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        31: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         34: ifeq          46\n-        37: new           #63                 // class org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n+        37: new           #70                 // class org/apache/commons/compress/archivers/ar/ArArchiveInputStream\n         40: dup\n         41: aload_2\n-        42: invokespecial #64                 // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        42: invokespecial #195                // Method org/apache/commons/compress/archivers/ar/ArArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         45: areturn\n-        46: ldc           #26                 // String arj\n+        46: ldc           #82                 // String arj\n         48: aload_1\n-        49: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        49: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         52: ifeq          78\n         55: aload_3\n         56: ifnull        69\n-        59: new           #65                 // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+        59: new           #80                 // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n         62: dup\n         63: aload_2\n         64: aload_3\n-        65: invokespecial #66                 // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        65: invokespecial #196                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n         68: areturn\n-        69: new           #65                 // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n+        69: new           #80                 // class org/apache/commons/compress/archivers/arj/ArjArchiveInputStream\n         72: dup\n         73: aload_2\n-        74: invokespecial #67                 // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        74: invokespecial #199                // Method org/apache/commons/compress/archivers/arj/ArjArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         77: areturn\n-        78: ldc           #18                 // String zip\n+        78: ldc           #62                 // String zip\n         80: aload_1\n-        81: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        81: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         84: ifeq          110\n         87: aload_3\n         88: ifnull        101\n-        91: new           #68                 // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+        91: new           #57                 // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n         94: dup\n         95: aload_2\n         96: aload_3\n-        97: invokespecial #69                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        97: invokespecial #200                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        100: areturn\n-       101: new           #68                 // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n+       101: new           #57                 // class org/apache/commons/compress/archivers/zip/ZipArchiveInputStream\n        104: dup\n        105: aload_2\n-       106: invokespecial #70                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       106: invokespecial #201                // Method org/apache/commons/compress/archivers/zip/ZipArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        109: areturn\n-       110: ldc           #34                 // String tar\n+       110: ldc           #101                // String tar\n        112: aload_1\n-       113: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       113: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        116: ifeq          142\n        119: aload_3\n        120: ifnull        133\n-       123: new           #35                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+       123: new           #99                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n        126: dup\n        127: aload_2\n        128: aload_3\n-       129: invokespecial #71                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       129: invokespecial #202                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        132: areturn\n-       133: new           #35                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n+       133: new           #99                 // class org/apache/commons/compress/archivers/tar/TarArchiveInputStream\n        136: dup\n        137: aload_2\n-       138: invokespecial #38                 // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       138: invokespecial #108                // Method org/apache/commons/compress/archivers/tar/TarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        141: areturn\n-       142: ldc           #20                 // String jar\n+       142: ldc           #67                 // String jar\n        144: aload_1\n-       145: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       145: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        148: ifne          160\n-       151: ldc           #72                 // String apk\n+       151: ldc           #203                // String apk\n        153: aload_1\n-       154: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       154: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        157: ifeq          183\n        160: aload_3\n        161: ifnull        174\n-       164: new           #73                 // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+       164: new           #65                 // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n        167: dup\n        168: aload_2\n        169: aload_3\n-       170: invokespecial #74                 // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       170: invokespecial #205                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        173: areturn\n-       174: new           #73                 // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n+       174: new           #65                 // class org/apache/commons/compress/archivers/jar/JarArchiveInputStream\n        177: dup\n        178: aload_2\n-       179: invokespecial #75                 // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       179: invokespecial #206                // Method org/apache/commons/compress/archivers/jar/JarArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        182: areturn\n-       183: ldc           #24                 // String cpio\n+       183: ldc           #77                 // String cpio\n        185: aload_1\n-       186: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       186: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        189: ifeq          215\n        192: aload_3\n        193: ifnull        206\n-       196: new           #76                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+       196: new           #75                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n        199: dup\n        200: aload_2\n        201: aload_3\n-       202: invokespecial #77                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       202: invokespecial #207                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        205: areturn\n-       206: new           #76                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n+       206: new           #75                 // class org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream\n        209: dup\n        210: aload_2\n-       211: invokespecial #78                 // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       211: invokespecial #208                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        214: areturn\n-       215: ldc           #31                 // String dump\n+       215: ldc           #94                 // String dump\n        217: aload_1\n-       218: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       218: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        221: ifeq          247\n        224: aload_3\n        225: ifnull        238\n-       228: new           #79                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+       228: new           #92                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n        231: dup\n        232: aload_2\n        233: aload_3\n-       234: invokespecial #80                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+       234: invokespecial #209                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n        237: areturn\n-       238: new           #79                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n+       238: new           #92                 // class org/apache/commons/compress/archivers/dump/DumpArchiveInputStream\n        241: dup\n        242: aload_2\n-       243: invokespecial #81                 // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       243: invokespecial #210                // Method org/apache/commons/compress/archivers/dump/DumpArchiveInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        246: areturn\n-       247: ldc           #28                 // String 7z\n+       247: ldc           #87                 // String 7z\n        249: aload_1\n-       250: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       250: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        253: ifeq          266\n-       256: new           #82                 // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n+       256: new           #211                // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n        259: dup\n-       260: ldc           #28                 // String 7z\n-       262: invokespecial #83                 // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+       260: ldc           #87                 // String 7z\n+       262: invokespecial #213                // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n        265: athrow\n        266: aload_0\n-       267: invokevirtual #84                 // Method getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+       267: invokevirtual #214                // Method getArchiveInputStreamProviders:()Ljava/util/SortedMap;\n        270: aload_1\n-       271: invokestatic  #85                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n-       274: invokeinterface #86,  2           // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       271: invokestatic  #218                // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+       274: invokeinterface #222,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n        279: checkcast     #1                  // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n        282: astore        4\n        284: aload         4\n        286: ifnull        300\n        289: aload         4\n        291: aload_1\n        292: aload_2\n        293: aload_3\n-       294: invokeinterface #87,  4           // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+       294: invokeinterface #226,  4          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveInputStream:(Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n        299: areturn\n-       300: new           #14                 // class org/apache/commons/compress/archivers/ArchiveException\n+       300: new           #49                 // class org/apache/commons/compress/archivers/ArchiveException\n        303: dup\n-       304: new           #88                 // class java/lang/StringBuilder\n+       304: new           #227                // class java/lang/StringBuilder\n        307: dup\n-       308: invokespecial #89                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       311: ldc           #90                 // String Archiver:\n-       313: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       308: invokespecial #229                // Method java/lang/StringBuilder.\"<init>\":()V\n+       311: ldc           #230                // String Archiver:\n+       313: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        316: aload_1\n-       317: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       320: ldc           #92                 // String  not found.\n-       322: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       325: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       328: invokespecial #44                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       317: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       320: ldc           #236                // String  not found.\n+       322: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       325: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       328: invokespecial #128                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n        331: athrow\n       LineNumberTable:\n         line 437: 0\n         line 438: 4\n         line 441: 14\n         line 442: 18\n         line 445: 28\n@@ -1265,16 +1265,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: aload_0\n-         4: getfield      #56                 // Field entryEncoding:Ljava/lang/String;\n-         7: invokevirtual #94                 // Method createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+         4: getfield      #173                // Field entryEncoding:Ljava/lang/String;\n+         7: invokevirtual #242                // Method createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n         10: areturn\n       LineNumberTable:\n         line 510: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n             0      11     1 archiverName   Ljava/lang/String;\n@@ -1285,139 +1285,139 @@\n   public org.apache.commons.compress.archivers.ArchiveOutputStream createArchiveOutputStream(java.lang.String, java.io.OutputStream, java.lang.String) throws org.apache.commons.compress.archivers.ArchiveException;\n     descriptor: (Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #4                  // class java/lang/IllegalArgumentException\n+         4: new           #15                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #60                 // String Archivername must not be null.\n-        10: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #187                // String Archivername must not be null.\n+        10: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_2\n         15: ifnonnull     28\n-        18: new           #4                  // class java/lang/IllegalArgumentException\n+        18: new           #15                 // class java/lang/IllegalArgumentException\n         21: dup\n-        22: ldc           #95                 // String OutputStream must not be null.\n-        24: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #246                // String OutputStream must not be null.\n+        24: invokespecial #19                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n-        28: ldc           #22                 // String ar\n+        28: ldc           #72                 // String ar\n         30: aload_1\n-        31: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        31: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         34: ifeq          46\n-        37: new           #96                 // class org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n+        37: new           #248                // class org/apache/commons/compress/archivers/ar/ArArchiveOutputStream\n         40: dup\n         41: aload_2\n-        42: invokespecial #97                 // Method org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        42: invokespecial #250                // Method org/apache/commons/compress/archivers/ar/ArArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         45: areturn\n-        46: ldc           #18                 // String zip\n+        46: ldc           #62                 // String zip\n         48: aload_1\n-        49: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        49: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         52: ifeq          78\n-        55: new           #98                 // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n+        55: new           #253                // class org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream\n         58: dup\n         59: aload_2\n-        60: invokespecial #99                 // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        60: invokespecial #255                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n         63: astore        4\n         65: aload_3\n         66: ifnull        75\n         69: aload         4\n         71: aload_3\n-        72: invokevirtual #100                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n+        72: invokevirtual #256                // Method org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.setEncoding:(Ljava/lang/String;)V\n         75: aload         4\n         77: areturn\n-        78: ldc           #34                 // String tar\n+        78: ldc           #101                // String tar\n         80: aload_1\n-        81: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        81: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         84: ifeq          110\n         87: aload_3\n         88: ifnull        101\n-        91: new           #101                // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+        91: new           #259                // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n         94: dup\n         95: aload_2\n         96: aload_3\n-        97: invokespecial #102                // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        97: invokespecial #261                // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        100: areturn\n-       101: new           #101                // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n+       101: new           #259                // class org/apache/commons/compress/archivers/tar/TarArchiveOutputStream\n        104: dup\n        105: aload_2\n-       106: invokespecial #103                // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       106: invokespecial #264                // Method org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        109: areturn\n-       110: ldc           #20                 // String jar\n+       110: ldc           #67                 // String jar\n        112: aload_1\n-       113: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       113: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        116: ifeq          142\n        119: aload_3\n        120: ifnull        133\n-       123: new           #104                // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+       123: new           #265                // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n        126: dup\n        127: aload_2\n        128: aload_3\n-       129: invokespecial #105                // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       129: invokespecial #267                // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        132: areturn\n-       133: new           #104                // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n+       133: new           #265                // class org/apache/commons/compress/archivers/jar/JarArchiveOutputStream\n        136: dup\n        137: aload_2\n-       138: invokespecial #106                // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       138: invokespecial #268                // Method org/apache/commons/compress/archivers/jar/JarArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        141: areturn\n-       142: ldc           #24                 // String cpio\n+       142: ldc           #77                 // String cpio\n        144: aload_1\n-       145: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       145: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        148: ifeq          174\n        151: aload_3\n        152: ifnull        165\n-       155: new           #107                // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+       155: new           #269                // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n        158: dup\n        159: aload_2\n        160: aload_3\n-       161: invokespecial #108                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+       161: invokespecial #271                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n        164: areturn\n-       165: new           #107                // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n+       165: new           #269                // class org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream\n        168: dup\n        169: aload_2\n-       170: invokespecial #109                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+       170: invokespecial #272                // Method org/apache/commons/compress/archivers/cpio/CpioArchiveOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n        173: areturn\n-       174: ldc           #28                 // String 7z\n+       174: ldc           #87                 // String 7z\n        176: aload_1\n-       177: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+       177: invokevirtual #191                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n        180: ifeq          193\n-       183: new           #82                 // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n+       183: new           #211                // class org/apache/commons/compress/archivers/StreamingNotSupportedException\n        186: dup\n-       187: ldc           #28                 // String 7z\n-       189: invokespecial #83                 // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n+       187: ldc           #87                 // String 7z\n+       189: invokespecial #213                // Method org/apache/commons/compress/archivers/StreamingNotSupportedException.\"<init>\":(Ljava/lang/String;)V\n        192: athrow\n        193: aload_0\n-       194: invokevirtual #110                // Method getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+       194: invokevirtual #273                // Method getArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n        197: aload_1\n-       198: invokestatic  #85                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n-       201: invokeinterface #86,  2           // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+       198: invokestatic  #218                // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+       201: invokeinterface #222,  2          // InterfaceMethod java/util/SortedMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n        206: checkcast     #1                  // class org/apache/commons/compress/archivers/ArchiveStreamProvider\n        209: astore        4\n        211: aload         4\n        213: ifnull        227\n        216: aload         4\n        218: aload_1\n        219: aload_2\n        220: aload_3\n-       221: invokeinterface #111,  4          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n+       221: invokeinterface #276,  4          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.createArchiveOutputStream:(Ljava/lang/String;Ljava/io/OutputStream;Ljava/lang/String;)Lorg/apache/commons/compress/archivers/ArchiveOutputStream;\n        226: areturn\n-       227: new           #14                 // class org/apache/commons/compress/archivers/ArchiveException\n+       227: new           #49                 // class org/apache/commons/compress/archivers/ArchiveException\n        230: dup\n-       231: new           #88                 // class java/lang/StringBuilder\n+       231: new           #227                // class java/lang/StringBuilder\n        234: dup\n-       235: invokespecial #89                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       238: ldc           #90                 // String Archiver:\n-       240: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       235: invokespecial #229                // Method java/lang/StringBuilder.\"<init>\":()V\n+       238: ldc           #230                // String Archiver:\n+       240: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        243: aload_1\n-       244: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       247: ldc           #92                 // String  not found.\n-       249: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       252: invokevirtual #93                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       255: invokespecial #44                 // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n+       244: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       247: ldc           #236                // String  not found.\n+       249: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       252: invokevirtual #238                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       255: invokespecial #128                // Method org/apache/commons/compress/archivers/ArchiveException.\"<init>\":(Ljava/lang/String;)V\n        258: athrow\n       LineNumberTable:\n         line 517: 0\n         line 518: 4\n         line 520: 14\n         line 521: 18\n         line 524: 28\n@@ -1477,207 +1477,207 @@\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> getArchiveInputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #112                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #277                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #113                // Method findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #114                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #112                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #281                // Method findAvailableArchiveInputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #284                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #277                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #112                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #277                // Field archiveInputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 565: 0\n         line 566: 7\n         line 567: 8\n         line 569: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #196                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #391                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public java.util.SortedMap<java.lang.String, org.apache.commons.compress.archivers.ArchiveStreamProvider> getArchiveOutputStreamProviders();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #115                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+         1: getfield      #290                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n          4: ifnonnull     17\n          7: aload_0\n-         8: invokestatic  #116                // Method findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n-        11: invokestatic  #114                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n-        14: putfield      #115                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+         8: invokestatic  #293                // Method findAvailableArchiveOutputStreamProviders:()Ljava/util/SortedMap;\n+        11: invokestatic  #284                // Method java/util/Collections.unmodifiableSortedMap:(Ljava/util/SortedMap;)Ljava/util/SortedMap;\n+        14: putfield      #290                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n         17: aload_0\n-        18: getfield      #115                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n+        18: getfield      #290                // Field archiveOutputStreamProviders:Ljava/util/SortedMap;\n         21: areturn\n       LineNumberTable:\n         line 573: 0\n         line 574: 7\n         line 575: 8\n         line 577: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n-    Signature: #196                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n+    Signature: #391                         // ()Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;>;\n \n   public java.lang.String getEntryEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #56                 // Field entryEncoding:Ljava/lang/String;\n+         1: getfield      #173                // Field entryEncoding:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 588: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n \n   public java.util.Set<java.lang.String> getInputStreamArchiveNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        8\n-         2: anewarray     #117                // class java/lang/String\n+         2: anewarray     #159                // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #22                 // String ar\n+         7: ldc           #72                 // String ar\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #26                 // String arj\n+        12: ldc           #82                 // String arj\n         14: aastore\n         15: dup\n         16: iconst_2\n-        17: ldc           #18                 // String zip\n+        17: ldc           #62                 // String zip\n         19: aastore\n         20: dup\n         21: iconst_3\n-        22: ldc           #34                 // String tar\n+        22: ldc           #101                // String tar\n         24: aastore\n         25: dup\n         26: iconst_4\n-        27: ldc           #20                 // String jar\n+        27: ldc           #67                 // String jar\n         29: aastore\n         30: dup\n         31: iconst_5\n-        32: ldc           #24                 // String cpio\n+        32: ldc           #77                 // String cpio\n         34: aastore\n         35: dup\n         36: bipush        6\n-        38: ldc           #31                 // String dump\n+        38: ldc           #94                 // String dump\n         40: aastore\n         41: dup\n         42: bipush        7\n-        44: ldc           #28                 // String 7z\n+        44: ldc           #87                 // String 7z\n         46: aastore\n-        47: invokestatic  #118                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        47: invokestatic  #296                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         50: areturn\n       LineNumberTable:\n         line 593: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      51     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-    Signature: #237                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #413                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   public java.util.Set<java.lang.String> getOutputStreamArchiveNames();\n     descriptor: ()Ljava/util/Set;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: bipush        6\n-         2: anewarray     #117                // class java/lang/String\n+         2: anewarray     #159                // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #22                 // String ar\n+         7: ldc           #72                 // String ar\n          9: aastore\n         10: dup\n         11: iconst_1\n-        12: ldc           #18                 // String zip\n+        12: ldc           #62                 // String zip\n         14: aastore\n         15: dup\n         16: iconst_2\n-        17: ldc           #34                 // String tar\n+        17: ldc           #101                // String tar\n         19: aastore\n         20: dup\n         21: iconst_3\n-        22: ldc           #20                 // String jar\n+        22: ldc           #67                 // String jar\n         24: aastore\n         25: dup\n         26: iconst_4\n-        27: ldc           #24                 // String cpio\n+        27: ldc           #77                 // String cpio\n         29: aastore\n         30: dup\n         31: iconst_5\n-        32: ldc           #28                 // String 7z\n+        32: ldc           #87                 // String 7z\n         34: aastore\n-        35: invokestatic  #118                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n+        35: invokestatic  #296                // Method org/apache/commons/compress/utils/Sets.newHashSet:([Ljava/lang/Object;)Ljava/util/HashSet;\n         38: areturn\n       LineNumberTable:\n         line 598: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      39     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-    Signature: #237                         // ()Ljava/util/Set<Ljava/lang/String;>;\n+    Signature: #413                         // ()Ljava/util/Set<Ljava/lang/String;>;\n \n   public void setEntryEncoding(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #55                 // Field encoding:Ljava/lang/String;\n-         4: ifnull        17\n-         7: new           #119                // class java/lang/IllegalStateException\n+         1: getfield      #169                // Field encoding:Ljava/lang/String;\n+         4: ifnull        18\n+         7: new           #302                // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #120                // String Cannot overide encoding set by the constructor\n-        13: invokespecial #121                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        16: athrow\n-        17: aload_0\n-        18: aload_1\n-        19: putfield      #56                 // Field entryEncoding:Ljava/lang/String;\n-        22: return\n+        11: ldc_w         #304                // String Cannot overide encoding set by the constructor\n+        14: invokespecial #306                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        17: athrow\n+        18: aload_0\n+        19: aload_1\n+        20: putfield      #173                // Field entryEncoding:Ljava/lang/String;\n+        23: return\n       LineNumberTable:\n         line 613: 0\n         line 614: 7\n-        line 616: 17\n-        line 617: 22\n+        line 616: 18\n+        line 617: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      23     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-            0      23     1 entryEncoding   Ljava/lang/String;\n+            0      24     0  this   Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+            0      24     1 entryEncoding   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #242()\n+      0: #417()\n         java.lang.Deprecated\n \n   private static void lambda$putAll$4(java.util.TreeMap, org.apache.commons.compress.archivers.ArchiveStreamProvider, java.lang.String);\n     descriptor: (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokestatic  #85                 // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n+         2: invokestatic  #218                // Method toKey:(Ljava/lang/String;)Ljava/lang/String;\n          5: aload_1\n-         6: invokevirtual #122                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         6: invokevirtual #307                // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n          9: pop\n         10: return\n       LineNumberTable:\n         line 359: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0   map   Ljava/util/TreeMap;\n@@ -1685,27 +1685,27 @@\n             0      11     2  name   Ljava/lang/String;\n \n   private static java.util.SortedMap lambda$findAvailableArchiveOutputStreamProviders$3();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=1, args_size=0\n-         0: new           #123                // class java/util/TreeMap\n+         0: new           #308                // class java/util/TreeMap\n          3: dup\n-         4: invokespecial #124                // Method java/util/TreeMap.\"<init>\":()V\n+         4: invokespecial #313                // Method java/util/TreeMap.\"<init>\":()V\n          7: astore_0\n-         8: getstatic     #125                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-        11: invokevirtual #126                // Method getOutputStreamArchiveNames:()Ljava/util/Set;\n-        14: getstatic     #125                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+         8: getstatic     #314                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+        11: invokevirtual #318                // Method getOutputStreamArchiveNames:()Ljava/util/Set;\n+        14: getstatic     #314                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n         17: aload_0\n-        18: invokestatic  #127                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-        21: invokestatic  #128                // Method archiveStreamProviderIterable:()Ljava/lang/Iterable;\n+        18: invokestatic  #322                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+        21: invokestatic  #326                // Method archiveStreamProviderIterable:()Ljava/lang/Iterable;\n         24: aload_0\n-        25: invokedynamic #129,  0            // InvokeDynamic #3:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n-        30: invokeinterface #130,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V\n+        25: invokedynamic #330,  0            // InvokeDynamic #3:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n+        30: invokeinterface #333,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V\n         35: aload_0\n         36: areturn\n       LineNumberTable:\n         line 351: 0\n         line 352: 8\n         line 353: 21\n         line 354: 35\n@@ -1718,44 +1718,44 @@\n \n   private static void lambda$findAvailableArchiveOutputStreamProviders$2(java.util.TreeMap, org.apache.commons.compress.archivers.ArchiveStreamProvider);\n     descriptor: (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokeinterface #131,  1          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.getOutputStreamArchiveNames:()Ljava/util/Set;\n+         1: invokeinterface #336,  1          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.getOutputStreamArchiveNames:()Ljava/util/Set;\n          6: aload_1\n          7: aload_0\n-         8: invokestatic  #127                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+         8: invokestatic  #322                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n         11: return\n       LineNumberTable:\n         line 353: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0   map   Ljava/util/TreeMap;\n             0      12     1 provider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n \n   private static java.util.SortedMap lambda$findAvailableArchiveInputStreamProviders$1();\n     descriptor: ()Ljava/util/SortedMap;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=1, args_size=0\n-         0: new           #123                // class java/util/TreeMap\n+         0: new           #308                // class java/util/TreeMap\n          3: dup\n-         4: invokespecial #124                // Method java/util/TreeMap.\"<init>\":()V\n+         4: invokespecial #313                // Method java/util/TreeMap.\"<init>\":()V\n          7: astore_0\n-         8: getstatic     #125                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n-        11: invokevirtual #132                // Method getInputStreamArchiveNames:()Ljava/util/Set;\n-        14: getstatic     #125                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+         8: getstatic     #314                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+        11: invokevirtual #337                // Method getInputStreamArchiveNames:()Ljava/util/Set;\n+        14: getstatic     #314                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n         17: aload_0\n-        18: invokestatic  #127                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n-        21: invokestatic  #128                // Method archiveStreamProviderIterable:()Ljava/lang/Iterable;\n+        18: invokestatic  #322                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+        21: invokestatic  #326                // Method archiveStreamProviderIterable:()Ljava/lang/Iterable;\n         24: aload_0\n-        25: invokedynamic #133,  0            // InvokeDynamic #4:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n-        30: invokeinterface #130,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V\n+        25: invokedynamic #340,  0            // InvokeDynamic #4:accept:(Ljava/util/TreeMap;)Ljava/util/function/Consumer;\n+        30: invokeinterface #333,  2          // InterfaceMethod java/lang/Iterable.forEach:(Ljava/util/function/Consumer;)V\n         35: aload_0\n         36: areturn\n       LineNumberTable:\n         line 315: 0\n         line 316: 8\n         line 317: 21\n         line 318: 35\n@@ -1768,61 +1768,61 @@\n \n   private static void lambda$findAvailableArchiveInputStreamProviders$0(java.util.TreeMap, org.apache.commons.compress.archivers.ArchiveStreamProvider);\n     descriptor: (Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokeinterface #134,  1          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.getInputStreamArchiveNames:()Ljava/util/Set;\n+         1: invokeinterface #341,  1          // InterfaceMethod org/apache/commons/compress/archivers/ArchiveStreamProvider.getInputStreamArchiveNames:()Ljava/util/Set;\n          6: aload_1\n          7: aload_0\n-         8: invokestatic  #127                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n+         8: invokestatic  #322                // Method putAll:(Ljava/util/Set;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/util/TreeMap;)V\n         11: return\n       LineNumberTable:\n         line 317: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0   map   Ljava/util/TreeMap;\n             0      12     1 provider   Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #9                  // class org/apache/commons/compress/archivers/ArchiveStreamFactory\n+         0: new           #31                 // class org/apache/commons/compress/archivers/ArchiveStreamFactory\n          3: dup\n-         4: invokespecial #135                // Method \"<init>\":()V\n-         7: putstatic     #125                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n+         4: invokespecial #342                // Method \"<init>\":()V\n+         7: putstatic     #314                // Field DEFAULT:Lorg/apache/commons/compress/archivers/ArchiveStreamFactory;\n         10: return\n       LineNumberTable:\n         line 98: 0\n }\n SourceFile: \"ArchiveStreamFactory.java\"\n-InnerClasses:\n-  public static final #459= #458 of #462; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #294 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #429 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #295 ()Ljava/lang/Object;\n-      #296 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n-      #297 ()Ljava/util/SortedMap;\n-  1: #294 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #436 ()Ljava/lang/Object;\n+      #438 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$1:()Ljava/util/SortedMap;\n+      #441 ()Ljava/util/SortedMap;\n+  1: #429 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #295 ()Ljava/lang/Object;\n-      #302 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n-      #297 ()Ljava/util/SortedMap;\n-  2: #294 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #436 ()Ljava/lang/Object;\n+      #442 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$3:()Ljava/util/SortedMap;\n+      #441 ()Ljava/util/SortedMap;\n+  2: #429 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #303 (Ljava/lang/Object;)V\n-      #304 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n-      #305 (Ljava/lang/String;)V\n-  3: #294 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #445 (Ljava/lang/Object;)V\n+      #447 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$putAll$4:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;Ljava/lang/String;)V\n+      #450 (Ljava/lang/String;)V\n+  3: #429 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #303 (Ljava/lang/Object;)V\n-      #366 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-      #367 (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-  4: #294 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #445 (Ljava/lang/Object;)V\n+      #451 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveOutputStreamProviders$2:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+      #454 (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+  4: #429 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #303 (Ljava/lang/Object;)V\n-      #371 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n-      #367 (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+      #445 (Ljava/lang/Object;)V\n+      #456 REF_invokeStatic org/apache/commons/compress/archivers/ArchiveStreamFactory.lambda$findAvailableArchiveInputStreamProviders$0:(Ljava/util/TreeMap;Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+      #454 (Lorg/apache/commons/compress/archivers/ArchiveStreamProvider;)V\n+InnerClasses:\n+  public static final #464= #460 of #462; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
