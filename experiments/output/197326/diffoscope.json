{"diffoscope-json-version": 1, "source1": "first/FloatToDecimal.class", "source2": "second/FloatToDecimal.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,233 +1,233 @@\n-  SHA-256 checksum 6c8c82fb1b294df205bce1e25db958fadb69d342e9de8a92f22f0527f22a86a8\n+  SHA-256 checksum ddcbd82e0c32054a9335eba0675b6607f8a34f13e34db7a290a8e07127a68208\n   Compiled from \"FloatToDecimal.java\"\n public final class com.fasterxml.jackson.core.io.schubfach.FloatToDecimal\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-  super_class: #53                        // java/lang/Object\n+  this_class: #3                          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+  super_class: #6                         // java/lang/Object\n   interfaces: 0, fields: 24, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Class              #171          // java/lang/Float\n-    #2 = Class              #172          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-    #3 = Methodref          #53.#173      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #2.#174       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.MAX_CHARS:I\n-    #5 = Fieldref           #2.#175       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.bytes:[B\n-    #6 = Methodref          #2.#173       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n-    #7 = Methodref          #2.#176       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimalString:(F)Ljava/lang/String;\n-    #8 = Methodref          #2.#177       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(F)I\n-    #9 = Methodref          #2.#178       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.charsToString:()Ljava/lang/String;\n-   #10 = String             #179          // 0.0\n-   #11 = String             #180          // -0.0\n-   #12 = String             #181          // Infinity\n-   #13 = String             #182          // -Infinity\n-   #14 = String             #183          // NaN\n-   #15 = Methodref          #1.#184       // java/lang/Float.floatToRawIntBits:(F)I\n-   #16 = Integer            8388607\n-   #17 = Fieldref           #2.#185       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.index:I\n-   #18 = Methodref          #2.#186       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append:(I)V\n-   #19 = Integer            8388608\n-   #20 = Methodref          #2.#187       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars:(II)I\n-   #21 = Methodref          #2.#188       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(III)I\n-   #22 = Long               2l\n-   #24 = Methodref          #189.#190     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n-   #25 = Methodref          #189.#191     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n-   #26 = Methodref          #189.#192     // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n-   #27 = Methodref          #189.#193     // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n-   #28 = Methodref          #2.#194       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.rop:(JJ)I\n-   #29 = Long               1717986919l\n-   #31 = Methodref          #189.#195     // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n-   #32 = Long               4294967295l\n-   #34 = Class              #196          // java/lang/Integer\n-   #35 = Methodref          #34.#197      // java/lang/Integer.numberOfLeadingZeros:(I)I\n-   #36 = Methodref          #189.#198     // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n-   #37 = Long               1441151881l\n-   #39 = Integer            100000000\n-   #40 = Methodref          #2.#199       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars1:(III)I\n-   #41 = Methodref          #2.#200       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars2:(III)I\n-   #42 = Methodref          #2.#201       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars3:(III)I\n-   #43 = Methodref          #2.#202       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.appendDigit:(I)V\n-   #44 = Methodref          #2.#203       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.y:(I)I\n-   #45 = Integer            268435455\n-   #46 = Methodref          #2.#204       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.removeTrailingZeroes:()V\n-   #47 = Methodref          #2.#205       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append8Digits:(I)V\n-   #48 = Methodref          #2.#206       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.exponent:(I)V\n-   #49 = Long               193428131138340668l\n-   #51 = Class              #207          // java/lang/String\n-   #52 = Methodref          #51.#208      // java/lang/String.\"<init>\":([BIII)V\n-   #53 = Class              #209          // java/lang/Object\n-   #54 = Utf8               P\n-   #55 = Utf8               I\n-   #56 = Utf8               ConstantValue\n-   #57 = Integer            24\n-   #58 = Utf8               W\n-   #59 = Integer            8\n-   #60 = Utf8               Q_MIN\n-   #61 = Integer            -149\n-   #62 = Utf8               Q_MAX\n-   #63 = Integer            104\n-   #64 = Utf8               E_MIN\n-   #65 = Integer            -44\n-   #66 = Utf8               E_MAX\n-   #67 = Integer            39\n-   #68 = Utf8               C_TINY\n-   #69 = Utf8               K_MIN\n-   #70 = Integer            -45\n-   #71 = Utf8               K_MAX\n-   #72 = Integer            31\n-   #73 = Utf8               H\n-   #74 = Integer            9\n-   #75 = Utf8               C_MIN\n-   #76 = Utf8               BQ_MASK\n-   #77 = Integer            255\n-   #78 = Utf8               T_MASK\n-   #79 = Utf8               MASK_32\n-   #80 = Utf8               J\n-   #81 = Utf8               MASK_28\n-   #82 = Utf8               NON_SPECIAL\n-   #83 = Integer            0\n-   #84 = Utf8               PLUS_ZERO\n-   #85 = Integer            1\n-   #86 = Utf8               MINUS_ZERO\n-   #87 = Integer            2\n-   #88 = Utf8               PLUS_INF\n-   #89 = Integer            3\n-   #90 = Utf8               MINUS_INF\n-   #91 = Integer            4\n-   #92 = Utf8               NAN\n-   #93 = Integer            5\n-   #94 = Utf8               MAX_CHARS\n-   #95 = Integer            15\n-   #96 = Utf8               bytes\n-   #97 = Utf8               [B\n-   #98 = Utf8               index\n-   #99 = Utf8               <init>\n-  #100 = Utf8               ()V\n-  #101 = Utf8               Code\n-  #102 = Utf8               LineNumberTable\n-  #103 = Utf8               LocalVariableTable\n-  #104 = Utf8               this\n-  #105 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n-  #106 = Utf8               toString\n-  #107 = Utf8               (F)Ljava/lang/String;\n-  #108 = Utf8               v\n-  #109 = Utf8               F\n-  #110 = Utf8               toDecimalString\n-  #111 = Utf8               StackMapTable\n-  #112 = Utf8               toDecimal\n-  #113 = Utf8               (F)I\n-  #114 = Utf8               f\n-  #115 = Utf8               mq\n-  #116 = Utf8               c\n-  #117 = Utf8               bits\n-  #118 = Utf8               t\n-  #119 = Utf8               bq\n-  #120 = Utf8               (III)I\n-  #121 = Utf8               cbl\n-  #122 = Utf8               k\n-  #123 = Utf8               sp10\n-  #124 = Utf8               tp10\n-  #125 = Utf8               upin\n-  #126 = Utf8               Z\n-  #127 = Utf8               wpin\n-  #128 = Utf8               q\n-  #129 = Utf8               dk\n-  #130 = Utf8               out\n-  #131 = Utf8               cb\n-  #132 = Utf8               cbr\n-  #133 = Utf8               h\n-  #134 = Utf8               g\n-  #135 = Utf8               vb\n-  #136 = Utf8               vbl\n-  #137 = Utf8               vbr\n-  #138 = Utf8               s\n-  #139 = Utf8               uin\n-  #140 = Utf8               win\n-  #141 = Utf8               cmp\n-  #142 = Utf8               rop\n-  #143 = Utf8               (JJ)I\n-  #144 = Utf8               cp\n-  #145 = Utf8               x1\n-  #146 = Utf8               vbp\n-  #147 = Utf8               toChars\n-  #148 = Utf8               (II)I\n-  #149 = Utf8               e\n-  #150 = Utf8               len\n-  #151 = Utf8               l\n-  #152 = Utf8               toChars1\n-  #153 = Utf8               y\n-  #154 = Utf8               i\n-  #155 = Utf8               toChars2\n-  #156 = Utf8               toChars3\n-  #157 = Utf8               append8Digits\n-  #158 = Utf8               (I)V\n-  #159 = Utf8               m\n-  #160 = Utf8               removeTrailingZeroes\n-  #161 = Utf8               (I)I\n-  #162 = Utf8               a\n-  #163 = Utf8               exponent\n-  #164 = Utf8               d\n-  #165 = Utf8               append\n-  #166 = Utf8               appendDigit\n-  #167 = Utf8               charsToString\n-  #168 = Utf8               ()Ljava/lang/String;\n-  #169 = Utf8               SourceFile\n-  #170 = Utf8               FloatToDecimal.java\n-  #171 = Utf8               java/lang/Float\n-  #172 = Utf8               com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-  #173 = NameAndType        #99:#100      // \"<init>\":()V\n-  #174 = NameAndType        #94:#55       // MAX_CHARS:I\n-  #175 = NameAndType        #96:#97       // bytes:[B\n-  #176 = NameAndType        #110:#107     // toDecimalString:(F)Ljava/lang/String;\n-  #177 = NameAndType        #112:#113     // toDecimal:(F)I\n-  #178 = NameAndType        #167:#168     // charsToString:()Ljava/lang/String;\n-  #179 = Utf8               0.0\n-  #180 = Utf8               -0.0\n-  #181 = Utf8               Infinity\n-  #182 = Utf8               -Infinity\n-  #183 = Utf8               NaN\n-  #184 = NameAndType        #210:#113     // floatToRawIntBits:(F)I\n-  #185 = NameAndType        #98:#55       // index:I\n-  #186 = NameAndType        #165:#158     // append:(I)V\n-  #187 = NameAndType        #147:#148     // toChars:(II)I\n-  #188 = NameAndType        #112:#120     // toDecimal:(III)I\n-  #189 = Class              #211          // com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #190 = NameAndType        #212:#161     // flog10pow2:(I)I\n-  #191 = NameAndType        #213:#161     // flog10threeQuartersPow2:(I)I\n-  #192 = NameAndType        #214:#161     // flog2pow10:(I)I\n-  #193 = NameAndType        #215:#216     // g1:(I)J\n-  #194 = NameAndType        #142:#143     // rop:(JJ)I\n-  #195 = NameAndType        #217:#218     // multiplyHigh:(JJ)J\n-  #196 = Utf8               java/lang/Integer\n-  #197 = NameAndType        #219:#161     // numberOfLeadingZeros:(I)I\n-  #198 = NameAndType        #220:#216     // pow10:(I)J\n-  #199 = NameAndType        #152:#120     // toChars1:(III)I\n-  #200 = NameAndType        #155:#120     // toChars2:(III)I\n-  #201 = NameAndType        #156:#120     // toChars3:(III)I\n-  #202 = NameAndType        #166:#158     // appendDigit:(I)V\n-  #203 = NameAndType        #153:#161     // y:(I)I\n-  #204 = NameAndType        #160:#100     // removeTrailingZeroes:()V\n-  #205 = NameAndType        #157:#158     // append8Digits:(I)V\n-  #206 = NameAndType        #163:#158     // exponent:(I)V\n-  #207 = Utf8               java/lang/String\n-  #208 = NameAndType        #99:#221      // \"<init>\":([BIII)V\n-  #209 = Utf8               java/lang/Object\n-  #210 = Utf8               floatToRawIntBits\n-  #211 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n-  #212 = Utf8               flog10pow2\n-  #213 = Utf8               flog10threeQuartersPow2\n-  #214 = Utf8               flog2pow10\n-  #215 = Utf8               g1\n-  #216 = Utf8               (I)J\n-  #217 = Utf8               multiplyHigh\n-  #218 = Utf8               (JJ)J\n-  #219 = Utf8               numberOfLeadingZeros\n-  #220 = Utf8               pow10\n-  #221 = Utf8               ([BIII)V\n+    #1 = Class              #2            // java/lang/Float\n+    #2 = Utf8               java/lang/Float\n+    #3 = Class              #4            // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+    #4 = Utf8               com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+    #5 = Methodref          #6.#7         // java/lang/Object.\"<init>\":()V\n+    #6 = Class              #8            // java/lang/Object\n+    #7 = NameAndType        #9:#10        // \"<init>\":()V\n+    #8 = Utf8               java/lang/Object\n+    #9 = Utf8               <init>\n+   #10 = Utf8               ()V\n+   #11 = Fieldref           #3.#12        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.MAX_CHARS:I\n+   #12 = NameAndType        #13:#14       // MAX_CHARS:I\n+   #13 = Utf8               MAX_CHARS\n+   #14 = Utf8               I\n+   #15 = Fieldref           #3.#16        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.bytes:[B\n+   #16 = NameAndType        #17:#18       // bytes:[B\n+   #17 = Utf8               bytes\n+   #18 = Utf8               [B\n+   #19 = Methodref          #3.#7         // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.\"<init>\":()V\n+   #20 = Methodref          #3.#21        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimalString:(F)Ljava/lang/String;\n+   #21 = NameAndType        #22:#23       // toDecimalString:(F)Ljava/lang/String;\n+   #22 = Utf8               toDecimalString\n+   #23 = Utf8               (F)Ljava/lang/String;\n+   #24 = Methodref          #3.#25        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(F)I\n+   #25 = NameAndType        #26:#27       // toDecimal:(F)I\n+   #26 = Utf8               toDecimal\n+   #27 = Utf8               (F)I\n+   #28 = Methodref          #3.#29        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.charsToString:()Ljava/lang/String;\n+   #29 = NameAndType        #30:#31       // charsToString:()Ljava/lang/String;\n+   #30 = Utf8               charsToString\n+   #31 = Utf8               ()Ljava/lang/String;\n+   #32 = String             #33           // 0.0\n+   #33 = Utf8               0.0\n+   #34 = String             #35           // -0.0\n+   #35 = Utf8               -0.0\n+   #36 = String             #37           // Infinity\n+   #37 = Utf8               Infinity\n+   #38 = String             #39           // -Infinity\n+   #39 = Utf8               -Infinity\n+   #40 = String             #41           // NaN\n+   #41 = Utf8               NaN\n+   #42 = Methodref          #1.#43        // java/lang/Float.floatToRawIntBits:(F)I\n+   #43 = NameAndType        #44:#27       // floatToRawIntBits:(F)I\n+   #44 = Utf8               floatToRawIntBits\n+   #45 = Integer            8388607\n+   #46 = Fieldref           #3.#47        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.index:I\n+   #47 = NameAndType        #48:#14       // index:I\n+   #48 = Utf8               index\n+   #49 = Methodref          #3.#50        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append:(I)V\n+   #50 = NameAndType        #51:#52       // append:(I)V\n+   #51 = Utf8               append\n+   #52 = Utf8               (I)V\n+   #53 = Integer            8388608\n+   #54 = Methodref          #3.#55        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars:(II)I\n+   #55 = NameAndType        #56:#57       // toChars:(II)I\n+   #56 = Utf8               toChars\n+   #57 = Utf8               (II)I\n+   #58 = Methodref          #3.#59        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toDecimal:(III)I\n+   #59 = NameAndType        #26:#60       // toDecimal:(III)I\n+   #60 = Utf8               (III)I\n+   #61 = Long               2l\n+   #63 = Methodref          #64.#65       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+   #64 = Class              #66           // com/fasterxml/jackson/core/io/schubfach/MathUtils\n+   #65 = NameAndType        #67:#68       // flog10pow2:(I)I\n+   #66 = Utf8               com/fasterxml/jackson/core/io/schubfach/MathUtils\n+   #67 = Utf8               flog10pow2\n+   #68 = Utf8               (I)I\n+   #69 = Methodref          #64.#70       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+   #70 = NameAndType        #71:#68       // flog10threeQuartersPow2:(I)I\n+   #71 = Utf8               flog10threeQuartersPow2\n+   #72 = Methodref          #64.#73       // com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+   #73 = NameAndType        #74:#68       // flog2pow10:(I)I\n+   #74 = Utf8               flog2pow10\n+   #75 = Methodref          #64.#76       // com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+   #76 = NameAndType        #77:#78       // g1:(I)J\n+   #77 = Utf8               g1\n+   #78 = Utf8               (I)J\n+   #79 = Methodref          #3.#80        // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.rop:(JJ)I\n+   #80 = NameAndType        #81:#82       // rop:(JJ)I\n+   #81 = Utf8               rop\n+   #82 = Utf8               (JJ)I\n+   #83 = Long               1717986919l\n+   #85 = Methodref          #64.#86       // com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+   #86 = NameAndType        #87:#88       // multiplyHigh:(JJ)J\n+   #87 = Utf8               multiplyHigh\n+   #88 = Utf8               (JJ)J\n+   #89 = Long               4294967295l\n+   #91 = Class              #92           // java/lang/Integer\n+   #92 = Utf8               java/lang/Integer\n+   #93 = Methodref          #91.#94       // java/lang/Integer.numberOfLeadingZeros:(I)I\n+   #94 = NameAndType        #95:#68       // numberOfLeadingZeros:(I)I\n+   #95 = Utf8               numberOfLeadingZeros\n+   #96 = Methodref          #64.#97       // com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+   #97 = NameAndType        #98:#78       // pow10:(I)J\n+   #98 = Utf8               pow10\n+   #99 = Long               1441151881l\n+  #101 = Integer            100000000\n+  #102 = Methodref          #3.#103       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars1:(III)I\n+  #103 = NameAndType        #104:#60      // toChars1:(III)I\n+  #104 = Utf8               toChars1\n+  #105 = Methodref          #3.#106       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars2:(III)I\n+  #106 = NameAndType        #107:#60      // toChars2:(III)I\n+  #107 = Utf8               toChars2\n+  #108 = Methodref          #3.#109       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toChars3:(III)I\n+  #109 = NameAndType        #110:#60      // toChars3:(III)I\n+  #110 = Utf8               toChars3\n+  #111 = Methodref          #3.#112       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.appendDigit:(I)V\n+  #112 = NameAndType        #113:#52      // appendDigit:(I)V\n+  #113 = Utf8               appendDigit\n+  #114 = Methodref          #3.#115       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.y:(I)I\n+  #115 = NameAndType        #116:#68      // y:(I)I\n+  #116 = Utf8               y\n+  #117 = Integer            268435455\n+  #118 = Methodref          #3.#119       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.removeTrailingZeroes:()V\n+  #119 = NameAndType        #120:#10      // removeTrailingZeroes:()V\n+  #120 = Utf8               removeTrailingZeroes\n+  #121 = Methodref          #3.#122       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.append8Digits:(I)V\n+  #122 = NameAndType        #123:#52      // append8Digits:(I)V\n+  #123 = Utf8               append8Digits\n+  #124 = Methodref          #3.#125       // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.exponent:(I)V\n+  #125 = NameAndType        #126:#52      // exponent:(I)V\n+  #126 = Utf8               exponent\n+  #127 = Long               193428131138340668l\n+  #129 = Class              #130          // java/lang/String\n+  #130 = Utf8               java/lang/String\n+  #131 = Methodref          #129.#132     // java/lang/String.\"<init>\":([BIII)V\n+  #132 = NameAndType        #9:#133       // \"<init>\":([BIII)V\n+  #133 = Utf8               ([BIII)V\n+  #134 = Utf8               P\n+  #135 = Utf8               ConstantValue\n+  #136 = Integer            24\n+  #137 = Utf8               W\n+  #138 = Integer            8\n+  #139 = Utf8               Q_MIN\n+  #140 = Integer            -149\n+  #141 = Utf8               Q_MAX\n+  #142 = Integer            104\n+  #143 = Utf8               E_MIN\n+  #144 = Integer            -44\n+  #145 = Utf8               E_MAX\n+  #146 = Integer            39\n+  #147 = Utf8               C_TINY\n+  #148 = Utf8               K_MIN\n+  #149 = Integer            -45\n+  #150 = Utf8               K_MAX\n+  #151 = Integer            31\n+  #152 = Utf8               H\n+  #153 = Integer            9\n+  #154 = Utf8               C_MIN\n+  #155 = Utf8               BQ_MASK\n+  #156 = Integer            255\n+  #157 = Utf8               T_MASK\n+  #158 = Utf8               MASK_32\n+  #159 = Utf8               J\n+  #160 = Utf8               MASK_28\n+  #161 = Utf8               NON_SPECIAL\n+  #162 = Integer            0\n+  #163 = Utf8               PLUS_ZERO\n+  #164 = Integer            1\n+  #165 = Utf8               MINUS_ZERO\n+  #166 = Integer            2\n+  #167 = Utf8               PLUS_INF\n+  #168 = Integer            3\n+  #169 = Utf8               MINUS_INF\n+  #170 = Integer            4\n+  #171 = Utf8               NAN\n+  #172 = Integer            5\n+  #173 = Integer            15\n+  #174 = Utf8               Code\n+  #175 = Utf8               LineNumberTable\n+  #176 = Utf8               LocalVariableTable\n+  #177 = Utf8               this\n+  #178 = Utf8               Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n+  #179 = Utf8               toString\n+  #180 = Utf8               v\n+  #181 = Utf8               F\n+  #182 = Utf8               StackMapTable\n+  #183 = Utf8               f\n+  #184 = Utf8               mq\n+  #185 = Utf8               c\n+  #186 = Utf8               bits\n+  #187 = Utf8               t\n+  #188 = Utf8               bq\n+  #189 = Utf8               cbl\n+  #190 = Utf8               k\n+  #191 = Utf8               sp10\n+  #192 = Utf8               tp10\n+  #193 = Utf8               upin\n+  #194 = Utf8               Z\n+  #195 = Utf8               wpin\n+  #196 = Utf8               q\n+  #197 = Utf8               dk\n+  #198 = Utf8               out\n+  #199 = Utf8               cb\n+  #200 = Utf8               cbr\n+  #201 = Utf8               h\n+  #202 = Utf8               g\n+  #203 = Utf8               vb\n+  #204 = Utf8               vbl\n+  #205 = Utf8               vbr\n+  #206 = Utf8               s\n+  #207 = Utf8               uin\n+  #208 = Utf8               win\n+  #209 = Utf8               cmp\n+  #210 = Utf8               cp\n+  #211 = Utf8               x1\n+  #212 = Utf8               vbp\n+  #213 = Utf8               e\n+  #214 = Utf8               len\n+  #215 = Utf8               l\n+  #216 = Utf8               i\n+  #217 = Utf8               m\n+  #218 = Utf8               a\n+  #219 = Utf8               d\n+  #220 = Utf8               SourceFile\n+  #221 = Utf8               FloatToDecimal.java\n {\n   static final int P = 24;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 24\n \n   private static final int W = 8;\n@@ -345,22 +345,22 @@\n \n   private com.fasterxml.jackson.core.io.schubfach.FloatToDecimal();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #5                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: bipush        15\n-         7: putfield      #4                  // Field MAX_CHARS:I\n+         7: putfield      #11                 // Field MAX_CHARS:I\n         10: aload_0\n         11: bipush        15\n         13: newarray       byte\n-        15: putfield      #5                  // Field bytes:[B\n+        15: putfield      #15                 // Field bytes:[B\n         18: return\n       LineNumberTable:\n         line 122: 0\n         line 114: 4\n         line 117: 10\n         line 123: 18\n       LocalVariableTable:\n@@ -368,54 +368,54 @@\n             0      19     0  this   Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n \n   public static java.lang.String toString(float);\n     descriptor: (F)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #2                  // class com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+         0: new           #3                  // class com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n          3: dup\n-         4: invokespecial #6                  // Method \"<init>\":()V\n+         4: invokespecial #19                 // Method \"<init>\":()V\n          7: fload_0\n-         8: invokespecial #7                  // Method toDecimalString:(F)Ljava/lang/String;\n+         8: invokespecial #20                 // Method toDecimalString:(F)Ljava/lang/String;\n         11: areturn\n       LineNumberTable:\n         line 239: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     v   F\n \n   private java.lang.String toDecimalString(float);\n     descriptor: (F)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: fload_1\n-         2: invokespecial #8                  // Method toDecimal:(F)I\n+         2: invokespecial #24                 // Method toDecimal:(F)I\n          5: tableswitch   { // 0 to 4\n                        0: 40\n                        1: 45\n                        2: 48\n                        3: 51\n                        4: 54\n                  default: 57\n             }\n         40: aload_0\n-        41: invokespecial #9                  // Method charsToString:()Ljava/lang/String;\n+        41: invokespecial #28                 // Method charsToString:()Ljava/lang/String;\n         44: areturn\n-        45: ldc           #10                 // String 0.0\n+        45: ldc           #32                 // String 0.0\n         47: areturn\n-        48: ldc           #11                 // String -0.0\n+        48: ldc           #34                 // String -0.0\n         50: areturn\n-        51: ldc           #12                 // String Infinity\n+        51: ldc           #36                 // String Infinity\n         53: areturn\n-        54: ldc           #13                 // String -Infinity\n+        54: ldc           #38                 // String -Infinity\n         56: areturn\n-        57: ldc           #14                 // String NaN\n+        57: ldc           #40                 // String NaN\n         59: areturn\n       LineNumberTable:\n         line 243: 0\n         line 244: 40\n         line 245: 45\n         line 246: 48\n         line 247: 51\n@@ -435,44 +435,44 @@\n \n   private int toDecimal(float);\n     descriptor: (F)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=8, args_size=2\n          0: fload_1\n-         1: invokestatic  #15                 // Method java/lang/Float.floatToRawIntBits:(F)I\n+         1: invokestatic  #42                 // Method java/lang/Float.floatToRawIntBits:(F)I\n          4: istore_2\n          5: iload_2\n-         6: ldc           #16                 // int 8388607\n+         6: ldc           #45                 // int 8388607\n          8: iand\n          9: istore_3\n         10: iload_2\n         11: bipush        23\n         13: iushr\n         14: sipush        255\n         17: iand\n         18: istore        4\n         20: iload         4\n         22: sipush        255\n         25: if_icmpge     170\n         28: aload_0\n         29: iconst_m1\n-        30: putfield      #17                 // Field index:I\n+        30: putfield      #46                 // Field index:I\n         33: iload_2\n         34: ifge          43\n         37: aload_0\n         38: bipush        45\n-        40: invokespecial #18                 // Method append:(I)V\n+        40: invokespecial #49                 // Method append:(I)V\n         43: iload         4\n         45: ifeq          125\n         48: sipush        150\n         51: iload         4\n         53: isub\n         54: istore        5\n-        56: ldc           #19                 // int 8388608\n+        56: ldc           #53                 // int 8388608\n         58: iload_3\n         59: ior\n         60: istore        6\n         62: iconst_0\n         63: iload         5\n         65: if_icmpge     72\n         68: iconst_1\n@@ -494,41 +494,41 @@\n         98: iload         5\n        100: ishl\n        101: iload         6\n        103: if_icmpne     114\n        106: aload_0\n        107: iload         7\n        109: iconst_0\n-       110: invokespecial #20                 // Method toChars:(II)I\n+       110: invokespecial #54                 // Method toChars:(II)I\n        113: ireturn\n        114: aload_0\n        115: iload         5\n        117: ineg\n        118: iload         6\n        120: iconst_0\n-       121: invokespecial #21                 // Method toDecimal:(III)I\n+       121: invokespecial #58                 // Method toDecimal:(III)I\n        124: ireturn\n        125: iload_3\n        126: ifeq          160\n        129: iload_3\n        130: bipush        8\n        132: if_icmpge     150\n        135: aload_0\n        136: sipush        -149\n        139: bipush        10\n        141: iload_3\n        142: imul\n        143: iconst_m1\n-       144: invokespecial #21                 // Method toDecimal:(III)I\n+       144: invokespecial #58                 // Method toDecimal:(III)I\n        147: goto          159\n        150: aload_0\n        151: sipush        -149\n        154: iload_3\n        155: iconst_0\n-       156: invokespecial #21                 // Method toDecimal:(III)I\n+       156: invokespecial #58                 // Method toDecimal:(III)I\n        159: ireturn\n        160: iload_2\n        161: ifne          168\n        164: iconst_1\n        165: goto          169\n        168: iconst_2\n        169: ireturn\n@@ -619,88 +619,88 @@\n          3: istore        4\n          5: iload_2\n          6: iconst_2\n          7: ishl\n          8: i2l\n          9: lstore        5\n         11: lload         5\n-        13: ldc2_w        #22                 // long 2l\n+        13: ldc2_w        #61                 // long 2l\n         16: ladd\n         17: lstore        7\n         19: iload_2\n-        20: ldc           #19                 // int 8388608\n+        20: ldc           #53                 // int 8388608\n         22: if_icmpeq     29\n         25: iconst_1\n         26: goto          30\n         29: iconst_0\n         30: iload_1\n         31: sipush        -149\n         34: if_icmpne     41\n         37: iconst_1\n         38: goto          42\n         41: iconst_0\n         42: ior\n         43: ifeq          63\n         46: lload         5\n-        48: ldc2_w        #22                 // long 2l\n+        48: ldc2_w        #61                 // long 2l\n         51: lsub\n         52: lstore        9\n         54: iload_1\n-        55: invokestatic  #24                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+        55: invokestatic  #63                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         58: istore        11\n         60: goto          75\n         63: lload         5\n         65: lconst_1\n         66: lsub\n         67: lstore        9\n         69: iload_1\n-        70: invokestatic  #25                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n+        70: invokestatic  #69                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10threeQuartersPow2:(I)I\n         73: istore        11\n         75: iload_1\n         76: iload         11\n         78: ineg\n-        79: invokestatic  #26                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n+        79: invokestatic  #72                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog2pow10:(I)I\n         82: iadd\n         83: bipush        33\n         85: iadd\n         86: istore        12\n         88: iload         11\n-        90: invokestatic  #27                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n+        90: invokestatic  #75                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.g1:(I)J\n         93: lconst_1\n         94: ladd\n         95: lstore        13\n         97: lload         13\n         99: lload         5\n        101: iload         12\n        103: lshl\n-       104: invokestatic  #28                 // Method rop:(JJ)I\n+       104: invokestatic  #79                 // Method rop:(JJ)I\n        107: istore        15\n        109: lload         13\n        111: lload         9\n        113: iload         12\n        115: lshl\n-       116: invokestatic  #28                 // Method rop:(JJ)I\n+       116: invokestatic  #79                 // Method rop:(JJ)I\n        119: istore        16\n        121: lload         13\n        123: lload         7\n        125: iload         12\n        127: lshl\n-       128: invokestatic  #28                 // Method rop:(JJ)I\n+       128: invokestatic  #79                 // Method rop:(JJ)I\n        131: istore        17\n        133: iload         15\n        135: iconst_2\n        136: ishr\n        137: istore        18\n        139: iload         18\n        141: bipush        100\n        143: if_icmplt     233\n        146: bipush        10\n        148: iload         18\n        150: i2l\n-       151: ldc2_w        #29                 // long 1717986919l\n+       151: ldc2_w        #83                 // long 1717986919l\n        154: lmul\n        155: bipush        34\n        157: lushr\n        158: l2i\n        159: imul\n        160: istore        19\n        162: iload         19\n@@ -735,15 +735,15 @@\n        214: aload_0\n        215: iload         21\n        217: ifeq          225\n        220: iload         19\n        222: goto          227\n        225: iload         20\n        227: iload         11\n-       229: invokespecial #20                 // Method toChars:(II)I\n+       229: invokespecial #54                 // Method toChars:(II)I\n        232: ireturn\n        233: iload         18\n        235: iconst_1\n        236: iadd\n        237: istore        19\n        239: iload         16\n        241: iload         4\n@@ -775,15 +775,15 @@\n        287: ifeq          295\n        290: iload         18\n        292: goto          297\n        295: iload         19\n        297: iload         11\n        299: iload_3\n        300: iadd\n-       301: invokespecial #20                 // Method toChars:(II)I\n+       301: invokespecial #54                 // Method toChars:(II)I\n        304: ireturn\n        305: iload         15\n        307: iload         18\n        309: iload         19\n        311: iadd\n        312: iconst_1\n        313: ishl\n@@ -800,15 +800,15 @@\n        332: ifne          340\n        335: iload         18\n        337: goto          342\n        340: iload         19\n        342: iload         11\n        344: iload_3\n        345: iadd\n-       346: invokespecial #20                 // Method toChars:(II)I\n+       346: invokespecial #54                 // Method toChars:(II)I\n        349: ireturn\n       LineNumberTable:\n         line 325: 0\n         line 326: 5\n         line 327: 11\n         line 335: 19\n         line 337: 46\n@@ -934,25 +934,25 @@\n   private static int rop(long, long);\n     descriptor: (JJ)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=6, locals=8, args_size=2\n          0: lload_0\n          1: lload_2\n-         2: invokestatic  #31                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         2: invokestatic  #85                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n          5: lstore        4\n          7: lload         4\n          9: bipush        31\n         11: lushr\n         12: lstore        6\n         14: lload         6\n         16: lload         4\n-        18: ldc2_w        #32                 // long 4294967295l\n+        18: ldc2_w        #89                 // long 4294967295l\n         21: land\n-        22: ldc2_w        #32                 // long 4294967295l\n+        22: ldc2_w        #89                 // long 4294967295l\n         25: ladd\n         26: bipush        32\n         28: lushr\n         29: lor\n         30: l2i\n         31: ireturn\n       LineNumberTable:\n@@ -969,80 +969,80 @@\n   private int toChars(int, int);\n     descriptor: (II)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=6, args_size=3\n          0: bipush        32\n          2: iload_1\n-         3: invokestatic  #35                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I\n+         3: invokestatic  #93                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I\n          6: isub\n-         7: invokestatic  #24                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n+         7: invokestatic  #63                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.flog10pow2:(I)I\n         10: istore_3\n         11: iload_1\n         12: i2l\n         13: iload_3\n-        14: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        14: invokestatic  #96                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         17: lcmp\n         18: iflt          24\n         21: iinc          3, 1\n         24: iload_1\n         25: i2l\n         26: bipush        9\n         28: iload_3\n         29: isub\n-        30: invokestatic  #36                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n+        30: invokestatic  #96                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.pow10:(I)J\n         33: lmul\n         34: l2i\n         35: istore_1\n         36: iload_2\n         37: iload_3\n         38: iadd\n         39: istore_2\n         40: iload_1\n         41: i2l\n-        42: ldc2_w        #37                 // long 1441151881l\n+        42: ldc2_w        #99                 // long 1441151881l\n         45: lmul\n         46: bipush        57\n         48: lushr\n         49: l2i\n         50: istore        4\n         52: iload_1\n-        53: ldc           #39                 // int 100000000\n+        53: ldc           #101                // int 100000000\n         55: iload         4\n         57: imul\n         58: isub\n         59: istore        5\n         61: iconst_0\n         62: iload_2\n         63: if_icmpge     82\n         66: iload_2\n         67: bipush        7\n         69: if_icmpgt     82\n         72: aload_0\n         73: iload         4\n         75: iload         5\n         77: iload_2\n-        78: invokespecial #40                 // Method toChars1:(III)I\n+        78: invokespecial #102                // Method toChars1:(III)I\n         81: ireturn\n         82: bipush        -3\n         84: iload_2\n         85: if_icmpge     102\n         88: iload_2\n         89: ifgt          102\n         92: aload_0\n         93: iload         4\n         95: iload         5\n         97: iload_2\n-        98: invokespecial #41                 // Method toChars2:(III)I\n+        98: invokespecial #105                // Method toChars2:(III)I\n        101: ireturn\n        102: aload_0\n        103: iload         4\n        105: iload         5\n        107: iload_2\n-       108: invokespecial #42                 // Method toChars3:(III)I\n+       108: invokespecial #108                // Method toChars3:(III)I\n        111: ireturn\n       LineNumberTable:\n         line 415: 0\n         line 416: 11\n         line 417: 21\n         line 426: 24\n         line 427: 36\n@@ -1073,62 +1073,62 @@\n   private int toChars1(int, int, int);\n     descriptor: (III)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=7, args_size=4\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #43                 // Method appendDigit:(I)V\n+         2: invokespecial #111                // Method appendDigit:(I)V\n          5: aload_0\n          6: iload_2\n-         7: invokespecial #44                 // Method y:(I)I\n+         7: invokespecial #114                // Method y:(I)I\n         10: istore        4\n         12: iconst_1\n         13: istore        6\n         15: iload         6\n         17: iload_3\n         18: if_icmpge     50\n         21: bipush        10\n         23: iload         4\n         25: imul\n         26: istore        5\n         28: aload_0\n         29: iload         5\n         31: bipush        28\n         33: iushr\n-        34: invokespecial #43                 // Method appendDigit:(I)V\n+        34: invokespecial #111                // Method appendDigit:(I)V\n         37: iload         5\n-        39: ldc           #45                 // int 268435455\n+        39: ldc           #117                // int 268435455\n         41: iand\n         42: istore        4\n         44: iinc          6, 1\n         47: goto          15\n         50: aload_0\n         51: bipush        46\n-        53: invokespecial #18                 // Method append:(I)V\n+        53: invokespecial #49                 // Method append:(I)V\n         56: iload         6\n         58: bipush        8\n         60: if_icmpgt     92\n         63: bipush        10\n         65: iload         4\n         67: imul\n         68: istore        5\n         70: aload_0\n         71: iload         5\n         73: bipush        28\n         75: iushr\n-        76: invokespecial #43                 // Method appendDigit:(I)V\n+        76: invokespecial #111                // Method appendDigit:(I)V\n         79: iload         5\n-        81: ldc           #45                 // int 268435455\n+        81: ldc           #117                // int 268435455\n         83: iand\n         84: istore        4\n         86: iinc          6, 1\n         89: goto          56\n         92: aload_0\n-        93: invokespecial #46                 // Method removeTrailingZeroes:()V\n+        93: invokespecial #118                // Method removeTrailingZeroes:()V\n         96: iconst_0\n         97: ireturn\n       LineNumberTable:\n         line 457: 0\n         line 458: 5\n         line 460: 12\n         line 461: 15\n@@ -1165,33 +1165,33 @@\n   private int toChars2(int, int, int);\n     descriptor: (III)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: iconst_0\n-         2: invokespecial #43                 // Method appendDigit:(I)V\n+         2: invokespecial #111                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #18                 // Method append:(I)V\n+         8: invokespecial #49                 // Method append:(I)V\n         11: iload_3\n         12: ifge          26\n         15: aload_0\n         16: iconst_0\n-        17: invokespecial #43                 // Method appendDigit:(I)V\n+        17: invokespecial #111                // Method appendDigit:(I)V\n         20: iinc          3, 1\n         23: goto          11\n         26: aload_0\n         27: iload_1\n-        28: invokespecial #43                 // Method appendDigit:(I)V\n+        28: invokespecial #111                // Method appendDigit:(I)V\n         31: aload_0\n         32: iload_2\n-        33: invokespecial #47                 // Method append8Digits:(I)V\n+        33: invokespecial #121                // Method append8Digits:(I)V\n         36: aload_0\n-        37: invokespecial #46                 // Method removeTrailingZeroes:()V\n+        37: invokespecial #118                // Method removeTrailingZeroes:()V\n         40: iconst_0\n         41: ireturn\n       LineNumberTable:\n         line 478: 0\n         line 479: 5\n         line 480: 11\n         line 481: 15\n@@ -1213,28 +1213,28 @@\n   private int toChars3(int, int, int);\n     descriptor: (III)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #43                 // Method appendDigit:(I)V\n+         2: invokespecial #111                // Method appendDigit:(I)V\n          5: aload_0\n          6: bipush        46\n-         8: invokespecial #18                 // Method append:(I)V\n+         8: invokespecial #49                 // Method append:(I)V\n         11: aload_0\n         12: iload_2\n-        13: invokespecial #47                 // Method append8Digits:(I)V\n+        13: invokespecial #121                // Method append8Digits:(I)V\n         16: aload_0\n-        17: invokespecial #46                 // Method removeTrailingZeroes:()V\n+        17: invokespecial #118                // Method removeTrailingZeroes:()V\n         20: aload_0\n         21: iload_3\n         22: iconst_1\n         23: isub\n-        24: invokespecial #48                 // Method exponent:(I)V\n+        24: invokespecial #124                // Method exponent:(I)V\n         27: iconst_0\n         28: ireturn\n       LineNumberTable:\n         line 491: 0\n         line 492: 5\n         line 493: 11\n         line 494: 16\n@@ -1250,32 +1250,32 @@\n   private void append8Digits(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #44                 // Method y:(I)I\n+         2: invokespecial #114                // Method y:(I)I\n          5: istore_2\n          6: iconst_0\n          7: istore_3\n          8: iload_3\n          9: bipush        8\n         11: if_icmpge     41\n         14: bipush        10\n         16: iload_2\n         17: imul\n         18: istore        4\n         20: aload_0\n         21: iload         4\n         23: bipush        28\n         25: iushr\n-        26: invokespecial #43                 // Method appendDigit:(I)V\n+        26: invokespecial #111                // Method appendDigit:(I)V\n         29: iload         4\n-        31: ldc           #45                 // int 268435455\n+        31: ldc           #117                // int 268435455\n         33: iand\n         34: istore_2\n         35: iinc          3, 1\n         38: goto          8\n         41: return\n       LineNumberTable:\n         line 504: 0\n@@ -1301,40 +1301,40 @@\n \n   private void removeTrailingZeroes();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n-         5: getfield      #17                 // Field index:I\n+         5: getfield      #46                 // Field index:I\n          8: baload\n          9: bipush        48\n         11: if_icmpne     27\n         14: aload_0\n         15: dup\n-        16: getfield      #17                 // Field index:I\n+        16: getfield      #46                 // Field index:I\n         19: iconst_1\n         20: isub\n-        21: putfield      #17                 // Field index:I\n+        21: putfield      #46                 // Field index:I\n         24: goto          0\n         27: aload_0\n-        28: getfield      #5                  // Field bytes:[B\n+        28: getfield      #15                 // Field bytes:[B\n         31: aload_0\n-        32: getfield      #17                 // Field index:I\n+        32: getfield      #46                 // Field index:I\n         35: baload\n         36: bipush        46\n         38: if_icmpne     51\n         41: aload_0\n         42: dup\n-        43: getfield      #17                 // Field index:I\n+        43: getfield      #46                 // Field index:I\n         46: iconst_1\n         47: iadd\n-        48: putfield      #17                 // Field index:I\n+        48: putfield      #46                 // Field index:I\n         51: return\n       LineNumberTable:\n         line 513: 0\n         line 514: 14\n         line 517: 27\n         line 518: 41\n         line 520: 51\n@@ -1353,16 +1353,16 @@\n       stack=4, locals=2, args_size=2\n          0: iload_1\n          1: iconst_1\n          2: iadd\n          3: i2l\n          4: bipush        28\n          6: lshl\n-         7: ldc2_w        #49                 // long 193428131138340668l\n-        10: invokestatic  #31                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n+         7: ldc2_w        #127                // long 193428131138340668l\n+        10: invokestatic  #85                 // Method com/fasterxml/jackson/core/io/schubfach/MathUtils.multiplyHigh:(JJ)J\n         13: bipush        20\n         15: lushr\n         16: l2i\n         17: iconst_1\n         18: isub\n         19: ireturn\n       LineNumberTable:\n@@ -1375,46 +1375,46 @@\n   private void exponent(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_0\n          1: bipush        69\n-         3: invokespecial #18                 // Method append:(I)V\n+         3: invokespecial #49                 // Method append:(I)V\n          6: iload_1\n          7: ifge          19\n         10: aload_0\n         11: bipush        45\n-        13: invokespecial #18                 // Method append:(I)V\n+        13: invokespecial #49                 // Method append:(I)V\n         16: iload_1\n         17: ineg\n         18: istore_1\n         19: iload_1\n         20: bipush        10\n         22: if_icmpge     31\n         25: aload_0\n         26: iload_1\n-        27: invokespecial #43                 // Method appendDigit:(I)V\n+        27: invokespecial #111                // Method appendDigit:(I)V\n         30: return\n         31: iload_1\n         32: bipush        103\n         34: imul\n         35: bipush        10\n         37: iushr\n         38: istore_2\n         39: aload_0\n         40: iload_2\n-        41: invokespecial #43                 // Method appendDigit:(I)V\n+        41: invokespecial #111                // Method appendDigit:(I)V\n         44: aload_0\n         45: iload_1\n         46: bipush        10\n         48: iload_2\n         49: imul\n         50: isub\n-        51: invokespecial #43                 // Method appendDigit:(I)V\n+        51: invokespecial #111                // Method appendDigit:(I)V\n         54: return\n       LineNumberTable:\n         line 537: 0\n         line 538: 6\n         line 539: 10\n         line 540: 16\n         line 542: 19\n@@ -1435,22 +1435,22 @@\n \n   private void append(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #17                 // Field index:I\n+         6: getfield      #46                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #17                 // Field index:I\n+        12: putfield      #46                 // Field index:I\n         15: iload_1\n         16: i2b\n         17: bastore\n         18: return\n       LineNumberTable:\n         line 556: 0\n         line 557: 18\n@@ -1461,22 +1461,22 @@\n \n   private void appendDigit(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field bytes:[B\n+         1: getfield      #15                 // Field bytes:[B\n          4: aload_0\n          5: dup\n-         6: getfield      #17                 // Field index:I\n+         6: getfield      #46                 // Field index:I\n          9: iconst_1\n         10: iadd\n         11: dup_x1\n-        12: putfield      #17                 // Field index:I\n+        12: putfield      #46                 // Field index:I\n         15: bipush        48\n         17: iload_1\n         18: iadd\n         19: i2b\n         20: bastore\n         21: return\n       LineNumberTable:\n@@ -1488,25 +1488,25 @@\n             0      22     1     d   I\n \n   private java.lang.String charsToString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=7, locals=1, args_size=1\n-         0: new           #51                 // class java/lang/String\n+         0: new           #129                // class java/lang/String\n          3: dup\n          4: aload_0\n-         5: getfield      #5                  // Field bytes:[B\n+         5: getfield      #15                 // Field bytes:[B\n          8: iconst_0\n          9: iconst_0\n         10: aload_0\n-        11: getfield      #17                 // Field index:I\n+        11: getfield      #46                 // Field index:I\n         14: iconst_1\n         15: iadd\n-        16: invokespecial #52                 // Method java/lang/String.\"<init>\":([BIII)V\n+        16: invokespecial #131                // Method java/lang/String.\"<init>\":([BIII)V\n         19: areturn\n       LineNumberTable:\n         line 566: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      20     0  this   Lcom/fasterxml/jackson/core/io/schubfach/FloatToDecimal;\n }\n"}]}
