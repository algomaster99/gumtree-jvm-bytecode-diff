{"diffoscope-json-version": 1, "source1": "first/CSVFormat$Builder.class", "source2": "second/CSVFormat$Builder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,413 +1,413 @@\n-  SHA-256 checksum bd0388f66146f2ddc1c74338fe6b4a6176425a3c19bc3f4b133a6f04fcfc5a10\n+  SHA-256 checksum 910f1284756bcd2640619f51657ae8db11928d6ff5bf68a5b6adc8854ae1b085\n   Compiled from \"CSVFormat.java\"\n public class org.apache.commons.csv.CSVFormat$Builder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #20                         // org/apache/commons/csv/CSVFormat$Builder\n-  super_class: #86                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/csv/CSVFormat$Builder\n+  super_class: #77                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 52, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #20.#217      // org/apache/commons/csv/CSVFormat$Builder.duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-    #2 = Fieldref           #20.#218      // org/apache/commons/csv/CSVFormat$Builder.quotedNullString:Ljava/lang/String;\n-    #3 = Fieldref           #20.#219      // org/apache/commons/csv/CSVFormat$Builder.autoFlush:Z\n-    #4 = Fieldref           #20.#220      // org/apache/commons/csv/CSVFormat$Builder.trim:Z\n-    #5 = Fieldref           #20.#221      // org/apache/commons/csv/CSVFormat$Builder.trailingDelimiter:Z\n-    #6 = Fieldref           #20.#222      // org/apache/commons/csv/CSVFormat$Builder.ignoreHeaderCase:Z\n-    #7 = Fieldref           #20.#223      // org/apache/commons/csv/CSVFormat$Builder.skipHeaderRecord:Z\n-    #8 = Fieldref           #20.#224      // org/apache/commons/csv/CSVFormat$Builder.headers:[Ljava/lang/String;\n-    #9 = Fieldref           #20.#225      // org/apache/commons/csv/CSVFormat$Builder.headerComments:[Ljava/lang/String;\n-   #10 = Fieldref           #20.#226      // org/apache/commons/csv/CSVFormat$Builder.nullString:Ljava/lang/String;\n-   #11 = Fieldref           #20.#227      // org/apache/commons/csv/CSVFormat$Builder.recordSeparator:Ljava/lang/String;\n-   #12 = Fieldref           #20.#228      // org/apache/commons/csv/CSVFormat$Builder.ignoreEmptyLines:Z\n-   #13 = Fieldref           #20.#229      // org/apache/commons/csv/CSVFormat$Builder.allowMissingColumnNames:Z\n-   #14 = Fieldref           #20.#230      // org/apache/commons/csv/CSVFormat$Builder.ignoreSurroundingSpaces:Z\n-   #15 = Fieldref           #20.#231      // org/apache/commons/csv/CSVFormat$Builder.escapeCharacter:Ljava/lang/Character;\n-   #16 = Fieldref           #20.#232      // org/apache/commons/csv/CSVFormat$Builder.commentMarker:Ljava/lang/Character;\n-   #17 = Fieldref           #20.#233      // org/apache/commons/csv/CSVFormat$Builder.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-   #18 = Fieldref           #20.#234      // org/apache/commons/csv/CSVFormat$Builder.quoteCharacter:Ljava/lang/Character;\n-   #19 = Fieldref           #20.#235      // org/apache/commons/csv/CSVFormat$Builder.delimiter:Ljava/lang/String;\n-   #20 = Class              #236          // org/apache/commons/csv/CSVFormat$Builder\n-   #21 = Fieldref           #43.#237      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-   #22 = Methodref          #20.#238      // org/apache/commons/csv/CSVFormat$Builder.\"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n-   #23 = Methodref          #86.#239      // java/lang/Object.\"<init>\":()V\n-   #24 = Methodref          #43.#240      // org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #25 = Methodref          #43.#241      // org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #26 = Methodref          #43.#242      // org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-   #27 = Methodref          #43.#243      // org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #28 = Methodref          #43.#244      // org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-   #29 = Methodref          #43.#245      // org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #30 = Methodref          #43.#246      // org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #31 = Methodref          #43.#247      // org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #32 = Methodref          #43.#248      // org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #33 = Methodref          #43.#249      // org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #34 = Methodref          #43.#250      // org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-   #35 = Methodref          #43.#251      // org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-   #36 = Methodref          #43.#252      // org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #37 = Methodref          #43.#253      // org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #38 = Methodref          #43.#254      // org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #39 = Methodref          #43.#255      // org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #40 = Methodref          #43.#256      // org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-   #41 = Methodref          #43.#257      // org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-   #42 = Methodref          #43.#258      // org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-   #43 = Class              #259          // org/apache/commons/csv/CSVFormat\n-   #44 = Methodref          #43.#260      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-   #45 = Fieldref           #62.#261      // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-   #46 = Fieldref           #62.#262      // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-   #47 = Methodref          #20.#263      // org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #48 = Methodref          #264.#265     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #49 = Methodref          #20.#266      // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #50 = Methodref          #43.#267      // org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n-   #51 = Class              #268          // java/lang/IllegalArgumentException\n-   #52 = String             #269          // The comment start marker character cannot be a line break\n-   #53 = Methodref          #51.#270      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #54 = Methodref          #67.#271      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #55 = Methodref          #20.#272      // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #56 = Methodref          #43.#273      // org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n-   #57 = String             #274          // The delimiter cannot be a line break\n-   #58 = Methodref          #67.#275      // java/lang/String.isEmpty:()Z\n-   #59 = String             #276          // The delimiter cannot be empty\n-   #60 = String             #94           // duplicateHeaderMode\n-   #61 = Methodref          #277.#278     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #62 = Class              #279          // org/apache/commons/csv/DuplicateHeaderMode\n-   #63 = Methodref          #20.#280      // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #64 = String             #281          // The escape character cannot be a line break\n-   #65 = Methodref          #282.#283     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-   #66 = Class              #149          // \"[Ljava/lang/Enum;\"\n-   #67 = Class              #284          // java/lang/String\n-   #68 = InvokeDynamic      #0:#290       // #0:apply:([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n-   #69 = Methodref          #291.#292     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-   #70 = Methodref          #20.#293      // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #71 = InterfaceMethodref #161.#294     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n-   #72 = Methodref          #20.#295      // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #73 = InterfaceMethodref #162.#296     // java/sql/ResultSetMetaData.getColumnCount:()I\n-   #74 = InterfaceMethodref #162.#297     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n-   #75 = Methodref          #43.#298      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #76 = Class              #98           // \"[Ljava/lang/String;\"\n-   #77 = Methodref          #43.#299      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-   #78 = Class              #300          // java/lang/StringBuilder\n-   #79 = Methodref          #78.#239      // java/lang/StringBuilder.\"<init>\":()V\n-   #80 = Methodref          #78.#301      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #81 = Methodref          #78.#302      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #82 = Methodref          #78.#303      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #83 = Methodref          #20.#304      // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #84 = String             #305          // The quoteChar cannot be a line break\n-   #85 = Methodref          #306.#307     // java/lang/Enum.name:()Ljava/lang/String;\n-   #86 = Class              #308          // java/lang/Object\n-   #87 = Utf8               allowMissingColumnNames\n-   #88 = Utf8               Z\n-   #89 = Utf8               autoFlush\n-   #90 = Utf8               commentMarker\n-   #91 = Utf8               Ljava/lang/Character;\n-   #92 = Utf8               delimiter\n-   #93 = Utf8               Ljava/lang/String;\n-   #94 = Utf8               duplicateHeaderMode\n-   #95 = Utf8               Lorg/apache/commons/csv/DuplicateHeaderMode;\n-   #96 = Utf8               escapeCharacter\n-   #97 = Utf8               headerComments\n-   #98 = Utf8               [Ljava/lang/String;\n-   #99 = Utf8               headers\n-  #100 = Utf8               ignoreEmptyLines\n-  #101 = Utf8               ignoreHeaderCase\n-  #102 = Utf8               ignoreSurroundingSpaces\n-  #103 = Utf8               nullString\n-  #104 = Utf8               quoteCharacter\n-  #105 = Utf8               quotedNullString\n-  #106 = Utf8               quoteMode\n-  #107 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-  #108 = Utf8               recordSeparator\n-  #109 = Utf8               skipHeaderRecord\n-  #110 = Utf8               trailingDelimiter\n-  #111 = Utf8               trim\n-  #112 = Utf8               create\n-  #113 = Utf8               Builder\n-  #114 = Utf8               InnerClasses\n-  #115 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #116 = Utf8               Code\n-  #117 = Utf8               LineNumberTable\n-  #118 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #119 = Utf8               LocalVariableTable\n-  #120 = Utf8               csvFormat\n-  #121 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #122 = Utf8               <init>\n-  #123 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)V\n-  #124 = Utf8               this\n-  #125 = Utf8               Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #126 = Utf8               build\n-  #127 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #128 = Utf8               setAllowDuplicateHeaderNames\n-  #129 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #130 = Utf8               allowDuplicateHeaderNames\n-  #131 = Utf8               StackMapTable\n-  #132 = Utf8               Deprecated\n-  #133 = Utf8               RuntimeVisibleAnnotations\n-  #134 = Utf8               Ljava/lang/Deprecated;\n-  #135 = Utf8               setAllowMissingColumnNames\n-  #136 = Utf8               setAutoFlush\n-  #137 = Utf8               setCommentMarker\n-  #138 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #139 = Utf8               C\n-  #140 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #141 = Utf8               setDelimiter\n-  #142 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #143 = Utf8               setDuplicateHeaderMode\n-  #144 = Utf8               (Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #145 = Utf8               setEscape\n-  #146 = Utf8               setHeader\n-  #147 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #148 = Utf8               enumValues\n-  #149 = Utf8               [Ljava/lang/Enum;\n-  #150 = Utf8               headerEnum\n-  #151 = Utf8               Ljava/lang/Class;\n-  #152 = Utf8               header\n-  #153 = Utf8               LocalVariableTypeTable\n-  #154 = Utf8               [Ljava/lang/Enum<*>;\n-  #155 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n-  #156 = Utf8               Signature\n-  #157 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #158 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #159 = Utf8               resultSet\n-  #160 = Utf8               Ljava/sql/ResultSet;\n-  #161 = Class              #309          // java/sql/ResultSet\n-  #162 = Class              #310          // java/sql/ResultSetMetaData\n-  #163 = Utf8               Exceptions\n-  #164 = Class              #311          // java/sql/SQLException\n-  #165 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #166 = Utf8               i\n-  #167 = Utf8               I\n-  #168 = Utf8               columnCount\n-  #169 = Utf8               resultSetMetaData\n-  #170 = Utf8               Ljava/sql/ResultSetMetaData;\n-  #171 = Utf8               labels\n-  #172 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #173 = Utf8               setHeaderComments\n-  #174 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #175 = Utf8               [Ljava/lang/Object;\n-  #176 = Utf8               setIgnoreEmptyLines\n-  #177 = Utf8               setIgnoreHeaderCase\n-  #178 = Utf8               setIgnoreSurroundingSpaces\n-  #179 = Utf8               setNullString\n-  #180 = Utf8               setQuote\n-  #181 = Utf8               setQuoteMode\n-  #182 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #183 = Utf8               setRecordSeparator\n-  #184 = Utf8               setSkipHeaderRecord\n-  #185 = Utf8               setTrailingDelimiter\n-  #186 = Utf8               setTrim\n-  #187 = Utf8               lambda$setHeader$0\n-  #188 = Utf8               ([Ljava/lang/Enum;I)Ljava/lang/String;\n-  #189 = Utf8               access$2200\n-  #190 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #191 = Utf8               x0\n-  #192 = Utf8               access$2300\n-  #193 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #194 = Utf8               access$2400\n-  #195 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #196 = Utf8               access$2500\n-  #197 = Utf8               access$2600\n-  #198 = Utf8               access$2700\n-  #199 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #200 = Utf8               access$2800\n-  #201 = Utf8               access$2900\n-  #202 = Utf8               access$3000\n-  #203 = Utf8               access$3100\n-  #204 = Utf8               access$3200\n-  #205 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #206 = Utf8               access$3300\n-  #207 = Utf8               access$3400\n-  #208 = Utf8               access$3500\n-  #209 = Utf8               access$3600\n-  #210 = Utf8               access$3700\n-  #211 = Utf8               access$3800\n-  #212 = Utf8               access$3900\n-  #213 = Utf8               access$4000\n-  #214 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #215 = Utf8               SourceFile\n-  #216 = Utf8               CSVFormat.java\n-  #217 = NameAndType        #94:#95       // duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #218 = NameAndType        #105:#93      // quotedNullString:Ljava/lang/String;\n-  #219 = NameAndType        #89:#88       // autoFlush:Z\n-  #220 = NameAndType        #111:#88      // trim:Z\n-  #221 = NameAndType        #110:#88      // trailingDelimiter:Z\n-  #222 = NameAndType        #101:#88      // ignoreHeaderCase:Z\n-  #223 = NameAndType        #109:#88      // skipHeaderRecord:Z\n-  #224 = NameAndType        #99:#98       // headers:[Ljava/lang/String;\n-  #225 = NameAndType        #97:#98       // headerComments:[Ljava/lang/String;\n-  #226 = NameAndType        #103:#93      // nullString:Ljava/lang/String;\n-  #227 = NameAndType        #108:#93      // recordSeparator:Ljava/lang/String;\n-  #228 = NameAndType        #100:#88      // ignoreEmptyLines:Z\n-  #229 = NameAndType        #87:#88       // allowMissingColumnNames:Z\n-  #230 = NameAndType        #102:#88      // ignoreSurroundingSpaces:Z\n-  #231 = NameAndType        #96:#91       // escapeCharacter:Ljava/lang/Character;\n-  #232 = NameAndType        #90:#91       // commentMarker:Ljava/lang/Character;\n-  #233 = NameAndType        #106:#107     // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-  #234 = NameAndType        #104:#91      // quoteCharacter:Ljava/lang/Character;\n-  #235 = NameAndType        #92:#93       // delimiter:Ljava/lang/String;\n-  #236 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n-  #237 = NameAndType        #312:#121     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #238 = NameAndType        #122:#123     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n-  #239 = NameAndType        #122:#313     // \"<init>\":()V\n-  #240 = NameAndType        #314:#315     // access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #241 = NameAndType        #316:#317     // access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #242 = NameAndType        #318:#319     // access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #243 = NameAndType        #320:#317     // access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #244 = NameAndType        #321:#317     // access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #245 = NameAndType        #322:#323     // access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #246 = NameAndType        #324:#323     // access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #247 = NameAndType        #325:#323     // access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #248 = NameAndType        #326:#315     // access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #249 = NameAndType        #327:#315     // access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #250 = NameAndType        #328:#329     // access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #251 = NameAndType        #330:#329     // access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #252 = NameAndType        #331:#323     // access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #253 = NameAndType        #332:#323     // access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #254 = NameAndType        #333:#323     // access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #255 = NameAndType        #334:#323     // access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #256 = NameAndType        #335:#323     // access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-  #257 = NameAndType        #336:#315     // access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #258 = NameAndType        #337:#338     // access$1800:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #259 = Utf8               org/apache/commons/csv/CSVFormat\n-  #260 = NameAndType        #122:#340     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #261 = NameAndType        #341:#95      // ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #262 = NameAndType        #342:#95      // ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #263 = NameAndType        #143:#144     // setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #264 = Class              #343          // java/lang/Character\n-  #265 = NameAndType        #344:#345     // valueOf:(C)Ljava/lang/Character;\n-  #266 = NameAndType        #137:#140     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #267 = NameAndType        #346:#347     // access$2000:(Ljava/lang/Character;)Z\n-  #268 = Utf8               java/lang/IllegalArgumentException\n-  #269 = Utf8               The comment start marker character cannot be a line break\n-  #270 = NameAndType        #122:#348     // \"<init>\":(Ljava/lang/String;)V\n-  #271 = NameAndType        #344:#349     // valueOf:(C)Ljava/lang/String;\n-  #272 = NameAndType        #141:#142     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #273 = NameAndType        #350:#351     // access$2100:(Ljava/lang/String;)Z\n-  #274 = Utf8               The delimiter cannot be a line break\n-  #275 = NameAndType        #352:#353     // isEmpty:()Z\n-  #276 = Utf8               The delimiter cannot be empty\n-  #277 = Class              #354          // java/util/Objects\n-  #278 = NameAndType        #355:#356     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #279 = Utf8               org/apache/commons/csv/DuplicateHeaderMode\n-  #280 = NameAndType        #145:#140     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #281 = Utf8               The escape character cannot be a line break\n-  #282 = Class              #357          // java/lang/Class\n-  #283 = NameAndType        #358:#359     // getEnumConstants:()[Ljava/lang/Object;\n-  #284 = Utf8               java/lang/String\n-  #285 = Utf8               BootstrapMethods\n-  #286 = MethodHandle       6:#360        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #287 = MethodType         #361          //  (I)Ljava/lang/Object;\n-  #288 = MethodHandle       6:#362        // REF_invokeStatic org/apache/commons/csv/CSVFormat$Builder.lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n-  #289 = MethodType         #363          //  (I)Ljava/lang/String;\n-  #290 = NameAndType        #364:#365     // apply:([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n-  #291 = Class              #366          // java/util/Arrays\n-  #292 = NameAndType        #367:#368     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #293 = NameAndType        #146:#172     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #294 = NameAndType        #369:#370     // getMetaData:()Ljava/sql/ResultSetMetaData;\n-  #295 = NameAndType        #146:#165     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #296 = NameAndType        #371:#372     // getColumnCount:()I\n-  #297 = NameAndType        #373:#363     // getColumnLabel:(I)Ljava/lang/String;\n-  #298 = NameAndType        #374:#375     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #299 = NameAndType        #376:#377     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-  #300 = Utf8               java/lang/StringBuilder\n-  #301 = NameAndType        #378:#379     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #302 = NameAndType        #378:#380     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #303 = NameAndType        #381:#382     // toString:()Ljava/lang/String;\n-  #304 = NameAndType        #180:#140     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #305 = Utf8               The quoteChar cannot be a line break\n-  #306 = Class              #383          // java/lang/Enum\n-  #307 = NameAndType        #384:#382     // name:()Ljava/lang/String;\n-  #308 = Utf8               java/lang/Object\n-  #309 = Utf8               java/sql/ResultSet\n-  #310 = Utf8               java/sql/ResultSetMetaData\n-  #311 = Utf8               java/sql/SQLException\n-  #312 = Utf8               DEFAULT\n-  #313 = Utf8               ()V\n-  #314 = Utf8               access$000\n-  #315 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #316 = Utf8               access$100\n-  #317 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #318 = Utf8               access$200\n-  #319 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #320 = Utf8               access$300\n-  #321 = Utf8               access$400\n-  #322 = Utf8               access$500\n-  #323 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n-  #324 = Utf8               access$600\n-  #325 = Utf8               access$700\n-  #326 = Utf8               access$800\n-  #327 = Utf8               access$900\n-  #328 = Utf8               access$1000\n-  #329 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #330 = Utf8               access$1100\n-  #331 = Utf8               access$1200\n-  #332 = Utf8               access$1300\n-  #333 = Utf8               access$1400\n-  #334 = Utf8               access$1500\n-  #335 = Utf8               access$1600\n-  #336 = Utf8               access$1700\n-  #337 = Utf8               access$1800\n-  #338 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n-  #339 = Class              #385          // org/apache/commons/csv/CSVFormat$1\n-  #340 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #341 = Utf8               ALLOW_ALL\n-  #342 = Utf8               ALLOW_EMPTY\n-  #343 = Utf8               java/lang/Character\n-  #344 = Utf8               valueOf\n-  #345 = Utf8               (C)Ljava/lang/Character;\n-  #346 = Utf8               access$2000\n-  #347 = Utf8               (Ljava/lang/Character;)Z\n-  #348 = Utf8               (Ljava/lang/String;)V\n-  #349 = Utf8               (C)Ljava/lang/String;\n-  #350 = Utf8               access$2100\n-  #351 = Utf8               (Ljava/lang/String;)Z\n-  #352 = Utf8               isEmpty\n-  #353 = Utf8               ()Z\n-  #354 = Utf8               java/util/Objects\n-  #355 = Utf8               requireNonNull\n-  #356 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #357 = Utf8               java/lang/Class\n-  #358 = Utf8               getEnumConstants\n-  #359 = Utf8               ()[Ljava/lang/Object;\n-  #360 = Methodref          #386.#387     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #361 = Utf8               (I)Ljava/lang/Object;\n-  #362 = Methodref          #20.#388      // org/apache/commons/csv/CSVFormat$Builder.lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n-  #363 = Utf8               (I)Ljava/lang/String;\n-  #364 = Utf8               apply\n-  #365 = Utf8               ([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n-  #366 = Utf8               java/util/Arrays\n-  #367 = Utf8               setAll\n-  #368 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n-  #369 = Utf8               getMetaData\n-  #370 = Utf8               ()Ljava/sql/ResultSetMetaData;\n-  #371 = Utf8               getColumnCount\n-  #372 = Utf8               ()I\n-  #373 = Utf8               getColumnLabel\n-  #374 = Utf8               clone\n-  #375 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #376 = Utf8               toStringArray\n-  #377 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n-  #378 = Utf8               append\n-  #379 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #380 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #381 = Utf8               toString\n-  #382 = Utf8               ()Ljava/lang/String;\n-  #383 = Utf8               java/lang/Enum\n-  #384 = Utf8               name\n-  #385 = Utf8               org/apache/commons/csv/CSVFormat$1\n-  #386 = Class              #389          // java/lang/invoke/LambdaMetafactory\n-  #387 = NameAndType        #390:#393     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #388 = NameAndType        #187:#188     // lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n-  #389 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #390 = Utf8               metafactory\n-  #391 = Class              #395          // java/lang/invoke/MethodHandles$Lookup\n-  #392 = Utf8               Lookup\n-  #393 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #394 = Class              #396          // java/lang/invoke/MethodHandles\n-  #395 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #396 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Fieldref           #2.#3         // org/apache/commons/csv/CSVFormat$Builder.duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+    #2 = Class              #4            // org/apache/commons/csv/CSVFormat$Builder\n+    #3 = NameAndType        #5:#6         // duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+    #4 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n+    #5 = Utf8               duplicateHeaderMode\n+    #6 = Utf8               Lorg/apache/commons/csv/DuplicateHeaderMode;\n+    #7 = Fieldref           #2.#8         // org/apache/commons/csv/CSVFormat$Builder.quotedNullString:Ljava/lang/String;\n+    #8 = NameAndType        #9:#10        // quotedNullString:Ljava/lang/String;\n+    #9 = Utf8               quotedNullString\n+   #10 = Utf8               Ljava/lang/String;\n+   #11 = Fieldref           #2.#12        // org/apache/commons/csv/CSVFormat$Builder.autoFlush:Z\n+   #12 = NameAndType        #13:#14       // autoFlush:Z\n+   #13 = Utf8               autoFlush\n+   #14 = Utf8               Z\n+   #15 = Fieldref           #2.#16        // org/apache/commons/csv/CSVFormat$Builder.trim:Z\n+   #16 = NameAndType        #17:#14       // trim:Z\n+   #17 = Utf8               trim\n+   #18 = Fieldref           #2.#19        // org/apache/commons/csv/CSVFormat$Builder.trailingDelimiter:Z\n+   #19 = NameAndType        #20:#14       // trailingDelimiter:Z\n+   #20 = Utf8               trailingDelimiter\n+   #21 = Fieldref           #2.#22        // org/apache/commons/csv/CSVFormat$Builder.ignoreHeaderCase:Z\n+   #22 = NameAndType        #23:#14       // ignoreHeaderCase:Z\n+   #23 = Utf8               ignoreHeaderCase\n+   #24 = Fieldref           #2.#25        // org/apache/commons/csv/CSVFormat$Builder.skipHeaderRecord:Z\n+   #25 = NameAndType        #26:#14       // skipHeaderRecord:Z\n+   #26 = Utf8               skipHeaderRecord\n+   #27 = Fieldref           #2.#28        // org/apache/commons/csv/CSVFormat$Builder.headers:[Ljava/lang/String;\n+   #28 = NameAndType        #29:#30       // headers:[Ljava/lang/String;\n+   #29 = Utf8               headers\n+   #30 = Utf8               [Ljava/lang/String;\n+   #31 = Fieldref           #2.#32        // org/apache/commons/csv/CSVFormat$Builder.headerComments:[Ljava/lang/String;\n+   #32 = NameAndType        #33:#30       // headerComments:[Ljava/lang/String;\n+   #33 = Utf8               headerComments\n+   #34 = Fieldref           #2.#35        // org/apache/commons/csv/CSVFormat$Builder.nullString:Ljava/lang/String;\n+   #35 = NameAndType        #36:#10       // nullString:Ljava/lang/String;\n+   #36 = Utf8               nullString\n+   #37 = Fieldref           #2.#38        // org/apache/commons/csv/CSVFormat$Builder.recordSeparator:Ljava/lang/String;\n+   #38 = NameAndType        #39:#10       // recordSeparator:Ljava/lang/String;\n+   #39 = Utf8               recordSeparator\n+   #40 = Fieldref           #2.#41        // org/apache/commons/csv/CSVFormat$Builder.ignoreEmptyLines:Z\n+   #41 = NameAndType        #42:#14       // ignoreEmptyLines:Z\n+   #42 = Utf8               ignoreEmptyLines\n+   #43 = Fieldref           #2.#44        // org/apache/commons/csv/CSVFormat$Builder.allowMissingColumnNames:Z\n+   #44 = NameAndType        #45:#14       // allowMissingColumnNames:Z\n+   #45 = Utf8               allowMissingColumnNames\n+   #46 = Fieldref           #2.#47        // org/apache/commons/csv/CSVFormat$Builder.ignoreSurroundingSpaces:Z\n+   #47 = NameAndType        #48:#14       // ignoreSurroundingSpaces:Z\n+   #48 = Utf8               ignoreSurroundingSpaces\n+   #49 = Fieldref           #2.#50        // org/apache/commons/csv/CSVFormat$Builder.escapeCharacter:Ljava/lang/Character;\n+   #50 = NameAndType        #51:#52       // escapeCharacter:Ljava/lang/Character;\n+   #51 = Utf8               escapeCharacter\n+   #52 = Utf8               Ljava/lang/Character;\n+   #53 = Fieldref           #2.#54        // org/apache/commons/csv/CSVFormat$Builder.commentMarker:Ljava/lang/Character;\n+   #54 = NameAndType        #55:#52       // commentMarker:Ljava/lang/Character;\n+   #55 = Utf8               commentMarker\n+   #56 = Fieldref           #2.#57        // org/apache/commons/csv/CSVFormat$Builder.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #57 = NameAndType        #58:#59       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #58 = Utf8               quoteMode\n+   #59 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+   #60 = Fieldref           #2.#61        // org/apache/commons/csv/CSVFormat$Builder.quoteCharacter:Ljava/lang/Character;\n+   #61 = NameAndType        #62:#52       // quoteCharacter:Ljava/lang/Character;\n+   #62 = Utf8               quoteCharacter\n+   #63 = Fieldref           #2.#64        // org/apache/commons/csv/CSVFormat$Builder.delimiter:Ljava/lang/String;\n+   #64 = NameAndType        #65:#10       // delimiter:Ljava/lang/String;\n+   #65 = Utf8               delimiter\n+   #66 = Fieldref           #67.#68       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #67 = Class              #69           // org/apache/commons/csv/CSVFormat\n+   #68 = NameAndType        #70:#71       // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #69 = Utf8               org/apache/commons/csv/CSVFormat\n+   #70 = Utf8               DEFAULT\n+   #71 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+   #72 = Methodref          #2.#73        // org/apache/commons/csv/CSVFormat$Builder.\"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+   #73 = NameAndType        #74:#75       // \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+   #74 = Utf8               <init>\n+   #75 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)V\n+   #76 = Methodref          #77.#78       // java/lang/Object.\"<init>\":()V\n+   #77 = Class              #79           // java/lang/Object\n+   #78 = NameAndType        #74:#80       // \"<init>\":()V\n+   #79 = Utf8               java/lang/Object\n+   #80 = Utf8               ()V\n+   #81 = Methodref          #67.#82       // org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #82 = NameAndType        #83:#84       // access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #83 = Utf8               access$000\n+   #84 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+   #85 = Methodref          #67.#86       // org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #86 = NameAndType        #87:#88       // access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #87 = Utf8               access$100\n+   #88 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #89 = Methodref          #67.#90       // org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #90 = NameAndType        #91:#92       // access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #91 = Utf8               access$200\n+   #92 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+   #93 = Methodref          #67.#94       // org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #94 = NameAndType        #95:#88       // access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #95 = Utf8               access$300\n+   #96 = Methodref          #67.#97       // org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #97 = NameAndType        #98:#88       // access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+   #98 = Utf8               access$400\n+   #99 = Methodref          #67.#100      // org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #100 = NameAndType        #101:#102     // access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #101 = Utf8               access$500\n+  #102 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n+  #103 = Methodref          #67.#104      // org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #104 = NameAndType        #105:#102     // access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #105 = Utf8               access$600\n+  #106 = Methodref          #67.#107      // org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #107 = NameAndType        #108:#102     // access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #108 = Utf8               access$700\n+  #109 = Methodref          #67.#110      // org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #110 = NameAndType        #111:#84      // access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #111 = Utf8               access$800\n+  #112 = Methodref          #67.#113      // org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #113 = NameAndType        #114:#84      // access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #114 = Utf8               access$900\n+  #115 = Methodref          #67.#116      // org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #116 = NameAndType        #117:#118     // access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #117 = Utf8               access$1000\n+  #118 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #119 = Methodref          #67.#120      // org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #120 = NameAndType        #121:#118     // access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #121 = Utf8               access$1100\n+  #122 = Methodref          #67.#123      // org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #123 = NameAndType        #124:#102     // access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #124 = Utf8               access$1200\n+  #125 = Methodref          #67.#126      // org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #126 = NameAndType        #127:#102     // access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #127 = Utf8               access$1300\n+  #128 = Methodref          #67.#129      // org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #129 = NameAndType        #130:#102     // access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #130 = Utf8               access$1400\n+  #131 = Methodref          #67.#132      // org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #132 = NameAndType        #133:#102     // access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #133 = Utf8               access$1500\n+  #134 = Methodref          #67.#135      // org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #135 = NameAndType        #136:#102     // access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+  #136 = Utf8               access$1600\n+  #137 = Methodref          #67.#138      // org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #138 = NameAndType        #139:#84      // access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #139 = Utf8               access$1700\n+  #140 = Methodref          #67.#141      // org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #141 = NameAndType        #142:#143     // access$1800:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #142 = Utf8               access$1800\n+  #143 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #144 = Methodref          #67.#145      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #145 = NameAndType        #74:#146      // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #146 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #147 = Fieldref           #148.#149     // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #148 = Class              #150          // org/apache/commons/csv/DuplicateHeaderMode\n+  #149 = NameAndType        #151:#6       // ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #150 = Utf8               org/apache/commons/csv/DuplicateHeaderMode\n+  #151 = Utf8               ALLOW_ALL\n+  #152 = Fieldref           #148.#153     // org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #153 = NameAndType        #154:#6       // ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #154 = Utf8               ALLOW_EMPTY\n+  #155 = Methodref          #2.#156       // org/apache/commons/csv/CSVFormat$Builder.setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #156 = NameAndType        #157:#158     // setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #157 = Utf8               setDuplicateHeaderMode\n+  #158 = Utf8               (Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #159 = Methodref          #160.#161     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+  #160 = Class              #162          // java/lang/Character\n+  #161 = NameAndType        #163:#164     // valueOf:(C)Ljava/lang/Character;\n+  #162 = Utf8               java/lang/Character\n+  #163 = Utf8               valueOf\n+  #164 = Utf8               (C)Ljava/lang/Character;\n+  #165 = Methodref          #2.#166       // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #166 = NameAndType        #167:#168     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #167 = Utf8               setCommentMarker\n+  #168 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #169 = Methodref          #67.#170      // org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+  #170 = NameAndType        #171:#172     // access$2000:(Ljava/lang/Character;)Z\n+  #171 = Utf8               access$2000\n+  #172 = Utf8               (Ljava/lang/Character;)Z\n+  #173 = Class              #174          // java/lang/IllegalArgumentException\n+  #174 = Utf8               java/lang/IllegalArgumentException\n+  #175 = String             #176          // The comment start marker character cannot be a line break\n+  #176 = Utf8               The comment start marker character cannot be a line break\n+  #177 = Methodref          #173.#178     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #178 = NameAndType        #74:#179      // \"<init>\":(Ljava/lang/String;)V\n+  #179 = Utf8               (Ljava/lang/String;)V\n+  #180 = Methodref          #181.#182     // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #181 = Class              #183          // java/lang/String\n+  #182 = NameAndType        #163:#184     // valueOf:(C)Ljava/lang/String;\n+  #183 = Utf8               java/lang/String\n+  #184 = Utf8               (C)Ljava/lang/String;\n+  #185 = Methodref          #2.#186       // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #186 = NameAndType        #187:#188     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #187 = Utf8               setDelimiter\n+  #188 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #189 = Methodref          #67.#190      // org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n+  #190 = NameAndType        #191:#192     // access$2100:(Ljava/lang/String;)Z\n+  #191 = Utf8               access$2100\n+  #192 = Utf8               (Ljava/lang/String;)Z\n+  #193 = String             #194          // The delimiter cannot be a line break\n+  #194 = Utf8               The delimiter cannot be a line break\n+  #195 = Methodref          #181.#196     // java/lang/String.isEmpty:()Z\n+  #196 = NameAndType        #197:#198     // isEmpty:()Z\n+  #197 = Utf8               isEmpty\n+  #198 = Utf8               ()Z\n+  #199 = String             #200          // The delimiter cannot be empty\n+  #200 = Utf8               The delimiter cannot be empty\n+  #201 = String             #5            // duplicateHeaderMode\n+  #202 = Methodref          #203.#204     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #203 = Class              #205          // java/util/Objects\n+  #204 = NameAndType        #206:#207     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #205 = Utf8               java/util/Objects\n+  #206 = Utf8               requireNonNull\n+  #207 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #208 = Methodref          #2.#209       // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #209 = NameAndType        #210:#168     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #210 = Utf8               setEscape\n+  #211 = String             #212          // The escape character cannot be a line break\n+  #212 = Utf8               The escape character cannot be a line break\n+  #213 = Methodref          #214.#215     // java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+  #214 = Class              #216          // java/lang/Class\n+  #215 = NameAndType        #217:#218     // getEnumConstants:()[Ljava/lang/Object;\n+  #216 = Utf8               java/lang/Class\n+  #217 = Utf8               getEnumConstants\n+  #218 = Utf8               ()[Ljava/lang/Object;\n+  #219 = Class              #220          // \"[Ljava/lang/Enum;\"\n+  #220 = Utf8               [Ljava/lang/Enum;\n+  #221 = InvokeDynamic      #0:#222       // #0:apply:([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n+  #222 = NameAndType        #223:#224     // apply:([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n+  #223 = Utf8               apply\n+  #224 = Utf8               ([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n+  #225 = Methodref          #226.#227     // java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #226 = Class              #228          // java/util/Arrays\n+  #227 = NameAndType        #229:#230     // setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #228 = Utf8               java/util/Arrays\n+  #229 = Utf8               setAll\n+  #230 = Utf8               ([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+  #231 = Methodref          #2.#232       // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #232 = NameAndType        #233:#234     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #233 = Utf8               setHeader\n+  #234 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #235 = InterfaceMethodref #236.#237     // java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #236 = Class              #238          // java/sql/ResultSet\n+  #237 = NameAndType        #239:#240     // getMetaData:()Ljava/sql/ResultSetMetaData;\n+  #238 = Utf8               java/sql/ResultSet\n+  #239 = Utf8               getMetaData\n+  #240 = Utf8               ()Ljava/sql/ResultSetMetaData;\n+  #241 = Methodref          #2.#242       // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #242 = NameAndType        #233:#243     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #243 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #244 = InterfaceMethodref #245.#246     // java/sql/ResultSetMetaData.getColumnCount:()I\n+  #245 = Class              #247          // java/sql/ResultSetMetaData\n+  #246 = NameAndType        #248:#249     // getColumnCount:()I\n+  #247 = Utf8               java/sql/ResultSetMetaData\n+  #248 = Utf8               getColumnCount\n+  #249 = Utf8               ()I\n+  #250 = InterfaceMethodref #245.#251     // java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+  #251 = NameAndType        #252:#253     // getColumnLabel:(I)Ljava/lang/String;\n+  #252 = Utf8               getColumnLabel\n+  #253 = Utf8               (I)Ljava/lang/String;\n+  #254 = Methodref          #67.#255      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #255 = NameAndType        #256:#257     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #256 = Utf8               clone\n+  #257 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #258 = Class              #30           // \"[Ljava/lang/String;\"\n+  #259 = Methodref          #67.#260      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #260 = NameAndType        #261:#262     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #261 = Utf8               toStringArray\n+  #262 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n+  #263 = Class              #264          // java/lang/StringBuilder\n+  #264 = Utf8               java/lang/StringBuilder\n+  #265 = Methodref          #263.#78      // java/lang/StringBuilder.\"<init>\":()V\n+  #266 = Methodref          #263.#267     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #267 = NameAndType        #268:#269     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #268 = Utf8               append\n+  #269 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #270 = Methodref          #263.#271     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #271 = NameAndType        #268:#272     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #272 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #273 = Methodref          #263.#274     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #274 = NameAndType        #275:#276     // toString:()Ljava/lang/String;\n+  #275 = Utf8               toString\n+  #276 = Utf8               ()Ljava/lang/String;\n+  #277 = Methodref          #2.#278       // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #278 = NameAndType        #279:#168     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #279 = Utf8               setQuote\n+  #280 = String             #281          // The quoteChar cannot be a line break\n+  #281 = Utf8               The quoteChar cannot be a line break\n+  #282 = Methodref          #283.#284     // java/lang/Enum.name:()Ljava/lang/String;\n+  #283 = Class              #285          // java/lang/Enum\n+  #284 = NameAndType        #286:#276     // name:()Ljava/lang/String;\n+  #285 = Utf8               java/lang/Enum\n+  #286 = Utf8               name\n+  #287 = Utf8               create\n+  #288 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #289 = Utf8               Code\n+  #290 = Utf8               LineNumberTable\n+  #291 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #292 = Utf8               LocalVariableTable\n+  #293 = Utf8               csvFormat\n+  #294 = Utf8               this\n+  #295 = Utf8               Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #296 = Utf8               build\n+  #297 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+  #298 = Utf8               setAllowDuplicateHeaderNames\n+  #299 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #300 = Utf8               allowDuplicateHeaderNames\n+  #301 = Utf8               StackMapTable\n+  #302 = Utf8               Deprecated\n+  #303 = Utf8               RuntimeVisibleAnnotations\n+  #304 = Utf8               Ljava/lang/Deprecated;\n+  #305 = Utf8               setAllowMissingColumnNames\n+  #306 = Utf8               setAutoFlush\n+  #307 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #308 = Utf8               C\n+  #309 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #310 = Utf8               enumValues\n+  #311 = Utf8               headerEnum\n+  #312 = Utf8               Ljava/lang/Class;\n+  #313 = Utf8               header\n+  #314 = Utf8               LocalVariableTypeTable\n+  #315 = Utf8               [Ljava/lang/Enum<*>;\n+  #316 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n+  #317 = Utf8               Signature\n+  #318 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #319 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #320 = Utf8               resultSet\n+  #321 = Utf8               Ljava/sql/ResultSet;\n+  #322 = Utf8               Exceptions\n+  #323 = Class              #324          // java/sql/SQLException\n+  #324 = Utf8               java/sql/SQLException\n+  #325 = Utf8               i\n+  #326 = Utf8               I\n+  #327 = Utf8               columnCount\n+  #328 = Utf8               resultSetMetaData\n+  #329 = Utf8               Ljava/sql/ResultSetMetaData;\n+  #330 = Utf8               labels\n+  #331 = Utf8               setHeaderComments\n+  #332 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #333 = Utf8               [Ljava/lang/Object;\n+  #334 = Utf8               setIgnoreEmptyLines\n+  #335 = Utf8               setIgnoreHeaderCase\n+  #336 = Utf8               setIgnoreSurroundingSpaces\n+  #337 = Utf8               setNullString\n+  #338 = Utf8               setQuoteMode\n+  #339 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #340 = Utf8               setRecordSeparator\n+  #341 = Utf8               setSkipHeaderRecord\n+  #342 = Utf8               setTrailingDelimiter\n+  #343 = Utf8               setTrim\n+  #344 = Utf8               lambda$setHeader$0\n+  #345 = Utf8               ([Ljava/lang/Enum;I)Ljava/lang/String;\n+  #346 = Utf8               access$2200\n+  #347 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #348 = Utf8               x0\n+  #349 = Utf8               access$2300\n+  #350 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #351 = Utf8               access$2400\n+  #352 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #353 = Utf8               access$2500\n+  #354 = Utf8               access$2600\n+  #355 = Utf8               access$2700\n+  #356 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #357 = Utf8               access$2800\n+  #358 = Utf8               access$2900\n+  #359 = Utf8               access$3000\n+  #360 = Utf8               access$3100\n+  #361 = Utf8               access$3200\n+  #362 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #363 = Utf8               access$3300\n+  #364 = Utf8               access$3400\n+  #365 = Utf8               access$3500\n+  #366 = Utf8               access$3600\n+  #367 = Utf8               access$3700\n+  #368 = Utf8               access$3800\n+  #369 = Utf8               access$3900\n+  #370 = Utf8               access$4000\n+  #371 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+  #372 = Utf8               SourceFile\n+  #373 = Utf8               CSVFormat.java\n+  #374 = Utf8               BootstrapMethods\n+  #375 = MethodHandle       6:#376        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #376 = Methodref          #377.#378     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #377 = Class              #379          // java/lang/invoke/LambdaMetafactory\n+  #378 = NameAndType        #380:#381     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #379 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #380 = Utf8               metafactory\n+  #381 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #382 = MethodType         #383          //  (I)Ljava/lang/Object;\n+  #383 = Utf8               (I)Ljava/lang/Object;\n+  #384 = MethodHandle       6:#385        // REF_invokeStatic org/apache/commons/csv/CSVFormat$Builder.lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n+  #385 = Methodref          #2.#386       // org/apache/commons/csv/CSVFormat$Builder.lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n+  #386 = NameAndType        #344:#345     // lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n+  #387 = MethodType         #253          //  (I)Ljava/lang/String;\n+  #388 = Utf8               InnerClasses\n+  #389 = Utf8               Builder\n+  #390 = Class              #391          // org/apache/commons/csv/CSVFormat$1\n+  #391 = Utf8               org/apache/commons/csv/CSVFormat$1\n+  #392 = Class              #393          // java/lang/invoke/MethodHandles$Lookup\n+  #393 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #394 = Class              #395          // java/lang/invoke/MethodHandles\n+  #395 = Utf8               java/lang/invoke/MethodHandles\n+  #396 = Utf8               Lookup\n {\n   private boolean allowMissingColumnNames;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   private boolean autoFlush;\n     descriptor: Z\n@@ -482,120 +482,120 @@\n     flags: (0x0002) ACC_PRIVATE\n \n   public static org.apache.commons.csv.CSVFormat$Builder create();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n-         0: new           #20                 // class org/apache/commons/csv/CSVFormat$Builder\n+         0: new           #2                  // class org/apache/commons/csv/CSVFormat$Builder\n          3: dup\n-         4: getstatic     #21                 // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-         7: invokespecial #22                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+         4: getstatic     #66                 // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+         7: invokespecial #72                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n         10: areturn\n       LineNumberTable:\n         line 196: 0\n \n   public static org.apache.commons.csv.CSVFormat$Builder create(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #20                 // class org/apache/commons/csv/CSVFormat$Builder\n+         0: new           #2                  // class org/apache/commons/csv/CSVFormat$Builder\n          3: dup\n          4: aload_0\n-         5: invokespecial #22                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n+         5: invokespecial #72                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat;)V\n          8: areturn\n       LineNumberTable:\n         line 206: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 csvFormat   Lorg/apache/commons/csv/CSVFormat;\n \n   private org.apache.commons.csv.CSVFormat$Builder(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #23                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #76                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #24                 // Method org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-         9: putfield      #19                 // Field delimiter:Ljava/lang/String;\n+         6: invokestatic  #81                 // Method org/apache/commons/csv/CSVFormat.access$000:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+         9: putfield      #63                 // Field delimiter:Ljava/lang/String;\n         12: aload_0\n         13: aload_1\n-        14: invokestatic  #25                 // Method org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-        17: putfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n+        14: invokestatic  #85                 // Method org/apache/commons/csv/CSVFormat.access$100:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+        17: putfield      #60                 // Field quoteCharacter:Ljava/lang/Character;\n         20: aload_0\n         21: aload_1\n-        22: invokestatic  #26                 // Method org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-        25: putfield      #17                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        22: invokestatic  #89                 // Method org/apache/commons/csv/CSVFormat.access$200:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+        25: putfield      #56                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         28: aload_0\n         29: aload_1\n-        30: invokestatic  #27                 // Method org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-        33: putfield      #16                 // Field commentMarker:Ljava/lang/Character;\n+        30: invokestatic  #93                 // Method org/apache/commons/csv/CSVFormat.access$300:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+        33: putfield      #53                 // Field commentMarker:Ljava/lang/Character;\n         36: aload_0\n         37: aload_1\n-        38: invokestatic  #28                 // Method org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-        41: putfield      #15                 // Field escapeCharacter:Ljava/lang/Character;\n+        38: invokestatic  #96                 // Method org/apache/commons/csv/CSVFormat.access$400:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+        41: putfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #29                 // Method org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-        49: putfield      #14                 // Field ignoreSurroundingSpaces:Z\n+        46: invokestatic  #99                 // Method org/apache/commons/csv/CSVFormat.access$500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+        49: putfield      #46                 // Field ignoreSurroundingSpaces:Z\n         52: aload_0\n         53: aload_1\n-        54: invokestatic  #30                 // Method org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-        57: putfield      #13                 // Field allowMissingColumnNames:Z\n+        54: invokestatic  #103                // Method org/apache/commons/csv/CSVFormat.access$600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+        57: putfield      #43                 // Field allowMissingColumnNames:Z\n         60: aload_0\n         61: aload_1\n-        62: invokestatic  #31                 // Method org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n-        65: putfield      #12                 // Field ignoreEmptyLines:Z\n+        62: invokestatic  #106                // Method org/apache/commons/csv/CSVFormat.access$700:(Lorg/apache/commons/csv/CSVFormat;)Z\n+        65: putfield      #40                 // Field ignoreEmptyLines:Z\n         68: aload_0\n         69: aload_1\n-        70: invokestatic  #32                 // Method org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-        73: putfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+        70: invokestatic  #109                // Method org/apache/commons/csv/CSVFormat.access$800:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+        73: putfield      #37                 // Field recordSeparator:Ljava/lang/String;\n         76: aload_0\n         77: aload_1\n-        78: invokestatic  #33                 // Method org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-        81: putfield      #10                 // Field nullString:Ljava/lang/String;\n+        78: invokestatic  #112                // Method org/apache/commons/csv/CSVFormat.access$900:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+        81: putfield      #34                 // Field nullString:Ljava/lang/String;\n         84: aload_0\n         85: aload_1\n-        86: invokestatic  #34                 // Method org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-        89: putfield      #9                  // Field headerComments:[Ljava/lang/String;\n+        86: invokestatic  #115                // Method org/apache/commons/csv/CSVFormat.access$1000:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+        89: putfield      #31                 // Field headerComments:[Ljava/lang/String;\n         92: aload_0\n         93: aload_1\n-        94: invokestatic  #35                 // Method org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-        97: putfield      #8                  // Field headers:[Ljava/lang/String;\n+        94: invokestatic  #119                // Method org/apache/commons/csv/CSVFormat.access$1100:(Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+        97: putfield      #27                 // Field headers:[Ljava/lang/String;\n        100: aload_0\n        101: aload_1\n-       102: invokestatic  #36                 // Method org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       105: putfield      #7                  // Field skipHeaderRecord:Z\n+       102: invokestatic  #122                // Method org/apache/commons/csv/CSVFormat.access$1200:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       105: putfield      #24                 // Field skipHeaderRecord:Z\n        108: aload_0\n        109: aload_1\n-       110: invokestatic  #37                 // Method org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       113: putfield      #6                  // Field ignoreHeaderCase:Z\n+       110: invokestatic  #125                // Method org/apache/commons/csv/CSVFormat.access$1300:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       113: putfield      #21                 // Field ignoreHeaderCase:Z\n        116: aload_0\n        117: aload_1\n-       118: invokestatic  #38                 // Method org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       121: putfield      #5                  // Field trailingDelimiter:Z\n+       118: invokestatic  #128                // Method org/apache/commons/csv/CSVFormat.access$1400:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       121: putfield      #18                 // Field trailingDelimiter:Z\n        124: aload_0\n        125: aload_1\n-       126: invokestatic  #39                 // Method org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       129: putfield      #4                  // Field trim:Z\n+       126: invokestatic  #131                // Method org/apache/commons/csv/CSVFormat.access$1500:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       129: putfield      #15                 // Field trim:Z\n        132: aload_0\n        133: aload_1\n-       134: invokestatic  #40                 // Method org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n-       137: putfield      #3                  // Field autoFlush:Z\n+       134: invokestatic  #134                // Method org/apache/commons/csv/CSVFormat.access$1600:(Lorg/apache/commons/csv/CSVFormat;)Z\n+       137: putfield      #11                 // Field autoFlush:Z\n        140: aload_0\n        141: aload_1\n-       142: invokestatic  #41                 // Method org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-       145: putfield      #2                  // Field quotedNullString:Ljava/lang/String;\n+       142: invokestatic  #137                // Method org/apache/commons/csv/CSVFormat.access$1700:(Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+       145: putfield      #7                  // Field quotedNullString:Ljava/lang/String;\n        148: aload_0\n        149: aload_1\n-       150: invokestatic  #42                 // Method org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n+       150: invokestatic  #140                // Method org/apache/commons/csv/CSVFormat.access$1800:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/DuplicateHeaderMode;\n        153: putfield      #1                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n        156: return\n       LineNumberTable:\n         line 247: 0\n         line 248: 4\n         line 249: 12\n         line 250: 20\n@@ -622,19 +622,19 @@\n             0     157     1 csvFormat   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.CSVFormat build();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #43                 // class org/apache/commons/csv/CSVFormat\n+         0: new           #67                 // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: aload_0\n          5: aconst_null\n-         6: invokespecial #44                 // Method org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+         6: invokespecial #144                // Method org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n          9: areturn\n       LineNumberTable:\n         line 275: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n@@ -642,18 +642,18 @@\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: ifeq          11\n-         5: getstatic     #45                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+         5: getstatic     #147                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_ALL:Lorg/apache/commons/csv/DuplicateHeaderMode;\n          8: goto          14\n-        11: getstatic     #46                 // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n-        14: invokevirtual #47                 // Method setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        11: getstatic     #152                // Field org/apache/commons/csv/DuplicateHeaderMode.ALLOW_EMPTY:Lorg/apache/commons/csv/DuplicateHeaderMode;\n+        14: invokevirtual #155                // Method setDuplicateHeaderMode:(Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         17: pop\n         18: aload_0\n         19: areturn\n       LineNumberTable:\n         line 287: 0\n         line 288: 18\n       LocalVariableTable:\n@@ -665,25 +665,25 @@\n           stack = [ class org/apache/commons/csv/CSVFormat$Builder ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 2\n           locals = [ class org/apache/commons/csv/CSVFormat$Builder, int ]\n           stack = [ class org/apache/commons/csv/CSVFormat$Builder, class org/apache/commons/csv/DuplicateHeaderMode ]\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #134()\n+      0: #304()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat$Builder setAllowMissingColumnNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #13                 // Field allowMissingColumnNames:Z\n+         2: putfield      #43                 // Field allowMissingColumnNames:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 300: 0\n         line 301: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -693,15 +693,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setAutoFlush(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #3                  // Field autoFlush:Z\n+         2: putfield      #11                 // Field autoFlush:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 311: 0\n         line 312: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -711,16 +711,16 @@\n   public org.apache.commons.csv.CSVFormat$Builder setCommentMarker(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #48                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #49                 // Method setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #159                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #165                // Method setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 325: 0\n         line 326: 9\n       LocalVariableTable:\n@@ -730,24 +730,24 @@\n \n   public org.apache.commons.csv.CSVFormat$Builder setCommentMarker(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #50                 // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+         1: invokestatic  #169                // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n          4: ifeq          17\n-         7: new           #51                 // class java/lang/IllegalArgumentException\n+         7: new           #173                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #52                 // String The comment start marker character cannot be a line break\n-        13: invokespecial #53                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #175                // String The comment start marker character cannot be a line break\n+        13: invokespecial #177                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #16                 // Field commentMarker:Ljava/lang/Character;\n+        19: putfield      #53                 // Field commentMarker:Ljava/lang/Character;\n         22: aload_0\n         23: areturn\n       LineNumberTable:\n         line 339: 0\n         line 340: 7\n         line 342: 17\n         line 343: 22\n@@ -761,48 +761,48 @@\n   public org.apache.commons.csv.CSVFormat$Builder setDelimiter(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #54                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-         5: invokevirtual #55                 // Method setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #180                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: invokevirtual #185                // Method setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: areturn\n       LineNumberTable:\n         line 353: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat$Builder;\n             0       9     1 delimiter   C\n \n   public org.apache.commons.csv.CSVFormat$Builder setDelimiter(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #56                 // Method org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n+         1: invokestatic  #189                // Method org/apache/commons/csv/CSVFormat.access$2100:(Ljava/lang/String;)Z\n          4: ifeq          17\n-         7: new           #51                 // class java/lang/IllegalArgumentException\n+         7: new           #173                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #57                 // String The delimiter cannot be a line break\n-        13: invokespecial #53                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #193                // String The delimiter cannot be a line break\n+        13: invokespecial #177                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_1\n-        18: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z\n+        18: invokevirtual #195                // Method java/lang/String.isEmpty:()Z\n         21: ifeq          34\n-        24: new           #51                 // class java/lang/IllegalArgumentException\n+        24: new           #173                // class java/lang/IllegalArgumentException\n         27: dup\n-        28: ldc           #59                 // String The delimiter cannot be empty\n-        30: invokespecial #53                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        28: ldc           #199                // String The delimiter cannot be empty\n+        30: invokespecial #177                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         33: athrow\n         34: aload_0\n         35: aload_1\n-        36: putfield      #19                 // Field delimiter:Ljava/lang/String;\n+        36: putfield      #63                 // Field delimiter:Ljava/lang/String;\n         39: aload_0\n         40: areturn\n       LineNumberTable:\n         line 363: 0\n         line 364: 7\n         line 366: 17\n         line 367: 24\n@@ -819,17 +819,17 @@\n   public org.apache.commons.csv.CSVFormat$Builder setDuplicateHeaderMode(org.apache.commons.csv.DuplicateHeaderMode);\n     descriptor: (Lorg/apache/commons/csv/DuplicateHeaderMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: ldc           #60                 // String duplicateHeaderMode\n-         4: invokestatic  #61                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         7: checkcast     #62                 // class org/apache/commons/csv/DuplicateHeaderMode\n+         2: ldc           #201                // String duplicateHeaderMode\n+         4: invokestatic  #202                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: checkcast     #148                // class org/apache/commons/csv/DuplicateHeaderMode\n         10: putfield      #1                  // Field duplicateHeaderMode:Lorg/apache/commons/csv/DuplicateHeaderMode;\n         13: aload_0\n         14: areturn\n       LineNumberTable:\n         line 381: 0\n         line 382: 13\n       LocalVariableTable:\n@@ -840,16 +840,16 @@\n   public org.apache.commons.csv.CSVFormat$Builder setEscape(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #48                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #63                 // Method setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #159                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #208                // Method setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 393: 0\n         line 394: 9\n       LocalVariableTable:\n@@ -859,24 +859,24 @@\n \n   public org.apache.commons.csv.CSVFormat$Builder setEscape(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #50                 // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+         1: invokestatic  #169                // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n          4: ifeq          17\n-         7: new           #51                 // class java/lang/IllegalArgumentException\n+         7: new           #173                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #64                 // String The escape character cannot be a line break\n-        13: invokespecial #53                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #211                // String The escape character cannot be a line break\n+        13: invokespecial #177                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: putfield      #15                 // Field escapeCharacter:Ljava/lang/Character;\n+        19: putfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n         22: aload_0\n         23: areturn\n       LineNumberTable:\n         line 405: 0\n         line 406: 7\n         line 408: 17\n         line 409: 22\n@@ -893,28 +893,28 @@\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        30\n          6: aload_1\n-         7: invokevirtual #65                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n-        10: checkcast     #66                 // class \"[Ljava/lang/Enum;\"\n+         7: invokevirtual #213                // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;\n+        10: checkcast     #219                // class \"[Ljava/lang/Enum;\"\n         13: astore_3\n         14: aload_3\n         15: arraylength\n-        16: anewarray     #67                 // class java/lang/String\n+        16: anewarray     #181                // class java/lang/String\n         19: astore_2\n         20: aload_2\n         21: aload_3\n-        22: invokedynamic #68,  0             // InvokeDynamic #0:apply:([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n-        27: invokestatic  #69                 // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n+        22: invokedynamic #221,  0            // InvokeDynamic #0:apply:([Ljava/lang/Enum;)Ljava/util/function/IntFunction;\n+        27: invokestatic  #225                // Method java/util/Arrays.setAll:([Ljava/lang/Object;Ljava/util/function/IntFunction;)V\n         30: aload_0\n         31: aload_2\n-        32: invokevirtual #70                 // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        32: invokevirtual #231                // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         35: areturn\n       LineNumberTable:\n         line 434: 0\n         line 435: 2\n         line 436: 6\n         line 437: 14\n         line 438: 20\n@@ -929,29 +929,29 @@\n         Start  Length  Slot  Name   Signature\n            14      16     3 enumValues   [Ljava/lang/Enum<*>;\n             0      36     1 headerEnum   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ class \"[Ljava/lang/String;\" ]\n-    Signature: #157                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+    Signature: #318                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   public org.apache.commons.csv.CSVFormat$Builder setHeader(java.sql.ResultSet) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: ifnull        14\n          5: aload_1\n-         6: invokeinterface #71,  1           // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n+         6: invokeinterface #235,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;\n         11: goto          15\n         14: aconst_null\n-        15: invokevirtual #72                 // Method setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        15: invokevirtual #241                // Method setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         18: areturn\n       LineNumberTable:\n         line 464: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/csv/CSVFormat$Builder;\n             0      19     1 resultSet   Ljava/sql/ResultSet;\n@@ -971,37 +971,37 @@\n     Code:\n       stack=5, locals=5, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_1\n          3: ifnull        47\n          6: aload_1\n-         7: invokeinterface #73,  1           // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n+         7: invokeinterface #244,  1          // InterfaceMethod java/sql/ResultSetMetaData.getColumnCount:()I\n         12: istore_3\n         13: iload_3\n-        14: anewarray     #67                 // class java/lang/String\n+        14: anewarray     #181                // class java/lang/String\n         17: astore_2\n         18: iconst_0\n         19: istore        4\n         21: iload         4\n         23: iload_3\n         24: if_icmpge     47\n         27: aload_2\n         28: iload         4\n         30: aload_1\n         31: iload         4\n         33: iconst_1\n         34: iadd\n-        35: invokeinterface #74,  2           // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n+        35: invokeinterface #250,  2          // InterfaceMethod java/sql/ResultSetMetaData.getColumnLabel:(I)Ljava/lang/String;\n         40: aastore\n         41: iinc          4, 1\n         44: goto          21\n         47: aload_0\n         48: aload_2\n-        49: invokevirtual #70                 // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        49: invokevirtual #231                // Method setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         52: areturn\n       LineNumberTable:\n         line 488: 0\n         line 489: 2\n         line 490: 6\n         line 491: 13\n         line 492: 18\n@@ -1027,17 +1027,17 @@\n   public org.apache.commons.csv.CSVFormat$Builder setHeader(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #75                 // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         5: checkcast     #76                 // class \"[Ljava/lang/String;\"\n-         8: putfield      #8                  // Field headers:[Ljava/lang/String;\n+         2: invokestatic  #254                // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         5: checkcast     #258                // class \"[Ljava/lang/String;\"\n+         8: putfield      #27                 // Field headers:[Ljava/lang/String;\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 519: 0\n         line 520: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1047,18 +1047,18 @@\n   public org.apache.commons.csv.CSVFormat$Builder setHeaderComments(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #77                 // Method org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-         5: invokestatic  #75                 // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         8: checkcast     #76                 // class \"[Ljava/lang/String;\"\n-        11: putfield      #9                  // Field headerComments:[Ljava/lang/String;\n+         2: invokestatic  #259                // Method org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+         5: invokestatic  #254                // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         8: checkcast     #258                // class \"[Ljava/lang/String;\"\n+        11: putfield      #31                 // Field headerComments:[Ljava/lang/String;\n         14: aload_0\n         15: areturn\n       LineNumberTable:\n         line 534: 0\n         line 535: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1068,17 +1068,17 @@\n   public org.apache.commons.csv.CSVFormat$Builder setHeaderComments(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #75                 // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         5: checkcast     #76                 // class \"[Ljava/lang/String;\"\n-         8: putfield      #9                  // Field headerComments:[Ljava/lang/String;\n+         2: invokestatic  #254                // Method org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         5: checkcast     #258                // class \"[Ljava/lang/String;\"\n+         8: putfield      #31                 // Field headerComments:[Ljava/lang/String;\n         11: aload_0\n         12: areturn\n       LineNumberTable:\n         line 549: 0\n         line 550: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1088,15 +1088,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setIgnoreEmptyLines(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #12                 // Field ignoreEmptyLines:Z\n+         2: putfield      #40                 // Field ignoreEmptyLines:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 562: 0\n         line 563: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1106,15 +1106,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setIgnoreHeaderCase(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #6                  // Field ignoreHeaderCase:Z\n+         2: putfield      #21                 // Field ignoreHeaderCase:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 573: 0\n         line 574: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1124,15 +1124,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setIgnoreSurroundingSpaces(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #14                 // Field ignoreSurroundingSpaces:Z\n+         2: putfield      #46                 // Field ignoreSurroundingSpaces:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 584: 0\n         line 585: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1142,29 +1142,29 @@\n   public org.apache.commons.csv.CSVFormat$Builder setNullString(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #10                 // Field nullString:Ljava/lang/String;\n+         2: putfield      #34                 // Field nullString:Ljava/lang/String;\n          5: aload_0\n-         6: new           #78                 // class java/lang/StringBuilder\n+         6: new           #263                // class java/lang/StringBuilder\n          9: dup\n-        10: invokespecial #79                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        10: invokespecial #265                // Method java/lang/StringBuilder.\"<init>\":()V\n         13: aload_0\n-        14: getfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n-        17: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        14: getfield      #60                 // Field quoteCharacter:Ljava/lang/Character;\n+        17: invokevirtual #266                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         20: aload_1\n-        21: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokevirtual #270                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: aload_0\n-        25: getfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n-        28: invokevirtual #80                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        31: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        34: putfield      #2                  // Field quotedNullString:Ljava/lang/String;\n+        25: getfield      #60                 // Field quoteCharacter:Ljava/lang/Character;\n+        28: invokevirtual #266                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #273                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: putfield      #7                  // Field quotedNullString:Ljava/lang/String;\n         37: aload_0\n         38: areturn\n       LineNumberTable:\n         line 600: 0\n         line 601: 5\n         line 602: 37\n       LocalVariableTable:\n@@ -1175,16 +1175,16 @@\n   public org.apache.commons.csv.CSVFormat$Builder setQuote(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #48                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-         5: invokevirtual #83                 // Method setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         2: invokestatic  #159                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+         5: invokevirtual #277                // Method setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          8: pop\n          9: aload_0\n         10: areturn\n       LineNumberTable:\n         line 612: 0\n         line 613: 9\n       LocalVariableTable:\n@@ -1194,46 +1194,46 @@\n \n   public org.apache.commons.csv.CSVFormat$Builder setQuote(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #50                 // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n-         4: ifeq          17\n-         7: new           #51                 // class java/lang/IllegalArgumentException\n+         1: invokestatic  #169                // Method org/apache/commons/csv/CSVFormat.access$2000:(Ljava/lang/Character;)Z\n+         4: ifeq          18\n+         7: new           #173                // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #84                 // String The quoteChar cannot be a line break\n-        13: invokespecial #53                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        16: athrow\n-        17: aload_0\n-        18: aload_1\n-        19: putfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n-        22: aload_0\n-        23: areturn\n+        11: ldc_w         #280                // String The quoteChar cannot be a line break\n+        14: invokespecial #177                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        17: athrow\n+        18: aload_0\n+        19: aload_1\n+        20: putfield      #60                 // Field quoteCharacter:Ljava/lang/Character;\n+        23: aload_0\n+        24: areturn\n       LineNumberTable:\n         line 623: 0\n         line 624: 7\n-        line 626: 17\n-        line 627: 22\n+        line 626: 18\n+        line 627: 23\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      24     0  this   Lorg/apache/commons/csv/CSVFormat$Builder;\n-            0      24     1 quoteCharacter   Ljava/lang/Character;\n+            0      25     0  this   Lorg/apache/commons/csv/CSVFormat$Builder;\n+            0      25     1 quoteCharacter   Ljava/lang/Character;\n       StackMapTable: number_of_entries = 1\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n \n   public org.apache.commons.csv.CSVFormat$Builder setQuoteMode(org.apache.commons.csv.QuoteMode);\n     descriptor: (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #17                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         2: putfield      #56                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 637: 0\n         line 638: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1243,16 +1243,16 @@\n   public org.apache.commons.csv.CSVFormat$Builder setRecordSeparator(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #54                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n-         5: putfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+         2: invokestatic  #180                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: putfield      #37                 // Field recordSeparator:Ljava/lang/String;\n          8: aload_0\n          9: areturn\n       LineNumberTable:\n         line 653: 0\n         line 654: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1262,15 +1262,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setRecordSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+         2: putfield      #37                 // Field recordSeparator:Ljava/lang/String;\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 669: 0\n         line 670: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1280,15 +1280,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setSkipHeaderRecord(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field skipHeaderRecord:Z\n+         2: putfield      #24                 // Field skipHeaderRecord:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 680: 0\n         line 681: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1298,15 +1298,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setTrailingDelimiter(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #5                  // Field trailingDelimiter:Z\n+         2: putfield      #18                 // Field trailingDelimiter:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 691: 0\n         line 692: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1316,15 +1316,15 @@\n   public org.apache.commons.csv.CSVFormat$Builder setTrim(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #4                  // Field trim:Z\n+         2: putfield      #15                 // Field trim:Z\n          5: aload_0\n          6: areturn\n       LineNumberTable:\n         line 702: 0\n         line 703: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1335,268 +1335,268 @@\n     descriptor: ([Ljava/lang/Enum;I)Ljava/lang/String;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: aaload\n-         3: invokevirtual #85                 // Method java/lang/Enum.name:()Ljava/lang/String;\n+         3: invokevirtual #282                // Method java/lang/Enum.name:()Ljava/lang/String;\n          6: areturn\n       LineNumberTable:\n         line 438: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 enumValues   [Ljava/lang/Enum;\n             0       7     1     i   I\n \n   static java.lang.String access$2200(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #63                 // Field delimiter:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.Character access$2300(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #60                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static org.apache.commons.csv.QuoteMode access$2400(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #56                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.Character access$2500(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #53                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.Character access$2600(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #49                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$2700(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #46                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$2800(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field allowMissingColumnNames:Z\n+         1: getfield      #43                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$2900(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field ignoreEmptyLines:Z\n+         1: getfield      #40                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.String access$3000(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #37                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.String access$3100(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #34                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.String[] access$3200(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #31                 // Field headerComments:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.String[] access$3300(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field headers:[Ljava/lang/String;\n+         1: getfield      #27                 // Field headers:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$3400(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field skipHeaderRecord:Z\n+         1: getfield      #24                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$3500(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field ignoreHeaderCase:Z\n+         1: getfield      #21                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$3600(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field trailingDelimiter:Z\n+         1: getfield      #18                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$3700(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field trim:Z\n+         1: getfield      #15                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static boolean access$3800(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field autoFlush:Z\n+         1: getfield      #11                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n   static java.lang.String access$3900(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field quotedNullString:Ljava/lang/String;\n+         1: getfield      #7                  // Field quotedNullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n \n@@ -1611,17 +1611,17 @@\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n }\n SourceFile: \"CSVFormat.java\"\n-InnerClasses:\n-  public static #113= #20 of #43;         // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n-  static #339;                            // class org/apache/commons/csv/CSVFormat$1\n-  public static final #392= #391 of #394; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #286 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #375 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #287 (I)Ljava/lang/Object;\n-      #288 REF_invokeStatic org/apache/commons/csv/CSVFormat$Builder.lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n-      #289 (I)Ljava/lang/String;\n+      #382 (I)Ljava/lang/Object;\n+      #384 REF_invokeStatic org/apache/commons/csv/CSVFormat$Builder.lambda$setHeader$0:([Ljava/lang/Enum;I)Ljava/lang/String;\n+      #387 (I)Ljava/lang/String;\n+InnerClasses:\n+  public static #389= #2 of #67;          // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n+  static #390;                            // class org/apache/commons/csv/CSVFormat$1\n+  public static final #396= #392 of #394; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
