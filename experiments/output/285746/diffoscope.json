{"diffoscope-json-version": 1, "source1": "first/Sha2Crypt.class", "source2": "second/Sha2Crypt.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,62 +1,62 @@\n-  SHA-256 checksum 4b11a4ec6c113486566a8eb22043e366bdd8017a5d2cb5f5eedb881724b3d123\n+  SHA-256 checksum a28fe2ce1da3c75465f5dcfcbb709f2eb7498f2979ed1f5b86c11a1b84751eae\n   Compiled from \"Sha2Crypt.java\"\n public class org.apache.commons.codec.digest.Sha2Crypt\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #5                          // org/apache/commons/codec/digest/Sha2Crypt\n   super_class: #45                        // java/lang/Object\n   interfaces: 0, fields: 9, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Methodref          #45.#83       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #5.#84        // org/apache/commons/codec/digest/Sha2Crypt.sha256Crypt:([BLjava/lang/String;)Ljava/lang/String;\n-    #3 = Class              #85           // java/lang/StringBuilder\n-    #4 = Methodref          #3.#83        // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = Class              #86           // org/apache/commons/codec/digest/Sha2Crypt\n-    #6 = String             #87           // $5$\n-    #7 = Methodref          #3.#88        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #89.#90       // org/apache/commons/codec/digest/B64.getRandomSalt:(I)Ljava/lang/String;\n-    #9 = Methodref          #3.#91        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #10 = Class              #92           // org/apache/commons/codec/digest/MessageDigestAlgorithms\n-   #11 = String             #93           // SHA-256\n-   #12 = Methodref          #5.#94        // org/apache/commons/codec/digest/Sha2Crypt.sha2Crypt:([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;\n-   #13 = Methodref          #89.#95       // org/apache/commons/codec/digest/B64.getRandomSalt:(ILjava/util/Random;)Ljava/lang/String;\n-   #14 = Class              #96           // java/lang/IllegalArgumentException\n-   #15 = String             #97           // Salt must not be null\n-   #16 = Methodref          #14.#98       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Fieldref           #5.#99        // org/apache/commons/codec/digest/Sha2Crypt.SALT_PATTERN:Ljava/util/regex/Pattern;\n-   #18 = Methodref          #100.#101     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #19 = Methodref          #102.#103     // java/util/regex/Matcher.find:()Z\n-   #20 = String             #104          // Invalid salt value:\n-   #21 = Methodref          #102.#105     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #22 = Methodref          #106.#107     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+    #1 = Methodref          #45.#82       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #5.#83        // org/apache/commons/codec/digest/Sha2Crypt.sha256Crypt:([BLjava/lang/String;)Ljava/lang/String;\n+    #3 = Class              #84           // java/lang/StringBuilder\n+    #4 = Methodref          #3.#82        // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = Class              #85           // org/apache/commons/codec/digest/Sha2Crypt\n+    #6 = String             #86           // $5$\n+    #7 = Methodref          #3.#87        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #88.#89       // org/apache/commons/codec/digest/B64.getRandomSalt:(I)Ljava/lang/String;\n+    #9 = Methodref          #3.#90        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #10 = Class              #91           // org/apache/commons/codec/digest/MessageDigestAlgorithms\n+   #11 = String             #92           // SHA-256\n+   #12 = Methodref          #5.#93        // org/apache/commons/codec/digest/Sha2Crypt.sha2Crypt:([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;\n+   #13 = Methodref          #88.#94       // org/apache/commons/codec/digest/B64.getRandomSalt:(ILjava/util/Random;)Ljava/lang/String;\n+   #14 = Class              #95           // java/lang/IllegalArgumentException\n+   #15 = String             #96           // Salt must not be null\n+   #16 = Methodref          #14.#97       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Fieldref           #5.#98        // org/apache/commons/codec/digest/Sha2Crypt.SALT_PATTERN:Ljava/util/regex/Pattern;\n+   #18 = Methodref          #99.#100      // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #19 = Methodref          #74.#101      // java/util/regex/Matcher.find:()Z\n+   #20 = String             #102          // Invalid salt value:\n+   #21 = Methodref          #74.#103      // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+   #22 = Methodref          #104.#105     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n    #23 = Integer            999999999\n-   #24 = Methodref          #108.#109     // java/lang/Math.min:(II)I\n-   #25 = Methodref          #108.#110     // java/lang/Math.max:(II)I\n-   #26 = Fieldref           #111.#112     // org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n-   #27 = Methodref          #113.#114     // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #28 = Methodref          #115.#116     // org/apache/commons/codec/digest/DigestUtils.getDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;\n-   #29 = Methodref          #117.#118     // java/security/MessageDigest.update:([B)V\n-   #30 = Methodref          #117.#119     // java/security/MessageDigest.digest:()[B\n-   #31 = Methodref          #117.#120     // java/security/MessageDigest.update:([BII)V\n-   #32 = Methodref          #121.#122     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #33 = Methodref          #3.#98        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n-   #34 = String             #123          // rounds=\n-   #35 = Methodref          #3.#124       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #36 = String             #125          // $\n-   #37 = Methodref          #89.#126      // org/apache/commons/codec/digest/B64.b64from24bit:(BBBILjava/lang/StringBuilder;)V\n-   #38 = Methodref          #127.#128     // java/util/Arrays.fill:([BB)V\n-   #39 = Methodref          #117.#129     // java/security/MessageDigest.reset:()V\n-   #40 = Methodref          #5.#130       // org/apache/commons/codec/digest/Sha2Crypt.sha512Crypt:([BLjava/lang/String;)Ljava/lang/String;\n-   #41 = String             #131          // $6$\n-   #42 = String             #132          // SHA-512\n-   #43 = String             #133          // ^\\\\$([56])\\\\$(rounds=(\\\\d+)\\\\$)?([\\\\.\\\\/a-zA-Z0-9]{1,16}).*\n-   #44 = Methodref          #100.#134     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-   #45 = Class              #135          // java/lang/Object\n+   #24 = Methodref          #106.#107     // java/lang/Math.min:(II)I\n+   #25 = Methodref          #106.#108     // java/lang/Math.max:(II)I\n+   #26 = Fieldref           #109.#110     // org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n+   #27 = Methodref          #76.#111      // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #28 = Methodref          #112.#113     // org/apache/commons/codec/digest/DigestUtils.getDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;\n+   #29 = Methodref          #77.#114      // java/security/MessageDigest.update:([B)V\n+   #30 = Methodref          #77.#115      // java/security/MessageDigest.digest:()[B\n+   #31 = Methodref          #77.#116      // java/security/MessageDigest.update:([BII)V\n+   #32 = Methodref          #117.#118     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #33 = Methodref          #3.#97        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #34 = String             #119          // rounds=\n+   #35 = Methodref          #3.#120       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #36 = String             #121          // $\n+   #37 = Methodref          #88.#122      // org/apache/commons/codec/digest/B64.b64from24bit:(BBBILjava/lang/StringBuilder;)V\n+   #38 = Methodref          #123.#124     // java/util/Arrays.fill:([BB)V\n+   #39 = Methodref          #77.#125      // java/security/MessageDigest.reset:()V\n+   #40 = Methodref          #5.#126       // org/apache/commons/codec/digest/Sha2Crypt.sha512Crypt:([BLjava/lang/String;)Ljava/lang/String;\n+   #41 = String             #127          // $6$\n+   #42 = String             #128          // SHA-512\n+   #43 = String             #129          // ^\\\\$([56])\\\\$(rounds=(\\\\d+)\\\\$)?([\\\\.\\\\/a-zA-Z0-9]{1,16}).*\n+   #44 = Methodref          #99.#130      // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #45 = Class              #131          // java/lang/Object\n    #46 = Utf8               ROUNDS_DEFAULT\n    #47 = Utf8               I\n    #48 = Utf8               ConstantValue\n    #49 = Integer            5000\n    #50 = Utf8               ROUNDS_MAX\n    #51 = Utf8               ROUNDS_MIN\n    #52 = Integer            1000\n@@ -77,127 +77,123 @@\n    #67 = Utf8               sha256Crypt\n    #68 = Utf8               ([B)Ljava/lang/String;\n    #69 = Utf8               ([BLjava/lang/String;)Ljava/lang/String;\n    #70 = Utf8               StackMapTable\n    #71 = Utf8               ([BLjava/lang/String;Ljava/util/Random;)Ljava/lang/String;\n    #72 = Utf8               sha2Crypt\n    #73 = Utf8               ([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;\n-   #74 = Class              #136          // java/util/regex/Matcher\n-   #75 = Class              #137          // \"[B\"\n-   #76 = Class              #138          // java/lang/String\n-   #77 = Class              #139          // java/security/MessageDigest\n-   #78 = Class              #85           // java/lang/StringBuilder\n-   #79 = Utf8               sha512Crypt\n-   #80 = Utf8               <clinit>\n-   #81 = Utf8               SourceFile\n-   #82 = Utf8               Sha2Crypt.java\n-   #83 = NameAndType        #63:#64       // \"<init>\":()V\n-   #84 = NameAndType        #67:#69       // sha256Crypt:([BLjava/lang/String;)Ljava/lang/String;\n-   #85 = Utf8               java/lang/StringBuilder\n-   #86 = Utf8               org/apache/commons/codec/digest/Sha2Crypt\n-   #87 = Utf8               $5$\n-   #88 = NameAndType        #140:#141     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #89 = Class              #142          // org/apache/commons/codec/digest/B64\n-   #90 = NameAndType        #143:#144     // getRandomSalt:(I)Ljava/lang/String;\n-   #91 = NameAndType        #145:#146     // toString:()Ljava/lang/String;\n-   #92 = Utf8               org/apache/commons/codec/digest/MessageDigestAlgorithms\n-   #93 = Utf8               SHA-256\n-   #94 = NameAndType        #72:#73       // sha2Crypt:([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;\n-   #95 = NameAndType        #143:#147     // getRandomSalt:(ILjava/util/Random;)Ljava/lang/String;\n-   #96 = Utf8               java/lang/IllegalArgumentException\n-   #97 = Utf8               Salt must not be null\n-   #98 = NameAndType        #63:#148      // \"<init>\":(Ljava/lang/String;)V\n-   #99 = NameAndType        #61:#62       // SALT_PATTERN:Ljava/util/regex/Pattern;\n-  #100 = Class              #149          // java/util/regex/Pattern\n-  #101 = NameAndType        #150:#151     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #102 = Class              #136          // java/util/regex/Matcher\n-  #103 = NameAndType        #152:#153     // find:()Z\n-  #104 = Utf8               Invalid salt value:\n-  #105 = NameAndType        #154:#144     // group:(I)Ljava/lang/String;\n-  #106 = Class              #155          // java/lang/Integer\n-  #107 = NameAndType        #156:#157     // parseInt:(Ljava/lang/String;)I\n-  #108 = Class              #158          // java/lang/Math\n-  #109 = NameAndType        #159:#160     // min:(II)I\n-  #110 = NameAndType        #161:#160     // max:(II)I\n-  #111 = Class              #162          // org/apache/commons/codec/Charsets\n-  #112 = NameAndType        #163:#164     // UTF_8:Ljava/nio/charset/Charset;\n-  #113 = Class              #138          // java/lang/String\n-  #114 = NameAndType        #165:#166     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #115 = Class              #167          // org/apache/commons/codec/digest/DigestUtils\n-  #116 = NameAndType        #168:#169     // getDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;\n-  #117 = Class              #139          // java/security/MessageDigest\n-  #118 = NameAndType        #170:#171     // update:([B)V\n-  #119 = NameAndType        #172:#173     // digest:()[B\n-  #120 = NameAndType        #170:#174     // update:([BII)V\n-  #121 = Class              #175          // java/lang/System\n-  #122 = NameAndType        #176:#177     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #123 = Utf8               rounds=\n-  #124 = NameAndType        #140:#178     // append:(I)Ljava/lang/StringBuilder;\n-  #125 = Utf8               $\n-  #126 = NameAndType        #179:#180     // b64from24bit:(BBBILjava/lang/StringBuilder;)V\n-  #127 = Class              #181          // java/util/Arrays\n-  #128 = NameAndType        #182:#183     // fill:([BB)V\n-  #129 = NameAndType        #184:#64      // reset:()V\n-  #130 = NameAndType        #79:#69       // sha512Crypt:([BLjava/lang/String;)Ljava/lang/String;\n-  #131 = Utf8               $6$\n-  #132 = Utf8               SHA-512\n-  #133 = Utf8               ^\\\\$([56])\\\\$(rounds=(\\\\d+)\\\\$)?([\\\\.\\\\/a-zA-Z0-9]{1,16}).*\n-  #134 = NameAndType        #185:#186     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #135 = Utf8               java/lang/Object\n-  #136 = Utf8               java/util/regex/Matcher\n-  #137 = Utf8               [B\n-  #138 = Utf8               java/lang/String\n-  #139 = Utf8               java/security/MessageDigest\n-  #140 = Utf8               append\n-  #141 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #142 = Utf8               org/apache/commons/codec/digest/B64\n-  #143 = Utf8               getRandomSalt\n-  #144 = Utf8               (I)Ljava/lang/String;\n-  #145 = Utf8               toString\n-  #146 = Utf8               ()Ljava/lang/String;\n-  #147 = Utf8               (ILjava/util/Random;)Ljava/lang/String;\n-  #148 = Utf8               (Ljava/lang/String;)V\n-  #149 = Utf8               java/util/regex/Pattern\n-  #150 = Utf8               matcher\n-  #151 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #152 = Utf8               find\n-  #153 = Utf8               ()Z\n-  #154 = Utf8               group\n-  #155 = Utf8               java/lang/Integer\n-  #156 = Utf8               parseInt\n-  #157 = Utf8               (Ljava/lang/String;)I\n-  #158 = Utf8               java/lang/Math\n-  #159 = Utf8               min\n-  #160 = Utf8               (II)I\n-  #161 = Utf8               max\n-  #162 = Utf8               org/apache/commons/codec/Charsets\n-  #163 = Utf8               UTF_8\n-  #164 = Utf8               Ljava/nio/charset/Charset;\n-  #165 = Utf8               getBytes\n-  #166 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #167 = Utf8               org/apache/commons/codec/digest/DigestUtils\n-  #168 = Utf8               getDigest\n-  #169 = Utf8               (Ljava/lang/String;)Ljava/security/MessageDigest;\n-  #170 = Utf8               update\n-  #171 = Utf8               ([B)V\n-  #172 = Utf8               digest\n-  #173 = Utf8               ()[B\n-  #174 = Utf8               ([BII)V\n-  #175 = Utf8               java/lang/System\n-  #176 = Utf8               arraycopy\n-  #177 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #178 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #179 = Utf8               b64from24bit\n-  #180 = Utf8               (BBBILjava/lang/StringBuilder;)V\n-  #181 = Utf8               java/util/Arrays\n-  #182 = Utf8               fill\n-  #183 = Utf8               ([BB)V\n-  #184 = Utf8               reset\n-  #185 = Utf8               compile\n-  #186 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+   #74 = Class              #132          // java/util/regex/Matcher\n+   #75 = Class              #133          // \"[B\"\n+   #76 = Class              #134          // java/lang/String\n+   #77 = Class              #135          // java/security/MessageDigest\n+   #78 = Utf8               sha512Crypt\n+   #79 = Utf8               <clinit>\n+   #80 = Utf8               SourceFile\n+   #81 = Utf8               Sha2Crypt.java\n+   #82 = NameAndType        #63:#64       // \"<init>\":()V\n+   #83 = NameAndType        #67:#69       // sha256Crypt:([BLjava/lang/String;)Ljava/lang/String;\n+   #84 = Utf8               java/lang/StringBuilder\n+   #85 = Utf8               org/apache/commons/codec/digest/Sha2Crypt\n+   #86 = Utf8               $5$\n+   #87 = NameAndType        #136:#137     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #88 = Class              #138          // org/apache/commons/codec/digest/B64\n+   #89 = NameAndType        #139:#140     // getRandomSalt:(I)Ljava/lang/String;\n+   #90 = NameAndType        #141:#142     // toString:()Ljava/lang/String;\n+   #91 = Utf8               org/apache/commons/codec/digest/MessageDigestAlgorithms\n+   #92 = Utf8               SHA-256\n+   #93 = NameAndType        #72:#73       // sha2Crypt:([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;\n+   #94 = NameAndType        #139:#143     // getRandomSalt:(ILjava/util/Random;)Ljava/lang/String;\n+   #95 = Utf8               java/lang/IllegalArgumentException\n+   #96 = Utf8               Salt must not be null\n+   #97 = NameAndType        #63:#144      // \"<init>\":(Ljava/lang/String;)V\n+   #98 = NameAndType        #61:#62       // SALT_PATTERN:Ljava/util/regex/Pattern;\n+   #99 = Class              #145          // java/util/regex/Pattern\n+  #100 = NameAndType        #146:#147     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #101 = NameAndType        #148:#149     // find:()Z\n+  #102 = Utf8               Invalid salt value:\n+  #103 = NameAndType        #150:#140     // group:(I)Ljava/lang/String;\n+  #104 = Class              #151          // java/lang/Integer\n+  #105 = NameAndType        #152:#153     // parseInt:(Ljava/lang/String;)I\n+  #106 = Class              #154          // java/lang/Math\n+  #107 = NameAndType        #155:#156     // min:(II)I\n+  #108 = NameAndType        #157:#156     // max:(II)I\n+  #109 = Class              #158          // org/apache/commons/codec/Charsets\n+  #110 = NameAndType        #159:#160     // UTF_8:Ljava/nio/charset/Charset;\n+  #111 = NameAndType        #161:#162     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #112 = Class              #163          // org/apache/commons/codec/digest/DigestUtils\n+  #113 = NameAndType        #164:#165     // getDigest:(Ljava/lang/String;)Ljava/security/MessageDigest;\n+  #114 = NameAndType        #166:#167     // update:([B)V\n+  #115 = NameAndType        #168:#169     // digest:()[B\n+  #116 = NameAndType        #166:#170     // update:([BII)V\n+  #117 = Class              #171          // java/lang/System\n+  #118 = NameAndType        #172:#173     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #119 = Utf8               rounds=\n+  #120 = NameAndType        #136:#174     // append:(I)Ljava/lang/StringBuilder;\n+  #121 = Utf8               $\n+  #122 = NameAndType        #175:#176     // b64from24bit:(BBBILjava/lang/StringBuilder;)V\n+  #123 = Class              #177          // java/util/Arrays\n+  #124 = NameAndType        #178:#179     // fill:([BB)V\n+  #125 = NameAndType        #180:#64      // reset:()V\n+  #126 = NameAndType        #78:#69       // sha512Crypt:([BLjava/lang/String;)Ljava/lang/String;\n+  #127 = Utf8               $6$\n+  #128 = Utf8               SHA-512\n+  #129 = Utf8               ^\\\\$([56])\\\\$(rounds=(\\\\d+)\\\\$)?([\\\\.\\\\/a-zA-Z0-9]{1,16}).*\n+  #130 = NameAndType        #181:#182     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #131 = Utf8               java/lang/Object\n+  #132 = Utf8               java/util/regex/Matcher\n+  #133 = Utf8               [B\n+  #134 = Utf8               java/lang/String\n+  #135 = Utf8               java/security/MessageDigest\n+  #136 = Utf8               append\n+  #137 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #138 = Utf8               org/apache/commons/codec/digest/B64\n+  #139 = Utf8               getRandomSalt\n+  #140 = Utf8               (I)Ljava/lang/String;\n+  #141 = Utf8               toString\n+  #142 = Utf8               ()Ljava/lang/String;\n+  #143 = Utf8               (ILjava/util/Random;)Ljava/lang/String;\n+  #144 = Utf8               (Ljava/lang/String;)V\n+  #145 = Utf8               java/util/regex/Pattern\n+  #146 = Utf8               matcher\n+  #147 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #148 = Utf8               find\n+  #149 = Utf8               ()Z\n+  #150 = Utf8               group\n+  #151 = Utf8               java/lang/Integer\n+  #152 = Utf8               parseInt\n+  #153 = Utf8               (Ljava/lang/String;)I\n+  #154 = Utf8               java/lang/Math\n+  #155 = Utf8               min\n+  #156 = Utf8               (II)I\n+  #157 = Utf8               max\n+  #158 = Utf8               org/apache/commons/codec/Charsets\n+  #159 = Utf8               UTF_8\n+  #160 = Utf8               Ljava/nio/charset/Charset;\n+  #161 = Utf8               getBytes\n+  #162 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #163 = Utf8               org/apache/commons/codec/digest/DigestUtils\n+  #164 = Utf8               getDigest\n+  #165 = Utf8               (Ljava/lang/String;)Ljava/security/MessageDigest;\n+  #166 = Utf8               update\n+  #167 = Utf8               ([B)V\n+  #168 = Utf8               digest\n+  #169 = Utf8               ()[B\n+  #170 = Utf8               ([BII)V\n+  #171 = Utf8               java/lang/System\n+  #172 = Utf8               arraycopy\n+  #173 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #174 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #175 = Utf8               b64from24bit\n+  #176 = Utf8               (BBBILjava/lang/StringBuilder;)V\n+  #177 = Utf8               java/util/Arrays\n+  #178 = Utf8               fill\n+  #179 = Utf8               ([BB)V\n+  #180 = Utf8               reset\n+  #181 = Utf8               compile\n+  #182 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n {\n   private static final int ROUNDS_DEFAULT = 5000;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 5000\n \n   private static final int ROUNDS_MAX = 999999999;\n"}]}
