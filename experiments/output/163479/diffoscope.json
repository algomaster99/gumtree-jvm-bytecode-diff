{"diffoscope-json-version": 1, "source1": "first/TarArchiveEntry.class", "source2": "second/TarArchiveEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,191 +1,191 @@\n-  SHA-256 checksum fa1b44e18042d5f82129c6039b0ed216c31e7cc85b095a7adab253b941580414\n+  SHA-256 checksum 1f5b6b5bf3be88353e4a1ade202ab774696a48788085ce6950b7d701a503f6fc\n   Compiled from \"TarArchiveEntry.java\"\n public class org.apache.commons.compress.archivers.tar.TarArchiveEntry implements org.apache.commons.compress.archivers.ArchiveEntry,org.apache.commons.compress.archivers.tar.TarConstants\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #22                         // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n   super_class: #176                       // java/lang/Object\n   interfaces: 2, fields: 27, methods: 83, attributes: 2\n Constant pool:\n-    #1 = Methodref          #176.#391     // java/lang/Object.\"<init>\":()V\n-    #2 = String             #392          //\n-    #3 = Fieldref           #22.#393      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.name:Ljava/lang/String;\n-    #4 = Fieldref           #22.#394      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userId:J\n-    #5 = Fieldref           #22.#395      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupId:J\n-    #6 = Fieldref           #22.#396      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.size:J\n-    #7 = Fieldref           #22.#397      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkName:Ljava/lang/String;\n-    #8 = Class              #398          // org/apache/commons/compress/archivers/tar/TarConstants\n-    #9 = String             #399          // ustar\\u0000\n-   #10 = Fieldref           #22.#400      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.magic:Ljava/lang/String;\n-   #11 = String             #401          // 00\n-   #12 = Fieldref           #22.#402      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.version:Ljava/lang/String;\n-   #13 = Fieldref           #22.#403      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupName:Ljava/lang/String;\n-   #14 = Fieldref           #22.#404      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMajor:I\n-   #15 = Fieldref           #22.#405      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMinor:I\n-   #16 = Class              #406          // java/util/HashMap\n-   #17 = Methodref          #16.#391      // java/util/HashMap.\"<init>\":()V\n-   #18 = Fieldref           #22.#407      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.extraPaxHeaders:Ljava/util/Map;\n-   #19 = String             #408          // user.name\n-   #20 = Methodref          #409.#410     // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Methodref          #95.#411      // java/lang/String.length:()I\n-   #22 = Class              #412          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-   #23 = Methodref          #95.#413      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #24 = Fieldref           #22.#414      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userName:Ljava/lang/String;\n-   #25 = Fieldref           #22.#415      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.file:Ljava/io/File;\n-   #26 = Fieldref           #22.#416      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.preserveAbsolutePath:Z\n-   #27 = Methodref          #22.#417      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;Z)V\n-   #28 = Methodref          #22.#418      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Z)V\n-   #29 = Methodref          #22.#419      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #30 = String             #420          // /\n-   #31 = Methodref          #95.#421      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+    #1 = Methodref          #176.#387     // java/lang/Object.\"<init>\":()V\n+    #2 = String             #388          //\n+    #3 = Fieldref           #22.#389      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.name:Ljava/lang/String;\n+    #4 = Fieldref           #22.#390      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userId:J\n+    #5 = Fieldref           #22.#391      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupId:J\n+    #6 = Fieldref           #22.#392      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.size:J\n+    #7 = Fieldref           #22.#393      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkName:Ljava/lang/String;\n+    #8 = Class              #394          // org/apache/commons/compress/archivers/tar/TarConstants\n+    #9 = String             #395          // ustar\\u0000\n+   #10 = Fieldref           #22.#396      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.magic:Ljava/lang/String;\n+   #11 = String             #397          // 00\n+   #12 = Fieldref           #22.#398      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.version:Ljava/lang/String;\n+   #13 = Fieldref           #22.#399      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.groupName:Ljava/lang/String;\n+   #14 = Fieldref           #22.#400      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMajor:I\n+   #15 = Fieldref           #22.#401      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.devMinor:I\n+   #16 = Class              #402          // java/util/HashMap\n+   #17 = Methodref          #16.#387      // java/util/HashMap.\"<init>\":()V\n+   #18 = Fieldref           #22.#403      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.extraPaxHeaders:Ljava/util/Map;\n+   #19 = String             #404          // user.name\n+   #20 = Methodref          #405.#406     // java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #21 = Methodref          #95.#407      // java/lang/String.length:()I\n+   #22 = Class              #408          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+   #23 = Methodref          #95.#409      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #24 = Fieldref           #22.#410      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.userName:Ljava/lang/String;\n+   #25 = Fieldref           #22.#411      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.file:Ljava/io/File;\n+   #26 = Fieldref           #22.#412      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.preserveAbsolutePath:Z\n+   #27 = Methodref          #22.#413      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;Z)V\n+   #28 = Methodref          #22.#414      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Z)V\n+   #29 = Methodref          #22.#415      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #30 = String             #416          // /\n+   #31 = Methodref          #95.#417      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n    #32 = Integer            33188\n-   #33 = Fieldref           #22.#422      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.mode:I\n-   #34 = Fieldref           #22.#423      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkFlag:B\n-   #35 = Class              #424          // java/util/Date\n-   #36 = Methodref          #35.#391      // java/util/Date.\"<init>\":()V\n-   #37 = Methodref          #35.#425      // java/util/Date.getTime:()J\n+   #33 = Fieldref           #22.#418      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.mode:I\n+   #34 = Fieldref           #22.#419      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.linkFlag:B\n+   #35 = Class              #420          // java/util/Date\n+   #36 = Methodref          #35.#387      // java/util/Date.\"<init>\":()V\n+   #37 = Methodref          #35.#421      // java/util/Date.getTime:()J\n    #38 = Long               1000l\n-   #40 = Fieldref           #22.#426      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.modTime:J\n-   #41 = Methodref          #22.#427      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;BZ)V\n-   #42 = String             #428          // ustar\n-   #43 = String             #429          //  \\u0000\n-   #44 = Methodref          #135.#430     // java/io/File.getPath:()Ljava/lang/String;\n-   #45 = Methodref          #22.#431      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #46 = Methodref          #135.#432     // java/io/File.isDirectory:()Z\n-   #47 = Methodref          #95.#433      // java/lang/String.charAt:(I)C\n-   #48 = Class              #434          // java/lang/StringBuilder\n-   #49 = Methodref          #48.#391      // java/lang/StringBuilder.\"<init>\":()V\n-   #50 = Methodref          #48.#435      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #51 = Methodref          #48.#436      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #52 = Methodref          #135.#437     // java/io/File.length:()J\n-   #53 = Methodref          #135.#438     // java/io/File.lastModified:()J\n-   #54 = Methodref          #22.#439      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([B)V\n-   #55 = Methodref          #22.#440      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-   #56 = Methodref          #22.#441      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getName:()Ljava/lang/String;\n-   #57 = Methodref          #95.#442      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #58 = Methodref          #176.#443     // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #59 = Methodref          #22.#444      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n-   #60 = Methodref          #95.#445      // java/lang/String.hashCode:()I\n-   #61 = Methodref          #95.#446      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #40 = Fieldref           #22.#422      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.modTime:J\n+   #41 = Methodref          #22.#423      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/lang/String;BZ)V\n+   #42 = String             #424          // ustar\n+   #43 = String             #425          //  \\u0000\n+   #44 = Methodref          #135.#426     // java/io/File.getPath:()Ljava/lang/String;\n+   #45 = Methodref          #22.#427      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #46 = Methodref          #135.#428     // java/io/File.isDirectory:()Z\n+   #47 = Methodref          #95.#429      // java/lang/String.charAt:(I)C\n+   #48 = Class              #430          // java/lang/StringBuilder\n+   #49 = Methodref          #48.#387      // java/lang/StringBuilder.\"<init>\":()V\n+   #50 = Methodref          #48.#431      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = Methodref          #48.#432      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #52 = Methodref          #135.#433     // java/io/File.length:()J\n+   #53 = Methodref          #135.#434     // java/io/File.lastModified:()J\n+   #54 = Methodref          #22.#435      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([B)V\n+   #55 = Methodref          #22.#436      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+   #56 = Methodref          #22.#437      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getName:()Ljava/lang/String;\n+   #57 = Methodref          #95.#438      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #58 = Methodref          #176.#439     // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #59 = Methodref          #22.#440      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+   #60 = Methodref          #95.#441      // java/lang/String.hashCode:()I\n+   #61 = Methodref          #95.#442      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n    #62 = Long               -1l\n-   #64 = Methodref          #22.#447      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(J)V\n-   #65 = Methodref          #22.#448      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(J)V\n-   #66 = Methodref          #22.#449      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(I)V\n-   #67 = Methodref          #22.#450      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(I)V\n-   #68 = Methodref          #22.#451      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserName:(Ljava/lang/String;)V\n-   #69 = Methodref          #22.#452      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupName:(Ljava/lang/String;)V\n-   #70 = Methodref          #35.#453      // java/util/Date.\"<init>\":(J)V\n-   #71 = Methodref          #22.#454      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;\n-   #72 = Fieldref           #22.#455      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.checkSumOK:Z\n-   #73 = Class              #456          // java/lang/IllegalArgumentException\n-   #74 = String             #457          // Size is out of range:\n-   #75 = Methodref          #48.#458      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #76 = Methodref          #73.#459      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #77 = String             #460          // Major device number is out of range:\n-   #78 = Methodref          #48.#461      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #79 = String             #462          // Minor device number is out of range:\n-   #80 = Fieldref           #22.#463      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isExtended:Z\n-   #81 = Fieldref           #22.#464      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.realSize:J\n-   #82 = Methodref          #22.#465      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z\n-   #83 = Methodref          #22.#466      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxGNUSparse:()Z\n-   #84 = Fieldref           #22.#467      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.paxGNUSparse:Z\n-   #85 = Fieldref           #22.#468      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.starSparse:Z\n-   #86 = Methodref          #22.#469      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z\n-   #87 = Methodref          #22.#470      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z\n-   #88 = Methodref          #135.#471     // java/io/File.isFile:()Z\n-   #89 = Methodref          #22.#472      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNUSparse:()Z\n-   #90 = Methodref          #22.#473      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isStarSparse:()Z\n-   #91 = Methodref          #474.#475     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-   #92 = InterfaceMethodref #476.#477     // java/util/Map.clear:()V\n-   #93 = Methodref          #22.#478      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n-   #94 = InterfaceMethodref #476.#479     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #95 = Class              #480          // java/lang/String\n-   #96 = InterfaceMethodref #476.#481     // java/util/Map.entrySet:()Ljava/util/Set;\n-   #97 = InterfaceMethodref #482.#483     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #98 = InterfaceMethodref #484.#485     // java/util/Iterator.hasNext:()Z\n-   #99 = InterfaceMethodref #484.#486     // java/util/Iterator.next:()Ljava/lang/Object;\n-  #100 = Class              #487          // java/util/Map$Entry\n-  #101 = InterfaceMethodref #100.#488     // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n-  #102 = InterfaceMethodref #100.#489     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n-  #103 = Methodref          #22.#490      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n-  #104 = String             #491          // path\n-  #105 = String             #492          // linkpath\n-  #106 = String             #493          // gid\n-  #107 = String             #494          // gname\n-  #108 = String             #495          // uid\n-  #109 = String             #496          // uname\n+   #64 = Methodref          #22.#443      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(J)V\n+   #65 = Methodref          #22.#444      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(J)V\n+   #66 = Methodref          #22.#445      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserId:(I)V\n+   #67 = Methodref          #22.#446      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupId:(I)V\n+   #68 = Methodref          #22.#447      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setUserName:(Ljava/lang/String;)V\n+   #69 = Methodref          #22.#448      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setGroupName:(Ljava/lang/String;)V\n+   #70 = Methodref          #35.#449      // java/util/Date.\"<init>\":(J)V\n+   #71 = Methodref          #22.#450      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.getModTime:()Ljava/util/Date;\n+   #72 = Fieldref           #22.#451      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.checkSumOK:Z\n+   #73 = Class              #452          // java/lang/IllegalArgumentException\n+   #74 = String             #453          // Size is out of range:\n+   #75 = Methodref          #48.#454      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #76 = Methodref          #73.#455      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #77 = String             #456          // Major device number is out of range:\n+   #78 = Methodref          #48.#457      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #79 = String             #458          // Minor device number is out of range:\n+   #80 = Fieldref           #22.#459      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isExtended:Z\n+   #81 = Fieldref           #22.#460      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.realSize:J\n+   #82 = Methodref          #22.#461      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isOldGNUSparse:()Z\n+   #83 = Methodref          #22.#462      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxGNUSparse:()Z\n+   #84 = Fieldref           #22.#463      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.paxGNUSparse:Z\n+   #85 = Fieldref           #22.#464      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.starSparse:Z\n+   #86 = Methodref          #22.#465      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isPaxHeader:()Z\n+   #87 = Methodref          #22.#466      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGlobalPaxHeader:()Z\n+   #88 = Methodref          #135.#467     // java/io/File.isFile:()Z\n+   #89 = Methodref          #22.#468      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isGNUSparse:()Z\n+   #90 = Methodref          #22.#469      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isStarSparse:()Z\n+   #91 = Methodref          #470.#471     // java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+   #92 = InterfaceMethodref #472.#473     // java/util/Map.clear:()V\n+   #93 = Methodref          #22.#474      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n+   #94 = InterfaceMethodref #472.#475     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #95 = Class              #476          // java/lang/String\n+   #96 = InterfaceMethodref #472.#477     // java/util/Map.entrySet:()Ljava/util/Set;\n+   #97 = InterfaceMethodref #478.#479     // java/util/Set.iterator:()Ljava/util/Iterator;\n+   #98 = InterfaceMethodref #337.#480     // java/util/Iterator.hasNext:()Z\n+   #99 = InterfaceMethodref #337.#481     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #100 = Class              #482          // java/util/Map$Entry\n+  #101 = InterfaceMethodref #100.#483     // java/util/Map$Entry.getKey:()Ljava/lang/Object;\n+  #102 = InterfaceMethodref #100.#484     // java/util/Map$Entry.getValue:()Ljava/lang/Object;\n+  #103 = Methodref          #22.#485      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+  #104 = String             #486          // path\n+  #105 = String             #487          // linkpath\n+  #106 = String             #488          // gid\n+  #107 = String             #489          // gname\n+  #108 = String             #490          // uid\n+  #109 = String             #491          // uname\n   #110 = String             #189          // size\n-  #111 = String             #497          // mtime\n-  #112 = String             #498          // SCHILY.devminor\n-  #113 = String             #499          // SCHILY.devmajor\n-  #114 = String             #500          // GNU.sparse.size\n-  #115 = String             #501          // GNU.sparse.realsize\n-  #116 = String             #502          // SCHILY.filetype\n-  #117 = Methodref          #22.#503      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V\n-  #118 = Methodref          #22.#504      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V\n-  #119 = Methodref          #505.#506     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-  #120 = Methodref          #22.#507      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V\n-  #121 = Methodref          #508.#509     // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+  #111 = String             #492          // mtime\n+  #112 = String             #493          // SCHILY.devminor\n+  #113 = String             #494          // SCHILY.devmajor\n+  #114 = String             #495          // GNU.sparse.size\n+  #115 = String             #496          // GNU.sparse.realsize\n+  #116 = String             #497          // SCHILY.filetype\n+  #117 = Methodref          #22.#498      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setName:(Ljava/lang/String;)V\n+  #118 = Methodref          #22.#499      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setLinkName:(Ljava/lang/String;)V\n+  #119 = Methodref          #500.#501     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+  #120 = Methodref          #22.#502      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setSize:(J)V\n+  #121 = Methodref          #503.#504     // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n   #122 = Double             1000.0d\n-  #124 = Methodref          #22.#510      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(J)V\n-  #125 = Methodref          #511.#512     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-  #126 = Methodref          #22.#513      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMinor:(I)V\n-  #127 = Methodref          #22.#514      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMajor:(I)V\n-  #128 = Methodref          #22.#515      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse0xData:(Ljava/util/Map;)V\n-  #129 = Methodref          #22.#516      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse1xData:(Ljava/util/Map;)V\n-  #130 = String             #517          // sparse\n-  #131 = Methodref          #22.#518      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillStarSparseData:(Ljava/util/Map;)V\n-  #132 = InterfaceMethodref #476.#519     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #133 = Fieldref           #22.#520      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.EMPTY_TAR_ARCHIVE_ENTRIES:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #134 = Methodref          #135.#521     // java/io/File.list:()[Ljava/lang/String;\n-  #135 = Class              #522          // java/io/File\n-  #136 = Methodref          #135.#431     // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #137 = Methodref          #22.#523      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/io/File;)V\n-  #138 = Fieldref           #524.#525     // org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #139 = Methodref          #22.#526      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #140 = Class              #527          // java/io/IOException\n-  #141 = Fieldref           #524.#528     // org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #142 = Class              #529          // java/lang/RuntimeException\n-  #143 = Methodref          #142.#530     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #144 = Methodref          #524.#531     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #145 = Methodref          #22.#532      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField:(J[BIIZ)I\n-  #146 = Methodref          #524.#533     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n-  #147 = Methodref          #524.#534     // org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum:([B)J\n-  #148 = Methodref          #524.#535     // org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes:(J[BII)I\n-  #149 = Methodref          #524.#536     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n-  #150 = Methodref          #524.#537     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes:(J[BII)I\n-  #151 = Methodref          #22.#538      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #152 = Methodref          #524.#539     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n-  #153 = Methodref          #524.#540     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #154 = Methodref          #524.#541     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n-  #155 = Methodref          #524.#542     // org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum:([B)Z\n-  #156 = Methodref          #22.#543      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.evaluateType:([B)I\n-  #157 = Methodref          #524.#544     // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-  #158 = Methodref          #524.#545     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n-  #159 = Methodref          #22.#432      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z\n-  #160 = String             #546          // os.name\n-  #161 = Methodref          #409.#547     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #162 = Fieldref           #548.#549     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n-  #163 = Methodref          #95.#550      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #164 = String             #551          // windows\n-  #165 = Methodref          #95.#552      // java/lang/String.substring:(I)Ljava/lang/String;\n-  #166 = String             #553          // netware\n-  #167 = Methodref          #95.#554      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-  #168 = Methodref          #95.#555      // java/lang/String.indexOf:(I)I\n-  #169 = Fieldref           #135.#556     // java/io/File.separatorChar:C\n-  #170 = Methodref          #95.#557      // java/lang/String.replace:(CC)Ljava/lang/String;\n-  #171 = Methodref          #558.#559     // org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n-  #172 = String             #560          // tar\\u0000\n-  #173 = String             #561          // GNU.sparse.name\n-  #174 = InterfaceMethodref #476.#562     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n-  #175 = String             #563          // SCHILY.realsize\n-  #176 = Class              #564          // java/lang/Object\n-  #177 = Class              #565          // org/apache/commons/compress/archivers/ArchiveEntry\n+  #124 = Methodref          #22.#505      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setModTime:(J)V\n+  #125 = Methodref          #506.#507     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #126 = Methodref          #22.#508      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMinor:(I)V\n+  #127 = Methodref          #22.#509      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.setDevMajor:(I)V\n+  #128 = Methodref          #22.#510      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse0xData:(Ljava/util/Map;)V\n+  #129 = Methodref          #22.#511      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillGNUSparse1xData:(Ljava/util/Map;)V\n+  #130 = String             #512          // sparse\n+  #131 = Methodref          #22.#513      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.fillStarSparseData:(Ljava/util/Map;)V\n+  #132 = InterfaceMethodref #472.#514     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #133 = Fieldref           #22.#515      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.EMPTY_TAR_ARCHIVE_ENTRIES:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #134 = Methodref          #135.#516     // java/io/File.list:()[Ljava/lang/String;\n+  #135 = Class              #517          // java/io/File\n+  #136 = Methodref          #135.#427     // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #137 = Methodref          #22.#518      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.\"<init>\":(Ljava/io/File;)V\n+  #138 = Fieldref           #519.#520     // org/apache/commons/compress/archivers/tar/TarUtils.DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #139 = Methodref          #22.#521      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #140 = Class              #522          // java/io/IOException\n+  #141 = Fieldref           #519.#523     // org/apache/commons/compress/archivers/tar/TarUtils.FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #142 = Class              #524          // java/lang/RuntimeException\n+  #143 = Methodref          #142.#525     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #144 = Methodref          #519.#526     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #145 = Methodref          #22.#527      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.writeEntryHeaderField:(J[BIIZ)I\n+  #146 = Methodref          #519.#528     // org/apache/commons/compress/archivers/tar/TarUtils.formatNameBytes:(Ljava/lang/String;[BII)I\n+  #147 = Methodref          #519.#529     // org/apache/commons/compress/archivers/tar/TarUtils.computeCheckSum:([B)J\n+  #148 = Methodref          #519.#530     // org/apache/commons/compress/archivers/tar/TarUtils.formatCheckSumOctalBytes:(J[BII)I\n+  #149 = Methodref          #519.#531     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalBytes:(J[BII)I\n+  #150 = Methodref          #519.#532     // org/apache/commons/compress/archivers/tar/TarUtils.formatLongOctalOrBinaryBytes:(J[BII)I\n+  #151 = Methodref          #22.#533      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #152 = Methodref          #519.#534     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BII)Ljava/lang/String;\n+  #153 = Methodref          #519.#535     // org/apache/commons/compress/archivers/tar/TarUtils.parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #154 = Methodref          #519.#536     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctalOrBinary:([BII)J\n+  #155 = Methodref          #519.#537     // org/apache/commons/compress/archivers/tar/TarUtils.verifyCheckSum:([B)Z\n+  #156 = Methodref          #22.#538      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.evaluateType:([B)I\n+  #157 = Methodref          #519.#539     // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+  #158 = Methodref          #519.#540     // org/apache/commons/compress/archivers/tar/TarUtils.parseOctal:([BII)J\n+  #159 = Methodref          #22.#428      // org/apache/commons/compress/archivers/tar/TarArchiveEntry.isDirectory:()Z\n+  #160 = String             #541          // os.name\n+  #161 = Methodref          #405.#542     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #162 = Fieldref           #543.#544     // java/util/Locale.ENGLISH:Ljava/util/Locale;\n+  #163 = Methodref          #95.#545      // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #164 = String             #546          // windows\n+  #165 = Methodref          #95.#547      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #166 = String             #548          // netware\n+  #167 = Methodref          #95.#549      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #168 = Methodref          #95.#550      // java/lang/String.indexOf:(I)I\n+  #169 = Fieldref           #135.#551     // java/io/File.separatorChar:C\n+  #170 = Methodref          #95.#552      // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #171 = Methodref          #553.#554     // org/apache/commons/compress/utils/ArchiveUtils.matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+  #172 = String             #555          // tar\\u0000\n+  #173 = String             #556          // GNU.sparse.name\n+  #174 = InterfaceMethodref #472.#557     // java/util/Map.containsKey:(Ljava/lang/Object;)Z\n+  #175 = String             #558          // SCHILY.realsize\n+  #176 = Class              #559          // java/lang/Object\n+  #177 = Class              #560          // org/apache/commons/compress/archivers/ArchiveEntry\n   #178 = Utf8               EMPTY_TAR_ARCHIVE_ENTRIES\n   #179 = Utf8               [Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n   #180 = Utf8               name\n   #181 = Utf8               Ljava/lang/String;\n   #182 = Utf8               preserveAbsolutePath\n   #183 = Utf8               Z\n   #184 = Utf8               mode\n@@ -228,443 +228,438 @@\n   #221 = Utf8               Code\n   #222 = Utf8               LineNumberTable\n   #223 = Utf8               LocalVariableTable\n   #224 = Utf8               this\n   #225 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n   #226 = Utf8               user\n   #227 = Utf8               StackMapTable\n-  #228 = Class              #412          // org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #229 = Class              #480          // java/lang/String\n-  #230 = Utf8               (Ljava/lang/String;)V\n-  #231 = Utf8               (Ljava/lang/String;Z)V\n-  #232 = Utf8               isDir\n-  #233 = Utf8               (Ljava/lang/String;B)V\n-  #234 = Utf8               (Ljava/lang/String;BZ)V\n-  #235 = Utf8               (Ljava/io/File;)V\n-  #236 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-  #237 = Utf8               nameLength\n-  #238 = Utf8               fileName\n-  #239 = Utf8               normalizedName\n-  #240 = Class              #522          // java/io/File\n-  #241 = Utf8               ([B)V\n-  #242 = Utf8               headerBuf\n-  #243 = Utf8               [B\n-  #244 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #245 = Utf8               encoding\n-  #246 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #247 = Utf8               Exceptions\n-  #248 = Utf8               equals\n-  #249 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n-  #250 = Utf8               it\n-  #251 = Utf8               (Ljava/lang/Object;)Z\n-  #252 = Utf8               Ljava/lang/Object;\n-  #253 = Utf8               hashCode\n-  #254 = Utf8               ()I\n-  #255 = Utf8               isDescendent\n-  #256 = Utf8               desc\n-  #257 = Utf8               getName\n-  #258 = Utf8               ()Ljava/lang/String;\n-  #259 = Utf8               setName\n-  #260 = Utf8               setMode\n-  #261 = Utf8               (I)V\n-  #262 = Utf8               getLinkName\n-  #263 = Utf8               setLinkName\n-  #264 = Utf8               link\n-  #265 = Utf8               getUserId\n-  #266 = Utf8               Deprecated\n-  #267 = Utf8               RuntimeVisibleAnnotations\n-  #268 = Utf8               Ljava/lang/Deprecated;\n-  #269 = Utf8               setUserId\n-  #270 = Utf8               getLongUserId\n-  #271 = Utf8               ()J\n-  #272 = Utf8               (J)V\n-  #273 = Utf8               getGroupId\n-  #274 = Utf8               setGroupId\n-  #275 = Utf8               getLongGroupId\n-  #276 = Utf8               getUserName\n-  #277 = Utf8               setUserName\n-  #278 = Utf8               getGroupName\n-  #279 = Utf8               setGroupName\n-  #280 = Utf8               setIds\n-  #281 = Utf8               (II)V\n-  #282 = Utf8               setNames\n-  #283 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #284 = Utf8               setModTime\n-  #285 = Utf8               time\n-  #286 = Utf8               (Ljava/util/Date;)V\n-  #287 = Utf8               Ljava/util/Date;\n-  #288 = Utf8               getModTime\n-  #289 = Utf8               ()Ljava/util/Date;\n-  #290 = Utf8               getLastModifiedDate\n-  #291 = Utf8               isCheckSumOK\n-  #292 = Utf8               ()Z\n-  #293 = Utf8               getFile\n-  #294 = Utf8               ()Ljava/io/File;\n-  #295 = Utf8               getMode\n-  #296 = Utf8               getSize\n-  #297 = Utf8               setSize\n-  #298 = Utf8               getDevMajor\n-  #299 = Utf8               setDevMajor\n-  #300 = Utf8               devNo\n-  #301 = Utf8               getDevMinor\n-  #302 = Utf8               setDevMinor\n-  #303 = Utf8               getRealSize\n-  #304 = Utf8               isGNUSparse\n-  #305 = Utf8               isOldGNUSparse\n-  #306 = Utf8               isPaxGNUSparse\n-  #307 = Utf8               isStarSparse\n-  #308 = Utf8               isGNULongLinkEntry\n-  #309 = Utf8               isGNULongNameEntry\n-  #310 = Utf8               isPaxHeader\n-  #311 = Utf8               isGlobalPaxHeader\n-  #312 = Utf8               isDirectory\n-  #313 = Utf8               isFile\n-  #314 = Utf8               isSymbolicLink\n-  #315 = Utf8               isLink\n-  #316 = Utf8               isCharacterDevice\n-  #317 = Utf8               isBlockDevice\n-  #318 = Utf8               isFIFO\n-  #319 = Utf8               isSparse\n-  #320 = Utf8               getExtraPaxHeaders\n-  #321 = Utf8               ()Ljava/util/Map;\n-  #322 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n-  #323 = Utf8               clearExtraPaxHeaders\n-  #324 = Utf8               ()V\n-  #325 = Utf8               addPaxHeader\n-  #326 = Utf8               value\n-  #327 = Utf8               getExtraPaxHeader\n-  #328 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #329 = Utf8               updateEntryFromPaxHeaders\n-  #330 = Utf8               (Ljava/util/Map;)V\n-  #331 = Utf8               key\n-  #332 = Utf8               val\n-  #333 = Utf8               ent\n-  #334 = Utf8               Entry\n-  #335 = Utf8               InnerClasses\n-  #336 = Utf8               Ljava/util/Map$Entry;\n-  #337 = Utf8               headers\n-  #338 = Utf8               LocalVariableTypeTable\n-  #339 = Utf8               Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;\n-  #340 = Class              #566          // java/util/Iterator\n-  #341 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n-  #342 = Utf8               processPaxHeader\n-  #343 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n-  #344 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n-  #345 = Utf8               getDirectoryEntries\n-  #346 = Utf8               ()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #347 = Utf8               i\n-  #348 = Utf8               list\n-  #349 = Utf8               [Ljava/lang/String;\n-  #350 = Utf8               result\n-  #351 = Class              #349          // \"[Ljava/lang/String;\"\n-  #352 = Class              #179          // \"[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\"\n-  #353 = Utf8               writeEntryHeader\n-  #354 = Utf8               ex2\n-  #355 = Utf8               Ljava/io/IOException;\n-  #356 = Utf8               ex\n-  #357 = Utf8               outbuf\n-  #358 = Class              #527          // java/io/IOException\n-  #359 = Class              #243          // \"[B\"\n-  #360 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #361 = Utf8               c\n-  #362 = Utf8               starMode\n-  #363 = Utf8               offset\n-  #364 = Utf8               csOffset\n-  #365 = Utf8               chk\n-  #366 = Utf8               writeEntryHeaderField\n-  #367 = Utf8               (J[BIIZ)I\n-  #368 = Utf8               length\n-  #369 = Utf8               parseTarHeader\n-  #370 = Utf8               header\n-  #371 = Utf8               xstarPrefix\n-  #372 = Utf8               prefix\n-  #373 = Utf8               oldStyle\n-  #374 = Utf8               type\n-  #375 = Class              #567          // org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #376 = Utf8               normalizeFileName\n-  #377 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #378 = Utf8               ch1\n-  #379 = Utf8               C\n-  #380 = Utf8               ch2\n-  #381 = Utf8               colon\n-  #382 = Utf8               osname\n-  #383 = Utf8               evaluateType\n-  #384 = Utf8               ([B)I\n-  #385 = Utf8               fillGNUSparse0xData\n-  #386 = Utf8               fillGNUSparse1xData\n-  #387 = Utf8               fillStarSparseData\n-  #388 = Utf8               <clinit>\n-  #389 = Utf8               SourceFile\n-  #390 = Utf8               TarArchiveEntry.java\n-  #391 = NameAndType        #219:#324     // \"<init>\":()V\n-  #392 = Utf8\n-  #393 = NameAndType        #180:#181     // name:Ljava/lang/String;\n-  #394 = NameAndType        #186:#187     // userId:J\n-  #395 = NameAndType        #188:#187     // groupId:J\n-  #396 = NameAndType        #189:#187     // size:J\n-  #397 = NameAndType        #194:#181     // linkName:Ljava/lang/String;\n-  #398 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n-  #399 = Utf8               ustar\\u0000\n-  #400 = NameAndType        #195:#181     // magic:Ljava/lang/String;\n-  #401 = Utf8               00\n-  #402 = NameAndType        #196:#181     // version:Ljava/lang/String;\n-  #403 = NameAndType        #198:#181     // groupName:Ljava/lang/String;\n-  #404 = NameAndType        #199:#185     // devMajor:I\n-  #405 = NameAndType        #200:#185     // devMinor:I\n-  #406 = Utf8               java/util/HashMap\n-  #407 = NameAndType        #207:#208     // extraPaxHeaders:Ljava/util/Map;\n-  #408 = Utf8               user.name\n-  #409 = Class              #568          // java/lang/System\n-  #410 = NameAndType        #569:#570     // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #411 = NameAndType        #368:#254     // length:()I\n-  #412 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n-  #413 = NameAndType        #571:#572     // substring:(II)Ljava/lang/String;\n-  #414 = NameAndType        #197:#181     // userName:Ljava/lang/String;\n-  #415 = NameAndType        #205:#206     // file:Ljava/io/File;\n-  #416 = NameAndType        #182:#183     // preserveAbsolutePath:Z\n-  #417 = NameAndType        #219:#231     // \"<init>\":(Ljava/lang/String;Z)V\n-  #418 = NameAndType        #219:#220     // \"<init>\":(Z)V\n-  #419 = NameAndType        #376:#377     // normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #420 = Utf8               /\n-  #421 = NameAndType        #573:#574     // endsWith:(Ljava/lang/String;)Z\n-  #422 = NameAndType        #184:#185     // mode:I\n-  #423 = NameAndType        #192:#193     // linkFlag:B\n-  #424 = Utf8               java/util/Date\n-  #425 = NameAndType        #575:#271     // getTime:()J\n-  #426 = NameAndType        #190:#187     // modTime:J\n-  #427 = NameAndType        #219:#234     // \"<init>\":(Ljava/lang/String;BZ)V\n-  #428 = Utf8               ustar\n-  #429 = Utf8                \\u0000\n-  #430 = NameAndType        #576:#258     // getPath:()Ljava/lang/String;\n-  #431 = NameAndType        #219:#236     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #432 = NameAndType        #312:#292     // isDirectory:()Z\n-  #433 = NameAndType        #577:#578     // charAt:(I)C\n-  #434 = Utf8               java/lang/StringBuilder\n-  #435 = NameAndType        #579:#580     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #436 = NameAndType        #581:#258     // toString:()Ljava/lang/String;\n-  #437 = NameAndType        #368:#271     // length:()J\n-  #438 = NameAndType        #582:#271     // lastModified:()J\n-  #439 = NameAndType        #369:#241     // parseTarHeader:([B)V\n-  #440 = NameAndType        #369:#244     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n-  #441 = NameAndType        #257:#258     // getName:()Ljava/lang/String;\n-  #442 = NameAndType        #248:#251     // equals:(Ljava/lang/Object;)Z\n-  #443 = NameAndType        #583:#584     // getClass:()Ljava/lang/Class;\n-  #444 = NameAndType        #248:#249     // equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n-  #445 = NameAndType        #253:#254     // hashCode:()I\n-  #446 = NameAndType        #585:#574     // startsWith:(Ljava/lang/String;)Z\n-  #447 = NameAndType        #269:#272     // setUserId:(J)V\n-  #448 = NameAndType        #274:#272     // setGroupId:(J)V\n-  #449 = NameAndType        #269:#261     // setUserId:(I)V\n-  #450 = NameAndType        #274:#261     // setGroupId:(I)V\n-  #451 = NameAndType        #277:#230     // setUserName:(Ljava/lang/String;)V\n-  #452 = NameAndType        #279:#230     // setGroupName:(Ljava/lang/String;)V\n-  #453 = NameAndType        #219:#272     // \"<init>\":(J)V\n-  #454 = NameAndType        #288:#289     // getModTime:()Ljava/util/Date;\n-  #455 = NameAndType        #191:#183     // checkSumOK:Z\n-  #456 = Utf8               java/lang/IllegalArgumentException\n-  #457 = Utf8               Size is out of range:\n-  #458 = NameAndType        #579:#586     // append:(J)Ljava/lang/StringBuilder;\n-  #459 = NameAndType        #219:#230     // \"<init>\":(Ljava/lang/String;)V\n-  #460 = Utf8               Major device number is out of range:\n-  #461 = NameAndType        #579:#587     // append:(I)Ljava/lang/StringBuilder;\n-  #462 = Utf8               Minor device number is out of range:\n-  #463 = NameAndType        #201:#183     // isExtended:Z\n-  #464 = NameAndType        #202:#187     // realSize:J\n-  #465 = NameAndType        #305:#292     // isOldGNUSparse:()Z\n-  #466 = NameAndType        #306:#292     // isPaxGNUSparse:()Z\n-  #467 = NameAndType        #203:#183     // paxGNUSparse:Z\n-  #468 = NameAndType        #204:#183     // starSparse:Z\n-  #469 = NameAndType        #310:#292     // isPaxHeader:()Z\n-  #470 = NameAndType        #311:#292     // isGlobalPaxHeader:()Z\n-  #471 = NameAndType        #313:#292     // isFile:()Z\n-  #472 = NameAndType        #304:#292     // isGNUSparse:()Z\n-  #473 = NameAndType        #307:#292     // isStarSparse:()Z\n-  #474 = Class              #588          // java/util/Collections\n-  #475 = NameAndType        #589:#590     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-  #476 = Class              #591          // java/util/Map\n-  #477 = NameAndType        #592:#324     // clear:()V\n-  #478 = NameAndType        #342:#283     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n-  #479 = NameAndType        #593:#594     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #480 = Utf8               java/lang/String\n-  #481 = NameAndType        #595:#596     // entrySet:()Ljava/util/Set;\n-  #482 = Class              #597          // java/util/Set\n-  #483 = NameAndType        #598:#599     // iterator:()Ljava/util/Iterator;\n-  #484 = Class              #566          // java/util/Iterator\n-  #485 = NameAndType        #600:#292     // hasNext:()Z\n-  #486 = NameAndType        #601:#602     // next:()Ljava/lang/Object;\n-  #487 = Utf8               java/util/Map$Entry\n-  #488 = NameAndType        #603:#602     // getKey:()Ljava/lang/Object;\n-  #489 = NameAndType        #604:#602     // getValue:()Ljava/lang/Object;\n-  #490 = NameAndType        #342:#343     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n-  #491 = Utf8               path\n-  #492 = Utf8               linkpath\n-  #493 = Utf8               gid\n-  #494 = Utf8               gname\n-  #495 = Utf8               uid\n-  #496 = Utf8               uname\n-  #497 = Utf8               mtime\n-  #498 = Utf8               SCHILY.devminor\n-  #499 = Utf8               SCHILY.devmajor\n-  #500 = Utf8               GNU.sparse.size\n-  #501 = Utf8               GNU.sparse.realsize\n-  #502 = Utf8               SCHILY.filetype\n-  #503 = NameAndType        #259:#230     // setName:(Ljava/lang/String;)V\n-  #504 = NameAndType        #263:#230     // setLinkName:(Ljava/lang/String;)V\n-  #505 = Class              #605          // java/lang/Long\n-  #506 = NameAndType        #606:#607     // parseLong:(Ljava/lang/String;)J\n-  #507 = NameAndType        #297:#272     // setSize:(J)V\n-  #508 = Class              #608          // java/lang/Double\n-  #509 = NameAndType        #609:#610     // parseDouble:(Ljava/lang/String;)D\n-  #510 = NameAndType        #284:#272     // setModTime:(J)V\n-  #511 = Class              #611          // java/lang/Integer\n-  #512 = NameAndType        #612:#613     // parseInt:(Ljava/lang/String;)I\n-  #513 = NameAndType        #302:#261     // setDevMinor:(I)V\n-  #514 = NameAndType        #299:#261     // setDevMajor:(I)V\n-  #515 = NameAndType        #385:#330     // fillGNUSparse0xData:(Ljava/util/Map;)V\n-  #516 = NameAndType        #386:#330     // fillGNUSparse1xData:(Ljava/util/Map;)V\n-  #517 = Utf8               sparse\n-  #518 = NameAndType        #387:#330     // fillStarSparseData:(Ljava/util/Map;)V\n-  #519 = NameAndType        #614:#615     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #520 = NameAndType        #178:#179     // EMPTY_TAR_ARCHIVE_ENTRIES:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-  #521 = NameAndType        #348:#616     // list:()[Ljava/lang/String;\n-  #522 = Utf8               java/io/File\n-  #523 = NameAndType        #219:#235     // \"<init>\":(Ljava/io/File;)V\n-  #524 = Class              #617          // org/apache/commons/compress/archivers/tar/TarUtils\n-  #525 = NameAndType        #618:#246     // DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #526 = NameAndType        #353:#360     // writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #527 = Utf8               java/io/IOException\n-  #528 = NameAndType        #619:#246     // FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-  #529 = Utf8               java/lang/RuntimeException\n-  #530 = NameAndType        #219:#620     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #531 = NameAndType        #621:#622     // formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #532 = NameAndType        #366:#367     // writeEntryHeaderField:(J[BIIZ)I\n-  #533 = NameAndType        #621:#623     // formatNameBytes:(Ljava/lang/String;[BII)I\n-  #534 = NameAndType        #624:#625     // computeCheckSum:([B)J\n-  #535 = NameAndType        #626:#627     // formatCheckSumOctalBytes:(J[BII)I\n-  #536 = NameAndType        #628:#627     // formatLongOctalBytes:(J[BII)I\n-  #537 = NameAndType        #629:#627     // formatLongOctalOrBinaryBytes:(J[BII)I\n-  #538 = NameAndType        #369:#360     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n-  #539 = NameAndType        #630:#631     // parseName:([BII)Ljava/lang/String;\n-  #540 = NameAndType        #630:#632     // parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #541 = NameAndType        #633:#634     // parseOctalOrBinary:([BII)J\n-  #542 = NameAndType        #635:#636     // verifyCheckSum:([B)Z\n-  #543 = NameAndType        #383:#384     // evaluateType:([B)I\n-  #544 = NameAndType        #637:#638     // parseBoolean:([BI)Z\n-  #545 = NameAndType        #639:#634     // parseOctal:([BII)J\n-  #546 = Utf8               os.name\n-  #547 = NameAndType        #569:#328     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #548 = Class              #640          // java/util/Locale\n-  #549 = NameAndType        #641:#642     // ENGLISH:Ljava/util/Locale;\n-  #550 = NameAndType        #643:#644     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #551 = Utf8               windows\n-  #552 = NameAndType        #571:#645     // substring:(I)Ljava/lang/String;\n-  #553 = Utf8               netware\n-  #554 = NameAndType        #646:#647     // contains:(Ljava/lang/CharSequence;)Z\n-  #555 = NameAndType        #648:#649     // indexOf:(I)I\n-  #556 = NameAndType        #650:#379     // separatorChar:C\n-  #557 = NameAndType        #651:#652     // replace:(CC)Ljava/lang/String;\n-  #558 = Class              #653          // org/apache/commons/compress/utils/ArchiveUtils\n-  #559 = NameAndType        #654:#655     // matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n-  #560 = Utf8               tar\\u0000\n-  #561 = Utf8               GNU.sparse.name\n-  #562 = NameAndType        #656:#251     // containsKey:(Ljava/lang/Object;)Z\n-  #563 = Utf8               SCHILY.realsize\n-  #564 = Utf8               java/lang/Object\n-  #565 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n-  #566 = Utf8               java/util/Iterator\n-  #567 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n-  #568 = Utf8               java/lang/System\n-  #569 = Utf8               getProperty\n-  #570 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #571 = Utf8               substring\n-  #572 = Utf8               (II)Ljava/lang/String;\n-  #573 = Utf8               endsWith\n-  #574 = Utf8               (Ljava/lang/String;)Z\n-  #575 = Utf8               getTime\n-  #576 = Utf8               getPath\n-  #577 = Utf8               charAt\n-  #578 = Utf8               (I)C\n-  #579 = Utf8               append\n-  #580 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #581 = Utf8               toString\n-  #582 = Utf8               lastModified\n-  #583 = Utf8               getClass\n-  #584 = Utf8               ()Ljava/lang/Class;\n-  #585 = Utf8               startsWith\n-  #586 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #587 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #588 = Utf8               java/util/Collections\n-  #589 = Utf8               unmodifiableMap\n-  #590 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n-  #591 = Utf8               java/util/Map\n-  #592 = Utf8               clear\n-  #593 = Utf8               get\n-  #594 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #595 = Utf8               entrySet\n-  #596 = Utf8               ()Ljava/util/Set;\n-  #597 = Utf8               java/util/Set\n-  #598 = Utf8               iterator\n-  #599 = Utf8               ()Ljava/util/Iterator;\n-  #600 = Utf8               hasNext\n-  #601 = Utf8               next\n-  #602 = Utf8               ()Ljava/lang/Object;\n-  #603 = Utf8               getKey\n-  #604 = Utf8               getValue\n-  #605 = Utf8               java/lang/Long\n-  #606 = Utf8               parseLong\n-  #607 = Utf8               (Ljava/lang/String;)J\n-  #608 = Utf8               java/lang/Double\n-  #609 = Utf8               parseDouble\n-  #610 = Utf8               (Ljava/lang/String;)D\n-  #611 = Utf8               java/lang/Integer\n-  #612 = Utf8               parseInt\n-  #613 = Utf8               (Ljava/lang/String;)I\n-  #614 = Utf8               put\n-  #615 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #616 = Utf8               ()[Ljava/lang/String;\n-  #617 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n-  #618 = Utf8               DEFAULT_ENCODING\n-  #619 = Utf8               FALLBACK_ENCODING\n-  #620 = Utf8               (Ljava/lang/Throwable;)V\n-  #621 = Utf8               formatNameBytes\n-  #622 = Utf8               (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n-  #623 = Utf8               (Ljava/lang/String;[BII)I\n-  #624 = Utf8               computeCheckSum\n-  #625 = Utf8               ([B)J\n-  #626 = Utf8               formatCheckSumOctalBytes\n-  #627 = Utf8               (J[BII)I\n-  #628 = Utf8               formatLongOctalBytes\n-  #629 = Utf8               formatLongOctalOrBinaryBytes\n-  #630 = Utf8               parseName\n-  #631 = Utf8               ([BII)Ljava/lang/String;\n-  #632 = Utf8               ([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n-  #633 = Utf8               parseOctalOrBinary\n-  #634 = Utf8               ([BII)J\n-  #635 = Utf8               verifyCheckSum\n-  #636 = Utf8               ([B)Z\n-  #637 = Utf8               parseBoolean\n-  #638 = Utf8               ([BI)Z\n-  #639 = Utf8               parseOctal\n-  #640 = Utf8               java/util/Locale\n-  #641 = Utf8               ENGLISH\n-  #642 = Utf8               Ljava/util/Locale;\n-  #643 = Utf8               toLowerCase\n-  #644 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #645 = Utf8               (I)Ljava/lang/String;\n-  #646 = Utf8               contains\n-  #647 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #648 = Utf8               indexOf\n-  #649 = Utf8               (I)I\n-  #650 = Utf8               separatorChar\n-  #651 = Utf8               replace\n-  #652 = Utf8               (CC)Ljava/lang/String;\n-  #653 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n-  #654 = Utf8               matchAsciiBuffer\n-  #655 = Utf8               (Ljava/lang/String;[BII)Z\n-  #656 = Utf8               containsKey\n+  #228 = Utf8               (Ljava/lang/String;)V\n+  #229 = Utf8               (Ljava/lang/String;Z)V\n+  #230 = Utf8               isDir\n+  #231 = Utf8               (Ljava/lang/String;B)V\n+  #232 = Utf8               (Ljava/lang/String;BZ)V\n+  #233 = Utf8               (Ljava/io/File;)V\n+  #234 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+  #235 = Utf8               nameLength\n+  #236 = Utf8               fileName\n+  #237 = Utf8               normalizedName\n+  #238 = Utf8               ([B)V\n+  #239 = Utf8               headerBuf\n+  #240 = Utf8               [B\n+  #241 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+  #242 = Utf8               encoding\n+  #243 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #244 = Utf8               Exceptions\n+  #245 = Utf8               equals\n+  #246 = Utf8               (Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+  #247 = Utf8               it\n+  #248 = Utf8               (Ljava/lang/Object;)Z\n+  #249 = Utf8               Ljava/lang/Object;\n+  #250 = Utf8               hashCode\n+  #251 = Utf8               ()I\n+  #252 = Utf8               isDescendent\n+  #253 = Utf8               desc\n+  #254 = Utf8               getName\n+  #255 = Utf8               ()Ljava/lang/String;\n+  #256 = Utf8               setName\n+  #257 = Utf8               setMode\n+  #258 = Utf8               (I)V\n+  #259 = Utf8               getLinkName\n+  #260 = Utf8               setLinkName\n+  #261 = Utf8               link\n+  #262 = Utf8               getUserId\n+  #263 = Utf8               Deprecated\n+  #264 = Utf8               RuntimeVisibleAnnotations\n+  #265 = Utf8               Ljava/lang/Deprecated;\n+  #266 = Utf8               setUserId\n+  #267 = Utf8               getLongUserId\n+  #268 = Utf8               ()J\n+  #269 = Utf8               (J)V\n+  #270 = Utf8               getGroupId\n+  #271 = Utf8               setGroupId\n+  #272 = Utf8               getLongGroupId\n+  #273 = Utf8               getUserName\n+  #274 = Utf8               setUserName\n+  #275 = Utf8               getGroupName\n+  #276 = Utf8               setGroupName\n+  #277 = Utf8               setIds\n+  #278 = Utf8               (II)V\n+  #279 = Utf8               setNames\n+  #280 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #281 = Utf8               setModTime\n+  #282 = Utf8               time\n+  #283 = Utf8               (Ljava/util/Date;)V\n+  #284 = Utf8               Ljava/util/Date;\n+  #285 = Utf8               getModTime\n+  #286 = Utf8               ()Ljava/util/Date;\n+  #287 = Utf8               getLastModifiedDate\n+  #288 = Utf8               isCheckSumOK\n+  #289 = Utf8               ()Z\n+  #290 = Utf8               getFile\n+  #291 = Utf8               ()Ljava/io/File;\n+  #292 = Utf8               getMode\n+  #293 = Utf8               getSize\n+  #294 = Utf8               setSize\n+  #295 = Utf8               getDevMajor\n+  #296 = Utf8               setDevMajor\n+  #297 = Utf8               devNo\n+  #298 = Utf8               getDevMinor\n+  #299 = Utf8               setDevMinor\n+  #300 = Utf8               getRealSize\n+  #301 = Utf8               isGNUSparse\n+  #302 = Utf8               isOldGNUSparse\n+  #303 = Utf8               isPaxGNUSparse\n+  #304 = Utf8               isStarSparse\n+  #305 = Utf8               isGNULongLinkEntry\n+  #306 = Utf8               isGNULongNameEntry\n+  #307 = Utf8               isPaxHeader\n+  #308 = Utf8               isGlobalPaxHeader\n+  #309 = Utf8               isDirectory\n+  #310 = Utf8               isFile\n+  #311 = Utf8               isSymbolicLink\n+  #312 = Utf8               isLink\n+  #313 = Utf8               isCharacterDevice\n+  #314 = Utf8               isBlockDevice\n+  #315 = Utf8               isFIFO\n+  #316 = Utf8               isSparse\n+  #317 = Utf8               getExtraPaxHeaders\n+  #318 = Utf8               ()Ljava/util/Map;\n+  #319 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+  #320 = Utf8               clearExtraPaxHeaders\n+  #321 = Utf8               ()V\n+  #322 = Utf8               addPaxHeader\n+  #323 = Utf8               value\n+  #324 = Utf8               getExtraPaxHeader\n+  #325 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #326 = Utf8               updateEntryFromPaxHeaders\n+  #327 = Utf8               (Ljava/util/Map;)V\n+  #328 = Utf8               key\n+  #329 = Utf8               val\n+  #330 = Utf8               ent\n+  #331 = Utf8               Entry\n+  #332 = Utf8               InnerClasses\n+  #333 = Utf8               Ljava/util/Map$Entry;\n+  #334 = Utf8               headers\n+  #335 = Utf8               LocalVariableTypeTable\n+  #336 = Utf8               Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/String;>;\n+  #337 = Class              #561          // java/util/Iterator\n+  #338 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+  #339 = Utf8               processPaxHeader\n+  #340 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+  #341 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+  #342 = Utf8               getDirectoryEntries\n+  #343 = Utf8               ()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #344 = Utf8               i\n+  #345 = Utf8               list\n+  #346 = Utf8               [Ljava/lang/String;\n+  #347 = Utf8               result\n+  #348 = Class              #346          // \"[Ljava/lang/String;\"\n+  #349 = Class              #179          // \"[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\"\n+  #350 = Utf8               writeEntryHeader\n+  #351 = Utf8               ex2\n+  #352 = Utf8               Ljava/io/IOException;\n+  #353 = Utf8               ex\n+  #354 = Utf8               outbuf\n+  #355 = Class              #240          // \"[B\"\n+  #356 = Utf8               ([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #357 = Utf8               c\n+  #358 = Utf8               starMode\n+  #359 = Utf8               offset\n+  #360 = Utf8               csOffset\n+  #361 = Utf8               chk\n+  #362 = Utf8               writeEntryHeaderField\n+  #363 = Utf8               (J[BIIZ)I\n+  #364 = Utf8               length\n+  #365 = Utf8               parseTarHeader\n+  #366 = Utf8               header\n+  #367 = Utf8               xstarPrefix\n+  #368 = Utf8               prefix\n+  #369 = Utf8               oldStyle\n+  #370 = Utf8               type\n+  #371 = Class              #562          // org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #372 = Utf8               normalizeFileName\n+  #373 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #374 = Utf8               ch1\n+  #375 = Utf8               C\n+  #376 = Utf8               ch2\n+  #377 = Utf8               colon\n+  #378 = Utf8               osname\n+  #379 = Utf8               evaluateType\n+  #380 = Utf8               ([B)I\n+  #381 = Utf8               fillGNUSparse0xData\n+  #382 = Utf8               fillGNUSparse1xData\n+  #383 = Utf8               fillStarSparseData\n+  #384 = Utf8               <clinit>\n+  #385 = Utf8               SourceFile\n+  #386 = Utf8               TarArchiveEntry.java\n+  #387 = NameAndType        #219:#321     // \"<init>\":()V\n+  #388 = Utf8\n+  #389 = NameAndType        #180:#181     // name:Ljava/lang/String;\n+  #390 = NameAndType        #186:#187     // userId:J\n+  #391 = NameAndType        #188:#187     // groupId:J\n+  #392 = NameAndType        #189:#187     // size:J\n+  #393 = NameAndType        #194:#181     // linkName:Ljava/lang/String;\n+  #394 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n+  #395 = Utf8               ustar\\u0000\n+  #396 = NameAndType        #195:#181     // magic:Ljava/lang/String;\n+  #397 = Utf8               00\n+  #398 = NameAndType        #196:#181     // version:Ljava/lang/String;\n+  #399 = NameAndType        #198:#181     // groupName:Ljava/lang/String;\n+  #400 = NameAndType        #199:#185     // devMajor:I\n+  #401 = NameAndType        #200:#185     // devMinor:I\n+  #402 = Utf8               java/util/HashMap\n+  #403 = NameAndType        #207:#208     // extraPaxHeaders:Ljava/util/Map;\n+  #404 = Utf8               user.name\n+  #405 = Class              #563          // java/lang/System\n+  #406 = NameAndType        #564:#565     // getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #407 = NameAndType        #364:#251     // length:()I\n+  #408 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveEntry\n+  #409 = NameAndType        #566:#567     // substring:(II)Ljava/lang/String;\n+  #410 = NameAndType        #197:#181     // userName:Ljava/lang/String;\n+  #411 = NameAndType        #205:#206     // file:Ljava/io/File;\n+  #412 = NameAndType        #182:#183     // preserveAbsolutePath:Z\n+  #413 = NameAndType        #219:#229     // \"<init>\":(Ljava/lang/String;Z)V\n+  #414 = NameAndType        #219:#220     // \"<init>\":(Z)V\n+  #415 = NameAndType        #372:#373     // normalizeFileName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #416 = Utf8               /\n+  #417 = NameAndType        #568:#569     // endsWith:(Ljava/lang/String;)Z\n+  #418 = NameAndType        #184:#185     // mode:I\n+  #419 = NameAndType        #192:#193     // linkFlag:B\n+  #420 = Utf8               java/util/Date\n+  #421 = NameAndType        #570:#268     // getTime:()J\n+  #422 = NameAndType        #190:#187     // modTime:J\n+  #423 = NameAndType        #219:#232     // \"<init>\":(Ljava/lang/String;BZ)V\n+  #424 = Utf8               ustar\n+  #425 = Utf8                \\u0000\n+  #426 = NameAndType        #571:#255     // getPath:()Ljava/lang/String;\n+  #427 = NameAndType        #219:#234     // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+  #428 = NameAndType        #309:#289     // isDirectory:()Z\n+  #429 = NameAndType        #572:#573     // charAt:(I)C\n+  #430 = Utf8               java/lang/StringBuilder\n+  #431 = NameAndType        #574:#575     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #432 = NameAndType        #576:#255     // toString:()Ljava/lang/String;\n+  #433 = NameAndType        #364:#268     // length:()J\n+  #434 = NameAndType        #577:#268     // lastModified:()J\n+  #435 = NameAndType        #365:#238     // parseTarHeader:([B)V\n+  #436 = NameAndType        #365:#241     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V\n+  #437 = NameAndType        #254:#255     // getName:()Ljava/lang/String;\n+  #438 = NameAndType        #245:#248     // equals:(Ljava/lang/Object;)Z\n+  #439 = NameAndType        #578:#579     // getClass:()Ljava/lang/Class;\n+  #440 = NameAndType        #245:#246     // equals:(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)Z\n+  #441 = NameAndType        #250:#251     // hashCode:()I\n+  #442 = NameAndType        #580:#569     // startsWith:(Ljava/lang/String;)Z\n+  #443 = NameAndType        #266:#269     // setUserId:(J)V\n+  #444 = NameAndType        #271:#269     // setGroupId:(J)V\n+  #445 = NameAndType        #266:#258     // setUserId:(I)V\n+  #446 = NameAndType        #271:#258     // setGroupId:(I)V\n+  #447 = NameAndType        #274:#228     // setUserName:(Ljava/lang/String;)V\n+  #448 = NameAndType        #276:#228     // setGroupName:(Ljava/lang/String;)V\n+  #449 = NameAndType        #219:#269     // \"<init>\":(J)V\n+  #450 = NameAndType        #285:#286     // getModTime:()Ljava/util/Date;\n+  #451 = NameAndType        #191:#183     // checkSumOK:Z\n+  #452 = Utf8               java/lang/IllegalArgumentException\n+  #453 = Utf8               Size is out of range:\n+  #454 = NameAndType        #574:#581     // append:(J)Ljava/lang/StringBuilder;\n+  #455 = NameAndType        #219:#228     // \"<init>\":(Ljava/lang/String;)V\n+  #456 = Utf8               Major device number is out of range:\n+  #457 = NameAndType        #574:#582     // append:(I)Ljava/lang/StringBuilder;\n+  #458 = Utf8               Minor device number is out of range:\n+  #459 = NameAndType        #201:#183     // isExtended:Z\n+  #460 = NameAndType        #202:#187     // realSize:J\n+  #461 = NameAndType        #302:#289     // isOldGNUSparse:()Z\n+  #462 = NameAndType        #303:#289     // isPaxGNUSparse:()Z\n+  #463 = NameAndType        #203:#183     // paxGNUSparse:Z\n+  #464 = NameAndType        #204:#183     // starSparse:Z\n+  #465 = NameAndType        #307:#289     // isPaxHeader:()Z\n+  #466 = NameAndType        #308:#289     // isGlobalPaxHeader:()Z\n+  #467 = NameAndType        #310:#289     // isFile:()Z\n+  #468 = NameAndType        #301:#289     // isGNUSparse:()Z\n+  #469 = NameAndType        #304:#289     // isStarSparse:()Z\n+  #470 = Class              #583          // java/util/Collections\n+  #471 = NameAndType        #584:#585     // unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+  #472 = Class              #586          // java/util/Map\n+  #473 = NameAndType        #587:#321     // clear:()V\n+  #474 = NameAndType        #339:#280     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;)V\n+  #475 = NameAndType        #588:#589     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #476 = Utf8               java/lang/String\n+  #477 = NameAndType        #590:#591     // entrySet:()Ljava/util/Set;\n+  #478 = Class              #592          // java/util/Set\n+  #479 = NameAndType        #593:#594     // iterator:()Ljava/util/Iterator;\n+  #480 = NameAndType        #595:#289     // hasNext:()Z\n+  #481 = NameAndType        #596:#597     // next:()Ljava/lang/Object;\n+  #482 = Utf8               java/util/Map$Entry\n+  #483 = NameAndType        #598:#597     // getKey:()Ljava/lang/Object;\n+  #484 = NameAndType        #599:#597     // getValue:()Ljava/lang/Object;\n+  #485 = NameAndType        #339:#340     // processPaxHeader:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V\n+  #486 = Utf8               path\n+  #487 = Utf8               linkpath\n+  #488 = Utf8               gid\n+  #489 = Utf8               gname\n+  #490 = Utf8               uid\n+  #491 = Utf8               uname\n+  #492 = Utf8               mtime\n+  #493 = Utf8               SCHILY.devminor\n+  #494 = Utf8               SCHILY.devmajor\n+  #495 = Utf8               GNU.sparse.size\n+  #496 = Utf8               GNU.sparse.realsize\n+  #497 = Utf8               SCHILY.filetype\n+  #498 = NameAndType        #256:#228     // setName:(Ljava/lang/String;)V\n+  #499 = NameAndType        #260:#228     // setLinkName:(Ljava/lang/String;)V\n+  #500 = Class              #600          // java/lang/Long\n+  #501 = NameAndType        #601:#602     // parseLong:(Ljava/lang/String;)J\n+  #502 = NameAndType        #294:#269     // setSize:(J)V\n+  #503 = Class              #603          // java/lang/Double\n+  #504 = NameAndType        #604:#605     // parseDouble:(Ljava/lang/String;)D\n+  #505 = NameAndType        #281:#269     // setModTime:(J)V\n+  #506 = Class              #606          // java/lang/Integer\n+  #507 = NameAndType        #607:#608     // parseInt:(Ljava/lang/String;)I\n+  #508 = NameAndType        #299:#258     // setDevMinor:(I)V\n+  #509 = NameAndType        #296:#258     // setDevMajor:(I)V\n+  #510 = NameAndType        #381:#327     // fillGNUSparse0xData:(Ljava/util/Map;)V\n+  #511 = NameAndType        #382:#327     // fillGNUSparse1xData:(Ljava/util/Map;)V\n+  #512 = Utf8               sparse\n+  #513 = NameAndType        #383:#327     // fillStarSparseData:(Ljava/util/Map;)V\n+  #514 = NameAndType        #609:#610     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #515 = NameAndType        #178:#179     // EMPTY_TAR_ARCHIVE_ENTRIES:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n+  #516 = NameAndType        #345:#611     // list:()[Ljava/lang/String;\n+  #517 = Utf8               java/io/File\n+  #518 = NameAndType        #219:#233     // \"<init>\":(Ljava/io/File;)V\n+  #519 = Class              #612          // org/apache/commons/compress/archivers/tar/TarUtils\n+  #520 = NameAndType        #613:#243     // DEFAULT_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #521 = NameAndType        #350:#356     // writeEntryHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #522 = Utf8               java/io/IOException\n+  #523 = NameAndType        #614:#243     // FALLBACK_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #524 = Utf8               java/lang/RuntimeException\n+  #525 = NameAndType        #219:#615     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #526 = NameAndType        #616:#617     // formatNameBytes:(Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #527 = NameAndType        #362:#363     // writeEntryHeaderField:(J[BIIZ)I\n+  #528 = NameAndType        #616:#618     // formatNameBytes:(Ljava/lang/String;[BII)I\n+  #529 = NameAndType        #619:#620     // computeCheckSum:([B)J\n+  #530 = NameAndType        #621:#622     // formatCheckSumOctalBytes:(J[BII)I\n+  #531 = NameAndType        #623:#622     // formatLongOctalBytes:(J[BII)I\n+  #532 = NameAndType        #624:#622     // formatLongOctalOrBinaryBytes:(J[BII)I\n+  #533 = NameAndType        #365:#356     // parseTarHeader:([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V\n+  #534 = NameAndType        #625:#626     // parseName:([BII)Ljava/lang/String;\n+  #535 = NameAndType        #625:#627     // parseName:([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #536 = NameAndType        #628:#629     // parseOctalOrBinary:([BII)J\n+  #537 = NameAndType        #630:#631     // verifyCheckSum:([B)Z\n+  #538 = NameAndType        #379:#380     // evaluateType:([B)I\n+  #539 = NameAndType        #632:#633     // parseBoolean:([BI)Z\n+  #540 = NameAndType        #634:#629     // parseOctal:([BII)J\n+  #541 = Utf8               os.name\n+  #542 = NameAndType        #564:#325     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #543 = Class              #635          // java/util/Locale\n+  #544 = NameAndType        #636:#637     // ENGLISH:Ljava/util/Locale;\n+  #545 = NameAndType        #638:#639     // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #546 = Utf8               windows\n+  #547 = NameAndType        #566:#640     // substring:(I)Ljava/lang/String;\n+  #548 = Utf8               netware\n+  #549 = NameAndType        #641:#642     // contains:(Ljava/lang/CharSequence;)Z\n+  #550 = NameAndType        #643:#644     // indexOf:(I)I\n+  #551 = NameAndType        #645:#375     // separatorChar:C\n+  #552 = NameAndType        #646:#647     // replace:(CC)Ljava/lang/String;\n+  #553 = Class              #648          // org/apache/commons/compress/utils/ArchiveUtils\n+  #554 = NameAndType        #649:#650     // matchAsciiBuffer:(Ljava/lang/String;[BII)Z\n+  #555 = Utf8               tar\\u0000\n+  #556 = Utf8               GNU.sparse.name\n+  #557 = NameAndType        #651:#248     // containsKey:(Ljava/lang/Object;)Z\n+  #558 = Utf8               SCHILY.realsize\n+  #559 = Utf8               java/lang/Object\n+  #560 = Utf8               org/apache/commons/compress/archivers/ArchiveEntry\n+  #561 = Utf8               java/util/Iterator\n+  #562 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncoding\n+  #563 = Utf8               java/lang/System\n+  #564 = Utf8               getProperty\n+  #565 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #566 = Utf8               substring\n+  #567 = Utf8               (II)Ljava/lang/String;\n+  #568 = Utf8               endsWith\n+  #569 = Utf8               (Ljava/lang/String;)Z\n+  #570 = Utf8               getTime\n+  #571 = Utf8               getPath\n+  #572 = Utf8               charAt\n+  #573 = Utf8               (I)C\n+  #574 = Utf8               append\n+  #575 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #576 = Utf8               toString\n+  #577 = Utf8               lastModified\n+  #578 = Utf8               getClass\n+  #579 = Utf8               ()Ljava/lang/Class;\n+  #580 = Utf8               startsWith\n+  #581 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #582 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #583 = Utf8               java/util/Collections\n+  #584 = Utf8               unmodifiableMap\n+  #585 = Utf8               (Ljava/util/Map;)Ljava/util/Map;\n+  #586 = Utf8               java/util/Map\n+  #587 = Utf8               clear\n+  #588 = Utf8               get\n+  #589 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #590 = Utf8               entrySet\n+  #591 = Utf8               ()Ljava/util/Set;\n+  #592 = Utf8               java/util/Set\n+  #593 = Utf8               iterator\n+  #594 = Utf8               ()Ljava/util/Iterator;\n+  #595 = Utf8               hasNext\n+  #596 = Utf8               next\n+  #597 = Utf8               ()Ljava/lang/Object;\n+  #598 = Utf8               getKey\n+  #599 = Utf8               getValue\n+  #600 = Utf8               java/lang/Long\n+  #601 = Utf8               parseLong\n+  #602 = Utf8               (Ljava/lang/String;)J\n+  #603 = Utf8               java/lang/Double\n+  #604 = Utf8               parseDouble\n+  #605 = Utf8               (Ljava/lang/String;)D\n+  #606 = Utf8               java/lang/Integer\n+  #607 = Utf8               parseInt\n+  #608 = Utf8               (Ljava/lang/String;)I\n+  #609 = Utf8               put\n+  #610 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #611 = Utf8               ()[Ljava/lang/String;\n+  #612 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n+  #613 = Utf8               DEFAULT_ENCODING\n+  #614 = Utf8               FALLBACK_ENCODING\n+  #615 = Utf8               (Ljava/lang/Throwable;)V\n+  #616 = Utf8               formatNameBytes\n+  #617 = Utf8               (Ljava/lang/String;[BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)I\n+  #618 = Utf8               (Ljava/lang/String;[BII)I\n+  #619 = Utf8               computeCheckSum\n+  #620 = Utf8               ([B)J\n+  #621 = Utf8               formatCheckSumOctalBytes\n+  #622 = Utf8               (J[BII)I\n+  #623 = Utf8               formatLongOctalBytes\n+  #624 = Utf8               formatLongOctalOrBinaryBytes\n+  #625 = Utf8               parseName\n+  #626 = Utf8               ([BII)Ljava/lang/String;\n+  #627 = Utf8               ([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;\n+  #628 = Utf8               parseOctalOrBinary\n+  #629 = Utf8               ([BII)J\n+  #630 = Utf8               verifyCheckSum\n+  #631 = Utf8               ([B)Z\n+  #632 = Utf8               parseBoolean\n+  #633 = Utf8               ([BI)Z\n+  #634 = Utf8               parseOctal\n+  #635 = Utf8               java/util/Locale\n+  #636 = Utf8               ENGLISH\n+  #637 = Utf8               Ljava/util/Locale;\n+  #638 = Utf8               toLowerCase\n+  #639 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #640 = Utf8               (I)Ljava/lang/String;\n+  #641 = Utf8               contains\n+  #642 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #643 = Utf8               indexOf\n+  #644 = Utf8               (I)I\n+  #645 = Utf8               separatorChar\n+  #646 = Utf8               replace\n+  #647 = Utf8               (CC)Ljava/lang/String;\n+  #648 = Utf8               org/apache/commons/compress/utils/ArchiveUtils\n+  #649 = Utf8               matchAsciiBuffer\n+  #650 = Utf8               (Ljava/lang/String;[BII)Z\n+  #651 = Utf8               containsKey\n {\n   private static final org.apache.commons.compress.archivers.tar.TarArchiveEntry[] EMPTY_TAR_ARCHIVE_ENTRIES;\n     descriptor: [Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private java.lang.String name;\n     descriptor: Ljava/lang/String;\n@@ -1440,15 +1435,15 @@\n       LineNumberTable:\n         line 512: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #268()\n+      0: #265()\n         java.lang.Deprecated\n \n   public void setUserId(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n@@ -1510,15 +1505,15 @@\n       LineNumberTable:\n         line 553: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #268()\n+      0: #265()\n         java.lang.Deprecated\n \n   public void setGroupId(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n@@ -2384,15 +2379,15 @@\n          4: invokestatic  #91                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n          7: areturn\n       LineNumberTable:\n         line 983: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n-    Signature: #322                         // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+    Signature: #319                         // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n \n   public void clearExtraPaxHeaders();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -2494,15 +2489,15 @@\n             0      66     1 headers   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 12\n           locals = [ class java/util/Iterator ]\n         frame_type = 250 /* chop */\n           offset_delta = 52\n-    Signature: #341                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #338                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   private void processPaxHeader(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n@@ -2796,15 +2791,15 @@\n         frame_type = 10 /* same */\n         frame_type = 10 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 16 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 11\n-    Signature: #344                         // (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #341                         // (Ljava/lang/String;Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveEntry[] getDirectoryEntries();\n     descriptor: ()[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=9, locals=4, args_size=1\n          0: aload_0\n@@ -3532,15 +3527,15 @@\n        570: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        573: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        576: putfield      #3                  // Field name:Ljava/lang/String;\n        579: return\n       LineNumberTable:\n         line 1270: 0\n         line 1272: 3\n-        line 1273: 25\n+        line 1273: 19\n         line 1274: 31\n         line 1275: 34\n         line 1276: 47\n         line 1277: 50\n         line 1278: 64\n         line 1279: 67\n         line 1280: 81\n@@ -3548,25 +3543,25 @@\n         line 1282: 96\n         line 1283: 99\n         line 1284: 111\n         line 1285: 114\n         line 1286: 122\n         line 1287: 125\n         line 1288: 136\n-        line 1289: 158\n+        line 1289: 152\n         line 1290: 164\n         line 1291: 167\n         line 1292: 179\n         line 1293: 182\n         line 1294: 193\n         line 1295: 196\n-        line 1296: 218\n+        line 1296: 212\n         line 1297: 224\n         line 1298: 227\n-        line 1299: 249\n+        line 1299: 243\n         line 1300: 255\n         line 1301: 258\n         line 1302: 276\n         line 1303: 289\n         line 1304: 292\n         line 1305: 305\n         line 1307: 311\n@@ -3580,21 +3575,21 @@\n         line 1318: 363\n         line 1319: 366\n         line 1320: 376\n         line 1321: 379\n         line 1322: 391\n         line 1323: 394\n         line 1326: 397\n-        line 1327: 407\n-        line 1328: 420\n+        line 1327: 401\n+        line 1328: 413\n         line 1329: 425\n         line 1330: 433\n         line 1336: 467\n-        line 1337: 477\n-        line 1338: 490\n+        line 1337: 471\n+        line 1338: 483\n         line 1341: 495\n         line 1342: 514\n         line 1344: 540\n         line 1345: 548\n         line 1349: 579\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -3867,15 +3862,15 @@\n             0      51     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n             0      51     1 headers   Ljava/util/Map;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      51     1 headers   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 50 /* same */\n-    Signature: #341                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #338                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   void fillGNUSparse1xData(java.util.Map<java.lang.String, java.lang.String>);\n     descriptor: (Ljava/util/Map;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -3904,15 +3899,15 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      40     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n             0      40     1 headers   Ljava/util/Map;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      40     1 headers   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n-    Signature: #341                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #338                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   void fillStarSparseData(java.util.Map<java.lang.String, java.lang.String>);\n     descriptor: (Ljava/util/Map;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n@@ -3940,15 +3935,15 @@\n             0      35     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n             0      35     1 headers   Ljava/util/Map;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      35     1 headers   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 34 /* same */\n-    Signature: #341                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n+    Signature: #338                         // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n@@ -3956,8 +3951,8 @@\n          4: putstatic     #133                // Field EMPTY_TAR_ARCHIVE_ENTRIES:[Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;\n          7: return\n       LineNumberTable:\n         line 147: 0\n }\n SourceFile: \"TarArchiveEntry.java\"\n InnerClasses:\n-  public static #334= #100 of #476;       // Entry=class java/util/Map$Entry of class java/util/Map\n+  public static #331= #100 of #472;       // Entry=class java/util/Map$Entry of class java/util/Map\n"}]}
