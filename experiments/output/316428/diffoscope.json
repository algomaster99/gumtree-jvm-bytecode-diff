{"diffoscope-json-version": 1, "source1": "first/ConcurrentUtils.class", "source2": "second/ConcurrentUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,136 +1,136 @@\n-  SHA-256 checksum d1ecbadd91c1e9db920147a566ed0062490c7daeef3ec4d7ea0b5364b03f63cc\n+  SHA-256 checksum fb95d786e869f11f056ebe9bfe428f184223940e491fb7db409e9ba35c2d4998\n   Compiled from \"ConcurrentUtils.java\"\n public class org.apache.commons.lang3.concurrent.ConcurrentUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #31                         // org/apache/commons/lang3/concurrent/ConcurrentUtils\n-  super_class: #19                        // java/lang/Object\n+  this_class: #14                         // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Methodref          #19.#67       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #68.#69       // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-    #3 = Methodref          #31.#70       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-    #4 = Class              #71           // org/apache/commons/lang3/concurrent/ConcurrentException\n-    #5 = Methodref          #68.#72       // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n-    #6 = Methodref          #4.#73        // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-    #7 = Class              #74           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-    #8 = Methodref          #7.#73        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-    #9 = Methodref          #31.#75       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #10 = Methodref          #31.#76       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #11 = Class              #77           // java/lang/RuntimeException\n-   #12 = Class              #78           // java/lang/Error\n-   #13 = Class              #79           // java/lang/StringBuilder\n-   #14 = Methodref          #13.#67       // java/lang/StringBuilder.\"<init>\":()V\n-   #15 = String             #80           // Not a checked exception:\n-   #16 = Methodref          #13.#81       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #13.#82       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #18 = Methodref          #13.#83       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #19 = Class              #84           // java/lang/Object\n-   #20 = Methodref          #85.#86       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #21 = InterfaceMethodref #87.#88       // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n-   #22 = Methodref          #31.#89       // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #23 = Methodref          #4.#69        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-   #24 = Methodref          #7.#90        // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #25 = InterfaceMethodref #91.#92       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #26 = InterfaceMethodref #91.#93       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #27 = Methodref          #31.#94       // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #28 = Methodref          #31.#95       // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #29 = Class              #96           // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-   #30 = Methodref          #29.#97       // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n-   #31 = Class              #98           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #32 = Utf8               ConstantFuture\n-   #33 = Utf8               InnerClasses\n-   #34 = Utf8               <init>\n-   #35 = Utf8               ()V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               extractCause\n-   #39 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #40 = Utf8               StackMapTable\n-   #41 = Utf8               extractCauseUnchecked\n-   #42 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #43 = Utf8               handleCause\n-   #44 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n-   #45 = Utf8               Exceptions\n-   #46 = Utf8               handleCauseUnchecked\n-   #47 = Utf8               checkedException\n-   #48 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #49 = Utf8               throwCause\n-   #50 = Utf8               initialize\n-   #51 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #52 = Utf8               Signature\n-   #53 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n-   #54 = Utf8               initializeUnchecked\n-   #55 = Utf8               putIfAbsent\n-   #56 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #57 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n-   #58 = Utf8               createIfAbsent\n-   #59 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #60 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n-   #61 = Utf8               createIfAbsentUnchecked\n-   #62 = Utf8               constantFuture\n-   #63 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n-   #64 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n-   #65 = Utf8               SourceFile\n-   #66 = Utf8               ConcurrentUtils.java\n-   #67 = NameAndType        #34:#35       // \"<init>\":()V\n-   #68 = Class              #99           // java/util/concurrent/ExecutionException\n-   #69 = NameAndType        #100:#101     // getCause:()Ljava/lang/Throwable;\n-   #70 = NameAndType        #49:#44       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-   #71 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n-   #72 = NameAndType        #102:#103     // getMessage:()Ljava/lang/String;\n-   #73 = NameAndType        #34:#104      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #74 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n-   #75 = NameAndType        #38:#39       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n-   #76 = NameAndType        #41:#42       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n-   #77 = Utf8               java/lang/RuntimeException\n-   #78 = Utf8               java/lang/Error\n-   #79 = Utf8               java/lang/StringBuilder\n-   #80 = Utf8               Not a checked exception:\n-   #81 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #82 = NameAndType        #105:#107     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #83 = NameAndType        #108:#103     // toString:()Ljava/lang/String;\n-   #84 = Utf8               java/lang/Object\n-   #85 = Class              #109          // org/apache/commons/lang3/Validate\n-   #86 = NameAndType        #110:#111     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #87 = Class              #112          // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-   #88 = NameAndType        #113:#114     // get:()Ljava/lang/Object;\n-   #89 = NameAndType        #50:#51       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #90 = NameAndType        #34:#115      // \"<init>\":(Ljava/lang/Throwable;)V\n-   #91 = Class              #116          // java/util/concurrent/ConcurrentMap\n-   #92 = NameAndType        #55:#117      // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #93 = NameAndType        #113:#118     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #94 = NameAndType        #55:#56       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #95 = NameAndType        #58:#59       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n-   #96 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n-   #97 = NameAndType        #34:#119      // \"<init>\":(Ljava/lang/Object;)V\n-   #98 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n-   #99 = Utf8               java/util/concurrent/ExecutionException\n-  #100 = Utf8               getCause\n-  #101 = Utf8               ()Ljava/lang/Throwable;\n-  #102 = Utf8               getMessage\n-  #103 = Utf8               ()Ljava/lang/String;\n-  #104 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #105 = Utf8               append\n-  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #107 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #108 = Utf8               toString\n-  #109 = Utf8               org/apache/commons/lang3/Validate\n-  #110 = Utf8               isTrue\n-  #111 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #112 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #113 = Utf8               get\n-  #114 = Utf8               ()Ljava/lang/Object;\n-  #115 = Utf8               (Ljava/lang/Throwable;)V\n-  #116 = Utf8               java/util/concurrent/ConcurrentMap\n-  #117 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #118 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #119 = Utf8               (Ljava/lang/Object;)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+    #8 = Class              #10           // java/util/concurrent/ExecutionException\n+    #9 = NameAndType        #11:#12       // getCause:()Ljava/lang/Throwable;\n+   #10 = Utf8               java/util/concurrent/ExecutionException\n+   #11 = Utf8               getCause\n+   #12 = Utf8               ()Ljava/lang/Throwable;\n+   #13 = Methodref          #14.#15       // org/apache/commons/lang3/concurrent/ConcurrentUtils.throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #14 = Class              #16           // org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #15 = NameAndType        #17:#18       // throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+   #16 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils\n+   #17 = Utf8               throwCause\n+   #18 = Utf8               (Ljava/util/concurrent/ExecutionException;)V\n+   #19 = Class              #20           // org/apache/commons/lang3/concurrent/ConcurrentException\n+   #20 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #21 = Methodref          #8.#22        // java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+   #22 = NameAndType        #23:#24       // getMessage:()Ljava/lang/String;\n+   #23 = Utf8               getMessage\n+   #24 = Utf8               ()Ljava/lang/String;\n+   #25 = Methodref          #19.#26       // org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #26 = NameAndType        #5:#27        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #27 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #28 = Class              #29           // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+   #29 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+   #30 = Methodref          #28.#26       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #31 = Methodref          #14.#32       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #32 = NameAndType        #33:#34       // extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #33 = Utf8               extractCause\n+   #34 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+   #35 = Methodref          #14.#36       // org/apache/commons/lang3/concurrent/ConcurrentUtils.extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #36 = NameAndType        #37:#38       // extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #37 = Utf8               extractCauseUnchecked\n+   #38 = Utf8               (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+   #39 = Class              #40           // java/lang/RuntimeException\n+   #40 = Utf8               java/lang/RuntimeException\n+   #41 = Class              #42           // java/lang/Error\n+   #42 = Utf8               java/lang/Error\n+   #43 = Class              #44           // java/lang/StringBuilder\n+   #44 = Utf8               java/lang/StringBuilder\n+   #45 = Methodref          #43.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #46 = String             #47           // Not a checked exception:\n+   #47 = Utf8               Not a checked exception:\n+   #48 = Methodref          #43.#49       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #49 = NameAndType        #50:#51       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #50 = Utf8               append\n+   #51 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Methodref          #43.#53       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #53 = NameAndType        #50:#54       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #54 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #55 = Methodref          #43.#56       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #56 = NameAndType        #57:#24       // toString:()Ljava/lang/String;\n+   #57 = Utf8               toString\n+   #58 = Methodref          #59.#60       // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #59 = Class              #61           // org/apache/commons/lang3/Validate\n+   #60 = NameAndType        #62:#63       // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #61 = Utf8               org/apache/commons/lang3/Validate\n+   #62 = Utf8               isTrue\n+   #63 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #64 = InterfaceMethodref #65.#66       // org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+   #65 = Class              #67           // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #66 = NameAndType        #68:#69       // get:()Ljava/lang/Object;\n+   #67 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+   #68 = Utf8               get\n+   #69 = Utf8               ()Ljava/lang/Object;\n+   #70 = Methodref          #14.#71       // org/apache/commons/lang3/concurrent/ConcurrentUtils.initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #71 = NameAndType        #72:#73       // initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #72 = Utf8               initialize\n+   #73 = Utf8               (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #74 = Methodref          #19.#9        // org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+   #75 = Methodref          #28.#76       // org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #76 = NameAndType        #5:#77        // \"<init>\":(Ljava/lang/Throwable;)V\n+   #77 = Utf8               (Ljava/lang/Throwable;)V\n+   #78 = InterfaceMethodref #79.#80       // java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #79 = Class              #81           // java/util/concurrent/ConcurrentMap\n+   #80 = NameAndType        #82:#83       // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #81 = Utf8               java/util/concurrent/ConcurrentMap\n+   #82 = Utf8               putIfAbsent\n+   #83 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #84 = InterfaceMethodref #79.#85       // java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #85 = NameAndType        #68:#86       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #86 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #87 = Methodref          #14.#88       // org/apache/commons/lang3/concurrent/ConcurrentUtils.putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #88 = NameAndType        #82:#89       // putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #89 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #90 = Methodref          #14.#91       // org/apache/commons/lang3/concurrent/ConcurrentUtils.createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #91 = NameAndType        #92:#93       // createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #92 = Utf8               createIfAbsent\n+   #93 = Utf8               (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+   #94 = Class              #95           // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+   #95 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+   #96 = Methodref          #94.#97       // org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n+   #97 = NameAndType        #5:#98        // \"<init>\":(Ljava/lang/Object;)V\n+   #98 = Utf8               (Ljava/lang/Object;)V\n+   #99 = Utf8               Code\n+  #100 = Utf8               LineNumberTable\n+  #101 = Utf8               StackMapTable\n+  #102 = Utf8               handleCause\n+  #103 = Utf8               Exceptions\n+  #104 = Utf8               handleCauseUnchecked\n+  #105 = Utf8               checkedException\n+  #106 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #107 = Utf8               Signature\n+  #108 = Utf8               <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+  #109 = Utf8               initializeUnchecked\n+  #110 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+  #111 = Utf8               <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+  #112 = Utf8               createIfAbsentUnchecked\n+  #113 = Utf8               constantFuture\n+  #114 = Utf8               (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n+  #115 = Utf8               <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+  #116 = Utf8               SourceFile\n+  #117 = Utf8               ConcurrentUtils.java\n+  #118 = Utf8               InnerClasses\n+  #119 = Utf8               ConstantFuture\n {\n   private org.apache.commons.lang3.concurrent.ConcurrentUtils();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -144,27 +144,27 @@\n     descriptor: (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        11\n          4: aload_0\n-         5: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+         5: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n          8: ifnonnull     13\n         11: aconst_null\n         12: areturn\n         13: aload_0\n-        14: invokestatic  #3                  // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-        17: new           #4                  // class org/apache/commons/lang3/concurrent/ConcurrentException\n+        14: invokestatic  #13                 // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+        17: new           #19                 // class org/apache/commons/lang3/concurrent/ConcurrentException\n         20: dup\n         21: aload_0\n-        22: invokevirtual #5                  // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+        22: invokevirtual #21                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n         25: aload_0\n-        26: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        29: invokespecial #6                  // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        29: invokespecial #25                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         32: areturn\n       LineNumberTable:\n         line 62: 0\n         line 63: 11\n         line 66: 13\n         line 67: 17\n       StackMapTable: number_of_entries = 2\n@@ -175,27 +175,27 @@\n     descriptor: (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        11\n          4: aload_0\n-         5: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+         5: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n          8: ifnonnull     13\n         11: aconst_null\n         12: areturn\n         13: aload_0\n-        14: invokestatic  #3                  // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n-        17: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+        14: invokestatic  #13                 // Method throwCause:(Ljava/util/concurrent/ExecutionException;)V\n+        17: new           #28                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n         20: dup\n         21: aload_0\n-        22: invokevirtual #5                  // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n+        22: invokevirtual #21                 // Method java/util/concurrent/ExecutionException.getMessage:()Ljava/lang/String;\n         25: aload_0\n-        26: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        29: invokespecial #8                  // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        26: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        29: invokespecial #30                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         32: areturn\n       LineNumberTable:\n         line 84: 0\n         line 85: 11\n         line 88: 13\n         line 89: 17\n       StackMapTable: number_of_entries = 2\n@@ -204,15 +204,15 @@\n \n   public static void handleCause(java.util.concurrent.ExecutionException) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Ljava/util/concurrent/ExecutionException;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #9                  // Method extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n+         1: invokestatic  #31                 // Method extractCause:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;\n          4: astore_1\n          5: aload_1\n          6: ifnull        11\n          9: aload_1\n         10: athrow\n         11: return\n       LineNumberTable:\n@@ -229,15 +229,15 @@\n \n   public static void handleCauseUnchecked(java.util.concurrent.ExecutionException);\n     descriptor: (Ljava/util/concurrent/ExecutionException;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #10                 // Method extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n+         1: invokestatic  #35                 // Method extractCauseUnchecked:(Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;\n          4: astore_1\n          5: aload_1\n          6: ifnull        11\n          9: aload_1\n         10: athrow\n         11: return\n       LineNumberTable:\n@@ -254,33 +254,33 @@\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        22\n          4: aload_0\n-         5: instanceof    #11                 // class java/lang/RuntimeException\n+         5: instanceof    #39                 // class java/lang/RuntimeException\n          8: ifne          22\n         11: aload_0\n-        12: instanceof    #12                 // class java/lang/Error\n+        12: instanceof    #41                 // class java/lang/Error\n         15: ifne          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n-        23: new           #13                 // class java/lang/StringBuilder\n+        23: new           #43                 // class java/lang/StringBuilder\n         26: dup\n-        27: invokespecial #14                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        30: ldc           #15                 // String Not a checked exception:\n-        32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        27: invokespecial #45                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        30: ldc           #46                 // String Not a checked exception:\n+        32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         35: aload_0\n-        36: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        39: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        36: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        39: invokevirtual #55                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         42: iconst_0\n-        43: anewarray     #19                 // class java/lang/Object\n-        46: invokestatic  #20                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        43: anewarray     #2                  // class java/lang/Object\n+        46: invokestatic  #58                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n         49: aload_0\n         50: areturn\n       LineNumberTable:\n         line 145: 0\n         line 148: 49\n       StackMapTable: number_of_entries = 2\n         frame_type = 22 /* same */\n@@ -289,28 +289,28 @@\n \n   private static void throwCause(java.util.concurrent.ExecutionException);\n     descriptor: (Ljava/util/concurrent/ExecutionException;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-         4: instanceof    #11                 // class java/lang/RuntimeException\n+         1: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+         4: instanceof    #39                 // class java/lang/RuntimeException\n          7: ifeq          18\n         10: aload_0\n-        11: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        14: checkcast     #11                 // class java/lang/RuntimeException\n+        11: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        14: checkcast     #39                 // class java/lang/RuntimeException\n         17: athrow\n         18: aload_0\n-        19: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        22: instanceof    #12                 // class java/lang/Error\n+        19: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        22: instanceof    #41                 // class java/lang/Error\n         25: ifeq          36\n         28: aload_0\n-        29: invokevirtual #2                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n-        32: checkcast     #12                 // class java/lang/Error\n+        29: invokevirtual #7                  // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;\n+        32: checkcast     #41                 // class java/lang/Error\n         35: athrow\n         36: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 10\n         line 162: 18\n         line 163: 28\n@@ -323,68 +323,68 @@\n     descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        13\n          4: aload_0\n-         5: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+         5: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n         10: goto          14\n         13: aconst_null\n         14: areturn\n       LineNumberTable:\n         line 183: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 13 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #53                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+    Signature: #108                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <T extends java.lang.Object> T initializeUnchecked(org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #22                 // Method initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+         1: invokestatic  #70                 // Method initialize:(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n          4: areturn\n          5: astore_1\n-         6: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+         6: new           #28                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n          9: dup\n         10: aload_1\n-        11: invokevirtual #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-        14: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        11: invokevirtual #74                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+        14: invokespecial #75                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         17: athrow\n       Exception table:\n          from    to  target type\n              0     4     5   Class org/apache/commons/lang3/concurrent/ConcurrentException\n       LineNumberTable:\n         line 201: 0\n         line 202: 5\n         line 203: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #53                          // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n+    Signature: #108                         // <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, V);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: aload_2\n-         9: invokeinterface #25,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokeinterface #78,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         14: astore_3\n         15: aload_3\n         16: ifnull        23\n         19: aload_3\n         20: goto          24\n         23: aload_2\n         24: areturn\n@@ -396,38 +396,38 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 6 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 16\n           locals = [ class java/lang/Object ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Object ]\n-    Signature: #57                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n+    Signature: #110                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>) throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: ifnull        8\n          4: aload_2\n          5: ifnonnull     10\n          8: aconst_null\n          9: areturn\n         10: aload_0\n         11: aload_1\n-        12: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        12: invokeinterface #84,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n         17: astore_3\n         18: aload_3\n         19: ifnonnull     34\n         22: aload_0\n         23: aload_1\n         24: aload_2\n-        25: invokeinterface #21,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n-        30: invokestatic  #27                 // Method putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        25: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/lang3/concurrent/ConcurrentInitializer.get:()Ljava/lang/Object;\n+        30: invokestatic  #87                 // Method putIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         33: areturn\n         34: aload_3\n         35: areturn\n       LineNumberTable:\n         line 273: 0\n         line 274: 8\n         line 277: 10\n@@ -438,55 +438,55 @@\n         frame_type = 8 /* same */\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class java/lang/Object ]\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #60                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+    Signature: #111                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <K extends java.lang.Object, V extends java.lang.Object> V createIfAbsentUnchecked(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>);\n     descriptor: (Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #28                 // Method createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n+         3: invokestatic  #90                 // Method createIfAbsent:(Ljava/util/concurrent/ConcurrentMap;Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer;)Ljava/lang/Object;\n          6: areturn\n          7: astore_3\n-         8: new           #7                  // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n+         8: new           #28                 // class org/apache/commons/lang3/concurrent/ConcurrentRuntimeException\n         11: dup\n         12: aload_3\n-        13: invokevirtual #23                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n-        16: invokespecial #24                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        13: invokevirtual #74                 // Method org/apache/commons/lang3/concurrent/ConcurrentException.getCause:()Ljava/lang/Throwable;\n+        16: invokespecial #75                 // Method org/apache/commons/lang3/concurrent/ConcurrentRuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         19: athrow\n       Exception table:\n          from    to  target type\n              0     6     7   Class org/apache/commons/lang3/concurrent/ConcurrentException\n       LineNumberTable:\n         line 302: 0\n         line 303: 7\n         line 304: 8\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/lang3/concurrent/ConcurrentException ]\n-    Signature: #60                          // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n+    Signature: #111                         // <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;\n \n   public static <T extends java.lang.Object> java.util.concurrent.Future<T> constantFuture(T);\n     descriptor: (Ljava/lang/Object;)Ljava/util/concurrent/Future;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #29                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n+         0: new           #94                 // class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture\n          3: dup\n          4: aload_0\n-         5: invokespecial #30                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n+         5: invokespecial #96                 // Method org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture.\"<init>\":(Ljava/lang/Object;)V\n          8: areturn\n       LineNumberTable:\n         line 325: 0\n-    Signature: #64                          // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n+    Signature: #115                         // <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;\n }\n SourceFile: \"ConcurrentUtils.java\"\n InnerClasses:\n-  static final #32= #29 of #31;           // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils\n+  static final #119= #94 of #14;          // ConstantFuture=class org/apache/commons/lang3/concurrent/ConcurrentUtils$ConstantFuture of class org/apache/commons/lang3/concurrent/ConcurrentUtils\n"}]}
