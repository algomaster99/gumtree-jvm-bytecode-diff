{"diffoscope-json-version": 1, "source1": "first/LazyInitializer.class", "source2": "second/LazyInitializer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,80 +1,80 @@\n-  SHA-256 checksum 9ecab9070fd82354f7b34db19149e55cee2670da744c9a7db146157f79e2b6cf\n+  SHA-256 checksum 59bb2664efa5e39cb89f3adc130c33121a47187ab62060cae2450bc26400fc56\n   Compiled from \"LazyInitializer.java\"\n public abstract class org.apache.commons.lang3.concurrent.LazyInitializer<T extends java.lang.Object> extends java.lang.Object implements org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #6                          // org/apache/commons/lang3/concurrent/LazyInitializer\n-  super_class: #5                         // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/concurrent/LazyInitializer\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #5.#35         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #6.#36         // org/apache/commons/lang3/concurrent/LazyInitializer.NO_INIT:Ljava/lang/Object;\n-   #3 = Fieldref           #6.#37         // org/apache/commons/lang3/concurrent/LazyInitializer.object:Ljava/lang/Object;\n-   #4 = Methodref          #6.#38         // org/apache/commons/lang3/concurrent/LazyInitializer.initialize:()Ljava/lang/Object;\n-   #5 = Class              #39            // java/lang/Object\n-   #6 = Class              #40            // org/apache/commons/lang3/concurrent/LazyInitializer\n-   #7 = Class              #41            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-   #8 = Utf8               NO_INIT\n-   #9 = Utf8               Ljava/lang/Object;\n-  #10 = Utf8               object\n-  #11 = Utf8               Signature\n-  #12 = Utf8               TT;\n-  #13 = Utf8               <init>\n-  #14 = Utf8               ()V\n-  #15 = Utf8               Code\n-  #16 = Utf8               LineNumberTable\n-  #17 = Utf8               LocalVariableTable\n-  #18 = Utf8               this\n-  #19 = Utf8               Lorg/apache/commons/lang3/concurrent/LazyInitializer;\n-  #20 = Utf8               LocalVariableTypeTable\n-  #21 = Utf8               Lorg/apache/commons/lang3/concurrent/LazyInitializer<TT;>;\n-  #22 = Utf8               get\n-  #23 = Utf8               ()Ljava/lang/Object;\n-  #24 = Utf8               result\n-  #25 = Utf8               StackMapTable\n-  #26 = Class              #42            // java/lang/Throwable\n-  #27 = Utf8               Exceptions\n-  #28 = Class              #43            // org/apache/commons/lang3/concurrent/ConcurrentException\n-  #29 = Utf8               ()TT;\n-  #30 = Utf8               initialize\n-  #31 = Utf8               <clinit>\n-  #32 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n-  #33 = Utf8               SourceFile\n-  #34 = Utf8               LazyInitializer.java\n-  #35 = NameAndType        #13:#14        // \"<init>\":()V\n-  #36 = NameAndType        #8:#9          // NO_INIT:Ljava/lang/Object;\n-  #37 = NameAndType        #10:#9         // object:Ljava/lang/Object;\n-  #38 = NameAndType        #30:#23        // initialize:()Ljava/lang/Object;\n-  #39 = Utf8               java/lang/Object\n-  #40 = Utf8               org/apache/commons/lang3/concurrent/LazyInitializer\n-  #41 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n-  #42 = Utf8               java/lang/Throwable\n-  #43 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/lang3/concurrent/LazyInitializer.NO_INIT:Ljava/lang/Object;\n+   #8 = Class              #10            // org/apache/commons/lang3/concurrent/LazyInitializer\n+   #9 = NameAndType        #11:#12        // NO_INIT:Ljava/lang/Object;\n+  #10 = Utf8               org/apache/commons/lang3/concurrent/LazyInitializer\n+  #11 = Utf8               NO_INIT\n+  #12 = Utf8               Ljava/lang/Object;\n+  #13 = Fieldref           #8.#14         // org/apache/commons/lang3/concurrent/LazyInitializer.object:Ljava/lang/Object;\n+  #14 = NameAndType        #15:#12        // object:Ljava/lang/Object;\n+  #15 = Utf8               object\n+  #16 = Methodref          #8.#17         // org/apache/commons/lang3/concurrent/LazyInitializer.initialize:()Ljava/lang/Object;\n+  #17 = NameAndType        #18:#19        // initialize:()Ljava/lang/Object;\n+  #18 = Utf8               initialize\n+  #19 = Utf8               ()Ljava/lang/Object;\n+  #20 = Class              #21            // org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #21 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentInitializer\n+  #22 = Utf8               Signature\n+  #23 = Utf8               TT;\n+  #24 = Utf8               Code\n+  #25 = Utf8               LineNumberTable\n+  #26 = Utf8               LocalVariableTable\n+  #27 = Utf8               this\n+  #28 = Utf8               Lorg/apache/commons/lang3/concurrent/LazyInitializer;\n+  #29 = Utf8               LocalVariableTypeTable\n+  #30 = Utf8               Lorg/apache/commons/lang3/concurrent/LazyInitializer<TT;>;\n+  #31 = Utf8               get\n+  #32 = Utf8               result\n+  #33 = Utf8               StackMapTable\n+  #34 = Class              #35            // java/lang/Throwable\n+  #35 = Utf8               java/lang/Throwable\n+  #36 = Utf8               Exceptions\n+  #37 = Class              #38            // org/apache/commons/lang3/concurrent/ConcurrentException\n+  #38 = Utf8               org/apache/commons/lang3/concurrent/ConcurrentException\n+  #39 = Utf8               ()TT;\n+  #40 = Utf8               <clinit>\n+  #41 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+  #42 = Utf8               SourceFile\n+  #43 = Utf8               LazyInitializer.java\n {\n   private static final java.lang.Object NO_INIT;\n     descriptor: Ljava/lang/Object;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private volatile T object;\n     descriptor: Ljava/lang/Object;\n     flags: (0x0042) ACC_PRIVATE, ACC_VOLATILE\n-    Signature: #12                          // TT;\n+    Signature: #23                          // TT;\n \n   public org.apache.commons.lang3.concurrent.LazyInitializer();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: getstatic     #2                  // Field NO_INIT:Ljava/lang/Object;\n-         8: putfield      #3                  // Field object:Ljava/lang/Object;\n+         5: getstatic     #7                  // Field NO_INIT:Ljava/lang/Object;\n+         8: putfield      #13                 // Field object:Ljava/lang/Object;\n         11: return\n       LineNumberTable:\n         line 80: 0\n         line 84: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/lang3/concurrent/LazyInitializer;\n@@ -84,35 +84,35 @@\n \n   public T get() throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field object:Ljava/lang/Object;\n+         1: getfield      #13                 // Field object:Ljava/lang/Object;\n          4: astore_1\n          5: aload_1\n-         6: getstatic     #2                  // Field NO_INIT:Ljava/lang/Object;\n+         6: getstatic     #7                  // Field NO_INIT:Ljava/lang/Object;\n          9: if_acmpne     48\n         12: aload_0\n         13: dup\n         14: astore_2\n         15: monitorenter\n         16: aload_0\n-        17: getfield      #3                  // Field object:Ljava/lang/Object;\n+        17: getfield      #13                 // Field object:Ljava/lang/Object;\n         20: astore_1\n         21: aload_1\n-        22: getstatic     #2                  // Field NO_INIT:Ljava/lang/Object;\n+        22: getstatic     #7                  // Field NO_INIT:Ljava/lang/Object;\n         25: if_acmpne     38\n         28: aload_0\n         29: aload_0\n-        30: invokevirtual #4                  // Method initialize:()Ljava/lang/Object;\n+        30: invokevirtual #16                 // Method initialize:()Ljava/lang/Object;\n         33: dup\n         34: astore_1\n-        35: putfield      #3                  // Field object:Ljava/lang/Object;\n+        35: putfield      #13                 // Field object:Ljava/lang/Object;\n         38: aload_2\n         39: monitorexit\n         40: goto          48\n         43: astore_3\n         44: aload_2\n         45: monitorexit\n         46: aload_3\n@@ -146,31 +146,31 @@\n           locals = [ class java/lang/Object, class java/lang/Object ]\n         frame_type = 68 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 250 /* chop */\n           offset_delta = 4\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #29                          // ()TT;\n+    Signature: #39                          // ()TT;\n \n   protected abstract T initialize() throws org.apache.commons.lang3.concurrent.ConcurrentException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n     Exceptions:\n       throws org.apache.commons.lang3.concurrent.ConcurrentException\n-    Signature: #29                          // ()TT;\n+    Signature: #39                          // ()TT;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #5                  // class java/lang/Object\n+         0: new           #2                  // class java/lang/Object\n          3: dup\n          4: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n-         7: putstatic     #2                  // Field NO_INIT:Ljava/lang/Object;\n+         7: putstatic     #7                  // Field NO_INIT:Ljava/lang/Object;\n         10: return\n       LineNumberTable:\n         line 82: 0\n }\n-Signature: #32                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n+Signature: #41                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;\n SourceFile: \"LazyInitializer.java\"\n"}]}
