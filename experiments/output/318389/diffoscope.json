{"diffoscope-json-version": 1, "source1": "first/EventCountCircuitBreaker$StateStrategy.class", "source2": "second/EventCountCircuitBreaker$StateStrategy.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,77 +1,77 @@\n-  SHA-256 checksum 8a842c71bb726026929c071cd250202a52333f53e7a7d85a00ddf581ae33858c\n+  SHA-256 checksum 1e8462f047c3f3364ebf62334308964c42464bcc7283da8d4a22ff9761f14254\n   Compiled from \"EventCountCircuitBreaker.java\"\n abstract class org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy\n   minor version: 0\n   major version: 51\n   flags: (0x0420) ACC_SUPER, ACC_ABSTRACT\n-  this_class: #5                          // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy\n-  super_class: #6                         // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy\n+  super_class: #8                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 5, attributes: 2\n Constant pool:\n-   #1 = Methodref          #5.#25         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy.\"<init>\":()V\n-   #2 = Methodref          #6.#25         // java/lang/Object.\"<init>\":()V\n-   #3 = Methodref          #12.#26        // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J\n-   #4 = Methodref          #5.#27         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy.fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n-   #5 = Class              #29            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy\n-   #6 = Class              #31            // java/lang/Object\n-   #7 = Utf8               <init>\n-   #8 = Utf8               ()V\n-   #9 = Utf8               Code\n-  #10 = Utf8               LineNumberTable\n-  #11 = Utf8               isCheckIntervalFinished\n-  #12 = Class              #32            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData\n-  #13 = Utf8               CheckIntervalData\n-  #14 = Utf8               InnerClasses\n-  #15 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;J)Z\n-  #16 = Utf8               StackMapTable\n-  #17 = Utf8               isStateTransition\n-  #18 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;)Z\n-  #19 = Utf8               fetchCheckInterval\n-  #20 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n-  #21 = Class              #33            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1\n-  #22 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;)V\n-  #23 = Utf8               SourceFile\n-  #24 = Utf8               EventCountCircuitBreaker.java\n-  #25 = NameAndType        #7:#8          // \"<init>\":()V\n-  #26 = NameAndType        #34:#35        // getCheckIntervalStart:()J\n-  #27 = NameAndType        #19:#20        // fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n-  #28 = Class              #36            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n-  #29 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy\n-  #30 = Utf8               StateStrategy\n-  #31 = Utf8               java/lang/Object\n-  #32 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData\n-  #33 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1\n-  #34 = Utf8               getCheckIntervalStart\n-  #35 = Utf8               ()J\n-  #36 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n+   #1 = Methodref          #2.#3          // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #8.#3          // java/lang/Object.\"<init>\":()V\n+   #8 = Class              #9             // java/lang/Object\n+   #9 = Utf8               java/lang/Object\n+  #10 = Methodref          #11.#12        // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J\n+  #11 = Class              #13            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData\n+  #12 = NameAndType        #14:#15        // getCheckIntervalStart:()J\n+  #13 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData\n+  #14 = Utf8               getCheckIntervalStart\n+  #15 = Utf8               ()J\n+  #16 = Methodref          #2.#17         // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy.fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n+  #17 = NameAndType        #18:#19        // fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n+  #18 = Utf8               fetchCheckInterval\n+  #19 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n+  #20 = Utf8               Code\n+  #21 = Utf8               LineNumberTable\n+  #22 = Utf8               isCheckIntervalFinished\n+  #23 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;J)Z\n+  #24 = Utf8               StackMapTable\n+  #25 = Utf8               isStateTransition\n+  #26 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;)Z\n+  #27 = Utf8               (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1;)V\n+  #28 = Utf8               SourceFile\n+  #29 = Utf8               EventCountCircuitBreaker.java\n+  #30 = Utf8               InnerClasses\n+  #31 = Class              #32            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n+  #32 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n+  #33 = Utf8               StateStrategy\n+  #34 = Utf8               CheckIntervalData\n+  #35 = Class              #36            // org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1\n+  #36 = Utf8               org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1\n {\n   private org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$StateStrategy();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 482: 0\n \n   public boolean isCheckIntervalFinished(org.apache.commons.lang3.concurrent.EventCountCircuitBreaker, org.apache.commons.lang3.concurrent.EventCountCircuitBreaker$CheckIntervalData, long);\n     descriptor: (Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData;J)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: lload_3\n          1: aload_2\n-         2: invokevirtual #3                  // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J\n+         2: invokevirtual #10                 // Method org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData.getCheckIntervalStart:()J\n          5: lsub\n          6: aload_0\n          7: aload_1\n-         8: invokevirtual #4                  // Method fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n+         8: invokevirtual #16                 // Method fetchCheckInterval:(Lorg/apache/commons/lang3/concurrent/EventCountCircuitBreaker;)J\n         11: lcmp\n         12: ifle          19\n         15: iconst_1\n         16: goto          20\n         19: iconst_0\n         20: ireturn\n       LineNumberTable:\n@@ -98,10 +98,10 @@\n          1: invokespecial #1                  // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 482: 0\n }\n SourceFile: \"EventCountCircuitBreaker.java\"\n InnerClasses:\n-  private static #13= #12 of #28;         // CheckIntervalData=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n-  static #21;                             // class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1\n-  private static abstract #30= #5 of #28; // StateStrategy=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n+  private static abstract #33= #2 of #31; // StateStrategy=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$StateStrategy of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n+  private static #34= #11 of #31;         // CheckIntervalData=class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$CheckIntervalData of class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker\n+  static #35;                             // class org/apache/commons/lang3/concurrent/EventCountCircuitBreaker$1\n"}]}
