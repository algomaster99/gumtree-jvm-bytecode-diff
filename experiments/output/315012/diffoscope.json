{"diffoscope-json-version": 1, "source1": "first/DeferredFileOutputStream.class", "source2": "second/DeferredFileOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,214 +1,214 @@\n-  SHA-256 checksum 7a973d1d56d4736f30b84a786c487d984977f49cd517a24aff59db62c8b4c363\n+  SHA-256 checksum 5cc8c796ca9c57e59849ff61de93103be46278f625cba472bd690e7c64b1eeab\n   Compiled from \"DeferredFileOutputStream.java\"\n public class org.apache.commons.io.output.DeferredFileOutputStream extends org.apache.commons.io.output.ThresholdingOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #45                         // org/apache/commons/io/output/DeferredFileOutputStream\n-  super_class: #46                        // org/apache/commons/io/output/ThresholdingOutputStream\n+  this_class: #2                          // org/apache/commons/io/output/DeferredFileOutputStream\n+  super_class: #22                        // org/apache/commons/io/output/ThresholdingOutputStream\n   interfaces: 0, fields: 7, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Methodref          #45.#104      // org/apache/commons/io/output/DeferredFileOutputStream.\"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n-    #2 = Class              #105          // org/apache/commons/io/output/DeferredFileOutputStream$Builder\n-    #3 = Methodref          #2.#106       // org/apache/commons/io/output/DeferredFileOutputStream$Builder.\"<init>\":()V\n-    #4 = Class              #107          // java/lang/IllegalArgumentException\n-    #5 = String             #108          // Initial buffer size must be at least 0.\n-    #6 = Methodref          #4.#109       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Class              #110          // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-    #8 = Methodref          #46.#111      // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(I)V\n-    #9 = Methodref          #45.#112      // org/apache/commons/io/output/DeferredFileOutputStream.toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n-   #10 = Fieldref           #45.#113      // org/apache/commons/io/output/DeferredFileOutputStream.outputPath:Ljava/nio/file/Path;\n-   #11 = Fieldref           #45.#114      // org/apache/commons/io/output/DeferredFileOutputStream.prefix:Ljava/lang/String;\n-   #12 = Fieldref           #45.#115      // org/apache/commons/io/output/DeferredFileOutputStream.suffix:Ljava/lang/String;\n-   #13 = InvokeDynamic      #0:#121       // #0:get:()Ljava/util/function/Supplier;\n-   #14 = Fieldref           #45.#122      // org/apache/commons/io/output/DeferredFileOutputStream.directory:Ljava/nio/file/Path;\n-   #15 = Class              #123          // org/apache/commons/io/output/ByteArrayOutputStream\n-   #16 = Methodref          #45.#124      // org/apache/commons/io/output/DeferredFileOutputStream.checkBufferSize:(I)I\n-   #17 = Methodref          #15.#111      // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n-   #18 = Fieldref           #45.#125      // org/apache/commons/io/output/DeferredFileOutputStream.memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-   #19 = Fieldref           #45.#126      // org/apache/commons/io/output/DeferredFileOutputStream.currentOutputStream:Ljava/io/OutputStream;\n-   #20 = String             #56           // prefix\n-   #21 = Methodref          #127.#128     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #22 = Class              #129          // java/lang/String\n-   #23 = Methodref          #46.#130      // org/apache/commons/io/output/ThresholdingOutputStream.close:()V\n-   #24 = Fieldref           #45.#131      // org/apache/commons/io/output/DeferredFileOutputStream.closed:Z\n-   #25 = Methodref          #15.#132      // org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n-   #26 = InterfaceMethodref #43.#133      // java/nio/file/Path.toFile:()Ljava/io/File;\n-   #27 = Methodref          #45.#134      // org/apache/commons/io/output/DeferredFileOutputStream.isThresholdExceeded:()Z\n-   #28 = Class              #135          // java/nio/file/attribute/FileAttribute\n-   #29 = Methodref          #136.#137     // java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #30 = Methodref          #138.#139     // org/apache/commons/io/file/PathUtils.createParentDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-   #31 = Class              #140          // java/nio/file/OpenOption\n-   #32 = Methodref          #136.#141     // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-   #33 = Methodref          #15.#142      // org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n-   #34 = Class              #143          // java/io/IOException\n-   #35 = Methodref          #92.#130      // java/io/OutputStream.close:()V\n-   #36 = String             #144          // Stream not closed\n-   #37 = Methodref          #34.#109      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #38 = Methodref          #45.#145      // org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z\n-   #39 = Methodref          #15.#146      // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n-   #40 = Methodref          #136.#147     // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-   #41 = Methodref          #86.#148      // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #42 = InterfaceMethodref #149.#150     // java/util/function/Supplier.get:()Ljava/lang/Object;\n-   #43 = Class              #151          // java/nio/file/Path\n-   #44 = Methodref          #136.#152     // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n-   #45 = Class              #153          // org/apache/commons/io/output/DeferredFileOutputStream\n-   #46 = Class              #154          // org/apache/commons/io/output/ThresholdingOutputStream\n-   #47 = Class              #155          // org/apache/commons/io/output/DeferredFileOutputStream$1\n-   #48 = Utf8               InnerClasses\n-   #49 = Utf8               Builder\n-   #50 = Utf8               memoryOutputStream\n-   #51 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-   #52 = Utf8               currentOutputStream\n-   #53 = Utf8               Ljava/io/OutputStream;\n-   #54 = Utf8               outputPath\n-   #55 = Utf8               Ljava/nio/file/Path;\n-   #56 = Utf8               prefix\n-   #57 = Utf8               Ljava/lang/String;\n-   #58 = Utf8               suffix\n-   #59 = Utf8               directory\n-   #60 = Utf8               closed\n-   #61 = Utf8               Z\n-   #62 = Utf8               builder\n-   #63 = Utf8               ()Lorg/apache/commons/io/output/DeferredFileOutputStream$Builder;\n-   #64 = Utf8               Code\n-   #65 = Utf8               LineNumberTable\n-   #66 = Utf8               checkBufferSize\n-   #67 = Utf8               (I)I\n-   #68 = Utf8               StackMapTable\n-   #69 = Utf8               <init>\n-   #70 = Utf8               (ILjava/io/File;)V\n-   #71 = Utf8               Deprecated\n-   #72 = Utf8               RuntimeVisibleAnnotations\n-   #73 = Utf8               Ljava/lang/Deprecated;\n-   #74 = Utf8               (ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n-   #75 = Utf8               (IILjava/io/File;)V\n-   #76 = Utf8               (IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n-   #77 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n-   #78 = Utf8               close\n-   #79 = Utf8               ()V\n-   #80 = Utf8               Exceptions\n-   #81 = Utf8               getData\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/output/DeferredFileOutputStream.\"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n+    #2 = Class              #4            // org/apache/commons/io/output/DeferredFileOutputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n+    #4 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n+    #7 = Class              #8            // org/apache/commons/io/output/DeferredFileOutputStream$Builder\n+    #8 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream$Builder\n+    #9 = Methodref          #7.#10        // org/apache/commons/io/output/DeferredFileOutputStream$Builder.\"<init>\":()V\n+   #10 = NameAndType        #5:#11        // \"<init>\":()V\n+   #11 = Utf8               ()V\n+   #12 = Class              #13           // java/lang/IllegalArgumentException\n+   #13 = Utf8               java/lang/IllegalArgumentException\n+   #14 = String             #15           // Initial buffer size must be at least 0.\n+   #15 = Utf8               Initial buffer size must be at least 0.\n+   #16 = Methodref          #12.#17       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = NameAndType        #5:#18        // \"<init>\":(Ljava/lang/String;)V\n+   #18 = Utf8               (Ljava/lang/String;)V\n+   #19 = Class              #20           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #20 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+   #21 = Methodref          #22.#23       // org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(I)V\n+   #22 = Class              #24           // org/apache/commons/io/output/ThresholdingOutputStream\n+   #23 = NameAndType        #5:#25        // \"<init>\":(I)V\n+   #24 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n+   #25 = Utf8               (I)V\n+   #26 = Methodref          #2.#27        // org/apache/commons/io/output/DeferredFileOutputStream.toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n+   #27 = NameAndType        #28:#29       // toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n+   #28 = Utf8               toPath\n+   #29 = Utf8               (Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n+   #30 = Fieldref           #2.#31        // org/apache/commons/io/output/DeferredFileOutputStream.outputPath:Ljava/nio/file/Path;\n+   #31 = NameAndType        #32:#33       // outputPath:Ljava/nio/file/Path;\n+   #32 = Utf8               outputPath\n+   #33 = Utf8               Ljava/nio/file/Path;\n+   #34 = Fieldref           #2.#35        // org/apache/commons/io/output/DeferredFileOutputStream.prefix:Ljava/lang/String;\n+   #35 = NameAndType        #36:#37       // prefix:Ljava/lang/String;\n+   #36 = Utf8               prefix\n+   #37 = Utf8               Ljava/lang/String;\n+   #38 = Fieldref           #2.#39        // org/apache/commons/io/output/DeferredFileOutputStream.suffix:Ljava/lang/String;\n+   #39 = NameAndType        #40:#37       // suffix:Ljava/lang/String;\n+   #40 = Utf8               suffix\n+   #41 = InvokeDynamic      #0:#42        // #0:get:()Ljava/util/function/Supplier;\n+   #42 = NameAndType        #43:#44       // get:()Ljava/util/function/Supplier;\n+   #43 = Utf8               get\n+   #44 = Utf8               ()Ljava/util/function/Supplier;\n+   #45 = Fieldref           #2.#46        // org/apache/commons/io/output/DeferredFileOutputStream.directory:Ljava/nio/file/Path;\n+   #46 = NameAndType        #47:#33       // directory:Ljava/nio/file/Path;\n+   #47 = Utf8               directory\n+   #48 = Class              #49           // org/apache/commons/io/output/ByteArrayOutputStream\n+   #49 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n+   #50 = Methodref          #2.#51        // org/apache/commons/io/output/DeferredFileOutputStream.checkBufferSize:(I)I\n+   #51 = NameAndType        #52:#53       // checkBufferSize:(I)I\n+   #52 = Utf8               checkBufferSize\n+   #53 = Utf8               (I)I\n+   #54 = Methodref          #48.#23       // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n+   #55 = Fieldref           #2.#56        // org/apache/commons/io/output/DeferredFileOutputStream.memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+   #56 = NameAndType        #57:#58       // memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+   #57 = Utf8               memoryOutputStream\n+   #58 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+   #59 = Fieldref           #2.#60        // org/apache/commons/io/output/DeferredFileOutputStream.currentOutputStream:Ljava/io/OutputStream;\n+   #60 = NameAndType        #61:#62       // currentOutputStream:Ljava/io/OutputStream;\n+   #61 = Utf8               currentOutputStream\n+   #62 = Utf8               Ljava/io/OutputStream;\n+   #63 = String             #36           // prefix\n+   #64 = Methodref          #65.#66       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #65 = Class              #67           // java/util/Objects\n+   #66 = NameAndType        #68:#69       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #67 = Utf8               java/util/Objects\n+   #68 = Utf8               requireNonNull\n+   #69 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #70 = Class              #71           // java/lang/String\n+   #71 = Utf8               java/lang/String\n+   #72 = Methodref          #22.#73       // org/apache/commons/io/output/ThresholdingOutputStream.close:()V\n+   #73 = NameAndType        #74:#11       // close:()V\n+   #74 = Utf8               close\n+   #75 = Fieldref           #2.#76        // org/apache/commons/io/output/DeferredFileOutputStream.closed:Z\n+   #76 = NameAndType        #77:#78       // closed:Z\n+   #77 = Utf8               closed\n+   #78 = Utf8               Z\n+   #79 = Methodref          #48.#80       // org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n+   #80 = NameAndType        #81:#82       // toByteArray:()[B\n+   #81 = Utf8               toByteArray\n    #82 = Utf8               ()[B\n-   #83 = Class              #156          // \"[B\"\n-   #84 = Utf8               getFile\n-   #85 = Utf8               ()Ljava/io/File;\n-   #86 = Class              #157          // java/io/File\n-   #87 = Utf8               getStream\n-   #88 = Utf8               ()Ljava/io/OutputStream;\n-   #89 = Utf8               isInMemory\n-   #90 = Utf8               ()Z\n-   #91 = Utf8               thresholdReached\n-   #92 = Class              #158          // java/io/OutputStream\n-   #93 = Utf8               toInputStream\n-   #94 = Utf8               ()Ljava/io/InputStream;\n-   #95 = Utf8               toPath\n-   #96 = Utf8               (Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n-   #97 = Utf8               Signature\n-   #98 = Utf8               (Ljava/io/File;Ljava/util/function/Supplier<Ljava/nio/file/Path;>;)Ljava/nio/file/Path;\n-   #99 = Utf8               writeTo\n-  #100 = Utf8               (Ljava/io/OutputStream;)V\n-  #101 = Utf8               (ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;ILorg/apache/commons/io/output/DeferredFileOutputStream$1;)V\n-  #102 = Utf8               SourceFile\n-  #103 = Utf8               DeferredFileOutputStream.java\n-  #104 = NameAndType        #69:#74       // \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n-  #105 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream$Builder\n-  #106 = NameAndType        #69:#79       // \"<init>\":()V\n-  #107 = Utf8               java/lang/IllegalArgumentException\n-  #108 = Utf8               Initial buffer size must be at least 0.\n-  #109 = NameAndType        #69:#159      // \"<init>\":(Ljava/lang/String;)V\n-  #110 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-  #111 = NameAndType        #69:#160      // \"<init>\":(I)V\n-  #112 = NameAndType        #95:#96       // toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n-  #113 = NameAndType        #54:#55       // outputPath:Ljava/nio/file/Path;\n-  #114 = NameAndType        #56:#57       // prefix:Ljava/lang/String;\n-  #115 = NameAndType        #58:#57       // suffix:Ljava/lang/String;\n-  #116 = Utf8               BootstrapMethods\n-  #117 = MethodHandle       6:#161        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #118 = MethodType         #162          //  ()Ljava/lang/Object;\n-  #119 = MethodHandle       6:#163        // REF_invokeStatic org/apache/commons/io/file/PathUtils.getTempDirectory:()Ljava/nio/file/Path;\n-  #120 = MethodType         #164          //  ()Ljava/nio/file/Path;\n-  #121 = NameAndType        #165:#166     // get:()Ljava/util/function/Supplier;\n-  #122 = NameAndType        #59:#55       // directory:Ljava/nio/file/Path;\n-  #123 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n-  #124 = NameAndType        #66:#67       // checkBufferSize:(I)I\n-  #125 = NameAndType        #50:#51       // memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-  #126 = NameAndType        #52:#53       // currentOutputStream:Ljava/io/OutputStream;\n-  #127 = Class              #167          // java/util/Objects\n-  #128 = NameAndType        #168:#169     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #129 = Utf8               java/lang/String\n-  #130 = NameAndType        #78:#79       // close:()V\n-  #131 = NameAndType        #60:#61       // closed:Z\n-  #132 = NameAndType        #170:#82      // toByteArray:()[B\n-  #133 = NameAndType        #171:#85      // toFile:()Ljava/io/File;\n-  #134 = NameAndType        #172:#90      // isThresholdExceeded:()Z\n-  #135 = Utf8               java/nio/file/attribute/FileAttribute\n-  #136 = Class              #173          // java/nio/file/Files\n-  #137 = NameAndType        #174:#175     // createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #138 = Class              #176          // org/apache/commons/io/file/PathUtils\n-  #139 = NameAndType        #177:#178     // createParentDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #140 = Utf8               java/nio/file/OpenOption\n-  #141 = NameAndType        #179:#180     // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #142 = NameAndType        #99:#100      // writeTo:(Ljava/io/OutputStream;)V\n-  #143 = Utf8               java/io/IOException\n-  #144 = Utf8               Stream not closed\n-  #145 = NameAndType        #89:#90       // isInMemory:()Z\n-  #146 = NameAndType        #93:#94       // toInputStream:()Ljava/io/InputStream;\n-  #147 = NameAndType        #181:#182     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #148 = NameAndType        #95:#164      // toPath:()Ljava/nio/file/Path;\n-  #149 = Class              #183          // java/util/function/Supplier\n-  #150 = NameAndType        #165:#162     // get:()Ljava/lang/Object;\n-  #151 = Utf8               java/nio/file/Path\n-  #152 = NameAndType        #184:#185     // copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n-  #153 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream\n-  #154 = Utf8               org/apache/commons/io/output/ThresholdingOutputStream\n-  #155 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream$1\n-  #156 = Utf8               [B\n-  #157 = Utf8               java/io/File\n-  #158 = Utf8               java/io/OutputStream\n-  #159 = Utf8               (Ljava/lang/String;)V\n-  #160 = Utf8               (I)V\n-  #161 = Methodref          #186.#187     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #162 = Utf8               ()Ljava/lang/Object;\n-  #163 = Methodref          #138.#188     // org/apache/commons/io/file/PathUtils.getTempDirectory:()Ljava/nio/file/Path;\n-  #164 = Utf8               ()Ljava/nio/file/Path;\n-  #165 = Utf8               get\n-  #166 = Utf8               ()Ljava/util/function/Supplier;\n-  #167 = Utf8               java/util/Objects\n-  #168 = Utf8               requireNonNull\n-  #169 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #170 = Utf8               toByteArray\n-  #171 = Utf8               toFile\n-  #172 = Utf8               isThresholdExceeded\n-  #173 = Utf8               java/nio/file/Files\n-  #174 = Utf8               createTempFile\n-  #175 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #176 = Utf8               org/apache/commons/io/file/PathUtils\n-  #177 = Utf8               createParentDirectories\n-  #178 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-  #179 = Utf8               newOutputStream\n-  #180 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n-  #181 = Utf8               newInputStream\n-  #182 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n-  #183 = Utf8               java/util/function/Supplier\n-  #184 = Utf8               copy\n-  #185 = Utf8               (Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n-  #186 = Class              #189          // java/lang/invoke/LambdaMetafactory\n-  #187 = NameAndType        #190:#193     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #188 = NameAndType        #194:#164     // getTempDirectory:()Ljava/nio/file/Path;\n-  #189 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #190 = Utf8               metafactory\n-  #191 = Class              #196          // java/lang/invoke/MethodHandles$Lookup\n-  #192 = Utf8               Lookup\n-  #193 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #194 = Utf8               getTempDirectory\n-  #195 = Class              #197          // java/lang/invoke/MethodHandles\n-  #196 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #197 = Utf8               java/lang/invoke/MethodHandles\n+   #83 = InterfaceMethodref #84.#85       // java/nio/file/Path.toFile:()Ljava/io/File;\n+   #84 = Class              #86           // java/nio/file/Path\n+   #85 = NameAndType        #87:#88       // toFile:()Ljava/io/File;\n+   #86 = Utf8               java/nio/file/Path\n+   #87 = Utf8               toFile\n+   #88 = Utf8               ()Ljava/io/File;\n+   #89 = Methodref          #2.#90        // org/apache/commons/io/output/DeferredFileOutputStream.isThresholdExceeded:()Z\n+   #90 = NameAndType        #91:#92       // isThresholdExceeded:()Z\n+   #91 = Utf8               isThresholdExceeded\n+   #92 = Utf8               ()Z\n+   #93 = Class              #94           // java/nio/file/attribute/FileAttribute\n+   #94 = Utf8               java/nio/file/attribute/FileAttribute\n+   #95 = Methodref          #96.#97       // java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #96 = Class              #98           // java/nio/file/Files\n+   #97 = NameAndType        #99:#100      // createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+   #98 = Utf8               java/nio/file/Files\n+   #99 = Utf8               createTempFile\n+  #100 = Utf8               (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #101 = Methodref          #102.#103     // org/apache/commons/io/file/PathUtils.createParentDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #102 = Class              #104          // org/apache/commons/io/file/PathUtils\n+  #103 = NameAndType        #105:#106     // createParentDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #104 = Utf8               org/apache/commons/io/file/PathUtils\n+  #105 = Utf8               createParentDirectories\n+  #106 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+  #107 = Class              #108          // java/nio/file/OpenOption\n+  #108 = Utf8               java/nio/file/OpenOption\n+  #109 = Methodref          #96.#110      // java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #110 = NameAndType        #111:#112     // newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #111 = Utf8               newOutputStream\n+  #112 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+  #113 = Methodref          #48.#114      // org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n+  #114 = NameAndType        #115:#116     // writeTo:(Ljava/io/OutputStream;)V\n+  #115 = Utf8               writeTo\n+  #116 = Utf8               (Ljava/io/OutputStream;)V\n+  #117 = Class              #118          // java/io/IOException\n+  #118 = Utf8               java/io/IOException\n+  #119 = Methodref          #120.#73      // java/io/OutputStream.close:()V\n+  #120 = Class              #121          // java/io/OutputStream\n+  #121 = Utf8               java/io/OutputStream\n+  #122 = String             #123          // Stream not closed\n+  #123 = Utf8               Stream not closed\n+  #124 = Methodref          #117.#17      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #125 = Methodref          #2.#126       // org/apache/commons/io/output/DeferredFileOutputStream.isInMemory:()Z\n+  #126 = NameAndType        #127:#92      // isInMemory:()Z\n+  #127 = Utf8               isInMemory\n+  #128 = Methodref          #48.#129      // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n+  #129 = NameAndType        #130:#131     // toInputStream:()Ljava/io/InputStream;\n+  #130 = Utf8               toInputStream\n+  #131 = Utf8               ()Ljava/io/InputStream;\n+  #132 = Methodref          #96.#133      // java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #133 = NameAndType        #134:#135     // newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #134 = Utf8               newInputStream\n+  #135 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+  #136 = Methodref          #137.#138     // java/io/File.toPath:()Ljava/nio/file/Path;\n+  #137 = Class              #139          // java/io/File\n+  #138 = NameAndType        #28:#140      // toPath:()Ljava/nio/file/Path;\n+  #139 = Utf8               java/io/File\n+  #140 = Utf8               ()Ljava/nio/file/Path;\n+  #141 = InterfaceMethodref #142.#143     // java/util/function/Supplier.get:()Ljava/lang/Object;\n+  #142 = Class              #144          // java/util/function/Supplier\n+  #143 = NameAndType        #43:#145      // get:()Ljava/lang/Object;\n+  #144 = Utf8               java/util/function/Supplier\n+  #145 = Utf8               ()Ljava/lang/Object;\n+  #146 = Methodref          #96.#147      // java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n+  #147 = NameAndType        #148:#149     // copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n+  #148 = Utf8               copy\n+  #149 = Utf8               (Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n+  #150 = Utf8               builder\n+  #151 = Utf8               ()Lorg/apache/commons/io/output/DeferredFileOutputStream$Builder;\n+  #152 = Utf8               Code\n+  #153 = Utf8               LineNumberTable\n+  #154 = Utf8               StackMapTable\n+  #155 = Utf8               (ILjava/io/File;)V\n+  #156 = Utf8               Deprecated\n+  #157 = Utf8               RuntimeVisibleAnnotations\n+  #158 = Utf8               Ljava/lang/Deprecated;\n+  #159 = Utf8               (IILjava/io/File;)V\n+  #160 = Utf8               (IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n+  #161 = Utf8               (ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n+  #162 = Utf8               Exceptions\n+  #163 = Utf8               getData\n+  #164 = Class              #165          // \"[B\"\n+  #165 = Utf8               [B\n+  #166 = Utf8               getFile\n+  #167 = Utf8               getStream\n+  #168 = Utf8               ()Ljava/io/OutputStream;\n+  #169 = Utf8               thresholdReached\n+  #170 = Utf8               Signature\n+  #171 = Utf8               (Ljava/io/File;Ljava/util/function/Supplier<Ljava/nio/file/Path;>;)Ljava/nio/file/Path;\n+  #172 = Utf8               (ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;ILorg/apache/commons/io/output/DeferredFileOutputStream$1;)V\n+  #173 = Utf8               SourceFile\n+  #174 = Utf8               DeferredFileOutputStream.java\n+  #175 = Utf8               BootstrapMethods\n+  #176 = MethodHandle       6:#177        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #177 = Methodref          #178.#179     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #178 = Class              #180          // java/lang/invoke/LambdaMetafactory\n+  #179 = NameAndType        #181:#182     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #180 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #181 = Utf8               metafactory\n+  #182 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #183 = MethodType         #145          //  ()Ljava/lang/Object;\n+  #184 = MethodHandle       6:#185        // REF_invokeStatic org/apache/commons/io/file/PathUtils.getTempDirectory:()Ljava/nio/file/Path;\n+  #185 = Methodref          #102.#186     // org/apache/commons/io/file/PathUtils.getTempDirectory:()Ljava/nio/file/Path;\n+  #186 = NameAndType        #187:#140     // getTempDirectory:()Ljava/nio/file/Path;\n+  #187 = Utf8               getTempDirectory\n+  #188 = MethodType         #140          //  ()Ljava/nio/file/Path;\n+  #189 = Utf8               InnerClasses\n+  #190 = Utf8               Builder\n+  #191 = Class              #192          // org/apache/commons/io/output/DeferredFileOutputStream$1\n+  #192 = Utf8               org/apache/commons/io/output/DeferredFileOutputStream$1\n+  #193 = Class              #194          // java/lang/invoke/MethodHandles$Lookup\n+  #194 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #195 = Class              #196          // java/lang/invoke/MethodHandles\n+  #196 = Utf8               java/lang/invoke/MethodHandles\n+  #197 = Utf8               Lookup\n {\n   private org.apache.commons.io.output.ByteArrayOutputStream memoryOutputStream;\n     descriptor: Lorg/apache/commons/io/output/ByteArrayOutputStream;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.io.OutputStream currentOutputStream;\n     descriptor: Ljava/io/OutputStream;\n@@ -235,32 +235,32 @@\n     flags: (0x0002) ACC_PRIVATE\n \n   public static org.apache.commons.io.output.DeferredFileOutputStream$Builder builder();\n     descriptor: ()Lorg/apache/commons/io/output/DeferredFileOutputStream$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #2                  // class org/apache/commons/io/output/DeferredFileOutputStream$Builder\n+         0: new           #7                  // class org/apache/commons/io/output/DeferredFileOutputStream$Builder\n          3: dup\n-         4: invokespecial #3                  // Method org/apache/commons/io/output/DeferredFileOutputStream$Builder.\"<init>\":()V\n+         4: invokespecial #9                  // Method org/apache/commons/io/output/DeferredFileOutputStream$Builder.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 141: 0\n \n   private static int checkBufferSize(int);\n     descriptor: (I)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iload_0\n          1: ifge          14\n-         4: new           #4                  // class java/lang/IllegalArgumentException\n+         4: new           #12                 // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #5                  // String Initial buffer size must be at least 0.\n-        10: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #14                 // String Initial buffer size must be at least 0.\n+        10: invokespecial #16                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: iload_0\n         15: ireturn\n       LineNumberTable:\n         line 145: 0\n         line 146: 4\n         line 148: 14\n@@ -282,54 +282,54 @@\n          9: invokespecial #1                  // Method \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n         12: return\n       LineNumberTable:\n         line 196: 0\n         line 197: 12\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #73()\n+      0: #158()\n         java.lang.Deprecated\n \n   private org.apache.commons.io.output.DeferredFileOutputStream(int, java.io.File, java.lang.String, java.lang.String, java.io.File, int);\n     descriptor: (ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=7\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #8                  // Method org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(I)V\n+         2: invokespecial #21                 // Method org/apache/commons/io/output/ThresholdingOutputStream.\"<init>\":(I)V\n          5: aload_0\n          6: aload_0\n          7: aload_2\n          8: aconst_null\n-         9: invokespecial #9                  // Method toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n-        12: putfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+         9: invokespecial #26                 // Method toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n+        12: putfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n         15: aload_0\n         16: aload_3\n-        17: putfield      #11                 // Field prefix:Ljava/lang/String;\n+        17: putfield      #34                 // Field prefix:Ljava/lang/String;\n         20: aload_0\n         21: aload         4\n-        23: putfield      #12                 // Field suffix:Ljava/lang/String;\n+        23: putfield      #38                 // Field suffix:Ljava/lang/String;\n         26: aload_0\n         27: aload_0\n         28: aload         5\n-        30: invokedynamic #13,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;\n-        35: invokespecial #9                  // Method toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n-        38: putfield      #14                 // Field directory:Ljava/nio/file/Path;\n+        30: invokedynamic #41,  0             // InvokeDynamic #0:get:()Ljava/util/function/Supplier;\n+        35: invokespecial #26                 // Method toPath:(Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n+        38: putfield      #45                 // Field directory:Ljava/nio/file/Path;\n         41: aload_0\n-        42: new           #15                 // class org/apache/commons/io/output/ByteArrayOutputStream\n+        42: new           #48                 // class org/apache/commons/io/output/ByteArrayOutputStream\n         45: dup\n         46: iload         6\n-        48: invokestatic  #16                 // Method checkBufferSize:(I)I\n-        51: invokespecial #17                 // Method org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n-        54: putfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        48: invokestatic  #50                 // Method checkBufferSize:(I)I\n+        51: invokespecial #54                 // Method org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n+        54: putfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n         57: aload_0\n         58: aload_0\n-        59: getfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-        62: putfield      #19                 // Field currentOutputStream:Ljava/io/OutputStream;\n+        59: getfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        62: putfield      #59                 // Field currentOutputStream:Ljava/io/OutputStream;\n         65: return\n       LineNumberTable:\n         line 211: 0\n         line 212: 5\n         line 213: 15\n         line 214: 20\n         line 215: 26\n@@ -352,96 +352,96 @@\n          7: invokespecial #1                  // Method \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n         10: return\n       LineNumberTable:\n         line 231: 0\n         line 232: 10\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #73()\n+      0: #158()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.DeferredFileOutputStream(int, int, java.lang.String, java.lang.String, java.io.File);\n     descriptor: (IILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=6, args_size=6\n          0: aload_0\n          1: iload_1\n          2: aconst_null\n          3: aload_3\n-         4: ldc           #20                 // String prefix\n-         6: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         9: checkcast     #22                 // class java/lang/String\n+         4: ldc           #63                 // String prefix\n+         6: invokestatic  #64                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         9: checkcast     #70                 // class java/lang/String\n         12: aload         4\n         14: aload         5\n         16: iload_2\n         17: invokespecial #1                  // Method \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n         20: return\n       LineNumberTable:\n         line 247: 0\n         line 248: 20\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #73()\n+      0: #158()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.DeferredFileOutputStream(int, java.lang.String, java.lang.String, java.io.File);\n     descriptor: (ILjava/lang/String;Ljava/lang/String;Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=5, args_size=5\n          0: aload_0\n          1: iload_1\n          2: aconst_null\n          3: aload_2\n-         4: ldc           #20                 // String prefix\n-         6: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         9: checkcast     #22                 // class java/lang/String\n+         4: ldc           #63                 // String prefix\n+         6: invokestatic  #64                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         9: checkcast     #70                 // class java/lang/String\n         12: aload_3\n         13: aload         4\n         15: sipush        1024\n         18: invokespecial #1                  // Method \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n         21: return\n       LineNumberTable:\n         line 263: 0\n         line 264: 21\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #73()\n+      0: #158()\n         java.lang.Deprecated\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #23                 // Method org/apache/commons/io/output/ThresholdingOutputStream.close:()V\n+         1: invokespecial #72                 // Method org/apache/commons/io/output/ThresholdingOutputStream.close:()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #24                 // Field closed:Z\n+         6: putfield      #75                 // Field closed:Z\n          9: return\n       LineNumberTable:\n         line 273: 0\n         line 274: 4\n         line 275: 9\n     Exceptions:\n       throws java.io.IOException\n \n   public byte[] getData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+         1: getfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n          4: ifnull        17\n          7: aload_0\n-         8: getfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-        11: invokevirtual #25                 // Method org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n+         8: getfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        11: invokevirtual #79                 // Method org/apache/commons/io/output/ByteArrayOutputStream.toByteArray:()[B\n         14: goto          18\n         17: aconst_null\n         18: areturn\n       LineNumberTable:\n         line 284: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n@@ -450,19 +450,19 @@\n \n   public java.io.File getFile();\n     descriptor: ()Ljava/io/File;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+         1: getfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n-        11: invokeinterface #26,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n+         8: getfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n+        11: invokeinterface #83,  1           // InterfaceMethod java/nio/file/Path.toFile:()Ljava/io/File;\n         16: goto          20\n         19: aconst_null\n         20: areturn\n       LineNumberTable:\n         line 298: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 19 /* same */\n@@ -471,28 +471,28 @@\n \n   protected java.io.OutputStream getStream() throws java.io.IOException;\n     descriptor: ()Ljava/io/OutputStream;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field currentOutputStream:Ljava/io/OutputStream;\n+         1: getfield      #59                 // Field currentOutputStream:Ljava/io/OutputStream;\n          4: areturn\n       LineNumberTable:\n         line 310: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public boolean isInMemory();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #27                 // Method isThresholdExceeded:()Z\n+         1: invokevirtual #89                 // Method isThresholdExceeded:()Z\n          4: ifne          11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 319: 0\n@@ -503,55 +503,55 @@\n \n   protected void thresholdReached() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field prefix:Ljava/lang/String;\n+         1: getfield      #34                 // Field prefix:Ljava/lang/String;\n          4: ifnull        30\n          7: aload_0\n          8: aload_0\n-         9: getfield      #14                 // Field directory:Ljava/nio/file/Path;\n+         9: getfield      #45                 // Field directory:Ljava/nio/file/Path;\n         12: aload_0\n-        13: getfield      #11                 // Field prefix:Ljava/lang/String;\n+        13: getfield      #34                 // Field prefix:Ljava/lang/String;\n         16: aload_0\n-        17: getfield      #12                 // Field suffix:Ljava/lang/String;\n+        17: getfield      #38                 // Field suffix:Ljava/lang/String;\n         20: iconst_0\n-        21: anewarray     #28                 // class java/nio/file/attribute/FileAttribute\n-        24: invokestatic  #29                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n-        27: putfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+        21: anewarray     #93                 // class java/nio/file/attribute/FileAttribute\n+        24: invokestatic  #95                 // Method java/nio/file/Files.createTempFile:(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        27: putfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n         30: aload_0\n-        31: getfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+        31: getfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n         34: iconst_0\n-        35: anewarray     #28                 // class java/nio/file/attribute/FileAttribute\n-        38: invokestatic  #30                 // Method org/apache/commons/io/file/PathUtils.createParentDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n+        35: anewarray     #93                 // class java/nio/file/attribute/FileAttribute\n+        38: invokestatic  #101                // Method org/apache/commons/io/file/PathUtils.createParentDirectories:(Ljava/nio/file/Path;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;\n         41: pop\n         42: aload_0\n-        43: getfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+        43: getfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n         46: iconst_0\n-        47: anewarray     #31                 // class java/nio/file/OpenOption\n-        50: invokestatic  #32                 // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n+        47: anewarray     #107                // class java/nio/file/OpenOption\n+        50: invokestatic  #109                // Method java/nio/file/Files.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;\n         53: astore_1\n         54: aload_0\n-        55: getfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        55: getfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n         58: aload_1\n-        59: invokevirtual #33                 // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n+        59: invokevirtual #113                // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n         62: goto          72\n         65: astore_2\n         66: aload_1\n-        67: invokevirtual #35                 // Method java/io/OutputStream.close:()V\n+        67: invokevirtual #119                // Method java/io/OutputStream.close:()V\n         70: aload_2\n         71: athrow\n         72: aload_0\n         73: aload_1\n-        74: putfield      #19                 // Field currentOutputStream:Ljava/io/OutputStream;\n+        74: putfield      #59                 // Field currentOutputStream:Ljava/io/OutputStream;\n         77: aload_0\n         78: aconst_null\n-        79: putfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        79: putfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n         82: return\n       Exception table:\n          from    to  target type\n             54    62    65   Class java/io/IOException\n       LineNumberTable:\n         line 330: 0\n         line 331: 7\n@@ -577,33 +577,33 @@\n \n   public java.io.InputStream toInputStream() throws java.io.IOException;\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field closed:Z\n+         1: getfield      #75                 // Field closed:Z\n          4: ifne          17\n-         7: new           #34                 // class java/io/IOException\n+         7: new           #117                // class java/io/IOException\n         10: dup\n-        11: ldc           #36                 // String Stream not closed\n-        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #122                // String Stream not closed\n+        13: invokespecial #124                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokevirtual #38                 // Method isInMemory:()Z\n+        18: invokevirtual #125                // Method isInMemory:()Z\n         21: ifeq          32\n         24: aload_0\n-        25: getfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-        28: invokevirtual #39                 // Method org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n+        25: getfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        28: invokevirtual #128                // Method org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n         31: areturn\n         32: aload_0\n-        33: getfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+        33: getfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n         36: iconst_0\n-        37: anewarray     #31                 // class java/nio/file/OpenOption\n-        40: invokestatic  #40                 // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n+        37: anewarray     #107                // class java/nio/file/OpenOption\n+        40: invokestatic  #132                // Method java/nio/file/Files.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;\n         43: areturn\n       LineNumberTable:\n         line 360: 0\n         line 361: 7\n         line 364: 17\n         line 365: 24\n         line 367: 32\n@@ -617,58 +617,58 @@\n     descriptor: (Ljava/io/File;Ljava/util/function/Supplier;)Ljava/nio/file/Path;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=3, args_size=3\n          0: aload_1\n          1: ifnull        11\n          4: aload_1\n-         5: invokevirtual #41                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         5: invokevirtual #136                // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          8: goto          28\n         11: aload_2\n         12: ifnonnull     19\n         15: aconst_null\n         16: goto          28\n         19: aload_2\n-        20: invokeinterface #42,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;\n-        25: checkcast     #43                 // class java/nio/file/Path\n+        20: invokeinterface #141,  1          // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;\n+        25: checkcast     #84                 // class java/nio/file/Path\n         28: areturn\n       LineNumberTable:\n         line 371: 0\n       StackMapTable: number_of_entries = 3\n         frame_type = 11 /* same */\n         frame_type = 7 /* same */\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/Path ]\n-    Signature: #98                          // (Ljava/io/File;Ljava/util/function/Supplier<Ljava/nio/file/Path;>;)Ljava/nio/file/Path;\n+    Signature: #171                         // (Ljava/io/File;Ljava/util/function/Supplier<Ljava/nio/file/Path;>;)Ljava/nio/file/Path;\n \n   public void writeTo(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #24                 // Field closed:Z\n+         1: getfield      #75                 // Field closed:Z\n          4: ifne          17\n-         7: new           #34                 // class java/io/IOException\n+         7: new           #117                // class java/io/IOException\n         10: dup\n-        11: ldc           #36                 // String Stream not closed\n-        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #122                // String Stream not closed\n+        13: invokespecial #124                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: invokevirtual #38                 // Method isInMemory:()Z\n+        18: invokevirtual #125                // Method isInMemory:()Z\n         21: ifeq          35\n         24: aload_0\n-        25: getfield      #18                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+        25: getfield      #55                 // Field memoryOutputStream:Lorg/apache/commons/io/output/ByteArrayOutputStream;\n         28: aload_1\n-        29: invokevirtual #33                 // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n+        29: invokevirtual #113                // Method org/apache/commons/io/output/ByteArrayOutputStream.writeTo:(Ljava/io/OutputStream;)V\n         32: goto          44\n         35: aload_0\n-        36: getfield      #10                 // Field outputPath:Ljava/nio/file/Path;\n+        36: getfield      #30                 // Field outputPath:Ljava/nio/file/Path;\n         39: aload_1\n-        40: invokestatic  #44                 // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n+        40: invokestatic  #146                // Method java/nio/file/Files.copy:(Ljava/nio/file/Path;Ljava/io/OutputStream;)J\n         43: pop2\n         44: return\n       LineNumberTable:\n         line 385: 0\n         line 386: 7\n         line 389: 17\n         line 390: 24\n@@ -695,17 +695,17 @@\n          8: iload         6\n         10: invokespecial #1                  // Method \"<init>\":(ILjava/io/File;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;I)V\n         13: return\n       LineNumberTable:\n         line 39: 0\n }\n SourceFile: \"DeferredFileOutputStream.java\"\n-InnerClasses:\n-  static #47;                             // class org/apache/commons/io/output/DeferredFileOutputStream$1\n-  public static #49= #2 of #45;           // Builder=class org/apache/commons/io/output/DeferredFileOutputStream$Builder of class org/apache/commons/io/output/DeferredFileOutputStream\n-  public static final #192= #191 of #195; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #117 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #176 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #118 ()Ljava/lang/Object;\n-      #119 REF_invokeStatic org/apache/commons/io/file/PathUtils.getTempDirectory:()Ljava/nio/file/Path;\n-      #120 ()Ljava/nio/file/Path;\n+      #183 ()Ljava/lang/Object;\n+      #184 REF_invokeStatic org/apache/commons/io/file/PathUtils.getTempDirectory:()Ljava/nio/file/Path;\n+      #188 ()Ljava/nio/file/Path;\n+InnerClasses:\n+  public static #190= #7 of #2;           // Builder=class org/apache/commons/io/output/DeferredFileOutputStream$Builder of class org/apache/commons/io/output/DeferredFileOutputStream\n+  static #191;                            // class org/apache/commons/io/output/DeferredFileOutputStream$1\n+  public static final #197= #193 of #195; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
