{"diffoscope-json-version": 1, "source1": "first/ColognePhonetic.class", "source2": "second/ColognePhonetic.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,65 +1,65 @@\n-  SHA-256 checksum 6d8c70b1e390e16631c07b3590031ba73d70fb51165d38450284630743eb392c\n+  SHA-256 checksum e9bd17781a2a8bc39e895b8be154399af57cc7589708e244c1bb8e9e5921ff11\n   Compiled from \"ColognePhonetic.java\"\n public class org.apache.commons.codec.language.ColognePhonetic implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #8                          // org/apache/commons/codec/language/ColognePhonetic\n   super_class: #43                        // java/lang/Object\n   interfaces: 1, fields: 10, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Methodref          #43.#88       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #89           // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-    #3 = Methodref          #8.#90        // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n-    #4 = Methodref          #2.#91        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-    #5 = Class              #92           // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-    #6 = Methodref          #2.#93        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n-    #7 = Methodref          #5.#94        // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-    #8 = Class              #95           // org/apache/commons/codec/language/ColognePhonetic\n-    #9 = Methodref          #2.#96        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n-   #10 = Methodref          #2.#97        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n-   #11 = Methodref          #2.#98        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n-   #12 = Fieldref           #8.#99        // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n-   #13 = Methodref          #8.#100       // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n-   #14 = Methodref          #5.#101       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n-   #15 = Fieldref           #8.#102       // org/apache/commons/codec/language/ColognePhonetic.CSZ:[C\n-   #16 = Fieldref           #8.#103       // org/apache/commons/codec/language/ColognePhonetic.FPVW:[C\n-   #17 = Fieldref           #8.#104       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n-   #18 = Fieldref           #8.#105       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n-   #19 = Methodref          #5.#96        // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n-   #20 = Fieldref           #8.#106       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n-   #21 = Fieldref           #8.#107       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n-   #22 = Fieldref           #8.#108       // org/apache/commons/codec/language/ColognePhonetic.AHKOQUX:[C\n-   #23 = Fieldref           #8.#109       // org/apache/commons/codec/language/ColognePhonetic.DTX:[C\n-   #24 = Methodref          #5.#110       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n-   #25 = Class              #111          // java/lang/String\n-   #26 = Class              #112          // org/apache/commons/codec/EncoderException\n-   #27 = Class              #113          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#88       // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #114          // This method\\'s parameter was expected to be of the type\n-   #30 = Methodref          #27.#115      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #116.#117     // java/lang/Class.getName:()Ljava/lang/String;\n-   #32 = String             #118          // . But actually it was of the type\n-   #33 = Methodref          #43.#119      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #34 = String             #120          // .\n-   #35 = Methodref          #27.#110      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #36 = Methodref          #26.#121      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #37 = Methodref          #8.#122       // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #38 = Methodref          #8.#123       // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-   #39 = Methodref          #25.#124      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #40 = Fieldref           #125.#126     // java/util/Locale.GERMAN:Ljava/util/Locale;\n-   #41 = Methodref          #25.#127      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #42 = Methodref          #25.#128      // java/lang/String.toCharArray:()[C\n-   #43 = Class              #129          // java/lang/Object\n-   #44 = Class              #130          // org/apache/commons/codec/StringEncoder\n+    #1 = Methodref          #43.#84       // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #85           // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+    #3 = Methodref          #8.#86        // org/apache/commons/codec/language/ColognePhonetic.preprocess:(Ljava/lang/String;)[C\n+    #4 = Methodref          #2.#87        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+    #5 = Class              #88           // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+    #6 = Methodref          #2.#89        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.length:()I\n+    #7 = Methodref          #5.#90        // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.\"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+    #8 = Class              #91           // org/apache/commons/codec/language/ColognePhonetic\n+    #9 = Methodref          #2.#92        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.isEmpty:()Z\n+   #10 = Methodref          #2.#93        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.removeNext:()C\n+   #11 = Methodref          #2.#94        // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer.getNextChar:()C\n+   #12 = Fieldref           #8.#95        // org/apache/commons/codec/language/ColognePhonetic.AEIJOUY:[C\n+   #13 = Methodref          #8.#96        // org/apache/commons/codec/language/ColognePhonetic.arrayContains:([CC)Z\n+   #14 = Methodref          #5.#97        // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.put:(C)V\n+   #15 = Fieldref           #8.#98        // org/apache/commons/codec/language/ColognePhonetic.CSZ:[C\n+   #16 = Fieldref           #8.#99        // org/apache/commons/codec/language/ColognePhonetic.FPVW:[C\n+   #17 = Fieldref           #8.#100       // org/apache/commons/codec/language/ColognePhonetic.GKQ:[C\n+   #18 = Fieldref           #8.#101       // org/apache/commons/codec/language/ColognePhonetic.CKQ:[C\n+   #19 = Methodref          #5.#92        // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.isEmpty:()Z\n+   #20 = Fieldref           #8.#102       // org/apache/commons/codec/language/ColognePhonetic.AHKLOQRUX:[C\n+   #21 = Fieldref           #8.#103       // org/apache/commons/codec/language/ColognePhonetic.SZ:[C\n+   #22 = Fieldref           #8.#104       // org/apache/commons/codec/language/ColognePhonetic.AHKOQUX:[C\n+   #23 = Fieldref           #8.#105       // org/apache/commons/codec/language/ColognePhonetic.DTX:[C\n+   #24 = Methodref          #5.#106       // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer.toString:()Ljava/lang/String;\n+   #25 = Class              #107          // java/lang/String\n+   #26 = Class              #108          // org/apache/commons/codec/EncoderException\n+   #27 = Class              #109          // java/lang/StringBuilder\n+   #28 = Methodref          #27.#84       // java/lang/StringBuilder.\"<init>\":()V\n+   #29 = String             #110          // This method\\'s parameter was expected to be of the type\n+   #30 = Methodref          #27.#111      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #31 = Methodref          #112.#113     // java/lang/Class.getName:()Ljava/lang/String;\n+   #32 = String             #114          // . But actually it was of the type\n+   #33 = Methodref          #43.#115      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #34 = String             #116          // .\n+   #35 = Methodref          #27.#106      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #36 = Methodref          #26.#117      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = Methodref          #8.#118       // org/apache/commons/codec/language/ColognePhonetic.encode:(Ljava/lang/String;)Ljava/lang/String;\n+   #38 = Methodref          #8.#119       // org/apache/commons/codec/language/ColognePhonetic.colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+   #39 = Methodref          #25.#120      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #40 = Fieldref           #121.#122     // java/util/Locale.GERMAN:Ljava/util/Locale;\n+   #41 = Methodref          #25.#123      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #42 = Methodref          #25.#124      // java/lang/String.toCharArray:()[C\n+   #43 = Class              #125          // java/lang/Object\n+   #44 = Class              #126          // org/apache/commons/codec/StringEncoder\n    #45 = Utf8               CologneInputBuffer\n    #46 = Utf8               InnerClasses\n    #47 = Utf8               CologneOutputBuffer\n-   #48 = Class              #131          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+   #48 = Class              #127          // org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n    #49 = Utf8               CologneBuffer\n    #50 = Utf8               AEIJOUY\n    #51 = Utf8               [C\n    #52 = Utf8               CSZ\n    #53 = Utf8               FPVW\n    #54 = Utf8               GKQ\n    #55 = Utf8               CKQ\n@@ -77,101 +77,97 @@\n    #67 = Utf8               LineNumberTable\n    #68 = Utf8               arrayContains\n    #69 = Utf8               ([CC)Z\n    #70 = Utf8               StackMapTable\n    #71 = Class              #51           // \"[C\"\n    #72 = Utf8               colognePhonetic\n    #73 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #74 = Class              #95           // org/apache/commons/codec/language/ColognePhonetic\n-   #75 = Class              #111          // java/lang/String\n-   #76 = Class              #89           // org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-   #77 = Class              #92           // org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-   #78 = Utf8               encode\n-   #79 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #80 = Utf8               Exceptions\n-   #81 = Utf8               isEncodeEqual\n-   #82 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #83 = Utf8               preprocess\n-   #84 = Utf8               (Ljava/lang/String;)[C\n-   #85 = Utf8               <clinit>\n-   #86 = Utf8               SourceFile\n-   #87 = Utf8               ColognePhonetic.java\n-   #88 = NameAndType        #64:#65       // \"<init>\":()V\n-   #89 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n-   #90 = NameAndType        #83:#84       // preprocess:(Ljava/lang/String;)[C\n-   #91 = NameAndType        #64:#132      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-   #92 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n-   #93 = NameAndType        #133:#134     // length:()I\n-   #94 = NameAndType        #64:#135      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-   #95 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n-   #96 = NameAndType        #136:#137     // isEmpty:()Z\n-   #97 = NameAndType        #138:#139     // removeNext:()C\n-   #98 = NameAndType        #140:#139     // getNextChar:()C\n-   #99 = NameAndType        #50:#51       // AEIJOUY:[C\n-  #100 = NameAndType        #68:#69       // arrayContains:([CC)Z\n-  #101 = NameAndType        #141:#142     // put:(C)V\n-  #102 = NameAndType        #52:#51       // CSZ:[C\n-  #103 = NameAndType        #53:#51       // FPVW:[C\n-  #104 = NameAndType        #54:#51       // GKQ:[C\n-  #105 = NameAndType        #55:#51       // CKQ:[C\n-  #106 = NameAndType        #56:#51       // AHKLOQRUX:[C\n-  #107 = NameAndType        #57:#51       // SZ:[C\n-  #108 = NameAndType        #58:#51       // AHKOQUX:[C\n-  #109 = NameAndType        #59:#51       // DTX:[C\n-  #110 = NameAndType        #143:#144     // toString:()Ljava/lang/String;\n-  #111 = Utf8               java/lang/String\n-  #112 = Utf8               org/apache/commons/codec/EncoderException\n-  #113 = Utf8               java/lang/StringBuilder\n-  #114 = Utf8               This method\\'s parameter was expected to be of the type\n-  #115 = NameAndType        #145:#146     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #116 = Class              #147          // java/lang/Class\n-  #117 = NameAndType        #148:#144     // getName:()Ljava/lang/String;\n-  #118 = Utf8               . But actually it was of the type\n-  #119 = NameAndType        #149:#150     // getClass:()Ljava/lang/Class;\n-  #120 = Utf8               .\n-  #121 = NameAndType        #64:#151      // \"<init>\":(Ljava/lang/String;)V\n-  #122 = NameAndType        #78:#73       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #123 = NameAndType        #72:#73       // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n-  #124 = NameAndType        #152:#153     // equals:(Ljava/lang/Object;)Z\n-  #125 = Class              #154          // java/util/Locale\n-  #126 = NameAndType        #155:#156     // GERMAN:Ljava/util/Locale;\n-  #127 = NameAndType        #157:#158     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #128 = NameAndType        #159:#160     // toCharArray:()[C\n-  #129 = Utf8               java/lang/Object\n-  #130 = Utf8               org/apache/commons/codec/StringEncoder\n-  #131 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n-  #132 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n-  #133 = Utf8               length\n-  #134 = Utf8               ()I\n-  #135 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n-  #136 = Utf8               isEmpty\n-  #137 = Utf8               ()Z\n-  #138 = Utf8               removeNext\n-  #139 = Utf8               ()C\n-  #140 = Utf8               getNextChar\n-  #141 = Utf8               put\n-  #142 = Utf8               (C)V\n-  #143 = Utf8               toString\n-  #144 = Utf8               ()Ljava/lang/String;\n-  #145 = Utf8               append\n-  #146 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #147 = Utf8               java/lang/Class\n-  #148 = Utf8               getName\n-  #149 = Utf8               getClass\n-  #150 = Utf8               ()Ljava/lang/Class;\n-  #151 = Utf8               (Ljava/lang/String;)V\n-  #152 = Utf8               equals\n-  #153 = Utf8               (Ljava/lang/Object;)Z\n-  #154 = Utf8               java/util/Locale\n-  #155 = Utf8               GERMAN\n-  #156 = Utf8               Ljava/util/Locale;\n-  #157 = Utf8               toUpperCase\n-  #158 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #159 = Utf8               toCharArray\n-  #160 = Utf8               ()[C\n+   #74 = Utf8               encode\n+   #75 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #76 = Utf8               Exceptions\n+   #77 = Utf8               isEncodeEqual\n+   #78 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #79 = Utf8               preprocess\n+   #80 = Utf8               (Ljava/lang/String;)[C\n+   #81 = Utf8               <clinit>\n+   #82 = Utf8               SourceFile\n+   #83 = Utf8               ColognePhonetic.java\n+   #84 = NameAndType        #64:#65       // \"<init>\":()V\n+   #85 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer\n+   #86 = NameAndType        #79:#80       // preprocess:(Ljava/lang/String;)[C\n+   #87 = NameAndType        #64:#128      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+   #88 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer\n+   #89 = NameAndType        #129:#130     // length:()I\n+   #90 = NameAndType        #64:#131      // \"<init>\":(Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+   #91 = Utf8               org/apache/commons/codec/language/ColognePhonetic\n+   #92 = NameAndType        #132:#133     // isEmpty:()Z\n+   #93 = NameAndType        #134:#135     // removeNext:()C\n+   #94 = NameAndType        #136:#135     // getNextChar:()C\n+   #95 = NameAndType        #50:#51       // AEIJOUY:[C\n+   #96 = NameAndType        #68:#69       // arrayContains:([CC)Z\n+   #97 = NameAndType        #137:#138     // put:(C)V\n+   #98 = NameAndType        #52:#51       // CSZ:[C\n+   #99 = NameAndType        #53:#51       // FPVW:[C\n+  #100 = NameAndType        #54:#51       // GKQ:[C\n+  #101 = NameAndType        #55:#51       // CKQ:[C\n+  #102 = NameAndType        #56:#51       // AHKLOQRUX:[C\n+  #103 = NameAndType        #57:#51       // SZ:[C\n+  #104 = NameAndType        #58:#51       // AHKOQUX:[C\n+  #105 = NameAndType        #59:#51       // DTX:[C\n+  #106 = NameAndType        #139:#140     // toString:()Ljava/lang/String;\n+  #107 = Utf8               java/lang/String\n+  #108 = Utf8               org/apache/commons/codec/EncoderException\n+  #109 = Utf8               java/lang/StringBuilder\n+  #110 = Utf8               This method\\'s parameter was expected to be of the type\n+  #111 = NameAndType        #141:#142     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = Class              #143          // java/lang/Class\n+  #113 = NameAndType        #144:#140     // getName:()Ljava/lang/String;\n+  #114 = Utf8               . But actually it was of the type\n+  #115 = NameAndType        #145:#146     // getClass:()Ljava/lang/Class;\n+  #116 = Utf8               .\n+  #117 = NameAndType        #64:#147      // \"<init>\":(Ljava/lang/String;)V\n+  #118 = NameAndType        #74:#73       // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #119 = NameAndType        #72:#73       // colognePhonetic:(Ljava/lang/String;)Ljava/lang/String;\n+  #120 = NameAndType        #148:#149     // equals:(Ljava/lang/Object;)Z\n+  #121 = Class              #150          // java/util/Locale\n+  #122 = NameAndType        #151:#152     // GERMAN:Ljava/util/Locale;\n+  #123 = NameAndType        #153:#154     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #124 = NameAndType        #155:#156     // toCharArray:()[C\n+  #125 = Utf8               java/lang/Object\n+  #126 = Utf8               org/apache/commons/codec/StringEncoder\n+  #127 = Utf8               org/apache/commons/codec/language/ColognePhonetic$CologneBuffer\n+  #128 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;[C)V\n+  #129 = Utf8               length\n+  #130 = Utf8               ()I\n+  #131 = Utf8               (Lorg/apache/commons/codec/language/ColognePhonetic;I)V\n+  #132 = Utf8               isEmpty\n+  #133 = Utf8               ()Z\n+  #134 = Utf8               removeNext\n+  #135 = Utf8               ()C\n+  #136 = Utf8               getNextChar\n+  #137 = Utf8               put\n+  #138 = Utf8               (C)V\n+  #139 = Utf8               toString\n+  #140 = Utf8               ()Ljava/lang/String;\n+  #141 = Utf8               append\n+  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #143 = Utf8               java/lang/Class\n+  #144 = Utf8               getName\n+  #145 = Utf8               getClass\n+  #146 = Utf8               ()Ljava/lang/Class;\n+  #147 = Utf8               (Ljava/lang/String;)V\n+  #148 = Utf8               equals\n+  #149 = Utf8               (Ljava/lang/Object;)Z\n+  #150 = Utf8               java/util/Locale\n+  #151 = Utf8               GERMAN\n+  #152 = Utf8               Ljava/util/Locale;\n+  #153 = Utf8               toUpperCase\n+  #154 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #155 = Utf8               toCharArray\n+  #156 = Utf8               ()[C\n {\n   private static final char[] AEIJOUY;\n     descriptor: [C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final char[] CSZ;\n     descriptor: [C\n"}]}
