{"diffoscope-json-version": 1, "source1": "first/SocketOutputStream.class", "source2": "second/SocketOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,63 +1,63 @@\n-  SHA-256 checksum c33cd1a713a747879bf9a9670d54840a82a2c9408ea6cab432d4746ff493a275\n+  SHA-256 checksum f99b7fe7730048507482e79af188a352e0723b6ad03e194b87a955d548c7f3fb\n   Compiled from \"SocketOutputStream.java\"\n public class org.apache.commons.net.io.SocketOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/net/io/SocketOutputStream\n-  super_class: #8                         // java/io/FilterOutputStream\n+  this_class: #8                          // org/apache/commons/net/io/SocketOutputStream\n+  super_class: #2                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#33         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Fieldref           #7.#34         // org/apache/commons/net/io/SocketOutputStream.socket:Ljava/net/Socket;\n-   #3 = Fieldref           #7.#35         // org/apache/commons/net/io/SocketOutputStream.out:Ljava/io/OutputStream;\n-   #4 = Methodref          #36.#37        // java/io/OutputStream.write:([BII)V\n-   #5 = Methodref          #8.#38         // java/io/FilterOutputStream.close:()V\n-   #6 = Methodref          #39.#38        // java/net/Socket.close:()V\n-   #7 = Class              #40            // org/apache/commons/net/io/SocketOutputStream\n-   #8 = Class              #41            // java/io/FilterOutputStream\n-   #9 = Utf8               socket\n-  #10 = Utf8               Ljava/net/Socket;\n-  #11 = Utf8               <init>\n-  #12 = Utf8               (Ljava/net/Socket;Ljava/io/OutputStream;)V\n-  #13 = Utf8               Code\n-  #14 = Utf8               LineNumberTable\n-  #15 = Utf8               LocalVariableTable\n-  #16 = Utf8               this\n-  #17 = Utf8               Lorg/apache/commons/net/io/SocketOutputStream;\n-  #18 = Utf8               stream\n-  #19 = Utf8               Ljava/io/OutputStream;\n-  #20 = Utf8               write\n-  #21 = Utf8               ([BII)V\n-  #22 = Utf8               buffer\n-  #23 = Utf8               [B\n-  #24 = Utf8               offset\n-  #25 = Utf8               I\n-  #26 = Utf8               length\n-  #27 = Utf8               Exceptions\n-  #28 = Class              #42            // java/io/IOException\n-  #29 = Utf8               close\n-  #30 = Utf8               ()V\n-  #31 = Utf8               SourceFile\n-  #32 = Utf8               SocketOutputStream.java\n-  #33 = NameAndType        #11:#43        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #34 = NameAndType        #9:#10         // socket:Ljava/net/Socket;\n-  #35 = NameAndType        #44:#19        // out:Ljava/io/OutputStream;\n-  #36 = Class              #45            // java/io/OutputStream\n-  #37 = NameAndType        #20:#21        // write:([BII)V\n-  #38 = NameAndType        #29:#30        // close:()V\n-  #39 = Class              #46            // java/net/Socket\n-  #40 = Utf8               org/apache/commons/net/io/SocketOutputStream\n-  #41 = Utf8               java/io/FilterOutputStream\n-  #42 = Utf8               java/io/IOException\n-  #43 = Utf8               (Ljava/io/OutputStream;)V\n-  #44 = Utf8               out\n-  #45 = Utf8               java/io/OutputStream\n-  #46 = Utf8               java/net/Socket\n+   #1 = Methodref          #2.#3          // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #2 = Class              #4             // java/io/FilterOutputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/OutputStream;)V\n+   #4 = Utf8               java/io/FilterOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/net/io/SocketOutputStream.socket:Ljava/net/Socket;\n+   #8 = Class              #10            // org/apache/commons/net/io/SocketOutputStream\n+   #9 = NameAndType        #11:#12        // socket:Ljava/net/Socket;\n+  #10 = Utf8               org/apache/commons/net/io/SocketOutputStream\n+  #11 = Utf8               socket\n+  #12 = Utf8               Ljava/net/Socket;\n+  #13 = Fieldref           #8.#14         // org/apache/commons/net/io/SocketOutputStream.out:Ljava/io/OutputStream;\n+  #14 = NameAndType        #15:#16        // out:Ljava/io/OutputStream;\n+  #15 = Utf8               out\n+  #16 = Utf8               Ljava/io/OutputStream;\n+  #17 = Methodref          #18.#19        // java/io/OutputStream.write:([BII)V\n+  #18 = Class              #20            // java/io/OutputStream\n+  #19 = NameAndType        #21:#22        // write:([BII)V\n+  #20 = Utf8               java/io/OutputStream\n+  #21 = Utf8               write\n+  #22 = Utf8               ([BII)V\n+  #23 = Methodref          #2.#24         // java/io/FilterOutputStream.close:()V\n+  #24 = NameAndType        #25:#26        // close:()V\n+  #25 = Utf8               close\n+  #26 = Utf8               ()V\n+  #27 = Methodref          #28.#24        // java/net/Socket.close:()V\n+  #28 = Class              #29            // java/net/Socket\n+  #29 = Utf8               java/net/Socket\n+  #30 = Utf8               (Ljava/net/Socket;Ljava/io/OutputStream;)V\n+  #31 = Utf8               Code\n+  #32 = Utf8               LineNumberTable\n+  #33 = Utf8               LocalVariableTable\n+  #34 = Utf8               this\n+  #35 = Utf8               Lorg/apache/commons/net/io/SocketOutputStream;\n+  #36 = Utf8               stream\n+  #37 = Utf8               buffer\n+  #38 = Utf8               [B\n+  #39 = Utf8               offset\n+  #40 = Utf8               I\n+  #41 = Utf8               length\n+  #42 = Utf8               Exceptions\n+  #43 = Class              #44            // java/io/IOException\n+  #44 = Utf8               java/io/IOException\n+  #45 = Utf8               SourceFile\n+  #46 = Utf8               SocketOutputStream.java\n {\n   private final java.net.Socket socket;\n     descriptor: Ljava/net/Socket;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.net.io.SocketOutputStream(java.net.Socket, java.io.OutputStream);\n     descriptor: (Ljava/net/Socket;Ljava/io/OutputStream;)V\n@@ -65,15 +65,15 @@\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n          2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: aload_1\n-         7: putfield      #2                  // Field socket:Ljava/net/Socket;\n+         7: putfield      #7                  // Field socket:Ljava/net/Socket;\n         10: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 5\n         line 53: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -83,19 +83,19 @@\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         1: getfield      #13                 // Field out:Ljava/io/OutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #4                  // Method java/io/OutputStream.write:([BII)V\n+         7: invokevirtual #17                 // Method java/io/OutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/net/io/SocketOutputStream;\n@@ -107,18 +107,18 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #5                  // Method java/io/FilterOutputStream.close:()V\n+         1: invokespecial #23                 // Method java/io/FilterOutputStream.close:()V\n          4: aload_0\n-         5: getfield      #2                  // Field socket:Ljava/net/Socket;\n-         8: invokevirtual #6                  // Method java/net/Socket.close:()V\n+         5: getfield      #7                  // Field socket:Ljava/net/Socket;\n+         8: invokevirtual #27                 // Method java/net/Socket.close:()V\n         11: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 4\n         line 87: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
