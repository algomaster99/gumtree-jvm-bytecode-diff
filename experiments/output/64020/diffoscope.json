{"diffoscope-json-version": 1, "source1": "first/Resources.class", "source2": "second/Resources.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,119 +1,118 @@\n-  SHA-256 checksum 1ecb62d2ae6b86105154e05a5f7092f6d0ae1136134e2028d4a07a6345c45a67\n+  SHA-256 checksum 2881ad2f13253f2a44f017b3eab0cb41ab66083b0e1055d376be2237cddcc9cc\n   Compiled from \"Resources.java\"\n public class org.apache.commons.codec.Resources\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/codec/Resources\n-  super_class: #12                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/codec/Resources\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 2, attributes: 1\n Constant pool:\n-   #1 = Methodref          #12.#30        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #31            // org/apache/commons/codec/Resources\n-   #3 = Methodref          #32.#33        // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n-   #4 = Methodref          #34.#35        // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #5 = Class              #36            // java/lang/IllegalArgumentException\n-   #6 = Class              #37            // java/lang/StringBuilder\n-   #7 = Methodref          #6.#30         // java/lang/StringBuilder.\"<init>\":()V\n-   #8 = String             #38            // Unable to resolve required resource:\n-   #9 = Methodref          #6.#39         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #10 = Methodref          #6.#40         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #11 = Methodref          #5.#41         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = Class              #42            // java/lang/Object\n-  #13 = Utf8               <init>\n-  #14 = Utf8               ()V\n-  #15 = Utf8               Code\n-  #16 = Utf8               LineNumberTable\n-  #17 = Utf8               LocalVariableTable\n-  #18 = Utf8               this\n-  #19 = Utf8               Lorg/apache/commons/codec/Resources;\n-  #20 = Utf8               getInputStream\n-  #21 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #22 = Utf8               name\n-  #23 = Utf8               Ljava/lang/String;\n-  #24 = Utf8               inputStream\n-  #25 = Utf8               Ljava/io/InputStream;\n-  #26 = Utf8               StackMapTable\n-  #27 = Class              #43            // java/io/InputStream\n-  #28 = Utf8               SourceFile\n-  #29 = Utf8               Resources.java\n-  #30 = NameAndType        #13:#14        // \"<init>\":()V\n-  #31 = Utf8               org/apache/commons/codec/Resources\n-  #32 = Class              #44            // java/lang/Class\n-  #33 = NameAndType        #45:#46        // getClassLoader:()Ljava/lang/ClassLoader;\n-  #34 = Class              #47            // java/lang/ClassLoader\n-  #35 = NameAndType        #48:#21        // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #36 = Utf8               java/lang/IllegalArgumentException\n-  #37 = Utf8               java/lang/StringBuilder\n-  #38 = Utf8               Unable to resolve required resource:\n-  #39 = NameAndType        #49:#50        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #40 = NameAndType        #51:#52        // toString:()Ljava/lang/String;\n-  #41 = NameAndType        #13:#53        // \"<init>\":(Ljava/lang/String;)V\n-  #42 = Utf8               java/lang/Object\n-  #43 = Utf8               java/io/InputStream\n-  #44 = Utf8               java/lang/Class\n-  #45 = Utf8               getClassLoader\n-  #46 = Utf8               ()Ljava/lang/ClassLoader;\n-  #47 = Utf8               java/lang/ClassLoader\n-  #48 = Utf8               getResourceAsStream\n-  #49 = Utf8               append\n-  #50 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #51 = Utf8               toString\n-  #52 = Utf8               ()Ljava/lang/String;\n-  #53 = Utf8               (Ljava/lang/String;)V\n+   #1 = Class              #2             // org/apache/commons/codec/Resources\n+   #2 = Utf8               org/apache/commons/codec/Resources\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/lang/Object.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n+  #10 = Utf8               LineNumberTable\n+  #11 = Utf8               LocalVariableTable\n+  #12 = Utf8               this\n+  #13 = Utf8               Lorg/apache/commons/codec/Resources;\n+  #14 = Utf8               getInputStream\n+  #15 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #16 = Methodref          #17.#19        // java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+  #17 = Class              #18            // java/lang/Class\n+  #18 = Utf8               java/lang/Class\n+  #19 = NameAndType        #20:#21        // getClassLoader:()Ljava/lang/ClassLoader;\n+  #20 = Utf8               getClassLoader\n+  #21 = Utf8               ()Ljava/lang/ClassLoader;\n+  #22 = Methodref          #23.#25        // java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #23 = Class              #24            // java/lang/ClassLoader\n+  #24 = Utf8               java/lang/ClassLoader\n+  #25 = NameAndType        #26:#15        // getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #26 = Utf8               getResourceAsStream\n+  #27 = Class              #28            // java/lang/IllegalArgumentException\n+  #28 = Utf8               java/lang/IllegalArgumentException\n+  #29 = Class              #30            // java/lang/StringBuilder\n+  #30 = Utf8               java/lang/StringBuilder\n+  #31 = String             #32            // Unable to resolve required resource:\n+  #32 = Utf8               Unable to resolve required resource:\n+  #33 = Methodref          #29.#34        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #34 = NameAndType        #5:#35         // \"<init>\":(Ljava/lang/String;)V\n+  #35 = Utf8               (Ljava/lang/String;)V\n+  #36 = Methodref          #29.#37        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = NameAndType        #38:#39        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #38 = Utf8               append\n+  #39 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #40 = Methodref          #29.#41        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #41 = NameAndType        #42:#43        // toString:()Ljava/lang/String;\n+  #42 = Utf8               toString\n+  #43 = Utf8               ()Ljava/lang/String;\n+  #44 = Methodref          #27.#34        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #45 = Utf8               name\n+  #46 = Utf8               Ljava/lang/String;\n+  #47 = Utf8               inputStream\n+  #48 = Utf8               Ljava/io/InputStream;\n+  #49 = Utf8               StackMapTable\n+  #50 = Class              #51            // java/io/InputStream\n+  #51 = Utf8               java/io/InputStream\n+  #52 = Utf8               SourceFile\n+  #53 = Utf8               Resources.java\n {\n   public org.apache.commons.codec.Resources();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 27: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/Resources;\n \n   public static java.io.InputStream getInputStream(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/io/InputStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n-      stack=4, locals=2, args_size=1\n-         0: ldc           #2                  // class org/apache/commons/codec/Resources\n-         2: invokevirtual #3                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n+      stack=5, locals=2, args_size=1\n+         0: ldc           #1                  // class org/apache/commons/codec/Resources\n+         2: invokevirtual #16                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;\n          5: aload_0\n-         6: invokevirtual #4                  // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+         6: invokevirtual #22                 // Method java/lang/ClassLoader.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;\n          9: astore_1\n         10: aload_1\n-        11: ifnonnull     41\n-        14: new           #5                  // class java/lang/IllegalArgumentException\n+        11: ifnonnull     38\n+        14: new           #27                 // class java/lang/IllegalArgumentException\n         17: dup\n-        18: new           #6                  // class java/lang/StringBuilder\n+        18: new           #29                 // class java/lang/StringBuilder\n         21: dup\n-        22: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        25: ldc           #8                  // String Unable to resolve required resource:\n-        27: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: aload_0\n-        31: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        40: athrow\n-        41: aload_1\n-        42: areturn\n+        22: ldc           #31                 // String Unable to resolve required resource:\n+        24: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        27: aload_0\n+        28: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        31: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        34: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        37: athrow\n+        38: aload_1\n+        39: areturn\n       LineNumberTable:\n         line 36: 0\n         line 37: 10\n         line 38: 14\n-        line 40: 41\n+        line 40: 38\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      43     0  name   Ljava/lang/String;\n-           10      33     1 inputStream   Ljava/io/InputStream;\n+            0      40     0  name   Ljava/lang/String;\n+           10      30     1 inputStream   Ljava/io/InputStream;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n-          offset_delta = 41\n+          offset_delta = 38\n           locals = [ class java/io/InputStream ]\n }\n SourceFile: \"Resources.java\"\n"}]}
