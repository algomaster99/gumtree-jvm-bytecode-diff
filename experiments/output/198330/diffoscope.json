{"diffoscope-json-version": 1, "source1": "first/RET.class", "source2": "second/RET.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,45 +14,45 @@\n     }\n     \n     public RET(final int index) {\n         super((short)169, (short)2);\n         this.setIndex(index);\n     }\n     \n-    public void dump(final DataOutputStream out) throws IOException {\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n         if (this.wide) {\n-            out.writeByte(196);\n+            dataOutputStream.writeByte(196);\n         }\n-        out.writeByte(super.getOpcode());\n+        dataOutputStream.writeByte(super.getOpcode());\n         if (this.wide) {\n-            out.writeShort(this.index);\n+            dataOutputStream.writeShort(this.index);\n         }\n         else {\n-            out.writeByte(this.index);\n+            dataOutputStream.writeByte(this.index);\n         }\n     }\n     \n     private void setWide() {\n         this.wide = (this.index > 255);\n         if (this.wide) {\n             super.setLength(4);\n         }\n         else {\n             super.setLength(2);\n         }\n     }\n     \n-    protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException {\n+    protected void initFromFile(final ByteSequence byteSequence, final boolean wide) throws IOException {\n         this.wide = wide;\n         if (wide) {\n-            this.index = bytes.readUnsignedShort();\n+            this.index = byteSequence.readUnsignedShort();\n             super.setLength(4);\n         }\n         else {\n-            this.index = bytes.readUnsignedByte();\n+            this.index = byteSequence.readUnsignedByte();\n             super.setLength(2);\n         }\n     }\n     \n     public final int getIndex() {\n         return this.index;\n     }\n@@ -61,19 +61,19 @@\n         if (n < 0) {\n             throw new ClassGenException(\"Negative index value: \" + n);\n         }\n         this.index = n;\n         this.setWide();\n     }\n     \n-    public String toString(final boolean verbose) {\n-        return super.toString(verbose) + \" \" + this.index;\n+    public String toString(final boolean b) {\n+        return super.toString(b) + \" \" + this.index;\n     }\n     \n-    public Type getType(final ConstantPoolGen cp) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n         return (Type)ReturnaddressType.NO_TARGET;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitRET(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitRET(this);\n     }\n }\n"}]}
