{"diffoscope-json-version": 1, "source1": "first/OperandStack.class", "source2": "second/OperandStack.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,337 +1,330 @@\n-  SHA-256 checksum 236525e2bf6ba6ec41a2736adc4e24c9a15727ae3faa59ddcb444595f91494be\n+  SHA-256 checksum 0a9a7041a47de0209045a7ff0deac7f3db0e9b537e3b401a60d62823658c6944\n   Compiled from \"OperandStack.java\"\n public class org.apache.bcel.verifier.structurals.OperandStack implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/bcel/verifier/structurals/OperandStack\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/bcel/verifier/structurals/OperandStack\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/bcel/verifier/structurals/OperandStack\n+    #2 = Utf8               org/apache/bcel/verifier/structurals/OperandStack\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Class              #8            // java/util/ArrayList\n-    #8 = Utf8               java/util/ArrayList\n-    #9 = Methodref          #7.#3         // java/util/ArrayList.\"<init>\":()V\n-   #10 = Fieldref           #11.#12       // org/apache/bcel/verifier/structurals/OperandStack.stack:Ljava/util/ArrayList;\n-   #11 = Class              #13           // org/apache/bcel/verifier/structurals/OperandStack\n-   #12 = NameAndType        #14:#15       // stack:Ljava/util/ArrayList;\n-   #13 = Utf8               org/apache/bcel/verifier/structurals/OperandStack\n-   #14 = Utf8               stack\n-   #15 = Utf8               Ljava/util/ArrayList;\n-   #16 = Fieldref           #11.#17       // org/apache/bcel/verifier/structurals/OperandStack.maxStack:I\n-   #17 = NameAndType        #18:#19       // maxStack:I\n-   #18 = Utf8               maxStack\n-   #19 = Utf8               I\n-   #20 = Methodref          #11.#21       // org/apache/bcel/verifier/structurals/OperandStack.push:(Lorg/apache/bcel/generic/Type;)V\n-   #21 = NameAndType        #22:#23       // push:(Lorg/apache/bcel/generic/Type;)V\n-   #22 = Utf8               push\n-   #23 = Utf8               (Lorg/apache/bcel/generic/Type;)V\n-   #24 = Methodref          #11.#25       // org/apache/bcel/verifier/structurals/OperandStack.\"<init>\":(I)V\n-   #25 = NameAndType        #5:#26        // \"<init>\":(I)V\n-   #26 = Utf8               (I)V\n-   #27 = Methodref          #7.#28        // java/util/ArrayList.clone:()Ljava/lang/Object;\n-   #28 = NameAndType        #29:#30       // clone:()Ljava/lang/Object;\n-   #29 = Utf8               clone\n-   #30 = Utf8               ()Ljava/lang/Object;\n-   #31 = Methodref          #7.#32        // java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n-   #32 = NameAndType        #33:#34       // equals:(Ljava/lang/Object;)Z\n-   #33 = Utf8               equals\n-   #34 = Utf8               (Ljava/lang/Object;)Z\n-   #35 = Methodref          #11.#28       // org/apache/bcel/verifier/structurals/OperandStack.clone:()Ljava/lang/Object;\n-   #36 = Methodref          #7.#37        // java/util/ArrayList.hashCode:()I\n-   #37 = NameAndType        #38:#39       // hashCode:()I\n-   #38 = Utf8               hashCode\n-   #39 = Utf8               ()I\n-   #40 = Methodref          #7.#41        // java/util/ArrayList.size:()I\n-   #41 = NameAndType        #42:#39       // size:()I\n-   #42 = Utf8               size\n-   #43 = Methodref          #7.#44        // java/util/ArrayList.get:(I)Ljava/lang/Object;\n-   #44 = NameAndType        #45:#46       // get:(I)Ljava/lang/Object;\n-   #45 = Utf8               get\n-   #46 = Utf8               (I)Ljava/lang/Object;\n-   #47 = Methodref          #48.#49       // org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-   #48 = Class              #50           // org/apache/bcel/verifier/structurals/UninitializedObjectType\n-   #49 = NameAndType        #51:#52       // getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-   #50 = Utf8               org/apache/bcel/verifier/structurals/UninitializedObjectType\n-   #51 = Utf8               getInitialized\n-   #52 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n-   #53 = Methodref          #7.#54        // java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n-   #54 = NameAndType        #55:#56       // set:(ILjava/lang/Object;)Ljava/lang/Object;\n-   #55 = Utf8               set\n-   #56 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;\n-   #57 = Methodref          #7.#58        // java/util/ArrayList.isEmpty:()Z\n-   #58 = NameAndType        #59:#60       // isEmpty:()Z\n-   #59 = Utf8               isEmpty\n-   #60 = Utf8               ()Z\n-   #61 = Methodref          #11.#62       // org/apache/bcel/verifier/structurals/OperandStack.slotsUsed:()I\n-   #62 = NameAndType        #63:#39       // slotsUsed:()I\n-   #63 = Utf8               slotsUsed\n-   #64 = Methodref          #11.#41       // org/apache/bcel/verifier/structurals/OperandStack.size:()I\n-   #65 = Class              #66           // org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-   #66 = Utf8               org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-   #67 = Class              #68           // java/lang/StringBuilder\n-   #68 = Utf8               java/lang/StringBuilder\n-   #69 = Methodref          #67.#3        // java/lang/StringBuilder.\"<init>\":()V\n-   #70 = String             #71           // Cannot merge stacks of different size:\\nOperandStack A:\\n\n-   #71 = Utf8               Cannot merge stacks of different size:\\nOperandStack A:\\n\n-   #72 = Methodref          #67.#73       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #73 = NameAndType        #74:#75       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #74 = Utf8               append\n-   #75 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #76 = Methodref          #67.#77       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #77 = NameAndType        #74:#78       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #78 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #79 = String             #80           // \\nOperandStack B:\\n\n-   #80 = Utf8               \\nOperandStack B:\\n\n-   #81 = Methodref          #67.#82       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #82 = NameAndType        #83:#84       // toString:()Ljava/lang/String;\n-   #83 = Utf8               toString\n-   #84 = Utf8               ()Ljava/lang/String;\n-   #85 = Methodref          #65.#86       // org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #86 = NameAndType        #5:#87        // \"<init>\":(Ljava/lang/String;)V\n-   #87 = Utf8               (Ljava/lang/String;)V\n-   #88 = String             #89           // Backwards branch with an uninitialized object on the stack detected.\n-   #89 = Utf8               Backwards branch with an uninitialized object on the stack detected.\n-   #90 = Class              #91           // org/apache/bcel/generic/Type\n-   #91 = Utf8               org/apache/bcel/generic/Type\n-   #92 = Methodref          #90.#32       // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-   #93 = Class              #94           // org/apache/bcel/generic/ReferenceType\n-   #94 = Utf8               org/apache/bcel/generic/ReferenceType\n-   #95 = String             #96           // Cannot merge stacks of different types:\\nStack A:\\n\n-   #96 = Utf8               Cannot merge stacks of different types:\\nStack A:\\n\n-   #97 = String             #98           // \\nStack B:\\n\n-   #98 = Utf8               \\nStack B:\\n\n-   #99 = Methodref          #93.#100      // org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #100 = NameAndType        #101:#102     // getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #101 = Utf8               getFirstCommonSuperclass\n-  #102 = Utf8               (Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #103 = Class              #104          // java/lang/ClassNotFoundException\n-  #104 = Utf8               java/lang/ClassNotFoundException\n-  #105 = Class              #106          // org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #106 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #107 = String             #108          // Missing class:\n-  #108 = Utf8               Missing class:\n-  #109 = Methodref          #105.#110     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #110 = NameAndType        #5:#111       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #111 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #112 = Methodref          #11.#113      // org/apache/bcel/verifier/structurals/OperandStack.peek:(I)Lorg/apache/bcel/generic/Type;\n-  #113 = NameAndType        #114:#115     // peek:(I)Lorg/apache/bcel/generic/Type;\n-  #114 = Utf8               peek\n-  #115 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n-  #116 = Methodref          #7.#117       // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-  #117 = NameAndType        #118:#46      // remove:(I)Ljava/lang/Object;\n-  #118 = Utf8               remove\n-  #119 = Methodref          #11.#120      // org/apache/bcel/verifier/structurals/OperandStack.pop:()Lorg/apache/bcel/generic/Type;\n-  #120 = NameAndType        #121:#122     // pop:()Lorg/apache/bcel/generic/Type;\n-  #121 = Utf8               pop\n-  #122 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #123 = String             #124          // Cannot push NULL onto OperandStack.\n-  #124 = Utf8               Cannot push NULL onto OperandStack.\n-  #125 = Methodref          #105.#86      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-  #126 = Fieldref           #90.#127      // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-  #127 = NameAndType        #128:#129     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-  #128 = Utf8               BOOLEAN\n-  #129 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-  #130 = Fieldref           #90.#131      // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #131 = NameAndType        #132:#129     // CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #132 = Utf8               CHAR\n-  #133 = Fieldref           #90.#134      // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #134 = NameAndType        #135:#129     // BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #135 = Utf8               BYTE\n-  #136 = Fieldref           #90.#137      // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #137 = NameAndType        #138:#129     // SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #138 = Utf8               SHORT\n-  #139 = String             #140          // The OperandStack does not know about \\'\n-  #140 = Utf8               The OperandStack does not know about \\'\n-  #141 = String             #142          // \\'; use Type.INT instead.\n-  #142 = Utf8               \\'; use Type.INT instead.\n-  #143 = String             #144          // OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-  #144 = Utf8               OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-  #145 = Methodref          #7.#146       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-  #146 = NameAndType        #147:#34      // add:(Ljava/lang/Object;)Z\n-  #147 = Utf8               add\n-  #148 = Methodref          #90.#149      // org/apache/bcel/generic/Type.getSize:()I\n-  #149 = NameAndType        #150:#39      // getSize:()I\n-  #150 = Utf8               getSize\n-  #151 = String             #152          // Slots used:\n-  #152 = Utf8               Slots used:\n-  #153 = Methodref          #67.#154      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #154 = NameAndType        #74:#155      // append:(I)Ljava/lang/StringBuilder;\n-  #155 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #156 = String             #157          //  MaxStack:\n-  #157 = Utf8                MaxStack:\n-  #158 = String             #159          // .\\n\n-  #159 = Utf8               .\\n\n-  #160 = String             #161          //  (Size:\n-  #161 = Utf8                (Size:\n-  #162 = Methodref          #163.#164     // java/lang/String.valueOf:(I)Ljava/lang/String;\n-  #163 = Class              #165          // java/lang/String\n-  #164 = NameAndType        #166:#167     // valueOf:(I)Ljava/lang/String;\n-  #165 = Utf8               java/lang/String\n-  #166 = Utf8               valueOf\n-  #167 = Utf8               (I)Ljava/lang/String;\n-  #168 = String             #169          // )\\n\n-  #169 = Utf8               )\\n\n-  #170 = Class              #171          // java/lang/Cloneable\n-  #171 = Utf8               java/lang/Cloneable\n-  #172 = Utf8               Signature\n-  #173 = Utf8               Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n-  #174 = Utf8               Code\n-  #175 = Utf8               LineNumberTable\n-  #176 = Utf8               LocalVariableTable\n-  #177 = Utf8               this\n-  #178 = Utf8               Lorg/apache/bcel/verifier/structurals/OperandStack;\n-  #179 = Utf8               MethodParameters\n-  #180 = Utf8               (ILorg/apache/bcel/generic/ObjectType;)V\n-  #181 = Utf8               obj\n-  #182 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n-  #183 = Utf8               clear\n-  #184 = Utf8               newstack\n-  #185 = Utf8               LocalVariableTypeTable\n-  #186 = Utf8               o\n-  #187 = Utf8               Ljava/lang/Object;\n-  #188 = Utf8               s\n-  #189 = Utf8               StackMapTable\n-  #190 = Utf8               getClone\n-  #191 = Utf8               ()Lorg/apache/bcel/verifier/structurals/OperandStack;\n-  #192 = Utf8               initializeObject\n-  #193 = Utf8               (Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;)V\n-  #194 = Utf8               i\n-  #195 = Utf8               u\n-  #196 = Utf8               Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;\n-  #197 = Utf8               merge\n-  #198 = Utf8               (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n-  #199 = Utf8               e\n-  #200 = Utf8               Ljava/lang/ClassNotFoundException;\n-  #201 = Utf8               j\n-  #202 = Utf8               count\n-  #203 = Utf8               type\n-  #204 = Utf8               Lorg/apache/bcel/generic/Type;\n-  #205 = Utf8               slots\n+    #5 = Class              #6            // java/lang/Cloneable\n+    #6 = Utf8               java/lang/Cloneable\n+    #7 = Utf8               stack\n+    #8 = Utf8               Ljava/util/ArrayList;\n+    #9 = Utf8               Signature\n+   #10 = Utf8               Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n+   #11 = Utf8               maxStack\n+   #12 = Utf8               I\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (I)V\n+   #15 = Utf8               Code\n+   #16 = Methodref          #3.#17        // java/lang/Object.\"<init>\":()V\n+   #17 = NameAndType        #13:#18       // \"<init>\":()V\n+   #18 = Utf8               ()V\n+   #19 = Class              #20           // java/util/ArrayList\n+   #20 = Utf8               java/util/ArrayList\n+   #21 = Methodref          #19.#17       // java/util/ArrayList.\"<init>\":()V\n+   #22 = Fieldref           #1.#23        // org/apache/bcel/verifier/structurals/OperandStack.stack:Ljava/util/ArrayList;\n+   #23 = NameAndType        #7:#8         // stack:Ljava/util/ArrayList;\n+   #24 = Fieldref           #1.#25        // org/apache/bcel/verifier/structurals/OperandStack.maxStack:I\n+   #25 = NameAndType        #11:#12       // maxStack:I\n+   #26 = Utf8               LineNumberTable\n+   #27 = Utf8               LocalVariableTable\n+   #28 = Utf8               this\n+   #29 = Utf8               Lorg/apache/bcel/verifier/structurals/OperandStack;\n+   #30 = Utf8               (ILorg/apache/bcel/generic/ObjectType;)V\n+   #31 = Methodref          #1.#32        // org/apache/bcel/verifier/structurals/OperandStack.push:(Lorg/apache/bcel/generic/Type;)V\n+   #32 = NameAndType        #33:#34       // push:(Lorg/apache/bcel/generic/Type;)V\n+   #33 = Utf8               push\n+   #34 = Utf8               (Lorg/apache/bcel/generic/Type;)V\n+   #35 = Utf8               obj\n+   #36 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n+   #37 = Utf8               clear\n+   #38 = Utf8               clone\n+   #39 = Utf8               ()Ljava/lang/Object;\n+   #40 = Methodref          #1.#41        // org/apache/bcel/verifier/structurals/OperandStack.\"<init>\":(I)V\n+   #41 = NameAndType        #13:#14       // \"<init>\":(I)V\n+   #42 = Methodref          #19.#43       // java/util/ArrayList.clone:()Ljava/lang/Object;\n+   #43 = NameAndType        #38:#39       // clone:()Ljava/lang/Object;\n+   #44 = Utf8               newstack\n+   #45 = Utf8               LocalVariableTypeTable\n+   #46 = Utf8               equals\n+   #47 = Utf8               (Ljava/lang/Object;)Z\n+   #48 = Methodref          #19.#49       // java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n+   #49 = NameAndType        #46:#47       // equals:(Ljava/lang/Object;)Z\n+   #50 = Utf8               o\n+   #51 = Utf8               Ljava/lang/Object;\n+   #52 = Utf8               s\n+   #53 = Utf8               StackMapTable\n+   #54 = Utf8               getClone\n+   #55 = Utf8               ()Lorg/apache/bcel/verifier/structurals/OperandStack;\n+   #56 = Methodref          #1.#43        // org/apache/bcel/verifier/structurals/OperandStack.clone:()Ljava/lang/Object;\n+   #57 = Utf8               hashCode\n+   #58 = Utf8               ()I\n+   #59 = Methodref          #19.#60       // java/util/ArrayList.hashCode:()I\n+   #60 = NameAndType        #57:#58       // hashCode:()I\n+   #61 = Utf8               initializeObject\n+   #62 = Utf8               (Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;)V\n+   #63 = Methodref          #19.#64       // java/util/ArrayList.get:(I)Ljava/lang/Object;\n+   #64 = NameAndType        #65:#66       // get:(I)Ljava/lang/Object;\n+   #65 = Utf8               get\n+   #66 = Utf8               (I)Ljava/lang/Object;\n+   #67 = Methodref          #68.#70       // org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+   #68 = Class              #69           // org/apache/bcel/verifier/structurals/UninitializedObjectType\n+   #69 = Utf8               org/apache/bcel/verifier/structurals/UninitializedObjectType\n+   #70 = NameAndType        #71:#72       // getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+   #71 = Utf8               getInitialized\n+   #72 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n+   #73 = Methodref          #19.#74       // java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+   #74 = NameAndType        #75:#76       // set:(ILjava/lang/Object;)Ljava/lang/Object;\n+   #75 = Utf8               set\n+   #76 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;\n+   #77 = Methodref          #19.#78       // java/util/ArrayList.size:()I\n+   #78 = NameAndType        #79:#58       // size:()I\n+   #79 = Utf8               size\n+   #80 = Utf8               u\n+   #81 = Utf8               Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;\n+   #82 = Utf8               i\n+   #83 = Utf8               isEmpty\n+   #84 = Utf8               ()Z\n+   #85 = Methodref          #19.#86       // java/util/ArrayList.isEmpty:()Z\n+   #86 = NameAndType        #83:#84       // isEmpty:()Z\n+   #87 = Utf8               merge\n+   #88 = Utf8               (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n+   #89 = Methodref          #1.#90        // org/apache/bcel/verifier/structurals/OperandStack.slotsUsed:()I\n+   #90 = NameAndType        #91:#58       // slotsUsed:()I\n+   #91 = Utf8               slotsUsed\n+   #92 = Methodref          #1.#78        // org/apache/bcel/verifier/structurals/OperandStack.size:()I\n+   #93 = Class              #94           // org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+   #94 = Utf8               org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+   #95 = Class              #96           // java/lang/StringBuilder\n+   #96 = Utf8               java/lang/StringBuilder\n+   #97 = String             #98           // Cannot merge stacks of different size:\\nOperandStack A:\\n\n+   #98 = Utf8               Cannot merge stacks of different size:\\nOperandStack A:\\n\n+   #99 = Methodref          #95.#100      // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #100 = NameAndType        #13:#101      // \"<init>\":(Ljava/lang/String;)V\n+  #101 = Utf8               (Ljava/lang/String;)V\n+  #102 = Methodref          #95.#103      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #103 = NameAndType        #104:#105     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #104 = Utf8               append\n+  #105 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #106 = String             #107          // \\nOperandStack B:\\n\n+  #107 = Utf8               \\nOperandStack B:\\n\n+  #108 = Methodref          #95.#109      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #109 = NameAndType        #104:#110     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #111 = Methodref          #95.#112      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #112 = NameAndType        #113:#114     // toString:()Ljava/lang/String;\n+  #113 = Utf8               toString\n+  #114 = Utf8               ()Ljava/lang/String;\n+  #115 = Methodref          #93.#100      // org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+  #116 = String             #117          // Backwards branch with an uninitialized object on the stack detected.\n+  #117 = Utf8               Backwards branch with an uninitialized object on the stack detected.\n+  #118 = Class              #119          // org/apache/bcel/generic/Type\n+  #119 = Utf8               org/apache/bcel/generic/Type\n+  #120 = Methodref          #118.#49      // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+  #121 = Class              #122          // org/apache/bcel/generic/ReferenceType\n+  #122 = Utf8               org/apache/bcel/generic/ReferenceType\n+  #123 = String             #124          // Cannot merge stacks of different types:\\nStack A:\\n\n+  #124 = Utf8               Cannot merge stacks of different types:\\nStack A:\\n\n+  #125 = String             #126          // \\nStack B:\\n\n+  #126 = Utf8               \\nStack B:\\n\n+  #127 = Methodref          #121.#128     // org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #128 = NameAndType        #129:#130     // getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #129 = Utf8               getFirstCommonSuperclass\n+  #130 = Utf8               (Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #131 = Class              #132          // org/apache/bcel/verifier/exc/AssertionViolatedException\n+  #132 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+  #133 = String             #134          // Missing class:\n+  #134 = Utf8               Missing class:\n+  #135 = Methodref          #131.#136     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #136 = NameAndType        #13:#137      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #137 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #138 = Class              #139          // java/lang/ClassNotFoundException\n+  #139 = Utf8               java/lang/ClassNotFoundException\n+  #140 = Utf8               e\n+  #141 = Utf8               Ljava/lang/ClassNotFoundException;\n+  #142 = Utf8               peek\n+  #143 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+  #144 = Methodref          #1.#145       // org/apache/bcel/verifier/structurals/OperandStack.peek:(I)Lorg/apache/bcel/generic/Type;\n+  #145 = NameAndType        #142:#146     // peek:(I)Lorg/apache/bcel/generic/Type;\n+  #146 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n+  #147 = Utf8               pop\n+  #148 = Methodref          #19.#149      // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+  #149 = NameAndType        #150:#66      // remove:(I)Ljava/lang/Object;\n+  #150 = Utf8               remove\n+  #151 = Methodref          #1.#152       // org/apache/bcel/verifier/structurals/OperandStack.pop:()Lorg/apache/bcel/generic/Type;\n+  #152 = NameAndType        #147:#143     // pop:()Lorg/apache/bcel/generic/Type;\n+  #153 = Utf8               count\n+  #154 = Utf8               j\n+  #155 = String             #156          // Cannot push NULL onto OperandStack.\n+  #156 = Utf8               Cannot push NULL onto OperandStack.\n+  #157 = Methodref          #131.#100     // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+  #158 = Fieldref           #118.#159     // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+  #159 = NameAndType        #160:#161     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+  #160 = Utf8               BOOLEAN\n+  #161 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+  #162 = Fieldref           #118.#163     // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #163 = NameAndType        #164:#161     // CHAR:Lorg/apache/bcel/generic/BasicType;\n+  #164 = Utf8               CHAR\n+  #165 = Fieldref           #118.#166     // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #166 = NameAndType        #167:#161     // BYTE:Lorg/apache/bcel/generic/BasicType;\n+  #167 = Utf8               BYTE\n+  #168 = Fieldref           #118.#169     // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #169 = NameAndType        #170:#161     // SHORT:Lorg/apache/bcel/generic/BasicType;\n+  #170 = Utf8               SHORT\n+  #171 = String             #172          // The OperandStack does not know about \\'\n+  #172 = Utf8               The OperandStack does not know about \\'\n+  #173 = String             #174          // \\'; use Type.INT instead.\n+  #174 = Utf8               \\'; use Type.INT instead.\n+  #175 = String             #176          // OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+  #176 = Utf8               OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+  #177 = Methodref          #19.#178      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #178 = NameAndType        #179:#47      // add:(Ljava/lang/Object;)Z\n+  #179 = Utf8               add\n+  #180 = Utf8               type\n+  #181 = Utf8               Lorg/apache/bcel/generic/Type;\n+  #182 = Methodref          #118.#183     // org/apache/bcel/generic/Type.getSize:()I\n+  #183 = NameAndType        #184:#58      // getSize:()I\n+  #184 = Utf8               getSize\n+  #185 = Utf8               slots\n+  #186 = Methodref          #95.#17       // java/lang/StringBuilder.\"<init>\":()V\n+  #187 = String             #188          // Slots used:\n+  #188 = Utf8               Slots used:\n+  #189 = Methodref          #95.#190      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #190 = NameAndType        #104:#191     // append:(I)Ljava/lang/StringBuilder;\n+  #191 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #192 = String             #193          //  MaxStack:\n+  #193 = Utf8                MaxStack:\n+  #194 = String             #195          // .\\n\n+  #195 = Utf8               .\\n\n+  #196 = String             #197          //  (Size:\n+  #197 = Utf8                (Size:\n+  #198 = Methodref          #199.#201     // java/lang/String.valueOf:(I)Ljava/lang/String;\n+  #199 = Class              #200          // java/lang/String\n+  #200 = Utf8               java/lang/String\n+  #201 = NameAndType        #202:#203     // valueOf:(I)Ljava/lang/String;\n+  #202 = Utf8               valueOf\n+  #203 = Utf8               (I)Ljava/lang/String;\n+  #204 = String             #205          // )\\n\n+  #205 = Utf8               )\\n\n   #206 = Utf8               sb\n   #207 = Utf8               Ljava/lang/StringBuilder;\n   #208 = Utf8               SourceFile\n   #209 = Utf8               OperandStack.java\n {\n   private java.util.ArrayList<org.apache.bcel.generic.Type> stack;\n     descriptor: Ljava/util/ArrayList;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #173                         // Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n+    Signature: #10                          // Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n \n   private final int maxStack;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.bcel.verifier.structurals.OperandStack(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class java/util/ArrayList\n+         5: new           #19                 // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        12: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         9: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n+        12: putfield      #22                 // Field stack:Ljava/util/ArrayList;\n         15: aload_0\n         16: iload_1\n-        17: putfield      #16                 // Field maxStack:I\n+        17: putfield      #24                 // Field maxStack:I\n         20: return\n       LineNumberTable:\n         line 42: 0\n         line 34: 4\n         line 43: 15\n         line 44: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      21     1 maxStack   I\n-    MethodParameters:\n-      Name                           Flags\n-      maxStack                       final\n \n   public org.apache.bcel.verifier.structurals.OperandStack(int, org.apache.bcel.generic.ObjectType);\n     descriptor: (ILorg/apache/bcel/generic/ObjectType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class java/util/ArrayList\n+         5: new           #19                 // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-        12: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         9: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n+        12: putfield      #22                 // Field stack:Ljava/util/ArrayList;\n         15: aload_0\n         16: iload_1\n-        17: putfield      #16                 // Field maxStack:I\n+        17: putfield      #24                 // Field maxStack:I\n         20: aload_0\n         21: aload_2\n-        22: invokevirtual #20                 // Method push:(Lorg/apache/bcel/generic/Type;)V\n+        22: invokevirtual #31                 // Method push:(Lorg/apache/bcel/generic/Type;)V\n         25: return\n       LineNumberTable:\n         line 49: 0\n         line 34: 4\n         line 50: 15\n         line 51: 20\n         line 52: 25\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      26     1 maxStack   I\n             0      26     2   obj   Lorg/apache/bcel/generic/ObjectType;\n-    MethodParameters:\n-      Name                           Flags\n-      maxStack                       final\n-      obj                            final\n \n   public void clear();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: new           #7                  // class java/util/ArrayList\n+         1: new           #19                 // class java/util/ArrayList\n          4: dup\n-         5: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n-         8: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         5: invokespecial #21                 // Method java/util/ArrayList.\"<init>\":()V\n+         8: putfield      #22                 // Field stack:Ljava/util/ArrayList;\n         11: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n+         0: new           #1                  // class org/apache/bcel/verifier/structurals/OperandStack\n          3: dup\n          4: aload_0\n-         5: getfield      #16                 // Field maxStack:I\n-         8: invokespecial #24                 // Method \"<init>\":(I)V\n+         5: getfield      #24                 // Field maxStack:I\n+         8: invokespecial #40                 // Method \"<init>\":(I)V\n         11: astore_1\n         12: aload_0\n-        13: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-        16: invokevirtual #27                 // Method java/util/ArrayList.clone:()Ljava/lang/Object;\n-        19: checkcast     #7                  // class java/util/ArrayList\n+        13: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        16: invokevirtual #42                 // Method java/util/ArrayList.clone:()Ljava/lang/Object;\n+        19: checkcast     #19                 // class java/util/ArrayList\n         22: astore_2\n         23: aload_1\n         24: aload_2\n-        25: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n+        25: putfield      #22                 // Field stack:Ljava/util/ArrayList;\n         28: aload_1\n         29: areturn\n       LineNumberTable:\n         line 67: 0\n         line 69: 12\n         line 70: 23\n         line 71: 28\n@@ -346,569 +339,544 @@\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n+         1: instanceof    #1                  // class org/apache/bcel/verifier/structurals/OperandStack\n          4: ifne          9\n          7: iconst_0\n          8: ireturn\n          9: aload_1\n-        10: checkcast     #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n+        10: checkcast     #1                  // class org/apache/bcel/verifier/structurals/OperandStack\n         13: astore_2\n         14: aload_0\n-        15: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+        15: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n         18: aload_2\n-        19: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-        22: invokevirtual #31                 // Method java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n+        19: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        22: invokevirtual #48                 // Method java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n         25: ireturn\n       LineNumberTable:\n         line 79: 0\n         line 80: 7\n         line 82: 9\n         line 83: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      26     1     o   Ljava/lang/Object;\n            14      12     2     s   Lorg/apache/bcel/verifier/structurals/OperandStack;\n       StackMapTable: number_of_entries = 1\n         frame_type = 9 /* same */\n-    MethodParameters:\n-      Name                           Flags\n-      o                              final\n \n   public org.apache.bcel.verifier.structurals.OperandStack getClone();\n     descriptor: ()Lorg/apache/bcel/verifier/structurals/OperandStack;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #35                 // Method clone:()Ljava/lang/Object;\n-         4: checkcast     #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n+         1: invokevirtual #56                 // Method clone:()Ljava/lang/Object;\n+         4: checkcast     #1                  // class org/apache/bcel/verifier/structurals/OperandStack\n          7: areturn\n       LineNumberTable:\n         line 92: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-         4: invokevirtual #36                 // Method java/util/ArrayList.hashCode:()I\n+         1: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+         4: invokevirtual #59                 // Method java/util/ArrayList.hashCode:()I\n          7: ireturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public void initializeObject(org.apache.bcel.verifier.structurals.UninitializedObjectType);\n     descriptor: (Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: iconst_0\n          1: istore_2\n-         2: iload_2\n-         3: aload_0\n-         4: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-         7: invokevirtual #40                 // Method java/util/ArrayList.size:()I\n-        10: if_icmpge     44\n-        13: aload_0\n-        14: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-        17: iload_2\n-        18: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        21: aload_1\n-        22: if_acmpne     38\n-        25: aload_0\n-        26: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-        29: iload_2\n-        30: aload_1\n-        31: invokevirtual #47                 // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-        34: invokevirtual #53                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n-        37: pop\n-        38: iinc          2, 1\n-        41: goto          2\n+         2: goto          33\n+         5: aload_0\n+         6: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+         9: iload_2\n+        10: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        13: aload_1\n+        14: if_acmpne     30\n+        17: aload_0\n+        18: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        21: iload_2\n+        22: aload_1\n+        23: invokevirtual #67                 // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+        26: invokevirtual #73                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+        29: pop\n+        30: iinc          2, 1\n+        33: iload_2\n+        34: aload_0\n+        35: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        38: invokevirtual #77                 // Method java/util/ArrayList.size:()I\n+        41: if_icmplt     5\n         44: return\n       LineNumberTable:\n         line 107: 0\n-        line 108: 13\n-        line 109: 25\n-        line 107: 38\n+        line 108: 5\n+        line 109: 17\n+        line 107: 30\n         line 112: 44\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            2      42     2     i   I\n             0      45     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      45     1     u   Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;\n+            2      42     2     i   I\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n-          offset_delta = 2\n-          locals = [ int ]\n-        frame_type = 35 /* same */\n-        frame_type = 250 /* chop */\n           offset_delta = 5\n-    MethodParameters:\n-      Name                           Flags\n-      u                              final\n+          locals = [ int ]\n+        frame_type = 24 /* same */\n+        frame_type = 2 /* same */\n \n   public boolean isEmpty();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-         4: invokevirtual #57                 // Method java/util/ArrayList.isEmpty:()Z\n+         1: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+         4: invokevirtual #85                 // Method java/util/ArrayList.isEmpty:()Z\n          7: ireturn\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public int maxStack();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field maxStack:I\n+         1: getfield      #24                 // Field maxStack:I\n          4: ireturn\n       LineNumberTable:\n         line 125: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public void merge(org.apache.bcel.verifier.structurals.OperandStack);\n     descriptor: (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #61                 // Method slotsUsed:()I\n+         1: invokevirtual #89                 // Method slotsUsed:()I\n          4: aload_1\n-         5: invokevirtual #61                 // Method slotsUsed:()I\n+         5: invokevirtual #89                 // Method slotsUsed:()I\n          8: if_icmpne     22\n         11: aload_0\n-        12: invokevirtual #64                 // Method size:()I\n+        12: invokevirtual #92                 // Method size:()I\n         15: aload_1\n-        16: invokevirtual #64                 // Method size:()I\n-        19: if_icmpeq     58\n-        22: new           #65                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+        16: invokevirtual #92                 // Method size:()I\n+        19: if_icmpeq     55\n+        22: new           #93                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n         25: dup\n-        26: new           #67                 // class java/lang/StringBuilder\n+        26: new           #95                 // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #70                 // String Cannot merge stacks of different size:\\nOperandStack A:\\n\n-        35: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: aload_0\n-        39: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        42: ldc           #79                 // String \\nOperandStack B:\\n\n-        44: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: aload_1\n-        48: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #85                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-        57: athrow\n-        58: iconst_0\n-        59: istore_2\n-        60: iload_2\n-        61: aload_0\n-        62: invokevirtual #64                 // Method size:()I\n-        65: if_icmpge     349\n-        68: aload_0\n-        69: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-        72: iload_2\n-        73: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        76: instanceof    #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-        79: ifne          106\n-        82: aload_1\n-        83: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-        86: iload_2\n-        87: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        90: instanceof    #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-        93: ifeq          106\n-        96: new           #65                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-        99: dup\n-       100: ldc           #88                 // String Backwards branch with an uninitialized object on the stack detected.\n-       102: invokespecial #85                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-       105: athrow\n-       106: aload_0\n-       107: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       110: iload_2\n-       111: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       114: checkcast     #90                 // class org/apache/bcel/generic/Type\n-       117: aload_1\n-       118: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       121: iload_2\n-       122: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       125: invokevirtual #92                 // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-       128: ifne          169\n-       131: aload_0\n-       132: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       135: iload_2\n-       136: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       139: instanceof    #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-       142: ifeq          169\n-       145: aload_1\n-       146: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       149: iload_2\n-       150: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       153: instanceof    #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-       156: ifne          169\n-       159: new           #65                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-       162: dup\n-       163: ldc           #88                 // String Backwards branch with an uninitialized object on the stack detected.\n-       165: invokespecial #85                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-       168: athrow\n-       169: aload_0\n-       170: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       173: iload_2\n-       174: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       177: instanceof    #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-       180: ifeq          220\n-       183: aload_1\n-       184: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       187: iload_2\n-       188: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       191: instanceof    #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-       194: ifne          220\n-       197: aload_0\n-       198: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       201: iload_2\n-       202: aload_0\n-       203: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       206: iload_2\n-       207: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       210: checkcast     #48                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-       213: invokevirtual #47                 // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-       216: invokevirtual #53                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n-       219: pop\n-       220: aload_0\n-       221: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       224: iload_2\n-       225: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       228: checkcast     #90                 // class org/apache/bcel/generic/Type\n-       231: aload_1\n-       232: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       235: iload_2\n-       236: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       239: invokevirtual #92                 // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-       242: ifne          343\n-       245: aload_0\n-       246: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       249: iload_2\n-       250: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       253: instanceof    #93                 // class org/apache/bcel/generic/ReferenceType\n-       256: ifeq          273\n-       259: aload_1\n-       260: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       263: iload_2\n-       264: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       267: instanceof    #93                 // class org/apache/bcel/generic/ReferenceType\n-       270: ifne          309\n-       273: new           #65                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-       276: dup\n-       277: new           #67                 // class java/lang/StringBuilder\n-       280: dup\n-       281: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       284: ldc           #95                 // String Cannot merge stacks of different types:\\nStack A:\\n\n-       286: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       289: aload_0\n-       290: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       293: ldc           #97                 // String \\nStack B:\\n\n-       295: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       298: aload_1\n-       299: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       302: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       305: invokespecial #85                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-       308: athrow\n-       309: aload_0\n-       310: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       313: iload_2\n-       314: aload_0\n-       315: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+        30: ldc           #97                 // String Cannot merge stacks of different size:\\nOperandStack A:\\n\n+        32: invokespecial #99                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        35: aload_0\n+        36: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        39: ldc           #106                // String \\nOperandStack B:\\n\n+        41: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        44: aload_1\n+        45: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        48: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        51: invokespecial #115                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+        54: athrow\n+        55: iconst_0\n+        56: istore_2\n+        57: goto          335\n+        60: aload_0\n+        61: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        64: iload_2\n+        65: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        68: instanceof    #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+        71: ifne          98\n+        74: aload_1\n+        75: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        78: iload_2\n+        79: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        82: instanceof    #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+        85: ifeq          98\n+        88: new           #93                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+        91: dup\n+        92: ldc           #116                // String Backwards branch with an uninitialized object on the stack detected.\n+        94: invokespecial #115                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+        97: athrow\n+        98: aload_0\n+        99: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       102: iload_2\n+       103: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       106: checkcast     #118                // class org/apache/bcel/generic/Type\n+       109: aload_1\n+       110: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       113: iload_2\n+       114: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       117: invokevirtual #120                // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+       120: ifne          161\n+       123: aload_0\n+       124: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       127: iload_2\n+       128: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       131: instanceof    #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       134: ifeq          161\n+       137: aload_1\n+       138: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       141: iload_2\n+       142: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       145: instanceof    #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       148: ifne          161\n+       151: new           #93                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+       154: dup\n+       155: ldc           #116                // String Backwards branch with an uninitialized object on the stack detected.\n+       157: invokespecial #115                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+       160: athrow\n+       161: aload_0\n+       162: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       165: iload_2\n+       166: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       169: instanceof    #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       172: ifeq          212\n+       175: aload_1\n+       176: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       179: iload_2\n+       180: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       183: instanceof    #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       186: ifne          212\n+       189: aload_0\n+       190: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       193: iload_2\n+       194: aload_0\n+       195: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       198: iload_2\n+       199: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       202: checkcast     #68                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       205: invokevirtual #67                 // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+       208: invokevirtual #73                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+       211: pop\n+       212: aload_0\n+       213: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       216: iload_2\n+       217: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       220: checkcast     #118                // class org/apache/bcel/generic/Type\n+       223: aload_1\n+       224: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       227: iload_2\n+       228: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       231: invokevirtual #120                // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+       234: ifne          332\n+       237: aload_0\n+       238: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       241: iload_2\n+       242: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       245: instanceof    #121                // class org/apache/bcel/generic/ReferenceType\n+       248: ifeq          265\n+       251: aload_1\n+       252: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       255: iload_2\n+       256: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       259: instanceof    #121                // class org/apache/bcel/generic/ReferenceType\n+       262: ifne          298\n+       265: new           #93                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+       268: dup\n+       269: new           #95                 // class java/lang/StringBuilder\n+       272: dup\n+       273: ldc           #123                // String Cannot merge stacks of different types:\\nStack A:\\n\n+       275: invokespecial #99                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       278: aload_0\n+       279: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       282: ldc           #125                // String \\nStack B:\\n\n+       284: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       287: aload_1\n+       288: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       291: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       294: invokespecial #115                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+       297: athrow\n+       298: aload_0\n+       299: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       302: iload_2\n+       303: aload_0\n+       304: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       307: iload_2\n+       308: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       311: checkcast     #121                // class org/apache/bcel/generic/ReferenceType\n+       314: aload_1\n+       315: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n        318: iload_2\n-       319: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       322: checkcast     #93                 // class org/apache/bcel/generic/ReferenceType\n-       325: aload_1\n-       326: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       329: iload_2\n-       330: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       333: checkcast     #93                 // class org/apache/bcel/generic/ReferenceType\n-       336: invokevirtual #99                 // Method org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-       339: invokevirtual #53                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n-       342: pop\n-       343: iinc          2, 1\n-       346: goto          60\n-       349: goto          381\n-       352: astore_2\n-       353: new           #105                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n-       356: dup\n-       357: new           #67                 // class java/lang/StringBuilder\n-       360: dup\n-       361: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       364: ldc           #107                // String Missing class:\n-       366: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       369: aload_2\n-       370: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       373: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       376: aload_2\n-       377: invokespecial #109                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-       380: athrow\n-       381: return\n+       319: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       322: checkcast     #121                // class org/apache/bcel/generic/ReferenceType\n+       325: invokevirtual #127                // Method org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+       328: invokevirtual #73                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+       331: pop\n+       332: iinc          2, 1\n+       335: iload_2\n+       336: aload_0\n+       337: invokevirtual #92                 // Method size:()I\n+       340: if_icmplt     60\n+       343: goto          372\n+       346: astore_2\n+       347: new           #131                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+       350: dup\n+       351: new           #95                 // class java/lang/StringBuilder\n+       354: dup\n+       355: ldc           #133                // String Missing class:\n+       357: invokespecial #99                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+       360: aload_2\n+       361: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       364: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       367: aload_2\n+       368: invokespecial #135                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       371: athrow\n+       372: return\n       Exception table:\n          from    to  target type\n-             0   349   352   Class java/lang/ClassNotFoundException\n+             0   343   346   Class java/lang/ClassNotFoundException\n       LineNumberTable:\n         line 134: 0\n         line 135: 22\n-        line 138: 58\n-        line 141: 68\n-        line 142: 96\n-        line 146: 106\n-        line 147: 150\n-        line 148: 159\n-        line 151: 169\n-        line 153: 197\n-        line 155: 220\n-        line 156: 245\n-        line 157: 273\n-        line 159: 309\n-        line 138: 343\n-        line 165: 349\n-        line 162: 352\n-        line 164: 353\n-        line 166: 381\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           60     289     2     i   I\n-          353      28     2     e   Ljava/lang/ClassNotFoundException;\n-            0     382     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n-            0     382     1     s   Lorg/apache/bcel/verifier/structurals/OperandStack;\n+        line 138: 55\n+        line 141: 60\n+        line 142: 88\n+        line 146: 98\n+        line 147: 137\n+        line 148: 151\n+        line 151: 161\n+        line 153: 189\n+        line 155: 212\n+        line 156: 237\n+        line 157: 265\n+        line 159: 298\n+        line 138: 332\n+        line 162: 343\n+        line 164: 347\n+        line 166: 372\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     373     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n+            0     373     1     s   Lorg/apache/bcel/verifier/structurals/OperandStack;\n+           57     286     2     i   I\n+          347      25     2     e   Ljava/lang/ClassNotFoundException;\n       StackMapTable: number_of_entries = 12\n         frame_type = 22 /* same */\n-        frame_type = 35 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 1\n+          offset_delta = 4\n           locals = [ int ]\n-        frame_type = 45 /* same */\n+        frame_type = 37 /* same */\n         frame_type = 62 /* same */\n         frame_type = 50 /* same */\n         frame_type = 52 /* same */\n-        frame_type = 35 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 33 /* same */\n-        frame_type = 250 /* chop */\n-          offset_delta = 5\n-        frame_type = 66 /* same_locals_1_stack_item */\n+        frame_type = 2 /* same */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 10\n+          locals = [ class org/apache/bcel/verifier/structurals/OperandStack, class org/apache/bcel/verifier/structurals/OperandStack ]\n           stack = [ class java/lang/ClassNotFoundException ]\n-        frame_type = 28 /* same */\n-    MethodParameters:\n-      Name                           Flags\n-      s                              final\n+        frame_type = 25 /* same */\n \n   public org.apache.bcel.generic.Type peek();\n     descriptor: ()Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #112                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+         2: invokevirtual #144                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n          5: areturn\n       LineNumberTable:\n         line 172: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public org.apache.bcel.generic.Type peek(int);\n     descriptor: (I)Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         1: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n          4: aload_0\n-         5: invokevirtual #64                 // Method size:()I\n+         5: invokevirtual #92                 // Method size:()I\n          8: iload_1\n          9: isub\n         10: iconst_1\n         11: isub\n-        12: invokevirtual #43                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        15: checkcast     #90                 // class org/apache/bcel/generic/Type\n+        12: invokevirtual #63                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        15: checkcast     #118                // class org/apache/bcel/generic/Type\n         18: areturn\n       LineNumberTable:\n         line 180: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      19     1     i   I\n-    MethodParameters:\n-      Name                           Flags\n-      i                              final\n \n   public org.apache.bcel.generic.Type pop();\n     descriptor: ()Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         1: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n          4: aload_0\n-         5: invokevirtual #64                 // Method size:()I\n+         5: invokevirtual #92                 // Method size:()I\n          8: iconst_1\n          9: isub\n-        10: invokevirtual #116                // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-        13: checkcast     #90                 // class org/apache/bcel/generic/Type\n+        10: invokevirtual #148                // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+        13: checkcast     #118                // class org/apache/bcel/generic/Type\n         16: areturn\n       LineNumberTable:\n         line 187: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public org.apache.bcel.generic.Type pop(int);\n     descriptor: (I)Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: iconst_0\n          1: istore_2\n-         2: iload_2\n-         3: iload_1\n-         4: if_icmpge     18\n-         7: aload_0\n-         8: invokevirtual #119                // Method pop:()Lorg/apache/bcel/generic/Type;\n-        11: pop\n-        12: iinc          2, 1\n-        15: goto          2\n+         2: goto          13\n+         5: aload_0\n+         6: invokevirtual #151                // Method pop:()Lorg/apache/bcel/generic/Type;\n+         9: pop\n+        10: iinc          2, 1\n+        13: iload_2\n+        14: iload_1\n+        15: if_icmplt     5\n         18: aconst_null\n         19: areturn\n       LineNumberTable:\n         line 196: 0\n-        line 197: 7\n-        line 196: 12\n+        line 197: 5\n+        line 196: 10\n         line 199: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            2      16     2     j   I\n             0      20     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      20     1 count   I\n+            2      16     2     j   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 15\n-    MethodParameters:\n-      Name                           Flags\n-      count                          final\n+        frame_type = 7 /* same */\n \n   public void push(org.apache.bcel.generic.Type);\n     descriptor: (Lorg/apache/bcel/generic/Type;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=2, args_size=2\n+      stack=5, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #105                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+         4: new           #131                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n          7: dup\n-         8: ldc           #123                // String Cannot push NULL onto OperandStack.\n-        10: invokespecial #125                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #155                // String Cannot push NULL onto OperandStack.\n+        10: invokespecial #157                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_1\n-        15: getstatic     #126                // Field org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+        15: getstatic     #158                // Field org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n         18: if_acmpeq     42\n         21: aload_1\n-        22: getstatic     #130                // Field org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+        22: getstatic     #162                // Field org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n         25: if_acmpeq     42\n         28: aload_1\n-        29: getstatic     #133                // Field org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+        29: getstatic     #165                // Field org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n         32: if_acmpeq     42\n         35: aload_1\n-        36: getstatic     #136                // Field org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-        39: if_acmpne     74\n-        42: new           #105                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+        36: getstatic     #168                // Field org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+        39: if_acmpne     71\n+        42: new           #131                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n         45: dup\n-        46: new           #67                 // class java/lang/StringBuilder\n+        46: new           #95                 // class java/lang/StringBuilder\n         49: dup\n-        50: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        53: ldc           #139                // String The OperandStack does not know about \\'\n-        55: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: aload_1\n-        59: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        62: ldc           #141                // String \\'; use Type.INT instead.\n-        64: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        70: invokespecial #125                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-        73: athrow\n-        74: aload_0\n-        75: invokevirtual #61                 // Method slotsUsed:()I\n-        78: aload_0\n-        79: getfield      #16                 // Field maxStack:I\n-        82: if_icmplt     112\n-        85: new           #105                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n-        88: dup\n-        89: new           #67                 // class java/lang/StringBuilder\n-        92: dup\n-        93: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        96: ldc           #143                // String OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-        98: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       101: aload_0\n-       102: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       105: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       108: invokespecial #125                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-       111: athrow\n-       112: aload_0\n-       113: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-       116: aload_1\n-       117: invokevirtual #145                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-       120: pop\n-       121: return\n+        50: ldc           #171                // String The OperandStack does not know about \\'\n+        52: invokespecial #99                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        55: aload_1\n+        56: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        59: ldc           #173                // String \\'; use Type.INT instead.\n+        61: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        64: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        67: invokespecial #157                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+        70: athrow\n+        71: aload_0\n+        72: invokevirtual #89                 // Method slotsUsed:()I\n+        75: aload_0\n+        76: getfield      #24                 // Field maxStack:I\n+        79: if_icmplt     106\n+        82: new           #131                // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+        85: dup\n+        86: new           #95                 // class java/lang/StringBuilder\n+        89: dup\n+        90: ldc           #175                // String OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+        92: invokespecial #99                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        95: aload_0\n+        96: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        99: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       102: invokespecial #157                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+       105: athrow\n+       106: aload_0\n+       107: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+       110: aload_1\n+       111: invokevirtual #177                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       114: pop\n+       115: return\n       LineNumberTable:\n         line 206: 0\n         line 207: 4\n         line 209: 14\n         line 210: 42\n-        line 212: 74\n-        line 213: 85\n-        line 215: 112\n-        line 216: 121\n+        line 212: 71\n+        line 213: 82\n+        line 215: 106\n+        line 216: 115\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     122     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n-            0     122     1  type   Lorg/apache/bcel/generic/Type;\n+            0     116     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n+            0     116     1  type   Lorg/apache/bcel/generic/Type;\n       StackMapTable: number_of_entries = 4\n         frame_type = 14 /* same */\n         frame_type = 27 /* same */\n-        frame_type = 31 /* same */\n-        frame_type = 37 /* same */\n-    MethodParameters:\n-      Name                           Flags\n-      type                           final\n+        frame_type = 28 /* same */\n+        frame_type = 34 /* same */\n \n   public int size();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-         4: invokevirtual #40                 // Method java/util/ArrayList.size:()I\n+         1: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+         4: invokevirtual #77                 // Method java/util/ArrayList.size:()I\n          7: ireturn\n       LineNumberTable:\n         line 222: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n@@ -917,132 +885,130 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: iconst_0\n          1: istore_1\n          2: iconst_0\n          3: istore_2\n-         4: iload_2\n-         5: aload_0\n-         6: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n-         9: invokevirtual #40                 // Method java/util/ArrayList.size:()I\n-        12: if_icmpge     32\n-        15: iload_1\n-        16: aload_0\n-        17: iload_2\n-        18: invokevirtual #112                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n-        21: invokevirtual #148                // Method org/apache/bcel/generic/Type.getSize:()I\n-        24: iadd\n-        25: istore_1\n-        26: iinc          2, 1\n-        29: goto          4\n+         4: goto          21\n+         7: iload_1\n+         8: aload_0\n+         9: iload_2\n+        10: invokevirtual #144                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+        13: invokevirtual #182                // Method org/apache/bcel/generic/Type.getSize:()I\n+        16: iadd\n+        17: istore_1\n+        18: iinc          2, 1\n+        21: iload_2\n+        22: aload_0\n+        23: getfield      #22                 // Field stack:Ljava/util/ArrayList;\n+        26: invokevirtual #77                 // Method java/util/ArrayList.size:()I\n+        29: if_icmplt     7\n         32: iload_1\n         33: ireturn\n       LineNumberTable:\n         line 235: 0\n         line 236: 2\n-        line 237: 15\n-        line 236: 26\n+        line 237: 7\n+        line 236: 18\n         line 239: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            4      28     2     i   I\n             0      34     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             2      32     1 slots   I\n+            4      28     2     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 4\n+          offset_delta = 7\n           locals = [ int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 27\n+        frame_type = 13 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #67                 // class java/lang/StringBuilder\n+         0: new           #95                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #69                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #186                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #151                // String Slots used:\n-        11: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #187                // String Slots used:\n+        11: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         14: pop\n         15: aload_1\n         16: aload_0\n-        17: invokevirtual #61                 // Method slotsUsed:()I\n-        20: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        17: invokevirtual #89                 // Method slotsUsed:()I\n+        20: invokevirtual #189                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n         23: pop\n         24: aload_1\n-        25: ldc           #156                // String  MaxStack:\n-        27: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: ldc           #192                // String  MaxStack:\n+        27: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: pop\n         31: aload_1\n         32: aload_0\n-        33: getfield      #16                 // Field maxStack:I\n-        36: invokevirtual #153                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        33: getfield      #24                 // Field maxStack:I\n+        36: invokevirtual #189                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n         39: pop\n         40: aload_1\n-        41: ldc           #158                // String .\\n\n-        43: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: ldc           #194                // String .\\n\n+        43: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         46: pop\n         47: iconst_0\n         48: istore_2\n-        49: iload_2\n-        50: aload_0\n-        51: invokevirtual #64                 // Method size:()I\n-        54: if_icmpge     103\n-        57: aload_1\n-        58: aload_0\n-        59: iload_2\n-        60: invokevirtual #112                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n-        63: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        66: pop\n-        67: aload_1\n-        68: ldc           #160                // String  (Size:\n-        70: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        73: pop\n-        74: aload_1\n-        75: aload_0\n-        76: iload_2\n-        77: invokevirtual #112                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n-        80: invokevirtual #148                // Method org/apache/bcel/generic/Type.getSize:()I\n-        83: invokestatic  #162                // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n-        86: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: pop\n-        90: aload_1\n-        91: ldc           #168                // String )\\n\n-        93: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        96: pop\n-        97: iinc          2, 1\n-       100: goto          49\n+        49: goto          95\n+        52: aload_1\n+        53: aload_0\n+        54: iload_2\n+        55: invokevirtual #144                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+        58: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        61: pop\n+        62: aload_1\n+        63: ldc           #196                // String  (Size:\n+        65: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: pop\n+        69: aload_1\n+        70: aload_0\n+        71: iload_2\n+        72: invokevirtual #144                // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+        75: invokevirtual #182                // Method org/apache/bcel/generic/Type.getSize:()I\n+        78: invokestatic  #198                // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+        81: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        84: pop\n+        85: aload_1\n+        86: ldc           #204                // String )\\n\n+        88: invokevirtual #108                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        91: pop\n+        92: iinc          2, 1\n+        95: iload_2\n+        96: aload_0\n+        97: invokevirtual #92                 // Method size:()I\n+       100: if_icmplt     52\n        103: aload_1\n-       104: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       104: invokevirtual #111                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        107: areturn\n       LineNumberTable:\n         line 247: 0\n         line 248: 8\n         line 249: 15\n         line 250: 24\n         line 251: 31\n         line 252: 40\n         line 253: 47\n-        line 254: 57\n-        line 255: 67\n-        line 256: 74\n-        line 257: 90\n-        line 253: 97\n+        line 254: 52\n+        line 255: 62\n+        line 256: 69\n+        line 257: 85\n+        line 253: 92\n         line 259: 103\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           49      54     2     i   I\n             0     108     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             8     100     1    sb   Ljava/lang/StringBuilder;\n+           49      54     2     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 49\n+          offset_delta = 52\n           locals = [ class java/lang/StringBuilder, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 53\n+        frame_type = 42 /* same */\n }\n SourceFile: \"OperandStack.java\"\n"}]}
