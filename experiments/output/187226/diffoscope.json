{"diffoscope-json-version": 1, "source1": "first/TarArchiveSparseEntry.class", "source2": "second/TarArchiveSparseEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,149 @@\n-  SHA-256 checksum fa3a4c63a9537654064bfb1a1e867fe29f05746c7bf7773e89d2587f0df92337\n+  SHA-256 checksum 614d688a90cfce23449fdc266e844e24b4f17625813ca4e471383d60d53cf47e\n   Compiled from \"TarArchiveSparseEntry.java\"\n public class org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry implements org.apache.commons.compress.archivers.tar.TarConstants\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  super_class: #13                        // java/lang/Object\n+  this_class: #11                         // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#45        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #46            // java/util/ArrayList\n-   #3 = Methodref          #2.#45         // java/util/ArrayList.\"<init>\":()V\n-   #4 = Fieldref           #12.#47        // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.sparseHeaders:Ljava/util/List;\n-   #5 = Class              #48            // org/apache/commons/compress/archivers/tar/TarConstants\n-   #6 = Methodref          #49.#50        // org/apache/commons/compress/archivers/tar/TarUtils.parseSparse:([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n-   #7 = Methodref          #36.#51        // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n-   #8 = Methodref          #36.#52        // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n-   #9 = InterfaceMethodref #53.#54        // java/util/List.add:(Ljava/lang/Object;)Z\n-  #10 = Methodref          #49.#55        // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-  #11 = Fieldref           #12.#56        // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:Z\n-  #12 = Class              #57            // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  #13 = Class              #58            // java/lang/Object\n-  #14 = Utf8               isExtended\n-  #15 = Utf8               Z\n-  #16 = Utf8               sparseHeaders\n-  #17 = Utf8               Ljava/util/List;\n-  #18 = Utf8               Signature\n-  #19 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n-  #20 = Utf8               <init>\n-  #21 = Utf8               ([B)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               sparseHeader\n-  #26 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n-  #27 = Utf8               i\n-  #28 = Utf8               I\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n-  #31 = Utf8               headerBuf\n-  #32 = Utf8               [B\n-  #33 = Utf8               offset\n-  #34 = Utf8               StackMapTable\n-  #35 = Class              #32            // \"[B\"\n-  #36 = Class              #59            // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-  #37 = Utf8               Exceptions\n-  #38 = Class              #60            // java/io/IOException\n-  #39 = Utf8               ()Z\n-  #40 = Utf8               getSparseHeaders\n-  #41 = Utf8               ()Ljava/util/List;\n-  #42 = Utf8               ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n-  #43 = Utf8               SourceFile\n-  #44 = Utf8               TarArchiveSparseEntry.java\n-  #45 = NameAndType        #20:#61        // \"<init>\":()V\n-  #46 = Utf8               java/util/ArrayList\n-  #47 = NameAndType        #16:#17        // sparseHeaders:Ljava/util/List;\n-  #48 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n-  #49 = Class              #62            // org/apache/commons/compress/archivers/tar/TarUtils\n-  #50 = NameAndType        #63:#64        // parseSparse:([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n-  #51 = NameAndType        #65:#66        // getOffset:()J\n-  #52 = NameAndType        #67:#66        // getNumbytes:()J\n-  #53 = Class              #68            // java/util/List\n-  #54 = NameAndType        #69:#70        // add:(Ljava/lang/Object;)Z\n-  #55 = NameAndType        #71:#72        // parseBoolean:([BI)Z\n-  #56 = NameAndType        #14:#15        // isExtended:Z\n-  #57 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n-  #58 = Utf8               java/lang/Object\n-  #59 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n-  #60 = Utf8               java/io/IOException\n-  #61 = Utf8               ()V\n-  #62 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n-  #63 = Utf8               parseSparse\n-  #64 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n-  #65 = Utf8               getOffset\n-  #66 = Utf8               ()J\n-  #67 = Utf8               getNumbytes\n-  #68 = Utf8               java/util/List\n-  #69 = Utf8               add\n-  #70 = Utf8               (Ljava/lang/Object;)Z\n-  #71 = Utf8               parseBoolean\n-  #72 = Utf8               ([BI)Z\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/util/ArrayList\n+   #8 = Utf8               java/util/ArrayList\n+   #9 = Methodref          #7.#3          // java/util/ArrayList.\"<init>\":()V\n+  #10 = Fieldref           #11.#12        // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.sparseHeaders:Ljava/util/List;\n+  #11 = Class              #13            // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  #12 = NameAndType        #14:#15        // sparseHeaders:Ljava/util/List;\n+  #13 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry\n+  #14 = Utf8               sparseHeaders\n+  #15 = Utf8               Ljava/util/List;\n+  #16 = Class              #17            // org/apache/commons/compress/archivers/tar/TarConstants\n+  #17 = Utf8               org/apache/commons/compress/archivers/tar/TarConstants\n+  #18 = Methodref          #19.#20        // org/apache/commons/compress/archivers/tar/TarUtils.parseSparse:([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n+  #19 = Class              #21            // org/apache/commons/compress/archivers/tar/TarUtils\n+  #20 = NameAndType        #22:#23        // parseSparse:([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n+  #21 = Utf8               org/apache/commons/compress/archivers/tar/TarUtils\n+  #22 = Utf8               parseSparse\n+  #23 = Utf8               ([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n+  #24 = Methodref          #25.#26        // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+  #25 = Class              #27            // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+  #26 = NameAndType        #28:#29        // getOffset:()J\n+  #27 = Utf8               org/apache/commons/compress/archivers/tar/TarArchiveStructSparse\n+  #28 = Utf8               getOffset\n+  #29 = Utf8               ()J\n+  #30 = Methodref          #25.#31        // org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+  #31 = NameAndType        #32:#29        // getNumbytes:()J\n+  #32 = Utf8               getNumbytes\n+  #33 = InterfaceMethodref #34.#35        // java/util/List.add:(Ljava/lang/Object;)Z\n+  #34 = Class              #36            // java/util/List\n+  #35 = NameAndType        #37:#38        // add:(Ljava/lang/Object;)Z\n+  #36 = Utf8               java/util/List\n+  #37 = Utf8               add\n+  #38 = Utf8               (Ljava/lang/Object;)Z\n+  #39 = Methodref          #19.#40        // org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+  #40 = NameAndType        #41:#42        // parseBoolean:([BI)Z\n+  #41 = Utf8               parseBoolean\n+  #42 = Utf8               ([BI)Z\n+  #43 = Fieldref           #11.#44        // org/apache/commons/compress/archivers/tar/TarArchiveSparseEntry.isExtended:Z\n+  #44 = NameAndType        #45:#46        // isExtended:Z\n+  #45 = Utf8               isExtended\n+  #46 = Utf8               Z\n+  #47 = Utf8               Signature\n+  #48 = Utf8               Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+  #49 = Utf8               ([B)V\n+  #50 = Utf8               Code\n+  #51 = Utf8               LineNumberTable\n+  #52 = Utf8               LocalVariableTable\n+  #53 = Utf8               sparseHeader\n+  #54 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n+  #55 = Utf8               i\n+  #56 = Utf8               I\n+  #57 = Utf8               this\n+  #58 = Utf8               Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n+  #59 = Utf8               headerBuf\n+  #60 = Utf8               [B\n+  #61 = Utf8               offset\n+  #62 = Utf8               StackMapTable\n+  #63 = Class              #60            // \"[B\"\n+  #64 = Utf8               Exceptions\n+  #65 = Class              #66            // java/io/IOException\n+  #66 = Utf8               java/io/IOException\n+  #67 = Utf8               ()Z\n+  #68 = Utf8               getSparseHeaders\n+  #69 = Utf8               ()Ljava/util/List;\n+  #70 = Utf8               ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+  #71 = Utf8               SourceFile\n+  #72 = Utf8               TarArchiveSparseEntry.java\n {\n   private final boolean isExtended;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> sparseHeaders;\n     descriptor: Ljava/util/List;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #19                          // Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #48                          // Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n \n   public org.apache.commons.compress.archivers.tar.TarArchiveSparseEntry(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: iconst_0\n          5: istore_2\n          6: aload_0\n-         7: new           #2                  // class java/util/ArrayList\n+         7: new           #7                  // class java/util/ArrayList\n         10: dup\n-        11: invokespecial #3                  // Method java/util/ArrayList.\"<init>\":()V\n-        14: putfield      #4                  // Field sparseHeaders:Ljava/util/List;\n+        11: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n+        14: putfield      #10                 // Field sparseHeaders:Ljava/util/List;\n         17: iconst_0\n         18: istore_3\n         19: iload_3\n         20: bipush        21\n         22: if_icmpge     75\n         25: aload_1\n         26: iload_2\n         27: iload_3\n         28: bipush        24\n         30: imul\n         31: iadd\n-        32: invokestatic  #6                  // Method org/apache/commons/compress/archivers/tar/TarUtils.parseSparse:([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n+        32: invokestatic  #18                 // Method org/apache/commons/compress/archivers/tar/TarUtils.parseSparse:([BI)Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #7                  // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n+        39: invokevirtual #24                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getOffset:()J\n         42: lconst_0\n         43: lcmp\n         44: ifgt          57\n         47: aload         4\n-        49: invokevirtual #8                  // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n+        49: invokevirtual #30                 // Method org/apache/commons/compress/archivers/tar/TarArchiveStructSparse.getNumbytes:()J\n         52: lconst_0\n         53: lcmp\n         54: ifle          69\n         57: aload_0\n-        58: getfield      #4                  // Field sparseHeaders:Ljava/util/List;\n+        58: getfield      #10                 // Field sparseHeaders:Ljava/util/List;\n         61: aload         4\n-        63: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        63: invokeinterface #33,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         68: pop\n         69: iinc          3, 1\n         72: goto          19\n         75: iinc_w        2, 504\n         81: aload_0\n         82: aload_1\n         83: iload_2\n-        84: invokestatic  #10                 // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n-        87: putfield      #11                 // Field isExtended:Z\n+        84: invokestatic  #39                 // Method org/apache/commons/compress/archivers/tar/TarUtils.parseBoolean:([BI)Z\n+        87: putfield      #43                 // Field isExtended:Z\n         90: return\n       LineNumberTable:\n         line 58: 0\n         line 59: 4\n         line 60: 6\n         line 61: 17\n         line 62: 25\n@@ -177,31 +177,31 @@\n \n   public boolean isExtended();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field isExtended:Z\n+         1: getfield      #43                 // Field isExtended:Z\n          4: ireturn\n       LineNumberTable:\n         line 76: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n \n   public java.util.List<org.apache.commons.compress.archivers.tar.TarArchiveStructSparse> getSparseHeaders();\n     descriptor: ()Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field sparseHeaders:Ljava/util/List;\n+         1: getfield      #10                 // Field sparseHeaders:Ljava/util/List;\n          4: areturn\n       LineNumberTable:\n         line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/tar/TarArchiveSparseEntry;\n-    Signature: #42                          // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n+    Signature: #70                          // ()Ljava/util/List<Lorg/apache/commons/compress/archivers/tar/TarArchiveStructSparse;>;\n }\n SourceFile: \"TarArchiveSparseEntry.java\"\n"}]}
