{"diffoscope-json-version": 1, "source1": "first/SuppressWithNearbyCommentFilter$Tag.class", "source2": "second/SuppressWithNearbyCommentFilter$Tag.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -45,24 +45,24 @@\n             }\n             else {\n                 this.firstLine = line + influence;\n                 this.lastLine = line;\n             }\n         }\n         catch (final PatternSyntaxException ex) {\n-            throw new IllegalArgumentException(\"unable to parse expanded comment \" + format, (Throwable)ex);\n+            throw new IllegalArgumentException(\"unable to parse expanded comment \" + format, ex);\n         }\n     }\n     \n     private static int parseInfluence(final String format, final String influenceFormat, final String text) {\n         try {\n             return Integer.parseInt(format);\n         }\n         catch (final NumberFormatException ex) {\n-            throw new IllegalArgumentException(\"unable to parse influence from '\" + text + \"' using \" + influenceFormat, (Throwable)ex);\n+            throw new IllegalArgumentException(\"unable to parse influence from '\" + text + \"' using \" + influenceFormat, ex);\n         }\n     }\n     \n     @Override\n     public boolean equals(final Object other) {\n         if (this == other) {\n             return true;\n@@ -114,10 +114,10 @@\n             match = messageMatcher.find();\n         }\n         return match;\n     }\n     \n     @Override\n     public String toString() {\n-        return \"Tag[text='\" + this.text + \"', firstLine=\" + this.firstLine + \", lastLine=\" + this.lastLine + \", tagCheckRegexp=\" + this.tagCheckRegexp + \", tagMessageRegexp=\" + this.tagMessageRegexp + \", tagIdRegexp=\" + this.tagIdRegexp;\n+        return \"Tag[text='\" + this.text + '\\'' + \", firstLine=\" + this.firstLine + \", lastLine=\" + this.lastLine + \", tagCheckRegexp=\" + this.tagCheckRegexp + \", tagMessageRegexp=\" + this.tagMessageRegexp + \", tagIdRegexp=\" + this.tagIdRegexp + ']';\n     }\n }\n"}]}
