{"diffoscope-json-version": 1, "source1": "first/PercentCodec.class", "source2": "second/PercentCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,67 +1,67 @@\n-  SHA-256 checksum d0581e3443ade8d2167fc0b89c9bbe3c15fbcca866b6cb3596142562927e07f6\n+  SHA-256 checksum fd818001625e59b11c733bcc71dc071ea4980b4444d7db992fb3d45f58ec522d\n   Compiled from \"PercentCodec.java\"\n public class org.apache.commons.codec.net.PercentCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #12                         // org/apache/commons/codec/net/PercentCodec\n   super_class: #48                        // java/lang/Object\n   interfaces: 2, fields: 5, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #48.#117      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #12.#118      // org/apache/commons/codec/net/PercentCodec.ESCAPE_CHAR:B\n-    #3 = Class              #119          // java/util/BitSet\n-    #4 = Methodref          #3.#117       // java/util/BitSet.\"<init>\":()V\n-    #5 = Fieldref           #12.#120      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n-    #6 = Class              #121          // java/lang/Integer\n+    #1 = Methodref          #48.#115      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #12.#116      // org/apache/commons/codec/net/PercentCodec.ESCAPE_CHAR:B\n+    #3 = Class              #117          // java/util/BitSet\n+    #4 = Methodref          #3.#115       // java/util/BitSet.\"<init>\":()V\n+    #5 = Fieldref           #12.#118      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n+    #6 = Class              #119          // java/lang/Integer\n     #7 = Integer            2147483647\n-    #8 = Fieldref           #12.#122      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n+    #8 = Fieldref           #12.#120      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n     #9 = Integer            -2147483648\n-   #10 = Fieldref           #12.#123      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n-   #11 = Fieldref           #12.#124      // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n-   #12 = Class              #125          // org/apache/commons/codec/net/PercentCodec\n-   #13 = Methodref          #12.#126      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n-   #14 = Methodref          #12.#127      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n-   #15 = Methodref          #3.#128       // java/util/BitSet.set:(I)V\n-   #16 = Methodref          #12.#129      // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n-   #17 = Methodref          #12.#130      // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n-   #18 = Methodref          #12.#131      // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n-   #19 = Methodref          #132.#133     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #12.#134      // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n-   #21 = Methodref          #135.#136     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n-   #22 = Methodref          #132.#137     // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #23 = Methodref          #132.#138     // java/nio/ByteBuffer.array:()[B\n-   #24 = Methodref          #12.#139      // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n-   #25 = Methodref          #12.#140      // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n-   #26 = Methodref          #3.#141       // java/util/BitSet.get:(I)Z\n-   #27 = Methodref          #12.#142      // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n-   #28 = Methodref          #135.#143     // org/apache/commons/codec/net/Utils.digit16:(B)I\n-   #29 = Class              #144          // java/lang/ArrayIndexOutOfBoundsException\n-   #30 = Class              #145          // org/apache/commons/codec/DecoderException\n-   #31 = String             #146          // Invalid percent decoding:\n-   #32 = Methodref          #30.#147      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #10 = Fieldref           #12.#121      // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n+   #11 = Fieldref           #12.#122      // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n+   #12 = Class              #123          // org/apache/commons/codec/net/PercentCodec\n+   #13 = Methodref          #12.#124      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n+   #14 = Methodref          #12.#125      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n+   #15 = Methodref          #3.#126       // java/util/BitSet.set:(I)V\n+   #16 = Methodref          #12.#127      // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n+   #17 = Methodref          #12.#128      // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n+   #18 = Methodref          #12.#129      // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n+   #19 = Methodref          #93.#130      // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #20 = Methodref          #12.#131      // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n+   #21 = Methodref          #132.#133     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+   #22 = Methodref          #93.#134      // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #23 = Methodref          #93.#135      // java/nio/ByteBuffer.array:()[B\n+   #24 = Methodref          #12.#136      // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n+   #25 = Methodref          #12.#137      // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n+   #26 = Methodref          #3.#138       // java/util/BitSet.get:(I)Z\n+   #27 = Methodref          #12.#139      // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n+   #28 = Methodref          #132.#140     // org/apache/commons/codec/net/Utils.digit16:(B)I\n+   #29 = Class              #141          // java/lang/ArrayIndexOutOfBoundsException\n+   #30 = Class              #142          // org/apache/commons/codec/DecoderException\n+   #31 = String             #143          // Invalid percent decoding:\n+   #32 = Methodref          #30.#144      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n    #33 = Class              #70           // \"[B\"\n-   #34 = Methodref          #12.#148      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n-   #35 = Class              #149          // org/apache/commons/codec/EncoderException\n-   #36 = Class              #150          // java/lang/StringBuilder\n-   #37 = Methodref          #36.#117      // java/lang/StringBuilder.\"<init>\":()V\n-   #38 = String             #151          // Objects of type\n-   #39 = Methodref          #36.#152      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #48.#153      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #41 = Methodref          #154.#155     // java/lang/Class.getName:()Ljava/lang/String;\n-   #42 = String             #156          //  cannot be Percent encoded\n-   #43 = Methodref          #36.#157      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Methodref          #35.#158      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #12.#159      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n-   #46 = String             #160          //  cannot be Percent decoded\n-   #47 = Methodref          #30.#158      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #48 = Class              #161          // java/lang/Object\n-   #49 = Class              #162          // org/apache/commons/codec/BinaryEncoder\n-   #50 = Class              #163          // org/apache/commons/codec/BinaryDecoder\n+   #34 = Methodref          #12.#145      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n+   #35 = Class              #146          // org/apache/commons/codec/EncoderException\n+   #36 = Class              #147          // java/lang/StringBuilder\n+   #37 = Methodref          #36.#115      // java/lang/StringBuilder.\"<init>\":()V\n+   #38 = String             #148          // Objects of type\n+   #39 = Methodref          #36.#149      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #40 = Methodref          #48.#150      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #41 = Methodref          #151.#152     // java/lang/Class.getName:()Ljava/lang/String;\n+   #42 = String             #153          //  cannot be Percent encoded\n+   #43 = Methodref          #36.#154      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = Methodref          #35.#155      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #45 = Methodref          #12.#156      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n+   #46 = String             #157          //  cannot be Percent decoded\n+   #47 = Methodref          #30.#155      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #48 = Class              #158          // java/lang/Object\n+   #49 = Class              #159          // org/apache/commons/codec/BinaryEncoder\n+   #50 = Class              #160          // org/apache/commons/codec/BinaryDecoder\n    #51 = Utf8               ESCAPE_CHAR\n    #52 = Utf8               B\n    #53 = Utf8               ConstantValue\n    #54 = Integer            37\n    #55 = Utf8               alwaysEncodeChars\n    #56 = Utf8               Ljava/util/BitSet;\n    #57 = Utf8               plusForSpace\n@@ -96,111 +96,108 @@\n    #86 = Utf8               bb\n    #87 = Utf8               hex1\n    #88 = Utf8               C\n    #89 = Utf8               hex2\n    #90 = Utf8               expectedLength\n    #91 = Utf8               buffer\n    #92 = Utf8               Ljava/nio/ByteBuffer;\n-   #93 = Class              #125          // org/apache/commons/codec/net/PercentCodec\n-   #94 = Class              #164          // java/nio/ByteBuffer\n-   #95 = Utf8               ([B)I\n-   #96 = Utf8               byteCount\n-   #97 = Utf8               containsSpace\n-   #98 = Utf8               ([B)Z\n-   #99 = Utf8               canEncode\n-  #100 = Utf8               (B)Z\n-  #101 = Utf8               c\n-  #102 = Utf8               inAlwaysEncodeCharsRange\n-  #103 = Utf8               isAsciiChar\n-  #104 = Utf8               decode\n-  #105 = Utf8               u\n-  #106 = Utf8               l\n-  #107 = Utf8               e\n-  #108 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;\n-  #109 = Utf8               i\n-  #110 = Class              #144          // java/lang/ArrayIndexOutOfBoundsException\n-  #111 = Utf8               expectedDecodingBytes\n-  #112 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #113 = Utf8               obj\n-  #114 = Utf8               Ljava/lang/Object;\n-  #115 = Utf8               SourceFile\n-  #116 = Utf8               PercentCodec.java\n-  #117 = NameAndType        #62:#63       // \"<init>\":()V\n-  #118 = NameAndType        #51:#52       // ESCAPE_CHAR:B\n-  #119 = Utf8               java/util/BitSet\n-  #120 = NameAndType        #55:#56       // alwaysEncodeChars:Ljava/util/BitSet;\n-  #121 = Utf8               java/lang/Integer\n-  #122 = NameAndType        #59:#60       // alwaysEncodeCharsMin:I\n-  #123 = NameAndType        #61:#60       // alwaysEncodeCharsMax:I\n-  #124 = NameAndType        #57:#58       // plusForSpace:Z\n-  #125 = Utf8               org/apache/commons/codec/net/PercentCodec\n-  #126 = NameAndType        #76:#77       // insertAlwaysEncodeChar:(B)V\n-  #127 = NameAndType        #71:#72       // insertAlwaysEncodeChars:([B)V\n-  #128 = NameAndType        #165:#166     // set:(I)V\n-  #129 = NameAndType        #81:#95       // expectedEncodingBytes:([B)I\n-  #130 = NameAndType        #97:#98       // containsSpace:([B)Z\n-  #131 = NameAndType        #84:#85       // doEncode:([BIZ)[B\n-  #132 = Class              #164          // java/nio/ByteBuffer\n-  #133 = NameAndType        #167:#168     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #134 = NameAndType        #99:#100      // canEncode:(B)Z\n-  #135 = Class              #169          // org/apache/commons/codec/net/Utils\n-  #136 = NameAndType        #170:#171     // hexDigit:(I)C\n-  #137 = NameAndType        #172:#173     // put:(B)Ljava/nio/ByteBuffer;\n-  #138 = NameAndType        #174:#175     // array:()[B\n-  #139 = NameAndType        #103:#100     // isAsciiChar:(B)Z\n-  #140 = NameAndType        #102:#100     // inAlwaysEncodeCharsRange:(B)Z\n-  #141 = NameAndType        #176:#177     // get:(I)Z\n-  #142 = NameAndType        #111:#95      // expectedDecodingBytes:([B)I\n-  #143 = NameAndType        #178:#179     // digit16:(B)I\n-  #144 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-  #145 = Utf8               org/apache/commons/codec/DecoderException\n-  #146 = Utf8               Invalid percent decoding:\n-  #147 = NameAndType        #62:#180      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #148 = NameAndType        #78:#79       // encode:([B)[B\n-  #149 = Utf8               org/apache/commons/codec/EncoderException\n-  #150 = Utf8               java/lang/StringBuilder\n-  #151 = Utf8               Objects of type\n-  #152 = NameAndType        #181:#182     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #153 = NameAndType        #183:#184     // getClass:()Ljava/lang/Class;\n-  #154 = Class              #185          // java/lang/Class\n-  #155 = NameAndType        #186:#187     // getName:()Ljava/lang/String;\n-  #156 = Utf8                cannot be Percent encoded\n-  #157 = NameAndType        #188:#187     // toString:()Ljava/lang/String;\n-  #158 = NameAndType        #62:#189      // \"<init>\":(Ljava/lang/String;)V\n-  #159 = NameAndType        #104:#79      // decode:([B)[B\n-  #160 = Utf8                cannot be Percent decoded\n-  #161 = Utf8               java/lang/Object\n-  #162 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #163 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #164 = Utf8               java/nio/ByteBuffer\n-  #165 = Utf8               set\n-  #166 = Utf8               (I)V\n-  #167 = Utf8               allocate\n-  #168 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #169 = Utf8               org/apache/commons/codec/net/Utils\n-  #170 = Utf8               hexDigit\n-  #171 = Utf8               (I)C\n-  #172 = Utf8               put\n-  #173 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #174 = Utf8               array\n-  #175 = Utf8               ()[B\n-  #176 = Utf8               get\n-  #177 = Utf8               (I)Z\n-  #178 = Utf8               digit16\n-  #179 = Utf8               (B)I\n-  #180 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #181 = Utf8               append\n-  #182 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #183 = Utf8               getClass\n-  #184 = Utf8               ()Ljava/lang/Class;\n-  #185 = Utf8               java/lang/Class\n-  #186 = Utf8               getName\n-  #187 = Utf8               ()Ljava/lang/String;\n-  #188 = Utf8               toString\n-  #189 = Utf8               (Ljava/lang/String;)V\n+   #93 = Class              #161          // java/nio/ByteBuffer\n+   #94 = Utf8               ([B)I\n+   #95 = Utf8               byteCount\n+   #96 = Utf8               containsSpace\n+   #97 = Utf8               ([B)Z\n+   #98 = Utf8               canEncode\n+   #99 = Utf8               (B)Z\n+  #100 = Utf8               c\n+  #101 = Utf8               inAlwaysEncodeCharsRange\n+  #102 = Utf8               isAsciiChar\n+  #103 = Utf8               decode\n+  #104 = Utf8               u\n+  #105 = Utf8               l\n+  #106 = Utf8               e\n+  #107 = Utf8               Ljava/lang/ArrayIndexOutOfBoundsException;\n+  #108 = Utf8               i\n+  #109 = Utf8               expectedDecodingBytes\n+  #110 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #111 = Utf8               obj\n+  #112 = Utf8               Ljava/lang/Object;\n+  #113 = Utf8               SourceFile\n+  #114 = Utf8               PercentCodec.java\n+  #115 = NameAndType        #62:#63       // \"<init>\":()V\n+  #116 = NameAndType        #51:#52       // ESCAPE_CHAR:B\n+  #117 = Utf8               java/util/BitSet\n+  #118 = NameAndType        #55:#56       // alwaysEncodeChars:Ljava/util/BitSet;\n+  #119 = Utf8               java/lang/Integer\n+  #120 = NameAndType        #59:#60       // alwaysEncodeCharsMin:I\n+  #121 = NameAndType        #61:#60       // alwaysEncodeCharsMax:I\n+  #122 = NameAndType        #57:#58       // plusForSpace:Z\n+  #123 = Utf8               org/apache/commons/codec/net/PercentCodec\n+  #124 = NameAndType        #76:#77       // insertAlwaysEncodeChar:(B)V\n+  #125 = NameAndType        #71:#72       // insertAlwaysEncodeChars:([B)V\n+  #126 = NameAndType        #162:#163     // set:(I)V\n+  #127 = NameAndType        #81:#94       // expectedEncodingBytes:([B)I\n+  #128 = NameAndType        #96:#97       // containsSpace:([B)Z\n+  #129 = NameAndType        #84:#85       // doEncode:([BIZ)[B\n+  #130 = NameAndType        #164:#165     // allocate:(I)Ljava/nio/ByteBuffer;\n+  #131 = NameAndType        #98:#99       // canEncode:(B)Z\n+  #132 = Class              #166          // org/apache/commons/codec/net/Utils\n+  #133 = NameAndType        #167:#168     // hexDigit:(I)C\n+  #134 = NameAndType        #169:#170     // put:(B)Ljava/nio/ByteBuffer;\n+  #135 = NameAndType        #171:#172     // array:()[B\n+  #136 = NameAndType        #102:#99      // isAsciiChar:(B)Z\n+  #137 = NameAndType        #101:#99      // inAlwaysEncodeCharsRange:(B)Z\n+  #138 = NameAndType        #173:#174     // get:(I)Z\n+  #139 = NameAndType        #109:#94      // expectedDecodingBytes:([B)I\n+  #140 = NameAndType        #175:#176     // digit16:(B)I\n+  #141 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+  #142 = Utf8               org/apache/commons/codec/DecoderException\n+  #143 = Utf8               Invalid percent decoding:\n+  #144 = NameAndType        #62:#177      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #145 = NameAndType        #78:#79       // encode:([B)[B\n+  #146 = Utf8               org/apache/commons/codec/EncoderException\n+  #147 = Utf8               java/lang/StringBuilder\n+  #148 = Utf8               Objects of type\n+  #149 = NameAndType        #178:#179     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #150 = NameAndType        #180:#181     // getClass:()Ljava/lang/Class;\n+  #151 = Class              #182          // java/lang/Class\n+  #152 = NameAndType        #183:#184     // getName:()Ljava/lang/String;\n+  #153 = Utf8                cannot be Percent encoded\n+  #154 = NameAndType        #185:#184     // toString:()Ljava/lang/String;\n+  #155 = NameAndType        #62:#186      // \"<init>\":(Ljava/lang/String;)V\n+  #156 = NameAndType        #103:#79      // decode:([B)[B\n+  #157 = Utf8                cannot be Percent decoded\n+  #158 = Utf8               java/lang/Object\n+  #159 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #160 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #161 = Utf8               java/nio/ByteBuffer\n+  #162 = Utf8               set\n+  #163 = Utf8               (I)V\n+  #164 = Utf8               allocate\n+  #165 = Utf8               (I)Ljava/nio/ByteBuffer;\n+  #166 = Utf8               org/apache/commons/codec/net/Utils\n+  #167 = Utf8               hexDigit\n+  #168 = Utf8               (I)C\n+  #169 = Utf8               put\n+  #170 = Utf8               (B)Ljava/nio/ByteBuffer;\n+  #171 = Utf8               array\n+  #172 = Utf8               ()[B\n+  #173 = Utf8               get\n+  #174 = Utf8               (I)Z\n+  #175 = Utf8               digit16\n+  #176 = Utf8               (B)I\n+  #177 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #178 = Utf8               append\n+  #179 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = Utf8               getClass\n+  #181 = Utf8               ()Ljava/lang/Class;\n+  #182 = Utf8               java/lang/Class\n+  #183 = Utf8               getName\n+  #184 = Utf8               ()Ljava/lang/String;\n+  #185 = Utf8               toString\n+  #186 = Utf8               (Ljava/lang/String;)V\n {\n   private final byte ESCAPE_CHAR = 37;\n     descriptor: B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     ConstantValue: int 37\n \n   private final java.util.BitSet alwaysEncodeChars;\n@@ -968,97 +965,95 @@\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: instanceof    #33                 // class \"[B\"\n-        10: ifeq          25\n+        10: ifeq          22\n         13: aload_0\n         14: aload_1\n         15: checkcast     #33                 // class \"[B\"\n-        18: checkcast     #33                 // class \"[B\"\n-        21: invokevirtual #34                 // Method encode:([B)[B\n-        24: areturn\n-        25: new           #35                 // class org/apache/commons/codec/EncoderException\n-        28: dup\n-        29: new           #36                 // class java/lang/StringBuilder\n-        32: dup\n-        33: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        36: ldc           #38                 // String Objects of type\n-        38: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: aload_1\n-        42: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        45: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: ldc           #42                 // String  cannot be Percent encoded\n-        53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        56: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        59: invokespecial #44                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-        62: athrow\n+        18: invokevirtual #34                 // Method encode:([B)[B\n+        21: areturn\n+        22: new           #35                 // class org/apache/commons/codec/EncoderException\n+        25: dup\n+        26: new           #36                 // class java/lang/StringBuilder\n+        29: dup\n+        30: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #38                 // String Objects of type\n+        35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: aload_1\n+        39: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #42                 // String  cannot be Percent encoded\n+        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #44                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        59: athrow\n       LineNumberTable:\n         line 237: 0\n         line 238: 4\n         line 239: 6\n         line 240: 13\n-        line 242: 25\n+        line 242: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      63     0  this   Lorg/apache/commons/codec/net/PercentCodec;\n-            0      63     1   obj   Ljava/lang/Object;\n+            0      60     0  this   Lorg/apache/commons/codec/net/PercentCodec;\n+            0      60     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.EncoderException\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: instanceof    #33                 // class \"[B\"\n-        10: ifeq          25\n+        10: ifeq          22\n         13: aload_0\n         14: aload_1\n         15: checkcast     #33                 // class \"[B\"\n-        18: checkcast     #33                 // class \"[B\"\n-        21: invokevirtual #45                 // Method decode:([B)[B\n-        24: areturn\n-        25: new           #30                 // class org/apache/commons/codec/DecoderException\n-        28: dup\n-        29: new           #36                 // class java/lang/StringBuilder\n-        32: dup\n-        33: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        36: ldc           #38                 // String Objects of type\n-        38: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: aload_1\n-        42: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        45: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: ldc           #46                 // String  cannot be Percent decoded\n-        53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        56: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        59: invokespecial #47                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-        62: athrow\n+        18: invokevirtual #45                 // Method decode:([B)[B\n+        21: areturn\n+        22: new           #30                 // class org/apache/commons/codec/DecoderException\n+        25: dup\n+        26: new           #36                 // class java/lang/StringBuilder\n+        29: dup\n+        30: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #38                 // String Objects of type\n+        35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: aload_1\n+        39: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #46                 // String  cannot be Percent decoded\n+        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #47                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        59: athrow\n       LineNumberTable:\n         line 255: 0\n         line 256: 4\n         line 257: 6\n         line 258: 13\n-        line 260: 25\n+        line 260: 22\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      63     0  this   Lorg/apache/commons/codec/net/PercentCodec;\n-            0      63     1   obj   Ljava/lang/Object;\n+            0      60     0  this   Lorg/apache/commons/codec/net/PercentCodec;\n+            0      60     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.DecoderException\n }\n SourceFile: \"PercentCodec.java\"\n"}]}
