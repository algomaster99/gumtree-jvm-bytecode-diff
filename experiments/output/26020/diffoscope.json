{"diffoscope-json-version": 1, "source1": "first/MurmurHash3.class", "source2": "second/MurmurHash3.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,201 +1,201 @@\n-  SHA-256 checksum a02592bcb2a95b6a7cceecd38674ea8480e07989ea5f52a2837f127bfa63c1c9\n+  SHA-256 checksum 2171b188f403033ff2215b8660c9506bf23b3a5210b1c7381e92c54aad615eb6\n   Compiled from \"MurmurHash3.java\"\n public final class org.apache.commons.codec.digest.MurmurHash3\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/codec/digest/MurmurHash3\n-  super_class: #55                        // java/lang/Object\n+  this_class: #10                         // org/apache/commons/codec/digest/MurmurHash3\n+  super_class: #16                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 24, attributes: 2\n Constant pool:\n-    #1 = Class              #168          // java/lang/Long\n-    #2 = Class              #169          // java/lang/Byte\n-    #3 = Class              #170          // java/lang/Integer\n-    #4 = Class              #171          // java/lang/Short\n-    #5 = Methodref          #7.#172       // org/apache/commons/codec/digest/MurmurHash3.orBytes:(BBBB)I\n-    #6 = Methodref          #55.#173      // java/lang/Object.\"<init>\":()V\n-    #7 = Class              #174          // org/apache/commons/codec/digest/MurmurHash3\n-    #8 = Integer            104729\n-    #9 = Methodref          #7.#175       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JJI)I\n-   #10 = Methodref          #7.#176       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JI)I\n-   #11 = Methodref          #1.#177       // java/lang/Long.reverseBytes:(J)J\n-   #12 = Methodref          #7.#178       // org/apache/commons/codec/digest/MurmurHash3.mix32:(II)I\n-   #13 = Methodref          #7.#179       // org/apache/commons/codec/digest/MurmurHash3.fmix32:(II)I\n-   #14 = Methodref          #7.#180       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BIII)I\n-   #15 = Methodref          #181.#182     // java/lang/String.getBytes:()[B\n-   #16 = Methodref          #7.#183       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BII)I\n-   #17 = Integer            -862048943\n-   #18 = Methodref          #3.#184       // java/lang/Integer.rotateLeft:(II)I\n-   #19 = Integer            461845907\n-   #20 = Methodref          #7.#185       // org/apache/commons/codec/digest/MurmurHash3.hash64:([BIII)J\n-   #21 = Long               104729l\n-   #23 = Long               -8663945395140668459l\n-   #25 = Methodref          #1.#186       // java/lang/Long.rotateLeft:(JI)J\n-   #26 = Long               5545529020109919103l\n-   #28 = Long               5l\n-   #30 = Long               1390208809l\n-   #32 = Long               8l\n-   #34 = Methodref          #7.#187       // org/apache/commons/codec/digest/MurmurHash3.fmix64:(J)J\n-   #35 = Methodref          #3.#188       // java/lang/Integer.reverseBytes:(I)I\n-   #36 = Long               4294967295l\n-   #38 = Long               4l\n-   #40 = Long               255l\n-   #42 = Integer            65280\n-   #43 = Long               2l\n-   #45 = Methodref          #7.#189       // org/apache/commons/codec/digest/MurmurHash3.hash128:([BIII)[J\n-   #46 = Long               944331445l\n-   #48 = Integer            -430675100\n-   #49 = Integer            -2048144789\n-   #50 = Integer            -1028477387\n-   #51 = Long               -49064778989728563l\n-   #53 = Long               -4265267296055464877l\n-   #55 = Class              #190          // java/lang/Object\n-   #56 = Class              #191          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n-   #57 = Utf8               IncrementalHash32\n-   #58 = Utf8               InnerClasses\n-   #59 = Utf8               LONG_BYTES\n-   #60 = Utf8               I\n-   #61 = Utf8               ConstantValue\n-   #62 = Integer            8\n-   #63 = Utf8               INTEGER_BYTES\n-   #64 = Integer            4\n-   #65 = Utf8               SHORT_BYTES\n-   #66 = Integer            2\n-   #67 = Utf8               NULL_HASHCODE\n-   #68 = Utf8               J\n-   #69 = Long               2862933555777941757l\n-   #71 = Utf8               C1_32\n-   #72 = Utf8               C2_32\n-   #73 = Utf8               R1_32\n-   #74 = Integer            15\n-   #75 = Utf8               R2_32\n-   #76 = Integer            13\n-   #77 = Utf8               M_32\n-   #78 = Integer            5\n-   #79 = Utf8               N_32\n-   #80 = Utf8               C1\n-   #81 = Utf8               C2\n-   #82 = Utf8               R1\n-   #83 = Integer            31\n-   #84 = Utf8               R2\n-   #85 = Integer            27\n-   #86 = Utf8               R3\n-   #87 = Integer            33\n-   #88 = Utf8               M\n-   #89 = Utf8               N1\n-   #90 = Integer            1390208809\n-   #91 = Utf8               N2\n-   #92 = Integer            944331445\n-   #93 = Utf8               DEFAULT_SEED\n-   #94 = Utf8               <init>\n-   #95 = Utf8               ()V\n-   #96 = Utf8               Code\n-   #97 = Utf8               LineNumberTable\n-   #98 = Utf8               LocalVariableTable\n-   #99 = Utf8               this\n-  #100 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash3;\n-  #101 = Utf8               hash32\n-  #102 = Utf8               (JJ)I\n-  #103 = Utf8               l0\n-  #104 = Utf8               l1\n-  #105 = Utf8               (J)I\n-  #106 = Utf8               (JI)I\n-  #107 = Utf8               seed\n-  #108 = Utf8               hash\n-  #109 = Utf8               r0\n-  #110 = Utf8               (JJI)I\n-  #111 = Utf8               r1\n-  #112 = Utf8               ([B)I\n-  #113 = Utf8               data\n-  #114 = Utf8               [B\n-  #115 = Utf8               (Ljava/lang/String;)I\n-  #116 = Utf8               Ljava/lang/String;\n-  #117 = Utf8               origin\n-  #118 = Utf8               ([BI)I\n-  #119 = Utf8               length\n-  #120 = Utf8               ([BII)I\n-  #121 = Utf8               ([BIII)I\n-  #122 = Utf8               i_4\n-  #123 = Utf8               k\n-  #124 = Utf8               i\n-  #125 = Utf8               offset\n-  #126 = Utf8               nblocks\n-  #127 = Utf8               idx\n-  #128 = Utf8               k1\n-  #129 = Utf8               StackMapTable\n-  #130 = Utf8               hash64\n-  #131 = Utf8               ([B)J\n-  #132 = Utf8               (J)J\n-  #133 = Utf8               (I)J\n-  #134 = Utf8               (S)J\n-  #135 = Utf8               S\n-  #136 = Utf8               ([BII)J\n-  #137 = Utf8               ([BIII)J\n-  #138 = Utf8               i8\n-  #139 = Utf8               tailStart\n-  #140 = Utf8               hash128\n-  #141 = Utf8               ([B)[J\n-  #142 = Utf8               (Ljava/lang/String;)[J\n-  #143 = Utf8               ([BIII)[J\n-  #144 = Utf8               i16\n-  #145 = Utf8               k2\n-  #146 = Utf8               h1\n-  #147 = Utf8               h2\n-  #148 = Class              #114          // \"[B\"\n-  #149 = Utf8               mix32\n-  #150 = Utf8               (II)I\n-  #151 = Utf8               fmix32\n-  #152 = Utf8               fmix64\n-  #153 = Utf8               h\n-  #154 = Utf8               orBytes\n-  #155 = Utf8               (BBBB)I\n-  #156 = Utf8               b1\n-  #157 = Utf8               B\n-  #158 = Utf8               b2\n-  #159 = Utf8               b3\n-  #160 = Utf8               b4\n-  #161 = Utf8               access$000\n-  #162 = Utf8               x0\n-  #163 = Utf8               x1\n-  #164 = Utf8               x2\n-  #165 = Utf8               x3\n-  #166 = Utf8               SourceFile\n-  #167 = Utf8               MurmurHash3.java\n-  #168 = Utf8               java/lang/Long\n-  #169 = Utf8               java/lang/Byte\n-  #170 = Utf8               java/lang/Integer\n-  #171 = Utf8               java/lang/Short\n-  #172 = NameAndType        #154:#155     // orBytes:(BBBB)I\n-  #173 = NameAndType        #94:#95       // \"<init>\":()V\n-  #174 = Utf8               org/apache/commons/codec/digest/MurmurHash3\n-  #175 = NameAndType        #101:#110     // hash32:(JJI)I\n-  #176 = NameAndType        #101:#106     // hash32:(JI)I\n-  #177 = NameAndType        #192:#132     // reverseBytes:(J)J\n-  #178 = NameAndType        #149:#150     // mix32:(II)I\n-  #179 = NameAndType        #151:#150     // fmix32:(II)I\n-  #180 = NameAndType        #101:#121     // hash32:([BIII)I\n-  #181 = Class              #193          // java/lang/String\n-  #182 = NameAndType        #194:#195     // getBytes:()[B\n-  #183 = NameAndType        #101:#120     // hash32:([BII)I\n-  #184 = NameAndType        #196:#150     // rotateLeft:(II)I\n-  #185 = NameAndType        #130:#137     // hash64:([BIII)J\n-  #186 = NameAndType        #196:#197     // rotateLeft:(JI)J\n-  #187 = NameAndType        #152:#132     // fmix64:(J)J\n-  #188 = NameAndType        #192:#198     // reverseBytes:(I)I\n-  #189 = NameAndType        #140:#143     // hash128:([BIII)[J\n-  #190 = Utf8               java/lang/Object\n-  #191 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n-  #192 = Utf8               reverseBytes\n-  #193 = Utf8               java/lang/String\n-  #194 = Utf8               getBytes\n-  #195 = Utf8               ()[B\n-  #196 = Utf8               rotateLeft\n-  #197 = Utf8               (JI)J\n-  #198 = Utf8               (I)I\n+    #1 = Class              #2            // java/lang/Long\n+    #2 = Utf8               java/lang/Long\n+    #3 = Class              #4            // java/lang/Byte\n+    #4 = Utf8               java/lang/Byte\n+    #5 = Class              #6            // java/lang/Integer\n+    #6 = Utf8               java/lang/Integer\n+    #7 = Class              #8            // java/lang/Short\n+    #8 = Utf8               java/lang/Short\n+    #9 = Methodref          #10.#11       // org/apache/commons/codec/digest/MurmurHash3.orBytes:(BBBB)I\n+   #10 = Class              #12           // org/apache/commons/codec/digest/MurmurHash3\n+   #11 = NameAndType        #13:#14       // orBytes:(BBBB)I\n+   #12 = Utf8               org/apache/commons/codec/digest/MurmurHash3\n+   #13 = Utf8               orBytes\n+   #14 = Utf8               (BBBB)I\n+   #15 = Methodref          #16.#17       // java/lang/Object.\"<init>\":()V\n+   #16 = Class              #18           // java/lang/Object\n+   #17 = NameAndType        #19:#20       // \"<init>\":()V\n+   #18 = Utf8               java/lang/Object\n+   #19 = Utf8               <init>\n+   #20 = Utf8               ()V\n+   #21 = Integer            104729\n+   #22 = Methodref          #10.#23       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JJI)I\n+   #23 = NameAndType        #24:#25       // hash32:(JJI)I\n+   #24 = Utf8               hash32\n+   #25 = Utf8               (JJI)I\n+   #26 = Methodref          #10.#27       // org/apache/commons/codec/digest/MurmurHash3.hash32:(JI)I\n+   #27 = NameAndType        #24:#28       // hash32:(JI)I\n+   #28 = Utf8               (JI)I\n+   #29 = Methodref          #1.#30        // java/lang/Long.reverseBytes:(J)J\n+   #30 = NameAndType        #31:#32       // reverseBytes:(J)J\n+   #31 = Utf8               reverseBytes\n+   #32 = Utf8               (J)J\n+   #33 = Methodref          #10.#34       // org/apache/commons/codec/digest/MurmurHash3.mix32:(II)I\n+   #34 = NameAndType        #35:#36       // mix32:(II)I\n+   #35 = Utf8               mix32\n+   #36 = Utf8               (II)I\n+   #37 = Methodref          #10.#38       // org/apache/commons/codec/digest/MurmurHash3.fmix32:(II)I\n+   #38 = NameAndType        #39:#36       // fmix32:(II)I\n+   #39 = Utf8               fmix32\n+   #40 = Methodref          #10.#41       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BIII)I\n+   #41 = NameAndType        #24:#42       // hash32:([BIII)I\n+   #42 = Utf8               ([BIII)I\n+   #43 = Methodref          #44.#45       // java/lang/String.getBytes:()[B\n+   #44 = Class              #46           // java/lang/String\n+   #45 = NameAndType        #47:#48       // getBytes:()[B\n+   #46 = Utf8               java/lang/String\n+   #47 = Utf8               getBytes\n+   #48 = Utf8               ()[B\n+   #49 = Methodref          #10.#50       // org/apache/commons/codec/digest/MurmurHash3.hash32:([BII)I\n+   #50 = NameAndType        #24:#51       // hash32:([BII)I\n+   #51 = Utf8               ([BII)I\n+   #52 = Integer            -862048943\n+   #53 = Methodref          #5.#54        // java/lang/Integer.rotateLeft:(II)I\n+   #54 = NameAndType        #55:#36       // rotateLeft:(II)I\n+   #55 = Utf8               rotateLeft\n+   #56 = Integer            461845907\n+   #57 = Methodref          #10.#58       // org/apache/commons/codec/digest/MurmurHash3.hash64:([BIII)J\n+   #58 = NameAndType        #59:#60       // hash64:([BIII)J\n+   #59 = Utf8               hash64\n+   #60 = Utf8               ([BIII)J\n+   #61 = Long               104729l\n+   #63 = Long               -8663945395140668459l\n+   #65 = Methodref          #1.#66        // java/lang/Long.rotateLeft:(JI)J\n+   #66 = NameAndType        #55:#67       // rotateLeft:(JI)J\n+   #67 = Utf8               (JI)J\n+   #68 = Long               5545529020109919103l\n+   #70 = Long               5l\n+   #72 = Long               1390208809l\n+   #74 = Long               8l\n+   #76 = Methodref          #10.#77       // org/apache/commons/codec/digest/MurmurHash3.fmix64:(J)J\n+   #77 = NameAndType        #78:#32       // fmix64:(J)J\n+   #78 = Utf8               fmix64\n+   #79 = Methodref          #5.#80        // java/lang/Integer.reverseBytes:(I)I\n+   #80 = NameAndType        #31:#81       // reverseBytes:(I)I\n+   #81 = Utf8               (I)I\n+   #82 = Long               4294967295l\n+   #84 = Long               4l\n+   #86 = Long               255l\n+   #88 = Integer            65280\n+   #89 = Long               2l\n+   #91 = Methodref          #10.#92       // org/apache/commons/codec/digest/MurmurHash3.hash128:([BIII)[J\n+   #92 = NameAndType        #93:#94       // hash128:([BIII)[J\n+   #93 = Utf8               hash128\n+   #94 = Utf8               ([BIII)[J\n+   #95 = Long               944331445l\n+   #97 = Integer            -430675100\n+   #98 = Integer            -2048144789\n+   #99 = Integer            -1028477387\n+  #100 = Long               -49064778989728563l\n+  #102 = Long               -4265267296055464877l\n+  #104 = Utf8               LONG_BYTES\n+  #105 = Utf8               I\n+  #106 = Utf8               ConstantValue\n+  #107 = Integer            8\n+  #108 = Utf8               INTEGER_BYTES\n+  #109 = Integer            4\n+  #110 = Utf8               SHORT_BYTES\n+  #111 = Integer            2\n+  #112 = Utf8               NULL_HASHCODE\n+  #113 = Utf8               J\n+  #114 = Long               2862933555777941757l\n+  #116 = Utf8               C1_32\n+  #117 = Utf8               C2_32\n+  #118 = Utf8               R1_32\n+  #119 = Integer            15\n+  #120 = Utf8               R2_32\n+  #121 = Integer            13\n+  #122 = Utf8               M_32\n+  #123 = Integer            5\n+  #124 = Utf8               N_32\n+  #125 = Utf8               C1\n+  #126 = Utf8               C2\n+  #127 = Utf8               R1\n+  #128 = Integer            31\n+  #129 = Utf8               R2\n+  #130 = Integer            27\n+  #131 = Utf8               R3\n+  #132 = Integer            33\n+  #133 = Utf8               M\n+  #134 = Utf8               N1\n+  #135 = Integer            1390208809\n+  #136 = Utf8               N2\n+  #137 = Integer            944331445\n+  #138 = Utf8               DEFAULT_SEED\n+  #139 = Utf8               Code\n+  #140 = Utf8               LineNumberTable\n+  #141 = Utf8               LocalVariableTable\n+  #142 = Utf8               this\n+  #143 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash3;\n+  #144 = Utf8               (JJ)I\n+  #145 = Utf8               l0\n+  #146 = Utf8               l1\n+  #147 = Utf8               (J)I\n+  #148 = Utf8               seed\n+  #149 = Utf8               hash\n+  #150 = Utf8               r0\n+  #151 = Utf8               r1\n+  #152 = Utf8               ([B)I\n+  #153 = Utf8               data\n+  #154 = Utf8               [B\n+  #155 = Utf8               (Ljava/lang/String;)I\n+  #156 = Utf8               Ljava/lang/String;\n+  #157 = Utf8               origin\n+  #158 = Utf8               ([BI)I\n+  #159 = Utf8               length\n+  #160 = Utf8               i_4\n+  #161 = Utf8               k\n+  #162 = Utf8               i\n+  #163 = Utf8               offset\n+  #164 = Utf8               nblocks\n+  #165 = Utf8               idx\n+  #166 = Utf8               k1\n+  #167 = Utf8               StackMapTable\n+  #168 = Utf8               ([B)J\n+  #169 = Utf8               (I)J\n+  #170 = Utf8               (S)J\n+  #171 = Utf8               S\n+  #172 = Utf8               ([BII)J\n+  #173 = Utf8               i8\n+  #174 = Utf8               tailStart\n+  #175 = Utf8               ([B)[J\n+  #176 = Utf8               (Ljava/lang/String;)[J\n+  #177 = Utf8               i16\n+  #178 = Utf8               k2\n+  #179 = Utf8               h1\n+  #180 = Utf8               h2\n+  #181 = Class              #154          // \"[B\"\n+  #182 = Utf8               h\n+  #183 = Utf8               b1\n+  #184 = Utf8               B\n+  #185 = Utf8               b2\n+  #186 = Utf8               b3\n+  #187 = Utf8               b4\n+  #188 = Utf8               access$000\n+  #189 = Utf8               x0\n+  #190 = Utf8               x1\n+  #191 = Utf8               x2\n+  #192 = Utf8               x3\n+  #193 = Utf8               SourceFile\n+  #194 = Utf8               MurmurHash3.java\n+  #195 = Utf8               InnerClasses\n+  #196 = Class              #197          // org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n+  #197 = Utf8               org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32\n+  #198 = Utf8               IncrementalHash32\n {\n   static final int LONG_BYTES = 8;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8\n \n   static final int INTEGER_BYTES = 4;\n@@ -290,15 +290,15 @@\n \n   private org.apache.commons.codec.digest.MurmurHash3();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #6                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/digest/MurmurHash3;\n@@ -306,32 +306,32 @@\n   public static int hash32(long, long);\n     descriptor: (JJ)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=4, args_size=2\n          0: lload_0\n          1: lload_2\n-         2: ldc           #8                  // int 104729\n-         4: invokestatic  #9                  // Method hash32:(JJI)I\n+         2: ldc           #21                 // int 104729\n+         4: invokestatic  #22                 // Method hash32:(JJI)I\n          7: ireturn\n       LineNumberTable:\n         line 90: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0    l0   J\n             0       8     2    l1   J\n \n   public static int hash32(long);\n     descriptor: (J)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: lload_0\n-         1: ldc           #8                  // int 104729\n-         3: invokestatic  #10                 // Method hash32:(JI)I\n+         1: ldc           #21                 // int 104729\n+         3: invokestatic  #26                 // Method hash32:(JI)I\n          6: ireturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0    l0   J\n \n@@ -339,31 +339,31 @@\n     descriptor: (JI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: iload_2\n          1: istore_3\n          2: lload_0\n-         3: invokestatic  #11                 // Method java/lang/Long.reverseBytes:(J)J\n+         3: invokestatic  #29                 // Method java/lang/Long.reverseBytes:(J)J\n          6: lstore        4\n          8: lload         4\n         10: l2i\n         11: iload_3\n-        12: invokestatic  #12                 // Method mix32:(II)I\n+        12: invokestatic  #33                 // Method mix32:(II)I\n         15: istore_3\n         16: lload         4\n         18: bipush        32\n         20: lushr\n         21: l2i\n         22: iload_3\n-        23: invokestatic  #12                 // Method mix32:(II)I\n+        23: invokestatic  #33                 // Method mix32:(II)I\n         26: istore_3\n         27: bipush        8\n         29: iload_3\n-        30: invokestatic  #13                 // Method fmix32:(II)I\n+        30: invokestatic  #37                 // Method fmix32:(II)I\n         33: ireturn\n       LineNumberTable:\n         line 111: 0\n         line 112: 2\n         line 114: 8\n         line 115: 16\n         line 117: 27\n@@ -378,46 +378,46 @@\n     descriptor: (JJI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=10, args_size=3\n          0: iload         4\n          2: istore        5\n          4: lload_0\n-         5: invokestatic  #11                 // Method java/lang/Long.reverseBytes:(J)J\n+         5: invokestatic  #29                 // Method java/lang/Long.reverseBytes:(J)J\n          8: lstore        6\n         10: lload_2\n-        11: invokestatic  #11                 // Method java/lang/Long.reverseBytes:(J)J\n+        11: invokestatic  #29                 // Method java/lang/Long.reverseBytes:(J)J\n         14: lstore        8\n         16: lload         6\n         18: l2i\n         19: iload         5\n-        21: invokestatic  #12                 // Method mix32:(II)I\n+        21: invokestatic  #33                 // Method mix32:(II)I\n         24: istore        5\n         26: lload         6\n         28: bipush        32\n         30: lushr\n         31: l2i\n         32: iload         5\n-        34: invokestatic  #12                 // Method mix32:(II)I\n+        34: invokestatic  #33                 // Method mix32:(II)I\n         37: istore        5\n         39: lload         8\n         41: l2i\n         42: iload         5\n-        44: invokestatic  #12                 // Method mix32:(II)I\n+        44: invokestatic  #33                 // Method mix32:(II)I\n         47: istore        5\n         49: lload         8\n         51: bipush        32\n         53: lushr\n         54: l2i\n         55: iload         5\n-        57: invokestatic  #12                 // Method mix32:(II)I\n+        57: invokestatic  #33                 // Method mix32:(II)I\n         60: istore        5\n         62: bipush        16\n         64: iload         5\n-        66: invokestatic  #13                 // Method fmix32:(II)I\n+        66: invokestatic  #37                 // Method fmix32:(II)I\n         69: ireturn\n       LineNumberTable:\n         line 129: 0\n         line 130: 4\n         line 131: 10\n         line 133: 16\n         line 134: 26\n@@ -438,37 +438,37 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #8                  // int 104729\n-         6: invokestatic  #14                 // Method hash32:([BIII)I\n+         4: ldc           #21                 // int 104729\n+         6: invokestatic  #40                 // Method hash32:([BIII)I\n          9: ireturn\n       LineNumberTable:\n         line 148: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n \n   public static int hash32(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #15                 // Method java/lang/String.getBytes:()[B\n+         1: invokevirtual #43                 // Method java/lang/String.getBytes:()[B\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_1\n          8: arraylength\n-         9: ldc           #8                  // int 104729\n-        11: invokestatic  #14                 // Method hash32:([BIII)I\n+         9: ldc           #21                 // int 104729\n+        11: invokestatic  #40                 // Method hash32:([BIII)I\n         14: ireturn\n       LineNumberTable:\n         line 158: 0\n         line 159: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  data   Ljava/lang/String;\n@@ -477,16 +477,16 @@\n   public static int hash32(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #8                  // int 104729\n-         4: invokestatic  #16                 // Method hash32:([BII)I\n+         2: ldc           #21                 // int 104729\n+         4: invokestatic  #49                 // Method hash32:([BII)I\n          7: ireturn\n       LineNumberTable:\n         line 170: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n@@ -496,15 +496,15 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iconst_0\n          2: iload_1\n          3: iload_2\n-         4: invokestatic  #14                 // Method hash32:([BIII)I\n+         4: invokestatic  #40                 // Method hash32:([BIII)I\n          7: ireturn\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n@@ -572,15 +572,15 @@\n         77: iand\n         78: bipush        24\n         80: ishl\n         81: ior\n         82: istore        8\n         84: iload         8\n         86: iload         4\n-        88: invokestatic  #12                 // Method mix32:(II)I\n+        88: invokestatic  #33                 // Method mix32:(II)I\n         91: istore        4\n         93: iinc          6, 1\n         96: goto          11\n         99: iload         5\n        101: iconst_2\n        102: ishl\n        103: istore        6\n@@ -624,32 +624,32 @@\n        175: iload_1\n        176: iload         6\n        178: iadd\n        179: baload\n        180: ixor\n        181: istore        7\n        183: iload         7\n-       185: ldc           #17                 // int -862048943\n+       185: ldc           #52                 // int -862048943\n        187: imul\n        188: istore        7\n        190: iload         7\n        192: bipush        15\n-       194: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I\n+       194: invokestatic  #53                 // Method java/lang/Integer.rotateLeft:(II)I\n        197: istore        7\n        199: iload         7\n-       201: ldc           #19                 // int 461845907\n+       201: ldc           #56                 // int 461845907\n        203: imul\n        204: istore        7\n        206: iload         4\n        208: iload         7\n        210: ixor\n        211: istore        4\n        213: iload_2\n        214: iload         4\n-       216: invokestatic  #13                 // Method fmix32:(II)I\n+       216: invokestatic  #37                 // Method fmix32:(II)I\n        219: ireturn\n       LineNumberTable:\n         line 195: 0\n         line 196: 3\n         line 199: 8\n         line 200: 18\n         line 201: 24\n@@ -697,65 +697,65 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #8                  // int 104729\n-         6: invokestatic  #20                 // Method hash64:([BIII)J\n+         4: ldc           #21                 // int 104729\n+         6: invokestatic  #57                 // Method hash64:([BIII)J\n          9: lreturn\n       LineNumberTable:\n         line 236: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n \n   public static long hash64(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=7, args_size=1\n-         0: ldc2_w        #21                 // long 104729l\n+         0: ldc2_w        #61                 // long 104729l\n          3: lstore_2\n          4: lload_0\n-         5: invokestatic  #11                 // Method java/lang/Long.reverseBytes:(J)J\n+         5: invokestatic  #29                 // Method java/lang/Long.reverseBytes:(J)J\n          8: lstore        4\n         10: bipush        8\n         12: istore        6\n         14: lload         4\n-        16: ldc2_w        #23                 // long -8663945395140668459l\n+        16: ldc2_w        #63                 // long -8663945395140668459l\n         19: lmul\n         20: lstore        4\n         22: lload         4\n         24: bipush        31\n-        26: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+        26: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n         29: lstore        4\n         31: lload         4\n-        33: ldc2_w        #26                 // long 5545529020109919103l\n+        33: ldc2_w        #68                 // long 5545529020109919103l\n         36: lmul\n         37: lstore        4\n         39: lload_2\n         40: lload         4\n         42: lxor\n         43: lstore_2\n         44: lload_2\n         45: bipush        27\n-        47: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n-        50: ldc2_w        #28                 // long 5l\n+        47: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+        50: ldc2_w        #70                 // long 5l\n         53: lmul\n-        54: ldc2_w        #30                 // long 1390208809l\n+        54: ldc2_w        #72                 // long 1390208809l\n         57: ladd\n         58: lstore_2\n         59: lload_2\n-        60: ldc2_w        #32                 // long 8l\n+        60: ldc2_w        #74                 // long 8l\n         63: lxor\n         64: lstore_2\n         65: lload_2\n-        66: invokestatic  #34                 // Method fmix64:(J)J\n+        66: invokestatic  #76                 // Method fmix64:(J)J\n         69: lstore_2\n         70: lload_2\n         71: lreturn\n       LineNumberTable:\n         line 247: 0\n         line 248: 4\n         line 249: 10\n@@ -776,45 +776,45 @@\n \n   public static long hash64(int);\n     descriptor: (I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=1\n          0: iload_0\n-         1: invokestatic  #35                 // Method java/lang/Integer.reverseBytes:(I)I\n+         1: invokestatic  #79                 // Method java/lang/Integer.reverseBytes:(I)I\n          4: i2l\n-         5: ldc2_w        #36                 // long 4294967295l\n+         5: ldc2_w        #82                 // long 4294967295l\n          8: land\n          9: lstore_1\n         10: iconst_4\n         11: istore_3\n-        12: ldc2_w        #21                 // long 104729l\n+        12: ldc2_w        #61                 // long 104729l\n         15: lstore        4\n         17: lload_1\n-        18: ldc2_w        #23                 // long -8663945395140668459l\n+        18: ldc2_w        #63                 // long -8663945395140668459l\n         21: lmul\n         22: lstore_1\n         23: lload_1\n         24: bipush        31\n-        26: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+        26: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n         29: lstore_1\n         30: lload_1\n-        31: ldc2_w        #26                 // long 5545529020109919103l\n+        31: ldc2_w        #68                 // long 5545529020109919103l\n         34: lmul\n         35: lstore_1\n         36: lload         4\n         38: lload_1\n         39: lxor\n         40: lstore        4\n         42: lload         4\n-        44: ldc2_w        #38                 // long 4l\n+        44: ldc2_w        #84                 // long 4l\n         47: lxor\n         48: lstore        4\n         50: lload         4\n-        52: invokestatic  #34                 // Method fmix64:(J)J\n+        52: invokestatic  #76                 // Method fmix64:(J)J\n         55: lstore        4\n         57: lload         4\n         59: lreturn\n       LineNumberTable:\n         line 270: 0\n         line 271: 10\n         line 272: 12\n@@ -833,60 +833,60 @@\n            17      43     4  hash   J\n \n   public static long hash64(short);\n     descriptor: (S)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=5, args_size=1\n-         0: ldc2_w        #21                 // long 104729l\n+         0: ldc2_w        #61                 // long 104729l\n          3: lstore_1\n          4: lconst_0\n          5: lstore_3\n          6: lload_3\n          7: iload_0\n          8: i2l\n-         9: ldc2_w        #40                 // long 255l\n+         9: ldc2_w        #86                 // long 255l\n         12: land\n         13: bipush        8\n         15: lshl\n         16: lxor\n         17: lstore_3\n         18: lload_3\n         19: iload_0\n-        20: ldc           #42                 // int 65280\n+        20: ldc           #88                 // int 65280\n         22: iand\n         23: bipush        8\n         25: ishr\n         26: i2l\n-        27: ldc2_w        #40                 // long 255l\n+        27: ldc2_w        #86                 // long 255l\n         30: land\n         31: lxor\n         32: lstore_3\n         33: lload_3\n-        34: ldc2_w        #23                 // long -8663945395140668459l\n+        34: ldc2_w        #63                 // long -8663945395140668459l\n         37: lmul\n         38: lstore_3\n         39: lload_3\n         40: bipush        31\n-        42: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+        42: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n         45: lstore_3\n         46: lload_3\n-        47: ldc2_w        #26                 // long 5545529020109919103l\n+        47: ldc2_w        #68                 // long 5545529020109919103l\n         50: lmul\n         51: lstore_3\n         52: lload_1\n         53: lload_3\n         54: lxor\n         55: lstore_1\n         56: lload_1\n-        57: ldc2_w        #43                 // long 2l\n+        57: ldc2_w        #89                 // long 2l\n         60: lxor\n         61: lstore_1\n         62: lload_1\n-        63: invokestatic  #34                 // Method fmix64:(J)J\n+        63: invokestatic  #76                 // Method fmix64:(J)J\n         66: lstore_1\n         67: lload_1\n         68: lreturn\n       LineNumberTable:\n         line 291: 0\n         line 292: 4\n         line 293: 6\n@@ -908,16 +908,16 @@\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n-         3: ldc           #8                  // int 104729\n-         5: invokestatic  #20                 // Method hash64:([BIII)J\n+         3: ldc           #21                 // int 104729\n+         5: invokestatic  #57                 // Method hash64:([BIII)J\n          8: lreturn\n       LineNumberTable:\n         line 316: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  data   [B\n             0       9     1 offset   I\n@@ -946,130 +946,130 @@\n         23: istore        8\n         25: aload_0\n         26: iload_1\n         27: iload         8\n         29: iadd\n         30: baload\n         31: i2l\n-        32: ldc2_w        #40                 // long 255l\n+        32: ldc2_w        #86                 // long 255l\n         35: land\n         36: aload_0\n         37: iload_1\n         38: iload         8\n         40: iadd\n         41: iconst_1\n         42: iadd\n         43: baload\n         44: i2l\n-        45: ldc2_w        #40                 // long 255l\n+        45: ldc2_w        #86                 // long 255l\n         48: land\n         49: bipush        8\n         51: lshl\n         52: lor\n         53: aload_0\n         54: iload_1\n         55: iload         8\n         57: iadd\n         58: iconst_2\n         59: iadd\n         60: baload\n         61: i2l\n-        62: ldc2_w        #40                 // long 255l\n+        62: ldc2_w        #86                 // long 255l\n         65: land\n         66: bipush        16\n         68: lshl\n         69: lor\n         70: aload_0\n         71: iload_1\n         72: iload         8\n         74: iadd\n         75: iconst_3\n         76: iadd\n         77: baload\n         78: i2l\n-        79: ldc2_w        #40                 // long 255l\n+        79: ldc2_w        #86                 // long 255l\n         82: land\n         83: bipush        24\n         85: lshl\n         86: lor\n         87: aload_0\n         88: iload_1\n         89: iload         8\n         91: iadd\n         92: iconst_4\n         93: iadd\n         94: baload\n         95: i2l\n-        96: ldc2_w        #40                 // long 255l\n+        96: ldc2_w        #86                 // long 255l\n         99: land\n        100: bipush        32\n        102: lshl\n        103: lor\n        104: aload_0\n        105: iload_1\n        106: iload         8\n        108: iadd\n        109: iconst_5\n        110: iadd\n        111: baload\n        112: i2l\n-       113: ldc2_w        #40                 // long 255l\n+       113: ldc2_w        #86                 // long 255l\n        116: land\n        117: bipush        40\n        119: lshl\n        120: lor\n        121: aload_0\n        122: iload_1\n        123: iload         8\n        125: iadd\n        126: bipush        6\n        128: iadd\n        129: baload\n        130: i2l\n-       131: ldc2_w        #40                 // long 255l\n+       131: ldc2_w        #86                 // long 255l\n        134: land\n        135: bipush        48\n        137: lshl\n        138: lor\n        139: aload_0\n        140: iload_1\n        141: iload         8\n        143: iadd\n        144: bipush        7\n        146: iadd\n        147: baload\n        148: i2l\n-       149: ldc2_w        #40                 // long 255l\n+       149: ldc2_w        #86                 // long 255l\n        152: land\n        153: bipush        56\n        155: lshl\n        156: lor\n        157: lstore        9\n        159: lload         9\n-       161: ldc2_w        #23                 // long -8663945395140668459l\n+       161: ldc2_w        #63                 // long -8663945395140668459l\n        164: lmul\n        165: lstore        9\n        167: lload         9\n        169: bipush        31\n-       171: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       171: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        174: lstore        9\n        176: lload         9\n-       178: ldc2_w        #26                 // long 5545529020109919103l\n+       178: ldc2_w        #68                 // long 5545529020109919103l\n        181: lmul\n        182: lstore        9\n        184: lload         4\n        186: lload         9\n        188: lxor\n        189: lstore        4\n        191: lload         4\n        193: bipush        27\n-       195: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n-       198: ldc2_w        #28                 // long 5l\n+       195: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n+       198: ldc2_w        #70                 // long 5l\n        201: lmul\n-       202: ldc2_w        #30                 // long 1390208809l\n+       202: ldc2_w        #72                 // long 1390208809l\n        205: ladd\n        206: lstore        4\n        208: iinc          7, 1\n        211: goto          12\n        214: lconst_0\n        215: lstore        7\n        217: iload         6\n@@ -1094,129 +1094,129 @@\n        271: iload_1\n        272: iload         9\n        274: iadd\n        275: bipush        6\n        277: iadd\n        278: baload\n        279: i2l\n-       280: ldc2_w        #40                 // long 255l\n+       280: ldc2_w        #86                 // long 255l\n        283: land\n        284: bipush        48\n        286: lshl\n        287: lxor\n        288: lstore        7\n        290: lload         7\n        292: aload_0\n        293: iload_1\n        294: iload         9\n        296: iadd\n        297: iconst_5\n        298: iadd\n        299: baload\n        300: i2l\n-       301: ldc2_w        #40                 // long 255l\n+       301: ldc2_w        #86                 // long 255l\n        304: land\n        305: bipush        40\n        307: lshl\n        308: lxor\n        309: lstore        7\n        311: lload         7\n        313: aload_0\n        314: iload_1\n        315: iload         9\n        317: iadd\n        318: iconst_4\n        319: iadd\n        320: baload\n        321: i2l\n-       322: ldc2_w        #40                 // long 255l\n+       322: ldc2_w        #86                 // long 255l\n        325: land\n        326: bipush        32\n        328: lshl\n        329: lxor\n        330: lstore        7\n        332: lload         7\n        334: aload_0\n        335: iload_1\n        336: iload         9\n        338: iadd\n        339: iconst_3\n        340: iadd\n        341: baload\n        342: i2l\n-       343: ldc2_w        #40                 // long 255l\n+       343: ldc2_w        #86                 // long 255l\n        346: land\n        347: bipush        24\n        349: lshl\n        350: lxor\n        351: lstore        7\n        353: lload         7\n        355: aload_0\n        356: iload_1\n        357: iload         9\n        359: iadd\n        360: iconst_2\n        361: iadd\n        362: baload\n        363: i2l\n-       364: ldc2_w        #40                 // long 255l\n+       364: ldc2_w        #86                 // long 255l\n        367: land\n        368: bipush        16\n        370: lshl\n        371: lxor\n        372: lstore        7\n        374: lload         7\n        376: aload_0\n        377: iload_1\n        378: iload         9\n        380: iadd\n        381: iconst_1\n        382: iadd\n        383: baload\n        384: i2l\n-       385: ldc2_w        #40                 // long 255l\n+       385: ldc2_w        #86                 // long 255l\n        388: land\n        389: bipush        8\n        391: lshl\n        392: lxor\n        393: lstore        7\n        395: lload         7\n        397: aload_0\n        398: iload_1\n        399: iload         9\n        401: iadd\n        402: baload\n        403: i2l\n-       404: ldc2_w        #40                 // long 255l\n+       404: ldc2_w        #86                 // long 255l\n        407: land\n        408: lxor\n        409: lstore        7\n        411: lload         7\n-       413: ldc2_w        #23                 // long -8663945395140668459l\n+       413: ldc2_w        #63                 // long -8663945395140668459l\n        416: lmul\n        417: lstore        7\n        419: lload         7\n        421: bipush        31\n-       423: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       423: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        426: lstore        7\n        428: lload         7\n-       430: ldc2_w        #26                 // long 5545529020109919103l\n+       430: ldc2_w        #68                 // long 5545529020109919103l\n        433: lmul\n        434: lstore        7\n        436: lload         4\n        438: lload         7\n        440: lxor\n        441: lstore        4\n        443: lload         4\n        445: iload_2\n        446: i2l\n        447: lxor\n        448: lstore        4\n        450: lload         4\n-       452: invokestatic  #34                 // Method fmix64:(J)J\n+       452: invokestatic  #76                 // Method fmix64:(J)J\n        455: lstore        4\n        457: lload         4\n        459: lreturn\n       LineNumberTable:\n         line 329: 0\n         line 330: 4\n         line 333: 9\n@@ -1280,37 +1280,37 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n          2: aload_0\n          3: arraylength\n-         4: ldc           #8                  // int 104729\n-         6: invokestatic  #45                 // Method hash128:([BIII)[J\n+         4: ldc           #21                 // int 104729\n+         6: invokestatic  #91                 // Method hash128:([BIII)[J\n          9: areturn\n       LineNumberTable:\n         line 386: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  data   [B\n \n   public static long[] hash128(java.lang.String);\n     descriptor: (Ljava/lang/String;)[J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #15                 // Method java/lang/String.getBytes:()[B\n+         1: invokevirtual #43                 // Method java/lang/String.getBytes:()[B\n          4: astore_1\n          5: aload_1\n          6: iconst_0\n          7: aload_1\n          8: arraylength\n-         9: ldc           #8                  // int 104729\n-        11: invokestatic  #45                 // Method hash128:([BIII)[J\n+         9: ldc           #21                 // int 104729\n+        11: invokestatic  #91                 // Method hash128:([BIII)[J\n         14: areturn\n       LineNumberTable:\n         line 396: 0\n         line 397: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  data   Ljava/lang/String;\n@@ -1342,268 +1342,268 @@\n         27: istore        10\n         29: aload_0\n         30: iload_1\n         31: iload         10\n         33: iadd\n         34: baload\n         35: i2l\n-        36: ldc2_w        #40                 // long 255l\n+        36: ldc2_w        #86                 // long 255l\n         39: land\n         40: aload_0\n         41: iload_1\n         42: iload         10\n         44: iadd\n         45: iconst_1\n         46: iadd\n         47: baload\n         48: i2l\n-        49: ldc2_w        #40                 // long 255l\n+        49: ldc2_w        #86                 // long 255l\n         52: land\n         53: bipush        8\n         55: lshl\n         56: lor\n         57: aload_0\n         58: iload_1\n         59: iload         10\n         61: iadd\n         62: iconst_2\n         63: iadd\n         64: baload\n         65: i2l\n-        66: ldc2_w        #40                 // long 255l\n+        66: ldc2_w        #86                 // long 255l\n         69: land\n         70: bipush        16\n         72: lshl\n         73: lor\n         74: aload_0\n         75: iload_1\n         76: iload         10\n         78: iadd\n         79: iconst_3\n         80: iadd\n         81: baload\n         82: i2l\n-        83: ldc2_w        #40                 // long 255l\n+        83: ldc2_w        #86                 // long 255l\n         86: land\n         87: bipush        24\n         89: lshl\n         90: lor\n         91: aload_0\n         92: iload_1\n         93: iload         10\n         95: iadd\n         96: iconst_4\n         97: iadd\n         98: baload\n         99: i2l\n-       100: ldc2_w        #40                 // long 255l\n+       100: ldc2_w        #86                 // long 255l\n        103: land\n        104: bipush        32\n        106: lshl\n        107: lor\n        108: aload_0\n        109: iload_1\n        110: iload         10\n        112: iadd\n        113: iconst_5\n        114: iadd\n        115: baload\n        116: i2l\n-       117: ldc2_w        #40                 // long 255l\n+       117: ldc2_w        #86                 // long 255l\n        120: land\n        121: bipush        40\n        123: lshl\n        124: lor\n        125: aload_0\n        126: iload_1\n        127: iload         10\n        129: iadd\n        130: bipush        6\n        132: iadd\n        133: baload\n        134: i2l\n-       135: ldc2_w        #40                 // long 255l\n+       135: ldc2_w        #86                 // long 255l\n        138: land\n        139: bipush        48\n        141: lshl\n        142: lor\n        143: aload_0\n        144: iload_1\n        145: iload         10\n        147: iadd\n        148: bipush        7\n        150: iadd\n        151: baload\n        152: i2l\n-       153: ldc2_w        #40                 // long 255l\n+       153: ldc2_w        #86                 // long 255l\n        156: land\n        157: bipush        56\n        159: lshl\n        160: lor\n        161: lstore        11\n        163: aload_0\n        164: iload_1\n        165: iload         10\n        167: iadd\n        168: bipush        8\n        170: iadd\n        171: baload\n        172: i2l\n-       173: ldc2_w        #40                 // long 255l\n+       173: ldc2_w        #86                 // long 255l\n        176: land\n        177: aload_0\n        178: iload_1\n        179: iload         10\n        181: iadd\n        182: bipush        9\n        184: iadd\n        185: baload\n        186: i2l\n-       187: ldc2_w        #40                 // long 255l\n+       187: ldc2_w        #86                 // long 255l\n        190: land\n        191: bipush        8\n        193: lshl\n        194: lor\n        195: aload_0\n        196: iload_1\n        197: iload         10\n        199: iadd\n        200: bipush        10\n        202: iadd\n        203: baload\n        204: i2l\n-       205: ldc2_w        #40                 // long 255l\n+       205: ldc2_w        #86                 // long 255l\n        208: land\n        209: bipush        16\n        211: lshl\n        212: lor\n        213: aload_0\n        214: iload_1\n        215: iload         10\n        217: iadd\n        218: bipush        11\n        220: iadd\n        221: baload\n        222: i2l\n-       223: ldc2_w        #40                 // long 255l\n+       223: ldc2_w        #86                 // long 255l\n        226: land\n        227: bipush        24\n        229: lshl\n        230: lor\n        231: aload_0\n        232: iload_1\n        233: iload         10\n        235: iadd\n        236: bipush        12\n        238: iadd\n        239: baload\n        240: i2l\n-       241: ldc2_w        #40                 // long 255l\n+       241: ldc2_w        #86                 // long 255l\n        244: land\n        245: bipush        32\n        247: lshl\n        248: lor\n        249: aload_0\n        250: iload_1\n        251: iload         10\n        253: iadd\n        254: bipush        13\n        256: iadd\n        257: baload\n        258: i2l\n-       259: ldc2_w        #40                 // long 255l\n+       259: ldc2_w        #86                 // long 255l\n        262: land\n        263: bipush        40\n        265: lshl\n        266: lor\n        267: aload_0\n        268: iload_1\n        269: iload         10\n        271: iadd\n        272: bipush        14\n        274: iadd\n        275: baload\n        276: i2l\n-       277: ldc2_w        #40                 // long 255l\n+       277: ldc2_w        #86                 // long 255l\n        280: land\n        281: bipush        48\n        283: lshl\n        284: lor\n        285: aload_0\n        286: iload_1\n        287: iload         10\n        289: iadd\n        290: bipush        15\n        292: iadd\n        293: baload\n        294: i2l\n-       295: ldc2_w        #40                 // long 255l\n+       295: ldc2_w        #86                 // long 255l\n        298: land\n        299: bipush        56\n        301: lshl\n        302: lor\n        303: lstore        13\n        305: lload         11\n-       307: ldc2_w        #23                 // long -8663945395140668459l\n+       307: ldc2_w        #63                 // long -8663945395140668459l\n        310: lmul\n        311: lstore        11\n        313: lload         11\n        315: bipush        31\n-       317: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       317: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        320: lstore        11\n        322: lload         11\n-       324: ldc2_w        #26                 // long 5545529020109919103l\n+       324: ldc2_w        #68                 // long 5545529020109919103l\n        327: lmul\n        328: lstore        11\n        330: lload         4\n        332: lload         11\n        334: lxor\n        335: lstore        4\n        337: lload         4\n        339: bipush        27\n-       341: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       341: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        344: lstore        4\n        346: lload         4\n        348: lload         6\n        350: ladd\n        351: lstore        4\n        353: lload         4\n-       355: ldc2_w        #28                 // long 5l\n+       355: ldc2_w        #70                 // long 5l\n        358: lmul\n-       359: ldc2_w        #30                 // long 1390208809l\n+       359: ldc2_w        #72                 // long 1390208809l\n        362: ladd\n        363: lstore        4\n        365: lload         13\n-       367: ldc2_w        #26                 // long 5545529020109919103l\n+       367: ldc2_w        #68                 // long 5545529020109919103l\n        370: lmul\n        371: lstore        13\n        373: lload         13\n        375: bipush        33\n-       377: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       377: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        380: lstore        13\n        382: lload         13\n-       384: ldc2_w        #23                 // long -8663945395140668459l\n+       384: ldc2_w        #63                 // long -8663945395140668459l\n        387: lmul\n        388: lstore        13\n        390: lload         6\n        392: lload         13\n        394: lxor\n        395: lstore        6\n        397: lload         6\n        399: bipush        31\n-       401: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       401: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        404: lstore        6\n        406: lload         6\n        408: lload         4\n        410: ladd\n        411: lstore        6\n        413: lload         6\n-       415: ldc2_w        #28                 // long 5l\n+       415: ldc2_w        #70                 // long 5l\n        418: lmul\n-       419: ldc2_w        #46                 // long 944331445l\n+       419: ldc2_w        #95                 // long 944331445l\n        422: ladd\n        423: lstore        6\n        425: iinc          9, 1\n        428: goto          16\n        431: lconst_0\n        432: lstore        9\n        434: lconst_0\n@@ -1733,23 +1733,23 @@\n        662: baload\n        663: sipush        255\n        666: iand\n        667: i2l\n        668: lxor\n        669: lstore        11\n        671: lload         11\n-       673: ldc2_w        #26                 // long 5545529020109919103l\n+       673: ldc2_w        #68                 // long 5545529020109919103l\n        676: lmul\n        677: lstore        11\n        679: lload         11\n        681: bipush        33\n-       683: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       683: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        686: lstore        11\n        688: lload         11\n-       690: ldc2_w        #23                 // long -8663945395140668459l\n+       690: ldc2_w        #63                 // long -8663945395140668459l\n        693: lmul\n        694: lstore        11\n        696: lload         6\n        698: lload         11\n        700: lxor\n        701: lstore        6\n        703: lload         9\n@@ -1865,23 +1865,23 @@\n        859: baload\n        860: sipush        255\n        863: iand\n        864: i2l\n        865: lxor\n        866: lstore        9\n        868: lload         9\n-       870: ldc2_w        #23                 // long -8663945395140668459l\n+       870: ldc2_w        #63                 // long -8663945395140668459l\n        873: lmul\n        874: lstore        9\n        876: lload         9\n        878: bipush        31\n-       880: invokestatic  #25                 // Method java/lang/Long.rotateLeft:(JI)J\n+       880: invokestatic  #65                 // Method java/lang/Long.rotateLeft:(JI)J\n        883: lstore        9\n        885: lload         9\n-       887: ldc2_w        #26                 // long 5545529020109919103l\n+       887: ldc2_w        #68                 // long 5545529020109919103l\n        890: lmul\n        891: lstore        9\n        893: lload         4\n        895: lload         9\n        897: lxor\n        898: lstore        4\n        900: lload         4\n@@ -1899,18 +1899,18 @@\n        918: ladd\n        919: lstore        4\n        921: lload         6\n        923: lload         4\n        925: ladd\n        926: lstore        6\n        928: lload         4\n-       930: invokestatic  #34                 // Method fmix64:(J)J\n+       930: invokestatic  #76                 // Method fmix64:(J)J\n        933: lstore        4\n        935: lload         6\n-       937: invokestatic  #34                 // Method fmix64:(J)J\n+       937: invokestatic  #76                 // Method fmix64:(J)J\n        940: lstore        6\n        942: lload         4\n        944: lload         6\n        946: ladd\n        947: lstore        4\n        949: lload         6\n        951: lload         4\n@@ -2030,35 +2030,35 @@\n \n   private static int mix32(int, int);\n     descriptor: (II)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_0\n-         1: ldc           #17                 // int -862048943\n+         1: ldc           #52                 // int -862048943\n          3: imul\n          4: istore_0\n          5: iload_0\n          6: bipush        15\n-         8: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I\n+         8: invokestatic  #53                 // Method java/lang/Integer.rotateLeft:(II)I\n         11: istore_0\n         12: iload_0\n-        13: ldc           #19                 // int 461845907\n+        13: ldc           #56                 // int 461845907\n         15: imul\n         16: istore_0\n         17: iload_1\n         18: iload_0\n         19: ixor\n         20: istore_1\n         21: iload_1\n         22: bipush        13\n-        24: invokestatic  #18                 // Method java/lang/Integer.rotateLeft:(II)I\n+        24: invokestatic  #53                 // Method java/lang/Integer.rotateLeft:(II)I\n         27: iconst_5\n         28: imul\n-        29: ldc           #48                 // int -430675100\n+        29: ldc           #97                 // int -430675100\n         31: iadd\n         32: ireturn\n       LineNumberTable:\n         line 509: 0\n         line 510: 5\n         line 511: 12\n         line 512: 17\n@@ -2080,25 +2080,25 @@\n          4: iload_1\n          5: iload_1\n          6: bipush        16\n          8: iushr\n          9: ixor\n         10: istore_1\n         11: iload_1\n-        12: ldc           #49                 // int -2048144789\n+        12: ldc           #98                 // int -2048144789\n         14: imul\n         15: istore_1\n         16: iload_1\n         17: iload_1\n         18: bipush        13\n         20: iushr\n         21: ixor\n         22: istore_1\n         23: iload_1\n-        24: ldc           #50                 // int -1028477387\n+        24: ldc           #99                 // int -1028477387\n         26: imul\n         27: istore_1\n         28: iload_1\n         29: iload_1\n         30: bipush        16\n         32: iushr\n         33: ixor\n@@ -2126,25 +2126,25 @@\n          0: lload_0\n          1: lload_0\n          2: bipush        33\n          4: lushr\n          5: lxor\n          6: lstore_0\n          7: lload_0\n-         8: ldc2_w        #51                 // long -49064778989728563l\n+         8: ldc2_w        #100                // long -49064778989728563l\n         11: lmul\n         12: lstore_0\n         13: lload_0\n         14: lload_0\n         15: bipush        33\n         17: lushr\n         18: lxor\n         19: lstore_0\n         20: lload_0\n-        21: ldc2_w        #53                 // long -4265267296055464877l\n+        21: ldc2_w        #102                // long -4265267296055464877l\n         24: lmul\n         25: lstore_0\n         26: lload_0\n         27: lload_0\n         28: bipush        33\n         30: lushr\n         31: lxor\n@@ -2203,21 +2203,21 @@\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: iload_0\n          1: iload_1\n          2: iload_2\n          3: iload_3\n-         4: invokestatic  #5                  // Method orBytes:(BBBB)I\n+         4: invokestatic  #9                  // Method orBytes:(BBBB)I\n          7: ireturn\n       LineNumberTable:\n         line 44: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0    x0   B\n             0       8     1    x1   B\n             0       8     2    x2   B\n             0       8     3    x3   B\n }\n SourceFile: \"MurmurHash3.java\"\n InnerClasses:\n-  public static #57= #56 of #7;           // IncrementalHash32=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32 of class org/apache/commons/codec/digest/MurmurHash3\n+  public static #198= #196 of #10;        // IncrementalHash32=class org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32 of class org/apache/commons/codec/digest/MurmurHash3\n"}]}
