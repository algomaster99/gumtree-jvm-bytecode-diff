{"diffoscope-json-version": 1, "source1": "first/ConstantInitializer.class", "source2": "second/ConstantInitializer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,16 +4,16 @@\n import java.util.Objects;\n \n public class ConstantInitializer<T> implements ConcurrentInitializer<T>\n {\n     private static final String FMT_TO_STRING = \"ConstantInitializer@%d [ object = %s ]\";\n     private final T object;\n     \n-    public ConstantInitializer(final T obj) {\n-        this.object = obj;\n+    public ConstantInitializer(final T object) {\n+        this.object = object;\n     }\n     \n     public final T getObject() {\n         return this.object;\n     }\n     \n     public T get() throws ConcurrentException {\n@@ -22,23 +22,16 @@\n     \n     @Override\n     public int hashCode() {\n         return (this.getObject() != null) ? this.getObject().hashCode() : 0;\n     }\n     \n     @Override\n-    public boolean equals(final Object obj) {\n-        if (this == obj) {\n-            return true;\n-        }\n-        if (!(obj instanceof ConstantInitializer)) {\n-            return false;\n-        }\n-        final ConstantInitializer<?> c = (ConstantInitializer)obj;\n-        return Objects.equals(this.getObject(), c.getObject());\n+    public boolean equals(final Object o) {\n+        return this == o || (o instanceof ConstantInitializer && Objects.equals(this.getObject(), ((ConstantInitializer)o).getObject()));\n     }\n     \n     @Override\n     public String toString() {\n         return String.format(\"ConstantInitializer@%d [ object = %s ]\", Integer.valueOf(System.identityHashCode((Object)this)), String.valueOf(this.getObject()));\n     }\n }\n"}]}
