{"diffoscope-json-version": 1, "source1": "first/AppendableWriter.class", "source2": "second/AppendableWriter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,22 +16,22 @@\n     @Override\n     public Writer append(final char c) throws IOException {\n         this.appendable.append(c);\n         return this;\n     }\n     \n     @Override\n-    public Writer append(final CharSequence csq) throws IOException {\n-        this.appendable.append(csq);\n+    public Writer append(final CharSequence charSequence) throws IOException {\n+        this.appendable.append(charSequence);\n         return this;\n     }\n     \n     @Override\n-    public Writer append(final CharSequence csq, final int start, final int end) throws IOException {\n-        this.appendable.append(csq, start, end);\n+    public Writer append(final CharSequence charSequence, final int n, final int n2) throws IOException {\n+        this.appendable.append(charSequence, n, n2);\n         return this;\n     }\n     \n     @Override\n     public void close() throws IOException {\n     }\n     \n@@ -40,28 +40,28 @@\n     }\n     \n     public T getAppendable() {\n         return this.appendable;\n     }\n     \n     @Override\n-    public void write(final char[] cbuf, final int off, final int len) throws IOException {\n-        Objects.requireNonNull(cbuf, \"Character array is missing\");\n-        if (len < 0 || off + len > cbuf.length) {\n-            throw new IndexOutOfBoundsException(\"Array Size=\" + cbuf.length + \", offset=\" + off + \", length=\" + len);\n+    public void write(final char[] obj, final int i, final int j) throws IOException {\n+        Objects.requireNonNull(obj, \"Character array is missing\");\n+        if (j < 0 || i + j > obj.length) {\n+            throw new IndexOutOfBoundsException(\"Array Size=\" + obj.length + \", offset=\" + i + \", length=\" + j);\n         }\n-        for (int i = 0; i < len; ++i) {\n-            this.appendable.append(cbuf[off + i]);\n+        for (int k = 0; k < j; ++k) {\n+            this.appendable.append(obj[i + k]);\n         }\n     }\n     \n     @Override\n-    public void write(final int c) throws IOException {\n-        this.appendable.append((char)c);\n+    public void write(final int n) throws IOException {\n+        this.appendable.append((char)n);\n     }\n     \n     @Override\n-    public void write(final String str, final int off, final int len) throws IOException {\n-        Objects.requireNonNull(str, \"String is missing\");\n-        this.appendable.append(str, off, off + len);\n+    public void write(final String obj, final int n, final int n2) throws IOException {\n+        Objects.requireNonNull(obj, \"String is missing\");\n+        this.appendable.append(obj, n, n + n2);\n     }\n }\n"}]}
