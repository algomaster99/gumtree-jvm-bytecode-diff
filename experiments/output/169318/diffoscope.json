{"diffoscope-json-version": 1, "source1": "first/NumberUtils.class", "source2": "second/NumberUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,149 +1,149 @@\n-  SHA-256 checksum 0bee768e0706601f844fc17dfec0045110f8a83f4b6f793b2c25ac68b2bc6fc7\n+  SHA-256 checksum 45cdd84084a3bed4f34b0404ebc11a6b8a93199aea8190dd6f48e777c8518d78\n   Compiled from \"NumberUtils.java\"\n public class org.apache.commons.lang3.math.NumberUtils\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #135                        // org/apache/commons/lang3/math/NumberUtils\n   super_class: #92                        // java/lang/Object\n   interfaces: 0, fields: 19, methods: 68, attributes: 1\n Constant pool:\n-    #1 = Methodref          #92.#325      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #135.#326     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n-    #3 = Methodref          #327.#328     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-    #4 = Class              #329          // java/lang/NumberFormatException\n-    #5 = Methodref          #135.#330     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n-    #6 = Methodref          #331.#332     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-    #7 = Methodref          #135.#333     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n-    #8 = Methodref          #89.#334      // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-    #9 = Methodref          #135.#335     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n-   #10 = Methodref          #85.#336      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #11 = Methodref          #135.#337     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n-   #12 = Methodref          #81.#338      // java/math/BigDecimal.doubleValue:()D\n-   #13 = Methodref          #135.#339     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n-   #14 = Methodref          #340.#341     // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n-   #15 = Methodref          #135.#342     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n-   #16 = Methodref          #343.#344     // java/lang/Short.parseShort:(Ljava/lang/String;)S\n-   #17 = Fieldref           #135.#345     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n-   #18 = Methodref          #327.#346     // java/lang/Integer.intValue:()I\n-   #19 = Fieldref           #347.#348     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-   #20 = Methodref          #135.#349     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #21 = Fieldref           #81.#350      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n-   #22 = Methodref          #81.#351      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #23 = Methodref          #135.#352     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #24 = Methodref          #89.#353      // java/lang/Float.floatValue:()F\n-   #25 = Methodref          #81.#354      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n-   #26 = Methodref          #135.#355     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #27 = Methodref          #85.#338      // java/lang/Double.doubleValue:()D\n-   #28 = Methodref          #135.#356     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #29 = Methodref          #135.#357     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #30 = Methodref          #358.#359     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-   #31 = String             #360          // A blank string is not a valid number\n-   #32 = Methodref          #4.#361       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Class              #362          // java/lang/String\n-   #34 = String             #363          // 0x\n-   #35 = String             #364          // 0X\n-   #36 = String             #365          // -0x\n-   #37 = String             #366          // -0X\n-   #38 = String             #367          // #\n-   #39 = String             #368          // -#\n-   #40 = Methodref          #33.#369      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #41 = Methodref          #33.#370      // java/lang/String.length:()I\n-   #42 = Methodref          #33.#371      // java/lang/String.charAt:(I)C\n-   #43 = Methodref          #135.#372     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-   #44 = Methodref          #135.#373     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-   #45 = Methodref          #135.#374     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #46 = Methodref          #33.#375      // java/lang/String.indexOf:(I)I\n-   #47 = Class              #376          // java/lang/StringBuilder\n-   #48 = Methodref          #47.#325      // java/lang/StringBuilder.\"<init>\":()V\n-   #49 = Methodref          #47.#377      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #50 = String             #378          //  is not a valid number.\n-   #51 = Methodref          #47.#379      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #52 = Methodref          #33.#380      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #53 = Methodref          #33.#381      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #54 = Methodref          #135.#382     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-   #55 = Methodref          #135.#383     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-   #56 = Methodref          #384.#385     // java/lang/Character.isDigit:(C)Z\n-   #57 = Methodref          #135.#386     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n-   #58 = Methodref          #33.#387      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #135.#388     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n-   #60 = Methodref          #135.#389     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-   #61 = Methodref          #89.#390      // java/lang/Float.isInfinite:()Z\n-   #62 = Methodref          #135.#391     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-   #63 = Methodref          #85.#390      // java/lang/Double.isInfinite:()Z\n-   #64 = Methodref          #85.#353      // java/lang/Double.floatValue:()F\n-   #65 = Methodref          #89.#379      // java/lang/Float.toString:()Ljava/lang/String;\n-   #66 = Methodref          #85.#379      // java/lang/Double.toString:()Ljava/lang/String;\n-   #67 = Methodref          #33.#392      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #68 = Methodref          #81.#393      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n-   #69 = Methodref          #89.#394      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-   #70 = Methodref          #85.#395      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-   #71 = Methodref          #327.#396     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #72 = Methodref          #331.#397     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n-   #73 = String             #398          // -\n-   #74 = Methodref          #33.#399      // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n-   #75 = String             #400          // 0\n-   #76 = Class              #401          // java/math/BigInteger\n-   #77 = Methodref          #76.#402      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-   #78 = Methodref          #76.#403      // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n-   #79 = Methodref          #33.#404      // java/lang/String.trim:()Ljava/lang/String;\n-   #80 = String             #405          // --\n-   #81 = Class              #406          // java/math/BigDecimal\n-   #82 = Methodref          #81.#361      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-   #83 = Methodref          #135.#407     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n-   #84 = Methodref          #85.#408      // java/lang/Double.isNaN:(D)Z\n-   #85 = Class              #409          // java/lang/Double\n+    #1 = Methodref          #92.#319      // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #135.#320     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n+    #3 = Methodref          #321.#322     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+    #4 = Class              #323          // java/lang/NumberFormatException\n+    #5 = Methodref          #135.#324     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n+    #6 = Methodref          #325.#326     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+    #7 = Methodref          #135.#327     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n+    #8 = Methodref          #89.#328      // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+    #9 = Methodref          #135.#329     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n+   #10 = Methodref          #85.#330      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #11 = Methodref          #135.#331     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n+   #12 = Methodref          #81.#332      // java/math/BigDecimal.doubleValue:()D\n+   #13 = Methodref          #135.#333     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n+   #14 = Methodref          #334.#335     // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+   #15 = Methodref          #135.#336     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n+   #16 = Methodref          #337.#338     // java/lang/Short.parseShort:(Ljava/lang/String;)S\n+   #17 = Fieldref           #135.#339     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n+   #18 = Methodref          #321.#340     // java/lang/Integer.intValue:()I\n+   #19 = Fieldref           #208.#341     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+   #20 = Methodref          #135.#342     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #21 = Fieldref           #81.#343      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+   #22 = Methodref          #81.#344      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #23 = Methodref          #135.#345     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #24 = Methodref          #89.#346      // java/lang/Float.floatValue:()F\n+   #25 = Methodref          #81.#347      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+   #26 = Methodref          #135.#348     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #27 = Methodref          #85.#332      // java/lang/Double.doubleValue:()D\n+   #28 = Methodref          #135.#349     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #29 = Methodref          #135.#350     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+   #30 = Methodref          #351.#352     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+   #31 = String             #353          // A blank string is not a valid number\n+   #32 = Methodref          #4.#354       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+   #33 = Class              #355          // java/lang/String\n+   #34 = String             #356          // 0x\n+   #35 = String             #357          // 0X\n+   #36 = String             #358          // -0x\n+   #37 = String             #359          // -0X\n+   #38 = String             #360          // #\n+   #39 = String             #361          // -#\n+   #40 = Methodref          #33.#362      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #41 = Methodref          #33.#363      // java/lang/String.length:()I\n+   #42 = Methodref          #33.#364      // java/lang/String.charAt:(I)C\n+   #43 = Methodref          #135.#365     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+   #44 = Methodref          #135.#366     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+   #45 = Methodref          #135.#367     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #46 = Methodref          #33.#368      // java/lang/String.indexOf:(I)I\n+   #47 = Class              #369          // java/lang/StringBuilder\n+   #48 = Methodref          #47.#319      // java/lang/StringBuilder.\"<init>\":()V\n+   #49 = Methodref          #47.#370      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #50 = String             #371          //  is not a valid number.\n+   #51 = Methodref          #47.#372      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #52 = Methodref          #33.#373      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #53 = Methodref          #33.#374      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #54 = Methodref          #135.#375     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+   #55 = Methodref          #135.#376     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+   #56 = Methodref          #377.#378     // java/lang/Character.isDigit:(C)Z\n+   #57 = Methodref          #135.#379     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n+   #58 = Methodref          #33.#380      // java/lang/String.isEmpty:()Z\n+   #59 = Methodref          #135.#381     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n+   #60 = Methodref          #135.#382     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+   #61 = Methodref          #89.#383      // java/lang/Float.isInfinite:()Z\n+   #62 = Methodref          #135.#384     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+   #63 = Methodref          #85.#383      // java/lang/Double.isInfinite:()Z\n+   #64 = Methodref          #85.#346      // java/lang/Double.floatValue:()F\n+   #65 = Methodref          #89.#372      // java/lang/Float.toString:()Ljava/lang/String;\n+   #66 = Methodref          #85.#372      // java/lang/Double.toString:()Ljava/lang/String;\n+   #67 = Methodref          #33.#385      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #68 = Methodref          #81.#386      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n+   #69 = Methodref          #89.#387      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+   #70 = Methodref          #85.#388      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+   #71 = Methodref          #321.#389     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+   #72 = Methodref          #325.#390     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n+   #73 = String             #391          // -\n+   #74 = Methodref          #33.#392      // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+   #75 = String             #393          // 0\n+   #76 = Class              #394          // java/math/BigInteger\n+   #77 = Methodref          #76.#395      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+   #78 = Methodref          #76.#396      // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n+   #79 = Methodref          #33.#397      // java/lang/String.trim:()Ljava/lang/String;\n+   #80 = String             #398          // --\n+   #81 = Class              #399          // java/math/BigDecimal\n+   #82 = Methodref          #81.#354      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+   #83 = Methodref          #135.#400     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n+   #84 = Methodref          #85.#401      // java/lang/Double.isNaN:(D)Z\n+   #85 = Class              #402          // java/lang/Double\n    #86 = Double             NaNd\n-   #88 = Methodref          #89.#410      // java/lang/Float.isNaN:(F)Z\n-   #89 = Class              #411          // java/lang/Float\n+   #88 = Methodref          #89.#403      // java/lang/Float.isNaN:(F)Z\n+   #89 = Class              #404          // java/lang/Float\n    #90 = Float              NaNf\n-   #91 = String             #412          // The Array must not be null\n-   #92 = Class              #413          // java/lang/Object\n-   #93 = Methodref          #414.#415     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #94 = Methodref          #416.#417     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n-   #95 = String             #418          // Array cannot be empty.\n-   #96 = Methodref          #419.#420     // java/lang/Math.min:(DD)D\n-   #97 = Methodref          #419.#421     // java/lang/Math.min:(FF)F\n-   #98 = Methodref          #419.#422     // java/lang/Math.max:(DD)D\n-   #99 = Methodref          #419.#423     // java/lang/Math.max:(FF)F\n-  #100 = Methodref          #358.#424     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-  #101 = Methodref          #135.#425     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n-  #102 = Methodref          #358.#426     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n-  #103 = Methodref          #33.#427      // java/lang/String.toCharArray:()[C\n-  #104 = Methodref          #358.#428     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n-  #105 = Methodref          #135.#429     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #106 = Methodref          #331.#430     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #107 = Fieldref           #135.#431     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n-  #108 = Fieldref           #135.#432     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n+   #91 = String             #405          // The Array must not be null\n+   #92 = Class              #406          // java/lang/Object\n+   #93 = Methodref          #407.#408     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+   #94 = Methodref          #409.#410     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n+   #95 = String             #411          // Array cannot be empty.\n+   #96 = Methodref          #412.#413     // java/lang/Math.min:(DD)D\n+   #97 = Methodref          #412.#414     // java/lang/Math.min:(FF)F\n+   #98 = Methodref          #412.#415     // java/lang/Math.max:(DD)D\n+   #99 = Methodref          #412.#416     // java/lang/Math.max:(FF)F\n+  #100 = Methodref          #351.#417     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+  #101 = Methodref          #135.#418     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n+  #102 = Methodref          #351.#419     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+  #103 = Methodref          #33.#420      // java/lang/String.toCharArray:()[C\n+  #104 = Methodref          #351.#421     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n+  #105 = Methodref          #135.#422     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #106 = Methodref          #325.#423     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #107 = Fieldref           #135.#424     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n+  #108 = Fieldref           #135.#425     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n   #109 = Long               -1l\n-  #111 = Fieldref           #135.#433     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n-  #112 = Methodref          #327.#434     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #113 = Fieldref           #135.#435     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n-  #114 = Fieldref           #135.#436     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n-  #115 = Fieldref           #135.#437     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #116 = Methodref          #343.#438     // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-  #117 = Fieldref           #135.#439     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n-  #118 = Fieldref           #135.#440     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n-  #119 = Fieldref           #135.#441     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #120 = Methodref          #340.#442     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-  #121 = Fieldref           #135.#443     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n-  #122 = Fieldref           #135.#444     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n-  #123 = Fieldref           #135.#445     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #124 = Methodref          #85.#446      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-  #125 = Fieldref           #135.#447     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n-  #126 = Fieldref           #135.#448     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n+  #111 = Fieldref           #135.#426     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n+  #112 = Methodref          #321.#427     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #113 = Fieldref           #135.#428     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n+  #114 = Fieldref           #135.#429     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n+  #115 = Fieldref           #135.#430     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #116 = Methodref          #337.#431     // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+  #117 = Fieldref           #135.#432     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n+  #118 = Fieldref           #135.#433     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n+  #119 = Fieldref           #135.#434     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #120 = Methodref          #334.#435     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+  #121 = Fieldref           #135.#436     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n+  #122 = Fieldref           #135.#437     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n+  #123 = Fieldref           #135.#438     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #124 = Methodref          #85.#439      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+  #125 = Fieldref           #135.#440     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n+  #126 = Fieldref           #135.#441     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n   #127 = Double             -1.0d\n-  #129 = Fieldref           #135.#449     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #130 = Methodref          #89.#450      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-  #131 = Fieldref           #135.#451     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n-  #132 = Fieldref           #135.#452     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n+  #129 = Fieldref           #135.#442     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #130 = Methodref          #89.#443      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+  #131 = Fieldref           #135.#444     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n+  #132 = Fieldref           #135.#445     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n   #133 = Float              -1.0f\n-  #134 = Fieldref           #135.#453     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #135 = Class              #454          // org/apache/commons/lang3/math/NumberUtils\n+  #134 = Fieldref           #135.#446     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #135 = Class              #447          // org/apache/commons/lang3/math/NumberUtils\n   #136 = Utf8               LONG_ZERO\n   #137 = Utf8               Ljava/lang/Long;\n   #138 = Utf8               LONG_ONE\n   #139 = Utf8               LONG_MINUS_ONE\n   #140 = Utf8               INTEGER_ZERO\n   #141 = Utf8               Ljava/lang/Integer;\n   #142 = Utf8               INTEGER_ONE\n@@ -178,368 +178,361 @@\n   #171 = Utf8               Ljava/lang/String;\n   #172 = Utf8               (Ljava/lang/String;I)I\n   #173 = Utf8               nfe\n   #174 = Utf8               Ljava/lang/NumberFormatException;\n   #175 = Utf8               defaultValue\n   #176 = Utf8               I\n   #177 = Utf8               StackMapTable\n-  #178 = Class              #329          // java/lang/NumberFormatException\n-  #179 = Utf8               toLong\n-  #180 = Utf8               (Ljava/lang/String;)J\n-  #181 = Utf8               (Ljava/lang/String;J)J\n-  #182 = Utf8               J\n-  #183 = Utf8               toFloat\n-  #184 = Utf8               (Ljava/lang/String;)F\n-  #185 = Utf8               (Ljava/lang/String;F)F\n-  #186 = Utf8               F\n-  #187 = Utf8               toDouble\n-  #188 = Utf8               (Ljava/lang/String;)D\n-  #189 = Utf8               (Ljava/lang/String;D)D\n-  #190 = Utf8               D\n-  #191 = Utf8               (Ljava/math/BigDecimal;)D\n-  #192 = Utf8               value\n-  #193 = Utf8               Ljava/math/BigDecimal;\n-  #194 = Utf8               (Ljava/math/BigDecimal;D)D\n-  #195 = Utf8               toByte\n-  #196 = Utf8               (Ljava/lang/String;)B\n-  #197 = Utf8               (Ljava/lang/String;B)B\n-  #198 = Utf8               B\n-  #199 = Utf8               toShort\n-  #200 = Utf8               (Ljava/lang/String;)S\n-  #201 = Utf8               (Ljava/lang/String;S)S\n-  #202 = Utf8               S\n-  #203 = Utf8               toScaledBigDecimal\n-  #204 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #205 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #206 = Utf8               scale\n-  #207 = Utf8               roundingMode\n-  #208 = Utf8               Ljava/math/RoundingMode;\n-  #209 = Class              #406          // java/math/BigDecimal\n-  #210 = Class              #455          // java/math/RoundingMode\n-  #211 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n-  #212 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #213 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n-  #214 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #215 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #216 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #217 = Utf8               createNumber\n-  #218 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n-  #219 = Utf8               pfx\n-  #220 = Utf8               i\n-  #221 = Utf8               firstSigDigit\n-  #222 = Utf8               C\n-  #223 = Utf8               hexDigits\n-  #224 = Utf8               dec\n-  #225 = Utf8               mant\n-  #226 = Utf8               exp\n-  #227 = Utf8               f\n-  #228 = Utf8               d\n-  #229 = Utf8               numeric\n-  #230 = Utf8               allZeros\n-  #231 = Utf8               Z\n-  #232 = Utf8               b\n-  #233 = Utf8               hex_prefixes\n-  #234 = Utf8               [Ljava/lang/String;\n-  #235 = Utf8               pfxLen\n-  #236 = Utf8               lastChar\n-  #237 = Utf8               decPos\n-  #238 = Utf8               expPos\n-  #239 = Class              #362          // java/lang/String\n-  #240 = Class              #234          // \"[Ljava/lang/String;\"\n-  #241 = Class              #411          // java/lang/Float\n-  #242 = Class              #409          // java/lang/Double\n-  #243 = Utf8               getMantissa\n-  #244 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #245 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #246 = Utf8               stopPos\n-  #247 = Utf8               firstChar\n-  #248 = Utf8               hasSign\n-  #249 = Utf8               isAllZeros\n-  #250 = Utf8               (Ljava/lang/String;)Z\n-  #251 = Utf8               createFloat\n-  #252 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n-  #253 = Utf8               createDouble\n-  #254 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n-  #255 = Utf8               createInteger\n-  #256 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #257 = Utf8               createLong\n-  #258 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n-  #259 = Utf8               createBigInteger\n-  #260 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n-  #261 = Utf8               pos\n-  #262 = Utf8               radix\n-  #263 = Utf8               negate\n-  #264 = Utf8               Ljava/math/BigInteger;\n-  #265 = Class              #401          // java/math/BigInteger\n-  #266 = Utf8               createBigDecimal\n-  #267 = Utf8               min\n-  #268 = Utf8               ([J)J\n-  #269 = Utf8               array\n-  #270 = Utf8               [J\n-  #271 = Utf8               ([I)I\n-  #272 = Utf8               j\n-  #273 = Utf8               [I\n-  #274 = Utf8               ([S)S\n-  #275 = Utf8               [S\n-  #276 = Utf8               ([B)B\n-  #277 = Utf8               [B\n-  #278 = Utf8               ([D)D\n-  #279 = Utf8               [D\n-  #280 = Utf8               ([F)F\n-  #281 = Utf8               [F\n-  #282 = Utf8               max\n-  #283 = Utf8               validateArray\n-  #284 = Utf8               (Ljava/lang/Object;)V\n-  #285 = Utf8               Ljava/lang/Object;\n-  #286 = Utf8               (JJJ)J\n-  #287 = Utf8               a\n-  #288 = Utf8               c\n-  #289 = Utf8               (III)I\n-  #290 = Utf8               (SSS)S\n-  #291 = Utf8               (BBB)B\n-  #292 = Utf8               (DDD)D\n-  #293 = Utf8               (FFF)F\n-  #294 = Utf8               isDigits\n-  #295 = Utf8               isNumber\n-  #296 = Utf8               Deprecated\n-  #297 = Utf8               RuntimeVisibleAnnotations\n-  #298 = Utf8               Ljava/lang/Deprecated;\n-  #299 = Utf8               isCreatable\n-  #300 = Utf8               chars\n-  #301 = Utf8               [C\n-  #302 = Utf8               sz\n-  #303 = Utf8               hasExp\n-  #304 = Utf8               hasDecPoint\n-  #305 = Utf8               allowSigns\n-  #306 = Utf8               foundDigit\n-  #307 = Utf8               start\n-  #308 = Class              #301          // \"[C\"\n-  #309 = Utf8               isParsable\n-  #310 = Utf8               withDecimalsParsing\n-  #311 = Utf8               (Ljava/lang/String;I)Z\n-  #312 = Utf8               isDecimalPoint\n-  #313 = Utf8               beginIdx\n-  #314 = Utf8               decimalPoints\n-  #315 = Utf8               compare\n-  #316 = Utf8               (II)I\n-  #317 = Utf8               x\n-  #318 = Utf8               y\n-  #319 = Utf8               (JJ)I\n-  #320 = Utf8               (SS)I\n-  #321 = Utf8               (BB)I\n-  #322 = Utf8               <clinit>\n-  #323 = Utf8               SourceFile\n-  #324 = Utf8               NumberUtils.java\n-  #325 = NameAndType        #161:#162     // \"<init>\":()V\n-  #326 = NameAndType        #168:#172     // toInt:(Ljava/lang/String;I)I\n-  #327 = Class              #456          // java/lang/Integer\n-  #328 = NameAndType        #457:#169     // parseInt:(Ljava/lang/String;)I\n-  #329 = Utf8               java/lang/NumberFormatException\n-  #330 = NameAndType        #179:#181     // toLong:(Ljava/lang/String;J)J\n-  #331 = Class              #458          // java/lang/Long\n-  #332 = NameAndType        #459:#180     // parseLong:(Ljava/lang/String;)J\n-  #333 = NameAndType        #183:#185     // toFloat:(Ljava/lang/String;F)F\n-  #334 = NameAndType        #460:#184     // parseFloat:(Ljava/lang/String;)F\n-  #335 = NameAndType        #187:#189     // toDouble:(Ljava/lang/String;D)D\n-  #336 = NameAndType        #461:#188     // parseDouble:(Ljava/lang/String;)D\n-  #337 = NameAndType        #187:#194     // toDouble:(Ljava/math/BigDecimal;D)D\n-  #338 = NameAndType        #462:#463     // doubleValue:()D\n-  #339 = NameAndType        #195:#197     // toByte:(Ljava/lang/String;B)B\n-  #340 = Class              #464          // java/lang/Byte\n-  #341 = NameAndType        #465:#196     // parseByte:(Ljava/lang/String;)B\n-  #342 = NameAndType        #199:#201     // toShort:(Ljava/lang/String;S)S\n-  #343 = Class              #466          // java/lang/Short\n-  #344 = NameAndType        #467:#200     // parseShort:(Ljava/lang/String;)S\n-  #345 = NameAndType        #143:#141     // INTEGER_TWO:Ljava/lang/Integer;\n-  #346 = NameAndType        #468:#469     // intValue:()I\n-  #347 = Class              #455          // java/math/RoundingMode\n-  #348 = NameAndType        #470:#208     // HALF_EVEN:Ljava/math/RoundingMode;\n-  #349 = NameAndType        #203:#205     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #350 = NameAndType        #471:#193     // ZERO:Ljava/math/BigDecimal;\n-  #351 = NameAndType        #472:#473     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #352 = NameAndType        #203:#212     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #353 = NameAndType        #474:#475     // floatValue:()F\n-  #354 = NameAndType        #476:#477     // valueOf:(D)Ljava/math/BigDecimal;\n-  #355 = NameAndType        #203:#214     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #356 = NameAndType        #203:#216     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #357 = NameAndType        #266:#215     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #358 = Class              #478          // org/apache/commons/lang3/StringUtils\n-  #359 = NameAndType        #479:#480     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #360 = Utf8               A blank string is not a valid number\n-  #361 = NameAndType        #161:#481     // \"<init>\":(Ljava/lang/String;)V\n-  #362 = Utf8               java/lang/String\n-  #363 = Utf8               0x\n-  #364 = Utf8               0X\n-  #365 = Utf8               -0x\n-  #366 = Utf8               -0X\n-  #367 = Utf8               #\n-  #368 = Utf8               -#\n-  #369 = NameAndType        #482:#250     // startsWith:(Ljava/lang/String;)Z\n-  #370 = NameAndType        #483:#469     // length:()I\n-  #371 = NameAndType        #484:#485     // charAt:(I)C\n-  #372 = NameAndType        #259:#260     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-  #373 = NameAndType        #257:#258     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-  #374 = NameAndType        #255:#256     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #375 = NameAndType        #486:#487     // indexOf:(I)I\n-  #376 = Utf8               java/lang/StringBuilder\n-  #377 = NameAndType        #488:#489     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #378 = Utf8                is not a valid number.\n-  #379 = NameAndType        #490:#491     // toString:()Ljava/lang/String;\n-  #380 = NameAndType        #492:#493     // substring:(II)Ljava/lang/String;\n-  #381 = NameAndType        #492:#494     // substring:(I)Ljava/lang/String;\n-  #382 = NameAndType        #243:#245     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-  #383 = NameAndType        #243:#244     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-  #384 = Class              #495          // java/lang/Character\n-  #385 = NameAndType        #496:#497     // isDigit:(C)Z\n-  #386 = NameAndType        #249:#250     // isAllZeros:(Ljava/lang/String;)Z\n-  #387 = NameAndType        #498:#499     // isEmpty:()Z\n-  #388 = NameAndType        #294:#250     // isDigits:(Ljava/lang/String;)Z\n-  #389 = NameAndType        #251:#252     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-  #390 = NameAndType        #500:#499     // isInfinite:()Z\n-  #391 = NameAndType        #253:#254     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-  #392 = NameAndType        #501:#502     // equals:(Ljava/lang/Object;)Z\n-  #393 = NameAndType        #503:#504     // compareTo:(Ljava/math/BigDecimal;)I\n-  #394 = NameAndType        #476:#252     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-  #395 = NameAndType        #476:#254     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-  #396 = NameAndType        #505:#256     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #397 = NameAndType        #505:#258     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n-  #398 = Utf8               -\n-  #399 = NameAndType        #482:#311     // startsWith:(Ljava/lang/String;I)Z\n-  #400 = Utf8               0\n-  #401 = Utf8               java/math/BigInteger\n-  #402 = NameAndType        #161:#506     // \"<init>\":(Ljava/lang/String;I)V\n-  #403 = NameAndType        #263:#507     // negate:()Ljava/math/BigInteger;\n-  #404 = NameAndType        #508:#491     // trim:()Ljava/lang/String;\n-  #405 = Utf8               --\n-  #406 = Utf8               java/math/BigDecimal\n-  #407 = NameAndType        #283:#284     // validateArray:(Ljava/lang/Object;)V\n-  #408 = NameAndType        #509:#510     // isNaN:(D)Z\n-  #409 = Utf8               java/lang/Double\n-  #410 = NameAndType        #509:#511     // isNaN:(F)Z\n-  #411 = Utf8               java/lang/Float\n-  #412 = Utf8               The Array must not be null\n-  #413 = Utf8               java/lang/Object\n-  #414 = Class              #512          // org/apache/commons/lang3/Validate\n-  #415 = NameAndType        #513:#514     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #416 = Class              #515          // java/lang/reflect/Array\n-  #417 = NameAndType        #516:#517     // getLength:(Ljava/lang/Object;)I\n-  #418 = Utf8               Array cannot be empty.\n-  #419 = Class              #518          // java/lang/Math\n-  #420 = NameAndType        #267:#519     // min:(DD)D\n-  #421 = NameAndType        #267:#520     // min:(FF)F\n-  #422 = NameAndType        #282:#519     // max:(DD)D\n-  #423 = NameAndType        #282:#520     // max:(FF)F\n-  #424 = NameAndType        #521:#480     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #425 = NameAndType        #299:#250     // isCreatable:(Ljava/lang/String;)Z\n-  #426 = NameAndType        #498:#480     // isEmpty:(Ljava/lang/CharSequence;)Z\n-  #427 = NameAndType        #522:#523     // toCharArray:()[C\n-  #428 = NameAndType        #524:#525     // contains:(Ljava/lang/CharSequence;I)Z\n-  #429 = NameAndType        #310:#311     // withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #430 = NameAndType        #476:#526     // valueOf:(J)Ljava/lang/Long;\n-  #431 = NameAndType        #136:#137     // LONG_ZERO:Ljava/lang/Long;\n-  #432 = NameAndType        #138:#137     // LONG_ONE:Ljava/lang/Long;\n-  #433 = NameAndType        #139:#137     // LONG_MINUS_ONE:Ljava/lang/Long;\n-  #434 = NameAndType        #476:#527     // valueOf:(I)Ljava/lang/Integer;\n-  #435 = NameAndType        #140:#141     // INTEGER_ZERO:Ljava/lang/Integer;\n-  #436 = NameAndType        #142:#141     // INTEGER_ONE:Ljava/lang/Integer;\n-  #437 = NameAndType        #144:#141     // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #438 = NameAndType        #476:#528     // valueOf:(S)Ljava/lang/Short;\n-  #439 = NameAndType        #145:#146     // SHORT_ZERO:Ljava/lang/Short;\n-  #440 = NameAndType        #147:#146     // SHORT_ONE:Ljava/lang/Short;\n-  #441 = NameAndType        #148:#146     // SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #442 = NameAndType        #476:#529     // valueOf:(B)Ljava/lang/Byte;\n-  #443 = NameAndType        #149:#150     // BYTE_ZERO:Ljava/lang/Byte;\n-  #444 = NameAndType        #151:#150     // BYTE_ONE:Ljava/lang/Byte;\n-  #445 = NameAndType        #152:#150     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #446 = NameAndType        #476:#530     // valueOf:(D)Ljava/lang/Double;\n-  #447 = NameAndType        #153:#154     // DOUBLE_ZERO:Ljava/lang/Double;\n-  #448 = NameAndType        #155:#154     // DOUBLE_ONE:Ljava/lang/Double;\n-  #449 = NameAndType        #156:#154     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #450 = NameAndType        #476:#531     // valueOf:(F)Ljava/lang/Float;\n-  #451 = NameAndType        #157:#158     // FLOAT_ZERO:Ljava/lang/Float;\n-  #452 = NameAndType        #159:#158     // FLOAT_ONE:Ljava/lang/Float;\n-  #453 = NameAndType        #160:#158     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #454 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #455 = Utf8               java/math/RoundingMode\n-  #456 = Utf8               java/lang/Integer\n-  #457 = Utf8               parseInt\n-  #458 = Utf8               java/lang/Long\n-  #459 = Utf8               parseLong\n-  #460 = Utf8               parseFloat\n-  #461 = Utf8               parseDouble\n-  #462 = Utf8               doubleValue\n-  #463 = Utf8               ()D\n-  #464 = Utf8               java/lang/Byte\n-  #465 = Utf8               parseByte\n-  #466 = Utf8               java/lang/Short\n-  #467 = Utf8               parseShort\n-  #468 = Utf8               intValue\n-  #469 = Utf8               ()I\n-  #470 = Utf8               HALF_EVEN\n-  #471 = Utf8               ZERO\n-  #472 = Utf8               setScale\n-  #473 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #474 = Utf8               floatValue\n-  #475 = Utf8               ()F\n-  #476 = Utf8               valueOf\n-  #477 = Utf8               (D)Ljava/math/BigDecimal;\n-  #478 = Utf8               org/apache/commons/lang3/StringUtils\n-  #479 = Utf8               isBlank\n-  #480 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #481 = Utf8               (Ljava/lang/String;)V\n-  #482 = Utf8               startsWith\n-  #483 = Utf8               length\n-  #484 = Utf8               charAt\n-  #485 = Utf8               (I)C\n-  #486 = Utf8               indexOf\n-  #487 = Utf8               (I)I\n-  #488 = Utf8               append\n-  #489 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #490 = Utf8               toString\n-  #491 = Utf8               ()Ljava/lang/String;\n-  #492 = Utf8               substring\n-  #493 = Utf8               (II)Ljava/lang/String;\n-  #494 = Utf8               (I)Ljava/lang/String;\n-  #495 = Utf8               java/lang/Character\n-  #496 = Utf8               isDigit\n-  #497 = Utf8               (C)Z\n-  #498 = Utf8               isEmpty\n-  #499 = Utf8               ()Z\n-  #500 = Utf8               isInfinite\n-  #501 = Utf8               equals\n-  #502 = Utf8               (Ljava/lang/Object;)Z\n-  #503 = Utf8               compareTo\n-  #504 = Utf8               (Ljava/math/BigDecimal;)I\n-  #505 = Utf8               decode\n-  #506 = Utf8               (Ljava/lang/String;I)V\n-  #507 = Utf8               ()Ljava/math/BigInteger;\n-  #508 = Utf8               trim\n-  #509 = Utf8               isNaN\n-  #510 = Utf8               (D)Z\n-  #511 = Utf8               (F)Z\n-  #512 = Utf8               org/apache/commons/lang3/Validate\n-  #513 = Utf8               isTrue\n-  #514 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #515 = Utf8               java/lang/reflect/Array\n-  #516 = Utf8               getLength\n-  #517 = Utf8               (Ljava/lang/Object;)I\n-  #518 = Utf8               java/lang/Math\n-  #519 = Utf8               (DD)D\n-  #520 = Utf8               (FF)F\n-  #521 = Utf8               isNumeric\n-  #522 = Utf8               toCharArray\n-  #523 = Utf8               ()[C\n-  #524 = Utf8               contains\n-  #525 = Utf8               (Ljava/lang/CharSequence;I)Z\n-  #526 = Utf8               (J)Ljava/lang/Long;\n-  #527 = Utf8               (I)Ljava/lang/Integer;\n-  #528 = Utf8               (S)Ljava/lang/Short;\n-  #529 = Utf8               (B)Ljava/lang/Byte;\n-  #530 = Utf8               (D)Ljava/lang/Double;\n-  #531 = Utf8               (F)Ljava/lang/Float;\n+  #178 = Utf8               toLong\n+  #179 = Utf8               (Ljava/lang/String;)J\n+  #180 = Utf8               (Ljava/lang/String;J)J\n+  #181 = Utf8               J\n+  #182 = Utf8               toFloat\n+  #183 = Utf8               (Ljava/lang/String;)F\n+  #184 = Utf8               (Ljava/lang/String;F)F\n+  #185 = Utf8               F\n+  #186 = Utf8               toDouble\n+  #187 = Utf8               (Ljava/lang/String;)D\n+  #188 = Utf8               (Ljava/lang/String;D)D\n+  #189 = Utf8               D\n+  #190 = Utf8               (Ljava/math/BigDecimal;)D\n+  #191 = Utf8               value\n+  #192 = Utf8               Ljava/math/BigDecimal;\n+  #193 = Utf8               (Ljava/math/BigDecimal;D)D\n+  #194 = Utf8               toByte\n+  #195 = Utf8               (Ljava/lang/String;)B\n+  #196 = Utf8               (Ljava/lang/String;B)B\n+  #197 = Utf8               B\n+  #198 = Utf8               toShort\n+  #199 = Utf8               (Ljava/lang/String;)S\n+  #200 = Utf8               (Ljava/lang/String;S)S\n+  #201 = Utf8               S\n+  #202 = Utf8               toScaledBigDecimal\n+  #203 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #204 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #205 = Utf8               scale\n+  #206 = Utf8               roundingMode\n+  #207 = Utf8               Ljava/math/RoundingMode;\n+  #208 = Class              #448          // java/math/RoundingMode\n+  #209 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n+  #210 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #211 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n+  #212 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #213 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #214 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #215 = Utf8               createNumber\n+  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n+  #217 = Utf8               pfx\n+  #218 = Utf8               i\n+  #219 = Utf8               firstSigDigit\n+  #220 = Utf8               C\n+  #221 = Utf8               hexDigits\n+  #222 = Utf8               dec\n+  #223 = Utf8               mant\n+  #224 = Utf8               exp\n+  #225 = Utf8               f\n+  #226 = Utf8               d\n+  #227 = Utf8               numeric\n+  #228 = Utf8               allZeros\n+  #229 = Utf8               Z\n+  #230 = Utf8               b\n+  #231 = Utf8               hex_prefixes\n+  #232 = Utf8               [Ljava/lang/String;\n+  #233 = Utf8               pfxLen\n+  #234 = Utf8               lastChar\n+  #235 = Utf8               decPos\n+  #236 = Utf8               expPos\n+  #237 = Class              #232          // \"[Ljava/lang/String;\"\n+  #238 = Utf8               getMantissa\n+  #239 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #240 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #241 = Utf8               stopPos\n+  #242 = Utf8               firstChar\n+  #243 = Utf8               hasSign\n+  #244 = Utf8               isAllZeros\n+  #245 = Utf8               (Ljava/lang/String;)Z\n+  #246 = Utf8               createFloat\n+  #247 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n+  #248 = Utf8               createDouble\n+  #249 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n+  #250 = Utf8               createInteger\n+  #251 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+  #252 = Utf8               createLong\n+  #253 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n+  #254 = Utf8               createBigInteger\n+  #255 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n+  #256 = Utf8               pos\n+  #257 = Utf8               radix\n+  #258 = Utf8               negate\n+  #259 = Utf8               Ljava/math/BigInteger;\n+  #260 = Utf8               createBigDecimal\n+  #261 = Utf8               min\n+  #262 = Utf8               ([J)J\n+  #263 = Utf8               array\n+  #264 = Utf8               [J\n+  #265 = Utf8               ([I)I\n+  #266 = Utf8               j\n+  #267 = Utf8               [I\n+  #268 = Utf8               ([S)S\n+  #269 = Utf8               [S\n+  #270 = Utf8               ([B)B\n+  #271 = Utf8               [B\n+  #272 = Utf8               ([D)D\n+  #273 = Utf8               [D\n+  #274 = Utf8               ([F)F\n+  #275 = Utf8               [F\n+  #276 = Utf8               max\n+  #277 = Utf8               validateArray\n+  #278 = Utf8               (Ljava/lang/Object;)V\n+  #279 = Utf8               Ljava/lang/Object;\n+  #280 = Utf8               (JJJ)J\n+  #281 = Utf8               a\n+  #282 = Utf8               c\n+  #283 = Utf8               (III)I\n+  #284 = Utf8               (SSS)S\n+  #285 = Utf8               (BBB)B\n+  #286 = Utf8               (DDD)D\n+  #287 = Utf8               (FFF)F\n+  #288 = Utf8               isDigits\n+  #289 = Utf8               isNumber\n+  #290 = Utf8               Deprecated\n+  #291 = Utf8               RuntimeVisibleAnnotations\n+  #292 = Utf8               Ljava/lang/Deprecated;\n+  #293 = Utf8               isCreatable\n+  #294 = Utf8               chars\n+  #295 = Utf8               [C\n+  #296 = Utf8               sz\n+  #297 = Utf8               hasExp\n+  #298 = Utf8               hasDecPoint\n+  #299 = Utf8               allowSigns\n+  #300 = Utf8               foundDigit\n+  #301 = Utf8               start\n+  #302 = Class              #295          // \"[C\"\n+  #303 = Utf8               isParsable\n+  #304 = Utf8               withDecimalsParsing\n+  #305 = Utf8               (Ljava/lang/String;I)Z\n+  #306 = Utf8               isDecimalPoint\n+  #307 = Utf8               beginIdx\n+  #308 = Utf8               decimalPoints\n+  #309 = Utf8               compare\n+  #310 = Utf8               (II)I\n+  #311 = Utf8               x\n+  #312 = Utf8               y\n+  #313 = Utf8               (JJ)I\n+  #314 = Utf8               (SS)I\n+  #315 = Utf8               (BB)I\n+  #316 = Utf8               <clinit>\n+  #317 = Utf8               SourceFile\n+  #318 = Utf8               NumberUtils.java\n+  #319 = NameAndType        #161:#162     // \"<init>\":()V\n+  #320 = NameAndType        #168:#172     // toInt:(Ljava/lang/String;I)I\n+  #321 = Class              #449          // java/lang/Integer\n+  #322 = NameAndType        #450:#169     // parseInt:(Ljava/lang/String;)I\n+  #323 = Utf8               java/lang/NumberFormatException\n+  #324 = NameAndType        #178:#180     // toLong:(Ljava/lang/String;J)J\n+  #325 = Class              #451          // java/lang/Long\n+  #326 = NameAndType        #452:#179     // parseLong:(Ljava/lang/String;)J\n+  #327 = NameAndType        #182:#184     // toFloat:(Ljava/lang/String;F)F\n+  #328 = NameAndType        #453:#183     // parseFloat:(Ljava/lang/String;)F\n+  #329 = NameAndType        #186:#188     // toDouble:(Ljava/lang/String;D)D\n+  #330 = NameAndType        #454:#187     // parseDouble:(Ljava/lang/String;)D\n+  #331 = NameAndType        #186:#193     // toDouble:(Ljava/math/BigDecimal;D)D\n+  #332 = NameAndType        #455:#456     // doubleValue:()D\n+  #333 = NameAndType        #194:#196     // toByte:(Ljava/lang/String;B)B\n+  #334 = Class              #457          // java/lang/Byte\n+  #335 = NameAndType        #458:#195     // parseByte:(Ljava/lang/String;)B\n+  #336 = NameAndType        #198:#200     // toShort:(Ljava/lang/String;S)S\n+  #337 = Class              #459          // java/lang/Short\n+  #338 = NameAndType        #460:#199     // parseShort:(Ljava/lang/String;)S\n+  #339 = NameAndType        #143:#141     // INTEGER_TWO:Ljava/lang/Integer;\n+  #340 = NameAndType        #461:#462     // intValue:()I\n+  #341 = NameAndType        #463:#207     // HALF_EVEN:Ljava/math/RoundingMode;\n+  #342 = NameAndType        #202:#204     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #343 = NameAndType        #464:#192     // ZERO:Ljava/math/BigDecimal;\n+  #344 = NameAndType        #465:#466     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #345 = NameAndType        #202:#210     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #346 = NameAndType        #467:#468     // floatValue:()F\n+  #347 = NameAndType        #469:#470     // valueOf:(D)Ljava/math/BigDecimal;\n+  #348 = NameAndType        #202:#212     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #349 = NameAndType        #202:#214     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #350 = NameAndType        #260:#213     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #351 = Class              #471          // org/apache/commons/lang3/StringUtils\n+  #352 = NameAndType        #472:#473     // isBlank:(Ljava/lang/CharSequence;)Z\n+  #353 = Utf8               A blank string is not a valid number\n+  #354 = NameAndType        #161:#474     // \"<init>\":(Ljava/lang/String;)V\n+  #355 = Utf8               java/lang/String\n+  #356 = Utf8               0x\n+  #357 = Utf8               0X\n+  #358 = Utf8               -0x\n+  #359 = Utf8               -0X\n+  #360 = Utf8               #\n+  #361 = Utf8               -#\n+  #362 = NameAndType        #475:#245     // startsWith:(Ljava/lang/String;)Z\n+  #363 = NameAndType        #476:#462     // length:()I\n+  #364 = NameAndType        #477:#478     // charAt:(I)C\n+  #365 = NameAndType        #254:#255     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #366 = NameAndType        #252:#253     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+  #367 = NameAndType        #250:#251     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #368 = NameAndType        #479:#480     // indexOf:(I)I\n+  #369 = Utf8               java/lang/StringBuilder\n+  #370 = NameAndType        #481:#482     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #371 = Utf8                is not a valid number.\n+  #372 = NameAndType        #483:#484     // toString:()Ljava/lang/String;\n+  #373 = NameAndType        #485:#486     // substring:(II)Ljava/lang/String;\n+  #374 = NameAndType        #485:#487     // substring:(I)Ljava/lang/String;\n+  #375 = NameAndType        #238:#240     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+  #376 = NameAndType        #238:#239     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+  #377 = Class              #488          // java/lang/Character\n+  #378 = NameAndType        #489:#490     // isDigit:(C)Z\n+  #379 = NameAndType        #244:#245     // isAllZeros:(Ljava/lang/String;)Z\n+  #380 = NameAndType        #491:#492     // isEmpty:()Z\n+  #381 = NameAndType        #288:#245     // isDigits:(Ljava/lang/String;)Z\n+  #382 = NameAndType        #246:#247     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+  #383 = NameAndType        #493:#492     // isInfinite:()Z\n+  #384 = NameAndType        #248:#249     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+  #385 = NameAndType        #494:#495     // equals:(Ljava/lang/Object;)Z\n+  #386 = NameAndType        #496:#497     // compareTo:(Ljava/math/BigDecimal;)I\n+  #387 = NameAndType        #469:#247     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+  #388 = NameAndType        #469:#249     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+  #389 = NameAndType        #498:#251     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #390 = NameAndType        #498:#253     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n+  #391 = Utf8               -\n+  #392 = NameAndType        #475:#305     // startsWith:(Ljava/lang/String;I)Z\n+  #393 = Utf8               0\n+  #394 = Utf8               java/math/BigInteger\n+  #395 = NameAndType        #161:#499     // \"<init>\":(Ljava/lang/String;I)V\n+  #396 = NameAndType        #258:#500     // negate:()Ljava/math/BigInteger;\n+  #397 = NameAndType        #501:#484     // trim:()Ljava/lang/String;\n+  #398 = Utf8               --\n+  #399 = Utf8               java/math/BigDecimal\n+  #400 = NameAndType        #277:#278     // validateArray:(Ljava/lang/Object;)V\n+  #401 = NameAndType        #502:#503     // isNaN:(D)Z\n+  #402 = Utf8               java/lang/Double\n+  #403 = NameAndType        #502:#504     // isNaN:(F)Z\n+  #404 = Utf8               java/lang/Float\n+  #405 = Utf8               The Array must not be null\n+  #406 = Utf8               java/lang/Object\n+  #407 = Class              #505          // org/apache/commons/lang3/Validate\n+  #408 = NameAndType        #506:#507     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #409 = Class              #508          // java/lang/reflect/Array\n+  #410 = NameAndType        #509:#510     // getLength:(Ljava/lang/Object;)I\n+  #411 = Utf8               Array cannot be empty.\n+  #412 = Class              #511          // java/lang/Math\n+  #413 = NameAndType        #261:#512     // min:(DD)D\n+  #414 = NameAndType        #261:#513     // min:(FF)F\n+  #415 = NameAndType        #276:#512     // max:(DD)D\n+  #416 = NameAndType        #276:#513     // max:(FF)F\n+  #417 = NameAndType        #514:#473     // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #418 = NameAndType        #293:#245     // isCreatable:(Ljava/lang/String;)Z\n+  #419 = NameAndType        #491:#473     // isEmpty:(Ljava/lang/CharSequence;)Z\n+  #420 = NameAndType        #515:#516     // toCharArray:()[C\n+  #421 = NameAndType        #517:#518     // contains:(Ljava/lang/CharSequence;I)Z\n+  #422 = NameAndType        #304:#305     // withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #423 = NameAndType        #469:#519     // valueOf:(J)Ljava/lang/Long;\n+  #424 = NameAndType        #136:#137     // LONG_ZERO:Ljava/lang/Long;\n+  #425 = NameAndType        #138:#137     // LONG_ONE:Ljava/lang/Long;\n+  #426 = NameAndType        #139:#137     // LONG_MINUS_ONE:Ljava/lang/Long;\n+  #427 = NameAndType        #469:#520     // valueOf:(I)Ljava/lang/Integer;\n+  #428 = NameAndType        #140:#141     // INTEGER_ZERO:Ljava/lang/Integer;\n+  #429 = NameAndType        #142:#141     // INTEGER_ONE:Ljava/lang/Integer;\n+  #430 = NameAndType        #144:#141     // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #431 = NameAndType        #469:#521     // valueOf:(S)Ljava/lang/Short;\n+  #432 = NameAndType        #145:#146     // SHORT_ZERO:Ljava/lang/Short;\n+  #433 = NameAndType        #147:#146     // SHORT_ONE:Ljava/lang/Short;\n+  #434 = NameAndType        #148:#146     // SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #435 = NameAndType        #469:#522     // valueOf:(B)Ljava/lang/Byte;\n+  #436 = NameAndType        #149:#150     // BYTE_ZERO:Ljava/lang/Byte;\n+  #437 = NameAndType        #151:#150     // BYTE_ONE:Ljava/lang/Byte;\n+  #438 = NameAndType        #152:#150     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #439 = NameAndType        #469:#523     // valueOf:(D)Ljava/lang/Double;\n+  #440 = NameAndType        #153:#154     // DOUBLE_ZERO:Ljava/lang/Double;\n+  #441 = NameAndType        #155:#154     // DOUBLE_ONE:Ljava/lang/Double;\n+  #442 = NameAndType        #156:#154     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #443 = NameAndType        #469:#524     // valueOf:(F)Ljava/lang/Float;\n+  #444 = NameAndType        #157:#158     // FLOAT_ZERO:Ljava/lang/Float;\n+  #445 = NameAndType        #159:#158     // FLOAT_ONE:Ljava/lang/Float;\n+  #446 = NameAndType        #160:#158     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #447 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+  #448 = Utf8               java/math/RoundingMode\n+  #449 = Utf8               java/lang/Integer\n+  #450 = Utf8               parseInt\n+  #451 = Utf8               java/lang/Long\n+  #452 = Utf8               parseLong\n+  #453 = Utf8               parseFloat\n+  #454 = Utf8               parseDouble\n+  #455 = Utf8               doubleValue\n+  #456 = Utf8               ()D\n+  #457 = Utf8               java/lang/Byte\n+  #458 = Utf8               parseByte\n+  #459 = Utf8               java/lang/Short\n+  #460 = Utf8               parseShort\n+  #461 = Utf8               intValue\n+  #462 = Utf8               ()I\n+  #463 = Utf8               HALF_EVEN\n+  #464 = Utf8               ZERO\n+  #465 = Utf8               setScale\n+  #466 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #467 = Utf8               floatValue\n+  #468 = Utf8               ()F\n+  #469 = Utf8               valueOf\n+  #470 = Utf8               (D)Ljava/math/BigDecimal;\n+  #471 = Utf8               org/apache/commons/lang3/StringUtils\n+  #472 = Utf8               isBlank\n+  #473 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #474 = Utf8               (Ljava/lang/String;)V\n+  #475 = Utf8               startsWith\n+  #476 = Utf8               length\n+  #477 = Utf8               charAt\n+  #478 = Utf8               (I)C\n+  #479 = Utf8               indexOf\n+  #480 = Utf8               (I)I\n+  #481 = Utf8               append\n+  #482 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #483 = Utf8               toString\n+  #484 = Utf8               ()Ljava/lang/String;\n+  #485 = Utf8               substring\n+  #486 = Utf8               (II)Ljava/lang/String;\n+  #487 = Utf8               (I)Ljava/lang/String;\n+  #488 = Utf8               java/lang/Character\n+  #489 = Utf8               isDigit\n+  #490 = Utf8               (C)Z\n+  #491 = Utf8               isEmpty\n+  #492 = Utf8               ()Z\n+  #493 = Utf8               isInfinite\n+  #494 = Utf8               equals\n+  #495 = Utf8               (Ljava/lang/Object;)Z\n+  #496 = Utf8               compareTo\n+  #497 = Utf8               (Ljava/math/BigDecimal;)I\n+  #498 = Utf8               decode\n+  #499 = Utf8               (Ljava/lang/String;I)V\n+  #500 = Utf8               ()Ljava/math/BigInteger;\n+  #501 = Utf8               trim\n+  #502 = Utf8               isNaN\n+  #503 = Utf8               (D)Z\n+  #504 = Utf8               (F)Z\n+  #505 = Utf8               org/apache/commons/lang3/Validate\n+  #506 = Utf8               isTrue\n+  #507 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #508 = Utf8               java/lang/reflect/Array\n+  #509 = Utf8               getLength\n+  #510 = Utf8               (Ljava/lang/Object;)I\n+  #511 = Utf8               java/lang/Math\n+  #512 = Utf8               (DD)D\n+  #513 = Utf8               (FF)F\n+  #514 = Utf8               isNumeric\n+  #515 = Utf8               toCharArray\n+  #516 = Utf8               ()[C\n+  #517 = Utf8               contains\n+  #518 = Utf8               (Ljava/lang/CharSequence;I)Z\n+  #519 = Utf8               (J)Ljava/lang/Long;\n+  #520 = Utf8               (I)Ljava/lang/Integer;\n+  #521 = Utf8               (S)Ljava/lang/Short;\n+  #522 = Utf8               (B)Ljava/lang/Byte;\n+  #523 = Utf8               (D)Ljava/lang/Double;\n+  #524 = Utf8               (F)Ljava/lang/Float;\n {\n   public static final java.lang.Long LONG_ZERO;\n     descriptor: Ljava/lang/Long;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final java.lang.Long LONG_ONE;\n     descriptor: Ljava/lang/Long;\n@@ -995,14 +988,16 @@\n         20: aload_2\n         21: invokevirtual #22                 // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         24: areturn\n       LineNumberTable:\n         line 457: 0\n         line 458: 4\n         line 460: 8\n+        line 462: 10\n+        line 460: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0 value   Ljava/math/BigDecimal;\n             0      25     1 scale   I\n             0      25     2 roundingMode   Ljava/math/RoundingMode;\n       StackMapTable: number_of_entries = 3\n         frame_type = 8 /* same */\n@@ -3310,15 +3305,15 @@\n       LineNumberTable:\n         line 1573: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0   str   Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #298()\n+      0: #292()\n         java.lang.Deprecated\n \n   public static boolean isCreatable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n"}]}
