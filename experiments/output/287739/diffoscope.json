{"diffoscope-json-version": 1, "source1": "first/X7875_NewUnix.class", "source2": "second/X7875_NewUnix.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,67 +1,67 @@\n-  SHA-256 checksum 5579301c5d1ff172cc64ed3ad754cc6536eddd9c9439517cae244e6e3748cec9\n+  SHA-256 checksum 8e34f8683971e4d74165377af5cc84b35f5d5530ba6b9e400ddd91b780bed3ab\n   Compiled from \"X7875_NewUnix.java\"\n public class org.apache.commons.compress.archivers.zip.X7875_NewUnix implements org.apache.commons.compress.archivers.zip.ZipExtraField,java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #39                         // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n   super_class: #48                        // java/lang/Object\n   interfaces: 3, fields: 7, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Methodref          #48.#105      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #39.#106      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.version:I\n-    #3 = Methodref          #39.#107      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.reset:()V\n-    #4 = Fieldref           #39.#108      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #5 = Fieldref           #39.#109      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.uid:Ljava/math/BigInteger;\n-    #6 = Methodref          #110.#111     // org/apache/commons/compress/archivers/zip/ZipUtil.bigToLong:(Ljava/math/BigInteger;)J\n-    #7 = Fieldref           #39.#112      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.gid:Ljava/math/BigInteger;\n-    #8 = Methodref          #110.#113     // org/apache/commons/compress/archivers/zip/ZipUtil.longToBig:(J)Ljava/math/BigInteger;\n-    #9 = Methodref          #31.#114      // java/math/BigInteger.toByteArray:()[B\n-   #10 = Methodref          #39.#115      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.trimLeadingZeroesForceMinLength:([B)[B\n-   #11 = Class              #116          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #12 = Methodref          #11.#117      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #13 = Fieldref           #39.#118      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #14 = Methodref          #110.#119     // org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B\n-   #15 = Methodref          #110.#120     // org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B\n-   #16 = Methodref          #121.#122     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #17 = Fieldref           #123.#124     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n-   #18 = Class              #125          // java/util/zip/ZipException\n-   #19 = Class              #126          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#105      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #127          // X7875_NewUnix length is too short, only\n-   #22 = Methodref          #19.#128      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Methodref          #19.#129      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #24 = String             #130          //  bytes\n-   #25 = Methodref          #19.#131      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #18.#132      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #27 = Methodref          #110.#133     // org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I\n-   #28 = String             #134          // X7875_NewUnix invalid: uidSize\n-   #29 = String             #135          //  doesn\\'t fit into\n-   #30 = Methodref          #136.#137     // java/util/Arrays.copyOfRange:([BII)[B\n-   #31 = Class              #138          // java/math/BigInteger\n-   #32 = Methodref          #31.#139      // java/math/BigInteger.\"<init>\":(I[B)V\n-   #33 = String             #140          // X7875_NewUnix invalid: gidSize\n-   #34 = Fieldref           #39.#141      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ONE_THOUSAND:Ljava/math/BigInteger;\n-   #35 = String             #142          // 0x7875 Zip Extra Field: UID=\n-   #36 = Methodref          #19.#143      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #37 = String             #144          //  GID=\n-   #38 = Methodref          #48.#145      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #39 = Class              #146          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-   #40 = Methodref          #31.#147      // java/math/BigInteger.equals:(Ljava/lang/Object;)Z\n+    #1 = Methodref          #48.#104      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #39.#105      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.version:I\n+    #3 = Methodref          #39.#106      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.reset:()V\n+    #4 = Fieldref           #39.#107      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+    #5 = Fieldref           #39.#108      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.uid:Ljava/math/BigInteger;\n+    #6 = Methodref          #109.#110     // org/apache/commons/compress/archivers/zip/ZipUtil.bigToLong:(Ljava/math/BigInteger;)J\n+    #7 = Fieldref           #39.#111      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.gid:Ljava/math/BigInteger;\n+    #8 = Methodref          #109.#112     // org/apache/commons/compress/archivers/zip/ZipUtil.longToBig:(J)Ljava/math/BigInteger;\n+    #9 = Methodref          #31.#113      // java/math/BigInteger.toByteArray:()[B\n+   #10 = Methodref          #39.#114      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.trimLeadingZeroesForceMinLength:([B)[B\n+   #11 = Class              #115          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #12 = Methodref          #11.#116      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #13 = Fieldref           #39.#117      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #14 = Methodref          #109.#118     // org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B\n+   #15 = Methodref          #109.#119     // org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B\n+   #16 = Methodref          #120.#121     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #17 = Fieldref           #122.#123     // org/apache/commons/compress/utils/ByteUtils.EMPTY_BYTE_ARRAY:[B\n+   #18 = Class              #124          // java/util/zip/ZipException\n+   #19 = Class              #125          // java/lang/StringBuilder\n+   #20 = Methodref          #19.#104      // java/lang/StringBuilder.\"<init>\":()V\n+   #21 = String             #126          // X7875_NewUnix length is too short, only\n+   #22 = Methodref          #19.#127      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = Methodref          #19.#128      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #24 = String             #129          //  bytes\n+   #25 = Methodref          #19.#130      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #26 = Methodref          #18.#131      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #27 = Methodref          #109.#132     // org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I\n+   #28 = String             #133          // X7875_NewUnix invalid: uidSize\n+   #29 = String             #134          //  doesn\\'t fit into\n+   #30 = Methodref          #135.#136     // java/util/Arrays.copyOfRange:([BII)[B\n+   #31 = Class              #137          // java/math/BigInteger\n+   #32 = Methodref          #31.#138      // java/math/BigInteger.\"<init>\":(I[B)V\n+   #33 = String             #139          // X7875_NewUnix invalid: gidSize\n+   #34 = Fieldref           #39.#140      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ONE_THOUSAND:Ljava/math/BigInteger;\n+   #35 = String             #141          // 0x7875 Zip Extra Field: UID=\n+   #36 = Methodref          #19.#142      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #37 = String             #143          //  GID=\n+   #38 = Methodref          #48.#144      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #39 = Class              #145          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n+   #40 = Methodref          #31.#146      // java/math/BigInteger.equals:(Ljava/lang/Object;)Z\n    #41 = Integer            -1234567\n-   #42 = Methodref          #31.#148      // java/math/BigInteger.hashCode:()I\n-   #43 = Methodref          #149.#150     // java/lang/Integer.rotateLeft:(II)I\n-   #44 = Methodref          #151.#152     // java/lang/Math.max:(II)I\n+   #42 = Methodref          #31.#147      // java/math/BigInteger.hashCode:()I\n+   #43 = Methodref          #148.#149     // java/lang/Integer.rotateLeft:(II)I\n+   #44 = Methodref          #150.#151     // java/lang/Math.max:(II)I\n    #45 = Long               1000l\n-   #47 = Methodref          #31.#153      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #48 = Class              #154          // java/lang/Object\n-   #49 = Class              #155          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #50 = Class              #156          // java/lang/Cloneable\n-   #51 = Class              #157          // java/io/Serializable\n+   #47 = Methodref          #31.#152      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+   #48 = Class              #153          // java/lang/Object\n+   #49 = Class              #154          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #50 = Class              #155          // java/lang/Cloneable\n+   #51 = Class              #156          // java/io/Serializable\n    #52 = Utf8               HEADER_ID\n    #53 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n    #54 = Utf8               ZERO\n    #55 = Utf8               ONE_THOUSAND\n    #56 = Utf8               Ljava/math/BigInteger;\n    #57 = Utf8               serialVersionUID\n    #58 = Utf8               J\n@@ -81,126 +81,125 @@\n    #73 = Utf8               ()J\n    #74 = Utf8               getGID\n    #75 = Utf8               setUID\n    #76 = Utf8               (J)V\n    #77 = Utf8               setGID\n    #78 = Utf8               getLocalFileDataLength\n    #79 = Utf8               StackMapTable\n-   #80 = Class              #158          // \"[B\"\n+   #80 = Class              #157          // \"[B\"\n    #81 = Utf8               getCentralDirectoryLength\n    #82 = Utf8               getLocalFileDataData\n    #83 = Utf8               ()[B\n    #84 = Utf8               getCentralDirectoryData\n    #85 = Utf8               parseFromLocalFileData\n    #86 = Utf8               ([BII)V\n    #87 = Utf8               Exceptions\n    #88 = Utf8               parseFromCentralDirectoryData\n    #89 = Utf8               reset\n    #90 = Utf8               toString\n    #91 = Utf8               ()Ljava/lang/String;\n    #92 = Utf8               clone\n    #93 = Utf8               ()Ljava/lang/Object;\n-   #94 = Class              #159          // java/lang/CloneNotSupportedException\n+   #94 = Class              #158          // java/lang/CloneNotSupportedException\n    #95 = Utf8               equals\n    #96 = Utf8               (Ljava/lang/Object;)Z\n-   #97 = Class              #146          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-   #98 = Utf8               hashCode\n-   #99 = Utf8               ()I\n-  #100 = Utf8               trimLeadingZeroesForceMinLength\n-  #101 = Utf8               ([B)[B\n-  #102 = Utf8               <clinit>\n-  #103 = Utf8               SourceFile\n-  #104 = Utf8               X7875_NewUnix.java\n-  #105 = NameAndType        #66:#67       // \"<init>\":()V\n-  #106 = NameAndType        #62:#63       // version:I\n-  #107 = NameAndType        #89:#67       // reset:()V\n-  #108 = NameAndType        #52:#53       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #109 = NameAndType        #64:#56       // uid:Ljava/math/BigInteger;\n-  #110 = Class              #160          // org/apache/commons/compress/archivers/zip/ZipUtil\n-  #111 = NameAndType        #161:#162     // bigToLong:(Ljava/math/BigInteger;)J\n-  #112 = NameAndType        #65:#56       // gid:Ljava/math/BigInteger;\n-  #113 = NameAndType        #163:#164     // longToBig:(J)Ljava/math/BigInteger;\n-  #114 = NameAndType        #165:#83      // toByteArray:()[B\n-  #115 = NameAndType        #100:#101     // trimLeadingZeroesForceMinLength:([B)[B\n-  #116 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #117 = NameAndType        #66:#166      // \"<init>\":(I)V\n-  #118 = NameAndType        #54:#53       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #119 = NameAndType        #167:#101     // reverse:([B)[B\n-  #120 = NameAndType        #168:#169     // unsignedIntToSignedByte:(I)B\n-  #121 = Class              #170          // java/lang/System\n-  #122 = NameAndType        #171:#172     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #123 = Class              #173          // org/apache/commons/compress/utils/ByteUtils\n-  #124 = NameAndType        #174:#158     // EMPTY_BYTE_ARRAY:[B\n-  #125 = Utf8               java/util/zip/ZipException\n-  #126 = Utf8               java/lang/StringBuilder\n-  #127 = Utf8               X7875_NewUnix length is too short, only\n-  #128 = NameAndType        #175:#176     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #129 = NameAndType        #175:#177     // append:(I)Ljava/lang/StringBuilder;\n-  #130 = Utf8                bytes\n-  #131 = NameAndType        #90:#91       // toString:()Ljava/lang/String;\n-  #132 = NameAndType        #66:#178      // \"<init>\":(Ljava/lang/String;)V\n-  #133 = NameAndType        #179:#180     // signedByteToUnsignedInt:(B)I\n-  #134 = Utf8               X7875_NewUnix invalid: uidSize\n-  #135 = Utf8                doesn\\'t fit into\n-  #136 = Class              #181          // java/util/Arrays\n-  #137 = NameAndType        #182:#183     // copyOfRange:([BII)[B\n-  #138 = Utf8               java/math/BigInteger\n-  #139 = NameAndType        #66:#184      // \"<init>\":(I[B)V\n-  #140 = Utf8               X7875_NewUnix invalid: gidSize\n-  #141 = NameAndType        #55:#56       // ONE_THOUSAND:Ljava/math/BigInteger;\n-  #142 = Utf8               0x7875 Zip Extra Field: UID=\n-  #143 = NameAndType        #175:#185     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #144 = Utf8                GID=\n-  #145 = NameAndType        #92:#93       // clone:()Ljava/lang/Object;\n-  #146 = Utf8               org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-  #147 = NameAndType        #95:#96       // equals:(Ljava/lang/Object;)Z\n-  #148 = NameAndType        #98:#99       // hashCode:()I\n-  #149 = Class              #186          // java/lang/Integer\n-  #150 = NameAndType        #187:#188     // rotateLeft:(II)I\n-  #151 = Class              #189          // java/lang/Math\n-  #152 = NameAndType        #190:#188     // max:(II)I\n-  #153 = NameAndType        #191:#164     // valueOf:(J)Ljava/math/BigInteger;\n-  #154 = Utf8               java/lang/Object\n-  #155 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #156 = Utf8               java/lang/Cloneable\n-  #157 = Utf8               java/io/Serializable\n-  #158 = Utf8               [B\n-  #159 = Utf8               java/lang/CloneNotSupportedException\n-  #160 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n-  #161 = Utf8               bigToLong\n-  #162 = Utf8               (Ljava/math/BigInteger;)J\n-  #163 = Utf8               longToBig\n-  #164 = Utf8               (J)Ljava/math/BigInteger;\n-  #165 = Utf8               toByteArray\n-  #166 = Utf8               (I)V\n-  #167 = Utf8               reverse\n-  #168 = Utf8               unsignedIntToSignedByte\n-  #169 = Utf8               (I)B\n-  #170 = Utf8               java/lang/System\n-  #171 = Utf8               arraycopy\n-  #172 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #173 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #174 = Utf8               EMPTY_BYTE_ARRAY\n-  #175 = Utf8               append\n-  #176 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #177 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #178 = Utf8               (Ljava/lang/String;)V\n-  #179 = Utf8               signedByteToUnsignedInt\n-  #180 = Utf8               (B)I\n-  #181 = Utf8               java/util/Arrays\n-  #182 = Utf8               copyOfRange\n-  #183 = Utf8               ([BII)[B\n-  #184 = Utf8               (I[B)V\n-  #185 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #186 = Utf8               java/lang/Integer\n-  #187 = Utf8               rotateLeft\n-  #188 = Utf8               (II)I\n-  #189 = Utf8               java/lang/Math\n-  #190 = Utf8               max\n-  #191 = Utf8               valueOf\n+   #97 = Utf8               hashCode\n+   #98 = Utf8               ()I\n+   #99 = Utf8               trimLeadingZeroesForceMinLength\n+  #100 = Utf8               ([B)[B\n+  #101 = Utf8               <clinit>\n+  #102 = Utf8               SourceFile\n+  #103 = Utf8               X7875_NewUnix.java\n+  #104 = NameAndType        #66:#67       // \"<init>\":()V\n+  #105 = NameAndType        #62:#63       // version:I\n+  #106 = NameAndType        #89:#67       // reset:()V\n+  #107 = NameAndType        #52:#53       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #108 = NameAndType        #64:#56       // uid:Ljava/math/BigInteger;\n+  #109 = Class              #159          // org/apache/commons/compress/archivers/zip/ZipUtil\n+  #110 = NameAndType        #160:#161     // bigToLong:(Ljava/math/BigInteger;)J\n+  #111 = NameAndType        #65:#56       // gid:Ljava/math/BigInteger;\n+  #112 = NameAndType        #162:#163     // longToBig:(J)Ljava/math/BigInteger;\n+  #113 = NameAndType        #164:#83      // toByteArray:()[B\n+  #114 = NameAndType        #99:#100      // trimLeadingZeroesForceMinLength:([B)[B\n+  #115 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #116 = NameAndType        #66:#165      // \"<init>\":(I)V\n+  #117 = NameAndType        #54:#53       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #118 = NameAndType        #166:#100     // reverse:([B)[B\n+  #119 = NameAndType        #167:#168     // unsignedIntToSignedByte:(I)B\n+  #120 = Class              #169          // java/lang/System\n+  #121 = NameAndType        #170:#171     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #122 = Class              #172          // org/apache/commons/compress/utils/ByteUtils\n+  #123 = NameAndType        #173:#157     // EMPTY_BYTE_ARRAY:[B\n+  #124 = Utf8               java/util/zip/ZipException\n+  #125 = Utf8               java/lang/StringBuilder\n+  #126 = Utf8               X7875_NewUnix length is too short, only\n+  #127 = NameAndType        #174:#175     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #128 = NameAndType        #174:#176     // append:(I)Ljava/lang/StringBuilder;\n+  #129 = Utf8                bytes\n+  #130 = NameAndType        #90:#91       // toString:()Ljava/lang/String;\n+  #131 = NameAndType        #66:#177      // \"<init>\":(Ljava/lang/String;)V\n+  #132 = NameAndType        #178:#179     // signedByteToUnsignedInt:(B)I\n+  #133 = Utf8               X7875_NewUnix invalid: uidSize\n+  #134 = Utf8                doesn\\'t fit into\n+  #135 = Class              #180          // java/util/Arrays\n+  #136 = NameAndType        #181:#182     // copyOfRange:([BII)[B\n+  #137 = Utf8               java/math/BigInteger\n+  #138 = NameAndType        #66:#183      // \"<init>\":(I[B)V\n+  #139 = Utf8               X7875_NewUnix invalid: gidSize\n+  #140 = NameAndType        #55:#56       // ONE_THOUSAND:Ljava/math/BigInteger;\n+  #141 = Utf8               0x7875 Zip Extra Field: UID=\n+  #142 = NameAndType        #174:#184     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #143 = Utf8                GID=\n+  #144 = NameAndType        #92:#93       // clone:()Ljava/lang/Object;\n+  #145 = Utf8               org/apache/commons/compress/archivers/zip/X7875_NewUnix\n+  #146 = NameAndType        #95:#96       // equals:(Ljava/lang/Object;)Z\n+  #147 = NameAndType        #97:#98       // hashCode:()I\n+  #148 = Class              #185          // java/lang/Integer\n+  #149 = NameAndType        #186:#187     // rotateLeft:(II)I\n+  #150 = Class              #188          // java/lang/Math\n+  #151 = NameAndType        #189:#187     // max:(II)I\n+  #152 = NameAndType        #190:#163     // valueOf:(J)Ljava/math/BigInteger;\n+  #153 = Utf8               java/lang/Object\n+  #154 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #155 = Utf8               java/lang/Cloneable\n+  #156 = Utf8               java/io/Serializable\n+  #157 = Utf8               [B\n+  #158 = Utf8               java/lang/CloneNotSupportedException\n+  #159 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n+  #160 = Utf8               bigToLong\n+  #161 = Utf8               (Ljava/math/BigInteger;)J\n+  #162 = Utf8               longToBig\n+  #163 = Utf8               (J)Ljava/math/BigInteger;\n+  #164 = Utf8               toByteArray\n+  #165 = Utf8               (I)V\n+  #166 = Utf8               reverse\n+  #167 = Utf8               unsignedIntToSignedByte\n+  #168 = Utf8               (I)B\n+  #169 = Utf8               java/lang/System\n+  #170 = Utf8               arraycopy\n+  #171 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #172 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #173 = Utf8               EMPTY_BYTE_ARRAY\n+  #174 = Utf8               append\n+  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #176 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #177 = Utf8               (Ljava/lang/String;)V\n+  #178 = Utf8               signedByteToUnsignedInt\n+  #179 = Utf8               (B)I\n+  #180 = Utf8               java/util/Arrays\n+  #181 = Utf8               copyOfRange\n+  #182 = Utf8               ([BII)[B\n+  #183 = Utf8               (I[B)V\n+  #184 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #185 = Utf8               java/lang/Integer\n+  #186 = Utf8               rotateLeft\n+  #187 = Utf8               (II)I\n+  #188 = Utf8               java/lang/Math\n+  #189 = Utf8               max\n+  #190 = Utf8               valueOf\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n"}]}
