{"diffoscope-json-version": 1, "source1": "first/BaseNCodecInputStream.class", "source2": "second/BaseNCodecInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,158 +1,158 @@\n-  SHA-256 checksum a0e2aaac34272417fa5c7de4bff3d3400bf17e8c499c53b4835fbf40c418ade1\n+  SHA-256 checksum e5ed9eaa6650d680b05f38d85415ccb10c7992b154f746b5824d16a49bdf9967\n   Compiled from \"BaseNCodecInputStream.java\"\n public class org.apache.commons.codec.binary.BaseNCodecInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #33                         // org/apache/commons/codec/binary/BaseNCodecInputStream\n-  super_class: #34                        // java/io/FilterInputStream\n+  this_class: #10                         // org/apache/commons/codec/binary/BaseNCodecInputStream\n+  super_class: #4                         // java/io/FilterInputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Class              #85           // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #34.#86       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Fieldref           #33.#87       // org/apache/commons/codec/binary/BaseNCodecInputStream.singleByte:[B\n-    #4 = Class              #88           // org/apache/commons/codec/binary/BaseNCodec$Context\n-    #5 = Methodref          #4.#89        // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-    #6 = Fieldref           #33.#90       // org/apache/commons/codec/binary/BaseNCodecInputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-    #7 = Fieldref           #33.#91       // org/apache/commons/codec/binary/BaseNCodecInputStream.doEncode:Z\n-    #8 = Fieldref           #33.#92       // org/apache/commons/codec/binary/BaseNCodecInputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-    #9 = Fieldref           #4.#93        // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #10 = Methodref          #33.#94       // org/apache/commons/codec/binary/BaseNCodecInputStream.read:([BII)I\n-   #11 = String             #72           // array\n-   #12 = Methodref          #95.#96       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #13 = Class              #97           // java/lang/IndexOutOfBoundsException\n-   #14 = Methodref          #13.#89       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #15 = Methodref          #1.#98        // org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #16 = Fieldref           #33.#99       // org/apache/commons/codec/binary/BaseNCodecInputStream.in:Ljava/io/InputStream;\n-   #17 = Methodref          #100.#101     // java/io/InputStream.read:([B)I\n-   #18 = Methodref          #1.#102       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #19 = Methodref          #1.#103       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #20 = Methodref          #1.#104       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #21 = Class              #105          // java/io/IOException\n-   #22 = String             #106          // mark/reset not supported\n-   #23 = Methodref          #21.#107      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #24 = Class              #108          // java/lang/IllegalArgumentException\n-   #25 = Class              #109          // java/lang/StringBuilder\n-   #26 = Methodref          #25.#89       // java/lang/StringBuilder.\"<init>\":()V\n-   #27 = String             #110          // Negative skip length:\n-   #28 = Methodref          #25.#111      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #25.#112      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #30 = Methodref          #25.#113      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #24.#107      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #114.#115     // java/lang/Math.min:(JJ)J\n-   #33 = Class              #116          // org/apache/commons/codec/binary/BaseNCodecInputStream\n-   #34 = Class              #117          // java/io/FilterInputStream\n-   #35 = Utf8               baseNCodec\n-   #36 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #37 = Utf8               doEncode\n-   #38 = Utf8               Z\n-   #39 = Utf8               singleByte\n-   #40 = Utf8               [B\n-   #41 = Utf8               context\n-   #42 = Utf8               Context\n-   #43 = Utf8               InnerClasses\n-   #44 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #45 = Utf8               <init>\n-   #46 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               this\n-   #51 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-   #52 = Utf8               input\n-   #53 = Utf8               Ljava/io/InputStream;\n-   #54 = Utf8               available\n-   #55 = Utf8               ()I\n-   #56 = Utf8               StackMapTable\n-   #57 = Utf8               Exceptions\n-   #58 = Utf8               mark\n-   #59 = Utf8               (I)V\n-   #60 = Utf8               readLimit\n-   #61 = Utf8               I\n-   #62 = Utf8               markSupported\n-   #63 = Utf8               ()Z\n-   #64 = Utf8               read\n-   #65 = Utf8               b\n-   #66 = Utf8               B\n-   #67 = Utf8               r\n-   #68 = Utf8               ([BII)I\n-   #69 = Utf8               buf\n-   #70 = Utf8               c\n-   #71 = Utf8               readLen\n-   #72 = Utf8               array\n-   #73 = Utf8               offset\n-   #74 = Utf8               len\n-   #75 = Class              #40           // \"[B\"\n-   #76 = Utf8               reset\n-   #77 = Utf8               ()V\n-   #78 = Utf8               skip\n-   #79 = Utf8               (J)J\n-   #80 = Utf8               n\n-   #81 = Utf8               J\n-   #82 = Utf8               todo\n-   #83 = Utf8               SourceFile\n-   #84 = Utf8               BaseNCodecInputStream.java\n-   #85 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-   #86 = NameAndType        #45:#118      // \"<init>\":(Ljava/io/InputStream;)V\n-   #87 = NameAndType        #39:#40       // singleByte:[B\n-   #88 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-   #89 = NameAndType        #45:#77       // \"<init>\":()V\n-   #90 = NameAndType        #41:#44       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #91 = NameAndType        #37:#38       // doEncode:Z\n-   #92 = NameAndType        #35:#36       // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #93 = NameAndType        #119:#38      // eof:Z\n-   #94 = NameAndType        #64:#68       // read:([BII)I\n-   #95 = Class              #120          // java/util/Objects\n-   #96 = NameAndType        #121:#122     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #97 = Utf8               java/lang/IndexOutOfBoundsException\n-   #98 = NameAndType        #123:#124     // hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #99 = NameAndType        #125:#53      // in:Ljava/io/InputStream;\n-  #100 = Class              #126          // java/io/InputStream\n-  #101 = NameAndType        #64:#127      // read:([B)I\n-  #102 = NameAndType        #128:#129     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #103 = NameAndType        #130:#129     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #104 = NameAndType        #131:#132     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #105 = Utf8               java/io/IOException\n-  #106 = Utf8               mark/reset not supported\n-  #107 = NameAndType        #45:#133      // \"<init>\":(Ljava/lang/String;)V\n-  #108 = Utf8               java/lang/IllegalArgumentException\n-  #109 = Utf8               java/lang/StringBuilder\n-  #110 = Utf8               Negative skip length:\n-  #111 = NameAndType        #134:#135     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #112 = NameAndType        #134:#136     // append:(J)Ljava/lang/StringBuilder;\n-  #113 = NameAndType        #137:#138     // toString:()Ljava/lang/String;\n-  #114 = Class              #139          // java/lang/Math\n-  #115 = NameAndType        #140:#141     // min:(JJ)J\n-  #116 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n-  #117 = Utf8               java/io/FilterInputStream\n-  #118 = Utf8               (Ljava/io/InputStream;)V\n-  #119 = Utf8               eof\n-  #120 = Utf8               java/util/Objects\n-  #121 = Utf8               requireNonNull\n-  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #123 = Utf8               hasData\n-  #124 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-  #125 = Utf8               in\n-  #126 = Utf8               java/io/InputStream\n-  #127 = Utf8               ([B)I\n-  #128 = Utf8               encode\n-  #129 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #130 = Utf8               decode\n-  #131 = Utf8               readResults\n-  #132 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #133 = Utf8               (Ljava/lang/String;)V\n-  #134 = Utf8               append\n-  #135 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #136 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #137 = Utf8               toString\n-  #138 = Utf8               ()Ljava/lang/String;\n-  #139 = Utf8               java/lang/Math\n-  #140 = Utf8               min\n-  #141 = Utf8               (JJ)J\n+    #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodec\n+    #2 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+    #3 = Methodref          #4.#5         // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #4 = Class              #6            // java/io/FilterInputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/InputStream;)V\n+    #6 = Utf8               java/io/FilterInputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/InputStream;)V\n+    #9 = Fieldref           #10.#11       // org/apache/commons/codec/binary/BaseNCodecInputStream.singleByte:[B\n+   #10 = Class              #12           // org/apache/commons/codec/binary/BaseNCodecInputStream\n+   #11 = NameAndType        #13:#14       // singleByte:[B\n+   #12 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n+   #13 = Utf8               singleByte\n+   #14 = Utf8               [B\n+   #15 = Class              #16           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #16 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #17 = Methodref          #15.#18       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+   #18 = NameAndType        #7:#19        // \"<init>\":()V\n+   #19 = Utf8               ()V\n+   #20 = Fieldref           #10.#21       // org/apache/commons/codec/binary/BaseNCodecInputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #21 = NameAndType        #22:#23       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #22 = Utf8               context\n+   #23 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #24 = Fieldref           #10.#25       // org/apache/commons/codec/binary/BaseNCodecInputStream.doEncode:Z\n+   #25 = NameAndType        #26:#27       // doEncode:Z\n+   #26 = Utf8               doEncode\n+   #27 = Utf8               Z\n+   #28 = Fieldref           #10.#29       // org/apache/commons/codec/binary/BaseNCodecInputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #29 = NameAndType        #30:#31       // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #30 = Utf8               baseNCodec\n+   #31 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #32 = Fieldref           #15.#33       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #33 = NameAndType        #34:#27       // eof:Z\n+   #34 = Utf8               eof\n+   #35 = Methodref          #10.#36       // org/apache/commons/codec/binary/BaseNCodecInputStream.read:([BII)I\n+   #36 = NameAndType        #37:#38       // read:([BII)I\n+   #37 = Utf8               read\n+   #38 = Utf8               ([BII)I\n+   #39 = String             #40           // array\n+   #40 = Utf8               array\n+   #41 = Methodref          #42.#43       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #42 = Class              #44           // java/util/Objects\n+   #43 = NameAndType        #45:#46       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #44 = Utf8               java/util/Objects\n+   #45 = Utf8               requireNonNull\n+   #46 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #47 = Class              #48           // java/lang/IndexOutOfBoundsException\n+   #48 = Utf8               java/lang/IndexOutOfBoundsException\n+   #49 = Methodref          #47.#18       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #50 = Methodref          #1.#51        // org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #51 = NameAndType        #52:#53       // hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #52 = Utf8               hasData\n+   #53 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #54 = Fieldref           #10.#55       // org/apache/commons/codec/binary/BaseNCodecInputStream.in:Ljava/io/InputStream;\n+   #55 = NameAndType        #56:#57       // in:Ljava/io/InputStream;\n+   #56 = Utf8               in\n+   #57 = Utf8               Ljava/io/InputStream;\n+   #58 = Methodref          #59.#60       // java/io/InputStream.read:([B)I\n+   #59 = Class              #61           // java/io/InputStream\n+   #60 = NameAndType        #37:#62       // read:([B)I\n+   #61 = Utf8               java/io/InputStream\n+   #62 = Utf8               ([B)I\n+   #63 = Methodref          #1.#64        // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #64 = NameAndType        #65:#66       // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #65 = Utf8               encode\n+   #66 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #67 = Methodref          #1.#68        // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #68 = NameAndType        #69:#66       // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #69 = Utf8               decode\n+   #70 = Methodref          #1.#71        // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #71 = NameAndType        #72:#73       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #72 = Utf8               readResults\n+   #73 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #74 = Class              #75           // java/io/IOException\n+   #75 = Utf8               java/io/IOException\n+   #76 = String             #77           // mark/reset not supported\n+   #77 = Utf8               mark/reset not supported\n+   #78 = Methodref          #74.#79       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #79 = NameAndType        #7:#80        // \"<init>\":(Ljava/lang/String;)V\n+   #80 = Utf8               (Ljava/lang/String;)V\n+   #81 = Class              #82           // java/lang/IllegalArgumentException\n+   #82 = Utf8               java/lang/IllegalArgumentException\n+   #83 = Class              #84           // java/lang/StringBuilder\n+   #84 = Utf8               java/lang/StringBuilder\n+   #85 = Methodref          #83.#18       // java/lang/StringBuilder.\"<init>\":()V\n+   #86 = String             #87           // Negative skip length:\n+   #87 = Utf8               Negative skip length:\n+   #88 = Methodref          #83.#89       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #89 = NameAndType        #90:#91       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #90 = Utf8               append\n+   #91 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #92 = Methodref          #83.#93       // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #93 = NameAndType        #90:#94       // append:(J)Ljava/lang/StringBuilder;\n+   #94 = Utf8               (J)Ljava/lang/StringBuilder;\n+   #95 = Methodref          #83.#96       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #96 = NameAndType        #97:#98       // toString:()Ljava/lang/String;\n+   #97 = Utf8               toString\n+   #98 = Utf8               ()Ljava/lang/String;\n+   #99 = Methodref          #81.#79       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #100 = Methodref          #101.#102     // java/lang/Math.min:(JJ)J\n+  #101 = Class              #103          // java/lang/Math\n+  #102 = NameAndType        #104:#105     // min:(JJ)J\n+  #103 = Utf8               java/lang/Math\n+  #104 = Utf8               min\n+  #105 = Utf8               (JJ)J\n+  #106 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #107 = Utf8               Code\n+  #108 = Utf8               LineNumberTable\n+  #109 = Utf8               LocalVariableTable\n+  #110 = Utf8               this\n+  #111 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n+  #112 = Utf8               input\n+  #113 = Utf8               available\n+  #114 = Utf8               ()I\n+  #115 = Utf8               StackMapTable\n+  #116 = Utf8               Exceptions\n+  #117 = Utf8               mark\n+  #118 = Utf8               (I)V\n+  #119 = Utf8               readLimit\n+  #120 = Utf8               I\n+  #121 = Utf8               markSupported\n+  #122 = Utf8               ()Z\n+  #123 = Utf8               b\n+  #124 = Utf8               B\n+  #125 = Utf8               r\n+  #126 = Utf8               buf\n+  #127 = Utf8               c\n+  #128 = Utf8               readLen\n+  #129 = Utf8               offset\n+  #130 = Utf8               len\n+  #131 = Class              #14           // \"[B\"\n+  #132 = Utf8               reset\n+  #133 = Utf8               skip\n+  #134 = Utf8               (J)J\n+  #135 = Utf8               n\n+  #136 = Utf8               J\n+  #137 = Utf8               todo\n+  #138 = Utf8               SourceFile\n+  #139 = Utf8               BaseNCodecInputStream.java\n+  #140 = Utf8               InnerClasses\n+  #141 = Utf8               Context\n {\n   private final org.apache.commons.codec.binary.BaseNCodec baseNCodec;\n     descriptor: Lorg/apache/commons/codec/binary/BaseNCodec;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean doEncode;\n     descriptor: Z\n@@ -169,30 +169,30 @@\n   protected org.apache.commons.codec.binary.BaseNCodecInputStream(java.io.InputStream, org.apache.commons.codec.binary.BaseNCodec, boolean);\n     descriptor: (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #3                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n          6: iconst_1\n          7: newarray       byte\n-         9: putfield      #3                  // Field singleByte:[B\n+         9: putfield      #9                  // Field singleByte:[B\n         12: aload_0\n-        13: new           #4                  // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        13: new           #15                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         16: dup\n-        17: invokespecial #5                  // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-        20: putfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        17: invokespecial #17                 // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        20: putfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n         23: aload_0\n         24: iload_3\n-        25: putfield      #7                  // Field doEncode:Z\n+        25: putfield      #24                 // Field doEncode:Z\n         28: aload_0\n         29: aload_2\n-        30: putfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        30: putfield      #28                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         33: return\n       LineNumberTable:\n         line 45: 0\n         line 40: 5\n         line 42: 12\n         line 46: 23\n         line 47: 28\n@@ -206,16 +206,16 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-         4: getfield      #9                  // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         1: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+         4: getfield      #32                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          7: ifeq          14\n         10: iconst_0\n         11: goto          15\n         14: iconst_1\n         15: ireturn\n       LineNumberTable:\n         line 64: 0\n@@ -258,33 +258,33 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #3                  // Field singleByte:[B\n+         2: getfield      #9                  // Field singleByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #10                 // Method read:([BII)I\n+         7: invokevirtual #35                 // Method read:([BII)I\n         10: istore_1\n         11: iload_1\n         12: ifne          29\n         15: aload_0\n         16: aload_0\n-        17: getfield      #3                  // Field singleByte:[B\n+        17: getfield      #9                  // Field singleByte:[B\n         20: iconst_0\n         21: iconst_1\n-        22: invokevirtual #10                 // Method read:([BII)I\n+        22: invokevirtual #35                 // Method read:([BII)I\n         25: istore_1\n         26: goto          11\n         29: iload_1\n         30: ifle          54\n         33: aload_0\n-        34: getfield      #3                  // Field singleByte:[B\n+        34: getfield      #9                  // Field singleByte:[B\n         37: iconst_0\n         38: baload\n         39: istore_2\n         40: iload_2\n         41: ifge          52\n         44: sipush        256\n         47: iload_2\n@@ -324,94 +324,94 @@\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_1\n-         1: ldc           #11                 // String array\n-         3: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #39                 // String array\n+         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          15\n         11: iload_3\n         12: ifge          23\n-        15: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        15: new           #47                 // class java/lang/IndexOutOfBoundsException\n         18: dup\n-        19: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        19: invokespecial #49                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         22: athrow\n         23: iload_2\n         24: aload_1\n         25: arraylength\n         26: if_icmpgt     37\n         29: iload_2\n         30: iload_3\n         31: iadd\n         32: aload_1\n         33: arraylength\n         34: if_icmple     45\n-        37: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        37: new           #47                 // class java/lang/IndexOutOfBoundsException\n         40: dup\n-        41: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        41: invokespecial #49                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         44: athrow\n         45: iload_3\n         46: ifne          51\n         49: iconst_0\n         50: ireturn\n         51: iconst_0\n         52: istore        4\n         54: iload         4\n         56: ifne          165\n         59: aload_0\n-        60: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        60: getfield      #28                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         63: aload_0\n-        64: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        67: invokevirtual #15                 // Method org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+        64: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        67: invokevirtual #50                 // Method org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n         70: ifne          146\n         73: aload_0\n-        74: getfield      #7                  // Field doEncode:Z\n+        74: getfield      #24                 // Field doEncode:Z\n         77: ifeq          86\n         80: sipush        4096\n         83: goto          89\n         86: sipush        8192\n         89: newarray       byte\n         91: astore        5\n         93: aload_0\n-        94: getfield      #16                 // Field in:Ljava/io/InputStream;\n+        94: getfield      #54                 // Field in:Ljava/io/InputStream;\n         97: aload         5\n-        99: invokevirtual #17                 // Method java/io/InputStream.read:([B)I\n+        99: invokevirtual #58                 // Method java/io/InputStream.read:([B)I\n        102: istore        6\n        104: aload_0\n-       105: getfield      #7                  // Field doEncode:Z\n+       105: getfield      #24                 // Field doEncode:Z\n        108: ifeq          130\n        111: aload_0\n-       112: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       112: getfield      #28                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n        115: aload         5\n        117: iconst_0\n        118: iload         6\n        120: aload_0\n-       121: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       124: invokevirtual #18                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+       121: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       124: invokevirtual #63                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n        127: goto          146\n        130: aload_0\n-       131: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       131: getfield      #28                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n        134: aload         5\n        136: iconst_0\n        137: iload         6\n        139: aload_0\n-       140: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       143: invokevirtual #19                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+       140: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       143: invokevirtual #67                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n        146: aload_0\n-       147: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       147: getfield      #28                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n        150: aload_1\n        151: iload_2\n        152: iload_3\n        153: aload_0\n-       154: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       157: invokevirtual #20                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+       154: getfield      #20                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       157: invokevirtual #70                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n        160: istore        4\n        162: goto          54\n        165: iload         4\n        167: ireturn\n       LineNumberTable:\n         line 131: 0\n         line 132: 7\n@@ -461,18 +461,18 @@\n       throws java.io.IOException\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #21                 // class java/io/IOException\n+         0: new           #74                 // class java/io/IOException\n          3: dup\n-         4: ldc           #22                 // String mark/reset not supported\n-         6: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #76                 // String mark/reset not supported\n+         6: invokespecial #78                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n     Exceptions:\n@@ -483,47 +483,47 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=7, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifge          33\n-         6: new           #24                 // class java/lang/IllegalArgumentException\n+         6: new           #81                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: new           #25                 // class java/lang/StringBuilder\n+        10: new           #83                 // class java/lang/StringBuilder\n         13: dup\n-        14: invokespecial #26                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        17: ldc           #27                 // String Negative skip length:\n-        19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: invokespecial #85                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        17: ldc           #86                 // String Negative skip length:\n+        19: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         22: lload_1\n-        23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        26: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokespecial #31                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        23: invokevirtual #92                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        26: invokevirtual #95                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #99                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         32: athrow\n         33: sipush        512\n         36: newarray       byte\n         38: astore_3\n         39: lload_1\n         40: lstore        4\n         42: lload         4\n         44: lconst_0\n         45: lcmp\n         46: ifle          90\n         49: aload_3\n         50: arraylength\n         51: i2l\n         52: lload         4\n-        54: invokestatic  #32                 // Method java/lang/Math.min:(JJ)J\n+        54: invokestatic  #100                // Method java/lang/Math.min:(JJ)J\n         57: l2i\n         58: istore        6\n         60: aload_0\n         61: aload_3\n         62: iconst_0\n         63: iload         6\n-        65: invokevirtual #10                 // Method read:([BII)I\n+        65: invokevirtual #35                 // Method read:([BII)I\n         68: istore        6\n         70: iload         6\n         72: iconst_m1\n         73: if_icmpne     79\n         76: goto          90\n         79: lload         4\n         81: iload         6\n@@ -566,8 +566,8 @@\n         frame_type = 250 /* chop */\n           offset_delta = 10\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"BaseNCodecInputStream.java\"\n InnerClasses:\n-  static #42= #4 of #1;                   // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #141= #15 of #1;                 // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
