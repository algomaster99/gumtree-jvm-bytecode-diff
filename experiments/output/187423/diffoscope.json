{"diffoscope-json-version": 1, "source1": "first/IOUtils.class", "source2": "second/IOUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,171 +1,171 @@\n-  SHA-256 checksum 73796536234e50a17324a1b7249dbf8862e21f3868a241bbdfc95ecb2fe243d9\n+  SHA-256 checksum 8ff0279c2a9acd6160d4d4efe6ece0f881d52a85c42155a7071b11e54ef4649f\n   Compiled from \"IOUtils.java\"\n public final class org.apache.commons.compress.utils.IOUtils\n   minor version: 0\n   major version: 53\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/utils/IOUtils\n-  super_class: #33                        // java/lang/Object\n+  this_class: #7                          // org/apache/commons/compress/utils/IOUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 11, attributes: 1\n Constant pool:\n-    #1 = Methodref          #33.#100      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #101          // org/apache/commons/compress/utils/IOUtils\n-    #3 = Methodref          #2.#102       // org/apache/commons/compress/utils/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n-    #4 = Class              #103          // java/lang/IllegalArgumentException\n-    #5 = String             #104          // buffersize must be bigger than 0\n-    #6 = Methodref          #4.#105       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #7 = Methodref          #106.#107     // java/io/InputStream.read:([B)I\n-    #8 = Methodref          #108.#109     // java/io/OutputStream.write:([BII)V\n-    #9 = Methodref          #106.#110     // java/io/InputStream.skip:(J)J\n-   #10 = Fieldref           #2.#111       // org/apache/commons/compress/utils/IOUtils.SKIP_BUF:[B\n-   #11 = Long               4096l\n-   #13 = Methodref          #112.#113     // java/lang/Math.min:(JJ)J\n-   #14 = Methodref          #2.#114       // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #15 = Class              #115          // java/io/FileInputStream\n-   #16 = Methodref          #15.#116      // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #17 = Methodref          #15.#117      // java/io/FileInputStream.close:()V\n-   #18 = Class              #118          // java/lang/Throwable\n-   #19 = Methodref          #18.#119      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #20 = Class              #120          // java/lang/IndexOutOfBoundsException\n-   #21 = Methodref          #20.#100      // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #22 = Methodref          #106.#121     // java/io/InputStream.read:([BII)I\n-   #23 = Methodref          #122.#123     // java/nio/ByteBuffer.remaining:()I\n-   #24 = InterfaceMethodref #124.#125     // java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I\n-   #25 = Class              #126          // java/io/EOFException\n-   #26 = Methodref          #25.#100      // java/io/EOFException.\"<init>\":()V\n-   #27 = Class              #127          // java/io/ByteArrayOutputStream\n-   #28 = Methodref          #27.#100      // java/io/ByteArrayOutputStream.\"<init>\":()V\n-   #29 = Methodref          #2.#128       // org/apache/commons/compress/utils/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J\n-   #30 = Methodref          #27.#129      // java/io/ByteArrayOutputStream.toByteArray:()[B\n-   #31 = InterfaceMethodref #130.#117     // java/io/Closeable.close:()V\n-   #32 = Class              #131          // java/io/IOException\n-   #33 = Class              #132          // java/lang/Object\n-   #34 = Utf8               COPY_BUF_SIZE\n-   #35 = Utf8               I\n-   #36 = Utf8               ConstantValue\n-   #37 = Integer            8024\n-   #38 = Utf8               SKIP_BUF_SIZE\n-   #39 = Integer            4096\n-   #40 = Utf8               SKIP_BUF\n-   #41 = Utf8               [B\n-   #42 = Utf8               <init>\n-   #43 = Utf8               ()V\n-   #44 = Utf8               Code\n-   #45 = Utf8               LineNumberTable\n-   #46 = Utf8               LocalVariableTable\n-   #47 = Utf8               this\n-   #48 = Utf8               Lorg/apache/commons/compress/utils/IOUtils;\n-   #49 = Utf8               copy\n-   #50 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)J\n-   #51 = Utf8               input\n-   #52 = Utf8               Ljava/io/InputStream;\n-   #53 = Utf8               output\n-   #54 = Utf8               Ljava/io/OutputStream;\n-   #55 = Utf8               Exceptions\n-   #56 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n-   #57 = Utf8               buffersize\n-   #58 = Utf8               buffer\n-   #59 = Utf8               n\n-   #60 = Utf8               count\n-   #61 = Utf8               J\n-   #62 = Utf8               StackMapTable\n-   #63 = Class              #41           // \"[B\"\n-   #64 = Utf8               skip\n-   #65 = Utf8               (Ljava/io/InputStream;J)J\n-   #66 = Utf8               skipped\n-   #67 = Utf8               read\n-   #68 = Utf8               numToSkip\n-   #69 = Utf8               available\n-   #70 = Utf8               (Ljava/io/File;[B)I\n-   #71 = Utf8               inputStream\n-   #72 = Utf8               Ljava/io/FileInputStream;\n-   #73 = Utf8               file\n-   #74 = Utf8               Ljava/io/File;\n-   #75 = Utf8               array\n-   #76 = Class              #133          // java/io/File\n-   #77 = Utf8               readFully\n-   #78 = Utf8               (Ljava/io/InputStream;[B)I\n-   #79 = Utf8               (Ljava/io/InputStream;[BII)I\n-   #80 = Utf8               offset\n-   #81 = Utf8               len\n-   #82 = Utf8               x\n-   #83 = Utf8               (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V\n-   #84 = Utf8               readNow\n-   #85 = Utf8               channel\n-   #86 = Utf8               Ljava/nio/channels/ReadableByteChannel;\n-   #87 = Utf8               b\n-   #88 = Utf8               Ljava/nio/ByteBuffer;\n-   #89 = Utf8               expectedLength\n-   #90 = Utf8               toByteArray\n-   #91 = Utf8               (Ljava/io/InputStream;)[B\n-   #92 = Utf8               Ljava/io/ByteArrayOutputStream;\n-   #93 = Utf8               closeQuietly\n-   #94 = Utf8               (Ljava/io/Closeable;)V\n-   #95 = Utf8               c\n-   #96 = Utf8               Ljava/io/Closeable;\n-   #97 = Utf8               <clinit>\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               IOUtils.java\n-  #100 = NameAndType        #42:#43       // \"<init>\":()V\n-  #101 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #102 = NameAndType        #49:#56       // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n-  #103 = Utf8               java/lang/IllegalArgumentException\n-  #104 = Utf8               buffersize must be bigger than 0\n-  #105 = NameAndType        #42:#134      // \"<init>\":(Ljava/lang/String;)V\n-  #106 = Class              #135          // java/io/InputStream\n-  #107 = NameAndType        #67:#136      // read:([B)I\n-  #108 = Class              #137          // java/io/OutputStream\n-  #109 = NameAndType        #138:#139     // write:([BII)V\n-  #110 = NameAndType        #64:#140      // skip:(J)J\n-  #111 = NameAndType        #40:#41       // SKIP_BUF:[B\n-  #112 = Class              #141          // java/lang/Math\n-  #113 = NameAndType        #142:#143     // min:(JJ)J\n-  #114 = NameAndType        #77:#79       // readFully:(Ljava/io/InputStream;[BII)I\n-  #115 = Utf8               java/io/FileInputStream\n-  #116 = NameAndType        #42:#144      // \"<init>\":(Ljava/io/File;)V\n-  #117 = NameAndType        #145:#43      // close:()V\n-  #118 = Utf8               java/lang/Throwable\n-  #119 = NameAndType        #146:#147     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #120 = Utf8               java/lang/IndexOutOfBoundsException\n-  #121 = NameAndType        #67:#148      // read:([BII)I\n-  #122 = Class              #149          // java/nio/ByteBuffer\n-  #123 = NameAndType        #150:#151     // remaining:()I\n-  #124 = Class              #152          // java/nio/channels/ReadableByteChannel\n-  #125 = NameAndType        #67:#153      // read:(Ljava/nio/ByteBuffer;)I\n-  #126 = Utf8               java/io/EOFException\n-  #127 = Utf8               java/io/ByteArrayOutputStream\n-  #128 = NameAndType        #49:#50       // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J\n-  #129 = NameAndType        #90:#154      // toByteArray:()[B\n-  #130 = Class              #155          // java/io/Closeable\n-  #131 = Utf8               java/io/IOException\n-  #132 = Utf8               java/lang/Object\n-  #133 = Utf8               java/io/File\n-  #134 = Utf8               (Ljava/lang/String;)V\n-  #135 = Utf8               java/io/InputStream\n-  #136 = Utf8               ([B)I\n-  #137 = Utf8               java/io/OutputStream\n-  #138 = Utf8               write\n-  #139 = Utf8               ([BII)V\n-  #140 = Utf8               (J)J\n-  #141 = Utf8               java/lang/Math\n-  #142 = Utf8               min\n-  #143 = Utf8               (JJ)J\n-  #144 = Utf8               (Ljava/io/File;)V\n-  #145 = Utf8               close\n-  #146 = Utf8               addSuppressed\n-  #147 = Utf8               (Ljava/lang/Throwable;)V\n-  #148 = Utf8               ([BII)I\n-  #149 = Utf8               java/nio/ByteBuffer\n-  #150 = Utf8               remaining\n-  #151 = Utf8               ()I\n-  #152 = Utf8               java/nio/channels/ReadableByteChannel\n-  #153 = Utf8               (Ljava/nio/ByteBuffer;)I\n-  #154 = Utf8               ()[B\n-  #155 = Utf8               java/io/Closeable\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/compress/utils/IOUtils\n+    #8 = Utf8               org/apache/commons/compress/utils/IOUtils\n+    #9 = Methodref          #7.#10        // org/apache/commons/compress/utils/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n+   #10 = NameAndType        #11:#12       // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n+   #11 = Utf8               copy\n+   #12 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n+   #13 = Class              #14           // java/lang/IllegalArgumentException\n+   #14 = Utf8               java/lang/IllegalArgumentException\n+   #15 = String             #16           // buffersize must be bigger than 0\n+   #16 = Utf8               buffersize must be bigger than 0\n+   #17 = Methodref          #13.#18       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #18 = NameAndType        #5:#19        // \"<init>\":(Ljava/lang/String;)V\n+   #19 = Utf8               (Ljava/lang/String;)V\n+   #20 = Methodref          #21.#22       // java/io/InputStream.read:([B)I\n+   #21 = Class              #23           // java/io/InputStream\n+   #22 = NameAndType        #24:#25       // read:([B)I\n+   #23 = Utf8               java/io/InputStream\n+   #24 = Utf8               read\n+   #25 = Utf8               ([B)I\n+   #26 = Methodref          #27.#28       // java/io/OutputStream.write:([BII)V\n+   #27 = Class              #29           // java/io/OutputStream\n+   #28 = NameAndType        #30:#31       // write:([BII)V\n+   #29 = Utf8               java/io/OutputStream\n+   #30 = Utf8               write\n+   #31 = Utf8               ([BII)V\n+   #32 = Methodref          #21.#33       // java/io/InputStream.skip:(J)J\n+   #33 = NameAndType        #34:#35       // skip:(J)J\n+   #34 = Utf8               skip\n+   #35 = Utf8               (J)J\n+   #36 = Fieldref           #7.#37        // org/apache/commons/compress/utils/IOUtils.SKIP_BUF:[B\n+   #37 = NameAndType        #38:#39       // SKIP_BUF:[B\n+   #38 = Utf8               SKIP_BUF\n+   #39 = Utf8               [B\n+   #40 = Long               4096l\n+   #42 = Methodref          #43.#44       // java/lang/Math.min:(JJ)J\n+   #43 = Class              #45           // java/lang/Math\n+   #44 = NameAndType        #46:#47       // min:(JJ)J\n+   #45 = Utf8               java/lang/Math\n+   #46 = Utf8               min\n+   #47 = Utf8               (JJ)J\n+   #48 = Methodref          #7.#49        // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #49 = NameAndType        #50:#51       // readFully:(Ljava/io/InputStream;[BII)I\n+   #50 = Utf8               readFully\n+   #51 = Utf8               (Ljava/io/InputStream;[BII)I\n+   #52 = Class              #53           // java/io/FileInputStream\n+   #53 = Utf8               java/io/FileInputStream\n+   #54 = Methodref          #52.#55       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+   #55 = NameAndType        #5:#56        // \"<init>\":(Ljava/io/File;)V\n+   #56 = Utf8               (Ljava/io/File;)V\n+   #57 = Methodref          #52.#58       // java/io/FileInputStream.close:()V\n+   #58 = NameAndType        #59:#6        // close:()V\n+   #59 = Utf8               close\n+   #60 = Class              #61           // java/lang/Throwable\n+   #61 = Utf8               java/lang/Throwable\n+   #62 = Methodref          #60.#63       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #63 = NameAndType        #64:#65       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #64 = Utf8               addSuppressed\n+   #65 = Utf8               (Ljava/lang/Throwable;)V\n+   #66 = Class              #67           // java/lang/IndexOutOfBoundsException\n+   #67 = Utf8               java/lang/IndexOutOfBoundsException\n+   #68 = Methodref          #66.#3        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #69 = Methodref          #21.#70       // java/io/InputStream.read:([BII)I\n+   #70 = NameAndType        #24:#71       // read:([BII)I\n+   #71 = Utf8               ([BII)I\n+   #72 = Methodref          #73.#74       // java/nio/ByteBuffer.remaining:()I\n+   #73 = Class              #75           // java/nio/ByteBuffer\n+   #74 = NameAndType        #76:#77       // remaining:()I\n+   #75 = Utf8               java/nio/ByteBuffer\n+   #76 = Utf8               remaining\n+   #77 = Utf8               ()I\n+   #78 = InterfaceMethodref #79.#80       // java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I\n+   #79 = Class              #81           // java/nio/channels/ReadableByteChannel\n+   #80 = NameAndType        #24:#82       // read:(Ljava/nio/ByteBuffer;)I\n+   #81 = Utf8               java/nio/channels/ReadableByteChannel\n+   #82 = Utf8               (Ljava/nio/ByteBuffer;)I\n+   #83 = Class              #84           // java/io/EOFException\n+   #84 = Utf8               java/io/EOFException\n+   #85 = Methodref          #83.#3        // java/io/EOFException.\"<init>\":()V\n+   #86 = Class              #87           // java/io/ByteArrayOutputStream\n+   #87 = Utf8               java/io/ByteArrayOutputStream\n+   #88 = Methodref          #86.#3        // java/io/ByteArrayOutputStream.\"<init>\":()V\n+   #89 = Methodref          #7.#90        // org/apache/commons/compress/utils/IOUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J\n+   #90 = NameAndType        #11:#91       // copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J\n+   #91 = Utf8               (Ljava/io/InputStream;Ljava/io/OutputStream;)J\n+   #92 = Methodref          #86.#93       // java/io/ByteArrayOutputStream.toByteArray:()[B\n+   #93 = NameAndType        #94:#95       // toByteArray:()[B\n+   #94 = Utf8               toByteArray\n+   #95 = Utf8               ()[B\n+   #96 = InterfaceMethodref #97.#58       // java/io/Closeable.close:()V\n+   #97 = Class              #98           // java/io/Closeable\n+   #98 = Utf8               java/io/Closeable\n+   #99 = Class              #100          // java/io/IOException\n+  #100 = Utf8               java/io/IOException\n+  #101 = Utf8               COPY_BUF_SIZE\n+  #102 = Utf8               I\n+  #103 = Utf8               ConstantValue\n+  #104 = Integer            8024\n+  #105 = Utf8               SKIP_BUF_SIZE\n+  #106 = Integer            4096\n+  #107 = Utf8               Code\n+  #108 = Utf8               LineNumberTable\n+  #109 = Utf8               LocalVariableTable\n+  #110 = Utf8               this\n+  #111 = Utf8               Lorg/apache/commons/compress/utils/IOUtils;\n+  #112 = Utf8               input\n+  #113 = Utf8               Ljava/io/InputStream;\n+  #114 = Utf8               output\n+  #115 = Utf8               Ljava/io/OutputStream;\n+  #116 = Utf8               Exceptions\n+  #117 = Utf8               buffersize\n+  #118 = Utf8               buffer\n+  #119 = Utf8               n\n+  #120 = Utf8               count\n+  #121 = Utf8               J\n+  #122 = Utf8               StackMapTable\n+  #123 = Class              #39           // \"[B\"\n+  #124 = Utf8               (Ljava/io/InputStream;J)J\n+  #125 = Utf8               skipped\n+  #126 = Utf8               numToSkip\n+  #127 = Utf8               available\n+  #128 = Utf8               (Ljava/io/File;[B)I\n+  #129 = Utf8               inputStream\n+  #130 = Utf8               Ljava/io/FileInputStream;\n+  #131 = Utf8               file\n+  #132 = Utf8               Ljava/io/File;\n+  #133 = Utf8               array\n+  #134 = Class              #135          // java/io/File\n+  #135 = Utf8               java/io/File\n+  #136 = Utf8               (Ljava/io/InputStream;[B)I\n+  #137 = Utf8               offset\n+  #138 = Utf8               len\n+  #139 = Utf8               x\n+  #140 = Utf8               (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V\n+  #141 = Utf8               readNow\n+  #142 = Utf8               channel\n+  #143 = Utf8               Ljava/nio/channels/ReadableByteChannel;\n+  #144 = Utf8               b\n+  #145 = Utf8               Ljava/nio/ByteBuffer;\n+  #146 = Utf8               expectedLength\n+  #147 = Utf8               (Ljava/io/InputStream;)[B\n+  #148 = Utf8               Ljava/io/ByteArrayOutputStream;\n+  #149 = Utf8               closeQuietly\n+  #150 = Utf8               (Ljava/io/Closeable;)V\n+  #151 = Utf8               c\n+  #152 = Utf8               Ljava/io/Closeable;\n+  #153 = Utf8               <clinit>\n+  #154 = Utf8               SourceFile\n+  #155 = Utf8               IOUtils.java\n {\n   private static final int COPY_BUF_SIZE = 8024;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8024\n \n   private static final int SKIP_BUF_SIZE = 4096;\n@@ -196,15 +196,15 @@\n     descriptor: (Ljava/io/InputStream;Ljava/io/OutputStream;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: sipush        8024\n-         5: invokestatic  #3                  // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n+         5: invokestatic  #9                  // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n          8: lreturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 input   Ljava/io/InputStream;\n             0       9     1 output   Ljava/io/OutputStream;\n@@ -215,38 +215,38 @@\n     descriptor: (Ljava/io/InputStream;Ljava/io/OutputStream;I)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=7, args_size=3\n          0: iload_2\n          1: iconst_1\n          2: if_icmpge     15\n-         5: new           #4                  // class java/lang/IllegalArgumentException\n+         5: new           #13                 // class java/lang/IllegalArgumentException\n          8: dup\n-         9: ldc           #5                  // String buffersize must be bigger than 0\n-        11: invokespecial #6                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         9: ldc           #15                 // String buffersize must be bigger than 0\n+        11: invokespecial #17                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         14: athrow\n         15: iload_2\n         16: newarray       byte\n         18: astore_3\n         19: iconst_0\n         20: istore        4\n         22: lconst_0\n         23: lstore        5\n         25: iconst_m1\n         26: aload_0\n         27: aload_3\n-        28: invokevirtual #7                  // Method java/io/InputStream.read:([B)I\n+        28: invokevirtual #20                 // Method java/io/InputStream.read:([B)I\n         31: dup\n         32: istore        4\n         34: if_icmpeq     56\n         37: aload_1\n         38: aload_3\n         39: iconst_0\n         40: iload         4\n-        42: invokevirtual #8                  // Method java/io/OutputStream.write:([BII)V\n+        42: invokevirtual #26                 // Method java/io/OutputStream.write:([BII)V\n         45: lload         5\n         47: iload         4\n         49: i2l\n         50: ladd\n         51: lstore        5\n         53: goto          25\n         56: lload         5\n@@ -287,15 +287,15 @@\n          1: lstore_3\n          2: lload_1\n          3: lconst_0\n          4: lcmp\n          5: ifle          33\n          8: aload_0\n          9: lload_1\n-        10: invokevirtual #9                  // Method java/io/InputStream.skip:(J)J\n+        10: invokevirtual #32                 // Method java/io/InputStream.skip:(J)J\n         13: lstore        5\n         15: lload         5\n         17: lconst_0\n         18: lcmp\n         19: ifne          25\n         22: goto          33\n         25: lload_1\n@@ -304,21 +304,21 @@\n         29: lstore_1\n         30: goto          2\n         33: lload_1\n         34: lconst_0\n         35: lcmp\n         36: ifle          75\n         39: aload_0\n-        40: getstatic     #10                 // Field SKIP_BUF:[B\n+        40: getstatic     #36                 // Field SKIP_BUF:[B\n         43: iconst_0\n         44: lload_1\n-        45: ldc2_w        #11                 // long 4096l\n-        48: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J\n+        45: ldc2_w        #40                 // long 4096l\n+        48: invokestatic  #42                 // Method java/lang/Math.min:(JJ)J\n         51: l2i\n-        52: invokestatic  #14                 // Method readFully:(Ljava/io/InputStream;[BII)I\n+        52: invokestatic  #48                 // Method readFully:(Ljava/io/InputStream;[BII)I\n         55: istore        5\n         57: iload         5\n         59: iconst_1\n         60: if_icmpge     66\n         63: goto          75\n         66: lload_1\n         67: iload         5\n@@ -372,38 +372,38 @@\n       throws java.io.IOException\n \n   public static int read(java.io.File, byte[]) throws java.io.IOException;\n     descriptor: (Ljava/io/File;[B)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=5, args_size=2\n-         0: new           #15                 // class java/io/FileInputStream\n+         0: new           #52                 // class java/io/FileInputStream\n          3: dup\n          4: aload_0\n-         5: invokespecial #16                 // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+         5: invokespecial #54                 // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n          8: astore_2\n          9: aload_2\n         10: aload_1\n         11: iconst_0\n         12: aload_1\n         13: arraylength\n-        14: invokestatic  #14                 // Method readFully:(Ljava/io/InputStream;[BII)I\n+        14: invokestatic  #48                 // Method readFully:(Ljava/io/InputStream;[BII)I\n         17: istore_3\n         18: aload_2\n-        19: invokevirtual #17                 // Method java/io/FileInputStream.close:()V\n+        19: invokevirtual #57                 // Method java/io/FileInputStream.close:()V\n         22: iload_3\n         23: ireturn\n         24: astore_3\n         25: aload_2\n-        26: invokevirtual #17                 // Method java/io/FileInputStream.close:()V\n+        26: invokevirtual #57                 // Method java/io/FileInputStream.close:()V\n         29: goto          40\n         32: astore        4\n         34: aload_3\n         35: aload         4\n-        37: invokevirtual #19                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        37: invokevirtual #62                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         40: aload_3\n         41: athrow\n       Exception table:\n          from    to  target type\n              9    18    24   Class java/lang/Throwable\n             25    29    32   Class java/lang/Throwable\n       LineNumberTable:\n@@ -436,15 +436,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokestatic  #14                 // Method readFully:(Ljava/io/InputStream;[BII)I\n+         5: invokestatic  #48                 // Method readFully:(Ljava/io/InputStream;[BII)I\n          8: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 input   Ljava/io/InputStream;\n             0       9     1 array   [B\n@@ -462,17 +462,17 @@\n          5: iflt          16\n          8: iload_3\n          9: iload_2\n         10: iadd\n         11: aload_1\n         12: arraylength\n         13: if_icmple     24\n-        16: new           #20                 // class java/lang/IndexOutOfBoundsException\n+        16: new           #66                 // class java/lang/IndexOutOfBoundsException\n         19: dup\n-        20: invokespecial #21                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        20: invokespecial #68                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         23: athrow\n         24: iconst_0\n         25: istore        4\n         27: iconst_0\n         28: istore        5\n         30: iload         4\n         32: iload_3\n@@ -481,15 +481,15 @@\n         37: aload_1\n         38: iload_2\n         39: iload         4\n         41: iadd\n         42: iload_3\n         43: iload         4\n         45: isub\n-        46: invokevirtual #22                 // Method java/io/InputStream.read:([BII)I\n+        46: invokevirtual #69                 // Method java/io/InputStream.read:([BII)I\n         49: istore        5\n         51: iload         5\n         53: iconst_m1\n         54: if_icmpne     60\n         57: goto          70\n         60: iload         4\n         62: iload         5\n@@ -529,39 +529,39 @@\n \n   public static void readFully(java.nio.channels.ReadableByteChannel, java.nio.ByteBuffer) throws java.io.IOException;\n     descriptor: (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/ByteBuffer;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=5, args_size=2\n          0: aload_1\n-         1: invokevirtual #23                 // Method java/nio/ByteBuffer.remaining:()I\n+         1: invokevirtual #72                 // Method java/nio/ByteBuffer.remaining:()I\n          4: istore_2\n          5: iconst_0\n          6: istore_3\n          7: iload_3\n          8: iload_2\n          9: if_icmpge     37\n         12: aload_0\n         13: aload_1\n-        14: invokeinterface #24,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I\n+        14: invokeinterface #78,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I\n         19: istore        4\n         21: iload         4\n         23: ifgt          29\n         26: goto          37\n         29: iload_3\n         30: iload         4\n         32: iadd\n         33: istore_3\n         34: goto          7\n         37: iload_3\n         38: iload_2\n         39: if_icmpge     50\n-        42: new           #25                 // class java/io/EOFException\n+        42: new           #83                 // class java/io/EOFException\n         45: dup\n-        46: invokespecial #26                 // Method java/io/EOFException.\"<init>\":()V\n+        46: invokespecial #85                 // Method java/io/EOFException.\"<init>\":()V\n         49: athrow\n         50: return\n       LineNumberTable:\n         line 213: 0\n         line 214: 5\n         line 215: 7\n         line 216: 12\n@@ -593,24 +593,24 @@\n       throws java.io.IOException\n \n   public static byte[] toByteArray(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)[B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #27                 // class java/io/ByteArrayOutputStream\n+         0: new           #86                 // class java/io/ByteArrayOutputStream\n          3: dup\n-         4: invokespecial #28                 // Method java/io/ByteArrayOutputStream.\"<init>\":()V\n+         4: invokespecial #88                 // Method java/io/ByteArrayOutputStream.\"<init>\":()V\n          7: astore_1\n          8: aload_0\n          9: aload_1\n-        10: invokestatic  #29                 // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J\n+        10: invokestatic  #89                 // Method copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)J\n         13: pop2\n         14: aload_1\n-        15: invokevirtual #30                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B\n+        15: invokevirtual #92                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B\n         18: areturn\n       LineNumberTable:\n         line 246: 0\n         line 247: 8\n         line 248: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -623,15 +623,15 @@\n     descriptor: (Ljava/io/Closeable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n-         5: invokeinterface #31,  1           // InterfaceMethod java/io/Closeable.close:()V\n+         5: invokeinterface #96,  1           // InterfaceMethod java/io/Closeable.close:()V\n         10: goto          14\n         13: astore_1\n         14: return\n       Exception table:\n          from    to  target type\n              4    10    13   Class java/io/IOException\n       LineNumberTable:\n@@ -651,13 +651,13 @@\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: sipush        4096\n          3: newarray       byte\n-         5: putstatic     #10                 // Field SKIP_BUF:[B\n+         5: putstatic     #36                 // Field SKIP_BUF:[B\n          8: return\n       LineNumberTable:\n         line 43: 0\n }\n SourceFile: \"IOUtils.java\"\n"}]}
