{"diffoscope-json-version": 1, "source1": "first/NumberUtils.class", "source2": "second/NumberUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,543 +1,543 @@\n-  SHA-256 checksum d1485c3f5a201df9b7490239dd11c141d81fb5ec48736032715e639c80c65a38\n+  SHA-256 checksum 7bdc685c8a08f56a62bdff64975b89573df0116da072818dbffbeb9a61ca6ef3\n   Compiled from \"NumberUtils.java\"\n public class org.apache.commons.lang3.math.NumberUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #140                        // org/apache/commons/lang3/math/NumberUtils\n-  super_class: #89                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/lang3/math/NumberUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 21, methods: 68, attributes: 1\n Constant pool:\n-    #1 = Methodref          #89.#327      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #140.#328     // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n-    #3 = Methodref          #133.#329     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-    #4 = Class              #330          // java/lang/NumberFormatException\n-    #5 = Methodref          #140.#331     // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n-    #6 = Methodref          #332.#333     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-    #7 = Methodref          #140.#334     // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n-    #8 = Methodref          #86.#335      // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n-    #9 = Methodref          #140.#336     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n-   #10 = Methodref          #82.#337      // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n-   #11 = Methodref          #140.#338     // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n-   #12 = Methodref          #78.#339      // java/math/BigDecimal.doubleValue:()D\n-   #13 = Methodref          #140.#340     // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n-   #14 = Methodref          #341.#342     // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n-   #15 = Methodref          #140.#343     // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n-   #16 = Methodref          #344.#345     // java/lang/Short.parseShort:(Ljava/lang/String;)S\n-   #17 = Fieldref           #140.#346     // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n-   #18 = Methodref          #133.#347     // java/lang/Integer.intValue:()I\n-   #19 = Fieldref           #215.#348     // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-   #20 = Methodref          #140.#349     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #21 = Fieldref           #78.#350      // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n-   #22 = Methodref          #78.#351      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #23 = Methodref          #140.#352     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #24 = Methodref          #86.#353      // java/lang/Float.floatValue:()F\n-   #25 = Methodref          #78.#354      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n-   #26 = Methodref          #140.#355     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #27 = Methodref          #82.#339      // java/lang/Double.doubleValue:()D\n-   #28 = Methodref          #140.#356     // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-   #29 = Methodref          #140.#357     // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-   #30 = Methodref          #358.#359     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n-   #31 = String             #360          // A blank string is not a valid number\n-   #32 = Methodref          #4.#361       // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n-   #33 = Class              #362          // java/lang/String\n-   #34 = String             #363          // 0x\n-   #35 = String             #364          // 0X\n-   #36 = String             #365          // -0x\n-   #37 = String             #366          // -0X\n-   #38 = String             #367          // #\n-   #39 = String             #368          // -#\n-   #40 = Methodref          #33.#369      // java/lang/String.length:()I\n-   #41 = Methodref          #33.#370      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #42 = Methodref          #33.#371      // java/lang/String.charAt:(I)C\n-   #43 = Methodref          #140.#372     // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-   #44 = Methodref          #140.#373     // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-   #45 = Methodref          #140.#374     // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #46 = Methodref          #33.#375      // java/lang/String.indexOf:(I)I\n-   #47 = Class              #376          // java/lang/StringBuilder\n-   #48 = Methodref          #47.#327      // java/lang/StringBuilder.\"<init>\":()V\n-   #49 = Methodref          #47.#377      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #50 = String             #378          //  is not a valid number.\n-   #51 = Methodref          #47.#379      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #52 = Methodref          #33.#380      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #53 = Methodref          #33.#381      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #54 = Methodref          #140.#382     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-   #55 = Methodref          #140.#383     // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-   #56 = Methodref          #384.#385     // java/lang/Character.isDigit:(C)Z\n-   #57 = Methodref          #140.#386     // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n-   #58 = Methodref          #33.#387      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #140.#388     // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n-   #60 = Methodref          #140.#389     // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-   #61 = Methodref          #86.#390      // java/lang/Float.isInfinite:()Z\n-   #62 = Methodref          #140.#391     // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-   #63 = Methodref          #82.#390      // java/lang/Double.isInfinite:()Z\n-   #64 = Methodref          #86.#379      // java/lang/Float.toString:()Ljava/lang/String;\n-   #65 = Methodref          #82.#379      // java/lang/Double.toString:()Ljava/lang/String;\n-   #66 = Methodref          #33.#392      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #67 = Methodref          #78.#393      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n-   #68 = Methodref          #86.#394      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-   #69 = Methodref          #82.#395      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-   #70 = Methodref          #133.#396     // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-   #71 = Methodref          #332.#397     // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n-   #72 = String             #398          // -\n-   #73 = Methodref          #33.#399      // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n-   #74 = String             #400          // 0\n-   #75 = Class              #401          // java/math/BigInteger\n-   #76 = Methodref          #75.#402      // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-   #77 = Methodref          #75.#403      // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n-   #78 = Class              #404          // java/math/BigDecimal\n-   #79 = Methodref          #78.#361      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n-   #80 = Methodref          #140.#405     // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n-   #81 = Methodref          #82.#406      // java/lang/Double.isNaN:(D)Z\n-   #82 = Class              #407          // java/lang/Double\n-   #83 = Double             NaNd\n-   #85 = Methodref          #86.#408      // java/lang/Float.isNaN:(F)Z\n-   #86 = Class              #409          // java/lang/Float\n-   #87 = Float              NaNf\n-   #88 = String             #271          // array\n-   #89 = Class              #410          // java/lang/Object\n-   #90 = Methodref          #411.#412     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Methodref          #413.#414     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n-   #92 = String             #415          // Array cannot be empty.\n-   #93 = Methodref          #411.#416     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-   #94 = Methodref          #417.#418     // java/lang/Math.min:(DD)D\n-   #95 = Methodref          #417.#419     // java/lang/Math.min:(FF)F\n-   #96 = Methodref          #417.#420     // java/lang/Math.max:(DD)D\n-   #97 = Methodref          #417.#421     // java/lang/Math.max:(FF)F\n-   #98 = Methodref          #358.#422     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n-   #99 = Methodref          #140.#423     // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n-  #100 = Methodref          #358.#424     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n-  #101 = Methodref          #33.#425      // java/lang/String.toCharArray:()[C\n-  #102 = Methodref          #358.#426     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n-  #103 = Methodref          #140.#427     // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #104 = Methodref          #332.#428     // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-  #105 = Fieldref           #140.#429     // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n-  #106 = Fieldref           #140.#430     // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n-  #107 = Long               -1l\n-  #109 = Fieldref           #140.#431     // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n-  #110 = Methodref          #133.#432     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #111 = Fieldref           #140.#433     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n-  #112 = Fieldref           #140.#434     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n-  #113 = Fieldref           #140.#435     // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #114 = Methodref          #344.#436     // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-  #115 = Fieldref           #140.#437     // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n-  #116 = Fieldref           #140.#438     // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n-  #117 = Fieldref           #140.#439     // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #118 = Methodref          #341.#440     // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-  #119 = Fieldref           #140.#441     // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n-  #120 = Fieldref           #140.#442     // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n-  #121 = Fieldref           #140.#443     // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #122 = Methodref          #82.#444      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-  #123 = Fieldref           #140.#445     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n-  #124 = Fieldref           #140.#446     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n-  #125 = Double             -1.0d\n-  #127 = Fieldref           #140.#447     // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #128 = Methodref          #86.#448      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-  #129 = Fieldref           #140.#449     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n-  #130 = Fieldref           #140.#450     // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n-  #131 = Float              -1.0f\n-  #132 = Fieldref           #140.#451     // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #133 = Class              #452          // java/lang/Integer\n-  #134 = Long               2147483647l\n-  #136 = Fieldref           #140.#453     // org/apache/commons/lang3/math/NumberUtils.LONG_INT_MAX_VALUE:Ljava/lang/Long;\n-  #137 = Long               -2147483648l\n-  #139 = Fieldref           #140.#454     // org/apache/commons/lang3/math/NumberUtils.LONG_INT_MIN_VALUE:Ljava/lang/Long;\n-  #140 = Class              #455          // org/apache/commons/lang3/math/NumberUtils\n-  #141 = Utf8               LONG_ZERO\n-  #142 = Utf8               Ljava/lang/Long;\n-  #143 = Utf8               LONG_ONE\n-  #144 = Utf8               LONG_MINUS_ONE\n-  #145 = Utf8               INTEGER_ZERO\n-  #146 = Utf8               Ljava/lang/Integer;\n-  #147 = Utf8               INTEGER_ONE\n-  #148 = Utf8               INTEGER_TWO\n-  #149 = Utf8               INTEGER_MINUS_ONE\n-  #150 = Utf8               SHORT_ZERO\n-  #151 = Utf8               Ljava/lang/Short;\n-  #152 = Utf8               SHORT_ONE\n-  #153 = Utf8               SHORT_MINUS_ONE\n-  #154 = Utf8               BYTE_ZERO\n-  #155 = Utf8               Ljava/lang/Byte;\n-  #156 = Utf8               BYTE_ONE\n-  #157 = Utf8               BYTE_MINUS_ONE\n-  #158 = Utf8               DOUBLE_ZERO\n-  #159 = Utf8               Ljava/lang/Double;\n-  #160 = Utf8               DOUBLE_ONE\n-  #161 = Utf8               DOUBLE_MINUS_ONE\n-  #162 = Utf8               FLOAT_ZERO\n-  #163 = Utf8               Ljava/lang/Float;\n-  #164 = Utf8               FLOAT_ONE\n-  #165 = Utf8               FLOAT_MINUS_ONE\n-  #166 = Utf8               LONG_INT_MAX_VALUE\n-  #167 = Utf8               LONG_INT_MIN_VALUE\n-  #168 = Utf8               <init>\n-  #169 = Utf8               ()V\n-  #170 = Utf8               Code\n-  #171 = Utf8               LineNumberTable\n-  #172 = Utf8               LocalVariableTable\n-  #173 = Utf8               this\n-  #174 = Utf8               Lorg/apache/commons/lang3/math/NumberUtils;\n-  #175 = Utf8               toInt\n-  #176 = Utf8               (Ljava/lang/String;)I\n-  #177 = Utf8               str\n-  #178 = Utf8               Ljava/lang/String;\n-  #179 = Utf8               (Ljava/lang/String;I)I\n-  #180 = Utf8               nfe\n-  #181 = Utf8               Ljava/lang/NumberFormatException;\n-  #182 = Utf8               defaultValue\n-  #183 = Utf8               I\n-  #184 = Utf8               StackMapTable\n-  #185 = Utf8               toLong\n-  #186 = Utf8               (Ljava/lang/String;)J\n-  #187 = Utf8               (Ljava/lang/String;J)J\n-  #188 = Utf8               J\n-  #189 = Utf8               toFloat\n-  #190 = Utf8               (Ljava/lang/String;)F\n-  #191 = Utf8               (Ljava/lang/String;F)F\n-  #192 = Utf8               F\n-  #193 = Utf8               toDouble\n-  #194 = Utf8               (Ljava/lang/String;)D\n-  #195 = Utf8               (Ljava/lang/String;D)D\n-  #196 = Utf8               D\n-  #197 = Utf8               (Ljava/math/BigDecimal;)D\n-  #198 = Utf8               value\n-  #199 = Utf8               Ljava/math/BigDecimal;\n-  #200 = Utf8               (Ljava/math/BigDecimal;D)D\n-  #201 = Utf8               toByte\n-  #202 = Utf8               (Ljava/lang/String;)B\n-  #203 = Utf8               (Ljava/lang/String;B)B\n-  #204 = Utf8               B\n-  #205 = Utf8               toShort\n-  #206 = Utf8               (Ljava/lang/String;)S\n-  #207 = Utf8               (Ljava/lang/String;S)S\n-  #208 = Utf8               S\n-  #209 = Utf8               toScaledBigDecimal\n-  #210 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n-  #211 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #212 = Utf8               scale\n-  #213 = Utf8               roundingMode\n-  #214 = Utf8               Ljava/math/RoundingMode;\n-  #215 = Class              #456          // java/math/RoundingMode\n-  #216 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n-  #217 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #218 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n-  #219 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #220 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #221 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #222 = Utf8               createNumber\n-  #223 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n-  #224 = Utf8               pfx\n-  #225 = Utf8               i\n-  #226 = Utf8               firstSigDigit\n-  #227 = Utf8               C\n-  #228 = Utf8               hexDigits\n-  #229 = Utf8               dec\n-  #230 = Utf8               mant\n-  #231 = Utf8               exp\n-  #232 = Utf8               f\n-  #233 = Utf8               d\n-  #234 = Utf8               numeric\n-  #235 = Utf8               allZeros\n-  #236 = Utf8               Z\n-  #237 = Utf8               b\n-  #238 = Utf8               hex_prefixes\n-  #239 = Utf8               [Ljava/lang/String;\n-  #240 = Utf8               length\n-  #241 = Utf8               pfxLen\n-  #242 = Utf8               lastChar\n-  #243 = Utf8               decPos\n-  #244 = Utf8               expPos\n-  #245 = Class              #239          // \"[Ljava/lang/String;\"\n-  #246 = Utf8               getMantissa\n-  #247 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #248 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #249 = Utf8               stopPos\n-  #250 = Utf8               firstChar\n-  #251 = Utf8               hasSign\n-  #252 = Utf8               isAllZeros\n-  #253 = Utf8               (Ljava/lang/String;)Z\n-  #254 = Utf8               createFloat\n-  #255 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n-  #256 = Utf8               createDouble\n-  #257 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n-  #258 = Utf8               createInteger\n-  #259 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n-  #260 = Utf8               createLong\n-  #261 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n-  #262 = Utf8               createBigInteger\n-  #263 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n-  #264 = Utf8               pos\n-  #265 = Utf8               radix\n-  #266 = Utf8               negate\n-  #267 = Utf8               Ljava/math/BigInteger;\n-  #268 = Utf8               createBigDecimal\n-  #269 = Utf8               min\n-  #270 = Utf8               ([J)J\n-  #271 = Utf8               array\n-  #272 = Utf8               [J\n-  #273 = Utf8               ([I)I\n-  #274 = Utf8               j\n-  #275 = Utf8               [I\n-  #276 = Utf8               ([S)S\n-  #277 = Utf8               [S\n-  #278 = Utf8               ([B)B\n-  #279 = Utf8               [B\n-  #280 = Utf8               ([D)D\n-  #281 = Utf8               [D\n-  #282 = Utf8               ([F)F\n-  #283 = Utf8               [F\n-  #284 = Utf8               max\n-  #285 = Utf8               validateArray\n-  #286 = Utf8               (Ljava/lang/Object;)V\n-  #287 = Utf8               Ljava/lang/Object;\n-  #288 = Utf8               (JJJ)J\n-  #289 = Utf8               a\n-  #290 = Utf8               c\n-  #291 = Utf8               (III)I\n-  #292 = Utf8               (SSS)S\n-  #293 = Utf8               (BBB)B\n-  #294 = Utf8               (DDD)D\n-  #295 = Utf8               (FFF)F\n-  #296 = Utf8               isDigits\n-  #297 = Utf8               isNumber\n-  #298 = Utf8               Deprecated\n-  #299 = Utf8               RuntimeVisibleAnnotations\n-  #300 = Utf8               Ljava/lang/Deprecated;\n-  #301 = Utf8               isCreatable\n-  #302 = Utf8               chars\n-  #303 = Utf8               [C\n-  #304 = Utf8               sz\n-  #305 = Utf8               hasExp\n-  #306 = Utf8               hasDecPoint\n-  #307 = Utf8               allowSigns\n-  #308 = Utf8               foundDigit\n-  #309 = Utf8               start\n-  #310 = Class              #303          // \"[C\"\n-  #311 = Utf8               isParsable\n-  #312 = Utf8               withDecimalsParsing\n-  #313 = Utf8               (Ljava/lang/String;I)Z\n-  #314 = Utf8               isDecimalPoint\n-  #315 = Utf8               beginIdx\n-  #316 = Utf8               decimalPoints\n-  #317 = Utf8               compare\n-  #318 = Utf8               (II)I\n-  #319 = Utf8               x\n-  #320 = Utf8               y\n-  #321 = Utf8               (JJ)I\n-  #322 = Utf8               (SS)I\n-  #323 = Utf8               (BB)I\n-  #324 = Utf8               <clinit>\n-  #325 = Utf8               SourceFile\n-  #326 = Utf8               NumberUtils.java\n-  #327 = NameAndType        #168:#169     // \"<init>\":()V\n-  #328 = NameAndType        #175:#179     // toInt:(Ljava/lang/String;I)I\n-  #329 = NameAndType        #457:#176     // parseInt:(Ljava/lang/String;)I\n-  #330 = Utf8               java/lang/NumberFormatException\n-  #331 = NameAndType        #185:#187     // toLong:(Ljava/lang/String;J)J\n-  #332 = Class              #458          // java/lang/Long\n-  #333 = NameAndType        #459:#186     // parseLong:(Ljava/lang/String;)J\n-  #334 = NameAndType        #189:#191     // toFloat:(Ljava/lang/String;F)F\n-  #335 = NameAndType        #460:#190     // parseFloat:(Ljava/lang/String;)F\n-  #336 = NameAndType        #193:#195     // toDouble:(Ljava/lang/String;D)D\n-  #337 = NameAndType        #461:#194     // parseDouble:(Ljava/lang/String;)D\n-  #338 = NameAndType        #193:#200     // toDouble:(Ljava/math/BigDecimal;D)D\n-  #339 = NameAndType        #462:#463     // doubleValue:()D\n-  #340 = NameAndType        #201:#203     // toByte:(Ljava/lang/String;B)B\n-  #341 = Class              #464          // java/lang/Byte\n-  #342 = NameAndType        #465:#202     // parseByte:(Ljava/lang/String;)B\n-  #343 = NameAndType        #205:#207     // toShort:(Ljava/lang/String;S)S\n-  #344 = Class              #466          // java/lang/Short\n-  #345 = NameAndType        #467:#206     // parseShort:(Ljava/lang/String;)S\n-  #346 = NameAndType        #148:#146     // INTEGER_TWO:Ljava/lang/Integer;\n-  #347 = NameAndType        #468:#469     // intValue:()I\n-  #348 = NameAndType        #470:#214     // HALF_EVEN:Ljava/math/RoundingMode;\n-  #349 = NameAndType        #209:#211     // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #350 = NameAndType        #471:#199     // ZERO:Ljava/math/BigDecimal;\n-  #351 = NameAndType        #472:#473     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #352 = NameAndType        #209:#217     // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #353 = NameAndType        #474:#475     // floatValue:()F\n-  #354 = NameAndType        #476:#477     // valueOf:(D)Ljava/math/BigDecimal;\n-  #355 = NameAndType        #209:#219     // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #356 = NameAndType        #209:#221     // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #357 = NameAndType        #268:#220     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n-  #358 = Class              #478          // org/apache/commons/lang3/StringUtils\n-  #359 = NameAndType        #479:#480     // isBlank:(Ljava/lang/CharSequence;)Z\n-  #360 = Utf8               A blank string is not a valid number\n-  #361 = NameAndType        #168:#481     // \"<init>\":(Ljava/lang/String;)V\n-  #362 = Utf8               java/lang/String\n-  #363 = Utf8               0x\n-  #364 = Utf8               0X\n-  #365 = Utf8               -0x\n-  #366 = Utf8               -0X\n-  #367 = Utf8               #\n-  #368 = Utf8               -#\n-  #369 = NameAndType        #240:#469     // length:()I\n-  #370 = NameAndType        #482:#253     // startsWith:(Ljava/lang/String;)Z\n-  #371 = NameAndType        #483:#484     // charAt:(I)C\n-  #372 = NameAndType        #262:#263     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n-  #373 = NameAndType        #260:#261     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n-  #374 = NameAndType        #258:#259     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #375 = NameAndType        #485:#486     // indexOf:(I)I\n-  #376 = Utf8               java/lang/StringBuilder\n-  #377 = NameAndType        #487:#488     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #378 = Utf8                is not a valid number.\n-  #379 = NameAndType        #489:#490     // toString:()Ljava/lang/String;\n-  #380 = NameAndType        #491:#492     // substring:(II)Ljava/lang/String;\n-  #381 = NameAndType        #491:#493     // substring:(I)Ljava/lang/String;\n-  #382 = NameAndType        #246:#248     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n-  #383 = NameAndType        #246:#247     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n-  #384 = Class              #494          // java/lang/Character\n-  #385 = NameAndType        #495:#496     // isDigit:(C)Z\n-  #386 = NameAndType        #252:#253     // isAllZeros:(Ljava/lang/String;)Z\n-  #387 = NameAndType        #497:#498     // isEmpty:()Z\n-  #388 = NameAndType        #296:#253     // isDigits:(Ljava/lang/String;)Z\n-  #389 = NameAndType        #254:#255     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n-  #390 = NameAndType        #499:#498     // isInfinite:()Z\n-  #391 = NameAndType        #256:#257     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n-  #392 = NameAndType        #500:#501     // equals:(Ljava/lang/Object;)Z\n-  #393 = NameAndType        #502:#503     // compareTo:(Ljava/math/BigDecimal;)I\n-  #394 = NameAndType        #476:#255     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n-  #395 = NameAndType        #476:#257     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n-  #396 = NameAndType        #504:#259     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n-  #397 = NameAndType        #504:#261     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n-  #398 = Utf8               -\n-  #399 = NameAndType        #482:#313     // startsWith:(Ljava/lang/String;I)Z\n-  #400 = Utf8               0\n-  #401 = Utf8               java/math/BigInteger\n-  #402 = NameAndType        #168:#505     // \"<init>\":(Ljava/lang/String;I)V\n-  #403 = NameAndType        #266:#506     // negate:()Ljava/math/BigInteger;\n-  #404 = Utf8               java/math/BigDecimal\n-  #405 = NameAndType        #285:#286     // validateArray:(Ljava/lang/Object;)V\n-  #406 = NameAndType        #507:#508     // isNaN:(D)Z\n-  #407 = Utf8               java/lang/Double\n-  #408 = NameAndType        #507:#509     // isNaN:(F)Z\n-  #409 = Utf8               java/lang/Float\n-  #410 = Utf8               java/lang/Object\n-  #411 = Class              #510          // org/apache/commons/lang3/Validate\n-  #412 = NameAndType        #511:#512     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #413 = Class              #513          // java/lang/reflect/Array\n-  #414 = NameAndType        #514:#515     // getLength:(Ljava/lang/Object;)I\n-  #415 = Utf8               Array cannot be empty.\n-  #416 = NameAndType        #516:#517     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #417 = Class              #518          // java/lang/Math\n-  #418 = NameAndType        #269:#519     // min:(DD)D\n-  #419 = NameAndType        #269:#520     // min:(FF)F\n-  #420 = NameAndType        #284:#519     // max:(DD)D\n-  #421 = NameAndType        #284:#520     // max:(FF)F\n-  #422 = NameAndType        #521:#480     // isNumeric:(Ljava/lang/CharSequence;)Z\n-  #423 = NameAndType        #301:#253     // isCreatable:(Ljava/lang/String;)Z\n-  #424 = NameAndType        #497:#480     // isEmpty:(Ljava/lang/CharSequence;)Z\n-  #425 = NameAndType        #522:#523     // toCharArray:()[C\n-  #426 = NameAndType        #524:#525     // contains:(Ljava/lang/CharSequence;I)Z\n-  #427 = NameAndType        #312:#313     // withDecimalsParsing:(Ljava/lang/String;I)Z\n-  #428 = NameAndType        #476:#526     // valueOf:(J)Ljava/lang/Long;\n-  #429 = NameAndType        #141:#142     // LONG_ZERO:Ljava/lang/Long;\n-  #430 = NameAndType        #143:#142     // LONG_ONE:Ljava/lang/Long;\n-  #431 = NameAndType        #144:#142     // LONG_MINUS_ONE:Ljava/lang/Long;\n-  #432 = NameAndType        #476:#527     // valueOf:(I)Ljava/lang/Integer;\n-  #433 = NameAndType        #145:#146     // INTEGER_ZERO:Ljava/lang/Integer;\n-  #434 = NameAndType        #147:#146     // INTEGER_ONE:Ljava/lang/Integer;\n-  #435 = NameAndType        #149:#146     // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n-  #436 = NameAndType        #476:#528     // valueOf:(S)Ljava/lang/Short;\n-  #437 = NameAndType        #150:#151     // SHORT_ZERO:Ljava/lang/Short;\n-  #438 = NameAndType        #152:#151     // SHORT_ONE:Ljava/lang/Short;\n-  #439 = NameAndType        #153:#151     // SHORT_MINUS_ONE:Ljava/lang/Short;\n-  #440 = NameAndType        #476:#529     // valueOf:(B)Ljava/lang/Byte;\n-  #441 = NameAndType        #154:#155     // BYTE_ZERO:Ljava/lang/Byte;\n-  #442 = NameAndType        #156:#155     // BYTE_ONE:Ljava/lang/Byte;\n-  #443 = NameAndType        #157:#155     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n-  #444 = NameAndType        #476:#530     // valueOf:(D)Ljava/lang/Double;\n-  #445 = NameAndType        #158:#159     // DOUBLE_ZERO:Ljava/lang/Double;\n-  #446 = NameAndType        #160:#159     // DOUBLE_ONE:Ljava/lang/Double;\n-  #447 = NameAndType        #161:#159     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n-  #448 = NameAndType        #476:#531     // valueOf:(F)Ljava/lang/Float;\n-  #449 = NameAndType        #162:#163     // FLOAT_ZERO:Ljava/lang/Float;\n-  #450 = NameAndType        #164:#163     // FLOAT_ONE:Ljava/lang/Float;\n-  #451 = NameAndType        #165:#163     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n-  #452 = Utf8               java/lang/Integer\n-  #453 = NameAndType        #166:#142     // LONG_INT_MAX_VALUE:Ljava/lang/Long;\n-  #454 = NameAndType        #167:#142     // LONG_INT_MIN_VALUE:Ljava/lang/Long;\n-  #455 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #456 = Utf8               java/math/RoundingMode\n-  #457 = Utf8               parseInt\n-  #458 = Utf8               java/lang/Long\n-  #459 = Utf8               parseLong\n-  #460 = Utf8               parseFloat\n-  #461 = Utf8               parseDouble\n-  #462 = Utf8               doubleValue\n-  #463 = Utf8               ()D\n-  #464 = Utf8               java/lang/Byte\n-  #465 = Utf8               parseByte\n-  #466 = Utf8               java/lang/Short\n-  #467 = Utf8               parseShort\n-  #468 = Utf8               intValue\n-  #469 = Utf8               ()I\n-  #470 = Utf8               HALF_EVEN\n-  #471 = Utf8               ZERO\n-  #472 = Utf8               setScale\n-  #473 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n-  #474 = Utf8               floatValue\n-  #475 = Utf8               ()F\n-  #476 = Utf8               valueOf\n-  #477 = Utf8               (D)Ljava/math/BigDecimal;\n-  #478 = Utf8               org/apache/commons/lang3/StringUtils\n-  #479 = Utf8               isBlank\n-  #480 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #481 = Utf8               (Ljava/lang/String;)V\n-  #482 = Utf8               startsWith\n-  #483 = Utf8               charAt\n-  #484 = Utf8               (I)C\n-  #485 = Utf8               indexOf\n-  #486 = Utf8               (I)I\n-  #487 = Utf8               append\n-  #488 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #489 = Utf8               toString\n-  #490 = Utf8               ()Ljava/lang/String;\n-  #491 = Utf8               substring\n-  #492 = Utf8               (II)Ljava/lang/String;\n-  #493 = Utf8               (I)Ljava/lang/String;\n-  #494 = Utf8               java/lang/Character\n-  #495 = Utf8               isDigit\n-  #496 = Utf8               (C)Z\n-  #497 = Utf8               isEmpty\n-  #498 = Utf8               ()Z\n-  #499 = Utf8               isInfinite\n-  #500 = Utf8               equals\n-  #501 = Utf8               (Ljava/lang/Object;)Z\n-  #502 = Utf8               compareTo\n-  #503 = Utf8               (Ljava/math/BigDecimal;)I\n-  #504 = Utf8               decode\n-  #505 = Utf8               (Ljava/lang/String;I)V\n-  #506 = Utf8               ()Ljava/math/BigInteger;\n-  #507 = Utf8               isNaN\n-  #508 = Utf8               (D)Z\n-  #509 = Utf8               (F)Z\n-  #510 = Utf8               org/apache/commons/lang3/Validate\n-  #511 = Utf8               notNull\n-  #512 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #513 = Utf8               java/lang/reflect/Array\n-  #514 = Utf8               getLength\n-  #515 = Utf8               (Ljava/lang/Object;)I\n-  #516 = Utf8               isTrue\n-  #517 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n-  #518 = Utf8               java/lang/Math\n-  #519 = Utf8               (DD)D\n-  #520 = Utf8               (FF)F\n-  #521 = Utf8               isNumeric\n-  #522 = Utf8               toCharArray\n-  #523 = Utf8               ()[C\n-  #524 = Utf8               contains\n-  #525 = Utf8               (Ljava/lang/CharSequence;I)Z\n-  #526 = Utf8               (J)Ljava/lang/Long;\n-  #527 = Utf8               (I)Ljava/lang/Integer;\n-  #528 = Utf8               (S)Ljava/lang/Short;\n-  #529 = Utf8               (B)Ljava/lang/Byte;\n-  #530 = Utf8               (D)Ljava/lang/Double;\n-  #531 = Utf8               (F)Ljava/lang/Float;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // org/apache/commons/lang3/math/NumberUtils.toInt:(Ljava/lang/String;I)I\n+    #8 = Class              #10           // org/apache/commons/lang3/math/NumberUtils\n+    #9 = NameAndType        #11:#12       // toInt:(Ljava/lang/String;I)I\n+   #10 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+   #11 = Utf8               toInt\n+   #12 = Utf8               (Ljava/lang/String;I)I\n+   #13 = Methodref          #14.#15       // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #14 = Class              #16           // java/lang/Integer\n+   #15 = NameAndType        #17:#18       // parseInt:(Ljava/lang/String;)I\n+   #16 = Utf8               java/lang/Integer\n+   #17 = Utf8               parseInt\n+   #18 = Utf8               (Ljava/lang/String;)I\n+   #19 = Class              #20           // java/lang/NumberFormatException\n+   #20 = Utf8               java/lang/NumberFormatException\n+   #21 = Methodref          #8.#22        // org/apache/commons/lang3/math/NumberUtils.toLong:(Ljava/lang/String;J)J\n+   #22 = NameAndType        #23:#24       // toLong:(Ljava/lang/String;J)J\n+   #23 = Utf8               toLong\n+   #24 = Utf8               (Ljava/lang/String;J)J\n+   #25 = Methodref          #26.#27       // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+   #26 = Class              #28           // java/lang/Long\n+   #27 = NameAndType        #29:#30       // parseLong:(Ljava/lang/String;)J\n+   #28 = Utf8               java/lang/Long\n+   #29 = Utf8               parseLong\n+   #30 = Utf8               (Ljava/lang/String;)J\n+   #31 = Methodref          #8.#32        // org/apache/commons/lang3/math/NumberUtils.toFloat:(Ljava/lang/String;F)F\n+   #32 = NameAndType        #33:#34       // toFloat:(Ljava/lang/String;F)F\n+   #33 = Utf8               toFloat\n+   #34 = Utf8               (Ljava/lang/String;F)F\n+   #35 = Methodref          #36.#37       // java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+   #36 = Class              #38           // java/lang/Float\n+   #37 = NameAndType        #39:#40       // parseFloat:(Ljava/lang/String;)F\n+   #38 = Utf8               java/lang/Float\n+   #39 = Utf8               parseFloat\n+   #40 = Utf8               (Ljava/lang/String;)F\n+   #41 = Methodref          #8.#42        // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/lang/String;D)D\n+   #42 = NameAndType        #43:#44       // toDouble:(Ljava/lang/String;D)D\n+   #43 = Utf8               toDouble\n+   #44 = Utf8               (Ljava/lang/String;D)D\n+   #45 = Methodref          #46.#47       // java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+   #46 = Class              #48           // java/lang/Double\n+   #47 = NameAndType        #49:#50       // parseDouble:(Ljava/lang/String;)D\n+   #48 = Utf8               java/lang/Double\n+   #49 = Utf8               parseDouble\n+   #50 = Utf8               (Ljava/lang/String;)D\n+   #51 = Methodref          #8.#52        // org/apache/commons/lang3/math/NumberUtils.toDouble:(Ljava/math/BigDecimal;D)D\n+   #52 = NameAndType        #43:#53       // toDouble:(Ljava/math/BigDecimal;D)D\n+   #53 = Utf8               (Ljava/math/BigDecimal;D)D\n+   #54 = Methodref          #55.#56       // java/math/BigDecimal.doubleValue:()D\n+   #55 = Class              #57           // java/math/BigDecimal\n+   #56 = NameAndType        #58:#59       // doubleValue:()D\n+   #57 = Utf8               java/math/BigDecimal\n+   #58 = Utf8               doubleValue\n+   #59 = Utf8               ()D\n+   #60 = Methodref          #8.#61        // org/apache/commons/lang3/math/NumberUtils.toByte:(Ljava/lang/String;B)B\n+   #61 = NameAndType        #62:#63       // toByte:(Ljava/lang/String;B)B\n+   #62 = Utf8               toByte\n+   #63 = Utf8               (Ljava/lang/String;B)B\n+   #64 = Methodref          #65.#66       // java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+   #65 = Class              #67           // java/lang/Byte\n+   #66 = NameAndType        #68:#69       // parseByte:(Ljava/lang/String;)B\n+   #67 = Utf8               java/lang/Byte\n+   #68 = Utf8               parseByte\n+   #69 = Utf8               (Ljava/lang/String;)B\n+   #70 = Methodref          #8.#71        // org/apache/commons/lang3/math/NumberUtils.toShort:(Ljava/lang/String;S)S\n+   #71 = NameAndType        #72:#73       // toShort:(Ljava/lang/String;S)S\n+   #72 = Utf8               toShort\n+   #73 = Utf8               (Ljava/lang/String;S)S\n+   #74 = Methodref          #75.#76       // java/lang/Short.parseShort:(Ljava/lang/String;)S\n+   #75 = Class              #77           // java/lang/Short\n+   #76 = NameAndType        #78:#79       // parseShort:(Ljava/lang/String;)S\n+   #77 = Utf8               java/lang/Short\n+   #78 = Utf8               parseShort\n+   #79 = Utf8               (Ljava/lang/String;)S\n+   #80 = Fieldref           #8.#81        // org/apache/commons/lang3/math/NumberUtils.INTEGER_TWO:Ljava/lang/Integer;\n+   #81 = NameAndType        #82:#83       // INTEGER_TWO:Ljava/lang/Integer;\n+   #82 = Utf8               INTEGER_TWO\n+   #83 = Utf8               Ljava/lang/Integer;\n+   #84 = Methodref          #14.#85       // java/lang/Integer.intValue:()I\n+   #85 = NameAndType        #86:#87       // intValue:()I\n+   #86 = Utf8               intValue\n+   #87 = Utf8               ()I\n+   #88 = Fieldref           #89.#90       // java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+   #89 = Class              #91           // java/math/RoundingMode\n+   #90 = NameAndType        #92:#93       // HALF_EVEN:Ljava/math/RoundingMode;\n+   #91 = Utf8               java/math/RoundingMode\n+   #92 = Utf8               HALF_EVEN\n+   #93 = Utf8               Ljava/math/RoundingMode;\n+   #94 = Methodref          #8.#95        // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #95 = NameAndType        #96:#97       // toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #96 = Utf8               toScaledBigDecimal\n+   #97 = Utf8               (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+   #98 = Fieldref           #55.#99       // java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+   #99 = NameAndType        #100:#101     // ZERO:Ljava/math/BigDecimal;\n+  #100 = Utf8               ZERO\n+  #101 = Utf8               Ljava/math/BigDecimal;\n+  #102 = Methodref          #55.#103      // java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #103 = NameAndType        #104:#105     // setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #104 = Utf8               setScale\n+  #105 = Utf8               (ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #106 = Methodref          #8.#107       // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #107 = NameAndType        #96:#108      // toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #108 = Utf8               (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #109 = Methodref          #36.#110      // java/lang/Float.floatValue:()F\n+  #110 = NameAndType        #111:#112     // floatValue:()F\n+  #111 = Utf8               floatValue\n+  #112 = Utf8               ()F\n+  #113 = Methodref          #55.#114      // java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+  #114 = NameAndType        #115:#116     // valueOf:(D)Ljava/math/BigDecimal;\n+  #115 = Utf8               valueOf\n+  #116 = Utf8               (D)Ljava/math/BigDecimal;\n+  #117 = Methodref          #8.#118       // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #118 = NameAndType        #96:#119      // toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #119 = Utf8               (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #120 = Methodref          #46.#56       // java/lang/Double.doubleValue:()D\n+  #121 = Methodref          #8.#122       // org/apache/commons/lang3/math/NumberUtils.toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #122 = NameAndType        #96:#123      // toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #123 = Utf8               (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+  #124 = Methodref          #8.#125       // org/apache/commons/lang3/math/NumberUtils.createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #125 = NameAndType        #126:#127     // createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #126 = Utf8               createBigDecimal\n+  #127 = Utf8               (Ljava/lang/String;)Ljava/math/BigDecimal;\n+  #128 = Methodref          #129.#130     // org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+  #129 = Class              #131          // org/apache/commons/lang3/StringUtils\n+  #130 = NameAndType        #132:#133     // isBlank:(Ljava/lang/CharSequence;)Z\n+  #131 = Utf8               org/apache/commons/lang3/StringUtils\n+  #132 = Utf8               isBlank\n+  #133 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #134 = String             #135          // A blank string is not a valid number\n+  #135 = Utf8               A blank string is not a valid number\n+  #136 = Methodref          #19.#137      // java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+  #137 = NameAndType        #5:#138       // \"<init>\":(Ljava/lang/String;)V\n+  #138 = Utf8               (Ljava/lang/String;)V\n+  #139 = Class              #140          // java/lang/String\n+  #140 = Utf8               java/lang/String\n+  #141 = String             #142          // 0x\n+  #142 = Utf8               0x\n+  #143 = String             #144          // 0X\n+  #144 = Utf8               0X\n+  #145 = String             #146          // -0x\n+  #146 = Utf8               -0x\n+  #147 = String             #148          // -0X\n+  #148 = Utf8               -0X\n+  #149 = String             #150          // #\n+  #150 = Utf8               #\n+  #151 = String             #152          // -#\n+  #152 = Utf8               -#\n+  #153 = Methodref          #139.#154     // java/lang/String.length:()I\n+  #154 = NameAndType        #155:#87      // length:()I\n+  #155 = Utf8               length\n+  #156 = Methodref          #139.#157     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #157 = NameAndType        #158:#159     // startsWith:(Ljava/lang/String;)Z\n+  #158 = Utf8               startsWith\n+  #159 = Utf8               (Ljava/lang/String;)Z\n+  #160 = Methodref          #139.#161     // java/lang/String.charAt:(I)C\n+  #161 = NameAndType        #162:#163     // charAt:(I)C\n+  #162 = Utf8               charAt\n+  #163 = Utf8               (I)C\n+  #164 = Methodref          #8.#165       // org/apache/commons/lang3/math/NumberUtils.createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #165 = NameAndType        #166:#167     // createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+  #166 = Utf8               createBigInteger\n+  #167 = Utf8               (Ljava/lang/String;)Ljava/math/BigInteger;\n+  #168 = Methodref          #8.#169       // org/apache/commons/lang3/math/NumberUtils.createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+  #169 = NameAndType        #170:#171     // createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+  #170 = Utf8               createLong\n+  #171 = Utf8               (Ljava/lang/String;)Ljava/lang/Long;\n+  #172 = Methodref          #8.#173       // org/apache/commons/lang3/math/NumberUtils.createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #173 = NameAndType        #174:#175     // createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #174 = Utf8               createInteger\n+  #175 = Utf8               (Ljava/lang/String;)Ljava/lang/Integer;\n+  #176 = Methodref          #139.#177     // java/lang/String.indexOf:(I)I\n+  #177 = NameAndType        #178:#179     // indexOf:(I)I\n+  #178 = Utf8               indexOf\n+  #179 = Utf8               (I)I\n+  #180 = Class              #181          // java/lang/StringBuilder\n+  #181 = Utf8               java/lang/StringBuilder\n+  #182 = Methodref          #180.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #183 = Methodref          #180.#184     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #184 = NameAndType        #185:#186     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #185 = Utf8               append\n+  #186 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #187 = String             #188          //  is not a valid number.\n+  #188 = Utf8                is not a valid number.\n+  #189 = Methodref          #180.#190     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #190 = NameAndType        #191:#192     // toString:()Ljava/lang/String;\n+  #191 = Utf8               toString\n+  #192 = Utf8               ()Ljava/lang/String;\n+  #193 = Methodref          #139.#194     // java/lang/String.substring:(II)Ljava/lang/String;\n+  #194 = NameAndType        #195:#196     // substring:(II)Ljava/lang/String;\n+  #195 = Utf8               substring\n+  #196 = Utf8               (II)Ljava/lang/String;\n+  #197 = Methodref          #139.#198     // java/lang/String.substring:(I)Ljava/lang/String;\n+  #198 = NameAndType        #195:#199     // substring:(I)Ljava/lang/String;\n+  #199 = Utf8               (I)Ljava/lang/String;\n+  #200 = Methodref          #8.#201       // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+  #201 = NameAndType        #202:#203     // getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+  #202 = Utf8               getMantissa\n+  #203 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #204 = Methodref          #8.#205       // org/apache/commons/lang3/math/NumberUtils.getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+  #205 = NameAndType        #202:#206     // getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+  #206 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #207 = Methodref          #208.#209     // java/lang/Character.isDigit:(C)Z\n+  #208 = Class              #210          // java/lang/Character\n+  #209 = NameAndType        #211:#212     // isDigit:(C)Z\n+  #210 = Utf8               java/lang/Character\n+  #211 = Utf8               isDigit\n+  #212 = Utf8               (C)Z\n+  #213 = Methodref          #8.#214       // org/apache/commons/lang3/math/NumberUtils.isAllZeros:(Ljava/lang/String;)Z\n+  #214 = NameAndType        #215:#159     // isAllZeros:(Ljava/lang/String;)Z\n+  #215 = Utf8               isAllZeros\n+  #216 = Methodref          #139.#217     // java/lang/String.isEmpty:()Z\n+  #217 = NameAndType        #218:#219     // isEmpty:()Z\n+  #218 = Utf8               isEmpty\n+  #219 = Utf8               ()Z\n+  #220 = Methodref          #8.#221       // org/apache/commons/lang3/math/NumberUtils.isDigits:(Ljava/lang/String;)Z\n+  #221 = NameAndType        #222:#159     // isDigits:(Ljava/lang/String;)Z\n+  #222 = Utf8               isDigits\n+  #223 = Methodref          #8.#224       // org/apache/commons/lang3/math/NumberUtils.createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+  #224 = NameAndType        #225:#226     // createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+  #225 = Utf8               createFloat\n+  #226 = Utf8               (Ljava/lang/String;)Ljava/lang/Float;\n+  #227 = Methodref          #36.#228      // java/lang/Float.isInfinite:()Z\n+  #228 = NameAndType        #229:#219     // isInfinite:()Z\n+  #229 = Utf8               isInfinite\n+  #230 = Methodref          #8.#231       // org/apache/commons/lang3/math/NumberUtils.createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+  #231 = NameAndType        #232:#233     // createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+  #232 = Utf8               createDouble\n+  #233 = Utf8               (Ljava/lang/String;)Ljava/lang/Double;\n+  #234 = Methodref          #46.#228      // java/lang/Double.isInfinite:()Z\n+  #235 = Methodref          #36.#190      // java/lang/Float.toString:()Ljava/lang/String;\n+  #236 = Methodref          #46.#190      // java/lang/Double.toString:()Ljava/lang/String;\n+  #237 = Methodref          #139.#238     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #238 = NameAndType        #239:#240     // equals:(Ljava/lang/Object;)Z\n+  #239 = Utf8               equals\n+  #240 = Utf8               (Ljava/lang/Object;)Z\n+  #241 = Methodref          #55.#242      // java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n+  #242 = NameAndType        #243:#244     // compareTo:(Ljava/math/BigDecimal;)I\n+  #243 = Utf8               compareTo\n+  #244 = Utf8               (Ljava/math/BigDecimal;)I\n+  #245 = Methodref          #36.#246      // java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+  #246 = NameAndType        #115:#226     // valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+  #247 = Methodref          #46.#248      // java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+  #248 = NameAndType        #115:#233     // valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+  #249 = Methodref          #14.#250      // java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #250 = NameAndType        #251:#175     // decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+  #251 = Utf8               decode\n+  #252 = Methodref          #26.#253      // java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n+  #253 = NameAndType        #251:#171     // decode:(Ljava/lang/String;)Ljava/lang/Long;\n+  #254 = String             #255          // -\n+  #255 = Utf8               -\n+  #256 = Methodref          #139.#257     // java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+  #257 = NameAndType        #158:#258     // startsWith:(Ljava/lang/String;I)Z\n+  #258 = Utf8               (Ljava/lang/String;I)Z\n+  #259 = String             #260          // 0\n+  #260 = Utf8               0\n+  #261 = Class              #262          // java/math/BigInteger\n+  #262 = Utf8               java/math/BigInteger\n+  #263 = Methodref          #261.#264     // java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+  #264 = NameAndType        #5:#265       // \"<init>\":(Ljava/lang/String;I)V\n+  #265 = Utf8               (Ljava/lang/String;I)V\n+  #266 = Methodref          #261.#267     // java/math/BigInteger.negate:()Ljava/math/BigInteger;\n+  #267 = NameAndType        #268:#269     // negate:()Ljava/math/BigInteger;\n+  #268 = Utf8               negate\n+  #269 = Utf8               ()Ljava/math/BigInteger;\n+  #270 = Methodref          #55.#137      // java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+  #271 = Methodref          #8.#272       // org/apache/commons/lang3/math/NumberUtils.validateArray:(Ljava/lang/Object;)V\n+  #272 = NameAndType        #273:#274     // validateArray:(Ljava/lang/Object;)V\n+  #273 = Utf8               validateArray\n+  #274 = Utf8               (Ljava/lang/Object;)V\n+  #275 = Methodref          #46.#276      // java/lang/Double.isNaN:(D)Z\n+  #276 = NameAndType        #277:#278     // isNaN:(D)Z\n+  #277 = Utf8               isNaN\n+  #278 = Utf8               (D)Z\n+  #279 = Double             NaNd\n+  #281 = Methodref          #36.#282      // java/lang/Float.isNaN:(F)Z\n+  #282 = NameAndType        #277:#283     // isNaN:(F)Z\n+  #283 = Utf8               (F)Z\n+  #284 = Float              NaNf\n+  #285 = String             #286          // array\n+  #286 = Utf8               array\n+  #287 = Methodref          #288.#289     // org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #288 = Class              #290          // org/apache/commons/lang3/Validate\n+  #289 = NameAndType        #291:#292     // notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #290 = Utf8               org/apache/commons/lang3/Validate\n+  #291 = Utf8               notNull\n+  #292 = Utf8               (Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+  #293 = Methodref          #294.#295     // java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n+  #294 = Class              #296          // java/lang/reflect/Array\n+  #295 = NameAndType        #297:#298     // getLength:(Ljava/lang/Object;)I\n+  #296 = Utf8               java/lang/reflect/Array\n+  #297 = Utf8               getLength\n+  #298 = Utf8               (Ljava/lang/Object;)I\n+  #299 = String             #300          // Array cannot be empty.\n+  #300 = Utf8               Array cannot be empty.\n+  #301 = Methodref          #288.#302     // org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #302 = NameAndType        #303:#304     // isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #303 = Utf8               isTrue\n+  #304 = Utf8               (ZLjava/lang/String;[Ljava/lang/Object;)V\n+  #305 = Methodref          #306.#307     // java/lang/Math.min:(DD)D\n+  #306 = Class              #308          // java/lang/Math\n+  #307 = NameAndType        #309:#310     // min:(DD)D\n+  #308 = Utf8               java/lang/Math\n+  #309 = Utf8               min\n+  #310 = Utf8               (DD)D\n+  #311 = Methodref          #306.#312     // java/lang/Math.min:(FF)F\n+  #312 = NameAndType        #309:#313     // min:(FF)F\n+  #313 = Utf8               (FF)F\n+  #314 = Methodref          #306.#315     // java/lang/Math.max:(DD)D\n+  #315 = NameAndType        #316:#310     // max:(DD)D\n+  #316 = Utf8               max\n+  #317 = Methodref          #306.#318     // java/lang/Math.max:(FF)F\n+  #318 = NameAndType        #316:#313     // max:(FF)F\n+  #319 = Methodref          #129.#320     // org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+  #320 = NameAndType        #321:#133     // isNumeric:(Ljava/lang/CharSequence;)Z\n+  #321 = Utf8               isNumeric\n+  #322 = Methodref          #8.#323       // org/apache/commons/lang3/math/NumberUtils.isCreatable:(Ljava/lang/String;)Z\n+  #323 = NameAndType        #324:#159     // isCreatable:(Ljava/lang/String;)Z\n+  #324 = Utf8               isCreatable\n+  #325 = Methodref          #129.#326     // org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+  #326 = NameAndType        #218:#133     // isEmpty:(Ljava/lang/CharSequence;)Z\n+  #327 = Methodref          #139.#328     // java/lang/String.toCharArray:()[C\n+  #328 = NameAndType        #329:#330     // toCharArray:()[C\n+  #329 = Utf8               toCharArray\n+  #330 = Utf8               ()[C\n+  #331 = Methodref          #129.#332     // org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n+  #332 = NameAndType        #333:#334     // contains:(Ljava/lang/CharSequence;I)Z\n+  #333 = Utf8               contains\n+  #334 = Utf8               (Ljava/lang/CharSequence;I)Z\n+  #335 = Methodref          #8.#336       // org/apache/commons/lang3/math/NumberUtils.withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #336 = NameAndType        #337:#258     // withDecimalsParsing:(Ljava/lang/String;I)Z\n+  #337 = Utf8               withDecimalsParsing\n+  #338 = Methodref          #26.#339      // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+  #339 = NameAndType        #115:#340     // valueOf:(J)Ljava/lang/Long;\n+  #340 = Utf8               (J)Ljava/lang/Long;\n+  #341 = Fieldref           #8.#342       // org/apache/commons/lang3/math/NumberUtils.LONG_ZERO:Ljava/lang/Long;\n+  #342 = NameAndType        #343:#344     // LONG_ZERO:Ljava/lang/Long;\n+  #343 = Utf8               LONG_ZERO\n+  #344 = Utf8               Ljava/lang/Long;\n+  #345 = Fieldref           #8.#346       // org/apache/commons/lang3/math/NumberUtils.LONG_ONE:Ljava/lang/Long;\n+  #346 = NameAndType        #347:#344     // LONG_ONE:Ljava/lang/Long;\n+  #347 = Utf8               LONG_ONE\n+  #348 = Long               -1l\n+  #350 = Fieldref           #8.#351       // org/apache/commons/lang3/math/NumberUtils.LONG_MINUS_ONE:Ljava/lang/Long;\n+  #351 = NameAndType        #352:#344     // LONG_MINUS_ONE:Ljava/lang/Long;\n+  #352 = Utf8               LONG_MINUS_ONE\n+  #353 = Methodref          #14.#354      // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #354 = NameAndType        #115:#355     // valueOf:(I)Ljava/lang/Integer;\n+  #355 = Utf8               (I)Ljava/lang/Integer;\n+  #356 = Fieldref           #8.#357       // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n+  #357 = NameAndType        #358:#83      // INTEGER_ZERO:Ljava/lang/Integer;\n+  #358 = Utf8               INTEGER_ZERO\n+  #359 = Fieldref           #8.#360       // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n+  #360 = NameAndType        #361:#83      // INTEGER_ONE:Ljava/lang/Integer;\n+  #361 = Utf8               INTEGER_ONE\n+  #362 = Fieldref           #8.#363       // org/apache/commons/lang3/math/NumberUtils.INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #363 = NameAndType        #364:#83      // INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+  #364 = Utf8               INTEGER_MINUS_ONE\n+  #365 = Methodref          #75.#366      // java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+  #366 = NameAndType        #115:#367     // valueOf:(S)Ljava/lang/Short;\n+  #367 = Utf8               (S)Ljava/lang/Short;\n+  #368 = Fieldref           #8.#369       // org/apache/commons/lang3/math/NumberUtils.SHORT_ZERO:Ljava/lang/Short;\n+  #369 = NameAndType        #370:#371     // SHORT_ZERO:Ljava/lang/Short;\n+  #370 = Utf8               SHORT_ZERO\n+  #371 = Utf8               Ljava/lang/Short;\n+  #372 = Fieldref           #8.#373       // org/apache/commons/lang3/math/NumberUtils.SHORT_ONE:Ljava/lang/Short;\n+  #373 = NameAndType        #374:#371     // SHORT_ONE:Ljava/lang/Short;\n+  #374 = Utf8               SHORT_ONE\n+  #375 = Fieldref           #8.#376       // org/apache/commons/lang3/math/NumberUtils.SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #376 = NameAndType        #377:#371     // SHORT_MINUS_ONE:Ljava/lang/Short;\n+  #377 = Utf8               SHORT_MINUS_ONE\n+  #378 = Methodref          #65.#379      // java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+  #379 = NameAndType        #115:#380     // valueOf:(B)Ljava/lang/Byte;\n+  #380 = Utf8               (B)Ljava/lang/Byte;\n+  #381 = Fieldref           #8.#382       // org/apache/commons/lang3/math/NumberUtils.BYTE_ZERO:Ljava/lang/Byte;\n+  #382 = NameAndType        #383:#384     // BYTE_ZERO:Ljava/lang/Byte;\n+  #383 = Utf8               BYTE_ZERO\n+  #384 = Utf8               Ljava/lang/Byte;\n+  #385 = Fieldref           #8.#386       // org/apache/commons/lang3/math/NumberUtils.BYTE_ONE:Ljava/lang/Byte;\n+  #386 = NameAndType        #387:#384     // BYTE_ONE:Ljava/lang/Byte;\n+  #387 = Utf8               BYTE_ONE\n+  #388 = Fieldref           #8.#389       // org/apache/commons/lang3/math/NumberUtils.BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #389 = NameAndType        #390:#384     // BYTE_MINUS_ONE:Ljava/lang/Byte;\n+  #390 = Utf8               BYTE_MINUS_ONE\n+  #391 = Methodref          #46.#392      // java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+  #392 = NameAndType        #115:#393     // valueOf:(D)Ljava/lang/Double;\n+  #393 = Utf8               (D)Ljava/lang/Double;\n+  #394 = Fieldref           #8.#395       // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ZERO:Ljava/lang/Double;\n+  #395 = NameAndType        #396:#397     // DOUBLE_ZERO:Ljava/lang/Double;\n+  #396 = Utf8               DOUBLE_ZERO\n+  #397 = Utf8               Ljava/lang/Double;\n+  #398 = Fieldref           #8.#399       // org/apache/commons/lang3/math/NumberUtils.DOUBLE_ONE:Ljava/lang/Double;\n+  #399 = NameAndType        #400:#397     // DOUBLE_ONE:Ljava/lang/Double;\n+  #400 = Utf8               DOUBLE_ONE\n+  #401 = Double             -1.0d\n+  #403 = Fieldref           #8.#404       // org/apache/commons/lang3/math/NumberUtils.DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #404 = NameAndType        #405:#397     // DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+  #405 = Utf8               DOUBLE_MINUS_ONE\n+  #406 = Methodref          #36.#407      // java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+  #407 = NameAndType        #115:#408     // valueOf:(F)Ljava/lang/Float;\n+  #408 = Utf8               (F)Ljava/lang/Float;\n+  #409 = Fieldref           #8.#410       // org/apache/commons/lang3/math/NumberUtils.FLOAT_ZERO:Ljava/lang/Float;\n+  #410 = NameAndType        #411:#412     // FLOAT_ZERO:Ljava/lang/Float;\n+  #411 = Utf8               FLOAT_ZERO\n+  #412 = Utf8               Ljava/lang/Float;\n+  #413 = Fieldref           #8.#414       // org/apache/commons/lang3/math/NumberUtils.FLOAT_ONE:Ljava/lang/Float;\n+  #414 = NameAndType        #415:#412     // FLOAT_ONE:Ljava/lang/Float;\n+  #415 = Utf8               FLOAT_ONE\n+  #416 = Float              -1.0f\n+  #417 = Fieldref           #8.#418       // org/apache/commons/lang3/math/NumberUtils.FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #418 = NameAndType        #419:#412     // FLOAT_MINUS_ONE:Ljava/lang/Float;\n+  #419 = Utf8               FLOAT_MINUS_ONE\n+  #420 = Long               2147483647l\n+  #422 = Fieldref           #8.#423       // org/apache/commons/lang3/math/NumberUtils.LONG_INT_MAX_VALUE:Ljava/lang/Long;\n+  #423 = NameAndType        #424:#344     // LONG_INT_MAX_VALUE:Ljava/lang/Long;\n+  #424 = Utf8               LONG_INT_MAX_VALUE\n+  #425 = Long               -2147483648l\n+  #427 = Fieldref           #8.#428       // org/apache/commons/lang3/math/NumberUtils.LONG_INT_MIN_VALUE:Ljava/lang/Long;\n+  #428 = NameAndType        #429:#344     // LONG_INT_MIN_VALUE:Ljava/lang/Long;\n+  #429 = Utf8               LONG_INT_MIN_VALUE\n+  #430 = Utf8               Code\n+  #431 = Utf8               LineNumberTable\n+  #432 = Utf8               LocalVariableTable\n+  #433 = Utf8               this\n+  #434 = Utf8               Lorg/apache/commons/lang3/math/NumberUtils;\n+  #435 = Utf8               str\n+  #436 = Utf8               Ljava/lang/String;\n+  #437 = Utf8               nfe\n+  #438 = Utf8               Ljava/lang/NumberFormatException;\n+  #439 = Utf8               defaultValue\n+  #440 = Utf8               I\n+  #441 = Utf8               StackMapTable\n+  #442 = Utf8               J\n+  #443 = Utf8               F\n+  #444 = Utf8               D\n+  #445 = Utf8               (Ljava/math/BigDecimal;)D\n+  #446 = Utf8               value\n+  #447 = Utf8               B\n+  #448 = Utf8               S\n+  #449 = Utf8               (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n+  #450 = Utf8               scale\n+  #451 = Utf8               roundingMode\n+  #452 = Utf8               (Ljava/lang/Float;)Ljava/math/BigDecimal;\n+  #453 = Utf8               (Ljava/lang/Double;)Ljava/math/BigDecimal;\n+  #454 = Utf8               createNumber\n+  #455 = Utf8               (Ljava/lang/String;)Ljava/lang/Number;\n+  #456 = Utf8               pfx\n+  #457 = Utf8               i\n+  #458 = Utf8               firstSigDigit\n+  #459 = Utf8               C\n+  #460 = Utf8               hexDigits\n+  #461 = Utf8               dec\n+  #462 = Utf8               mant\n+  #463 = Utf8               exp\n+  #464 = Utf8               f\n+  #465 = Utf8               d\n+  #466 = Utf8               numeric\n+  #467 = Utf8               allZeros\n+  #468 = Utf8               Z\n+  #469 = Utf8               b\n+  #470 = Utf8               hex_prefixes\n+  #471 = Utf8               [Ljava/lang/String;\n+  #472 = Utf8               pfxLen\n+  #473 = Utf8               lastChar\n+  #474 = Utf8               decPos\n+  #475 = Utf8               expPos\n+  #476 = Class              #471          // \"[Ljava/lang/String;\"\n+  #477 = Utf8               stopPos\n+  #478 = Utf8               firstChar\n+  #479 = Utf8               hasSign\n+  #480 = Utf8               pos\n+  #481 = Utf8               radix\n+  #482 = Utf8               Ljava/math/BigInteger;\n+  #483 = Utf8               ([J)J\n+  #484 = Utf8               [J\n+  #485 = Utf8               ([I)I\n+  #486 = Utf8               j\n+  #487 = Utf8               [I\n+  #488 = Utf8               ([S)S\n+  #489 = Utf8               [S\n+  #490 = Utf8               ([B)B\n+  #491 = Utf8               [B\n+  #492 = Utf8               ([D)D\n+  #493 = Utf8               [D\n+  #494 = Utf8               ([F)F\n+  #495 = Utf8               [F\n+  #496 = Utf8               Ljava/lang/Object;\n+  #497 = Utf8               (JJJ)J\n+  #498 = Utf8               a\n+  #499 = Utf8               c\n+  #500 = Utf8               (III)I\n+  #501 = Utf8               (SSS)S\n+  #502 = Utf8               (BBB)B\n+  #503 = Utf8               (DDD)D\n+  #504 = Utf8               (FFF)F\n+  #505 = Utf8               isNumber\n+  #506 = Utf8               Deprecated\n+  #507 = Utf8               RuntimeVisibleAnnotations\n+  #508 = Utf8               Ljava/lang/Deprecated;\n+  #509 = Utf8               chars\n+  #510 = Utf8               [C\n+  #511 = Utf8               sz\n+  #512 = Utf8               hasExp\n+  #513 = Utf8               hasDecPoint\n+  #514 = Utf8               allowSigns\n+  #515 = Utf8               foundDigit\n+  #516 = Utf8               start\n+  #517 = Class              #510          // \"[C\"\n+  #518 = Utf8               isParsable\n+  #519 = Utf8               isDecimalPoint\n+  #520 = Utf8               beginIdx\n+  #521 = Utf8               decimalPoints\n+  #522 = Utf8               compare\n+  #523 = Utf8               (II)I\n+  #524 = Utf8               x\n+  #525 = Utf8               y\n+  #526 = Utf8               (JJ)I\n+  #527 = Utf8               (SS)I\n+  #528 = Utf8               (BB)I\n+  #529 = Utf8               <clinit>\n+  #530 = Utf8               SourceFile\n+  #531 = Utf8               NumberUtils.java\n {\n   public static final java.lang.Long LONG_ZERO;\n     descriptor: Ljava/lang/Long;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final java.lang.Long LONG_ONE;\n     descriptor: Ljava/lang/Long;\n@@ -637,15 +637,15 @@\n   public static int toInt(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #2                  // Method toInt:(Ljava/lang/String;I)I\n+         2: invokestatic  #7                  // Method toInt:(Ljava/lang/String;I)I\n          5: ireturn\n       LineNumberTable:\n         line 117: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0   str   Ljava/lang/String;\n \n@@ -655,15 +655,15 @@\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #3                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+         7: invokestatic  #13                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         10: ireturn\n         11: astore_2\n         12: iload_1\n         13: ireturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -686,15 +686,15 @@\n   public static long toLong(java.lang.String);\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n-         2: invokestatic  #5                  // Method toLong:(Ljava/lang/String;J)J\n+         2: invokestatic  #21                 // Method toLong:(Ljava/lang/String;J)J\n          5: lreturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0   str   Ljava/lang/String;\n \n@@ -704,15 +704,15 @@\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: lload_1\n          5: lreturn\n          6: aload_0\n-         7: invokestatic  #6                  // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n+         7: invokestatic  #25                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J\n         10: lreturn\n         11: astore_3\n         12: lload_1\n         13: lreturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -735,15 +735,15 @@\n   public static float toFloat(java.lang.String);\n     descriptor: (Ljava/lang/String;)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: fconst_0\n-         2: invokestatic  #7                  // Method toFloat:(Ljava/lang/String;F)F\n+         2: invokestatic  #31                 // Method toFloat:(Ljava/lang/String;F)F\n          5: freturn\n       LineNumberTable:\n         line 216: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0   str   Ljava/lang/String;\n \n@@ -753,15 +753,15 @@\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: fload_1\n          5: freturn\n          6: aload_0\n-         7: invokestatic  #8                  // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n+         7: invokestatic  #35                 // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F\n         10: freturn\n         11: astore_2\n         12: fload_1\n         13: freturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -784,15 +784,15 @@\n   public static double toDouble(java.lang.String);\n     descriptor: (Ljava/lang/String;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dconst_0\n-         2: invokestatic  #9                  // Method toDouble:(Ljava/lang/String;D)D\n+         2: invokestatic  #41                 // Method toDouble:(Ljava/lang/String;D)D\n          5: dreturn\n       LineNumberTable:\n         line 268: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0   str   Ljava/lang/String;\n \n@@ -802,15 +802,15 @@\n     Code:\n       stack=2, locals=4, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: dload_1\n          5: dreturn\n          6: aload_0\n-         7: invokestatic  #10                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n+         7: invokestatic  #45                 // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D\n         10: dreturn\n         11: astore_3\n         12: dload_1\n         13: dreturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -833,15 +833,15 @@\n   public static double toDouble(java.math.BigDecimal);\n     descriptor: (Ljava/math/BigDecimal;)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dconst_0\n-         2: invokestatic  #11                 // Method toDouble:(Ljava/math/BigDecimal;D)D\n+         2: invokestatic  #51                 // Method toDouble:(Ljava/math/BigDecimal;D)D\n          5: dreturn\n       LineNumberTable:\n         line 318: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 value   Ljava/math/BigDecimal;\n \n@@ -851,15 +851,15 @@\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     8\n          4: dload_1\n          5: goto          12\n          8: aload_0\n-         9: invokevirtual #12                 // Method java/math/BigDecimal.doubleValue:()D\n+         9: invokevirtual #54                 // Method java/math/BigDecimal.doubleValue:()D\n         12: dreturn\n       LineNumberTable:\n         line 339: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 value   Ljava/math/BigDecimal;\n             0      13     1 defaultValue   D\n@@ -871,15 +871,15 @@\n   public static byte toByte(java.lang.String);\n     descriptor: (Ljava/lang/String;)B\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #13                 // Method toByte:(Ljava/lang/String;B)B\n+         2: invokestatic  #60                 // Method toByte:(Ljava/lang/String;B)B\n          5: ireturn\n       LineNumberTable:\n         line 361: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0   str   Ljava/lang/String;\n \n@@ -889,15 +889,15 @@\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #14                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B\n+         7: invokestatic  #64                 // Method java/lang/Byte.parseByte:(Ljava/lang/String;)B\n         10: ireturn\n         11: astore_2\n         12: iload_1\n         13: ireturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -920,15 +920,15 @@\n   public static short toShort(java.lang.String);\n     descriptor: (Ljava/lang/String;)S\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #15                 // Method toShort:(Ljava/lang/String;S)S\n+         2: invokestatic  #70                 // Method toShort:(Ljava/lang/String;S)S\n          5: ireturn\n       LineNumberTable:\n         line 410: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0   str   Ljava/lang/String;\n \n@@ -938,15 +938,15 @@\n     Code:\n       stack=1, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iload_1\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #16                 // Method java/lang/Short.parseShort:(Ljava/lang/String;)S\n+         7: invokestatic  #74                 // Method java/lang/Short.parseShort:(Ljava/lang/String;)S\n         10: ireturn\n         11: astore_2\n         12: iload_1\n         13: ireturn\n       Exception table:\n          from    to  target type\n              6    10    11   Class java/lang/NumberFormatException\n@@ -968,42 +968,42 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal);\n     descriptor: (Ljava/math/BigDecimal;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 454: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 value   Ljava/math/BigDecimal;\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.math.BigDecimal, int, java.math.RoundingMode);\n     descriptor: (Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n          9: iload_1\n         10: aload_2\n         11: ifnonnull     20\n-        14: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        14: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n         17: goto          21\n         20: aload_2\n-        21: invokevirtual #22                 // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        21: invokevirtual #102                // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         24: areturn\n       LineNumberTable:\n         line 470: 0\n         line 471: 4\n         line 473: 8\n         line 475: 10\n         line 473: 21\n@@ -1025,41 +1025,41 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float);\n     descriptor: (Ljava/lang/Float;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #23                 // Method toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #106                // Method toScaledBigDecimal:(Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 492: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 value   Ljava/lang/Float;\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Float, int, java.math.RoundingMode);\n     descriptor: (Ljava/lang/Float;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n-         9: invokevirtual #24                 // Method java/lang/Float.floatValue:()F\n+         9: invokevirtual #109                // Method java/lang/Float.floatValue:()F\n         12: f2d\n-        13: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+        13: invokestatic  #113                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n         16: iload_1\n         17: aload_2\n-        18: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        18: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         21: areturn\n       LineNumberTable:\n         line 508: 0\n         line 509: 4\n         line 511: 8\n         line 512: 9\n         line 511: 18\n@@ -1073,40 +1073,40 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double);\n     descriptor: (Ljava/lang/Double;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #26                 // Method toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #117                // Method toScaledBigDecimal:(Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 531: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 value   Ljava/lang/Double;\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.Double, int, java.math.RoundingMode);\n     descriptor: (Ljava/lang/Double;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n-         9: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n-        12: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+         9: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n+        12: invokestatic  #113                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n         15: iload_1\n         16: aload_2\n-        17: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        17: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         20: areturn\n       LineNumberTable:\n         line 547: 0\n         line 548: 4\n         line 550: 8\n         line 551: 9\n         line 550: 17\n@@ -1120,39 +1120,39 @@\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n-         4: invokevirtual #18                 // Method java/lang/Integer.intValue:()I\n-         7: getstatic     #19                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n-        10: invokestatic  #28                 // Method toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+         1: getstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+         4: invokevirtual #84                 // Method java/lang/Integer.intValue:()I\n+         7: getstatic     #88                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;\n+        10: invokestatic  #121                // Method toScaledBigDecimal:(Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         13: areturn\n       LineNumberTable:\n         line 570: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 value   Ljava/lang/String;\n \n   public static java.math.BigDecimal toScaledBigDecimal(java.lang.String, int, java.math.RoundingMode);\n     descriptor: (Ljava/lang/String;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #21                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n+         4: getstatic     #98                 // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;\n          7: areturn\n          8: aload_0\n-         9: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+         9: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n         12: iload_1\n         13: aload_2\n-        14: invokestatic  #20                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n+        14: invokestatic  #94                 // Method toScaledBigDecimal:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;\n         17: areturn\n       LineNumberTable:\n         line 586: 0\n         line 587: 4\n         line 589: 8\n         line 590: 9\n         line 589: 14\n@@ -1170,50 +1170,50 @@\n     Code:\n       stack=4, locals=14, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #30                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+         7: invokestatic  #128                // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         10: ifeq          23\n-        13: new           #4                  // class java/lang/NumberFormatException\n+        13: new           #19                 // class java/lang/NumberFormatException\n         16: dup\n-        17: ldc           #31                 // String A blank string is not a valid number\n-        19: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #134                // String A blank string is not a valid number\n+        19: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n         23: bipush        6\n-        25: anewarray     #33                 // class java/lang/String\n+        25: anewarray     #139                // class java/lang/String\n         28: dup\n         29: iconst_0\n-        30: ldc           #34                 // String 0x\n+        30: ldc           #141                // String 0x\n         32: aastore\n         33: dup\n         34: iconst_1\n-        35: ldc           #35                 // String 0X\n+        35: ldc           #143                // String 0X\n         37: aastore\n         38: dup\n         39: iconst_2\n-        40: ldc           #36                 // String -0x\n+        40: ldc           #145                // String -0x\n         42: aastore\n         43: dup\n         44: iconst_3\n-        45: ldc           #37                 // String -0X\n+        45: ldc           #147                // String -0X\n         47: aastore\n         48: dup\n         49: iconst_4\n-        50: ldc           #38                 // String #\n+        50: ldc           #149                // String #\n         52: aastore\n         53: dup\n         54: iconst_5\n-        55: ldc           #39                 // String -#\n+        55: ldc           #151                // String -#\n         57: aastore\n         58: astore_1\n         59: aload_0\n-        60: invokevirtual #40                 // Method java/lang/String.length:()I\n+        60: invokevirtual #153                // Method java/lang/String.length:()I\n         63: istore_2\n         64: iconst_0\n         65: istore_3\n         66: aload_1\n         67: astore        4\n         69: aload         4\n         71: arraylength\n@@ -1225,19 +1225,19 @@\n         81: if_icmpge     117\n         84: aload         4\n         86: iload         6\n         88: aaload\n         89: astore        7\n         91: aload_0\n         92: aload         7\n-        94: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        94: invokevirtual #156                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         97: ifeq          111\n        100: iload_3\n        101: aload         7\n-       103: invokevirtual #40                 // Method java/lang/String.length:()I\n+       103: invokevirtual #153                // Method java/lang/String.length:()I\n        106: iadd\n        107: istore_3\n        108: goto          117\n        111: iinc          6, 1\n        114: goto          77\n        117: iload_3\n        118: ifle          219\n@@ -1246,15 +1246,15 @@\n        124: iload_3\n        125: istore        5\n        127: iload         5\n        129: iload_2\n        130: if_icmpge     157\n        133: aload_0\n        134: iload         5\n-       136: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+       136: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n        139: istore        4\n        141: iload         4\n        143: bipush        48\n        145: if_icmpne     157\n        148: iinc          3, 1\n        151: iinc          5, 1\n        154: goto          127\n@@ -1268,47 +1268,47 @@\n        169: iload         5\n        171: bipush        16\n        173: if_icmpne     188\n        176: iload         4\n        178: bipush        55\n        180: if_icmple     188\n        183: aload_0\n-       184: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+       184: invokestatic  #164                // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n        187: areturn\n        188: iload         5\n        190: bipush        8\n        192: if_icmpgt     209\n        195: iload         5\n        197: bipush        8\n        199: if_icmpne     214\n        202: iload         4\n        204: bipush        55\n        206: if_icmple     214\n        209: aload_0\n-       210: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+       210: invokestatic  #168                // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n        213: areturn\n        214: aload_0\n-       215: invokestatic  #45                 // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+       215: invokestatic  #172                // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n        218: areturn\n        219: aload_0\n        220: iload_2\n        221: iconst_1\n        222: isub\n-       223: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+       223: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n        226: istore        4\n        228: aload_0\n        229: bipush        46\n-       231: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I\n+       231: invokevirtual #176                // Method java/lang/String.indexOf:(I)I\n        234: istore        8\n        236: aload_0\n        237: bipush        101\n-       239: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I\n+       239: invokevirtual #176                // Method java/lang/String.indexOf:(I)I\n        242: aload_0\n        243: bipush        69\n-       245: invokevirtual #46                 // Method java/lang/String.indexOf:(I)I\n+       245: invokevirtual #176                // Method java/lang/String.indexOf:(I)I\n        248: iadd\n        249: iconst_1\n        250: iadd\n        251: istore        9\n        253: iload         8\n        255: iconst_m1\n        256: if_icmple     341\n@@ -1317,75 +1317,75 @@\n        262: if_icmple     320\n        265: iload         9\n        267: iload         8\n        269: if_icmplt     278\n        272: iload         9\n        274: iload_2\n        275: if_icmple     305\n-       278: new           #4                  // class java/lang/NumberFormatException\n+       278: new           #19                 // class java/lang/NumberFormatException\n        281: dup\n-       282: new           #47                 // class java/lang/StringBuilder\n+       282: new           #180                // class java/lang/StringBuilder\n        285: dup\n-       286: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       286: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        289: aload_0\n-       290: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       293: ldc           #50                 // String  is not a valid number.\n-       295: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       298: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       301: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       290: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       293: ldc           #187                // String  is not a valid number.\n+       295: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       298: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       301: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        304: athrow\n        305: aload_0\n        306: iload         8\n        308: iconst_1\n        309: iadd\n        310: iload         9\n-       312: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       312: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        315: astore        6\n        317: goto          330\n        320: aload_0\n        321: iload         8\n        323: iconst_1\n        324: iadd\n-       325: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       325: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n        328: astore        6\n        330: aload_0\n        331: iload         8\n-       333: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+       333: invokestatic  #200                // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n        336: astore        5\n        338: goto          400\n        341: iload         9\n        343: iconst_m1\n        344: if_icmple     391\n        347: iload         9\n        349: iload_2\n        350: if_icmple     380\n-       353: new           #4                  // class java/lang/NumberFormatException\n+       353: new           #19                 // class java/lang/NumberFormatException\n        356: dup\n-       357: new           #47                 // class java/lang/StringBuilder\n+       357: new           #180                // class java/lang/StringBuilder\n        360: dup\n-       361: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       361: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        364: aload_0\n-       365: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       368: ldc           #50                 // String  is not a valid number.\n-       370: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       373: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       376: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       365: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       368: ldc           #187                // String  is not a valid number.\n+       370: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       373: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       376: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        379: athrow\n        380: aload_0\n        381: iload         9\n-       383: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+       383: invokestatic  #200                // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n        386: astore        5\n        388: goto          397\n        391: aload_0\n-       392: invokestatic  #55                 // Method getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n+       392: invokestatic  #204                // Method getMantissa:(Ljava/lang/String;)Ljava/lang/String;\n        395: astore        5\n        397: aconst_null\n        398: astore        6\n        400: iload         4\n-       402: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z\n+       402: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z\n        405: ifne          739\n        408: iload         4\n        410: bipush        46\n        412: if_icmpeq     739\n        415: iload         9\n        417: iconst_m1\n        418: if_icmple     445\n@@ -1397,31 +1397,31 @@\n        429: aload_0\n        430: iload         9\n        432: iconst_1\n        433: iadd\n        434: iload_2\n        435: iconst_1\n        436: isub\n-       437: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       437: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        440: astore        7\n        442: goto          448\n        445: aconst_null\n        446: astore        7\n        448: aload_0\n        449: iconst_0\n        450: iload_2\n        451: iconst_1\n        452: isub\n-       453: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       453: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        456: astore        10\n        458: aload         5\n-       460: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       460: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        463: ifeq          478\n        466: aload         7\n-       468: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       468: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        471: ifeq          478\n        474: iconst_1\n        475: goto          479\n        478: iconst_0\n        479: istore        11\n        481: iload         4\n        483: lookupswitch  { // 6\n@@ -1434,191 +1434,191 @@\n                  default: 712\n             }\n        540: aload         6\n        542: ifnonnull     603\n        545: aload         7\n        547: ifnonnull     603\n        550: aload         10\n-       552: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z\n+       552: invokevirtual #216                // Method java/lang/String.isEmpty:()Z\n        555: ifne          581\n        558: aload         10\n        560: iconst_0\n-       561: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+       561: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n        564: bipush        45\n        566: if_icmpne     581\n        569: aload         10\n        571: iconst_1\n-       572: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       575: invokestatic  #59                 // Method isDigits:(Ljava/lang/String;)Z\n+       572: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       575: invokestatic  #220                // Method isDigits:(Ljava/lang/String;)Z\n        578: ifne          589\n        581: aload         10\n-       583: invokestatic  #59                 // Method isDigits:(Ljava/lang/String;)Z\n+       583: invokestatic  #220                // Method isDigits:(Ljava/lang/String;)Z\n        586: ifeq          603\n        589: aload         10\n-       591: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+       591: invokestatic  #168                // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n        594: areturn\n        595: astore        12\n        597: aload         10\n-       599: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+       599: invokestatic  #164                // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n        602: areturn\n-       603: new           #4                  // class java/lang/NumberFormatException\n+       603: new           #19                 // class java/lang/NumberFormatException\n        606: dup\n-       607: new           #47                 // class java/lang/StringBuilder\n+       607: new           #180                // class java/lang/StringBuilder\n        610: dup\n-       611: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       611: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        614: aload_0\n-       615: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       618: ldc           #50                 // String  is not a valid number.\n-       620: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       623: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       626: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       615: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       618: ldc           #187                // String  is not a valid number.\n+       620: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       623: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       626: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        629: athrow\n        630: aload_0\n-       631: invokestatic  #60                 // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+       631: invokestatic  #223                // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n        634: astore        12\n        636: aload         12\n-       638: invokevirtual #61                 // Method java/lang/Float.isInfinite:()Z\n+       638: invokevirtual #227                // Method java/lang/Float.isInfinite:()Z\n        641: ifne          662\n        644: aload         12\n-       646: invokevirtual #24                 // Method java/lang/Float.floatValue:()F\n+       646: invokevirtual #109                // Method java/lang/Float.floatValue:()F\n        649: fconst_0\n        650: fcmpl\n        651: ifne          659\n        654: iload         11\n        656: ifeq          662\n        659: aload         12\n        661: areturn\n        662: goto          667\n        665: astore        12\n        667: aload_0\n-       668: invokestatic  #62                 // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+       668: invokestatic  #230                // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n        671: astore        12\n        673: aload         12\n-       675: invokevirtual #63                 // Method java/lang/Double.isInfinite:()Z\n+       675: invokevirtual #234                // Method java/lang/Double.isInfinite:()Z\n        678: ifne          699\n        681: aload         12\n-       683: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n+       683: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n        686: dconst_0\n        687: dcmpl\n        688: ifne          696\n        691: iload         11\n        693: ifeq          699\n        696: aload         12\n        698: areturn\n        699: goto          704\n        702: astore        12\n        704: aload         10\n-       706: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+       706: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n        709: areturn\n        710: astore        12\n-       712: new           #4                  // class java/lang/NumberFormatException\n+       712: new           #19                 // class java/lang/NumberFormatException\n        715: dup\n-       716: new           #47                 // class java/lang/StringBuilder\n+       716: new           #180                // class java/lang/StringBuilder\n        719: dup\n-       720: invokespecial #48                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       720: invokespecial #182                // Method java/lang/StringBuilder.\"<init>\":()V\n        723: aload_0\n-       724: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       727: ldc           #50                 // String  is not a valid number.\n-       729: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       732: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       735: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+       724: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       727: ldc           #187                // String  is not a valid number.\n+       729: invokevirtual #183                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       732: invokevirtual #189                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       735: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n        738: athrow\n        739: iload         9\n        741: iconst_m1\n        742: if_icmple     766\n        745: iload         9\n        747: iload_2\n        748: iconst_1\n        749: isub\n        750: if_icmpge     766\n        753: aload_0\n        754: iload         9\n        756: iconst_1\n        757: iadd\n-       758: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       758: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n        761: astore        7\n        763: goto          769\n        766: aconst_null\n        767: astore        7\n        769: aload         6\n        771: ifnonnull     798\n        774: aload         7\n        776: ifnonnull     798\n        779: aload_0\n-       780: invokestatic  #45                 // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n+       780: invokestatic  #172                // Method createInteger:(Ljava/lang/String;)Ljava/lang/Integer;\n        783: areturn\n        784: astore        10\n        786: aload_0\n-       787: invokestatic  #44                 // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n+       787: invokestatic  #168                // Method createLong:(Ljava/lang/String;)Ljava/lang/Long;\n        790: areturn\n        791: astore        10\n        793: aload_0\n-       794: invokestatic  #43                 // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n+       794: invokestatic  #164                // Method createBigInteger:(Ljava/lang/String;)Ljava/math/BigInteger;\n        797: areturn\n        798: aload         5\n-       800: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       800: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        803: ifeq          818\n        806: aload         7\n-       808: invokestatic  #57                 // Method isAllZeros:(Ljava/lang/String;)Z\n+       808: invokestatic  #213                // Method isAllZeros:(Ljava/lang/String;)Z\n        811: ifeq          818\n        814: iconst_1\n        815: goto          819\n        818: iconst_0\n        819: istore        10\n        821: aload_0\n-       822: invokestatic  #60                 // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n+       822: invokestatic  #223                // Method createFloat:(Ljava/lang/String;)Ljava/lang/Float;\n        825: astore        11\n        827: aload_0\n-       828: invokestatic  #62                 // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n+       828: invokestatic  #230                // Method createDouble:(Ljava/lang/String;)Ljava/lang/Double;\n        831: astore        12\n        833: aload         11\n-       835: invokevirtual #61                 // Method java/lang/Float.isInfinite:()Z\n+       835: invokevirtual #227                // Method java/lang/Float.isInfinite:()Z\n        838: ifne          875\n        841: aload         11\n-       843: invokevirtual #24                 // Method java/lang/Float.floatValue:()F\n+       843: invokevirtual #109                // Method java/lang/Float.floatValue:()F\n        846: fconst_0\n        847: fcmpl\n        848: ifne          856\n        851: iload         10\n        853: ifeq          875\n        856: aload         11\n-       858: invokevirtual #64                 // Method java/lang/Float.toString:()Ljava/lang/String;\n+       858: invokevirtual #235                // Method java/lang/Float.toString:()Ljava/lang/String;\n        861: aload         12\n-       863: invokevirtual #65                 // Method java/lang/Double.toString:()Ljava/lang/String;\n-       866: invokevirtual #66                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       863: invokevirtual #236                // Method java/lang/Double.toString:()Ljava/lang/String;\n+       866: invokevirtual #237                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        869: ifeq          875\n        872: aload         11\n        874: areturn\n        875: aload         12\n-       877: invokevirtual #63                 // Method java/lang/Double.isInfinite:()Z\n+       877: invokevirtual #234                // Method java/lang/Double.isInfinite:()Z\n        880: ifne          926\n        883: aload         12\n-       885: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n+       885: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n        888: dconst_0\n        889: dcmpl\n        890: ifne          898\n        893: iload         10\n        895: ifeq          926\n        898: aload_0\n-       899: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+       899: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n        902: astore        13\n        904: aload         13\n        906: aload         12\n-       908: invokevirtual #27                 // Method java/lang/Double.doubleValue:()D\n-       911: invokestatic  #25                 // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n-       914: invokevirtual #67                 // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n+       908: invokevirtual #120                // Method java/lang/Double.doubleValue:()D\n+       911: invokestatic  #113                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;\n+       914: invokevirtual #241                // Method java/math/BigDecimal.compareTo:(Ljava/math/BigDecimal;)I\n        917: ifne          923\n        920: aload         12\n        922: areturn\n        923: aload         13\n        925: areturn\n        926: goto          931\n        929: astore        11\n        931: aload_0\n-       932: invokestatic  #29                 // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n+       932: invokestatic  #124                // Method createBigDecimal:(Ljava/lang/String;)Ljava/math/BigDecimal;\n        935: areturn\n       Exception table:\n          from    to  target type\n            589   594   595   Class java/lang/NumberFormatException\n            630   661   665   Class java/lang/NumberFormatException\n            667   698   702   Class java/lang/NumberFormatException\n            704   709   710   Class java/lang/NumberFormatException\n@@ -1869,31 +1869,31 @@\n   private static java.lang.String getMantissa(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: invokevirtual #40                 // Method java/lang/String.length:()I\n-         5: invokestatic  #54                 // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n+         2: invokevirtual #153                // Method java/lang/String.length:()I\n+         5: invokestatic  #200                // Method getMantissa:(Ljava/lang/String;I)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 842: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0   str   Ljava/lang/String;\n \n   private static java.lang.String getMantissa(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+         2: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n          5: istore_2\n          6: iload_2\n          7: bipush        45\n          9: if_icmpeq     18\n         12: iload_2\n         13: bipush        43\n         15: if_icmpne     22\n@@ -1902,20 +1902,20 @@\n         22: iconst_0\n         23: istore_3\n         24: iload_3\n         25: ifeq          37\n         28: aload_0\n         29: iconst_1\n         30: iload_1\n-        31: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        31: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         34: goto          43\n         37: aload_0\n         38: iconst_0\n         39: iload_1\n-        40: invokevirtual #52                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        40: invokevirtual #193                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         43: areturn\n       LineNumberTable:\n         line 855: 0\n         line 856: 6\n         line 858: 24\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1942,31 +1942,31 @@\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_1\n          5: ireturn\n          6: aload_0\n-         7: invokevirtual #40                 // Method java/lang/String.length:()I\n+         7: invokevirtual #153                // Method java/lang/String.length:()I\n         10: iconst_1\n         11: isub\n         12: istore_1\n         13: iload_1\n         14: iflt          35\n         17: aload_0\n         18: iload_1\n-        19: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        19: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         22: bipush        48\n         24: if_icmpeq     29\n         27: iconst_0\n         28: ireturn\n         29: iinc          1, -1\n         32: goto          13\n         35: aload_0\n-        36: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z\n+        36: invokevirtual #216                // Method java/lang/String.isEmpty:()Z\n         39: ifne          46\n         42: iconst_1\n         43: goto          47\n         46: iconst_0\n         47: ireturn\n       LineNumberTable:\n         line 870: 0\n@@ -1998,15 +1998,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #68                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n+         7: invokestatic  #245                // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;\n         10: areturn\n       LineNumberTable:\n         line 892: 0\n         line 893: 4\n         line 895: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2020,15 +2020,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #69                 // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n+         7: invokestatic  #247                // Method java/lang/Double.valueOf:(Ljava/lang/String;)Ljava/lang/Double;\n         10: areturn\n       LineNumberTable:\n         line 908: 0\n         line 909: 4\n         line 911: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2042,15 +2042,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #70                 // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n+         7: invokestatic  #249                // Method java/lang/Integer.decode:(Ljava/lang/String;)Ljava/lang/Integer;\n         10: areturn\n       LineNumberTable:\n         line 926: 0\n         line 927: 4\n         line 930: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2064,15 +2064,15 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #71                 // Method java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n+         7: invokestatic  #252                // Method java/lang/Long.decode:(Ljava/lang/String;)Ljava/lang/Long;\n         10: areturn\n       LineNumberTable:\n         line 945: 0\n         line 946: 4\n         line 948: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2092,73 +2092,73 @@\n          6: iconst_0\n          7: istore_1\n          8: bipush        10\n         10: istore_2\n         11: iconst_0\n         12: istore_3\n         13: aload_0\n-        14: ldc           #72                 // String -\n-        16: invokevirtual #41                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        14: ldc           #254                // String -\n+        16: invokevirtual #156                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         19: ifeq          26\n         22: iconst_1\n         23: istore_3\n         24: iconst_1\n         25: istore_1\n         26: aload_0\n-        27: ldc           #34                 // String 0x\n+        27: ldc           #141                // String 0x\n         29: iload_1\n-        30: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        30: invokevirtual #256                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n         33: ifne          46\n         36: aload_0\n-        37: ldc           #35                 // String 0X\n+        37: ldc           #143                // String 0X\n         39: iload_1\n-        40: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        40: invokevirtual #256                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n         43: ifeq          55\n         46: bipush        16\n         48: istore_2\n         49: iinc          1, 2\n-        52: goto          100\n+        52: goto          101\n         55: aload_0\n-        56: ldc           #38                 // String #\n+        56: ldc           #149                // String #\n         58: iload_1\n-        59: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        59: invokevirtual #256                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n         62: ifeq          74\n         65: bipush        16\n         67: istore_2\n         68: iinc          1, 1\n-        71: goto          100\n+        71: goto          101\n         74: aload_0\n-        75: ldc           #74                 // String 0\n-        77: iload_1\n-        78: invokevirtual #73                 // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n-        81: ifeq          100\n-        84: aload_0\n-        85: invokevirtual #40                 // Method java/lang/String.length:()I\n-        88: iload_1\n-        89: iconst_1\n-        90: iadd\n-        91: if_icmple     100\n-        94: bipush        8\n-        96: istore_2\n-        97: iinc          1, 1\n-       100: new           #75                 // class java/math/BigInteger\n-       103: dup\n-       104: aload_0\n-       105: iload_1\n-       106: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n-       109: iload_2\n-       110: invokespecial #76                 // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n-       113: astore        4\n-       115: iload_3\n-       116: ifeq          127\n-       119: aload         4\n-       121: invokevirtual #77                 // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;\n-       124: goto          129\n-       127: aload         4\n-       129: areturn\n+        75: ldc_w         #259                // String 0\n+        78: iload_1\n+        79: invokevirtual #256                // Method java/lang/String.startsWith:(Ljava/lang/String;I)Z\n+        82: ifeq          101\n+        85: aload_0\n+        86: invokevirtual #153                // Method java/lang/String.length:()I\n+        89: iload_1\n+        90: iconst_1\n+        91: iadd\n+        92: if_icmple     101\n+        95: bipush        8\n+        97: istore_2\n+        98: iinc          1, 1\n+       101: new           #261                // class java/math/BigInteger\n+       104: dup\n+       105: aload_0\n+       106: iload_1\n+       107: invokevirtual #197                // Method java/lang/String.substring:(I)Ljava/lang/String;\n+       110: iload_2\n+       111: invokespecial #263                // Method java/math/BigInteger.\"<init>\":(Ljava/lang/String;I)V\n+       114: astore        4\n+       116: iload_3\n+       117: ifeq          128\n+       120: aload         4\n+       122: invokevirtual #266                // Method java/math/BigInteger.negate:()Ljava/math/BigInteger;\n+       125: goto          130\n+       128: aload         4\n+       130: areturn\n       LineNumberTable:\n         line 962: 0\n         line 963: 4\n         line 965: 6\n         line 966: 8\n         line 967: 11\n         line 968: 13\n@@ -2167,34 +2167,34 @@\n         line 972: 26\n         line 973: 46\n         line 974: 49\n         line 975: 55\n         line 976: 65\n         line 977: 68\n         line 978: 74\n-        line 979: 94\n-        line 980: 97\n-        line 983: 100\n-        line 984: 115\n+        line 979: 95\n+        line 980: 98\n+        line 983: 101\n+        line 984: 116\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     130     0   str   Ljava/lang/String;\n-            8     122     1   pos   I\n-           11     119     2 radix   I\n-           13     117     3 negate   Z\n-          115      15     4 value   Ljava/math/BigInteger;\n+            0     131     0   str   Ljava/lang/String;\n+            8     123     1   pos   I\n+           11     120     2 radix   I\n+           13     118     3 negate   Z\n+          116      15     4 value   Ljava/math/BigInteger;\n       StackMapTable: number_of_entries = 8\n         frame_type = 6 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 19\n           locals = [ int, int, int ]\n         frame_type = 19 /* same */\n         frame_type = 8 /* same */\n         frame_type = 18 /* same */\n-        frame_type = 25 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ class java/math/BigInteger ]\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ class java/math/BigInteger ]\n \n   public static java.math.BigDecimal createBigDecimal(java.lang.String);\n@@ -2203,25 +2203,25 @@\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #30                 // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n+         7: invokestatic  #128                // Method org/apache/commons/lang3/StringUtils.isBlank:(Ljava/lang/CharSequence;)Z\n         10: ifeq          23\n-        13: new           #4                  // class java/lang/NumberFormatException\n+        13: new           #19                 // class java/lang/NumberFormatException\n         16: dup\n-        17: ldc           #31                 // String A blank string is not a valid number\n-        19: invokespecial #32                 // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n+        17: ldc           #134                // String A blank string is not a valid number\n+        19: invokespecial #136                // Method java/lang/NumberFormatException.\"<init>\":(Ljava/lang/String;)V\n         22: athrow\n-        23: new           #78                 // class java/math/BigDecimal\n+        23: new           #55                 // class java/math/BigDecimal\n         26: dup\n         27: aload_0\n-        28: invokespecial #79                 // Method java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n+        28: invokespecial #270                // Method java/math/BigDecimal.\"<init>\":(Ljava/lang/String;)V\n         31: areturn\n       LineNumberTable:\n         line 997: 0\n         line 998: 4\n         line 1001: 6\n         line 1002: 13\n         line 1004: 23\n@@ -2234,15 +2234,15 @@\n \n   public static long min(long...);\n     descriptor: ([J)J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: laload\n          7: lstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n@@ -2286,15 +2286,15 @@\n \n   public static int min(int...);\n     descriptor: ([I)I\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: iaload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2337,15 +2337,15 @@\n \n   public static short min(short...);\n     descriptor: ([S)S\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: saload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2388,15 +2388,15 @@\n \n   public static byte min(byte...);\n     descriptor: ([B)B\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: baload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2439,31 +2439,31 @@\n \n   public static double min(double...);\n     descriptor: ([D)D\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: daload\n          7: dstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n         11: aload_0\n         12: arraylength\n         13: if_icmpge     47\n         16: aload_0\n         17: iload_3\n         18: daload\n-        19: invokestatic  #81                 // Method java/lang/Double.isNaN:(D)Z\n+        19: invokestatic  #275                // Method java/lang/Double.isNaN:(D)Z\n         22: ifeq          29\n-        25: ldc2_w        #83                 // double NaNd\n+        25: ldc2_w        #279                // double NaNd\n         28: dreturn\n         29: aload_0\n         30: iload_3\n         31: daload\n         32: dload_1\n         33: dcmpg\n         34: ifge          41\n@@ -2501,77 +2501,77 @@\n \n   public static float min(float...);\n     descriptor: ([F)F\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: faload\n          7: fstore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n         11: aload_0\n         12: arraylength\n-        13: if_icmpge     46\n+        13: if_icmpge     47\n         16: aload_0\n         17: iload_2\n         18: faload\n-        19: invokestatic  #85                 // Method java/lang/Float.isNaN:(F)Z\n-        22: ifeq          28\n-        25: ldc           #87                 // float NaNf\n-        27: freturn\n-        28: aload_0\n-        29: iload_2\n-        30: faload\n-        31: fload_1\n-        32: fcmpg\n-        33: ifge          40\n-        36: aload_0\n-        37: iload_2\n-        38: faload\n-        39: fstore_1\n-        40: iinc          2, 1\n-        43: goto          10\n-        46: fload_1\n-        47: freturn\n+        19: invokestatic  #281                // Method java/lang/Float.isNaN:(F)Z\n+        22: ifeq          29\n+        25: ldc_w         #284                // float NaNf\n+        28: freturn\n+        29: aload_0\n+        30: iload_2\n+        31: faload\n+        32: fload_1\n+        33: fcmpg\n+        34: ifge          41\n+        37: aload_0\n+        38: iload_2\n+        39: faload\n+        40: fstore_1\n+        41: iinc          2, 1\n+        44: goto          10\n+        47: fload_1\n+        48: freturn\n       LineNumberTable:\n         line 1145: 0\n         line 1148: 4\n         line 1149: 8\n         line 1150: 16\n         line 1151: 25\n-        line 1153: 28\n-        line 1154: 36\n-        line 1149: 40\n-        line 1158: 46\n+        line 1153: 29\n+        line 1154: 37\n+        line 1149: 41\n+        line 1158: 47\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10      36     2     i   I\n-            0      48     0 array   [F\n-            8      40     1   min   F\n+           10      37     2     i   I\n+            0      49     0 array   [F\n+            8      41     1   min   F\n       StackMapTable: number_of_entries = 4\n         frame_type = 253 /* append */\n           offset_delta = 10\n           locals = [ float, int ]\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n         frame_type = 11 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n \n   public static long max(long...);\n     descriptor: ([J)J\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: laload\n          7: lstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n@@ -2615,15 +2615,15 @@\n \n   public static int max(int...);\n     descriptor: ([I)I\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: iaload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2666,15 +2666,15 @@\n \n   public static short max(short...);\n     descriptor: ([S)S\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: saload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2717,15 +2717,15 @@\n \n   public static byte max(byte...);\n     descriptor: ([B)B\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: baload\n          7: istore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n@@ -2768,31 +2768,31 @@\n \n   public static double max(double...);\n     descriptor: ([D)D\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=4, locals=4, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: daload\n          7: dstore_1\n          8: iconst_1\n          9: istore_3\n         10: iload_3\n         11: aload_0\n         12: arraylength\n         13: if_icmpge     47\n         16: aload_0\n         17: iload_3\n         18: daload\n-        19: invokestatic  #81                 // Method java/lang/Double.isNaN:(D)Z\n+        19: invokestatic  #275                // Method java/lang/Double.isNaN:(D)Z\n         22: ifeq          29\n-        25: ldc2_w        #83                 // double NaNd\n+        25: ldc2_w        #279                // double NaNd\n         28: dreturn\n         29: aload_0\n         30: iload_3\n         31: daload\n         32: dload_1\n         33: dcmpl\n         34: ifle          41\n@@ -2830,101 +2830,101 @@\n \n   public static float max(float...);\n     descriptor: ([F)F\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: invokestatic  #80                 // Method validateArray:(Ljava/lang/Object;)V\n+         1: invokestatic  #271                // Method validateArray:(Ljava/lang/Object;)V\n          4: aload_0\n          5: iconst_0\n          6: faload\n          7: fstore_1\n          8: iconst_1\n          9: istore_2\n         10: iload_2\n         11: aload_0\n         12: arraylength\n-        13: if_icmpge     46\n+        13: if_icmpge     47\n         16: aload_0\n         17: iload_2\n         18: faload\n-        19: invokestatic  #85                 // Method java/lang/Float.isNaN:(F)Z\n-        22: ifeq          28\n-        25: ldc           #87                 // float NaNf\n-        27: freturn\n-        28: aload_0\n-        29: iload_2\n-        30: faload\n-        31: fload_1\n-        32: fcmpl\n-        33: ifle          40\n-        36: aload_0\n-        37: iload_2\n-        38: faload\n-        39: fstore_1\n-        40: iinc          2, 1\n-        43: goto          10\n-        46: fload_1\n-        47: freturn\n+        19: invokestatic  #281                // Method java/lang/Float.isNaN:(F)Z\n+        22: ifeq          29\n+        25: ldc_w         #284                // float NaNf\n+        28: freturn\n+        29: aload_0\n+        30: iload_2\n+        31: faload\n+        32: fload_1\n+        33: fcmpl\n+        34: ifle          41\n+        37: aload_0\n+        38: iload_2\n+        39: faload\n+        40: fstore_1\n+        41: iinc          2, 1\n+        44: goto          10\n+        47: fload_1\n+        48: freturn\n       LineNumberTable:\n         line 1299: 0\n         line 1302: 4\n         line 1303: 8\n         line 1304: 16\n         line 1305: 25\n-        line 1307: 28\n-        line 1308: 36\n-        line 1303: 40\n-        line 1312: 46\n+        line 1307: 29\n+        line 1308: 37\n+        line 1303: 41\n+        line 1312: 47\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10      36     2     j   I\n-            0      48     0 array   [F\n-            8      40     1   max   F\n+           10      37     2     j   I\n+            0      49     0 array   [F\n+            8      41     1   max   F\n       StackMapTable: number_of_entries = 4\n         frame_type = 253 /* append */\n           offset_delta = 10\n           locals = [ float, int ]\n-        frame_type = 17 /* same */\n+        frame_type = 18 /* same */\n         frame_type = 11 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n \n   private static void validateArray(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #88                 // String array\n-         3: iconst_0\n-         4: anewarray     #89                 // class java/lang/Object\n-         7: invokestatic  #90                 // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n-        10: pop\n-        11: aload_0\n-        12: invokestatic  #91                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n-        15: ifeq          22\n-        18: iconst_1\n-        19: goto          23\n-        22: iconst_0\n-        23: ldc           #92                 // String Array cannot be empty.\n-        25: iconst_0\n-        26: anewarray     #89                 // class java/lang/Object\n-        29: invokestatic  #93                 // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n-        32: return\n+         1: ldc_w         #285                // String array\n+         4: iconst_0\n+         5: anewarray     #2                  // class java/lang/Object\n+         8: invokestatic  #287                // Method org/apache/commons/lang3/Validate.notNull:(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/Object;\n+        11: pop\n+        12: aload_0\n+        13: invokestatic  #293                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I\n+        16: ifeq          23\n+        19: iconst_1\n+        20: goto          24\n+        23: iconst_0\n+        24: ldc_w         #299                // String Array cannot be empty.\n+        27: iconst_0\n+        28: anewarray     #2                  // class java/lang/Object\n+        31: invokestatic  #301                // Method org/apache/commons/lang3/Validate.isTrue:(ZLjava/lang/String;[Ljava/lang/Object;)V\n+        34: return\n       LineNumberTable:\n         line 1322: 0\n-        line 1323: 11\n-        line 1324: 32\n+        line 1323: 12\n+        line 1324: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      33     0 array   Ljava/lang/Object;\n+            0      35     0 array   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 22 /* same */\n+        frame_type = 23 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   public static long min(long, long, long);\n     descriptor: (JJJ)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n@@ -3057,17 +3057,17 @@\n   public static double min(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #94                 // Method java/lang/Math.min:(DD)D\n+         2: invokestatic  #305                // Method java/lang/Math.min:(DD)D\n          5: dload         4\n-         7: invokestatic  #94                 // Method java/lang/Math.min:(DD)D\n+         7: invokestatic  #305                // Method java/lang/Math.min:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 1413: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0     a   D\n             0      11     2     b   D\n@@ -3076,17 +3076,17 @@\n   public static float min(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #95                 // Method java/lang/Math.min:(FF)F\n+         2: invokestatic  #311                // Method java/lang/Math.min:(FF)F\n          5: fload_2\n-         6: invokestatic  #95                 // Method java/lang/Math.min:(FF)F\n+         6: invokestatic  #311                // Method java/lang/Math.min:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 1429: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0     a   F\n             0      10     1     b   F\n@@ -3225,17 +3225,17 @@\n   public static double max(double, double, double);\n     descriptor: (DDD)D\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=6, args_size=3\n          0: dload_0\n          1: dload_2\n-         2: invokestatic  #96                 // Method java/lang/Math.max:(DD)D\n+         2: invokestatic  #314                // Method java/lang/Math.max:(DD)D\n          5: dload         4\n-         7: invokestatic  #96                 // Method java/lang/Math.max:(DD)D\n+         7: invokestatic  #314                // Method java/lang/Math.max:(DD)D\n         10: dreturn\n       LineNumberTable:\n         line 1519: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0     a   D\n             0      11     2     b   D\n@@ -3244,17 +3244,17 @@\n   public static float max(float, float, float);\n     descriptor: (FFF)F\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: fload_0\n          1: fload_1\n-         2: invokestatic  #97                 // Method java/lang/Math.max:(FF)F\n+         2: invokestatic  #317                // Method java/lang/Math.max:(FF)F\n          5: fload_2\n-         6: invokestatic  #97                 // Method java/lang/Math.max:(FF)F\n+         6: invokestatic  #317                // Method java/lang/Math.max:(FF)F\n          9: freturn\n       LineNumberTable:\n         line 1535: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0     a   F\n             0      10     1     b   F\n@@ -3262,52 +3262,52 @@\n \n   public static boolean isDigits(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #98                 // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #319                // Method org/apache/commons/lang3/StringUtils.isNumeric:(Ljava/lang/CharSequence;)Z\n          4: ireturn\n       LineNumberTable:\n         line 1550: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0   str   Ljava/lang/String;\n \n   public static boolean isNumber(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #99                 // Method isCreatable:(Ljava/lang/String;)Z\n+         1: invokestatic  #322                // Method isCreatable:(Ljava/lang/String;)Z\n          4: ireturn\n       LineNumberTable:\n         line 1580: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0   str   Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #300()\n+      0: #508()\n         java.lang.Deprecated\n \n   public static boolean isCreatable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n          0: aload_0\n-         1: invokestatic  #100                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #325                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n-        10: invokevirtual #101                // Method java/lang/String.toCharArray:()[C\n+        10: invokevirtual #327                // Method java/lang/String.toCharArray:()[C\n         13: astore_1\n         14: aload_1\n         15: arraylength\n         16: istore_2\n         17: iconst_0\n         18: istore_3\n         19: iconst_0\n@@ -3338,15 +3338,15 @@\n         59: aload_1\n         60: iload         7\n         62: caload\n         63: bipush        48\n         65: if_icmpne     237\n         68: aload_0\n         69: bipush        46\n-        71: invokestatic  #102                // Method org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n+        71: invokestatic  #331                // Method org/apache/commons/lang3/StringUtils.contains:(Ljava/lang/CharSequence;I)Z\n         74: ifne          237\n         77: aload_1\n         78: iload         7\n         80: iconst_1\n         81: iadd\n         82: caload\n         83: bipush        120\n@@ -3408,15 +3408,15 @@\n        182: iconst_1\n        183: ireturn\n        184: aload_1\n        185: iload         7\n        187: iconst_1\n        188: iadd\n        189: caload\n-       190: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z\n+       190: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z\n        193: ifeq          237\n        196: iload         7\n        198: iconst_1\n        199: iadd\n        200: istore        8\n        202: iload         8\n        204: aload_1\n@@ -3769,46 +3769,46 @@\n \n   public static boolean isParsable(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #100                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n+         1: invokestatic  #325                // Method org/apache/commons/lang3/StringUtils.isEmpty:(Ljava/lang/CharSequence;)Z\n          4: ifeq          9\n          7: iconst_0\n          8: ireturn\n          9: aload_0\n         10: aload_0\n-        11: invokevirtual #40                 // Method java/lang/String.length:()I\n+        11: invokevirtual #153                // Method java/lang/String.length:()I\n         14: iconst_1\n         15: isub\n-        16: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        16: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         19: bipush        46\n         21: if_icmpne     26\n         24: iconst_0\n         25: ireturn\n         26: aload_0\n         27: iconst_0\n-        28: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        28: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         31: bipush        45\n         33: if_icmpne     52\n         36: aload_0\n-        37: invokevirtual #40                 // Method java/lang/String.length:()I\n+        37: invokevirtual #153                // Method java/lang/String.length:()I\n         40: iconst_1\n         41: if_icmpne     46\n         44: iconst_0\n         45: ireturn\n         46: aload_0\n         47: iconst_1\n-        48: invokestatic  #103                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n+        48: invokestatic  #335                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n         51: ireturn\n         52: aload_0\n         53: iconst_0\n-        54: invokestatic  #103                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n+        54: invokestatic  #335                // Method withDecimalsParsing:(Ljava/lang/String;I)Z\n         57: ireturn\n       LineNumberTable:\n         line 1736: 0\n         line 1737: 7\n         line 1739: 9\n         line 1740: 24\n         line 1742: 26\n@@ -3832,19 +3832,19 @@\n       stack=2, locals=5, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: iload_1\n          3: istore_3\n          4: iload_3\n          5: aload_0\n-         6: invokevirtual #40                 // Method java/lang/String.length:()I\n+         6: invokevirtual #153                // Method java/lang/String.length:()I\n          9: if_icmpge     68\n         12: aload_0\n         13: iload_3\n-        14: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n+        14: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n         17: bipush        46\n         19: if_icmpne     26\n         22: iconst_1\n         23: goto          27\n         26: iconst_0\n         27: istore        4\n         29: iload         4\n@@ -3855,16 +3855,16 @@\n         39: if_icmple     44\n         42: iconst_0\n         43: ireturn\n         44: iload         4\n         46: ifne          62\n         49: aload_0\n         50: iload_3\n-        51: invokevirtual #42                 // Method java/lang/String.charAt:(I)C\n-        54: invokestatic  #56                 // Method java/lang/Character.isDigit:(C)Z\n+        51: invokevirtual #160                // Method java/lang/String.charAt:(I)C\n+        54: invokestatic  #207                // Method java/lang/Character.isDigit:(C)Z\n         57: ifne          62\n         60: iconst_0\n         61: ireturn\n         62: iinc          3, 1\n         65: goto          4\n         68: iconst_1\n         69: ireturn\n@@ -4016,77 +4016,77 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n          0: lconst_0\n-         1: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-         4: putstatic     #105                // Field LONG_ZERO:Ljava/lang/Long;\n+         1: invokestatic  #338                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+         4: putstatic     #341                // Field LONG_ZERO:Ljava/lang/Long;\n          7: lconst_1\n-         8: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-        11: putstatic     #106                // Field LONG_ONE:Ljava/lang/Long;\n-        14: ldc2_w        #107                // long -1l\n-        17: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-        20: putstatic     #109                // Field LONG_MINUS_ONE:Ljava/lang/Long;\n+         8: invokestatic  #338                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        11: putstatic     #345                // Field LONG_ONE:Ljava/lang/Long;\n+        14: ldc2_w        #348                // long -1l\n+        17: invokestatic  #338                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+        20: putstatic     #350                // Field LONG_MINUS_ONE:Ljava/lang/Long;\n         23: iconst_0\n-        24: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        27: putstatic     #111                // Field INTEGER_ZERO:Ljava/lang/Integer;\n+        24: invokestatic  #353                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        27: putstatic     #356                // Field INTEGER_ZERO:Ljava/lang/Integer;\n         30: iconst_1\n-        31: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        34: putstatic     #112                // Field INTEGER_ONE:Ljava/lang/Integer;\n+        31: invokestatic  #353                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        34: putstatic     #359                // Field INTEGER_ONE:Ljava/lang/Integer;\n         37: iconst_2\n-        38: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        41: putstatic     #17                 // Field INTEGER_TWO:Ljava/lang/Integer;\n+        38: invokestatic  #353                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        41: putstatic     #80                 // Field INTEGER_TWO:Ljava/lang/Integer;\n         44: iconst_m1\n-        45: invokestatic  #110                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-        48: putstatic     #113                // Field INTEGER_MINUS_ONE:Ljava/lang/Integer;\n+        45: invokestatic  #353                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        48: putstatic     #362                // Field INTEGER_MINUS_ONE:Ljava/lang/Integer;\n         51: iconst_0\n-        52: invokestatic  #114                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-        55: putstatic     #115                // Field SHORT_ZERO:Ljava/lang/Short;\n+        52: invokestatic  #365                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+        55: putstatic     #368                // Field SHORT_ZERO:Ljava/lang/Short;\n         58: iconst_1\n-        59: invokestatic  #114                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-        62: putstatic     #116                // Field SHORT_ONE:Ljava/lang/Short;\n+        59: invokestatic  #365                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+        62: putstatic     #372                // Field SHORT_ONE:Ljava/lang/Short;\n         65: iconst_m1\n-        66: invokestatic  #114                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n-        69: putstatic     #117                // Field SHORT_MINUS_ONE:Ljava/lang/Short;\n+        66: invokestatic  #365                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;\n+        69: putstatic     #375                // Field SHORT_MINUS_ONE:Ljava/lang/Short;\n         72: iconst_0\n-        73: invokestatic  #118                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-        76: putstatic     #119                // Field BYTE_ZERO:Ljava/lang/Byte;\n+        73: invokestatic  #378                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+        76: putstatic     #381                // Field BYTE_ZERO:Ljava/lang/Byte;\n         79: iconst_1\n-        80: invokestatic  #118                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-        83: putstatic     #120                // Field BYTE_ONE:Ljava/lang/Byte;\n+        80: invokestatic  #378                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+        83: putstatic     #385                // Field BYTE_ONE:Ljava/lang/Byte;\n         86: iconst_m1\n-        87: invokestatic  #118                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n-        90: putstatic     #121                // Field BYTE_MINUS_ONE:Ljava/lang/Byte;\n+        87: invokestatic  #378                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;\n+        90: putstatic     #388                // Field BYTE_MINUS_ONE:Ljava/lang/Byte;\n         93: dconst_0\n-        94: invokestatic  #122                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-        97: putstatic     #123                // Field DOUBLE_ZERO:Ljava/lang/Double;\n+        94: invokestatic  #391                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+        97: putstatic     #394                // Field DOUBLE_ZERO:Ljava/lang/Double;\n        100: dconst_1\n-       101: invokestatic  #122                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-       104: putstatic     #124                // Field DOUBLE_ONE:Ljava/lang/Double;\n-       107: ldc2_w        #125                // double -1.0d\n-       110: invokestatic  #122                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n-       113: putstatic     #127                // Field DOUBLE_MINUS_ONE:Ljava/lang/Double;\n+       101: invokestatic  #391                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+       104: putstatic     #398                // Field DOUBLE_ONE:Ljava/lang/Double;\n+       107: ldc2_w        #401                // double -1.0d\n+       110: invokestatic  #391                // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;\n+       113: putstatic     #403                // Field DOUBLE_MINUS_ONE:Ljava/lang/Double;\n        116: fconst_0\n-       117: invokestatic  #128                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-       120: putstatic     #129                // Field FLOAT_ZERO:Ljava/lang/Float;\n+       117: invokestatic  #406                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+       120: putstatic     #409                // Field FLOAT_ZERO:Ljava/lang/Float;\n        123: fconst_1\n-       124: invokestatic  #128                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-       127: putstatic     #130                // Field FLOAT_ONE:Ljava/lang/Float;\n-       130: ldc           #131                // float -1.0f\n-       132: invokestatic  #128                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n-       135: putstatic     #132                // Field FLOAT_MINUS_ONE:Ljava/lang/Float;\n-       138: ldc2_w        #134                // long 2147483647l\n-       141: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-       144: putstatic     #136                // Field LONG_INT_MAX_VALUE:Ljava/lang/Long;\n-       147: ldc2_w        #137                // long -2147483648l\n-       150: invokestatic  #104                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n-       153: putstatic     #139                // Field LONG_INT_MIN_VALUE:Ljava/lang/Long;\n-       156: return\n+       124: invokestatic  #406                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+       127: putstatic     #413                // Field FLOAT_ONE:Ljava/lang/Float;\n+       130: ldc_w         #416                // float -1.0f\n+       133: invokestatic  #406                // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;\n+       136: putstatic     #417                // Field FLOAT_MINUS_ONE:Ljava/lang/Float;\n+       139: ldc2_w        #420                // long 2147483647l\n+       142: invokestatic  #338                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+       145: putstatic     #422                // Field LONG_INT_MAX_VALUE:Ljava/lang/Long;\n+       148: ldc2_w        #425                // long -2147483648l\n+       151: invokestatic  #338                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+       154: putstatic     #427                // Field LONG_INT_MIN_VALUE:Ljava/lang/Long;\n+       157: return\n       LineNumberTable:\n         line 35: 0\n         line 37: 7\n         line 39: 14\n         line 41: 23\n         line 43: 30\n         line 45: 37\n@@ -4099,11 +4099,11 @@\n         line 59: 86\n         line 61: 93\n         line 63: 100\n         line 65: 107\n         line 67: 116\n         line 69: 123\n         line 71: 130\n-        line 78: 138\n-        line 85: 147\n+        line 78: 139\n+        line 85: 148\n }\n SourceFile: \"NumberUtils.java\"\n"}]}
