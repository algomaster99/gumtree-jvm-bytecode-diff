{"diffoscope-json-version": 1, "source1": "first/Segment.class", "source2": "second/Segment.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,14 +13,15 @@\n import java.nio.charset.Charset;\n import org.apache.commons.compress.harmony.pack200.Pack200Exception;\n import java.io.IOException;\n import java.io.OutputStream;\n import java.io.DataOutputStream;\n import java.io.ByteArrayOutputStream;\n import java.util.function.Consumer;\n+import java.util.Objects;\n import java.util.HashSet;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPClass;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8;\n import java.util.Iterator;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool;\n import org.apache.commons.compress.harmony.unpack200.bytecode.InnerClassesAttribute;\n import org.apache.commons.compress.harmony.unpack200.bytecode.CPMethod;\n@@ -200,15 +201,18 @@\n             if (set.add(icTuple2)) {\n                 list.add(icTuple2);\n             }\n             else {\n                 list2.add(icTuple2);\n             }\n         }\n-        list2.forEach(list::remove);\n+        final ArrayList list3 = list2;\n+        final ArrayList obj = list;\n+        Objects.requireNonNull(obj);\n+        list3.forEach(obj::remove);\n         return list;\n     }\n     \n     protected AttrDefinitionBands getAttrDefinitionBands() {\n         return this.attrDefinitionBands;\n     }\n     \n"}]}
