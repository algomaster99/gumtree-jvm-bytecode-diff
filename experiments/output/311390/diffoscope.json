{"diffoscope-json-version": 1, "source1": "first/Archive.class", "source2": "second/Archive.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,237 +1,237 @@\n-  SHA-256 checksum 846548eb85d8d968b31623204687e934ccf5c6ad02160b1524240cbff5629a41\n+  SHA-256 checksum 559a654a740925af450f57366615c7e12b57e75df0e5d9a5b42f31202cbe396b\n   Compiled from \"Archive.java\"\n public class org.apache.commons.compress.harmony.unpack200.Archive\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #71                         // org/apache/commons/compress/harmony/unpack200/Archive\n-  super_class: #72                        // java/lang/Object\n+  this_class: #10                         // org/apache/commons/compress/harmony/unpack200/Archive\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 9, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #72.#116      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #117          // org/apache/commons/compress/harmony/unpack200/Segment\n-    #3 = Fieldref           #71.#118      // org/apache/commons/compress/harmony/unpack200/Archive.logLevel:I\n-    #4 = Fieldref           #71.#119      // org/apache/commons/compress/harmony/unpack200/Archive.inputFileName:Ljava/lang/String;\n-    #5 = Fieldref           #71.#120      // org/apache/commons/compress/harmony/unpack200/Archive.outputFileName:Ljava/lang/String;\n-    #6 = Class              #121          // java/io/FileInputStream\n-    #7 = Methodref          #6.#122       // java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n-    #8 = Fieldref           #71.#123      // org/apache/commons/compress/harmony/unpack200/Archive.inputStream:Ljava/io/InputStream;\n-    #9 = Class              #124          // java/util/jar/JarOutputStream\n-   #10 = Class              #125          // java/io/BufferedOutputStream\n-   #11 = Class              #126          // java/io/FileOutputStream\n-   #12 = Methodref          #11.#122      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Methodref          #10.#127      // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #14 = Methodref          #9.#127       // java/util/jar/JarOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #15 = Fieldref           #71.#128      // org/apache/commons/compress/harmony/unpack200/Archive.outputStream:Ljava/util/jar/JarOutputStream;\n-   #16 = String             #129          // PACK200\n-   #17 = Methodref          #9.#130       // java/util/jar/JarOutputStream.setComment:(Ljava/lang/String;)V\n-   #18 = Methodref          #131.#132     // java/io/InputStream.markSupported:()Z\n-   #19 = Class              #133          // java/io/BufferedInputStream\n-   #20 = Methodref          #19.#134      // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #21 = Class              #135          // java/lang/IllegalStateException\n-   #22 = Methodref          #21.#116      // java/lang/IllegalStateException.\"<init>\":()V\n-   #23 = Methodref          #131.#136     // java/io/InputStream.mark:(I)V\n-   #24 = Methodref          #131.#137     // java/io/InputStream.read:()I\n-   #25 = Class              #138          // java/util/zip/GZIPInputStream\n-   #26 = Integer            35615\n-   #27 = Methodref          #131.#139     // java/io/InputStream.reset:()V\n-   #28 = Methodref          #25.#134      // java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #29 = Class              #140          // java/util/jar/JarInputStream\n-   #30 = Methodref          #29.#134      // java/util/jar/JarInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #31 = Methodref          #29.#141      // java/util/jar/JarInputStream.getNextJarEntry:()Ljava/util/jar/JarEntry;\n-   #32 = Methodref          #9.#142       // java/util/jar/JarOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V\n-   #33 = Methodref          #29.#143      // java/util/jar/JarInputStream.read:([B)I\n-   #34 = Methodref          #9.#144       // java/util/jar/JarOutputStream.write:([BII)V\n-   #35 = Methodref          #9.#145       // java/util/jar/JarOutputStream.closeEntry:()V\n-   #36 = Methodref          #71.#146      // org/apache/commons/compress/harmony/unpack200/Archive.available:(Ljava/io/InputStream;)Z\n-   #37 = Methodref          #2.#116       // org/apache/commons/compress/harmony/unpack200/Segment.\"<init>\":()V\n-   #38 = Methodref          #2.#147       // org/apache/commons/compress/harmony/unpack200/Segment.setLogLevel:(I)V\n-   #39 = Fieldref           #71.#148      // org/apache/commons/compress/harmony/unpack200/Archive.logFile:Ljava/io/FileOutputStream;\n-   #40 = Fieldref           #149.#150     // java/lang/System.out:Ljava/io/PrintStream;\n-   #41 = Methodref          #2.#151       // org/apache/commons/compress/harmony/unpack200/Segment.setLogStream:(Ljava/io/OutputStream;)V\n-   #42 = Methodref          #2.#152       // org/apache/commons/compress/harmony/unpack200/Segment.setPreRead:(Z)V\n-   #43 = Class              #153          // java/lang/StringBuilder\n-   #44 = Methodref          #43.#116      // java/lang/StringBuilder.\"<init>\":()V\n-   #45 = String             #154          // Unpacking from\n-   #46 = Methodref          #43.#155      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #47 = String             #156          //  to\n-   #48 = Methodref          #43.#157      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #49 = Methodref          #2.#158       // org/apache/commons/compress/harmony/unpack200/Segment.log:(ILjava/lang/String;)V\n-   #50 = String             #159          // Reading segment\n-   #51 = Methodref          #43.#160      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #52 = Fieldref           #71.#161      // org/apache/commons/compress/harmony/unpack200/Archive.overrideDeflateHint:Z\n-   #53 = Fieldref           #71.#162      // org/apache/commons/compress/harmony/unpack200/Archive.deflateHint:Z\n-   #54 = Methodref          #2.#163       // org/apache/commons/compress/harmony/unpack200/Segment.overrideDeflateHint:(Z)V\n-   #55 = Methodref          #2.#164       // org/apache/commons/compress/harmony/unpack200/Segment.unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n-   #56 = Methodref          #9.#165       // java/util/jar/JarOutputStream.flush:()V\n-   #57 = Methodref          #6.#166       // java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;\n-   #58 = Methodref          #72.#157      // java/lang/Object.toString:()Ljava/lang/String;\n-   #59 = Methodref          #131.#167     // java/io/InputStream.close:()V\n-   #60 = Class              #168          // java/lang/Exception\n-   #61 = Methodref          #9.#167       // java/util/jar/JarOutputStream.close:()V\n-   #62 = Methodref          #11.#167      // java/io/FileOutputStream.close:()V\n-   #63 = Fieldref           #71.#169      // org/apache/commons/compress/harmony/unpack200/Archive.removePackFile:Z\n-   #64 = Class              #170          // java/io/File\n-   #65 = Methodref          #64.#122      // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-   #66 = Methodref          #64.#171      // java/io/File.delete:()Z\n-   #67 = Class              #172          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-   #68 = String             #173          // Failed to delete the input file.\n-   #69 = Methodref          #67.#122      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-   #70 = Methodref          #11.#174      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n-   #71 = Class              #175          // org/apache/commons/compress/harmony/unpack200/Archive\n-   #72 = Class              #176          // java/lang/Object\n-   #73 = Utf8               inputStream\n-   #74 = Utf8               Ljava/io/InputStream;\n-   #75 = Utf8               outputStream\n-   #76 = Utf8               Ljava/util/jar/JarOutputStream;\n-   #77 = Utf8               removePackFile\n-   #78 = Utf8               Z\n-   #79 = Utf8               logLevel\n-   #80 = Utf8               I\n-   #81 = Utf8               logFile\n-   #82 = Utf8               Ljava/io/FileOutputStream;\n-   #83 = Utf8               overrideDeflateHint\n-   #84 = Utf8               deflateHint\n-   #85 = Utf8               inputFileName\n-   #86 = Utf8               Ljava/lang/String;\n-   #87 = Utf8               outputFileName\n-   #88 = Utf8               <init>\n-   #89 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-   #90 = Utf8               Code\n-   #91 = Utf8               LineNumberTable\n-   #92 = Utf8               Exceptions\n-   #93 = Class              #177          // java/io/FileNotFoundException\n-   #94 = Class              #178          // java/io/IOException\n-   #95 = Utf8               (Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n-   #96 = Utf8               unpack\n-   #97 = Utf8               ()V\n-   #98 = Utf8               StackMapTable\n-   #99 = Class              #179          // \"[I\"\n-  #100 = Class              #180          // java/util/jar/JarEntry\n-  #101 = Class              #181          // \"[B\"\n-  #102 = Class              #182          // java/io/OutputStream\n-  #103 = Class              #183          // java/lang/Throwable\n-  #104 = Utf8               available\n-  #105 = Utf8               (Ljava/io/InputStream;)Z\n-  #106 = Utf8               setRemovePackFile\n-  #107 = Utf8               (Z)V\n-  #108 = Utf8               setVerbose\n-  #109 = Utf8               setQuiet\n-  #110 = Utf8               setLogFile\n-  #111 = Utf8               (Ljava/lang/String;)V\n-  #112 = Utf8               (Ljava/lang/String;Z)V\n-  #113 = Utf8               setDeflateHint\n-  #114 = Utf8               SourceFile\n-  #115 = Utf8               Archive.java\n-  #116 = NameAndType        #88:#97       // \"<init>\":()V\n-  #117 = Utf8               org/apache/commons/compress/harmony/unpack200/Segment\n-  #118 = NameAndType        #79:#80       // logLevel:I\n-  #119 = NameAndType        #85:#86       // inputFileName:Ljava/lang/String;\n-  #120 = NameAndType        #87:#86       // outputFileName:Ljava/lang/String;\n-  #121 = Utf8               java/io/FileInputStream\n-  #122 = NameAndType        #88:#111      // \"<init>\":(Ljava/lang/String;)V\n-  #123 = NameAndType        #73:#74       // inputStream:Ljava/io/InputStream;\n-  #124 = Utf8               java/util/jar/JarOutputStream\n-  #125 = Utf8               java/io/BufferedOutputStream\n-  #126 = Utf8               java/io/FileOutputStream\n-  #127 = NameAndType        #88:#184      // \"<init>\":(Ljava/io/OutputStream;)V\n-  #128 = NameAndType        #75:#76       // outputStream:Ljava/util/jar/JarOutputStream;\n-  #129 = Utf8               PACK200\n-  #130 = NameAndType        #185:#111     // setComment:(Ljava/lang/String;)V\n-  #131 = Class              #186          // java/io/InputStream\n-  #132 = NameAndType        #187:#188     // markSupported:()Z\n-  #133 = Utf8               java/io/BufferedInputStream\n-  #134 = NameAndType        #88:#189      // \"<init>\":(Ljava/io/InputStream;)V\n-  #135 = Utf8               java/lang/IllegalStateException\n-  #136 = NameAndType        #190:#191     // mark:(I)V\n-  #137 = NameAndType        #192:#193     // read:()I\n-  #138 = Utf8               java/util/zip/GZIPInputStream\n-  #139 = NameAndType        #194:#97      // reset:()V\n-  #140 = Utf8               java/util/jar/JarInputStream\n-  #141 = NameAndType        #195:#196     // getNextJarEntry:()Ljava/util/jar/JarEntry;\n-  #142 = NameAndType        #197:#198     // putNextEntry:(Ljava/util/zip/ZipEntry;)V\n-  #143 = NameAndType        #192:#199     // read:([B)I\n-  #144 = NameAndType        #200:#201     // write:([BII)V\n-  #145 = NameAndType        #202:#97      // closeEntry:()V\n-  #146 = NameAndType        #104:#105     // available:(Ljava/io/InputStream;)Z\n-  #147 = NameAndType        #203:#191     // setLogLevel:(I)V\n-  #148 = NameAndType        #81:#82       // logFile:Ljava/io/FileOutputStream;\n-  #149 = Class              #204          // java/lang/System\n-  #150 = NameAndType        #205:#206     // out:Ljava/io/PrintStream;\n-  #151 = NameAndType        #207:#184     // setLogStream:(Ljava/io/OutputStream;)V\n-  #152 = NameAndType        #208:#107     // setPreRead:(Z)V\n-  #153 = Utf8               java/lang/StringBuilder\n-  #154 = Utf8               Unpacking from\n-  #155 = NameAndType        #209:#210     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #156 = Utf8                to\n-  #157 = NameAndType        #211:#212     // toString:()Ljava/lang/String;\n-  #158 = NameAndType        #213:#214     // log:(ILjava/lang/String;)V\n-  #159 = Utf8               Reading segment\n-  #160 = NameAndType        #209:#215     // append:(I)Ljava/lang/StringBuilder;\n-  #161 = NameAndType        #83:#78       // overrideDeflateHint:Z\n-  #162 = NameAndType        #84:#78       // deflateHint:Z\n-  #163 = NameAndType        #83:#107      // overrideDeflateHint:(Z)V\n-  #164 = NameAndType        #96:#95       // unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n-  #165 = NameAndType        #216:#97      // flush:()V\n-  #166 = NameAndType        #217:#218     // getFD:()Ljava/io/FileDescriptor;\n-  #167 = NameAndType        #219:#97      // close:()V\n-  #168 = Utf8               java/lang/Exception\n-  #169 = NameAndType        #77:#78       // removePackFile:Z\n-  #170 = Utf8               java/io/File\n-  #171 = NameAndType        #220:#188     // delete:()Z\n-  #172 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #173 = Utf8               Failed to delete the input file.\n-  #174 = NameAndType        #88:#112      // \"<init>\":(Ljava/lang/String;Z)V\n-  #175 = Utf8               org/apache/commons/compress/harmony/unpack200/Archive\n-  #176 = Utf8               java/lang/Object\n-  #177 = Utf8               java/io/FileNotFoundException\n-  #178 = Utf8               java/io/IOException\n-  #179 = Utf8               [I\n-  #180 = Utf8               java/util/jar/JarEntry\n-  #181 = Utf8               [B\n-  #182 = Utf8               java/io/OutputStream\n-  #183 = Utf8               java/lang/Throwable\n-  #184 = Utf8               (Ljava/io/OutputStream;)V\n-  #185 = Utf8               setComment\n-  #186 = Utf8               java/io/InputStream\n-  #187 = Utf8               markSupported\n-  #188 = Utf8               ()Z\n-  #189 = Utf8               (Ljava/io/InputStream;)V\n-  #190 = Utf8               mark\n-  #191 = Utf8               (I)V\n-  #192 = Utf8               read\n-  #193 = Utf8               ()I\n-  #194 = Utf8               reset\n-  #195 = Utf8               getNextJarEntry\n-  #196 = Utf8               ()Ljava/util/jar/JarEntry;\n-  #197 = Utf8               putNextEntry\n-  #198 = Utf8               (Ljava/util/zip/ZipEntry;)V\n-  #199 = Utf8               ([B)I\n-  #200 = Utf8               write\n-  #201 = Utf8               ([BII)V\n-  #202 = Utf8               closeEntry\n-  #203 = Utf8               setLogLevel\n-  #204 = Utf8               java/lang/System\n-  #205 = Utf8               out\n-  #206 = Utf8               Ljava/io/PrintStream;\n-  #207 = Utf8               setLogStream\n-  #208 = Utf8               setPreRead\n-  #209 = Utf8               append\n-  #210 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #211 = Utf8               toString\n-  #212 = Utf8               ()Ljava/lang/String;\n-  #213 = Utf8               log\n-  #214 = Utf8               (ILjava/lang/String;)V\n-  #215 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #216 = Utf8               flush\n-  #217 = Utf8               getFD\n-  #218 = Utf8               ()Ljava/io/FileDescriptor;\n-  #219 = Utf8               close\n-  #220 = Utf8               delete\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/compress/harmony/unpack200/Segment\n+    #8 = Utf8               org/apache/commons/compress/harmony/unpack200/Segment\n+    #9 = Fieldref           #10.#11       // org/apache/commons/compress/harmony/unpack200/Archive.logLevel:I\n+   #10 = Class              #12           // org/apache/commons/compress/harmony/unpack200/Archive\n+   #11 = NameAndType        #13:#14       // logLevel:I\n+   #12 = Utf8               org/apache/commons/compress/harmony/unpack200/Archive\n+   #13 = Utf8               logLevel\n+   #14 = Utf8               I\n+   #15 = Fieldref           #10.#16       // org/apache/commons/compress/harmony/unpack200/Archive.inputFileName:Ljava/lang/String;\n+   #16 = NameAndType        #17:#18       // inputFileName:Ljava/lang/String;\n+   #17 = Utf8               inputFileName\n+   #18 = Utf8               Ljava/lang/String;\n+   #19 = Fieldref           #10.#20       // org/apache/commons/compress/harmony/unpack200/Archive.outputFileName:Ljava/lang/String;\n+   #20 = NameAndType        #21:#18       // outputFileName:Ljava/lang/String;\n+   #21 = Utf8               outputFileName\n+   #22 = Class              #23           // java/io/FileInputStream\n+   #23 = Utf8               java/io/FileInputStream\n+   #24 = Methodref          #22.#25       // java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n+   #25 = NameAndType        #5:#26        // \"<init>\":(Ljava/lang/String;)V\n+   #26 = Utf8               (Ljava/lang/String;)V\n+   #27 = Fieldref           #10.#28       // org/apache/commons/compress/harmony/unpack200/Archive.inputStream:Ljava/io/InputStream;\n+   #28 = NameAndType        #29:#30       // inputStream:Ljava/io/InputStream;\n+   #29 = Utf8               inputStream\n+   #30 = Utf8               Ljava/io/InputStream;\n+   #31 = Class              #32           // java/util/jar/JarOutputStream\n+   #32 = Utf8               java/util/jar/JarOutputStream\n+   #33 = Class              #34           // java/io/BufferedOutputStream\n+   #34 = Utf8               java/io/BufferedOutputStream\n+   #35 = Class              #36           // java/io/FileOutputStream\n+   #36 = Utf8               java/io/FileOutputStream\n+   #37 = Methodref          #35.#25       // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;)V\n+   #38 = Methodref          #33.#39       // java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #39 = NameAndType        #5:#40        // \"<init>\":(Ljava/io/OutputStream;)V\n+   #40 = Utf8               (Ljava/io/OutputStream;)V\n+   #41 = Methodref          #31.#39       // java/util/jar/JarOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #42 = Fieldref           #10.#43       // org/apache/commons/compress/harmony/unpack200/Archive.outputStream:Ljava/util/jar/JarOutputStream;\n+   #43 = NameAndType        #44:#45       // outputStream:Ljava/util/jar/JarOutputStream;\n+   #44 = Utf8               outputStream\n+   #45 = Utf8               Ljava/util/jar/JarOutputStream;\n+   #46 = String             #47           // PACK200\n+   #47 = Utf8               PACK200\n+   #48 = Methodref          #31.#49       // java/util/jar/JarOutputStream.setComment:(Ljava/lang/String;)V\n+   #49 = NameAndType        #50:#26       // setComment:(Ljava/lang/String;)V\n+   #50 = Utf8               setComment\n+   #51 = Methodref          #52.#53       // java/io/InputStream.markSupported:()Z\n+   #52 = Class              #54           // java/io/InputStream\n+   #53 = NameAndType        #55:#56       // markSupported:()Z\n+   #54 = Utf8               java/io/InputStream\n+   #55 = Utf8               markSupported\n+   #56 = Utf8               ()Z\n+   #57 = Class              #58           // java/io/BufferedInputStream\n+   #58 = Utf8               java/io/BufferedInputStream\n+   #59 = Methodref          #57.#60       // java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #60 = NameAndType        #5:#61        // \"<init>\":(Ljava/io/InputStream;)V\n+   #61 = Utf8               (Ljava/io/InputStream;)V\n+   #62 = Class              #63           // java/lang/IllegalStateException\n+   #63 = Utf8               java/lang/IllegalStateException\n+   #64 = Methodref          #62.#3        // java/lang/IllegalStateException.\"<init>\":()V\n+   #65 = Methodref          #52.#66       // java/io/InputStream.mark:(I)V\n+   #66 = NameAndType        #67:#68       // mark:(I)V\n+   #67 = Utf8               mark\n+   #68 = Utf8               (I)V\n+   #69 = Methodref          #52.#70       // java/io/InputStream.read:()I\n+   #70 = NameAndType        #71:#72       // read:()I\n+   #71 = Utf8               read\n+   #72 = Utf8               ()I\n+   #73 = Class              #74           // java/util/zip/GZIPInputStream\n+   #74 = Utf8               java/util/zip/GZIPInputStream\n+   #75 = Integer            35615\n+   #76 = Methodref          #52.#77       // java/io/InputStream.reset:()V\n+   #77 = NameAndType        #78:#6        // reset:()V\n+   #78 = Utf8               reset\n+   #79 = Methodref          #73.#60       // java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #80 = Class              #81           // java/util/jar/JarInputStream\n+   #81 = Utf8               java/util/jar/JarInputStream\n+   #82 = Methodref          #80.#60       // java/util/jar/JarInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #83 = Methodref          #80.#84       // java/util/jar/JarInputStream.getNextJarEntry:()Ljava/util/jar/JarEntry;\n+   #84 = NameAndType        #85:#86       // getNextJarEntry:()Ljava/util/jar/JarEntry;\n+   #85 = Utf8               getNextJarEntry\n+   #86 = Utf8               ()Ljava/util/jar/JarEntry;\n+   #87 = Methodref          #31.#88       // java/util/jar/JarOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V\n+   #88 = NameAndType        #89:#90       // putNextEntry:(Ljava/util/zip/ZipEntry;)V\n+   #89 = Utf8               putNextEntry\n+   #90 = Utf8               (Ljava/util/zip/ZipEntry;)V\n+   #91 = Methodref          #80.#92       // java/util/jar/JarInputStream.read:([B)I\n+   #92 = NameAndType        #71:#93       // read:([B)I\n+   #93 = Utf8               ([B)I\n+   #94 = Methodref          #31.#95       // java/util/jar/JarOutputStream.write:([BII)V\n+   #95 = NameAndType        #96:#97       // write:([BII)V\n+   #96 = Utf8               write\n+   #97 = Utf8               ([BII)V\n+   #98 = Methodref          #31.#99       // java/util/jar/JarOutputStream.closeEntry:()V\n+   #99 = NameAndType        #100:#6       // closeEntry:()V\n+  #100 = Utf8               closeEntry\n+  #101 = Methodref          #10.#102      // org/apache/commons/compress/harmony/unpack200/Archive.available:(Ljava/io/InputStream;)Z\n+  #102 = NameAndType        #103:#104     // available:(Ljava/io/InputStream;)Z\n+  #103 = Utf8               available\n+  #104 = Utf8               (Ljava/io/InputStream;)Z\n+  #105 = Methodref          #7.#3         // org/apache/commons/compress/harmony/unpack200/Segment.\"<init>\":()V\n+  #106 = Methodref          #7.#107       // org/apache/commons/compress/harmony/unpack200/Segment.setLogLevel:(I)V\n+  #107 = NameAndType        #108:#68      // setLogLevel:(I)V\n+  #108 = Utf8               setLogLevel\n+  #109 = Fieldref           #10.#110      // org/apache/commons/compress/harmony/unpack200/Archive.logFile:Ljava/io/FileOutputStream;\n+  #110 = NameAndType        #111:#112     // logFile:Ljava/io/FileOutputStream;\n+  #111 = Utf8               logFile\n+  #112 = Utf8               Ljava/io/FileOutputStream;\n+  #113 = Fieldref           #114.#115     // java/lang/System.out:Ljava/io/PrintStream;\n+  #114 = Class              #116          // java/lang/System\n+  #115 = NameAndType        #117:#118     // out:Ljava/io/PrintStream;\n+  #116 = Utf8               java/lang/System\n+  #117 = Utf8               out\n+  #118 = Utf8               Ljava/io/PrintStream;\n+  #119 = Methodref          #7.#120       // org/apache/commons/compress/harmony/unpack200/Segment.setLogStream:(Ljava/io/OutputStream;)V\n+  #120 = NameAndType        #121:#40      // setLogStream:(Ljava/io/OutputStream;)V\n+  #121 = Utf8               setLogStream\n+  #122 = Methodref          #7.#123       // org/apache/commons/compress/harmony/unpack200/Segment.setPreRead:(Z)V\n+  #123 = NameAndType        #124:#125     // setPreRead:(Z)V\n+  #124 = Utf8               setPreRead\n+  #125 = Utf8               (Z)V\n+  #126 = Class              #127          // java/lang/StringBuilder\n+  #127 = Utf8               java/lang/StringBuilder\n+  #128 = Methodref          #126.#3       // java/lang/StringBuilder.\"<init>\":()V\n+  #129 = String             #130          // Unpacking from\n+  #130 = Utf8               Unpacking from\n+  #131 = Methodref          #126.#132     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #132 = NameAndType        #133:#134     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #133 = Utf8               append\n+  #134 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #135 = String             #136          //  to\n+  #136 = Utf8                to\n+  #137 = Methodref          #126.#138     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #138 = NameAndType        #139:#140     // toString:()Ljava/lang/String;\n+  #139 = Utf8               toString\n+  #140 = Utf8               ()Ljava/lang/String;\n+  #141 = Methodref          #7.#142       // org/apache/commons/compress/harmony/unpack200/Segment.log:(ILjava/lang/String;)V\n+  #142 = NameAndType        #143:#144     // log:(ILjava/lang/String;)V\n+  #143 = Utf8               log\n+  #144 = Utf8               (ILjava/lang/String;)V\n+  #145 = String             #146          // Reading segment\n+  #146 = Utf8               Reading segment\n+  #147 = Methodref          #126.#148     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #148 = NameAndType        #133:#149     // append:(I)Ljava/lang/StringBuilder;\n+  #149 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #150 = Fieldref           #10.#151      // org/apache/commons/compress/harmony/unpack200/Archive.overrideDeflateHint:Z\n+  #151 = NameAndType        #152:#153     // overrideDeflateHint:Z\n+  #152 = Utf8               overrideDeflateHint\n+  #153 = Utf8               Z\n+  #154 = Fieldref           #10.#155      // org/apache/commons/compress/harmony/unpack200/Archive.deflateHint:Z\n+  #155 = NameAndType        #156:#153     // deflateHint:Z\n+  #156 = Utf8               deflateHint\n+  #157 = Methodref          #7.#158       // org/apache/commons/compress/harmony/unpack200/Segment.overrideDeflateHint:(Z)V\n+  #158 = NameAndType        #152:#125     // overrideDeflateHint:(Z)V\n+  #159 = Methodref          #7.#160       // org/apache/commons/compress/harmony/unpack200/Segment.unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n+  #160 = NameAndType        #161:#162     // unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n+  #161 = Utf8               unpack\n+  #162 = Utf8               (Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n+  #163 = Methodref          #31.#164      // java/util/jar/JarOutputStream.flush:()V\n+  #164 = NameAndType        #165:#6       // flush:()V\n+  #165 = Utf8               flush\n+  #166 = Methodref          #22.#167      // java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;\n+  #167 = NameAndType        #168:#169     // getFD:()Ljava/io/FileDescriptor;\n+  #168 = Utf8               getFD\n+  #169 = Utf8               ()Ljava/io/FileDescriptor;\n+  #170 = Methodref          #2.#138       // java/lang/Object.toString:()Ljava/lang/String;\n+  #171 = Methodref          #52.#172      // java/io/InputStream.close:()V\n+  #172 = NameAndType        #173:#6       // close:()V\n+  #173 = Utf8               close\n+  #174 = Class              #175          // java/lang/Exception\n+  #175 = Utf8               java/lang/Exception\n+  #176 = Methodref          #31.#172      // java/util/jar/JarOutputStream.close:()V\n+  #177 = Methodref          #35.#172      // java/io/FileOutputStream.close:()V\n+  #178 = Fieldref           #10.#179      // org/apache/commons/compress/harmony/unpack200/Archive.removePackFile:Z\n+  #179 = NameAndType        #180:#153     // removePackFile:Z\n+  #180 = Utf8               removePackFile\n+  #181 = Class              #182          // java/io/File\n+  #182 = Utf8               java/io/File\n+  #183 = Methodref          #181.#25      // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+  #184 = Methodref          #181.#185     // java/io/File.delete:()Z\n+  #185 = NameAndType        #186:#56      // delete:()Z\n+  #186 = Utf8               delete\n+  #187 = Class              #188          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #188 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #189 = String             #190          // Failed to delete the input file.\n+  #190 = Utf8               Failed to delete the input file.\n+  #191 = Methodref          #187.#25      // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+  #192 = Methodref          #35.#193      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n+  #193 = NameAndType        #5:#194       // \"<init>\":(Ljava/lang/String;Z)V\n+  #194 = Utf8               (Ljava/lang/String;Z)V\n+  #195 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #196 = Utf8               Code\n+  #197 = Utf8               LineNumberTable\n+  #198 = Utf8               Exceptions\n+  #199 = Class              #200          // java/io/FileNotFoundException\n+  #200 = Utf8               java/io/FileNotFoundException\n+  #201 = Class              #202          // java/io/IOException\n+  #202 = Utf8               java/io/IOException\n+  #203 = Utf8               StackMapTable\n+  #204 = Class              #205          // \"[I\"\n+  #205 = Utf8               [I\n+  #206 = Class              #207          // java/util/jar/JarEntry\n+  #207 = Utf8               java/util/jar/JarEntry\n+  #208 = Class              #209          // \"[B\"\n+  #209 = Utf8               [B\n+  #210 = Class              #211          // java/io/OutputStream\n+  #211 = Utf8               java/io/OutputStream\n+  #212 = Class              #213          // java/lang/Throwable\n+  #213 = Utf8               java/lang/Throwable\n+  #214 = Utf8               setRemovePackFile\n+  #215 = Utf8               setVerbose\n+  #216 = Utf8               setQuiet\n+  #217 = Utf8               setLogFile\n+  #218 = Utf8               setDeflateHint\n+  #219 = Utf8               SourceFile\n+  #220 = Utf8               Archive.java\n {\n   private java.io.InputStream inputStream;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0002) ACC_PRIVATE\n \n   private final java.util.jar.JarOutputStream outputStream;\n     descriptor: Ljava/util/jar/JarOutputStream;\n@@ -270,39 +270,39 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=8, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #3                  // Field logLevel:I\n+         6: putfield      #9                  // Field logLevel:I\n          9: aload_0\n         10: aload_1\n-        11: putfield      #4                  // Field inputFileName:Ljava/lang/String;\n+        11: putfield      #15                 // Field inputFileName:Ljava/lang/String;\n         14: aload_0\n         15: aload_2\n-        16: putfield      #5                  // Field outputFileName:Ljava/lang/String;\n+        16: putfield      #19                 // Field outputFileName:Ljava/lang/String;\n         19: aload_0\n-        20: new           #6                  // class java/io/FileInputStream\n+        20: new           #22                 // class java/io/FileInputStream\n         23: dup\n         24: aload_1\n-        25: invokespecial #7                  // Method java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n-        28: putfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+        25: invokespecial #24                 // Method java/io/FileInputStream.\"<init>\":(Ljava/lang/String;)V\n+        28: putfield      #27                 // Field inputStream:Ljava/io/InputStream;\n         31: aload_0\n-        32: new           #9                  // class java/util/jar/JarOutputStream\n+        32: new           #31                 // class java/util/jar/JarOutputStream\n         35: dup\n-        36: new           #10                 // class java/io/BufferedOutputStream\n+        36: new           #33                 // class java/io/BufferedOutputStream\n         39: dup\n-        40: new           #11                 // class java/io/FileOutputStream\n+        40: new           #35                 // class java/io/FileOutputStream\n         43: dup\n         44: aload_2\n-        45: invokespecial #12                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;)V\n-        48: invokespecial #13                 // Method java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        51: invokespecial #14                 // Method java/util/jar/JarOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        54: putfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+        45: invokespecial #37                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;)V\n+        48: invokespecial #38                 // Method java/io/BufferedOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        51: invokespecial #41                 // Method java/util/jar/JarOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        54: putfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n         57: return\n       LineNumberTable:\n         line 69: 0\n         line 48: 4\n         line 70: 9\n         line 71: 14\n         line 72: 19\n@@ -316,97 +316,97 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #3                  // Field logLevel:I\n+         6: putfield      #9                  // Field logLevel:I\n          9: aload_0\n         10: aload_1\n-        11: putfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+        11: putfield      #27                 // Field inputStream:Ljava/io/InputStream;\n         14: aload_0\n         15: aload_2\n-        16: putfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+        16: putfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n         19: return\n       LineNumberTable:\n         line 83: 0\n         line 48: 4\n         line 84: 9\n         line 85: 14\n         line 86: 19\n \n   public void unpack() throws org.apache.commons.compress.harmony.pack200.Pack200Exception, java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=10, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n-         4: ldc           #16                 // String PACK200\n-         6: invokevirtual #17                 // Method java/util/jar/JarOutputStream.setComment:(Ljava/lang/String;)V\n+         1: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+         4: ldc           #46                 // String PACK200\n+         6: invokevirtual #48                 // Method java/util/jar/JarOutputStream.setComment:(Ljava/lang/String;)V\n          9: aload_0\n-        10: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-        13: invokevirtual #18                 // Method java/io/InputStream.markSupported:()Z\n+        10: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+        13: invokevirtual #51                 // Method java/io/InputStream.markSupported:()Z\n         16: ifne          52\n         19: aload_0\n-        20: new           #19                 // class java/io/BufferedInputStream\n+        20: new           #57                 // class java/io/BufferedInputStream\n         23: dup\n         24: aload_0\n-        25: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-        28: invokespecial #20                 // Method java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        31: putfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+        25: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+        28: invokespecial #59                 // Method java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        31: putfield      #27                 // Field inputStream:Ljava/io/InputStream;\n         34: aload_0\n-        35: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-        38: invokevirtual #18                 // Method java/io/InputStream.markSupported:()Z\n+        35: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+        38: invokevirtual #51                 // Method java/io/InputStream.markSupported:()Z\n         41: ifne          52\n-        44: new           #21                 // class java/lang/IllegalStateException\n+        44: new           #62                 // class java/lang/IllegalStateException\n         47: dup\n-        48: invokespecial #22                 // Method java/lang/IllegalStateException.\"<init>\":()V\n+        48: invokespecial #64                 // Method java/lang/IllegalStateException.\"<init>\":()V\n         51: athrow\n         52: aload_0\n-        53: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+        53: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n         56: iconst_2\n-        57: invokevirtual #23                 // Method java/io/InputStream.mark:(I)V\n+        57: invokevirtual #65                 // Method java/io/InputStream.mark:(I)V\n         60: aload_0\n-        61: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-        64: invokevirtual #24                 // Method java/io/InputStream.read:()I\n+        61: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+        64: invokevirtual #69                 // Method java/io/InputStream.read:()I\n         67: sipush        255\n         70: iand\n         71: aload_0\n-        72: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-        75: invokevirtual #24                 // Method java/io/InputStream.read:()I\n+        72: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+        75: invokevirtual #69                 // Method java/io/InputStream.read:()I\n         78: sipush        255\n         81: iand\n         82: bipush        8\n         84: ishl\n         85: ior\n-        86: ldc           #26                 // int 35615\n+        86: ldc           #75                 // int 35615\n         88: if_icmpne     123\n         91: aload_0\n-        92: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-        95: invokevirtual #27                 // Method java/io/InputStream.reset:()V\n+        92: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+        95: invokevirtual #76                 // Method java/io/InputStream.reset:()V\n         98: aload_0\n-        99: new           #19                 // class java/io/BufferedInputStream\n+        99: new           #57                 // class java/io/BufferedInputStream\n        102: dup\n-       103: new           #25                 // class java/util/zip/GZIPInputStream\n+       103: new           #73                 // class java/util/zip/GZIPInputStream\n        106: dup\n        107: aload_0\n-       108: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       111: invokespecial #28                 // Method java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       114: invokespecial #20                 // Method java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-       117: putfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+       108: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       111: invokespecial #79                 // Method java/util/zip/GZIPInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       114: invokespecial #59                 // Method java/io/BufferedInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       117: putfield      #27                 // Field inputStream:Ljava/io/InputStream;\n        120: goto          130\n        123: aload_0\n-       124: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       127: invokevirtual #27                 // Method java/io/InputStream.reset:()V\n+       124: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       127: invokevirtual #76                 // Method java/io/InputStream.reset:()V\n        130: aload_0\n-       131: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+       131: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n        134: iconst_4\n-       135: invokevirtual #23                 // Method java/io/InputStream.mark:(I)V\n+       135: invokevirtual #65                 // Method java/io/InputStream.mark:(I)V\n        138: iconst_4\n        139: newarray       int\n        141: dup\n        142: iconst_0\n        143: sipush        202\n        146: iastore\n        147: dup\n@@ -430,16 +430,16 @@\n        171: iload_3\n        172: aload_2\n        173: arraylength\n        174: if_icmpge     193\n        177: aload_2\n        178: iload_3\n        179: aload_0\n-       180: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       183: invokevirtual #24                 // Method java/io/InputStream.read:()I\n+       180: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       183: invokevirtual #69                 // Method java/io/InputStream.read:()I\n        186: iastore\n        187: iinc          3, 1\n        190: goto          171\n        193: iconst_0\n        194: istore_3\n        195: iconst_0\n        196: istore        4\n@@ -455,209 +455,209 @@\n        212: iaload\n        213: if_icmpeq     218\n        216: iconst_1\n        217: istore_3\n        218: iinc          4, 1\n        221: goto          198\n        224: aload_0\n-       225: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       228: invokevirtual #27                 // Method java/io/InputStream.reset:()V\n+       225: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       228: invokevirtual #76                 // Method java/io/InputStream.reset:()V\n        231: iload_3\n        232: ifeq          327\n-       235: new           #29                 // class java/util/jar/JarInputStream\n+       235: new           #80                 // class java/util/jar/JarInputStream\n        238: dup\n        239: aload_0\n-       240: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       243: invokespecial #30                 // Method java/util/jar/JarInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       240: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       243: invokespecial #82                 // Method java/util/jar/JarInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        246: astore        4\n        248: aload         4\n-       250: invokevirtual #31                 // Method java/util/jar/JarInputStream.getNextJarEntry:()Ljava/util/jar/JarEntry;\n+       250: invokevirtual #83                 // Method java/util/jar/JarInputStream.getNextJarEntry:()Ljava/util/jar/JarEntry;\n        253: dup\n        254: astore        5\n        256: ifnull        324\n        259: aload_0\n-       260: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       260: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n        263: aload         5\n-       265: invokevirtual #32                 // Method java/util/jar/JarOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V\n+       265: invokevirtual #87                 // Method java/util/jar/JarOutputStream.putNextEntry:(Ljava/util/zip/ZipEntry;)V\n        268: sipush        16384\n        271: newarray       byte\n        273: astore        6\n        275: aload         4\n        277: aload         6\n-       279: invokevirtual #33                 // Method java/util/jar/JarInputStream.read:([B)I\n+       279: invokevirtual #91                 // Method java/util/jar/JarInputStream.read:([B)I\n        282: istore        7\n        284: iload         7\n        286: iconst_m1\n        287: if_icmpeq     314\n        290: aload_0\n-       291: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       291: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n        294: aload         6\n        296: iconst_0\n        297: iload         7\n-       299: invokevirtual #34                 // Method java/util/jar/JarOutputStream.write:([BII)V\n+       299: invokevirtual #94                 // Method java/util/jar/JarOutputStream.write:([BII)V\n        302: aload         4\n        304: aload         6\n-       306: invokevirtual #33                 // Method java/util/jar/JarInputStream.read:([B)I\n+       306: invokevirtual #91                 // Method java/util/jar/JarInputStream.read:([B)I\n        309: istore        7\n        311: goto          284\n        314: aload_0\n-       315: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n-       318: invokevirtual #35                 // Method java/util/jar/JarOutputStream.closeEntry:()V\n+       315: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       318: invokevirtual #98                 // Method java/util/jar/JarOutputStream.closeEntry:()V\n        321: goto          248\n        324: goto          528\n        327: iconst_0\n        328: istore        4\n        330: aload_0\n        331: aload_0\n-       332: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       335: invokespecial #36                 // Method available:(Ljava/io/InputStream;)Z\n+       332: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       335: invokespecial #101                // Method available:(Ljava/io/InputStream;)Z\n        338: ifeq          528\n        341: iinc          4, 1\n-       344: new           #2                  // class org/apache/commons/compress/harmony/unpack200/Segment\n+       344: new           #7                  // class org/apache/commons/compress/harmony/unpack200/Segment\n        347: dup\n-       348: invokespecial #37                 // Method org/apache/commons/compress/harmony/unpack200/Segment.\"<init>\":()V\n+       348: invokespecial #105                // Method org/apache/commons/compress/harmony/unpack200/Segment.\"<init>\":()V\n        351: astore        5\n        353: aload         5\n        355: aload_0\n-       356: getfield      #3                  // Field logLevel:I\n-       359: invokevirtual #38                 // Method org/apache/commons/compress/harmony/unpack200/Segment.setLogLevel:(I)V\n+       356: getfield      #9                  // Field logLevel:I\n+       359: invokevirtual #106                // Method org/apache/commons/compress/harmony/unpack200/Segment.setLogLevel:(I)V\n        362: aload         5\n        364: aload_0\n-       365: getfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n+       365: getfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n        368: ifnull        378\n        371: aload_0\n-       372: getfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n+       372: getfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n        375: goto          381\n-       378: getstatic     #40                 // Field java/lang/System.out:Ljava/io/PrintStream;\n-       381: invokevirtual #41                 // Method org/apache/commons/compress/harmony/unpack200/Segment.setLogStream:(Ljava/io/OutputStream;)V\n+       378: getstatic     #113                // Field java/lang/System.out:Ljava/io/PrintStream;\n+       381: invokevirtual #119                // Method org/apache/commons/compress/harmony/unpack200/Segment.setLogStream:(Ljava/io/OutputStream;)V\n        384: aload         5\n        386: iconst_0\n-       387: invokevirtual #42                 // Method org/apache/commons/compress/harmony/unpack200/Segment.setPreRead:(Z)V\n+       387: invokevirtual #122                // Method org/apache/commons/compress/harmony/unpack200/Segment.setPreRead:(Z)V\n        390: iload         4\n        392: iconst_1\n        393: if_icmpne     436\n        396: aload         5\n        398: iconst_2\n-       399: new           #43                 // class java/lang/StringBuilder\n+       399: new           #126                // class java/lang/StringBuilder\n        402: dup\n-       403: invokespecial #44                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       406: ldc           #45                 // String Unpacking from\n-       408: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       403: invokespecial #128                // Method java/lang/StringBuilder.\"<init>\":()V\n+       406: ldc           #129                // String Unpacking from\n+       408: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        411: aload_0\n-       412: getfield      #4                  // Field inputFileName:Ljava/lang/String;\n-       415: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       418: ldc           #47                 // String  to\n-       420: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       412: getfield      #15                 // Field inputFileName:Ljava/lang/String;\n+       415: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       418: ldc           #135                // String  to\n+       420: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        423: aload_0\n-       424: getfield      #5                  // Field outputFileName:Ljava/lang/String;\n-       427: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       430: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       433: invokevirtual #49                 // Method org/apache/commons/compress/harmony/unpack200/Segment.log:(ILjava/lang/String;)V\n+       424: getfield      #19                 // Field outputFileName:Ljava/lang/String;\n+       427: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       430: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       433: invokevirtual #141                // Method org/apache/commons/compress/harmony/unpack200/Segment.log:(ILjava/lang/String;)V\n        436: aload         5\n        438: iconst_2\n-       439: new           #43                 // class java/lang/StringBuilder\n+       439: new           #126                // class java/lang/StringBuilder\n        442: dup\n-       443: invokespecial #44                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       446: ldc           #50                 // String Reading segment\n-       448: invokevirtual #46                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       443: invokespecial #128                // Method java/lang/StringBuilder.\"<init>\":()V\n+       446: ldc           #145                // String Reading segment\n+       448: invokevirtual #131                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        451: iload         4\n-       453: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       456: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       459: invokevirtual #49                 // Method org/apache/commons/compress/harmony/unpack200/Segment.log:(ILjava/lang/String;)V\n+       453: invokevirtual #147                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       456: invokevirtual #137                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       459: invokevirtual #141                // Method org/apache/commons/compress/harmony/unpack200/Segment.log:(ILjava/lang/String;)V\n        462: aload_0\n-       463: getfield      #52                 // Field overrideDeflateHint:Z\n+       463: getfield      #150                // Field overrideDeflateHint:Z\n        466: ifeq          478\n        469: aload         5\n        471: aload_0\n-       472: getfield      #53                 // Field deflateHint:Z\n-       475: invokevirtual #54                 // Method org/apache/commons/compress/harmony/unpack200/Segment.overrideDeflateHint:(Z)V\n+       472: getfield      #154                // Field deflateHint:Z\n+       475: invokevirtual #157                // Method org/apache/commons/compress/harmony/unpack200/Segment.overrideDeflateHint:(Z)V\n        478: aload         5\n        480: aload_0\n-       481: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n+       481: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n        484: aload_0\n-       485: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n-       488: invokevirtual #55                 // Method org/apache/commons/compress/harmony/unpack200/Segment.unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n+       485: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       488: invokevirtual #159                // Method org/apache/commons/compress/harmony/unpack200/Segment.unpack:(Ljava/io/InputStream;Ljava/util/jar/JarOutputStream;)V\n        491: aload_0\n-       492: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n-       495: invokevirtual #56                 // Method java/util/jar/JarOutputStream.flush:()V\n+       492: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       495: invokevirtual #163                // Method java/util/jar/JarOutputStream.flush:()V\n        498: aload_0\n-       499: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       502: instanceof    #6                  // class java/io/FileInputStream\n+       499: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       502: instanceof    #22                 // class java/io/FileInputStream\n        505: ifeq          525\n        508: aload_0\n        509: aload_0\n-       510: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       513: checkcast     #6                  // class java/io/FileInputStream\n-       516: invokevirtual #57                 // Method java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;\n-       519: invokevirtual #58                 // Method java/lang/Object.toString:()Ljava/lang/String;\n-       522: putfield      #4                  // Field inputFileName:Ljava/lang/String;\n+       510: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       513: checkcast     #22                 // class java/io/FileInputStream\n+       516: invokevirtual #166                // Method java/io/FileInputStream.getFD:()Ljava/io/FileDescriptor;\n+       519: invokevirtual #170                // Method java/lang/Object.toString:()Ljava/lang/String;\n+       522: putfield      #15                 // Field inputFileName:Ljava/lang/String;\n        525: goto          330\n        528: aload_0\n-       529: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       532: invokevirtual #59                 // Method java/io/InputStream.close:()V\n+       529: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       532: invokevirtual #171                // Method java/io/InputStream.close:()V\n        535: goto          539\n        538: astore_1\n        539: aload_0\n-       540: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n-       543: invokevirtual #61                 // Method java/util/jar/JarOutputStream.close:()V\n+       540: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       543: invokevirtual #176                // Method java/util/jar/JarOutputStream.close:()V\n        546: goto          550\n        549: astore_1\n        550: aload_0\n-       551: getfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n+       551: getfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n        554: ifnull        619\n        557: aload_0\n-       558: getfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n-       561: invokevirtual #62                 // Method java/io/FileOutputStream.close:()V\n+       558: getfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n+       561: invokevirtual #177                // Method java/io/FileOutputStream.close:()V\n        564: goto          619\n        567: astore_1\n        568: goto          619\n        571: astore        8\n        573: aload_0\n-       574: getfield      #8                  // Field inputStream:Ljava/io/InputStream;\n-       577: invokevirtual #59                 // Method java/io/InputStream.close:()V\n+       574: getfield      #27                 // Field inputStream:Ljava/io/InputStream;\n+       577: invokevirtual #171                // Method java/io/InputStream.close:()V\n        580: goto          585\n        583: astore        9\n        585: aload_0\n-       586: getfield      #15                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n-       589: invokevirtual #61                 // Method java/util/jar/JarOutputStream.close:()V\n+       586: getfield      #42                 // Field outputStream:Ljava/util/jar/JarOutputStream;\n+       589: invokevirtual #176                // Method java/util/jar/JarOutputStream.close:()V\n        592: goto          597\n        595: astore        9\n        597: aload_0\n-       598: getfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n+       598: getfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n        601: ifnull        616\n        604: aload_0\n-       605: getfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n-       608: invokevirtual #62                 // Method java/io/FileOutputStream.close:()V\n+       605: getfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n+       608: invokevirtual #177                // Method java/io/FileOutputStream.close:()V\n        611: goto          616\n        614: astore        9\n        616: aload         8\n        618: athrow\n        619: aload_0\n-       620: getfield      #63                 // Field removePackFile:Z\n+       620: getfield      #178                // Field removePackFile:Z\n        623: ifeq          666\n        626: iconst_0\n        627: istore_1\n        628: aload_0\n-       629: getfield      #4                  // Field inputFileName:Ljava/lang/String;\n+       629: getfield      #15                 // Field inputFileName:Ljava/lang/String;\n        632: ifnull        652\n-       635: new           #64                 // class java/io/File\n+       635: new           #181                // class java/io/File\n        638: dup\n        639: aload_0\n-       640: getfield      #4                  // Field inputFileName:Ljava/lang/String;\n-       643: invokespecial #65                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+       640: getfield      #15                 // Field inputFileName:Ljava/lang/String;\n+       643: invokespecial #183                // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n        646: astore_2\n        647: aload_2\n-       648: invokevirtual #66                 // Method java/io/File.delete:()Z\n+       648: invokevirtual #184                // Method java/io/File.delete:()Z\n        651: istore_1\n        652: iload_1\n        653: ifne          666\n-       656: new           #67                 // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n+       656: new           #187                // class org/apache/commons/compress/harmony/pack200/Pack200Exception\n        659: dup\n-       660: ldc           #68                 // String Failed to delete the input file.\n-       662: invokespecial #69                 // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+       660: ldc           #189                // String Failed to delete the input file.\n+       662: invokespecial #191                // Method org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n        665: athrow\n        666: return\n       Exception table:\n          from    to  target type\n            528   535   538   Class java/lang/Exception\n            539   546   549   Class java/lang/Exception\n            557   564   567   Class java/lang/Exception\n@@ -832,20 +832,20 @@\n   private boolean available(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n          1: iconst_1\n-         2: invokevirtual #23                 // Method java/io/InputStream.mark:(I)V\n+         2: invokevirtual #65                 // Method java/io/InputStream.mark:(I)V\n          5: aload_1\n-         6: invokevirtual #24                 // Method java/io/InputStream.read:()I\n+         6: invokevirtual #69                 // Method java/io/InputStream.read:()I\n          9: istore_2\n         10: aload_1\n-        11: invokevirtual #27                 // Method java/io/InputStream.reset:()V\n+        11: invokevirtual #76                 // Method java/io/InputStream.reset:()V\n         14: iload_2\n         15: iconst_m1\n         16: if_icmpeq     23\n         19: iconst_1\n         20: goto          24\n         23: iconst_0\n         24: ireturn\n@@ -866,38 +866,38 @@\n   public void setRemovePackFile(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #63                 // Field removePackFile:Z\n+         2: putfield      #178                // Field removePackFile:Z\n          5: return\n       LineNumberTable:\n         line 204: 0\n         line 205: 5\n \n   public void setVerbose(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          12\n          4: aload_0\n          5: iconst_2\n-         6: putfield      #3                  // Field logLevel:I\n+         6: putfield      #9                  // Field logLevel:I\n          9: goto          25\n         12: aload_0\n-        13: getfield      #3                  // Field logLevel:I\n+        13: getfield      #9                  // Field logLevel:I\n         16: iconst_2\n         17: if_icmpne     25\n         20: aload_0\n         21: iconst_1\n-        22: putfield      #3                  // Field logLevel:I\n+        22: putfield      #9                  // Field logLevel:I\n         25: return\n       LineNumberTable:\n         line 208: 0\n         line 209: 4\n         line 210: 12\n         line 211: 20\n         line 213: 25\n@@ -910,22 +910,22 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: ifeq          12\n          4: aload_0\n          5: iconst_0\n-         6: putfield      #3                  // Field logLevel:I\n+         6: putfield      #9                  // Field logLevel:I\n          9: goto          24\n         12: aload_0\n-        13: getfield      #3                  // Field logLevel:I\n+        13: getfield      #9                  // Field logLevel:I\n         16: ifne          24\n         19: aload_0\n         20: iconst_0\n-        21: putfield      #3                  // Field logLevel:I\n+        21: putfield      #9                  // Field logLevel:I\n         24: return\n       LineNumberTable:\n         line 216: 0\n         line 217: 4\n         line 218: 12\n         line 219: 19\n         line 221: 24\n@@ -935,56 +935,56 @@\n \n   public void setLogFile(java.lang.String) throws java.io.FileNotFoundException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: new           #11                 // class java/io/FileOutputStream\n+         1: new           #35                 // class java/io/FileOutputStream\n          4: dup\n          5: aload_1\n-         6: invokespecial #12                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;)V\n-         9: putfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n+         6: invokespecial #37                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;)V\n+         9: putfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n         12: return\n       LineNumberTable:\n         line 224: 0\n         line 225: 12\n     Exceptions:\n       throws java.io.FileNotFoundException\n \n   public void setLogFile(java.lang.String, boolean) throws java.io.FileNotFoundException;\n     descriptor: (Ljava/lang/String;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n-         1: new           #11                 // class java/io/FileOutputStream\n+         1: new           #35                 // class java/io/FileOutputStream\n          4: dup\n          5: aload_1\n          6: iload_2\n-         7: invokespecial #70                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n-        10: putfield      #39                 // Field logFile:Ljava/io/FileOutputStream;\n+         7: invokespecial #192                // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n+        10: putfield      #109                // Field logFile:Ljava/io/FileOutputStream;\n         13: return\n       LineNumberTable:\n         line 228: 0\n         line 229: 13\n     Exceptions:\n       throws java.io.FileNotFoundException\n \n   public void setDeflateHint(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #52                 // Field overrideDeflateHint:Z\n+         2: putfield      #150                // Field overrideDeflateHint:Z\n          5: aload_0\n          6: iload_1\n-         7: putfield      #53                 // Field deflateHint:Z\n+         7: putfield      #154                // Field deflateHint:Z\n         10: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 5\n         line 234: 10\n }\n SourceFile: \"Archive.java\"\n"}]}
