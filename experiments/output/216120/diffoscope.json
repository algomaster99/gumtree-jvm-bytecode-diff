{"diffoscope-json-version": 1, "source1": "first/SIPUSH.class", "source2": "second/SIPUSH.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,37 +13,37 @@\n     }\n     \n     public SIPUSH(final short b) {\n         super((short)17, (short)3);\n         this.b = b;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitPushInstruction((PushInstruction)this);\n-        v.visitStackProducer((StackProducer)this);\n-        v.visitTypedInstruction((TypedInstruction)this);\n-        v.visitConstantPushInstruction((ConstantPushInstruction)this);\n-        v.visitSIPUSH(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitPushInstruction((PushInstruction)this);\n+        visitor.visitStackProducer((StackProducer)this);\n+        visitor.visitTypedInstruction((TypedInstruction)this);\n+        visitor.visitConstantPushInstruction((ConstantPushInstruction)this);\n+        visitor.visitSIPUSH(this);\n     }\n     \n-    public void dump(final DataOutputStream out) throws IOException {\n-        super.dump(out);\n-        out.writeShort(this.b);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        super.dump(dataOutputStream);\n+        dataOutputStream.writeShort(this.b);\n     }\n     \n-    public Type getType(final ConstantPoolGen cp) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n         return (Type)Type.SHORT;\n     }\n     \n     public Number getValue() {\n         return Integer.valueOf(this.b);\n     }\n     \n-    protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException {\n+    protected void initFromFile(final ByteSequence byteSequence, final boolean b) throws IOException {\n         super.setLength(3);\n-        this.b = bytes.readShort();\n+        this.b = byteSequence.readShort();\n     }\n     \n-    public String toString(final boolean verbose) {\n-        return super.toString(verbose) + \" \" + this.b;\n+    public String toString(final boolean b) {\n+        return super.toString(b) + \" \" + this.b;\n     }\n }\n"}]}
