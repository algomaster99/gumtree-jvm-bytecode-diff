{"diffoscope-json-version": 1, "source1": "first/Visitor.class", "source2": "second/Visitor.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,93 +1,93 @@\n \n package org.apache.bcel.classfile;\n \n public interface Visitor\n {\n-    void visitAnnotation(final Annotations obj);\n+    void visitAnnotation(final Annotations p0);\n     \n-    void visitAnnotationDefault(final AnnotationDefault obj);\n+    void visitAnnotationDefault(final AnnotationDefault p0);\n     \n-    void visitAnnotationEntry(final AnnotationEntry obj);\n+    void visitAnnotationEntry(final AnnotationEntry p0);\n     \n-    void visitBootstrapMethods(final BootstrapMethods obj);\n+    void visitBootstrapMethods(final BootstrapMethods p0);\n     \n-    void visitCode(final Code obj);\n+    void visitCode(final Code p0);\n     \n-    void visitCodeException(final CodeException obj);\n+    void visitCodeException(final CodeException p0);\n     \n-    void visitConstantClass(final ConstantClass obj);\n+    void visitConstantClass(final ConstantClass p0);\n     \n-    void visitConstantDouble(final ConstantDouble obj);\n+    void visitConstantDouble(final ConstantDouble p0);\n     \n     default void visitConstantDynamic(final ConstantDynamic constantDynamic) {\n     }\n     \n-    void visitConstantFieldref(final ConstantFieldref obj);\n+    void visitConstantFieldref(final ConstantFieldref p0);\n     \n-    void visitConstantFloat(final ConstantFloat obj);\n+    void visitConstantFloat(final ConstantFloat p0);\n     \n-    void visitConstantInteger(final ConstantInteger obj);\n+    void visitConstantInteger(final ConstantInteger p0);\n     \n-    void visitConstantInterfaceMethodref(final ConstantInterfaceMethodref obj);\n+    void visitConstantInterfaceMethodref(final ConstantInterfaceMethodref p0);\n     \n-    void visitConstantInvokeDynamic(final ConstantInvokeDynamic obj);\n+    void visitConstantInvokeDynamic(final ConstantInvokeDynamic p0);\n     \n-    void visitConstantLong(final ConstantLong obj);\n+    void visitConstantLong(final ConstantLong p0);\n     \n-    void visitConstantMethodHandle(final ConstantMethodHandle obj);\n+    void visitConstantMethodHandle(final ConstantMethodHandle p0);\n     \n-    void visitConstantMethodref(final ConstantMethodref obj);\n+    void visitConstantMethodref(final ConstantMethodref p0);\n     \n-    void visitConstantMethodType(final ConstantMethodType obj);\n+    void visitConstantMethodType(final ConstantMethodType p0);\n     \n-    void visitConstantModule(final ConstantModule constantModule);\n+    void visitConstantModule(final ConstantModule p0);\n     \n-    void visitConstantNameAndType(final ConstantNameAndType obj);\n+    void visitConstantNameAndType(final ConstantNameAndType p0);\n     \n-    void visitConstantPackage(final ConstantPackage constantPackage);\n+    void visitConstantPackage(final ConstantPackage p0);\n     \n-    void visitConstantPool(final ConstantPool obj);\n+    void visitConstantPool(final ConstantPool p0);\n     \n-    void visitConstantString(final ConstantString obj);\n+    void visitConstantString(final ConstantString p0);\n     \n-    void visitConstantUtf8(final ConstantUtf8 obj);\n+    void visitConstantUtf8(final ConstantUtf8 p0);\n     \n-    void visitConstantValue(final ConstantValue obj);\n+    void visitConstantValue(final ConstantValue p0);\n     \n-    void visitDeprecated(final Deprecated obj);\n+    void visitDeprecated(final Deprecated p0);\n     \n-    void visitEnclosingMethod(final EnclosingMethod obj);\n+    void visitEnclosingMethod(final EnclosingMethod p0);\n     \n-    void visitExceptionTable(final ExceptionTable obj);\n+    void visitExceptionTable(final ExceptionTable p0);\n     \n-    void visitField(final Field obj);\n+    void visitField(final Field p0);\n     \n-    void visitInnerClass(final InnerClass obj);\n+    void visitInnerClass(final InnerClass p0);\n     \n-    void visitInnerClasses(final InnerClasses obj);\n+    void visitInnerClasses(final InnerClasses p0);\n     \n-    void visitJavaClass(final JavaClass obj);\n+    void visitJavaClass(final JavaClass p0);\n     \n-    void visitLineNumber(final LineNumber obj);\n+    void visitLineNumber(final LineNumber p0);\n     \n-    void visitLineNumberTable(final LineNumberTable obj);\n+    void visitLineNumberTable(final LineNumberTable p0);\n     \n-    void visitLocalVariable(final LocalVariable obj);\n+    void visitLocalVariable(final LocalVariable p0);\n     \n-    void visitLocalVariableTable(final LocalVariableTable obj);\n+    void visitLocalVariableTable(final LocalVariableTable p0);\n     \n-    void visitLocalVariableTypeTable(final LocalVariableTypeTable obj);\n+    void visitLocalVariableTypeTable(final LocalVariableTypeTable p0);\n     \n-    void visitMethod(final Method obj);\n+    void visitMethod(final Method p0);\n     \n     default void visitMethodParameter(final MethodParameter obj) {\n     }\n     \n-    void visitMethodParameters(final MethodParameters obj);\n+    void visitMethodParameters(final MethodParameters p0);\n     \n     default void visitModule(final Module constantModule) {\n     }\n     \n     default void visitModuleExports(final ModuleExports constantModule) {\n     }\n     \n@@ -108,23 +108,23 @@\n     \n     default void visitNestHost(final NestHost obj) {\n     }\n     \n     default void visitNestMembers(final NestMembers obj) {\n     }\n     \n-    void visitParameterAnnotation(final ParameterAnnotations obj);\n+    void visitParameterAnnotation(final ParameterAnnotations p0);\n     \n-    void visitParameterAnnotationEntry(final ParameterAnnotationEntry obj);\n+    void visitParameterAnnotationEntry(final ParameterAnnotationEntry p0);\n     \n-    void visitSignature(final Signature obj);\n+    void visitSignature(final Signature p0);\n     \n-    void visitSourceFile(final SourceFile obj);\n+    void visitSourceFile(final SourceFile p0);\n     \n-    void visitStackMap(final StackMap obj);\n+    void visitStackMap(final StackMap p0);\n     \n-    void visitStackMapEntry(final StackMapEntry obj);\n+    void visitStackMapEntry(final StackMapEntry p0);\n     \n-    void visitSynthetic(final Synthetic obj);\n+    void visitSynthetic(final Synthetic p0);\n     \n-    void visitUnknown(final Unknown obj);\n+    void visitUnknown(final Unknown p0);\n }\n"}]}
