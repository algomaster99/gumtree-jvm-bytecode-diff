{"diffoscope-json-version": 1, "source1": "first/ArchiveInputStream.class", "source2": "second/ArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,71 +1,71 @@\n-  SHA-256 checksum cf09ef557fb666ec5a722310a7f4d74247b72882a5780da4ec8e4f3ca2bd5202\n+  SHA-256 checksum 5b9c75b1777515b015ab6f127c89a13c5002634bf25e914bbdabeccb8083c697\n   Compiled from \"ArchiveInputStream.java\"\n public abstract class org.apache.commons.compress.archivers.ArchiveInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/compress/archivers/ArchiveInputStream\n-  super_class: #2                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/compress/archivers/ArchiveInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 3, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/io/InputStream.\"<init>\":()V\n-   #2 = Class              #4             // java/io/InputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/ArchiveInputStream\n+   #2 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n+   #3 = Class              #4             // java/io/InputStream\n    #4 = Utf8               java/io/InputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // org/apache/commons/compress/archivers/ArchiveInputStream.single:[B\n-   #8 = Class              #10            // org/apache/commons/compress/archivers/ArchiveInputStream\n-   #9 = NameAndType        #11:#12        // single:[B\n-  #10 = Utf8               org/apache/commons/compress/archivers/ArchiveInputStream\n-  #11 = Utf8               single\n-  #12 = Utf8               [B\n-  #13 = Methodref          #8.#14         // org/apache/commons/compress/archivers/ArchiveInputStream.count:(J)V\n-  #14 = NameAndType        #15:#16        // count:(J)V\n-  #15 = Utf8               count\n-  #16 = Utf8               (J)V\n-  #17 = Long               -1l\n-  #19 = Fieldref           #8.#20         // org/apache/commons/compress/archivers/ArchiveInputStream.bytesRead:J\n-  #20 = NameAndType        #21:#22        // bytesRead:J\n-  #21 = Utf8               bytesRead\n-  #22 = Utf8               J\n-  #23 = Methodref          #8.#24         // org/apache/commons/compress/archivers/ArchiveInputStream.read:([BII)I\n-  #24 = NameAndType        #25:#26        // read:([BII)I\n-  #25 = Utf8               read\n-  #26 = Utf8               ([BII)I\n-  #27 = Utf8               BYTE_MASK\n-  #28 = Utf8               I\n-  #29 = Utf8               ConstantValue\n-  #30 = Integer            255\n-  #31 = Utf8               Code\n-  #32 = Utf8               LineNumberTable\n-  #33 = Utf8               LocalVariableTable\n-  #34 = Utf8               this\n-  #35 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-  #36 = Utf8               canReadEntryData\n-  #37 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n-  #38 = Utf8               archiveEntry\n-  #39 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #40 = Utf8               (I)V\n-  #41 = Utf8               StackMapTable\n-  #42 = Utf8               getBytesRead\n-  #43 = Utf8               ()J\n-  #44 = Utf8               getCount\n-  #45 = Utf8               ()I\n-  #46 = Utf8               Deprecated\n-  #47 = Utf8               RuntimeVisibleAnnotations\n-  #48 = Utf8               Ljava/lang/Deprecated;\n-  #49 = Utf8               getNextEntry\n-  #50 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n-  #51 = Utf8               Exceptions\n-  #52 = Class              #53            // java/io/IOException\n-  #53 = Utf8               java/io/IOException\n-  #54 = Utf8               pushedBackBytes\n-  #55 = Utf8               pushedBack\n+   #5 = Utf8               BYTE_MASK\n+   #6 = Utf8               I\n+   #7 = Utf8               ConstantValue\n+   #8 = Integer            255\n+   #9 = Utf8               single\n+  #10 = Utf8               [B\n+  #11 = Utf8               bytesRead\n+  #12 = Utf8               J\n+  #13 = Utf8               <init>\n+  #14 = Utf8               ()V\n+  #15 = Utf8               Code\n+  #16 = Methodref          #3.#17         // java/io/InputStream.\"<init>\":()V\n+  #17 = NameAndType        #13:#14        // \"<init>\":()V\n+  #18 = Fieldref           #1.#19         // org/apache/commons/compress/archivers/ArchiveInputStream.single:[B\n+  #19 = NameAndType        #9:#10         // single:[B\n+  #20 = Utf8               LineNumberTable\n+  #21 = Utf8               LocalVariableTable\n+  #22 = Utf8               this\n+  #23 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n+  #24 = Utf8               canReadEntryData\n+  #25 = Utf8               (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n+  #26 = Utf8               archiveEntry\n+  #27 = Utf8               Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #28 = Utf8               count\n+  #29 = Utf8               (I)V\n+  #30 = Methodref          #1.#31         // org/apache/commons/compress/archivers/ArchiveInputStream.count:(J)V\n+  #31 = NameAndType        #28:#32        // count:(J)V\n+  #32 = Utf8               (J)V\n+  #33 = Utf8               read\n+  #34 = Long               -1l\n+  #36 = Fieldref           #1.#37         // org/apache/commons/compress/archivers/ArchiveInputStream.bytesRead:J\n+  #37 = NameAndType        #11:#12        // bytesRead:J\n+  #38 = Utf8               StackMapTable\n+  #39 = Utf8               getBytesRead\n+  #40 = Utf8               ()J\n+  #41 = Utf8               getCount\n+  #42 = Utf8               ()I\n+  #43 = Utf8               Deprecated\n+  #44 = Utf8               RuntimeVisibleAnnotations\n+  #45 = Utf8               Ljava/lang/Deprecated;\n+  #46 = Utf8               getNextEntry\n+  #47 = Utf8               ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n+  #48 = Utf8               Exceptions\n+  #49 = Class              #50            // java/io/IOException\n+  #50 = Utf8               java/io/IOException\n+  #51 = Utf8               pushedBackBytes\n+  #52 = Utf8               pushedBack\n+  #53 = Methodref          #1.#54         // org/apache/commons/compress/archivers/ArchiveInputStream.read:([BII)I\n+  #54 = NameAndType        #33:#55        // read:([BII)I\n+  #55 = Utf8               ([BII)I\n   #56 = Utf8               num\n   #57 = Utf8               SourceFile\n   #58 = Utf8               ArchiveInputStream.java\n {\n   private static final int BYTE_MASK = 255;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n@@ -81,23 +81,24 @@\n \n   public org.apache.commons.compress.archivers.ArchiveInputStream();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #16                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #7                  // Field single:[B\n+         8: putfield      #18                 // Field single:[B\n         11: return\n       LineNumberTable:\n         line 40: 0\n         line 43: 4\n+        line 40: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n \n   public boolean canReadEntryData(org.apache.commons.compress.archivers.ArchiveEntry);\n     descriptor: (Lorg/apache/commons/compress/archivers/ArchiveEntry;)Z\n     flags: (0x0001) ACC_PUBLIC\n@@ -116,15 +117,15 @@\n     descriptor: (I)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2l\n-         3: invokevirtual #13                 // Method count:(J)V\n+         3: invokevirtual #30                 // Method count:(J)V\n          6: return\n       LineNumberTable:\n         line 81: 0\n         line 82: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n@@ -132,23 +133,23 @@\n \n   protected void count(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: lload_1\n-         1: ldc2_w        #17                 // long -1l\n+         1: ldc2_w        #34                 // long -1l\n          4: lcmp\n          5: ifeq          18\n          8: aload_0\n-         9: aload_0\n-        10: getfield      #19                 // Field bytesRead:J\n+         9: dup\n+        10: getfield      #36                 // Field bytesRead:J\n         13: lload_1\n         14: ladd\n-        15: putfield      #19                 // Field bytesRead:J\n+        15: putfield      #36                 // Field bytesRead:J\n         18: return\n       LineNumberTable:\n         line 92: 0\n         line 93: 8\n         line 95: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -159,86 +160,88 @@\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field bytesRead:J\n+         1: getfield      #36                 // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n \n   public int getCount();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Deprecated: true\n+    RuntimeVisibleAnnotations:\n+      0: #45()\n+        java.lang.Deprecated\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field bytesRead:J\n+         1: getfield      #36                 // Field bytesRead:J\n          4: l2i\n          5: ireturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n-    Deprecated: true\n-    RuntimeVisibleAnnotations:\n-      0: #48()\n-        java.lang.Deprecated\n \n   public abstract org.apache.commons.compress.archivers.ArchiveEntry getNextEntry() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/compress/archivers/ArchiveEntry;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n   protected void pushedBackBytes(long);\n     descriptor: (J)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #19                 // Field bytesRead:J\n+         2: getfield      #36                 // Field bytesRead:J\n          5: lload_1\n          6: lsub\n-         7: putfield      #19                 // Field bytesRead:J\n+         7: putfield      #36                 // Field bytesRead:J\n         10: return\n       LineNumberTable:\n         line 133: 0\n         line 134: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/archivers/ArchiveInputStream;\n             0      11     1 pushedBack   J\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #7                  // Field single:[B\n+         2: getfield      #18                 // Field single:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #23                 // Method read:([BII)I\n+         7: invokevirtual #53                 // Method read:([BII)I\n         10: istore_1\n         11: iload_1\n         12: iconst_m1\n         13: if_icmpne     20\n         16: iconst_m1\n         17: goto          30\n         20: aload_0\n-        21: getfield      #7                  // Field single:[B\n+        21: getfield      #18                 // Field single:[B\n         24: iconst_0\n         25: baload\n         26: sipush        255\n         29: iand\n         30: ireturn\n       LineNumberTable:\n         line 151: 0\n@@ -249,11 +252,9 @@\n            11      20     1   num   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ArchiveInputStream.java\"\n"}]}
