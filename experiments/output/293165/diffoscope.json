{"diffoscope-json-version": 1, "source1": "first/ParserMinimalBase.class", "source2": "second/ParserMinimalBase.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,161 +1,161 @@\n-  SHA-256 checksum 6894b9136312608755d2e936c5db49dce69187356e2cb2af69e95cb4cff7380c\n+  SHA-256 checksum d7d77ed9bd5033d71e42ce6e3acb784cbfcfbf8456fe334433f6a9eeeb925e03\n   Compiled from \"ParserMinimalBase.java\"\n public abstract class com.fasterxml.jackson.core.base.ParserMinimalBase extends com.fasterxml.jackson.core.JsonParser\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #147                        // com/fasterxml/jackson/core/base/ParserMinimalBase\n   super_class: #148                       // com/fasterxml/jackson/core/JsonParser\n   interfaces: 0, fields: 50, methods: 69, attributes: 1\n Constant pool:\n-    #1 = Class              #394          // java/lang/Integer\n-    #2 = Class              #395          // java/lang/Long\n-    #3 = Class              #396          // com/fasterxml/jackson/core/JsonTokenId\n-    #4 = Methodref          #148.#397     // com/fasterxml/jackson/core/JsonParser.\"<init>\":()V\n-    #5 = Methodref          #148.#398     // com/fasterxml/jackson/core/JsonParser.\"<init>\":(I)V\n-    #6 = Fieldref           #147.#399     // com/fasterxml/jackson/core/base/ParserMinimalBase._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-    #7 = Methodref          #400.#401     // com/fasterxml/jackson/core/JsonToken.id:()I\n-    #8 = Fieldref           #400.#402     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-    #9 = Fieldref           #400.#403     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #10 = Fieldref           #400.#404     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #11 = Methodref          #147.#405     // com/fasterxml/jackson/core/base/ParserMinimalBase.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #12 = Fieldref           #400.#406     // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-   #13 = Methodref          #147.#407     // com/fasterxml/jackson/core/base/ParserMinimalBase._handleEOF:()V\n-   #14 = Methodref          #400.#408     // com/fasterxml/jackson/core/JsonToken.isStructStart:()Z\n-   #15 = Methodref          #400.#409     // com/fasterxml/jackson/core/JsonToken.isStructEnd:()Z\n-   #16 = Fieldref           #400.#410     // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n-   #17 = String             #411          // Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n-   #18 = Methodref          #58.#412      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #19 = Methodref          #413.#414     // java/lang/Class.getName:()Ljava/lang/String;\n-   #20 = Methodref          #147.#415     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #21 = Fieldref           #147.#416     // com/fasterxml/jackson/core/base/ParserMinimalBase._lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n-   #22 = Methodref          #147.#417     // com/fasterxml/jackson/core/base/ParserMinimalBase.getText:()Ljava/lang/String;\n-   #23 = Methodref          #124.#418     // java/lang/String.trim:()Ljava/lang/String;\n-   #24 = String             #419          // true\n-   #25 = Methodref          #124.#420     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #26 = String             #421          // false\n-   #27 = Methodref          #147.#422     // com/fasterxml/jackson/core/base/ParserMinimalBase._hasTextualNull:(Ljava/lang/String;)Z\n-   #28 = Methodref          #147.#423     // com/fasterxml/jackson/core/base/ParserMinimalBase.getIntValue:()I\n-   #29 = Methodref          #147.#424     // com/fasterxml/jackson/core/base/ParserMinimalBase.getEmbeddedObject:()Ljava/lang/Object;\n-   #30 = Class              #425          // java/lang/Boolean\n-   #31 = Methodref          #30.#426      // java/lang/Boolean.booleanValue:()Z\n-   #32 = Fieldref           #400.#427     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #33 = Methodref          #147.#428     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsInt:(I)I\n-   #34 = Methodref          #429.#430     // com/fasterxml/jackson/core/io/NumberInput.parseAsInt:(Ljava/lang/String;I)I\n-   #35 = Class              #431          // java/lang/Number\n-   #36 = Methodref          #35.#432      // java/lang/Number.intValue:()I\n-   #37 = Methodref          #147.#433     // com/fasterxml/jackson/core/base/ParserMinimalBase.getLongValue:()J\n-   #38 = Methodref          #147.#434     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsLong:(J)J\n-   #39 = Methodref          #429.#435     // com/fasterxml/jackson/core/io/NumberInput.parseAsLong:(Ljava/lang/String;J)J\n-   #40 = Methodref          #35.#436      // java/lang/Number.longValue:()J\n-   #41 = Methodref          #147.#437     // com/fasterxml/jackson/core/base/ParserMinimalBase.streamReadConstraints:()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n-   #42 = Methodref          #124.#438     // java/lang/String.length:()I\n-   #43 = Methodref          #439.#440     // com/fasterxml/jackson/core/StreamReadConstraints.validateFPLength:(I)V\n-   #44 = Methodref          #429.#441     // com/fasterxml/jackson/core/io/NumberInput.parseAsDouble:(Ljava/lang/String;D)D\n-   #45 = Methodref          #147.#442     // com/fasterxml/jackson/core/base/ParserMinimalBase.getDoubleValue:()D\n-   #46 = Methodref          #35.#443      // java/lang/Number.doubleValue:()D\n-   #47 = Methodref          #147.#444     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-   #48 = Fieldref           #400.#445     // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-   #49 = Methodref          #147.#446     // com/fasterxml/jackson/core/base/ParserMinimalBase.getCurrentName:()Ljava/lang/String;\n-   #50 = Fieldref           #400.#447     // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-   #51 = Methodref          #400.#448     // com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z\n-   #52 = Methodref          #449.#450     // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-   #53 = Class              #451          // java/lang/IllegalArgumentException\n-   #54 = Methodref          #53.#452      // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n-   #55 = Methodref          #147.#453     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;)V\n-   #56 = String             #454          // null\n-   #57 = String             #455          // Unexpected character (%s) in numeric value\n-   #58 = Class              #456          // java/lang/Object\n-   #59 = Methodref          #147.#457     // com/fasterxml/jackson/core/base/ParserMinimalBase._getCharDesc:(I)Ljava/lang/String;\n-   #60 = Methodref          #124.#458     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #61 = Class              #459          // java/lang/StringBuilder\n-   #62 = Methodref          #61.#397      // java/lang/StringBuilder.\"<init>\":()V\n-   #63 = Methodref          #61.#460      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #64 = String             #461          // :\n-   #65 = Methodref          #61.#462      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #66 = Methodref          #147.#463     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-   #67 = String             #464          // Invalid numeric value:\n-   #68 = Methodref          #147.#465     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;)V\n-   #69 = Methodref          #147.#466     // com/fasterxml/jackson/core/base/ParserMinimalBase.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #70 = Methodref          #147.#467     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #71 = String             #468          // Numeric value (%s) out of range of int (%d - %s)\n-   #72 = Methodref          #147.#469     // com/fasterxml/jackson/core/base/ParserMinimalBase._longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n+    #1 = Class              #391          // java/lang/Integer\n+    #2 = Class              #392          // java/lang/Long\n+    #3 = Class              #393          // com/fasterxml/jackson/core/JsonTokenId\n+    #4 = Methodref          #148.#394     // com/fasterxml/jackson/core/JsonParser.\"<init>\":()V\n+    #5 = Methodref          #148.#395     // com/fasterxml/jackson/core/JsonParser.\"<init>\":(I)V\n+    #6 = Fieldref           #147.#396     // com/fasterxml/jackson/core/base/ParserMinimalBase._currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+    #7 = Methodref          #264.#397     // com/fasterxml/jackson/core/JsonToken.id:()I\n+    #8 = Fieldref           #264.#398     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+    #9 = Fieldref           #264.#399     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #10 = Fieldref           #264.#400     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #11 = Methodref          #147.#401     // com/fasterxml/jackson/core/base/ParserMinimalBase.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #12 = Fieldref           #264.#402     // com/fasterxml/jackson/core/JsonToken.FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+   #13 = Methodref          #147.#403     // com/fasterxml/jackson/core/base/ParserMinimalBase._handleEOF:()V\n+   #14 = Methodref          #264.#404     // com/fasterxml/jackson/core/JsonToken.isStructStart:()Z\n+   #15 = Methodref          #264.#405     // com/fasterxml/jackson/core/JsonToken.isStructEnd:()Z\n+   #16 = Fieldref           #264.#406     // com/fasterxml/jackson/core/JsonToken.NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n+   #17 = String             #407          // Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n+   #18 = Methodref          #58.#408      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #19 = Methodref          #409.#410     // java/lang/Class.getName:()Ljava/lang/String;\n+   #20 = Methodref          #147.#411     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #21 = Fieldref           #147.#412     // com/fasterxml/jackson/core/base/ParserMinimalBase._lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n+   #22 = Methodref          #147.#413     // com/fasterxml/jackson/core/base/ParserMinimalBase.getText:()Ljava/lang/String;\n+   #23 = Methodref          #124.#414     // java/lang/String.trim:()Ljava/lang/String;\n+   #24 = String             #415          // true\n+   #25 = Methodref          #124.#416     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #26 = String             #417          // false\n+   #27 = Methodref          #147.#418     // com/fasterxml/jackson/core/base/ParserMinimalBase._hasTextualNull:(Ljava/lang/String;)Z\n+   #28 = Methodref          #147.#419     // com/fasterxml/jackson/core/base/ParserMinimalBase.getIntValue:()I\n+   #29 = Methodref          #147.#420     // com/fasterxml/jackson/core/base/ParserMinimalBase.getEmbeddedObject:()Ljava/lang/Object;\n+   #30 = Class              #421          // java/lang/Boolean\n+   #31 = Methodref          #30.#422      // java/lang/Boolean.booleanValue:()Z\n+   #32 = Fieldref           #264.#423     // com/fasterxml/jackson/core/JsonToken.VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #33 = Methodref          #147.#424     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsInt:(I)I\n+   #34 = Methodref          #425.#426     // com/fasterxml/jackson/core/io/NumberInput.parseAsInt:(Ljava/lang/String;I)I\n+   #35 = Class              #427          // java/lang/Number\n+   #36 = Methodref          #35.#428      // java/lang/Number.intValue:()I\n+   #37 = Methodref          #147.#429     // com/fasterxml/jackson/core/base/ParserMinimalBase.getLongValue:()J\n+   #38 = Methodref          #147.#430     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsLong:(J)J\n+   #39 = Methodref          #425.#431     // com/fasterxml/jackson/core/io/NumberInput.parseAsLong:(Ljava/lang/String;J)J\n+   #40 = Methodref          #35.#432      // java/lang/Number.longValue:()J\n+   #41 = Methodref          #147.#433     // com/fasterxml/jackson/core/base/ParserMinimalBase.streamReadConstraints:()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n+   #42 = Methodref          #124.#434     // java/lang/String.length:()I\n+   #43 = Methodref          #435.#436     // com/fasterxml/jackson/core/StreamReadConstraints.validateFPLength:(I)V\n+   #44 = Methodref          #425.#437     // com/fasterxml/jackson/core/io/NumberInput.parseAsDouble:(Ljava/lang/String;D)D\n+   #45 = Methodref          #147.#438     // com/fasterxml/jackson/core/base/ParserMinimalBase.getDoubleValue:()D\n+   #46 = Methodref          #35.#439      // java/lang/Number.doubleValue:()D\n+   #47 = Methodref          #147.#440     // com/fasterxml/jackson/core/base/ParserMinimalBase.getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+   #48 = Fieldref           #264.#441     // com/fasterxml/jackson/core/JsonToken.VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+   #49 = Methodref          #147.#442     // com/fasterxml/jackson/core/base/ParserMinimalBase.getCurrentName:()Ljava/lang/String;\n+   #50 = Fieldref           #264.#443     // com/fasterxml/jackson/core/JsonToken.VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+   #51 = Methodref          #264.#444     // com/fasterxml/jackson/core/JsonToken.isScalarValue:()Z\n+   #52 = Methodref          #445.#446     // com/fasterxml/jackson/core/Base64Variant.decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+   #53 = Class              #447          // java/lang/IllegalArgumentException\n+   #54 = Methodref          #53.#448      // java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;\n+   #55 = Methodref          #147.#449     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportError:(Ljava/lang/String;)V\n+   #56 = String             #450          // null\n+   #57 = String             #451          // Unexpected character (%s) in numeric value\n+   #58 = Class              #452          // java/lang/Object\n+   #59 = Methodref          #147.#453     // com/fasterxml/jackson/core/base/ParserMinimalBase._getCharDesc:(I)Ljava/lang/String;\n+   #60 = Methodref          #124.#454     // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #61 = Class              #455          // java/lang/StringBuilder\n+   #62 = Methodref          #61.#394      // java/lang/StringBuilder.\"<init>\":()V\n+   #63 = Methodref          #61.#456      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #64 = String             #457          // :\n+   #65 = Methodref          #61.#458      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #66 = Methodref          #147.#459     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+   #67 = String             #460          // Invalid numeric value:\n+   #68 = Methodref          #147.#461     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;)V\n+   #69 = Methodref          #147.#462     // com/fasterxml/jackson/core/base/ParserMinimalBase.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #70 = Methodref          #147.#463     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #71 = String             #464          // Numeric value (%s) out of range of int (%d - %s)\n+   #72 = Methodref          #147.#465     // com/fasterxml/jackson/core/base/ParserMinimalBase._longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n    #73 = Integer            -2147483648\n-   #74 = Methodref          #1.#470       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #74 = Methodref          #1.#466       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n    #75 = Integer            2147483647\n-   #76 = Fieldref           #1.#471       // java/lang/Integer.TYPE:Ljava/lang/Class;\n-   #77 = Methodref          #147.#472     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-   #78 = Methodref          #147.#473     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;)V\n-   #79 = Methodref          #147.#474     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #80 = String             #475          // Numeric value (%s) out of range of long (%d - %s)\n+   #76 = Fieldref           #1.#467       // java/lang/Integer.TYPE:Ljava/lang/Class;\n+   #77 = Methodref          #147.#468     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+   #78 = Methodref          #147.#469     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;)V\n+   #79 = Methodref          #147.#470     // com/fasterxml/jackson/core/base/ParserMinimalBase.reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #80 = String             #471          // Numeric value (%s) out of range of long (%d - %s)\n    #81 = Long               -9223372036854775808l\n-   #83 = Methodref          #2.#476       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n+   #83 = Methodref          #2.#472       // java/lang/Long.valueOf:(J)Ljava/lang/Long;\n    #84 = Long               9223372036854775807l\n-   #86 = Fieldref           #2.#471       // java/lang/Long.TYPE:Ljava/lang/Class;\n-   #87 = Class              #477          // com/fasterxml/jackson/core/exc/InputCoercionException\n-   #88 = Methodref          #87.#478      // com/fasterxml/jackson/core/exc/InputCoercionException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-   #89 = String             #479          // -\n-   #90 = Methodref          #124.#480     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #91 = String             #481          // [Integer with %d digits]\n-   #92 = String             #482          // [number with %d characters]\n-   #93 = Methodref          #147.#483     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:()V\n-   #94 = String             #484          // Unexpected character (%s)\n-   #95 = String             #485          //  in\n-   #96 = Methodref          #61.#486      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #97 = Methodref          #147.#487     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-   #98 = String             #488          //  in a String value\n-   #99 = String             #489          //  in a Number value\n-  #100 = String             #490          //  in a value\n-  #101 = Class              #491          // com/fasterxml/jackson/core/io/JsonEOFException\n-  #102 = String             #492          // Unexpected end-of-input\n-  #103 = Methodref          #101.#493     // com/fasterxml/jackson/core/io/JsonEOFException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n-  #104 = Methodref          #147.#494     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;)V\n-  #105 = String             #495          // Expected space separating root-level values\n-  #106 = Methodref          #147.#496     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedChar:(ILjava/lang/String;)V\n-  #107 = String             #497          // Illegal character (\n-  #108 = String             #498          // ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n-  #109 = Methodref          #499.#500     // java/lang/Character.isISOControl:(C)Z\n-  #110 = String             #501          // (CTRL-CHAR, code\n-  #111 = Methodref          #61.#502      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #112 = String             #503          // )\n-  #113 = String             #504          // \\'\n-  #114 = Methodref          #61.#505      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #115 = String             #506          // \\' (code\n-  #116 = String             #507          //  / 0x\n-  #117 = Methodref          #1.#508       // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n-  #118 = Methodref          #147.#509     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #119 = Methodref          #147.#510     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #120 = Methodref          #511.#512     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n-  #121 = Class              #513          // com/fasterxml/jackson/core/JsonParseException\n-  #122 = Methodref          #121.#514     // com/fasterxml/jackson/core/JsonParseException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #123 = Methodref          #124.#515     // java/lang/String.charAt:(I)C\n-  #124 = Class              #516          // java/lang/String\n-  #125 = String             #517          // US-ASCII\n-  #126 = Methodref          #124.#518     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-  #127 = Class              #519          // java/io/IOException\n-  #128 = Class              #520          // java/lang/RuntimeException\n-  #129 = Methodref          #128.#521     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #130 = Fieldref           #147.#522     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_BYTES:[B\n-  #131 = Fieldref           #147.#523     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_INTS:[I\n+   #86 = Fieldref           #2.#467       // java/lang/Long.TYPE:Ljava/lang/Class;\n+   #87 = Class              #473          // com/fasterxml/jackson/core/exc/InputCoercionException\n+   #88 = Methodref          #87.#474      // com/fasterxml/jackson/core/exc/InputCoercionException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+   #89 = String             #475          // -\n+   #90 = Methodref          #124.#476     // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #91 = String             #477          // [Integer with %d digits]\n+   #92 = String             #478          // [number with %d characters]\n+   #93 = Methodref          #147.#479     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:()V\n+   #94 = String             #480          // Unexpected character (%s)\n+   #95 = String             #481          //  in\n+   #96 = Methodref          #61.#482      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #97 = Methodref          #147.#483     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+   #98 = String             #484          //  in a String value\n+   #99 = String             #485          //  in a Number value\n+  #100 = String             #486          //  in a value\n+  #101 = Class              #487          // com/fasterxml/jackson/core/io/JsonEOFException\n+  #102 = String             #488          // Unexpected end-of-input\n+  #103 = Methodref          #101.#489     // com/fasterxml/jackson/core/io/JsonEOFException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n+  #104 = Methodref          #147.#490     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportInvalidEOF:(Ljava/lang/String;)V\n+  #105 = String             #491          // Expected space separating root-level values\n+  #106 = Methodref          #147.#492     // com/fasterxml/jackson/core/base/ParserMinimalBase._reportUnexpectedChar:(ILjava/lang/String;)V\n+  #107 = String             #493          // Illegal character (\n+  #108 = String             #494          // ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n+  #109 = Methodref          #495.#496     // java/lang/Character.isISOControl:(C)Z\n+  #110 = String             #497          // (CTRL-CHAR, code\n+  #111 = Methodref          #61.#498      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #112 = String             #499          // )\n+  #113 = String             #500          // \\'\n+  #114 = Methodref          #61.#501      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #115 = String             #502          // \\' (code\n+  #116 = String             #503          //  / 0x\n+  #117 = Methodref          #1.#504       // java/lang/Integer.toHexString:(I)Ljava/lang/String;\n+  #118 = Methodref          #147.#505     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #119 = Methodref          #147.#506     // com/fasterxml/jackson/core/base/ParserMinimalBase._constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #120 = Methodref          #507.#508     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n+  #121 = Class              #509          // com/fasterxml/jackson/core/JsonParseException\n+  #122 = Methodref          #121.#510     // com/fasterxml/jackson/core/JsonParseException.\"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #123 = Methodref          #124.#511     // java/lang/String.charAt:(I)C\n+  #124 = Class              #512          // java/lang/String\n+  #125 = String             #513          // US-ASCII\n+  #126 = Methodref          #124.#514     // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+  #127 = Class              #515          // java/io/IOException\n+  #128 = Class              #516          // java/lang/RuntimeException\n+  #129 = Methodref          #128.#517     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #130 = Fieldref           #147.#518     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_BYTES:[B\n+  #131 = Fieldref           #147.#519     // com/fasterxml/jackson/core/base/ParserMinimalBase.NO_INTS:[I\n   #132 = Long               -2147483648l\n-  #134 = Methodref          #524.#525     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-  #135 = Fieldref           #147.#526     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_INT:Ljava/math/BigInteger;\n+  #134 = Methodref          #520.#521     // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+  #135 = Fieldref           #147.#522     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_INT:Ljava/math/BigInteger;\n   #136 = Long               2147483647l\n-  #138 = Fieldref           #147.#527     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_INT:Ljava/math/BigInteger;\n-  #139 = Fieldref           #147.#528     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_LONG:Ljava/math/BigInteger;\n-  #140 = Fieldref           #147.#529     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_LONG:Ljava/math/BigInteger;\n-  #141 = Class              #530          // java/math/BigDecimal\n-  #142 = Methodref          #141.#531     // java/math/BigDecimal.\"<init>\":(Ljava/math/BigInteger;)V\n-  #143 = Fieldref           #147.#532     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_LONG:Ljava/math/BigDecimal;\n-  #144 = Fieldref           #147.#533     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_LONG:Ljava/math/BigDecimal;\n-  #145 = Fieldref           #147.#534     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_INT:Ljava/math/BigDecimal;\n-  #146 = Fieldref           #147.#535     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_INT:Ljava/math/BigDecimal;\n-  #147 = Class              #536          // com/fasterxml/jackson/core/base/ParserMinimalBase\n-  #148 = Class              #537          // com/fasterxml/jackson/core/JsonParser\n+  #138 = Fieldref           #147.#523     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_INT:Ljava/math/BigInteger;\n+  #139 = Fieldref           #147.#524     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MIN_LONG:Ljava/math/BigInteger;\n+  #140 = Fieldref           #147.#525     // com/fasterxml/jackson/core/base/ParserMinimalBase.BI_MAX_LONG:Ljava/math/BigInteger;\n+  #141 = Class              #526          // java/math/BigDecimal\n+  #142 = Methodref          #141.#527     // java/math/BigDecimal.\"<init>\":(Ljava/math/BigInteger;)V\n+  #143 = Fieldref           #147.#528     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_LONG:Ljava/math/BigDecimal;\n+  #144 = Fieldref           #147.#529     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_LONG:Ljava/math/BigDecimal;\n+  #145 = Fieldref           #147.#530     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MIN_INT:Ljava/math/BigDecimal;\n+  #146 = Fieldref           #147.#531     // com/fasterxml/jackson/core/base/ParserMinimalBase.BD_MAX_INT:Ljava/math/BigDecimal;\n+  #147 = Class              #532          // com/fasterxml/jackson/core/base/ParserMinimalBase\n+  #148 = Class              #533          // com/fasterxml/jackson/core/JsonParser\n   #149 = Utf8               INT_TAB\n   #150 = Utf8               I\n   #151 = Utf8               ConstantValue\n   #152 = Integer            9\n   #153 = Utf8               INT_LF\n   #154 = Integer            10\n   #155 = Utf8               INT_CR\n@@ -259,15 +259,15 @@\n   #257 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n   #258 = Utf8               Exceptions\n   #259 = Utf8               currentToken\n   #260 = Utf8               currentTokenId\n   #261 = Utf8               ()I\n   #262 = Utf8               t\n   #263 = Utf8               StackMapTable\n-  #264 = Class              #538          // com/fasterxml/jackson/core/JsonToken\n+  #264 = Class              #534          // com/fasterxml/jackson/core/JsonToken\n   #265 = Utf8               getCurrentToken\n   #266 = Utf8               getCurrentTokenId\n   #267 = Utf8               Deprecated\n   #268 = Utf8               RuntimeVisibleAnnotations\n   #269 = Utf8               Ljava/lang/Deprecated;\n   #270 = Utf8               hasCurrentToken\n   #271 = Utf8               ()Z\n@@ -306,316 +306,312 @@\n   #304 = Utf8               (Z)Z\n   #305 = Utf8               str\n   #306 = Utf8               Ljava/lang/String;\n   #307 = Utf8               value\n   #308 = Utf8               Ljava/lang/Object;\n   #309 = Utf8               defaultValue\n   #310 = Utf8               Z\n-  #311 = Class              #516          // java/lang/String\n-  #312 = Utf8               getValueAsInt\n-  #313 = Utf8               (I)I\n-  #314 = Utf8               getValueAsLong\n-  #315 = Utf8               ()J\n-  #316 = Utf8               (J)J\n-  #317 = Utf8               getValueAsDouble\n-  #318 = Utf8               (D)D\n-  #319 = Utf8               getValueAsString\n-  #320 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #321 = Utf8               _decodeBase64\n-  #322 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n-  #323 = Utf8               e\n-  #324 = Utf8               Ljava/lang/IllegalArgumentException;\n-  #325 = Utf8               builder\n-  #326 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n-  #327 = Utf8               b64variant\n-  #328 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n-  #329 = Class              #451          // java/lang/IllegalArgumentException\n-  #330 = Utf8               _hasTextualNull\n-  #331 = Utf8               (Ljava/lang/String;)Z\n-  #332 = Utf8               _reportUnexpectedNumberChar\n-  #333 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n-  #334 = Utf8               ch\n-  #335 = Utf8               comment\n-  #336 = Utf8               msg\n-  #337 = Utf8               Signature\n-  #338 = Utf8               <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n-  #339 = Utf8               reportUnexpectedNumberChar\n-  #340 = Utf8               (ILjava/lang/String;)V\n-  #341 = Utf8               reportInvalidNumber\n-  #342 = Utf8               reportOverflowInt\n-  #343 = Utf8               numDesc\n-  #344 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #345 = Utf8               inputType\n-  #346 = Utf8               reportOverflowLong\n-  #347 = Utf8               _reportInputCoercion\n-  #348 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #349 = Utf8               targetType\n-  #350 = Utf8               Ljava/lang/Class;\n-  #351 = Utf8               LocalVariableTypeTable\n-  #352 = Utf8               Ljava/lang/Class<*>;\n-  #353 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n-  #354 = Utf8               _longIntegerDesc\n-  #355 = Utf8               rawNum\n-  #356 = Utf8               rawLen\n-  #357 = Utf8               _longNumberDesc\n-  #358 = Utf8               _reportUnexpectedChar\n-  #359 = Utf8               _reportInvalidEOF\n-  #360 = Utf8               _reportInvalidEOFInValue\n-  #361 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #362 = Utf8               type\n-  #363 = Utf8               currToken\n-  #364 = Utf8               _reportMissingRootWS\n-  #365 = Utf8               _throwInvalidSpace\n-  #366 = Utf8               i\n-  #367 = Utf8               c\n-  #368 = Utf8               _getCharDesc\n-  #369 = Utf8               (I)Ljava/lang/String;\n-  #370 = Utf8               _reportError\n-  #371 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #372 = Utf8               arg\n-  #373 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n-  #374 = Utf8               arg1\n-  #375 = Utf8               arg2\n-  #376 = Utf8               _wrapError\n-  #377 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #378 = Utf8               Ljava/lang/Throwable;\n-  #379 = Utf8               _throwInternal\n-  #380 = Utf8               _constructError\n-  #381 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #382 = Utf8               _asciiBytes\n-  #383 = Utf8               (Ljava/lang/String;)[B\n-  #384 = Utf8               len\n-  #385 = Utf8               b\n-  #386 = Class              #201          // \"[B\"\n-  #387 = Utf8               _ascii\n-  #388 = Utf8               ([B)Ljava/lang/String;\n-  #389 = Utf8               Ljava/io/IOException;\n-  #390 = Class              #519          // java/io/IOException\n-  #391 = Utf8               <clinit>\n-  #392 = Utf8               SourceFile\n-  #393 = Utf8               ParserMinimalBase.java\n-  #394 = Utf8               java/lang/Integer\n-  #395 = Utf8               java/lang/Long\n-  #396 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-  #397 = NameAndType        #247:#248     // \"<init>\":()V\n-  #398 = NameAndType        #247:#254     // \"<init>\":(I)V\n-  #399 = NameAndType        #244:#245     // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n-  #400 = Class              #538          // com/fasterxml/jackson/core/JsonToken\n-  #401 = NameAndType        #274:#261     // id:()I\n-  #402 = NameAndType        #539:#245     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #403 = NameAndType        #540:#245     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #404 = NameAndType        #541:#245     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #405 = NameAndType        #256:#257     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #406 = NameAndType        #542:#245     // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n-  #407 = NameAndType        #284:#248     // _handleEOF:()V\n-  #408 = NameAndType        #543:#271     // isStructStart:()Z\n-  #409 = NameAndType        #544:#271     // isStructEnd:()Z\n-  #410 = NameAndType        #545:#245     // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n-  #411 = Utf8               Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n-  #412 = NameAndType        #546:#547     // getClass:()Ljava/lang/Class;\n-  #413 = Class              #548          // java/lang/Class\n-  #414 = NameAndType        #549:#286     // getName:()Ljava/lang/String;\n-  #415 = NameAndType        #370:#371     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n-  #416 = NameAndType        #246:#245     // _lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n-  #417 = NameAndType        #295:#286     // getText:()Ljava/lang/String;\n-  #418 = NameAndType        #550:#286     // trim:()Ljava/lang/String;\n-  #419 = Utf8               true\n-  #420 = NameAndType        #551:#552     // equals:(Ljava/lang/Object;)Z\n-  #421 = Utf8               false\n-  #422 = NameAndType        #330:#331     // _hasTextualNull:(Ljava/lang/String;)Z\n-  #423 = NameAndType        #553:#261     // getIntValue:()I\n-  #424 = NameAndType        #554:#555     // getEmbeddedObject:()Ljava/lang/Object;\n-  #425 = Utf8               java/lang/Boolean\n-  #426 = NameAndType        #556:#271     // booleanValue:()Z\n-  #427 = NameAndType        #557:#245     // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #428 = NameAndType        #312:#313     // getValueAsInt:(I)I\n-  #429 = Class              #558          // com/fasterxml/jackson/core/io/NumberInput\n-  #430 = NameAndType        #559:#560     // parseAsInt:(Ljava/lang/String;I)I\n-  #431 = Utf8               java/lang/Number\n-  #432 = NameAndType        #561:#261     // intValue:()I\n-  #433 = NameAndType        #562:#315     // getLongValue:()J\n-  #434 = NameAndType        #314:#316     // getValueAsLong:(J)J\n-  #435 = NameAndType        #563:#564     // parseAsLong:(Ljava/lang/String;J)J\n-  #436 = NameAndType        #565:#315     // longValue:()J\n-  #437 = NameAndType        #566:#567     // streamReadConstraints:()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n-  #438 = NameAndType        #568:#261     // length:()I\n-  #439 = Class              #569          // com/fasterxml/jackson/core/StreamReadConstraints\n-  #440 = NameAndType        #570:#254     // validateFPLength:(I)V\n-  #441 = NameAndType        #571:#572     // parseAsDouble:(Ljava/lang/String;D)D\n-  #442 = NameAndType        #573:#574     // getDoubleValue:()D\n-  #443 = NameAndType        #575:#574     // doubleValue:()D\n-  #444 = NameAndType        #319:#320     // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n-  #445 = NameAndType        #576:#245     // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n-  #446 = NameAndType        #285:#286     // getCurrentName:()Ljava/lang/String;\n-  #447 = NameAndType        #577:#245     // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n-  #448 = NameAndType        #578:#271     // isScalarValue:()Z\n-  #449 = Class              #579          // com/fasterxml/jackson/core/Base64Variant\n-  #450 = NameAndType        #580:#581     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #451 = Utf8               java/lang/IllegalArgumentException\n-  #452 = NameAndType        #582:#286     // getMessage:()Ljava/lang/String;\n-  #453 = NameAndType        #370:#294     // _reportError:(Ljava/lang/String;)V\n-  #454 = Utf8               null\n-  #455 = Utf8               Unexpected character (%s) in numeric value\n-  #456 = Utf8               java/lang/Object\n-  #457 = NameAndType        #368:#369     // _getCharDesc:(I)Ljava/lang/String;\n-  #458 = NameAndType        #583:#584     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #459 = Utf8               java/lang/StringBuilder\n-  #460 = NameAndType        #585:#586     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #461 = Utf8               :\n-  #462 = NameAndType        #587:#286     // toString:()Ljava/lang/String;\n-  #463 = NameAndType        #332:#333     // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n-  #464 = Utf8               Invalid numeric value:\n-  #465 = NameAndType        #342:#294     // reportOverflowInt:(Ljava/lang/String;)V\n-  #466 = NameAndType        #259:#257     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #467 = NameAndType        #342:#344     // reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #468 = Utf8               Numeric value (%s) out of range of int (%d - %s)\n-  #469 = NameAndType        #354:#320     // _longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n-  #470 = NameAndType        #588:#589     // valueOf:(I)Ljava/lang/Integer;\n-  #471 = NameAndType        #590:#350     // TYPE:Ljava/lang/Class;\n-  #472 = NameAndType        #347:#348     // _reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #473 = NameAndType        #346:#294     // reportOverflowLong:(Ljava/lang/String;)V\n-  #474 = NameAndType        #346:#344     // reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #475 = Utf8               Numeric value (%s) out of range of long (%d - %s)\n-  #476 = NameAndType        #588:#591     // valueOf:(J)Ljava/lang/Long;\n-  #477 = Utf8               com/fasterxml/jackson/core/exc/InputCoercionException\n-  #478 = NameAndType        #247:#592     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #479 = Utf8               -\n-  #480 = NameAndType        #593:#331     // startsWith:(Ljava/lang/String;)Z\n-  #481 = Utf8               [Integer with %d digits]\n-  #482 = Utf8               [number with %d characters]\n-  #483 = NameAndType        #359:#248     // _reportInvalidEOF:()V\n-  #484 = Utf8               Unexpected character (%s)\n-  #485 = Utf8                in\n-  #486 = NameAndType        #585:#594     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #487 = NameAndType        #359:#344     // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n-  #488 = Utf8                in a String value\n-  #489 = Utf8                in a Number value\n-  #490 = Utf8                in a value\n-  #491 = Utf8               com/fasterxml/jackson/core/io/JsonEOFException\n-  #492 = Utf8               Unexpected end-of-input\n-  #493 = NameAndType        #247:#595     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n-  #494 = NameAndType        #359:#294     // _reportInvalidEOF:(Ljava/lang/String;)V\n-  #495 = Utf8               Expected space separating root-level values\n-  #496 = NameAndType        #358:#340     // _reportUnexpectedChar:(ILjava/lang/String;)V\n-  #497 = Utf8               Illegal character (\n-  #498 = Utf8               ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n-  #499 = Class              #596          // java/lang/Character\n-  #500 = NameAndType        #597:#598     // isISOControl:(C)Z\n-  #501 = Utf8               (CTRL-CHAR, code\n-  #502 = NameAndType        #585:#599     // append:(I)Ljava/lang/StringBuilder;\n-  #503 = Utf8               )\n-  #504 = Utf8               \\'\n-  #505 = NameAndType        #585:#600     // append:(C)Ljava/lang/StringBuilder;\n-  #506 = Utf8               \\' (code\n-  #507 = Utf8                / 0x\n-  #508 = NameAndType        #601:#369     // toHexString:(I)Ljava/lang/String;\n-  #509 = NameAndType        #380:#602     // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #510 = NameAndType        #380:#381     // _constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #511 = Class              #603          // com/fasterxml/jackson/core/util/VersionUtil\n-  #512 = NameAndType        #604:#248     // throwInternal:()V\n-  #513 = Utf8               com/fasterxml/jackson/core/JsonParseException\n-  #514 = NameAndType        #247:#605     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #515 = NameAndType        #606:#607     // charAt:(I)C\n-  #516 = Utf8               java/lang/String\n-  #517 = Utf8               US-ASCII\n-  #518 = NameAndType        #247:#608     // \"<init>\":([BLjava/lang/String;)V\n-  #519 = Utf8               java/io/IOException\n-  #520 = Utf8               java/lang/RuntimeException\n-  #521 = NameAndType        #247:#609     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #522 = NameAndType        #200:#201     // NO_BYTES:[B\n-  #523 = NameAndType        #202:#203     // NO_INTS:[I\n-  #524 = Class              #610          // java/math/BigInteger\n-  #525 = NameAndType        #588:#611     // valueOf:(J)Ljava/math/BigInteger;\n-  #526 = NameAndType        #216:#217     // BI_MIN_INT:Ljava/math/BigInteger;\n-  #527 = NameAndType        #218:#217     // BI_MAX_INT:Ljava/math/BigInteger;\n-  #528 = NameAndType        #219:#217     // BI_MIN_LONG:Ljava/math/BigInteger;\n-  #529 = NameAndType        #220:#217     // BI_MAX_LONG:Ljava/math/BigInteger;\n-  #530 = Utf8               java/math/BigDecimal\n-  #531 = NameAndType        #247:#612     // \"<init>\":(Ljava/math/BigInteger;)V\n-  #532 = NameAndType        #221:#222     // BD_MIN_LONG:Ljava/math/BigDecimal;\n-  #533 = NameAndType        #223:#222     // BD_MAX_LONG:Ljava/math/BigDecimal;\n-  #534 = NameAndType        #224:#222     // BD_MIN_INT:Ljava/math/BigDecimal;\n-  #535 = NameAndType        #225:#222     // BD_MAX_INT:Ljava/math/BigDecimal;\n-  #536 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n-  #537 = Utf8               com/fasterxml/jackson/core/JsonParser\n-  #538 = Utf8               com/fasterxml/jackson/core/JsonToken\n-  #539 = Utf8               START_ARRAY\n-  #540 = Utf8               START_OBJECT\n-  #541 = Utf8               VALUE_NUMBER_INT\n-  #542 = Utf8               FIELD_NAME\n-  #543 = Utf8               isStructStart\n-  #544 = Utf8               isStructEnd\n-  #545 = Utf8               NOT_AVAILABLE\n-  #546 = Utf8               getClass\n-  #547 = Utf8               ()Ljava/lang/Class;\n-  #548 = Utf8               java/lang/Class\n-  #549 = Utf8               getName\n-  #550 = Utf8               trim\n-  #551 = Utf8               equals\n-  #552 = Utf8               (Ljava/lang/Object;)Z\n-  #553 = Utf8               getIntValue\n-  #554 = Utf8               getEmbeddedObject\n-  #555 = Utf8               ()Ljava/lang/Object;\n-  #556 = Utf8               booleanValue\n-  #557 = Utf8               VALUE_NUMBER_FLOAT\n-  #558 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n-  #559 = Utf8               parseAsInt\n-  #560 = Utf8               (Ljava/lang/String;I)I\n-  #561 = Utf8               intValue\n-  #562 = Utf8               getLongValue\n-  #563 = Utf8               parseAsLong\n-  #564 = Utf8               (Ljava/lang/String;J)J\n-  #565 = Utf8               longValue\n-  #566 = Utf8               streamReadConstraints\n-  #567 = Utf8               ()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n-  #568 = Utf8               length\n-  #569 = Utf8               com/fasterxml/jackson/core/StreamReadConstraints\n-  #570 = Utf8               validateFPLength\n-  #571 = Utf8               parseAsDouble\n-  #572 = Utf8               (Ljava/lang/String;D)D\n-  #573 = Utf8               getDoubleValue\n-  #574 = Utf8               ()D\n-  #575 = Utf8               doubleValue\n-  #576 = Utf8               VALUE_STRING\n-  #577 = Utf8               VALUE_NULL\n-  #578 = Utf8               isScalarValue\n-  #579 = Utf8               com/fasterxml/jackson/core/Base64Variant\n-  #580 = Utf8               decode\n-  #581 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n-  #582 = Utf8               getMessage\n-  #583 = Utf8               format\n-  #584 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #585 = Utf8               append\n-  #586 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #587 = Utf8               toString\n-  #588 = Utf8               valueOf\n-  #589 = Utf8               (I)Ljava/lang/Integer;\n-  #590 = Utf8               TYPE\n-  #591 = Utf8               (J)Ljava/lang/Long;\n-  #592 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n-  #593 = Utf8               startsWith\n-  #594 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #595 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n-  #596 = Utf8               java/lang/Character\n-  #597 = Utf8               isISOControl\n-  #598 = Utf8               (C)Z\n-  #599 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #600 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #601 = Utf8               toHexString\n-  #602 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n-  #603 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n-  #604 = Utf8               throwInternal\n-  #605 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #606 = Utf8               charAt\n-  #607 = Utf8               (I)C\n-  #608 = Utf8               ([BLjava/lang/String;)V\n-  #609 = Utf8               (Ljava/lang/Throwable;)V\n-  #610 = Utf8               java/math/BigInteger\n-  #611 = Utf8               (J)Ljava/math/BigInteger;\n-  #612 = Utf8               (Ljava/math/BigInteger;)V\n+  #311 = Utf8               getValueAsInt\n+  #312 = Utf8               (I)I\n+  #313 = Utf8               getValueAsLong\n+  #314 = Utf8               ()J\n+  #315 = Utf8               (J)J\n+  #316 = Utf8               getValueAsDouble\n+  #317 = Utf8               (D)D\n+  #318 = Utf8               getValueAsString\n+  #319 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #320 = Utf8               _decodeBase64\n+  #321 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;Lcom/fasterxml/jackson/core/Base64Variant;)V\n+  #322 = Utf8               e\n+  #323 = Utf8               Ljava/lang/IllegalArgumentException;\n+  #324 = Utf8               builder\n+  #325 = Utf8               Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;\n+  #326 = Utf8               b64variant\n+  #327 = Utf8               Lcom/fasterxml/jackson/core/Base64Variant;\n+  #328 = Utf8               _hasTextualNull\n+  #329 = Utf8               (Ljava/lang/String;)Z\n+  #330 = Utf8               _reportUnexpectedNumberChar\n+  #331 = Utf8               (ILjava/lang/String;)Ljava/lang/Object;\n+  #332 = Utf8               ch\n+  #333 = Utf8               comment\n+  #334 = Utf8               msg\n+  #335 = Utf8               Signature\n+  #336 = Utf8               <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n+  #337 = Utf8               reportUnexpectedNumberChar\n+  #338 = Utf8               (ILjava/lang/String;)V\n+  #339 = Utf8               reportInvalidNumber\n+  #340 = Utf8               reportOverflowInt\n+  #341 = Utf8               numDesc\n+  #342 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #343 = Utf8               inputType\n+  #344 = Utf8               reportOverflowLong\n+  #345 = Utf8               _reportInputCoercion\n+  #346 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #347 = Utf8               targetType\n+  #348 = Utf8               Ljava/lang/Class;\n+  #349 = Utf8               LocalVariableTypeTable\n+  #350 = Utf8               Ljava/lang/Class<*>;\n+  #351 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n+  #352 = Utf8               _longIntegerDesc\n+  #353 = Utf8               rawNum\n+  #354 = Utf8               rawLen\n+  #355 = Utf8               _longNumberDesc\n+  #356 = Utf8               _reportUnexpectedChar\n+  #357 = Utf8               _reportInvalidEOF\n+  #358 = Utf8               _reportInvalidEOFInValue\n+  #359 = Utf8               (Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #360 = Utf8               type\n+  #361 = Utf8               currToken\n+  #362 = Utf8               _reportMissingRootWS\n+  #363 = Utf8               _throwInvalidSpace\n+  #364 = Utf8               i\n+  #365 = Utf8               c\n+  #366 = Utf8               _getCharDesc\n+  #367 = Utf8               (I)Ljava/lang/String;\n+  #368 = Utf8               _reportError\n+  #369 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #370 = Utf8               arg\n+  #371 = Utf8               (Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V\n+  #372 = Utf8               arg1\n+  #373 = Utf8               arg2\n+  #374 = Utf8               _wrapError\n+  #375 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #376 = Utf8               Ljava/lang/Throwable;\n+  #377 = Utf8               _throwInternal\n+  #378 = Utf8               _constructError\n+  #379 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #380 = Utf8               _asciiBytes\n+  #381 = Utf8               (Ljava/lang/String;)[B\n+  #382 = Utf8               len\n+  #383 = Utf8               b\n+  #384 = Class              #201          // \"[B\"\n+  #385 = Utf8               _ascii\n+  #386 = Utf8               ([B)Ljava/lang/String;\n+  #387 = Utf8               Ljava/io/IOException;\n+  #388 = Utf8               <clinit>\n+  #389 = Utf8               SourceFile\n+  #390 = Utf8               ParserMinimalBase.java\n+  #391 = Utf8               java/lang/Integer\n+  #392 = Utf8               java/lang/Long\n+  #393 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+  #394 = NameAndType        #247:#248     // \"<init>\":()V\n+  #395 = NameAndType        #247:#254     // \"<init>\":(I)V\n+  #396 = NameAndType        #244:#245     // _currToken:Lcom/fasterxml/jackson/core/JsonToken;\n+  #397 = NameAndType        #274:#261     // id:()I\n+  #398 = NameAndType        #535:#245     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #399 = NameAndType        #536:#245     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #400 = NameAndType        #537:#245     // VALUE_NUMBER_INT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #401 = NameAndType        #256:#257     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #402 = NameAndType        #538:#245     // FIELD_NAME:Lcom/fasterxml/jackson/core/JsonToken;\n+  #403 = NameAndType        #284:#248     // _handleEOF:()V\n+  #404 = NameAndType        #539:#271     // isStructStart:()Z\n+  #405 = NameAndType        #540:#271     // isStructEnd:()Z\n+  #406 = NameAndType        #541:#245     // NOT_AVAILABLE:Lcom/fasterxml/jackson/core/JsonToken;\n+  #407 = Utf8               Not enough content available for `skipChildren()`: non-blocking parser? (%s)\n+  #408 = NameAndType        #542:#543     // getClass:()Ljava/lang/Class;\n+  #409 = Class              #544          // java/lang/Class\n+  #410 = NameAndType        #545:#286     // getName:()Ljava/lang/String;\n+  #411 = NameAndType        #368:#369     // _reportError:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #412 = NameAndType        #246:#245     // _lastClearedToken:Lcom/fasterxml/jackson/core/JsonToken;\n+  #413 = NameAndType        #295:#286     // getText:()Ljava/lang/String;\n+  #414 = NameAndType        #546:#286     // trim:()Ljava/lang/String;\n+  #415 = Utf8               true\n+  #416 = NameAndType        #547:#548     // equals:(Ljava/lang/Object;)Z\n+  #417 = Utf8               false\n+  #418 = NameAndType        #328:#329     // _hasTextualNull:(Ljava/lang/String;)Z\n+  #419 = NameAndType        #549:#261     // getIntValue:()I\n+  #420 = NameAndType        #550:#551     // getEmbeddedObject:()Ljava/lang/Object;\n+  #421 = Utf8               java/lang/Boolean\n+  #422 = NameAndType        #552:#271     // booleanValue:()Z\n+  #423 = NameAndType        #553:#245     // VALUE_NUMBER_FLOAT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #424 = NameAndType        #311:#312     // getValueAsInt:(I)I\n+  #425 = Class              #554          // com/fasterxml/jackson/core/io/NumberInput\n+  #426 = NameAndType        #555:#556     // parseAsInt:(Ljava/lang/String;I)I\n+  #427 = Utf8               java/lang/Number\n+  #428 = NameAndType        #557:#261     // intValue:()I\n+  #429 = NameAndType        #558:#314     // getLongValue:()J\n+  #430 = NameAndType        #313:#315     // getValueAsLong:(J)J\n+  #431 = NameAndType        #559:#560     // parseAsLong:(Ljava/lang/String;J)J\n+  #432 = NameAndType        #561:#314     // longValue:()J\n+  #433 = NameAndType        #562:#563     // streamReadConstraints:()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n+  #434 = NameAndType        #564:#261     // length:()I\n+  #435 = Class              #565          // com/fasterxml/jackson/core/StreamReadConstraints\n+  #436 = NameAndType        #566:#254     // validateFPLength:(I)V\n+  #437 = NameAndType        #567:#568     // parseAsDouble:(Ljava/lang/String;D)D\n+  #438 = NameAndType        #569:#570     // getDoubleValue:()D\n+  #439 = NameAndType        #571:#570     // doubleValue:()D\n+  #440 = NameAndType        #318:#319     // getValueAsString:(Ljava/lang/String;)Ljava/lang/String;\n+  #441 = NameAndType        #572:#245     // VALUE_STRING:Lcom/fasterxml/jackson/core/JsonToken;\n+  #442 = NameAndType        #285:#286     // getCurrentName:()Ljava/lang/String;\n+  #443 = NameAndType        #573:#245     // VALUE_NULL:Lcom/fasterxml/jackson/core/JsonToken;\n+  #444 = NameAndType        #574:#271     // isScalarValue:()Z\n+  #445 = Class              #575          // com/fasterxml/jackson/core/Base64Variant\n+  #446 = NameAndType        #576:#577     // decode:(Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #447 = Utf8               java/lang/IllegalArgumentException\n+  #448 = NameAndType        #578:#286     // getMessage:()Ljava/lang/String;\n+  #449 = NameAndType        #368:#294     // _reportError:(Ljava/lang/String;)V\n+  #450 = Utf8               null\n+  #451 = Utf8               Unexpected character (%s) in numeric value\n+  #452 = Utf8               java/lang/Object\n+  #453 = NameAndType        #366:#367     // _getCharDesc:(I)Ljava/lang/String;\n+  #454 = NameAndType        #579:#580     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #455 = Utf8               java/lang/StringBuilder\n+  #456 = NameAndType        #581:#582     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #457 = Utf8               :\n+  #458 = NameAndType        #583:#286     // toString:()Ljava/lang/String;\n+  #459 = NameAndType        #330:#331     // _reportUnexpectedNumberChar:(ILjava/lang/String;)Ljava/lang/Object;\n+  #460 = Utf8               Invalid numeric value:\n+  #461 = NameAndType        #340:#294     // reportOverflowInt:(Ljava/lang/String;)V\n+  #462 = NameAndType        #259:#257     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #463 = NameAndType        #340:#342     // reportOverflowInt:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #464 = Utf8               Numeric value (%s) out of range of int (%d - %s)\n+  #465 = NameAndType        #352:#319     // _longIntegerDesc:(Ljava/lang/String;)Ljava/lang/String;\n+  #466 = NameAndType        #584:#585     // valueOf:(I)Ljava/lang/Integer;\n+  #467 = NameAndType        #586:#348     // TYPE:Ljava/lang/Class;\n+  #468 = NameAndType        #345:#346     // _reportInputCoercion:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #469 = NameAndType        #344:#294     // reportOverflowLong:(Ljava/lang/String;)V\n+  #470 = NameAndType        #344:#342     // reportOverflowLong:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #471 = Utf8               Numeric value (%s) out of range of long (%d - %s)\n+  #472 = NameAndType        #584:#587     // valueOf:(J)Ljava/lang/Long;\n+  #473 = Utf8               com/fasterxml/jackson/core/exc/InputCoercionException\n+  #474 = NameAndType        #247:#588     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #475 = Utf8               -\n+  #476 = NameAndType        #589:#329     // startsWith:(Ljava/lang/String;)Z\n+  #477 = Utf8               [Integer with %d digits]\n+  #478 = Utf8               [number with %d characters]\n+  #479 = NameAndType        #357:#248     // _reportInvalidEOF:()V\n+  #480 = Utf8               Unexpected character (%s)\n+  #481 = Utf8                in\n+  #482 = NameAndType        #581:#590     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #483 = NameAndType        #357:#342     // _reportInvalidEOF:(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;)V\n+  #484 = Utf8                in a String value\n+  #485 = Utf8                in a Number value\n+  #486 = Utf8                in a value\n+  #487 = Utf8               com/fasterxml/jackson/core/io/JsonEOFException\n+  #488 = Utf8               Unexpected end-of-input\n+  #489 = NameAndType        #247:#591     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n+  #490 = NameAndType        #357:#294     // _reportInvalidEOF:(Ljava/lang/String;)V\n+  #491 = Utf8               Expected space separating root-level values\n+  #492 = NameAndType        #356:#338     // _reportUnexpectedChar:(ILjava/lang/String;)V\n+  #493 = Utf8               Illegal character (\n+  #494 = Utf8               ): only regular white space (\\\\r, \\\\n, \\\\t) is allowed between tokens\n+  #495 = Class              #592          // java/lang/Character\n+  #496 = NameAndType        #593:#594     // isISOControl:(C)Z\n+  #497 = Utf8               (CTRL-CHAR, code\n+  #498 = NameAndType        #581:#595     // append:(I)Ljava/lang/StringBuilder;\n+  #499 = Utf8               )\n+  #500 = Utf8               \\'\n+  #501 = NameAndType        #581:#596     // append:(C)Ljava/lang/StringBuilder;\n+  #502 = Utf8               \\' (code\n+  #503 = Utf8                / 0x\n+  #504 = NameAndType        #597:#367     // toHexString:(I)Ljava/lang/String;\n+  #505 = NameAndType        #378:#598     // _constructError:(Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #506 = NameAndType        #378:#379     // _constructError:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #507 = Class              #599          // com/fasterxml/jackson/core/util/VersionUtil\n+  #508 = NameAndType        #600:#248     // throwInternal:()V\n+  #509 = Utf8               com/fasterxml/jackson/core/JsonParseException\n+  #510 = NameAndType        #247:#601     // \"<init>\":(Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #511 = NameAndType        #602:#603     // charAt:(I)C\n+  #512 = Utf8               java/lang/String\n+  #513 = Utf8               US-ASCII\n+  #514 = NameAndType        #247:#604     // \"<init>\":([BLjava/lang/String;)V\n+  #515 = Utf8               java/io/IOException\n+  #516 = Utf8               java/lang/RuntimeException\n+  #517 = NameAndType        #247:#605     // \"<init>\":(Ljava/lang/Throwable;)V\n+  #518 = NameAndType        #200:#201     // NO_BYTES:[B\n+  #519 = NameAndType        #202:#203     // NO_INTS:[I\n+  #520 = Class              #606          // java/math/BigInteger\n+  #521 = NameAndType        #584:#607     // valueOf:(J)Ljava/math/BigInteger;\n+  #522 = NameAndType        #216:#217     // BI_MIN_INT:Ljava/math/BigInteger;\n+  #523 = NameAndType        #218:#217     // BI_MAX_INT:Ljava/math/BigInteger;\n+  #524 = NameAndType        #219:#217     // BI_MIN_LONG:Ljava/math/BigInteger;\n+  #525 = NameAndType        #220:#217     // BI_MAX_LONG:Ljava/math/BigInteger;\n+  #526 = Utf8               java/math/BigDecimal\n+  #527 = NameAndType        #247:#608     // \"<init>\":(Ljava/math/BigInteger;)V\n+  #528 = NameAndType        #221:#222     // BD_MIN_LONG:Ljava/math/BigDecimal;\n+  #529 = NameAndType        #223:#222     // BD_MAX_LONG:Ljava/math/BigDecimal;\n+  #530 = NameAndType        #224:#222     // BD_MIN_INT:Ljava/math/BigDecimal;\n+  #531 = NameAndType        #225:#222     // BD_MAX_INT:Ljava/math/BigDecimal;\n+  #532 = Utf8               com/fasterxml/jackson/core/base/ParserMinimalBase\n+  #533 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #534 = Utf8               com/fasterxml/jackson/core/JsonToken\n+  #535 = Utf8               START_ARRAY\n+  #536 = Utf8               START_OBJECT\n+  #537 = Utf8               VALUE_NUMBER_INT\n+  #538 = Utf8               FIELD_NAME\n+  #539 = Utf8               isStructStart\n+  #540 = Utf8               isStructEnd\n+  #541 = Utf8               NOT_AVAILABLE\n+  #542 = Utf8               getClass\n+  #543 = Utf8               ()Ljava/lang/Class;\n+  #544 = Utf8               java/lang/Class\n+  #545 = Utf8               getName\n+  #546 = Utf8               trim\n+  #547 = Utf8               equals\n+  #548 = Utf8               (Ljava/lang/Object;)Z\n+  #549 = Utf8               getIntValue\n+  #550 = Utf8               getEmbeddedObject\n+  #551 = Utf8               ()Ljava/lang/Object;\n+  #552 = Utf8               booleanValue\n+  #553 = Utf8               VALUE_NUMBER_FLOAT\n+  #554 = Utf8               com/fasterxml/jackson/core/io/NumberInput\n+  #555 = Utf8               parseAsInt\n+  #556 = Utf8               (Ljava/lang/String;I)I\n+  #557 = Utf8               intValue\n+  #558 = Utf8               getLongValue\n+  #559 = Utf8               parseAsLong\n+  #560 = Utf8               (Ljava/lang/String;J)J\n+  #561 = Utf8               longValue\n+  #562 = Utf8               streamReadConstraints\n+  #563 = Utf8               ()Lcom/fasterxml/jackson/core/StreamReadConstraints;\n+  #564 = Utf8               length\n+  #565 = Utf8               com/fasterxml/jackson/core/StreamReadConstraints\n+  #566 = Utf8               validateFPLength\n+  #567 = Utf8               parseAsDouble\n+  #568 = Utf8               (Ljava/lang/String;D)D\n+  #569 = Utf8               getDoubleValue\n+  #570 = Utf8               ()D\n+  #571 = Utf8               doubleValue\n+  #572 = Utf8               VALUE_STRING\n+  #573 = Utf8               VALUE_NULL\n+  #574 = Utf8               isScalarValue\n+  #575 = Utf8               com/fasterxml/jackson/core/Base64Variant\n+  #576 = Utf8               decode\n+  #577 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;)V\n+  #578 = Utf8               getMessage\n+  #579 = Utf8               format\n+  #580 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #581 = Utf8               append\n+  #582 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #583 = Utf8               toString\n+  #584 = Utf8               valueOf\n+  #585 = Utf8               (I)Ljava/lang/Integer;\n+  #586 = Utf8               TYPE\n+  #587 = Utf8               (J)Ljava/lang/Long;\n+  #588 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class;)V\n+  #589 = Utf8               startsWith\n+  #590 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #591 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/String;)V\n+  #592 = Utf8               java/lang/Character\n+  #593 = Utf8               isISOControl\n+  #594 = Utf8               (C)Z\n+  #595 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #596 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #597 = Utf8               toHexString\n+  #598 = Utf8               (Ljava/lang/String;)Lcom/fasterxml/jackson/core/JsonParseException;\n+  #599 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n+  #600 = Utf8               throwInternal\n+  #601 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #602 = Utf8               charAt\n+  #603 = Utf8               (I)C\n+  #604 = Utf8               ([BLjava/lang/String;)V\n+  #605 = Utf8               (Ljava/lang/Throwable;)V\n+  #606 = Utf8               java/math/BigInteger\n+  #607 = Utf8               (J)Ljava/math/BigInteger;\n+  #608 = Utf8               (Ljava/math/BigInteger;)V\n {\n   protected static final int INT_TAB = 9;\n     descriptor: I\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 9\n \n   protected static final int INT_LF = 10;\n@@ -2026,15 +2022,15 @@\n            17      35     3   msg   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 45\n           locals = [ class java/lang/String ]\n     Exceptions:\n       throws com.fasterxml.jackson.core.JsonParseException\n-    Signature: #338                         // <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n+    Signature: #336                         // <T:Ljava/lang/Object;>(ILjava/lang/String;)TT;\n \n   protected void reportUnexpectedNumberChar(int, java.lang.String) throws com.fasterxml.jackson.core.JsonParseException;\n     descriptor: (ILjava/lang/String;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n@@ -2272,15 +2268,15 @@\n             0      12     2 inputType   Lcom/fasterxml/jackson/core/JsonToken;\n             0      12     3 targetType   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     3 targetType   Ljava/lang/Class<*>;\n     Exceptions:\n       throws com.fasterxml.jackson.core.exc.InputCoercionException\n-    Signature: #353                         // (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n+    Signature: #351                         // (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonToken;Ljava/lang/Class<*>;)V\n \n   protected java.lang.String _longIntegerDesc(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_1\n"}]}
