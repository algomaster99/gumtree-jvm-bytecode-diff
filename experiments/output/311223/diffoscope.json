{"diffoscope-json-version": 1, "source1": "first/ZipEncodingHelper.class", "source2": "second/ZipEncodingHelper.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,148 +1,148 @@\n-  SHA-256 checksum 5dbb8f44b2c0d3e5e9caae277e1669b3c637fe14db5b3ed8ffbde45a88b709ea\n+  SHA-256 checksum 4162746ce1166dfd630404a40c6c587db4ad1fd7b56420053290868aa53af585\n   Compiled from \"ZipEncodingHelper.java\"\n public abstract class org.apache.commons.compress.archivers.zip.ZipEncodingHelper\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #21                         // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-  super_class: #25                        // java/lang/Object\n+  this_class: #24                         // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 6, attributes: 3\n Constant pool:\n-    #1 = Methodref          #25.#49       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #39.#50       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #3 = Methodref          #39.#51       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-    #4 = Class              #52           // java/nio/charset/UnsupportedCharsetException\n-    #5 = Methodref          #39.#53       // java/nio/charset/Charset.name:()Ljava/lang/String;\n-    #6 = Methodref          #21.#54       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z\n-    #7 = Class              #55           // org/apache/commons/compress/archivers/zip/NioZipEncoding\n-    #8 = Methodref          #7.#56        // org/apache/commons/compress/archivers/zip/NioZipEncoding.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n-    #9 = Fieldref           #57.#58       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #10 = Methodref          #38.#59       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #11 = Methodref          #39.#60       // java/nio/charset/Charset.aliases:()Ljava/util/Set;\n-   #12 = InterfaceMethodref #61.#62       // java/util/Set.stream:()Ljava/util/stream/Stream;\n-   #13 = InvokeDynamic      #0:#68        // #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-   #14 = InterfaceMethodref #69.#70       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-   #15 = Methodref          #71.#72       // java/nio/ByteBuffer.position:()I\n-   #16 = Methodref          #71.#73       // java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;\n-   #17 = Methodref          #71.#74       // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n-   #18 = Methodref          #71.#75       // java/nio/ByteBuffer.capacity:()I\n-   #19 = Methodref          #71.#76       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #71.#77       // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n-   #21 = Class              #78           // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-   #22 = String             #26           // UTF8\n-   #23 = Methodref          #21.#79       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #24 = Fieldref           #21.#80       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #25 = Class              #81           // java/lang/Object\n-   #26 = Utf8               UTF8\n-   #27 = Utf8               Ljava/lang/String;\n-   #28 = Utf8               ConstantValue\n-   #29 = Utf8               UTF8_ZIP_ENCODING\n-   #30 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #31 = Utf8               <init>\n-   #32 = Utf8               ()V\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               getZipEncoding\n-   #36 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #37 = Utf8               StackMapTable\n-   #38 = Class              #82           // java/lang/String\n-   #39 = Class              #83           // java/nio/charset/Charset\n-   #40 = Utf8               isUTF8\n-   #41 = Utf8               (Ljava/lang/String;)Z\n-   #42 = Utf8               growBufferBy\n-   #43 = Utf8               (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;\n-   #44 = Utf8               lambda$isUTF8$0\n-   #45 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #46 = Utf8               <clinit>\n-   #47 = Utf8               SourceFile\n-   #48 = Utf8               ZipEncodingHelper.java\n-   #49 = NameAndType        #31:#32       // \"<init>\":()V\n-   #50 = NameAndType        #84:#85       // defaultCharset:()Ljava/nio/charset/Charset;\n-   #51 = NameAndType        #86:#87       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #52 = Utf8               java/nio/charset/UnsupportedCharsetException\n-   #53 = NameAndType        #88:#89       // name:()Ljava/lang/String;\n-   #54 = NameAndType        #40:#41       // isUTF8:(Ljava/lang/String;)Z\n-   #55 = Utf8               org/apache/commons/compress/archivers/zip/NioZipEncoding\n-   #56 = NameAndType        #31:#90       // \"<init>\":(Ljava/nio/charset/Charset;Z)V\n-   #57 = Class              #91           // java/nio/charset/StandardCharsets\n-   #58 = NameAndType        #92:#93       // UTF_8:Ljava/nio/charset/Charset;\n-   #59 = NameAndType        #94:#41       // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #60 = NameAndType        #95:#96       // aliases:()Ljava/util/Set;\n-   #61 = Class              #97           // java/util/Set\n-   #62 = NameAndType        #98:#99       // stream:()Ljava/util/stream/Stream;\n-   #63 = Utf8               BootstrapMethods\n-   #64 = MethodHandle       6:#100        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #65 = MethodType         #101          //  (Ljava/lang/Object;)Z\n-   #66 = MethodHandle       6:#102        // REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #67 = MethodType         #41           //  (Ljava/lang/String;)Z\n-   #68 = NameAndType        #103:#104     // test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-   #69 = Class              #105          // java/util/stream/Stream\n-   #70 = NameAndType        #106:#107     // anyMatch:(Ljava/util/function/Predicate;)Z\n-   #71 = Class              #108          // java/nio/ByteBuffer\n-   #72 = NameAndType        #109:#110     // position:()I\n-   #73 = NameAndType        #111:#112     // limit:(I)Ljava/nio/Buffer;\n-   #74 = NameAndType        #113:#114     // rewind:()Ljava/nio/Buffer;\n-   #75 = NameAndType        #115:#110     // capacity:()I\n-   #76 = NameAndType        #116:#117     // allocate:(I)Ljava/nio/ByteBuffer;\n-   #77 = NameAndType        #118:#119     // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n-   #78 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n-   #79 = NameAndType        #35:#36       // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #80 = NameAndType        #29:#30       // UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-   #81 = Utf8               java/lang/Object\n-   #82 = Utf8               java/lang/String\n-   #83 = Utf8               java/nio/charset/Charset\n-   #84 = Utf8               defaultCharset\n-   #85 = Utf8               ()Ljava/nio/charset/Charset;\n-   #86 = Utf8               forName\n-   #87 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #88 = Utf8               name\n-   #89 = Utf8               ()Ljava/lang/String;\n-   #90 = Utf8               (Ljava/nio/charset/Charset;Z)V\n-   #91 = Utf8               java/nio/charset/StandardCharsets\n-   #92 = Utf8               UTF_8\n-   #93 = Utf8               Ljava/nio/charset/Charset;\n-   #94 = Utf8               equalsIgnoreCase\n-   #95 = Utf8               aliases\n-   #96 = Utf8               ()Ljava/util/Set;\n-   #97 = Utf8               java/util/Set\n-   #98 = Utf8               stream\n-   #99 = Utf8               ()Ljava/util/stream/Stream;\n-  #100 = Methodref          #120.#121     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #101 = Utf8               (Ljava/lang/Object;)Z\n-  #102 = Methodref          #21.#122      // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #103 = Utf8               test\n-  #104 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;\n-  #105 = Utf8               java/util/stream/Stream\n-  #106 = Utf8               anyMatch\n-  #107 = Utf8               (Ljava/util/function/Predicate;)Z\n-  #108 = Utf8               java/nio/ByteBuffer\n-  #109 = Utf8               position\n-  #110 = Utf8               ()I\n-  #111 = Utf8               limit\n-  #112 = Utf8               (I)Ljava/nio/Buffer;\n-  #113 = Utf8               rewind\n-  #114 = Utf8               ()Ljava/nio/Buffer;\n-  #115 = Utf8               capacity\n-  #116 = Utf8               allocate\n-  #117 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #118 = Utf8               put\n-  #119 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n-  #120 = Class              #123          // java/lang/invoke/LambdaMetafactory\n-  #121 = NameAndType        #124:#128     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #122 = NameAndType        #44:#45       // lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #123 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #124 = Utf8               metafactory\n-  #125 = Class              #130          // java/lang/invoke/MethodHandles$Lookup\n-  #126 = Utf8               Lookup\n-  #127 = Utf8               InnerClasses\n-  #128 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #129 = Class              #131          // java/lang/invoke/MethodHandles\n-  #130 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #131 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+    #8 = Class              #10           // java/nio/charset/Charset\n+    #9 = NameAndType        #11:#12       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #10 = Utf8               java/nio/charset/Charset\n+   #11 = Utf8               defaultCharset\n+   #12 = Utf8               ()Ljava/nio/charset/Charset;\n+   #13 = Methodref          #8.#14        // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #14 = NameAndType        #15:#16       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #15 = Utf8               forName\n+   #16 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #17 = Class              #18           // java/nio/charset/UnsupportedCharsetException\n+   #18 = Utf8               java/nio/charset/UnsupportedCharsetException\n+   #19 = Methodref          #8.#20        // java/nio/charset/Charset.name:()Ljava/lang/String;\n+   #20 = NameAndType        #21:#22       // name:()Ljava/lang/String;\n+   #21 = Utf8               name\n+   #22 = Utf8               ()Ljava/lang/String;\n+   #23 = Methodref          #24.#25       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.isUTF8:(Ljava/lang/String;)Z\n+   #24 = Class              #26           // org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #25 = NameAndType        #27:#28       // isUTF8:(Ljava/lang/String;)Z\n+   #26 = Utf8               org/apache/commons/compress/archivers/zip/ZipEncodingHelper\n+   #27 = Utf8               isUTF8\n+   #28 = Utf8               (Ljava/lang/String;)Z\n+   #29 = Class              #30           // org/apache/commons/compress/archivers/zip/NioZipEncoding\n+   #30 = Utf8               org/apache/commons/compress/archivers/zip/NioZipEncoding\n+   #31 = Methodref          #29.#32       // org/apache/commons/compress/archivers/zip/NioZipEncoding.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n+   #32 = NameAndType        #5:#33        // \"<init>\":(Ljava/nio/charset/Charset;Z)V\n+   #33 = Utf8               (Ljava/nio/charset/Charset;Z)V\n+   #34 = Fieldref           #35.#36       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #35 = Class              #37           // java/nio/charset/StandardCharsets\n+   #36 = NameAndType        #38:#39       // UTF_8:Ljava/nio/charset/Charset;\n+   #37 = Utf8               java/nio/charset/StandardCharsets\n+   #38 = Utf8               UTF_8\n+   #39 = Utf8               Ljava/nio/charset/Charset;\n+   #40 = Methodref          #41.#42       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #41 = Class              #43           // java/lang/String\n+   #42 = NameAndType        #44:#28       // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #43 = Utf8               java/lang/String\n+   #44 = Utf8               equalsIgnoreCase\n+   #45 = Methodref          #8.#46        // java/nio/charset/Charset.aliases:()Ljava/util/Set;\n+   #46 = NameAndType        #47:#48       // aliases:()Ljava/util/Set;\n+   #47 = Utf8               aliases\n+   #48 = Utf8               ()Ljava/util/Set;\n+   #49 = InterfaceMethodref #50.#51       // java/util/Set.stream:()Ljava/util/stream/Stream;\n+   #50 = Class              #52           // java/util/Set\n+   #51 = NameAndType        #53:#54       // stream:()Ljava/util/stream/Stream;\n+   #52 = Utf8               java/util/Set\n+   #53 = Utf8               stream\n+   #54 = Utf8               ()Ljava/util/stream/Stream;\n+   #55 = InvokeDynamic      #0:#56        // #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+   #56 = NameAndType        #57:#58       // test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+   #57 = Utf8               test\n+   #58 = Utf8               (Ljava/lang/String;)Ljava/util/function/Predicate;\n+   #59 = InterfaceMethodref #60.#61       // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #60 = Class              #62           // java/util/stream/Stream\n+   #61 = NameAndType        #63:#64       // anyMatch:(Ljava/util/function/Predicate;)Z\n+   #62 = Utf8               java/util/stream/Stream\n+   #63 = Utf8               anyMatch\n+   #64 = Utf8               (Ljava/util/function/Predicate;)Z\n+   #65 = Methodref          #66.#67       // java/nio/ByteBuffer.position:()I\n+   #66 = Class              #68           // java/nio/ByteBuffer\n+   #67 = NameAndType        #69:#70       // position:()I\n+   #68 = Utf8               java/nio/ByteBuffer\n+   #69 = Utf8               position\n+   #70 = Utf8               ()I\n+   #71 = Methodref          #66.#72       // java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;\n+   #72 = NameAndType        #73:#74       // limit:(I)Ljava/nio/Buffer;\n+   #73 = Utf8               limit\n+   #74 = Utf8               (I)Ljava/nio/Buffer;\n+   #75 = Methodref          #66.#76       // java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n+   #76 = NameAndType        #77:#78       // rewind:()Ljava/nio/Buffer;\n+   #77 = Utf8               rewind\n+   #78 = Utf8               ()Ljava/nio/Buffer;\n+   #79 = Methodref          #66.#80       // java/nio/ByteBuffer.capacity:()I\n+   #80 = NameAndType        #81:#70       // capacity:()I\n+   #81 = Utf8               capacity\n+   #82 = Methodref          #66.#83       // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #83 = NameAndType        #84:#85       // allocate:(I)Ljava/nio/ByteBuffer;\n+   #84 = Utf8               allocate\n+   #85 = Utf8               (I)Ljava/nio/ByteBuffer;\n+   #86 = Methodref          #66.#87       // java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+   #87 = NameAndType        #88:#89       // put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+   #88 = Utf8               put\n+   #89 = Utf8               (Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+   #90 = String             #91           // UTF8\n+   #91 = Utf8               UTF8\n+   #92 = Methodref          #24.#93       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #93 = NameAndType        #94:#95       // getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #94 = Utf8               getZipEncoding\n+   #95 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #96 = Fieldref           #24.#97       // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #97 = NameAndType        #98:#99       // UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+   #98 = Utf8               UTF8_ZIP_ENCODING\n+   #99 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+  #100 = Utf8               Ljava/lang/String;\n+  #101 = Utf8               ConstantValue\n+  #102 = Utf8               Code\n+  #103 = Utf8               LineNumberTable\n+  #104 = Utf8               StackMapTable\n+  #105 = Utf8               growBufferBy\n+  #106 = Utf8               (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;\n+  #107 = Utf8               lambda$isUTF8$0\n+  #108 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #109 = Utf8               <clinit>\n+  #110 = Utf8               SourceFile\n+  #111 = Utf8               ZipEncodingHelper.java\n+  #112 = Utf8               BootstrapMethods\n+  #113 = MethodHandle       6:#114        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #114 = Methodref          #115.#116     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #115 = Class              #117          // java/lang/invoke/LambdaMetafactory\n+  #116 = NameAndType        #118:#119     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #117 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #118 = Utf8               metafactory\n+  #119 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #120 = MethodType         #121          //  (Ljava/lang/Object;)Z\n+  #121 = Utf8               (Ljava/lang/Object;)Z\n+  #122 = MethodHandle       6:#123        // REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #123 = Methodref          #24.#124      // org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #124 = NameAndType        #107:#108     // lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #125 = MethodType         #28           //  (Ljava/lang/String;)Z\n+  #126 = Utf8               InnerClasses\n+  #127 = Class              #128          // java/lang/invoke/MethodHandles$Lookup\n+  #128 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #129 = Class              #130          // java/lang/invoke/MethodHandles\n+  #130 = Utf8               java/lang/invoke/MethodHandles\n+  #131 = Utf8               Lookup\n {\n   static final java.lang.String UTF8 = \"UTF8\";\n     descriptor: Ljava/lang/String;\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: String UTF8\n \n   static final org.apache.commons.compress.archivers.zip.ZipEncoding UTF8_ZIP_ENCODING;\n@@ -161,32 +161,32 @@\n         line 30: 0\n \n   public static org.apache.commons.compress.archivers.zip.ZipEncoding getZipEncoding(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=1\n-         0: invokestatic  #2                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         0: invokestatic  #7                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n          3: astore_1\n          4: aload_0\n          5: ifnull        17\n          8: aload_0\n-         9: invokestatic  #3                  // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         9: invokestatic  #13                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n         12: astore_1\n         13: goto          17\n         16: astore_2\n         17: aload_1\n-        18: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n-        21: invokestatic  #6                  // Method isUTF8:(Ljava/lang/String;)Z\n+        18: invokevirtual #19                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+        21: invokestatic  #23                 // Method isUTF8:(Ljava/lang/String;)Z\n         24: istore_2\n-        25: new           #7                  // class org/apache/commons/compress/archivers/zip/NioZipEncoding\n+        25: new           #29                 // class org/apache/commons/compress/archivers/zip/NioZipEncoding\n         28: dup\n         29: aload_1\n         30: iload_2\n-        31: invokespecial #8                  // Method org/apache/commons/compress/archivers/zip/NioZipEncoding.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n+        31: invokespecial #31                 // Method org/apache/commons/compress/archivers/zip/NioZipEncoding.\"<init>\":(Ljava/nio/charset/Charset;Z)V\n         34: areturn\n       Exception table:\n          from    to  target type\n              8    13    16   Class java/nio/charset/UnsupportedCharsetException\n       LineNumberTable:\n         line 56: 0\n         line 57: 4\n@@ -207,30 +207,30 @@\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: ifnull        8\n          4: aload_0\n          5: goto          14\n-         8: invokestatic  #2                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-        11: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+         8: invokestatic  #7                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+        11: invokevirtual #19                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n         14: astore_1\n-        15: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-        18: invokevirtual #5                  // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+        15: getstatic     #34                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        18: invokevirtual #19                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n         21: aload_1\n-        22: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+        22: invokevirtual #40                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n         25: ifeq          30\n         28: iconst_1\n         29: ireturn\n-        30: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-        33: invokevirtual #11                 // Method java/nio/charset/Charset.aliases:()Ljava/util/Set;\n-        36: invokeinterface #12,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;\n+        30: getstatic     #34                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        33: invokevirtual #45                 // Method java/nio/charset/Charset.aliases:()Ljava/util/Set;\n+        36: invokeinterface #49,  1           // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;\n         41: aload_1\n-        42: invokedynamic #13,  0             // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n-        47: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+        42: invokedynamic #55,  0             // InvokeDynamic #0:test:(Ljava/lang/String;)Ljava/util/function/Predicate;\n+        47: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n         52: ireturn\n       LineNumberTable:\n         line 73: 0\n         line 74: 15\n         line 75: 28\n         line 77: 30\n       StackMapTable: number_of_entries = 3\n@@ -244,29 +244,29 @@\n   static java.nio.ByteBuffer growBufferBy(java.nio.ByteBuffer, int);\n     descriptor: (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: invokevirtual #15                 // Method java/nio/ByteBuffer.position:()I\n-         5: invokevirtual #16                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;\n+         2: invokevirtual #65                 // Method java/nio/ByteBuffer.position:()I\n+         5: invokevirtual #71                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;\n          8: pop\n          9: aload_0\n-        10: invokevirtual #17                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n+        10: invokevirtual #75                 // Method java/nio/ByteBuffer.rewind:()Ljava/nio/Buffer;\n         13: pop\n         14: aload_0\n-        15: invokevirtual #18                 // Method java/nio/ByteBuffer.capacity:()I\n+        15: invokevirtual #79                 // Method java/nio/ByteBuffer.capacity:()I\n         18: iload_1\n         19: iadd\n-        20: invokestatic  #19                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+        20: invokestatic  #82                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n         23: astore_2\n         24: aload_2\n         25: aload_0\n-        26: invokevirtual #20                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n+        26: invokevirtual #86                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;\n         29: pop\n         30: aload_2\n         31: areturn\n       LineNumberTable:\n         line 81: 0\n         line 82: 9\n         line 84: 14\n@@ -276,33 +276,33 @@\n   private static boolean lambda$isUTF8$0(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+         2: invokevirtual #40                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n          5: ireturn\n       LineNumberTable:\n         line 77: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: ldc           #22                 // String UTF8\n-         2: invokestatic  #23                 // Method getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n-         5: putstatic     #24                 // Field UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         0: ldc           #90                 // String UTF8\n+         2: invokestatic  #92                 // Method getZipEncoding:(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n+         5: putstatic     #96                 // Field UTF8_ZIP_ENCODING:Lorg/apache/commons/compress/archivers/zip/ZipEncoding;\n          8: return\n       LineNumberTable:\n         line 41: 0\n }\n SourceFile: \"ZipEncodingHelper.java\"\n-InnerClasses:\n-  public static final #126= #125 of #129; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #64 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #113 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #65 (Ljava/lang/Object;)Z\n-      #66 REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-      #67 (Ljava/lang/String;)Z\n+      #120 (Ljava/lang/Object;)Z\n+      #122 REF_invokeStatic org/apache/commons/compress/archivers/zip/ZipEncodingHelper.lambda$isUTF8$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+      #125 (Ljava/lang/String;)Z\n+InnerClasses:\n+  public static final #131= #127 of #129; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
