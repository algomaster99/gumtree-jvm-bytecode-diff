{"diffoscope-json-version": 1, "source1": "first/LineNumberTableAttribute.class", "source2": "second/LineNumberTableAttribute.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,105 +1,105 @@\n-  SHA-256 checksum ca228fe168a85c87463bbdd395bc9b575e04f4c024ad840d7eaeec0ec5a159f7\n+  SHA-256 checksum fda9cb6d19bb2e5325c177a4d4a92caba37e0f39976868ec1fe9960a972a9839\n   Compiled from \"LineNumberTableAttribute.java\"\n public class org.apache.commons.compress.harmony.unpack200.bytecode.LineNumberTableAttribute extends org.apache.commons.compress.harmony.unpack200.bytecode.BCIRenumberedAttribute\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #2                          // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute\n-  super_class: #8                         // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute\n+  this_class: #1                          // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute\n+  super_class: #3                         // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute\n   interfaces: 0, fields: 4, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Fieldref           #2.#3          // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #2 = Class              #4             // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute\n-   #3 = NameAndType        #5:#6          // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #4 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute\n+   #1 = Class              #2             // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute\n+   #2 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute\n+   #3 = Class              #4             // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute\n+   #4 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute\n    #5 = Utf8               attributeName\n    #6 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #7 = Methodref          #8.#9          // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-   #8 = Class              #10            // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute\n-   #9 = NameAndType        #11:#12        // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-  #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute\n-  #11 = Utf8               <init>\n-  #12 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-  #13 = Fieldref           #2.#14         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.lineNumberTableLength:I\n-  #14 = NameAndType        #15:#16        // lineNumberTableLength:I\n-  #15 = Utf8               lineNumberTableLength\n-  #16 = Utf8               I\n-  #17 = Fieldref           #2.#18         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.startPcs:[I\n-  #18 = NameAndType        #19:#20        // startPcs:[I\n-  #19 = Utf8               startPcs\n-  #20 = Utf8               [I\n-  #21 = Fieldref           #2.#22         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.lineNumbers:[I\n-  #22 = NameAndType        #23:#20        // lineNumbers:[I\n-  #23 = Utf8               lineNumbers\n-  #24 = Class              #25            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #25 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #26 = Methodref          #2.#27         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #27 = NameAndType        #28:#29        // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #28 = Utf8               getAttributeName\n-  #29 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #30 = Methodref          #8.#31         // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #31 = NameAndType        #32:#33        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #32 = Utf8               resolve\n-  #33 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #34 = Class              #35            // java/lang/StringBuilder\n-  #35 = Utf8               java/lang/StringBuilder\n-  #36 = Methodref          #34.#37        // java/lang/StringBuilder.\"<init>\":()V\n-  #37 = NameAndType        #11:#38        // \"<init>\":()V\n-  #38 = Utf8               ()V\n-  #39 = String             #40            // LineNumberTable:\n-  #40 = Utf8               LineNumberTable:\n-  #41 = Methodref          #34.#42        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #42 = NameAndType        #43:#44        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #43 = Utf8               append\n-  #44 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #45 = Methodref          #34.#46        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #46 = NameAndType        #43:#47        // append:(I)Ljava/lang/StringBuilder;\n-  #47 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #48 = String             #49            //  lines\n-  #49 = Utf8                lines\n-  #50 = Methodref          #34.#51        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #51 = NameAndType        #52:#53        // toString:()Ljava/lang/String;\n-  #52 = Utf8               toString\n-  #53 = Utf8               ()Ljava/lang/String;\n-  #54 = Methodref          #55.#56        // java/io/DataOutputStream.writeShort:(I)V\n-  #55 = Class              #57            // java/io/DataOutputStream\n-  #56 = NameAndType        #58:#59        // writeShort:(I)V\n-  #57 = Utf8               java/io/DataOutputStream\n-  #58 = Utf8               writeShort\n-  #59 = Utf8               (I)V\n-  #60 = Utf8               setAttributeName\n-  #61 = Utf8               Code\n-  #62 = Utf8               LineNumberTable\n-  #63 = Utf8               LocalVariableTable\n-  #64 = Utf8               cpUTF8Value\n-  #65 = Utf8               (I[I[I)V\n-  #66 = Utf8               this\n-  #67 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n-  #68 = Utf8               equals\n-  #69 = Utf8               (Ljava/lang/Object;)Z\n-  #70 = Utf8               obj\n-  #71 = Utf8               Ljava/lang/Object;\n-  #72 = Utf8               StackMapTable\n-  #73 = Utf8               getLength\n-  #74 = Utf8               ()I\n-  #75 = Utf8               getNestedClassFileEntries\n-  #76 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #77 = Utf8               getStartPCs\n-  #78 = Utf8               ()[I\n-  #79 = Utf8               pool\n-  #80 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n-  #81 = Utf8               writeBody\n-  #82 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #83 = Utf8               i\n-  #84 = Utf8               dos\n-  #85 = Utf8               Ljava/io/DataOutputStream;\n-  #86 = Utf8               Exceptions\n-  #87 = Class              #88            // java/io/IOException\n-  #88 = Utf8               java/io/IOException\n+   #7 = Utf8               lineNumberTableLength\n+   #8 = Utf8               I\n+   #9 = Utf8               startPcs\n+  #10 = Utf8               [I\n+  #11 = Utf8               lineNumbers\n+  #12 = Utf8               setAttributeName\n+  #13 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+  #14 = Utf8               Code\n+  #15 = Fieldref           #1.#16         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #16 = NameAndType        #5:#6          // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #17 = Utf8               LineNumberTable\n+  #18 = Utf8               LocalVariableTable\n+  #19 = Utf8               cpUTF8Value\n+  #20 = Utf8               <init>\n+  #21 = Utf8               (I[I[I)V\n+  #22 = Methodref          #3.#23         // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+  #23 = NameAndType        #20:#13        // \"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+  #24 = Fieldref           #1.#25         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.lineNumberTableLength:I\n+  #25 = NameAndType        #7:#8          // lineNumberTableLength:I\n+  #26 = Fieldref           #1.#27         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.startPcs:[I\n+  #27 = NameAndType        #9:#10         // startPcs:[I\n+  #28 = Fieldref           #1.#29         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.lineNumbers:[I\n+  #29 = NameAndType        #11:#10        // lineNumbers:[I\n+  #30 = Utf8               this\n+  #31 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n+  #32 = Utf8               equals\n+  #33 = Utf8               (Ljava/lang/Object;)Z\n+  #34 = Utf8               obj\n+  #35 = Utf8               Ljava/lang/Object;\n+  #36 = Utf8               StackMapTable\n+  #37 = Utf8               getLength\n+  #38 = Utf8               ()I\n+  #39 = Utf8               getNestedClassFileEntries\n+  #40 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #41 = Class              #42            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+  #42 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+  #43 = Methodref          #1.#44         // org/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #44 = NameAndType        #45:#46        // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #45 = Utf8               getAttributeName\n+  #46 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #47 = Utf8               getStartPCs\n+  #48 = Utf8               ()[I\n+  #49 = Utf8               resolve\n+  #50 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #51 = Methodref          #3.#52         // org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #52 = NameAndType        #49:#50        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #53 = Utf8               pool\n+  #54 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n+  #55 = Utf8               toString\n+  #56 = Utf8               ()Ljava/lang/String;\n+  #57 = Class              #58            // java/lang/StringBuilder\n+  #58 = Utf8               java/lang/StringBuilder\n+  #59 = String             #60            // LineNumberTable:\n+  #60 = Utf8               LineNumberTable:\n+  #61 = Methodref          #57.#62        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #62 = NameAndType        #20:#63        // \"<init>\":(Ljava/lang/String;)V\n+  #63 = Utf8               (Ljava/lang/String;)V\n+  #64 = Methodref          #57.#65        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #65 = NameAndType        #66:#67        // append:(I)Ljava/lang/StringBuilder;\n+  #66 = Utf8               append\n+  #67 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #68 = String             #69            //  lines\n+  #69 = Utf8                lines\n+  #70 = Methodref          #57.#71        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #71 = NameAndType        #66:#72        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #72 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #73 = Methodref          #57.#74        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #74 = NameAndType        #55:#56        // toString:()Ljava/lang/String;\n+  #75 = Utf8               writeBody\n+  #76 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #77 = Utf8               Exceptions\n+  #78 = Class              #79            // java/io/IOException\n+  #79 = Utf8               java/io/IOException\n+  #80 = Methodref          #81.#83        // java/io/DataOutputStream.writeShort:(I)V\n+  #81 = Class              #82            // java/io/DataOutputStream\n+  #82 = Utf8               java/io/DataOutputStream\n+  #83 = NameAndType        #84:#85        // writeShort:(I)V\n+  #84 = Utf8               writeShort\n+  #85 = Utf8               (I)V\n+  #86 = Utf8               dos\n+  #87 = Utf8               Ljava/io/DataOutputStream;\n+  #88 = Utf8               i\n   #89 = Utf8               SourceFile\n   #90 = Utf8               LineNumberTableAttribute.java\n {\n   private static org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;\n     descriptor: Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n \n@@ -117,40 +117,40 @@\n \n   public static void setAttributeName(org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: putstatic     #1                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         1: putstatic     #15                 // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n          4: return\n       LineNumberTable:\n         line 30: 0\n         line 31: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 cpUTF8Value   Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n \n   public org.apache.commons.compress.harmony.unpack200.bytecode.LineNumberTableAttribute(int, int[], int[]);\n     descriptor: (I[I[I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n-         1: getstatic     #1                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-         4: invokespecial #7                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+         1: getstatic     #15                 // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         4: invokespecial #22                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.\"<init>\":(Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n          7: aload_0\n          8: iload_1\n-         9: putfield      #13                 // Field lineNumberTableLength:I\n+         9: putfield      #24                 // Field lineNumberTableLength:I\n         12: aload_0\n         13: aload_2\n-        14: putfield      #17                 // Field startPcs:[I\n+        14: putfield      #26                 // Field startPcs:[I\n         17: aload_0\n         18: aload_3\n-        19: putfield      #21                 // Field lineNumbers:[I\n+        19: putfield      #28                 // Field lineNumbers:[I\n         22: return\n       LineNumberTable:\n         line 39: 0\n         line 40: 7\n         line 41: 12\n         line 42: 17\n         line 43: 22\n@@ -164,39 +164,37 @@\n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: if_acmpne     9\n+         2: if_acmpne     7\n          5: iconst_1\n-         6: goto          10\n-         9: iconst_0\n-        10: ireturn\n+         6: ireturn\n+         7: iconst_0\n+         8: ireturn\n       LineNumberTable:\n         line 47: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      11     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n-            0      11     1   obj   Ljava/lang/Object;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 9 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0       9     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n+            0       9     1   obj   Ljava/lang/Object;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 7 /* same */\n \n   protected int getLength();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=1, args_size=1\n          0: iconst_2\n          1: iconst_4\n          2: aload_0\n-         3: getfield      #13                 // Field lineNumberTableLength:I\n+         3: getfield      #24                 // Field lineNumberTableLength:I\n          6: imul\n          7: iadd\n          8: ireturn\n       LineNumberTable:\n         line 52: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -204,126 +202,124 @@\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_1\n-         1: anewarray     #24                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         1: anewarray     #41                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n          4: dup\n          5: iconst_0\n          6: aload_0\n-         7: invokevirtual #26                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         7: invokevirtual #43                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         10: aastore\n         11: areturn\n       LineNumberTable:\n         line 62: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n \n   protected int[] getStartPCs();\n     descriptor: ()[I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field startPcs:[I\n+         1: getfield      #26                 // Field startPcs:[I\n          4: areturn\n       LineNumberTable:\n         line 67: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n \n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #30                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+         2: invokespecial #51                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/BCIRenumberedAttribute.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n          5: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n             0       6     1  pool   Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #34                 // class java/lang/StringBuilder\n+      stack=3, locals=1, args_size=1\n+         0: new           #57                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #36                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #39                 // String LineNumberTable:\n-         9: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #13                 // Field lineNumberTableLength:I\n-        16: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #48                 // String  lines\n-        21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: invokevirtual #50                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        27: areturn\n+         4: ldc           #59                 // String LineNumberTable:\n+         6: invokespecial #61                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: getfield      #24                 // Field lineNumberTableLength:I\n+        13: invokevirtual #64                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        16: ldc           #68                 // String  lines\n+        18: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        24: areturn\n       LineNumberTable:\n         line 89: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      28     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n+            0      25     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n \n   protected void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #13                 // Field lineNumberTableLength:I\n-         5: invokevirtual #54                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #24                 // Field lineNumberTableLength:I\n+         5: invokevirtual #80                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: iconst_0\n          9: istore_2\n-        10: iload_2\n-        11: aload_0\n-        12: getfield      #13                 // Field lineNumberTableLength:I\n-        15: if_icmpge     44\n-        18: aload_1\n-        19: aload_0\n-        20: getfield      #17                 // Field startPcs:[I\n-        23: iload_2\n-        24: iaload\n-        25: invokevirtual #54                 // Method java/io/DataOutputStream.writeShort:(I)V\n-        28: aload_1\n-        29: aload_0\n-        30: getfield      #21                 // Field lineNumbers:[I\n-        33: iload_2\n-        34: iaload\n-        35: invokevirtual #54                 // Method java/io/DataOutputStream.writeShort:(I)V\n-        38: iinc          2, 1\n-        41: goto          10\n+        10: goto          36\n+        13: aload_1\n+        14: aload_0\n+        15: getfield      #26                 // Field startPcs:[I\n+        18: iload_2\n+        19: iaload\n+        20: invokevirtual #80                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        23: aload_1\n+        24: aload_0\n+        25: getfield      #28                 // Field lineNumbers:[I\n+        28: iload_2\n+        29: iaload\n+        30: invokevirtual #80                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        33: iinc          2, 1\n+        36: iload_2\n+        37: aload_0\n+        38: getfield      #24                 // Field lineNumberTableLength:I\n+        41: if_icmplt     13\n         44: return\n       LineNumberTable:\n         line 94: 0\n         line 95: 8\n-        line 96: 18\n-        line 97: 28\n-        line 95: 38\n+        line 96: 13\n+        line 97: 23\n+        line 95: 33\n         line 99: 44\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10      34     2     i   I\n             0      45     0  this   Lorg/apache/commons/compress/harmony/unpack200/bytecode/LineNumberTableAttribute;\n             0      45     1   dos   Ljava/io/DataOutputStream;\n+           10      34     2     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 10\n+          offset_delta = 13\n           locals = [ int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 33\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 22 /* same */\n }\n SourceFile: \"LineNumberTableAttribute.java\"\n"}]}
