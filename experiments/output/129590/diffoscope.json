{"diffoscope-json-version": 1, "source1": "first/UnsynchronizedFilterInputStream.class", "source2": "second/UnsynchronizedFilterInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,79 +1,79 @@\n-  SHA-256 checksum a65d3310f612a32dac6cf86258921598e114f025e924cb8fac6a51cc75b63495\n+  SHA-256 checksum 4913c143a14e0c7003ef936342ab623dd622614131bc4c78f162d43820c365e3\n   Compiled from \"UnsynchronizedFilterInputStream.java\"\n public class org.apache.commons.io.input.UnsynchronizedFilterInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #11                         // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n-  super_class: #8                         // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 1, methods: 11, attributes: 2\n Constant pool:\n-   #1 = Class              #2             // org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder\n-   #2 = Utf8               org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder\n-   #3 = Methodref          #1.#4          // org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder.\"<init>\":()V\n-   #4 = NameAndType        #5:#6          // \"<init>\":()V\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Methodref          #8.#4          // java/io/InputStream.\"<init>\":()V\n-   #8 = Class              #9             // java/io/InputStream\n-   #9 = Utf8               java/io/InputStream\n-  #10 = Fieldref           #11.#12        // org/apache/commons/io/input/UnsynchronizedFilterInputStream.inputStream:Ljava/io/InputStream;\n-  #11 = Class              #13            // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n-  #12 = NameAndType        #14:#15        // inputStream:Ljava/io/InputStream;\n-  #13 = Utf8               org/apache/commons/io/input/UnsynchronizedFilterInputStream\n-  #14 = Utf8               inputStream\n-  #15 = Utf8               Ljava/io/InputStream;\n-  #16 = Methodref          #8.#17         // java/io/InputStream.available:()I\n-  #17 = NameAndType        #18:#19        // available:()I\n-  #18 = Utf8               available\n-  #19 = Utf8               ()I\n-  #20 = Methodref          #8.#21         // java/io/InputStream.close:()V\n-  #21 = NameAndType        #22:#6         // close:()V\n-  #22 = Utf8               close\n-  #23 = Methodref          #8.#24         // java/io/InputStream.mark:(I)V\n-  #24 = NameAndType        #25:#26        // mark:(I)V\n-  #25 = Utf8               mark\n-  #26 = Utf8               (I)V\n-  #27 = Methodref          #8.#28         // java/io/InputStream.markSupported:()Z\n-  #28 = NameAndType        #29:#30        // markSupported:()Z\n-  #29 = Utf8               markSupported\n-  #30 = Utf8               ()Z\n-  #31 = Methodref          #8.#32         // java/io/InputStream.read:()I\n-  #32 = NameAndType        #33:#19        // read:()I\n-  #33 = Utf8               read\n-  #34 = Methodref          #11.#35        // org/apache/commons/io/input/UnsynchronizedFilterInputStream.read:([BII)I\n-  #35 = NameAndType        #33:#36        // read:([BII)I\n-  #36 = Utf8               ([BII)I\n-  #37 = Methodref          #8.#35         // java/io/InputStream.read:([BII)I\n-  #38 = Methodref          #8.#39         // java/io/InputStream.reset:()V\n-  #39 = NameAndType        #40:#6         // reset:()V\n-  #40 = Utf8               reset\n-  #41 = Methodref          #8.#42         // java/io/InputStream.skip:(J)J\n-  #42 = NameAndType        #43:#44        // skip:(J)J\n-  #43 = Utf8               skip\n-  #44 = Utf8               (J)J\n-  #45 = Utf8               builder\n-  #46 = Utf8               ()Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder;\n-  #47 = Utf8               Code\n-  #48 = Utf8               LineNumberTable\n-  #49 = Utf8               (Ljava/io/InputStream;)V\n-  #50 = Utf8               LocalVariableTable\n-  #51 = Utf8               this\n-  #52 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n-  #53 = Utf8               Exceptions\n-  #54 = Class              #55            // java/io/IOException\n-  #55 = Utf8               java/io/IOException\n-  #56 = Utf8               readlimit\n-  #57 = Utf8               I\n-  #58 = Utf8               ([B)I\n-  #59 = Utf8               buffer\n-  #60 = Utf8               [B\n-  #61 = Utf8               offset\n-  #62 = Utf8               count\n+   #1 = Class              #2             // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+   #2 = Utf8               org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               inputStream\n+   #6 = Utf8               Ljava/io/InputStream;\n+   #7 = Utf8               builder\n+   #8 = Utf8               ()Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder;\n+   #9 = Utf8               Code\n+  #10 = Class              #11            // org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder\n+  #11 = Utf8               org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder\n+  #12 = Methodref          #10.#13        // org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder.\"<init>\":()V\n+  #13 = NameAndType        #14:#15        // \"<init>\":()V\n+  #14 = Utf8               <init>\n+  #15 = Utf8               ()V\n+  #16 = Utf8               LineNumberTable\n+  #17 = Utf8               LocalVariableTable\n+  #18 = Utf8               (Ljava/io/InputStream;)V\n+  #19 = Methodref          #3.#13         // java/io/InputStream.\"<init>\":()V\n+  #20 = Fieldref           #1.#21         // org/apache/commons/io/input/UnsynchronizedFilterInputStream.inputStream:Ljava/io/InputStream;\n+  #21 = NameAndType        #5:#6          // inputStream:Ljava/io/InputStream;\n+  #22 = Utf8               this\n+  #23 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n+  #24 = Utf8               available\n+  #25 = Utf8               ()I\n+  #26 = Utf8               Exceptions\n+  #27 = Class              #28            // java/io/IOException\n+  #28 = Utf8               java/io/IOException\n+  #29 = Methodref          #3.#30         // java/io/InputStream.available:()I\n+  #30 = NameAndType        #24:#25        // available:()I\n+  #31 = Utf8               close\n+  #32 = Methodref          #3.#33         // java/io/InputStream.close:()V\n+  #33 = NameAndType        #31:#15        // close:()V\n+  #34 = Utf8               mark\n+  #35 = Utf8               (I)V\n+  #36 = Methodref          #3.#37         // java/io/InputStream.mark:(I)V\n+  #37 = NameAndType        #34:#35        // mark:(I)V\n+  #38 = Utf8               readlimit\n+  #39 = Utf8               I\n+  #40 = Utf8               markSupported\n+  #41 = Utf8               ()Z\n+  #42 = Methodref          #3.#43         // java/io/InputStream.markSupported:()Z\n+  #43 = NameAndType        #40:#41        // markSupported:()Z\n+  #44 = Utf8               read\n+  #45 = Methodref          #3.#46         // java/io/InputStream.read:()I\n+  #46 = NameAndType        #44:#25        // read:()I\n+  #47 = Utf8               ([B)I\n+  #48 = Methodref          #1.#49         // org/apache/commons/io/input/UnsynchronizedFilterInputStream.read:([BII)I\n+  #49 = NameAndType        #44:#50        // read:([BII)I\n+  #50 = Utf8               ([BII)I\n+  #51 = Utf8               buffer\n+  #52 = Utf8               [B\n+  #53 = Methodref          #3.#49         // java/io/InputStream.read:([BII)I\n+  #54 = Utf8               offset\n+  #55 = Utf8               count\n+  #56 = Utf8               reset\n+  #57 = Methodref          #3.#58         // java/io/InputStream.reset:()V\n+  #58 = NameAndType        #56:#15        // reset:()V\n+  #59 = Utf8               skip\n+  #60 = Utf8               (J)J\n+  #61 = Methodref          #3.#62         // java/io/InputStream.skip:(J)J\n+  #62 = NameAndType        #59:#60        // skip:(J)J\n   #63 = Utf8               J\n   #64 = Utf8               SourceFile\n   #65 = Utf8               UnsynchronizedFilterInputStream.java\n   #66 = Utf8               InnerClasses\n   #67 = Utf8               Builder\n {\n   protected volatile java.io.InputStream inputStream;\n@@ -81,85 +81,87 @@\n     flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE\n \n   public static org.apache.commons.io.input.UnsynchronizedFilterInputStream$Builder builder();\n     descriptor: ()Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #1                  // class org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder\n+         0: new           #10                 // class org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder\n          3: dup\n-         4: invokespecial #3                  // Method org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder.\"<init>\":()V\n+         4: invokespecial #12                 // Method org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 83: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   org.apache.commons.io.input.UnsynchronizedFilterInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #7                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #19                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #10                 // Field inputStream:Ljava/io/InputStream;\n+         6: putfield      #20                 // Field inputStream:Ljava/io/InputStream;\n          9: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 4\n         line 98: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n             0      10     1 inputStream   Ljava/io/InputStream;\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n-         4: invokevirtual #16                 // Method java/io/InputStream.available:()I\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n+         4: invokevirtual #29                 // Method java/io/InputStream.available:()I\n          7: ireturn\n       LineNumberTable:\n         line 108: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n-         4: invokevirtual #20                 // Method java/io/InputStream.close:()V\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n+         4: invokevirtual #32                 // Method java/io/InputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 118: 0\n         line 119: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n          4: iload_1\n-         5: invokevirtual #23                 // Method java/io/InputStream.mark:(I)V\n+         5: invokevirtual #36                 // Method java/io/InputStream.mark:(I)V\n          8: return\n       LineNumberTable:\n         line 134: 0\n         line 135: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n@@ -167,117 +169,117 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n-         4: invokevirtual #27                 // Method java/io/InputStream.markSupported:()Z\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n+         4: invokevirtual #42                 // Method java/io/InputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 148: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n-         4: invokevirtual #31                 // Method java/io/InputStream.read:()I\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n+         4: invokevirtual #45                 // Method java/io/InputStream.read:()I\n          7: ireturn\n       LineNumberTable:\n         line 160: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #34                 // Method read:([BII)I\n+         5: invokevirtual #48                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 173: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n             0       9     1 buffer   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #37                 // Method java/io/InputStream.read:([BII)I\n+         7: invokevirtual #53                 // Method java/io/InputStream.read:([BII)I\n         10: ireturn\n       LineNumberTable:\n         line 189: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n             0      11     1 buffer   [B\n             0      11     2 offset   I\n             0      11     3 count   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n-         4: invokevirtual #38                 // Method java/io/InputStream.reset:()V\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n+         4: invokevirtual #57                 // Method java/io/InputStream.reset:()V\n          7: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;\n+         1: getfield      #20                 // Field inputStream:Ljava/io/InputStream;\n          4: lload_1\n-         5: invokevirtual #41                 // Method java/io/InputStream.skip:(J)J\n+         5: invokevirtual #61                 // Method java/io/InputStream.skip:(J)J\n          8: lreturn\n       LineNumberTable:\n         line 218: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedFilterInputStream;\n             0       9     1 count   J\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"UnsynchronizedFilterInputStream.java\"\n InnerClasses:\n-  public static #67= #1 of #11;           // Builder=class org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder of class org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+  public static #67= #10 of #1;           // Builder=class org/apache/commons/io/input/UnsynchronizedFilterInputStream$Builder of class org/apache/commons/io/input/UnsynchronizedFilterInputStream\n"}]}
