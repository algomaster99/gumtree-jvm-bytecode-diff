{"diffoscope-json-version": 1, "source1": "first/LocalVariableInfo.class", "source2": "second/LocalVariableInfo.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,159 +1,159 @@\n-  SHA-256 checksum 943a4907fd1a35b0ddcc1885ddeeabea74e2d23c13882315db1a91c7c0fa1f30\n+  SHA-256 checksum e01e5c3417fc73ec8bd871e1122226b4bfd6e906db50ded3b62c67df2ec87f6f\n   Compiled from \"LocalVariableInfo.java\"\n public class org.apache.bcel.verifier.statics.LocalVariableInfo\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #31                         // org/apache/bcel/verifier/statics/LocalVariableInfo\n-  super_class: #32                        // java/lang/Object\n+  this_class: #11                         // org/apache/bcel/verifier/statics/LocalVariableInfo\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 7, attributes: 1\n Constant pool:\n-    #1 = Methodref          #32.#71       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #72           // java/util/Hashtable\n-    #3 = Methodref          #2.#71        // java/util/Hashtable.\"<init>\":()V\n-    #4 = Fieldref           #31.#73       // org/apache/bcel/verifier/statics/LocalVariableInfo.types:Ljava/util/Hashtable;\n-    #5 = Fieldref           #31.#74       // org/apache/bcel/verifier/statics/LocalVariableInfo.names:Ljava/util/Hashtable;\n-    #6 = Methodref          #75.#76       // java/lang/Integer.toString:(I)Ljava/lang/String;\n-    #7 = Methodref          #2.#77        // java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-    #8 = Methodref          #2.#78        // java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #9 = Class              #79           // org/apache/bcel/generic/Type\n-   #10 = Class              #80           // java/lang/String\n-   #11 = Methodref          #31.#81       // org/apache/bcel/verifier/statics/LocalVariableInfo.add:(ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n-   #12 = Methodref          #31.#82       // org/apache/bcel/verifier/statics/LocalVariableInfo.getName:(I)Ljava/lang/String;\n-   #13 = Methodref          #10.#83       // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #14 = Class              #84           // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-   #15 = Class              #85           // java/lang/StringBuilder\n-   #16 = Methodref          #15.#71       // java/lang/StringBuilder.\"<init>\":()V\n-   #17 = String             #86           // At bytecode offset \\'\n-   #18 = Methodref          #15.#87       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #19 = Methodref          #15.#88       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #20 = String             #89           // \\' a local variable has two different names: \\'\n-   #21 = String             #90           // \\' and \\'\n-   #22 = String             #91           // \\'.\n-   #23 = Methodref          #15.#92       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #24 = Methodref          #14.#93       // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = Methodref          #31.#94       // org/apache/bcel/verifier/statics/LocalVariableInfo.getType:(I)Lorg/apache/bcel/generic/Type;\n-   #26 = Methodref          #9.#83        // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-   #27 = String             #95           // \\' a local variable has two different types: \\'\n-   #28 = Methodref          #15.#96       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #31.#97       // org/apache/bcel/verifier/statics/LocalVariableInfo.setName:(ILjava/lang/String;)V\n-   #30 = Methodref          #31.#98       // org/apache/bcel/verifier/statics/LocalVariableInfo.setType:(ILorg/apache/bcel/generic/Type;)V\n-   #31 = Class              #99           // org/apache/bcel/verifier/statics/LocalVariableInfo\n-   #32 = Class              #100          // java/lang/Object\n-   #33 = Utf8               types\n-   #34 = Utf8               Ljava/util/Hashtable;\n-   #35 = Utf8               Signature\n-   #36 = Utf8               Ljava/util/Hashtable<Ljava/lang/String;Lorg/apache/bcel/generic/Type;>;\n-   #37 = Utf8               names\n-   #38 = Utf8               Ljava/util/Hashtable<Ljava/lang/String;Ljava/lang/String;>;\n-   #39 = Utf8               <init>\n-   #40 = Utf8               ()V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               LocalVariableTable\n-   #44 = Utf8               this\n-   #45 = Utf8               Lorg/apache/bcel/verifier/statics/LocalVariableInfo;\n-   #46 = Utf8               setName\n-   #47 = Utf8               (ILjava/lang/String;)V\n-   #48 = Utf8               offset\n-   #49 = Utf8               I\n-   #50 = Utf8               name\n-   #51 = Utf8               Ljava/lang/String;\n-   #52 = Utf8               setType\n-   #53 = Utf8               (ILorg/apache/bcel/generic/Type;)V\n-   #54 = Utf8               t\n-   #55 = Utf8               Lorg/apache/bcel/generic/Type;\n-   #56 = Utf8               getType\n-   #57 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n-   #58 = Utf8               getName\n-   #59 = Utf8               (I)Ljava/lang/String;\n-   #60 = Utf8               add\n-   #61 = Utf8               (Ljava/lang/String;IILorg/apache/bcel/generic/Type;)V\n-   #62 = Utf8               i\n-   #63 = Utf8               startPc\n-   #64 = Utf8               length\n-   #65 = Utf8               type\n-   #66 = Utf8               StackMapTable\n-   #67 = Utf8               Exceptions\n-   #68 = Utf8               (ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n-   #69 = Utf8               SourceFile\n-   #70 = Utf8               LocalVariableInfo.java\n-   #71 = NameAndType        #39:#40       // \"<init>\":()V\n-   #72 = Utf8               java/util/Hashtable\n-   #73 = NameAndType        #33:#34       // types:Ljava/util/Hashtable;\n-   #74 = NameAndType        #37:#34       // names:Ljava/util/Hashtable;\n-   #75 = Class              #101          // java/lang/Integer\n-   #76 = NameAndType        #102:#59      // toString:(I)Ljava/lang/String;\n-   #77 = NameAndType        #103:#104     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #78 = NameAndType        #105:#106     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #79 = Utf8               org/apache/bcel/generic/Type\n-   #80 = Utf8               java/lang/String\n-   #81 = NameAndType        #60:#68       // add:(ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n-   #82 = NameAndType        #58:#59       // getName:(I)Ljava/lang/String;\n-   #83 = NameAndType        #107:#108     // equals:(Ljava/lang/Object;)Z\n-   #84 = Utf8               org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n-   #85 = Utf8               java/lang/StringBuilder\n-   #86 = Utf8               At bytecode offset \\'\n-   #87 = NameAndType        #109:#110     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #88 = NameAndType        #109:#111     // append:(I)Ljava/lang/StringBuilder;\n-   #89 = Utf8               \\' a local variable has two different names: \\'\n-   #90 = Utf8               \\' and \\'\n-   #91 = Utf8               \\'.\n-   #92 = NameAndType        #102:#112     // toString:()Ljava/lang/String;\n-   #93 = NameAndType        #39:#113      // \"<init>\":(Ljava/lang/String;)V\n-   #94 = NameAndType        #56:#57       // getType:(I)Lorg/apache/bcel/generic/Type;\n-   #95 = Utf8               \\' a local variable has two different types: \\'\n-   #96 = NameAndType        #109:#114     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #97 = NameAndType        #46:#47       // setName:(ILjava/lang/String;)V\n-   #98 = NameAndType        #52:#53       // setType:(ILorg/apache/bcel/generic/Type;)V\n-   #99 = Utf8               org/apache/bcel/verifier/statics/LocalVariableInfo\n-  #100 = Utf8               java/lang/Object\n-  #101 = Utf8               java/lang/Integer\n-  #102 = Utf8               toString\n-  #103 = Utf8               put\n-  #104 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #105 = Utf8               get\n-  #106 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #107 = Utf8               equals\n-  #108 = Utf8               (Ljava/lang/Object;)Z\n-  #109 = Utf8               append\n-  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #112 = Utf8               ()Ljava/lang/String;\n-  #113 = Utf8               (Ljava/lang/String;)V\n-  #114 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/util/Hashtable\n+    #8 = Utf8               java/util/Hashtable\n+    #9 = Methodref          #7.#3         // java/util/Hashtable.\"<init>\":()V\n+   #10 = Fieldref           #11.#12       // org/apache/bcel/verifier/statics/LocalVariableInfo.types:Ljava/util/Hashtable;\n+   #11 = Class              #13           // org/apache/bcel/verifier/statics/LocalVariableInfo\n+   #12 = NameAndType        #14:#15       // types:Ljava/util/Hashtable;\n+   #13 = Utf8               org/apache/bcel/verifier/statics/LocalVariableInfo\n+   #14 = Utf8               types\n+   #15 = Utf8               Ljava/util/Hashtable;\n+   #16 = Fieldref           #11.#17       // org/apache/bcel/verifier/statics/LocalVariableInfo.names:Ljava/util/Hashtable;\n+   #17 = NameAndType        #18:#15       // names:Ljava/util/Hashtable;\n+   #18 = Utf8               names\n+   #19 = Methodref          #20.#21       // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #20 = Class              #22           // java/lang/Integer\n+   #21 = NameAndType        #23:#24       // toString:(I)Ljava/lang/String;\n+   #22 = Utf8               java/lang/Integer\n+   #23 = Utf8               toString\n+   #24 = Utf8               (I)Ljava/lang/String;\n+   #25 = Methodref          #7.#26        // java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #26 = NameAndType        #27:#28       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #27 = Utf8               put\n+   #28 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #29 = Methodref          #7.#30        // java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #30 = NameAndType        #31:#32       // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #31 = Utf8               get\n+   #32 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #33 = Class              #34           // org/apache/bcel/generic/Type\n+   #34 = Utf8               org/apache/bcel/generic/Type\n+   #35 = Class              #36           // java/lang/String\n+   #36 = Utf8               java/lang/String\n+   #37 = Methodref          #11.#38       // org/apache/bcel/verifier/statics/LocalVariableInfo.add:(ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n+   #38 = NameAndType        #39:#40       // add:(ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n+   #39 = Utf8               add\n+   #40 = Utf8               (ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n+   #41 = Methodref          #11.#42       // org/apache/bcel/verifier/statics/LocalVariableInfo.getName:(I)Ljava/lang/String;\n+   #42 = NameAndType        #43:#24       // getName:(I)Ljava/lang/String;\n+   #43 = Utf8               getName\n+   #44 = Methodref          #35.#45       // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #45 = NameAndType        #46:#47       // equals:(Ljava/lang/Object;)Z\n+   #46 = Utf8               equals\n+   #47 = Utf8               (Ljava/lang/Object;)Z\n+   #48 = Class              #49           // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+   #49 = Utf8               org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+   #50 = Class              #51           // java/lang/StringBuilder\n+   #51 = Utf8               java/lang/StringBuilder\n+   #52 = Methodref          #50.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #53 = String             #54           // At bytecode offset \\'\n+   #54 = Utf8               At bytecode offset \\'\n+   #55 = Methodref          #50.#56       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #56 = NameAndType        #57:#58       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #57 = Utf8               append\n+   #58 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #59 = Methodref          #50.#60       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #60 = NameAndType        #57:#61       // append:(I)Ljava/lang/StringBuilder;\n+   #61 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #62 = String             #63           // \\' a local variable has two different names: \\'\n+   #63 = Utf8               \\' a local variable has two different names: \\'\n+   #64 = String             #65           // \\' and \\'\n+   #65 = Utf8               \\' and \\'\n+   #66 = String             #67           // \\'.\n+   #67 = Utf8               \\'.\n+   #68 = Methodref          #50.#69       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #69 = NameAndType        #23:#70       // toString:()Ljava/lang/String;\n+   #70 = Utf8               ()Ljava/lang/String;\n+   #71 = Methodref          #48.#72       // org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.\"<init>\":(Ljava/lang/String;)V\n+   #72 = NameAndType        #5:#73        // \"<init>\":(Ljava/lang/String;)V\n+   #73 = Utf8               (Ljava/lang/String;)V\n+   #74 = Methodref          #11.#75       // org/apache/bcel/verifier/statics/LocalVariableInfo.getType:(I)Lorg/apache/bcel/generic/Type;\n+   #75 = NameAndType        #76:#77       // getType:(I)Lorg/apache/bcel/generic/Type;\n+   #76 = Utf8               getType\n+   #77 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n+   #78 = Methodref          #33.#45       // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+   #79 = String             #80           // \\' a local variable has two different types: \\'\n+   #80 = Utf8               \\' a local variable has two different types: \\'\n+   #81 = Methodref          #50.#82       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #82 = NameAndType        #57:#83       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #83 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #84 = Methodref          #11.#85       // org/apache/bcel/verifier/statics/LocalVariableInfo.setName:(ILjava/lang/String;)V\n+   #85 = NameAndType        #86:#87       // setName:(ILjava/lang/String;)V\n+   #86 = Utf8               setName\n+   #87 = Utf8               (ILjava/lang/String;)V\n+   #88 = Methodref          #11.#89       // org/apache/bcel/verifier/statics/LocalVariableInfo.setType:(ILorg/apache/bcel/generic/Type;)V\n+   #89 = NameAndType        #90:#91       // setType:(ILorg/apache/bcel/generic/Type;)V\n+   #90 = Utf8               setType\n+   #91 = Utf8               (ILorg/apache/bcel/generic/Type;)V\n+   #92 = Utf8               Signature\n+   #93 = Utf8               Ljava/util/Hashtable<Ljava/lang/String;Lorg/apache/bcel/generic/Type;>;\n+   #94 = Utf8               Ljava/util/Hashtable<Ljava/lang/String;Ljava/lang/String;>;\n+   #95 = Utf8               Code\n+   #96 = Utf8               LineNumberTable\n+   #97 = Utf8               LocalVariableTable\n+   #98 = Utf8               this\n+   #99 = Utf8               Lorg/apache/bcel/verifier/statics/LocalVariableInfo;\n+  #100 = Utf8               offset\n+  #101 = Utf8               I\n+  #102 = Utf8               name\n+  #103 = Utf8               Ljava/lang/String;\n+  #104 = Utf8               t\n+  #105 = Utf8               Lorg/apache/bcel/generic/Type;\n+  #106 = Utf8               (Ljava/lang/String;IILorg/apache/bcel/generic/Type;)V\n+  #107 = Utf8               i\n+  #108 = Utf8               startPc\n+  #109 = Utf8               length\n+  #110 = Utf8               type\n+  #111 = Utf8               StackMapTable\n+  #112 = Utf8               Exceptions\n+  #113 = Utf8               SourceFile\n+  #114 = Utf8               LocalVariableInfo.java\n {\n   private final java.util.Hashtable<java.lang.String, org.apache.bcel.generic.Type> types;\n     descriptor: Ljava/util/Hashtable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #36                          // Ljava/util/Hashtable<Ljava/lang/String;Lorg/apache/bcel/generic/Type;>;\n+    Signature: #93                          // Ljava/util/Hashtable<Ljava/lang/String;Lorg/apache/bcel/generic/Type;>;\n \n   private final java.util.Hashtable<java.lang.String, java.lang.String> names;\n     descriptor: Ljava/util/Hashtable;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #38                          // Ljava/util/Hashtable<Ljava/lang/String;Ljava/lang/String;>;\n+    Signature: #94                          // Ljava/util/Hashtable<Ljava/lang/String;Ljava/lang/String;>;\n \n   public org.apache.bcel.verifier.statics.LocalVariableInfo();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/Hashtable\n+         5: new           #7                  // class java/util/Hashtable\n          8: dup\n-         9: invokespecial #3                  // Method java/util/Hashtable.\"<init>\":()V\n-        12: putfield      #4                  // Field types:Ljava/util/Hashtable;\n+         9: invokespecial #9                  // Method java/util/Hashtable.\"<init>\":()V\n+        12: putfield      #10                 // Field types:Ljava/util/Hashtable;\n         15: aload_0\n-        16: new           #2                  // class java/util/Hashtable\n+        16: new           #7                  // class java/util/Hashtable\n         19: dup\n-        20: invokespecial #3                  // Method java/util/Hashtable.\"<init>\":()V\n-        23: putfield      #5                  // Field names:Ljava/util/Hashtable;\n+        20: invokespecial #9                  // Method java/util/Hashtable.\"<init>\":()V\n+        23: putfield      #16                 // Field names:Ljava/util/Hashtable;\n         26: return\n       LineNumberTable:\n         line 32: 0\n         line 35: 4\n         line 38: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -161,19 +161,19 @@\n \n   private void setName(int, java.lang.String);\n     descriptor: (ILjava/lang/String;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #5                  // Field names:Ljava/util/Hashtable;\n+         1: getfield      #16                 // Field names:Ljava/util/Hashtable;\n          4: iload_1\n-         5: invokestatic  #6                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+         5: invokestatic  #19                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n          8: aload_2\n-         9: invokevirtual #7                  // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokevirtual #25                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         12: pop\n         13: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -183,19 +183,19 @@\n \n   private void setType(int, org.apache.bcel.generic.Type);\n     descriptor: (ILorg/apache/bcel/generic/Type;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #4                  // Field types:Ljava/util/Hashtable;\n+         1: getfield      #10                 // Field types:Ljava/util/Hashtable;\n          4: iload_1\n-         5: invokestatic  #6                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+         5: invokestatic  #19                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n          8: aload_2\n-         9: invokevirtual #7                  // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+         9: invokevirtual #25                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         12: pop\n         13: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -205,38 +205,38 @@\n \n   public org.apache.bcel.generic.Type getType(int);\n     descriptor: (I)Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field types:Ljava/util/Hashtable;\n+         1: getfield      #10                 // Field types:Ljava/util/Hashtable;\n          4: iload_1\n-         5: invokestatic  #6                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-         8: invokevirtual #8                  // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        11: checkcast     #9                  // class org/apache/bcel/generic/Type\n+         5: invokestatic  #19                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+         8: invokevirtual #29                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        11: checkcast     #33                 // class org/apache/bcel/generic/Type\n         14: areturn\n       LineNumberTable:\n         line 65: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/bcel/verifier/statics/LocalVariableInfo;\n             0      15     1 offset   I\n \n   public java.lang.String getName(int);\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field names:Ljava/util/Hashtable;\n+         1: getfield      #16                 // Field names:Ljava/util/Hashtable;\n          4: iload_1\n-         5: invokestatic  #6                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n-         8: invokevirtual #8                  // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        11: checkcast     #10                 // class java/lang/String\n+         5: invokestatic  #19                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+         8: invokevirtual #29                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        11: checkcast     #35                 // class java/lang/String\n         14: areturn\n       LineNumberTable:\n         line 77: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/bcel/verifier/statics/LocalVariableInfo;\n             0      15     1 offset   I\n@@ -253,15 +253,15 @@\n          6: iload_3\n          7: iadd\n          8: if_icmpgt     26\n         11: aload_0\n         12: iload         5\n         14: aload_1\n         15: aload         4\n-        17: invokespecial #11                 // Method add:(ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n+        17: invokespecial #37                 // Method add:(ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n         20: iinc          5, 1\n         23: goto          3\n         26: return\n       LineNumberTable:\n         line 93: 0\n         line 94: 11\n         line 93: 20\n@@ -286,88 +286,88 @@\n   private void add(int, java.lang.String, org.apache.bcel.generic.Type) throws org.apache.bcel.verifier.exc.LocalVariableInfoInconsistentException;\n     descriptor: (ILjava/lang/String;Lorg/apache/bcel/generic/Type;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #12                 // Method getName:(I)Ljava/lang/String;\n+         2: invokevirtual #41                 // Method getName:(I)Ljava/lang/String;\n          5: ifnull        74\n          8: aload_0\n          9: iload_1\n-        10: invokevirtual #12                 // Method getName:(I)Ljava/lang/String;\n+        10: invokevirtual #41                 // Method getName:(I)Ljava/lang/String;\n         13: aload_2\n-        14: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        14: invokevirtual #44                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         17: ifne          74\n-        20: new           #14                 // class org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+        20: new           #48                 // class org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n         23: dup\n-        24: new           #15                 // class java/lang/StringBuilder\n+        24: new           #50                 // class java/lang/StringBuilder\n         27: dup\n-        28: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        31: ldc           #17                 // String At bytecode offset \\'\n-        33: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        28: invokespecial #52                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        31: ldc           #53                 // String At bytecode offset \\'\n+        33: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: iload_1\n-        37: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        40: ldc           #20                 // String \\' a local variable has two different names: \\'\n-        42: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        37: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        40: ldc           #62                 // String \\' a local variable has two different names: \\'\n+        42: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         45: aload_0\n         46: iload_1\n-        47: invokevirtual #12                 // Method getName:(I)Ljava/lang/String;\n-        50: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: ldc           #21                 // String \\' and \\'\n-        55: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: invokevirtual #41                 // Method getName:(I)Ljava/lang/String;\n+        50: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: ldc           #64                 // String \\' and \\'\n+        55: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: aload_2\n-        59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        62: ldc           #22                 // String \\'.\n-        64: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        70: invokespecial #24                 // Method org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.\"<init>\":(Ljava/lang/String;)V\n+        59: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: ldc           #66                 // String \\'.\n+        64: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        70: invokespecial #71                 // Method org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.\"<init>\":(Ljava/lang/String;)V\n         73: athrow\n         74: aload_0\n         75: iload_1\n-        76: invokevirtual #25                 // Method getType:(I)Lorg/apache/bcel/generic/Type;\n+        76: invokevirtual #74                 // Method getType:(I)Lorg/apache/bcel/generic/Type;\n         79: ifnull        148\n         82: aload_0\n         83: iload_1\n-        84: invokevirtual #25                 // Method getType:(I)Lorg/apache/bcel/generic/Type;\n+        84: invokevirtual #74                 // Method getType:(I)Lorg/apache/bcel/generic/Type;\n         87: aload_3\n-        88: invokevirtual #26                 // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+        88: invokevirtual #78                 // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n         91: ifne          148\n-        94: new           #14                 // class org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n+        94: new           #48                 // class org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException\n         97: dup\n-        98: new           #15                 // class java/lang/StringBuilder\n+        98: new           #50                 // class java/lang/StringBuilder\n        101: dup\n-       102: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       105: ldc           #17                 // String At bytecode offset \\'\n-       107: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       102: invokespecial #52                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       105: ldc           #53                 // String At bytecode offset \\'\n+       107: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        110: iload_1\n-       111: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       114: ldc           #27                 // String \\' a local variable has two different types: \\'\n-       116: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       111: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       114: ldc           #79                 // String \\' a local variable has two different types: \\'\n+       116: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        119: aload_0\n        120: iload_1\n-       121: invokevirtual #25                 // Method getType:(I)Lorg/apache/bcel/generic/Type;\n-       124: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       127: ldc           #21                 // String \\' and \\'\n-       129: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       121: invokevirtual #74                 // Method getType:(I)Lorg/apache/bcel/generic/Type;\n+       124: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       127: ldc           #64                 // String \\' and \\'\n+       129: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        132: aload_3\n-       133: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       136: ldc           #22                 // String \\'.\n-       138: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       141: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       144: invokespecial #24                 // Method org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.\"<init>\":(Ljava/lang/String;)V\n+       133: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       136: ldc           #66                 // String \\'.\n+       138: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       141: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       144: invokespecial #71                 // Method org/apache/bcel/verifier/exc/LocalVariableInfoInconsistentException.\"<init>\":(Ljava/lang/String;)V\n        147: athrow\n        148: aload_0\n        149: iload_1\n        150: aload_2\n-       151: invokespecial #29                 // Method setName:(ILjava/lang/String;)V\n+       151: invokespecial #84                 // Method setName:(ILjava/lang/String;)V\n        154: aload_0\n        155: iload_1\n        156: aload_3\n-       157: invokespecial #30                 // Method setType:(ILorg/apache/bcel/generic/Type;)V\n+       157: invokespecial #88                 // Method setType:(ILorg/apache/bcel/generic/Type;)V\n        160: return\n       LineNumberTable:\n         line 105: 0\n         line 106: 8\n         line 107: 20\n         line 108: 47\n         line 111: 74\n"}]}
