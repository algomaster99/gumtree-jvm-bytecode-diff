{"diffoscope-json-version": 1, "source1": "first/NumberOutput.class", "source2": "second/NumberOutput.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,14 +13,36 @@\n     private static long MAX_INT_AS_LONG;\n     static final String SMALLEST_INT;\n     static final String SMALLEST_LONG;\n     private static final int[] TRIPLET_TO_CHARS;\n     private static final String[] sSmallIntStrs;\n     private static final String[] sSmallIntStrs2;\n     \n+    static {\n+        NumberOutput.MILLION = 1000000;\n+        NumberOutput.BILLION = 1000000000;\n+        NumberOutput.BILLION_L = 1000000000L;\n+        NumberOutput.MIN_INT_AS_LONG = -2147483648L;\n+        NumberOutput.MAX_INT_AS_LONG = 2147483647L;\n+        SMALLEST_INT = String.valueOf(Integer.MIN_VALUE);\n+        SMALLEST_LONG = String.valueOf(Long.MIN_VALUE);\n+        TRIPLET_TO_CHARS = new int[1000];\n+        int fullIx = 0;\n+        for (int i1 = 0; i1 < 10; ++i1) {\n+            for (int i2 = 0; i2 < 10; ++i2) {\n+                for (int i3 = 0; i3 < 10; ++i3) {\n+                    final int enc = i1 + 48 << 16 | i2 + 48 << 8 | i3 + 48;\n+                    NumberOutput.TRIPLET_TO_CHARS[fullIx++] = enc;\n+                }\n+            }\n+        }\n+        sSmallIntStrs = new String[] { \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\" };\n+        sSmallIntStrs2 = new String[] { \"-1\", \"-2\", \"-3\", \"-4\", \"-5\", \"-6\", \"-7\", \"-8\", \"-9\", \"-10\" };\n+    }\n+    \n     public static int outputInt(int v, final char[] b, int off) {\n         if (v < 0) {\n             if (v == Integer.MIN_VALUE) {\n                 return _outputSmallestI(b, off);\n             }\n             b[off++] = '-';\n             v = -v;\n@@ -391,30 +413,8 @@\n     \n     private static int _outputSmallestI(final byte[] b, int off) {\n         for (int len = NumberOutput.SMALLEST_INT.length(), i = 0; i < len; ++i) {\n             b[off++] = (byte)NumberOutput.SMALLEST_INT.charAt(i);\n         }\n         return off;\n     }\n-    \n-    static {\n-        NumberOutput.MILLION = 1000000;\n-        NumberOutput.BILLION = 1000000000;\n-        NumberOutput.BILLION_L = 1000000000L;\n-        NumberOutput.MIN_INT_AS_LONG = -2147483648L;\n-        NumberOutput.MAX_INT_AS_LONG = 2147483647L;\n-        SMALLEST_INT = String.valueOf(Integer.MIN_VALUE);\n-        SMALLEST_LONG = String.valueOf(Long.MIN_VALUE);\n-        TRIPLET_TO_CHARS = new int[1000];\n-        int fullIx = 0;\n-        for (int i1 = 0; i1 < 10; ++i1) {\n-            for (int i2 = 0; i2 < 10; ++i2) {\n-                for (int i3 = 0; i3 < 10; ++i3) {\n-                    final int enc = i1 + 48 << 16 | i2 + 48 << 8 | i3 + 48;\n-                    NumberOutput.TRIPLET_TO_CHARS[fullIx++] = enc;\n-                }\n-            }\n-        }\n-        sSmallIntStrs = new String[] { \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\" };\n-        sSmallIntStrs2 = new String[] { \"-1\", \"-2\", \"-3\", \"-4\", \"-5\", \"-6\", \"-7\", \"-8\", \"-9\", \"-10\" };\n-    }\n }\n"}]}
