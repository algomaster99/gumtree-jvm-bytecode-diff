{"diffoscope-json-version": 1, "source1": "first/TapeInputStream.class", "source2": "second/TapeInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,78 +1,78 @@\n-  SHA-256 checksum 261ef4ed60859e158d5a62760df6c626fc0bff187d22e59fce913f87b788bc74\n+  SHA-256 checksum dd6a778c57f3a205e898a46807fd17f9a0bbc6ba9575304824f03af02cff0e15\n   Compiled from \"TapeInputStream.java\"\n class org.apache.commons.compress.archivers.dump.TapeInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #17                         // org/apache/commons/compress/archivers/dump/TapeInputStream\n   super_class: #63                        // java/io/FilterInputStream\n   interfaces: 0, fields: 7, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Class              #141          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-    #2 = Methodref          #63.#142      // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Fieldref           #17.#143      // org/apache/commons/compress/archivers/dump/TapeInputStream.blockBuffer:[B\n-    #4 = Fieldref           #17.#144      // org/apache/commons/compress/archivers/dump/TapeInputStream.currBlkIdx:I\n-    #5 = Fieldref           #17.#145      // org/apache/commons/compress/archivers/dump/TapeInputStream.blockSize:I\n-    #6 = Fieldref           #17.#146      // org/apache/commons/compress/archivers/dump/TapeInputStream.readOffset:I\n-    #7 = Fieldref           #17.#147      // org/apache/commons/compress/archivers/dump/TapeInputStream.isCompressed:Z\n-    #8 = Class              #148          // java/io/IOException\n-    #9 = Class              #149          // java/lang/StringBuilder\n-   #10 = Methodref          #9.#150       // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = String             #151          // Block with\n-   #12 = Methodref          #9.#152       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #9.#153       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #14 = String             #154          //  records found, must be at least 1\n-   #15 = Methodref          #9.#155       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #8.#156       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Class              #157          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-   #18 = Methodref          #158.#159     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #19 = Methodref          #17.#160      // org/apache/commons/compress/archivers/dump/TapeInputStream.readFully:([BII)V\n-   #20 = Fieldref           #17.#161      // org/apache/commons/compress/archivers/dump/TapeInputStream.in:Ljava/io/InputStream;\n-   #21 = Methodref          #162.#163     // java/io/InputStream.available:()I\n-   #22 = Class              #164          // java/lang/IllegalArgumentException\n-   #23 = String             #165          // All reads must be multiple of record size (1024 bytes.\n-   #24 = Methodref          #22.#156      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #25 = Methodref          #17.#166      // org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock:(Z)V\n-   #26 = Class              #167          // org/apache/commons/compress/archivers/dump/ShortFileException\n+    #1 = Class              #137          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+    #2 = Methodref          #63.#138      // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #3 = Fieldref           #17.#139      // org/apache/commons/compress/archivers/dump/TapeInputStream.blockBuffer:[B\n+    #4 = Fieldref           #17.#140      // org/apache/commons/compress/archivers/dump/TapeInputStream.currBlkIdx:I\n+    #5 = Fieldref           #17.#141      // org/apache/commons/compress/archivers/dump/TapeInputStream.blockSize:I\n+    #6 = Fieldref           #17.#142      // org/apache/commons/compress/archivers/dump/TapeInputStream.readOffset:I\n+    #7 = Fieldref           #17.#143      // org/apache/commons/compress/archivers/dump/TapeInputStream.isCompressed:Z\n+    #8 = Class              #144          // java/io/IOException\n+    #9 = Class              #145          // java/lang/StringBuilder\n+   #10 = Methodref          #9.#146       // java/lang/StringBuilder.\"<init>\":()V\n+   #11 = String             #147          // Block with\n+   #12 = Methodref          #9.#148       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #13 = Methodref          #9.#149       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #14 = String             #150          //  records found, must be at least 1\n+   #15 = Methodref          #9.#151       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #8.#152       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Class              #153          // org/apache/commons/compress/archivers/dump/TapeInputStream\n+   #18 = Methodref          #154.#155     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #19 = Methodref          #17.#156      // org/apache/commons/compress/archivers/dump/TapeInputStream.readFully:([BII)V\n+   #20 = Fieldref           #17.#157      // org/apache/commons/compress/archivers/dump/TapeInputStream.in:Ljava/io/InputStream;\n+   #21 = Methodref          #158.#159     // java/io/InputStream.available:()I\n+   #22 = Class              #160          // java/lang/IllegalArgumentException\n+   #23 = String             #161          // All reads must be multiple of record size (1024 bytes.\n+   #24 = Methodref          #22.#152      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #25 = Methodref          #17.#162      // org/apache/commons/compress/archivers/dump/TapeInputStream.readBlock:(Z)V\n+   #26 = Class              #163          // org/apache/commons/compress/archivers/dump/ShortFileException\n    #27 = Long               1024l\n    #29 = Long               -1l\n-   #31 = Methodref          #168.#169     // org/apache/commons/compress/utils/ExactMath.add:(IJ)I\n-   #32 = Fieldref           #158.#161     // java/lang/System.in:Ljava/io/InputStream;\n-   #33 = Methodref          #162.#170     // java/io/InputStream.close:()V\n-   #34 = Methodref          #17.#171      // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n-   #35 = Methodref          #26.#150      // org/apache/commons/compress/archivers/dump/ShortFileException.\"<init>\":()V\n-   #36 = String             #172          // Input buffer is closed\n-   #37 = Fieldref           #17.#173      // org/apache/commons/compress/archivers/dump/TapeInputStream.bytesRead:J\n+   #31 = Methodref          #164.#165     // org/apache/commons/compress/utils/ExactMath.add:(IJ)I\n+   #32 = Fieldref           #154.#157     // java/lang/System.in:Ljava/io/InputStream;\n+   #33 = Methodref          #158.#166     // java/io/InputStream.close:()V\n+   #34 = Methodref          #17.#167      // org/apache/commons/compress/archivers/dump/TapeInputStream.read:([BII)I\n+   #35 = Methodref          #26.#146      // org/apache/commons/compress/archivers/dump/ShortFileException.\"<init>\":()V\n+   #36 = String             #168          // Input buffer is closed\n+   #37 = Fieldref           #17.#169      // org/apache/commons/compress/archivers/dump/TapeInputStream.bytesRead:J\n    #38 = Long               4l\n-   #40 = Methodref          #174.#175     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n+   #40 = Methodref          #170.#171     // org/apache/commons/compress/archivers/dump/DumpArchiveUtil.convert32:([BI)I\n    #41 = Integer            268435455\n-   #42 = Methodref          #17.#176      // org/apache/commons/compress/archivers/dump/TapeInputStream.readRange:(I)[B\n-   #43 = Methodref          #177.#178     // java/util/Arrays.fill:([BB)V\n-   #44 = Fieldref           #64.#179      // org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n-   #45 = Methodref          #180.#181     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-   #46 = Methodref          #180.#182     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I\n-   #47 = Class              #183          // java/util/zip/Inflater\n-   #48 = Methodref          #47.#150      // java/util/zip/Inflater.\"<init>\":()V\n-   #49 = Methodref          #47.#184      // java/util/zip/Inflater.setInput:([BII)V\n-   #50 = Methodref          #47.#185      // java/util/zip/Inflater.inflate:([B)I\n-   #51 = Methodref          #47.#186      // java/util/zip/Inflater.end:()V\n-   #52 = Class              #187          // java/util/zip/DataFormatException\n-   #53 = Class              #188          // org/apache/commons/compress/archivers/dump/DumpArchiveException\n-   #54 = String             #189          // Bad data\n-   #55 = Methodref          #53.#190      // org/apache/commons/compress/archivers/dump/DumpArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #56 = Class              #191          // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n-   #57 = String             #192          // BZLIB2\n-   #58 = Methodref          #56.#156      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":(Ljava/lang/String;)V\n-   #59 = String             #193          // LZO\n-   #60 = Methodref          #56.#150      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":()V\n-   #61 = Methodref          #194.#195     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-   #62 = Methodref          #194.#196     // org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n-   #63 = Class              #197          // java/io/FilterInputStream\n-   #64 = Class              #198          // org/apache/commons/compress/archivers/dump/TapeInputStream$1\n+   #42 = Methodref          #17.#172      // org/apache/commons/compress/archivers/dump/TapeInputStream.readRange:(I)[B\n+   #43 = Methodref          #173.#174     // java/util/Arrays.fill:([BB)V\n+   #44 = Fieldref           #64.#175      // org/apache/commons/compress/archivers/dump/TapeInputStream$1.$SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n+   #45 = Methodref          #176.#177     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+   #46 = Methodref          #176.#178     // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE.ordinal:()I\n+   #47 = Class              #179          // java/util/zip/Inflater\n+   #48 = Methodref          #47.#146      // java/util/zip/Inflater.\"<init>\":()V\n+   #49 = Methodref          #47.#180      // java/util/zip/Inflater.setInput:([BII)V\n+   #50 = Methodref          #47.#181      // java/util/zip/Inflater.inflate:([B)I\n+   #51 = Methodref          #47.#182      // java/util/zip/Inflater.end:()V\n+   #52 = Class              #183          // java/util/zip/DataFormatException\n+   #53 = Class              #184          // org/apache/commons/compress/archivers/dump/DumpArchiveException\n+   #54 = String             #185          // Bad data\n+   #55 = Methodref          #53.#186      // org/apache/commons/compress/archivers/dump/DumpArchiveException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #56 = Class              #187          // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n+   #57 = String             #188          // BZLIB2\n+   #58 = Methodref          #56.#152      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":(Ljava/lang/String;)V\n+   #59 = String             #189          // LZO\n+   #60 = Methodref          #56.#146      // org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException.\"<init>\":()V\n+   #61 = Methodref          #190.#191     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+   #62 = Methodref          #190.#192     // org/apache/commons/compress/utils/IOUtils.readRange:(Ljava/io/InputStream;I)[B\n+   #63 = Class              #193          // java/io/FilterInputStream\n+   #64 = Class              #194          // org/apache/commons/compress/archivers/dump/TapeInputStream$1\n    #65 = Utf8               InnerClasses\n    #66 = Utf8               blockBuffer\n    #67 = Utf8               [B\n    #68 = Utf8               currBlkIdx\n    #69 = Utf8               I\n    #70 = Utf8               blockSize\n    #71 = Utf8               RECORD_SIZE\n@@ -105,143 +105,139 @@\n    #98 = Utf8               sfe\n    #99 = Utf8               Lorg/apache/commons/compress/archivers/dump/ShortFileException;\n   #100 = Utf8               n\n   #101 = Utf8               b\n   #102 = Utf8               off\n   #103 = Utf8               len\n   #104 = Utf8               bytes\n-  #105 = Class              #167          // org/apache/commons/compress/archivers/dump/ShortFileException\n-  #106 = Utf8               skip\n-  #107 = Utf8               (J)J\n-  #108 = Class              #157          // org/apache/commons/compress/archivers/dump/TapeInputStream\n-  #109 = Utf8               close\n-  #110 = Utf8               ()V\n-  #111 = Utf8               peek\n-  #112 = Utf8               ()[B\n-  #113 = Utf8               readRecord\n-  #114 = Utf8               result\n-  #115 = Class              #67           // \"[B\"\n-  #116 = Utf8               readBlock\n-  #117 = Utf8               (Z)V\n-  #118 = Utf8               e\n-  #119 = Utf8               Ljava/util/zip/DataFormatException;\n-  #120 = Utf8               inflator\n-  #121 = Utf8               Ljava/util/zip/Inflater;\n-  #122 = Utf8               flags\n-  #123 = Utf8               length\n-  #124 = Utf8               compBuffer\n-  #125 = Utf8               h\n-  #126 = Utf8               compressed\n-  #127 = Utf8               decompress\n-  #128 = Class              #183          // java/util/zip/Inflater\n-  #129 = Class              #187          // java/util/zip/DataFormatException\n-  #130 = Class              #199          // java/lang/Throwable\n-  #131 = Utf8               readFully\n-  #132 = Utf8               ([BII)V\n-  #133 = Utf8               count\n-  #134 = Utf8               readRange\n-  #135 = Utf8               (I)[B\n-  #136 = Utf8               ret\n-  #137 = Utf8               getBytesRead\n-  #138 = Utf8               ()J\n-  #139 = Utf8               SourceFile\n-  #140 = Utf8               TapeInputStream.java\n-  #141 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n-  #142 = NameAndType        #79:#80       // \"<init>\":(Ljava/io/InputStream;)V\n-  #143 = NameAndType        #66:#67       // blockBuffer:[B\n-  #144 = NameAndType        #68:#69       // currBlkIdx:I\n-  #145 = NameAndType        #70:#69       // blockSize:I\n-  #146 = NameAndType        #74:#69       // readOffset:I\n-  #147 = NameAndType        #75:#76       // isCompressed:Z\n-  #148 = Utf8               java/io/IOException\n-  #149 = Utf8               java/lang/StringBuilder\n-  #150 = NameAndType        #79:#110      // \"<init>\":()V\n-  #151 = Utf8               Block with\n-  #152 = NameAndType        #200:#201     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #153 = NameAndType        #200:#202     // append:(I)Ljava/lang/StringBuilder;\n-  #154 = Utf8                records found, must be at least 1\n-  #155 = NameAndType        #203:#204     // toString:()Ljava/lang/String;\n-  #156 = NameAndType        #79:#205      // \"<init>\":(Ljava/lang/String;)V\n-  #157 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n-  #158 = Class              #206          // java/lang/System\n-  #159 = NameAndType        #207:#208     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #160 = NameAndType        #131:#132     // readFully:([BII)V\n-  #161 = NameAndType        #86:#87       // in:Ljava/io/InputStream;\n-  #162 = Class              #209          // java/io/InputStream\n-  #163 = NameAndType        #94:#95       // available:()I\n-  #164 = Utf8               java/lang/IllegalArgumentException\n-  #165 = Utf8               All reads must be multiple of record size (1024 bytes.\n-  #166 = NameAndType        #116:#117     // readBlock:(Z)V\n-  #167 = Utf8               org/apache/commons/compress/archivers/dump/ShortFileException\n-  #168 = Class              #210          // org/apache/commons/compress/utils/ExactMath\n-  #169 = NameAndType        #211:#212     // add:(IJ)I\n-  #170 = NameAndType        #109:#110     // close:()V\n-  #171 = NameAndType        #96:#97       // read:([BII)I\n-  #172 = Utf8               Input buffer is closed\n-  #173 = NameAndType        #77:#78       // bytesRead:J\n-  #174 = Class              #213          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #175 = NameAndType        #214:#215     // convert32:([BI)I\n-  #176 = NameAndType        #134:#135     // readRange:(I)[B\n-  #177 = Class              #216          // java/util/Arrays\n-  #178 = NameAndType        #217:#218     // fill:([BB)V\n-  #179 = NameAndType        #219:#220     // $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n-  #180 = Class              #221          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n-  #181 = NameAndType        #223:#224     // find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-  #182 = NameAndType        #225:#95      // ordinal:()I\n-  #183 = Utf8               java/util/zip/Inflater\n-  #184 = NameAndType        #226:#132     // setInput:([BII)V\n-  #185 = NameAndType        #227:#228     // inflate:([B)I\n-  #186 = NameAndType        #229:#110     // end:()V\n-  #187 = Utf8               java/util/zip/DataFormatException\n-  #188 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveException\n-  #189 = Utf8               Bad data\n-  #190 = NameAndType        #79:#230      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #191 = Utf8               org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n-  #192 = Utf8               BZLIB2\n-  #193 = Utf8               LZO\n-  #194 = Class              #231          // org/apache/commons/compress/utils/IOUtils\n-  #195 = NameAndType        #131:#232     // readFully:(Ljava/io/InputStream;[BII)I\n-  #196 = NameAndType        #134:#233     // readRange:(Ljava/io/InputStream;I)[B\n-  #197 = Utf8               java/io/FilterInputStream\n-  #198 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream$1\n-  #199 = Utf8               java/lang/Throwable\n-  #200 = Utf8               append\n-  #201 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #202 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #203 = Utf8               toString\n-  #204 = Utf8               ()Ljava/lang/String;\n-  #205 = Utf8               (Ljava/lang/String;)V\n-  #206 = Utf8               java/lang/System\n-  #207 = Utf8               arraycopy\n-  #208 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #209 = Utf8               java/io/InputStream\n-  #210 = Utf8               org/apache/commons/compress/utils/ExactMath\n-  #211 = Utf8               add\n-  #212 = Utf8               (IJ)I\n-  #213 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n-  #214 = Utf8               convert32\n-  #215 = Utf8               ([BI)I\n-  #216 = Utf8               java/util/Arrays\n-  #217 = Utf8               fill\n-  #218 = Utf8               ([BB)V\n-  #219 = Utf8               $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE\n-  #220 = Utf8               [I\n-  #221 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n-  #222 = Utf8               COMPRESSION_TYPE\n-  #223 = Utf8               find\n-  #224 = Utf8               (I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n-  #225 = Utf8               ordinal\n-  #226 = Utf8               setInput\n-  #227 = Utf8               inflate\n-  #228 = Utf8               ([B)I\n-  #229 = Utf8               end\n-  #230 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #231 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #232 = Utf8               (Ljava/io/InputStream;[BII)I\n-  #233 = Utf8               (Ljava/io/InputStream;I)[B\n+  #105 = Utf8               skip\n+  #106 = Utf8               (J)J\n+  #107 = Utf8               close\n+  #108 = Utf8               ()V\n+  #109 = Utf8               peek\n+  #110 = Utf8               ()[B\n+  #111 = Utf8               readRecord\n+  #112 = Utf8               result\n+  #113 = Class              #67           // \"[B\"\n+  #114 = Utf8               readBlock\n+  #115 = Utf8               (Z)V\n+  #116 = Utf8               e\n+  #117 = Utf8               Ljava/util/zip/DataFormatException;\n+  #118 = Utf8               inflator\n+  #119 = Utf8               Ljava/util/zip/Inflater;\n+  #120 = Utf8               flags\n+  #121 = Utf8               length\n+  #122 = Utf8               compBuffer\n+  #123 = Utf8               h\n+  #124 = Utf8               compressed\n+  #125 = Utf8               decompress\n+  #126 = Class              #195          // java/lang/Throwable\n+  #127 = Utf8               readFully\n+  #128 = Utf8               ([BII)V\n+  #129 = Utf8               count\n+  #130 = Utf8               readRange\n+  #131 = Utf8               (I)[B\n+  #132 = Utf8               ret\n+  #133 = Utf8               getBytesRead\n+  #134 = Utf8               ()J\n+  #135 = Utf8               SourceFile\n+  #136 = Utf8               TapeInputStream.java\n+  #137 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  #138 = NameAndType        #79:#80       // \"<init>\":(Ljava/io/InputStream;)V\n+  #139 = NameAndType        #66:#67       // blockBuffer:[B\n+  #140 = NameAndType        #68:#69       // currBlkIdx:I\n+  #141 = NameAndType        #70:#69       // blockSize:I\n+  #142 = NameAndType        #74:#69       // readOffset:I\n+  #143 = NameAndType        #75:#76       // isCompressed:Z\n+  #144 = Utf8               java/io/IOException\n+  #145 = Utf8               java/lang/StringBuilder\n+  #146 = NameAndType        #79:#108      // \"<init>\":()V\n+  #147 = Utf8               Block with\n+  #148 = NameAndType        #196:#197     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #149 = NameAndType        #196:#198     // append:(I)Ljava/lang/StringBuilder;\n+  #150 = Utf8                records found, must be at least 1\n+  #151 = NameAndType        #199:#200     // toString:()Ljava/lang/String;\n+  #152 = NameAndType        #79:#201      // \"<init>\":(Ljava/lang/String;)V\n+  #153 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream\n+  #154 = Class              #202          // java/lang/System\n+  #155 = NameAndType        #203:#204     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #156 = NameAndType        #127:#128     // readFully:([BII)V\n+  #157 = NameAndType        #86:#87       // in:Ljava/io/InputStream;\n+  #158 = Class              #205          // java/io/InputStream\n+  #159 = NameAndType        #94:#95       // available:()I\n+  #160 = Utf8               java/lang/IllegalArgumentException\n+  #161 = Utf8               All reads must be multiple of record size (1024 bytes.\n+  #162 = NameAndType        #114:#115     // readBlock:(Z)V\n+  #163 = Utf8               org/apache/commons/compress/archivers/dump/ShortFileException\n+  #164 = Class              #206          // org/apache/commons/compress/utils/ExactMath\n+  #165 = NameAndType        #207:#208     // add:(IJ)I\n+  #166 = NameAndType        #107:#108     // close:()V\n+  #167 = NameAndType        #96:#97       // read:([BII)I\n+  #168 = Utf8               Input buffer is closed\n+  #169 = NameAndType        #77:#78       // bytesRead:J\n+  #170 = Class              #209          // org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+  #171 = NameAndType        #210:#211     // convert32:([BI)I\n+  #172 = NameAndType        #130:#131     // readRange:(I)[B\n+  #173 = Class              #212          // java/util/Arrays\n+  #174 = NameAndType        #213:#214     // fill:([BB)V\n+  #175 = NameAndType        #215:#216     // $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE:[I\n+  #176 = Class              #217          // org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n+  #177 = NameAndType        #219:#220     // find:(I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+  #178 = NameAndType        #221:#95      // ordinal:()I\n+  #179 = Utf8               java/util/zip/Inflater\n+  #180 = NameAndType        #222:#128     // setInput:([BII)V\n+  #181 = NameAndType        #223:#224     // inflate:([B)I\n+  #182 = NameAndType        #225:#108     // end:()V\n+  #183 = Utf8               java/util/zip/DataFormatException\n+  #184 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveException\n+  #185 = Utf8               Bad data\n+  #186 = NameAndType        #79:#226      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #187 = Utf8               org/apache/commons/compress/archivers/dump/UnsupportedCompressionAlgorithmException\n+  #188 = Utf8               BZLIB2\n+  #189 = Utf8               LZO\n+  #190 = Class              #227          // org/apache/commons/compress/utils/IOUtils\n+  #191 = NameAndType        #127:#228     // readFully:(Ljava/io/InputStream;[BII)I\n+  #192 = NameAndType        #130:#229     // readRange:(Ljava/io/InputStream;I)[B\n+  #193 = Utf8               java/io/FilterInputStream\n+  #194 = Utf8               org/apache/commons/compress/archivers/dump/TapeInputStream$1\n+  #195 = Utf8               java/lang/Throwable\n+  #196 = Utf8               append\n+  #197 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #198 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #199 = Utf8               toString\n+  #200 = Utf8               ()Ljava/lang/String;\n+  #201 = Utf8               (Ljava/lang/String;)V\n+  #202 = Utf8               java/lang/System\n+  #203 = Utf8               arraycopy\n+  #204 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #205 = Utf8               java/io/InputStream\n+  #206 = Utf8               org/apache/commons/compress/utils/ExactMath\n+  #207 = Utf8               add\n+  #208 = Utf8               (IJ)I\n+  #209 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveUtil\n+  #210 = Utf8               convert32\n+  #211 = Utf8               ([BI)I\n+  #212 = Utf8               java/util/Arrays\n+  #213 = Utf8               fill\n+  #214 = Utf8               ([BB)V\n+  #215 = Utf8               $SwitchMap$org$apache$commons$compress$archivers$dump$DumpArchiveConstants$COMPRESSION_TYPE\n+  #216 = Utf8               [I\n+  #217 = Utf8               org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE\n+  #218 = Utf8               COMPRESSION_TYPE\n+  #219 = Utf8               find\n+  #220 = Utf8               (I)Lorg/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE;\n+  #221 = Utf8               ordinal\n+  #222 = Utf8               setInput\n+  #223 = Utf8               inflate\n+  #224 = Utf8               ([B)I\n+  #225 = Utf8               end\n+  #226 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #227 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #228 = Utf8               (Ljava/io/InputStream;[BII)I\n+  #229 = Utf8               (Ljava/io/InputStream;I)[B\n {\n   private byte[] blockBuffer;\n     descriptor: [B\n     flags: (0x0002) ACC_PRIVATE\n \n   private int currBlkIdx;\n     descriptor: I\n@@ -1190,8 +1186,8 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/dump/TapeInputStream;\n }\n SourceFile: \"TapeInputStream.java\"\n InnerClasses:\n   static #64;                             // class org/apache/commons/compress/archivers/dump/TapeInputStream$1\n-  public static final #222= #180 of #1;   // COMPRESSION_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n+  public static final #218= #176 of #1;   // COMPRESSION_TYPE=class org/apache/commons/compress/archivers/dump/DumpArchiveConstants$COMPRESSION_TYPE of class org/apache/commons/compress/archivers/dump/DumpArchiveConstants\n"}]}
