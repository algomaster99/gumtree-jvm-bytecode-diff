{"diffoscope-json-version": 1, "source1": "first/RequestPayload.class", "source2": "second/RequestPayload.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,87 +1,87 @@\n-  SHA-256 checksum fb0bb8cb315ca4af000b27a6fd49e87f4826319c269afc89675ae43b10f04647\n+  SHA-256 checksum 13cda0e88e75fc6946a2d739ece05f42df52279863c9dee847c35d1d964623de\n   Compiled from \"RequestPayload.java\"\n public class com.fasterxml.jackson.core.util.RequestPayload implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #15                         // com/fasterxml/jackson/core/util/RequestPayload\n-  super_class: #16                        // java/lang/Object\n+  this_class: #11                         // com/fasterxml/jackson/core/util/RequestPayload\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 4, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #16.#51        // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #52            // java/lang/IllegalArgumentException\n-   #3 = Methodref          #2.#51         // java/lang/IllegalArgumentException.\"<init>\":()V\n-   #4 = Fieldref           #15.#53        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsBytes:[B\n-   #5 = Methodref          #9.#54         // java/lang/String.isEmpty:()Z\n-   #6 = String             #55            // UTF-8\n-   #7 = Fieldref           #15.#56        // com/fasterxml/jackson/core/util/RequestPayload._charset:Ljava/lang/String;\n-   #8 = Fieldref           #15.#57        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsText:Ljava/lang/CharSequence;\n-   #9 = Class              #58            // java/lang/String\n-  #10 = Methodref          #9.#59         // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n-  #11 = Class              #60            // java/io/IOException\n-  #12 = Class              #61            // java/lang/RuntimeException\n-  #13 = Methodref          #12.#62        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #14 = InterfaceMethodref #42.#63        // java/lang/CharSequence.toString:()Ljava/lang/String;\n-  #15 = Class              #64            // com/fasterxml/jackson/core/util/RequestPayload\n-  #16 = Class              #65            // java/lang/Object\n-  #17 = Class              #66            // java/io/Serializable\n-  #18 = Utf8               serialVersionUID\n-  #19 = Utf8               J\n-  #20 = Utf8               ConstantValue\n-  #21 = Long               1l\n-  #23 = Utf8               _payloadAsBytes\n-  #24 = Utf8               [B\n-  #25 = Utf8               _payloadAsText\n-  #26 = Utf8               Ljava/lang/CharSequence;\n-  #27 = Utf8               _charset\n-  #28 = Utf8               Ljava/lang/String;\n-  #29 = Utf8               <init>\n-  #30 = Utf8               ([BLjava/lang/String;)V\n-  #31 = Utf8               Code\n-  #32 = Utf8               LineNumberTable\n-  #33 = Utf8               LocalVariableTable\n-  #34 = Utf8               this\n-  #35 = Utf8               Lcom/fasterxml/jackson/core/util/RequestPayload;\n-  #36 = Utf8               bytes\n-  #37 = Utf8               charset\n-  #38 = Utf8               StackMapTable\n-  #39 = Class              #24            // \"[B\"\n-  #40 = Utf8               (Ljava/lang/CharSequence;)V\n-  #41 = Utf8               str\n-  #42 = Class              #67            // java/lang/CharSequence\n-  #43 = Utf8               getRawPayload\n-  #44 = Utf8               ()Ljava/lang/Object;\n-  #45 = Utf8               toString\n-  #46 = Utf8               ()Ljava/lang/String;\n-  #47 = Utf8               e\n-  #48 = Utf8               Ljava/io/IOException;\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               RequestPayload.java\n-  #51 = NameAndType        #29:#68        // \"<init>\":()V\n-  #52 = Utf8               java/lang/IllegalArgumentException\n-  #53 = NameAndType        #23:#24        // _payloadAsBytes:[B\n-  #54 = NameAndType        #69:#70        // isEmpty:()Z\n-  #55 = Utf8               UTF-8\n-  #56 = NameAndType        #27:#28        // _charset:Ljava/lang/String;\n-  #57 = NameAndType        #25:#26        // _payloadAsText:Ljava/lang/CharSequence;\n-  #58 = Utf8               java/lang/String\n-  #59 = NameAndType        #29:#30        // \"<init>\":([BLjava/lang/String;)V\n-  #60 = Utf8               java/io/IOException\n-  #61 = Utf8               java/lang/RuntimeException\n-  #62 = NameAndType        #29:#71        // \"<init>\":(Ljava/lang/Throwable;)V\n-  #63 = NameAndType        #45:#46        // toString:()Ljava/lang/String;\n-  #64 = Utf8               com/fasterxml/jackson/core/util/RequestPayload\n-  #65 = Utf8               java/lang/Object\n-  #66 = Utf8               java/io/Serializable\n-  #67 = Utf8               java/lang/CharSequence\n-  #68 = Utf8               ()V\n-  #69 = Utf8               isEmpty\n-  #70 = Utf8               ()Z\n-  #71 = Utf8               (Ljava/lang/Throwable;)V\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/lang/IllegalArgumentException\n+   #8 = Utf8               java/lang/IllegalArgumentException\n+   #9 = Methodref          #7.#3          // java/lang/IllegalArgumentException.\"<init>\":()V\n+  #10 = Fieldref           #11.#12        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsBytes:[B\n+  #11 = Class              #13            // com/fasterxml/jackson/core/util/RequestPayload\n+  #12 = NameAndType        #14:#15        // _payloadAsBytes:[B\n+  #13 = Utf8               com/fasterxml/jackson/core/util/RequestPayload\n+  #14 = Utf8               _payloadAsBytes\n+  #15 = Utf8               [B\n+  #16 = Methodref          #17.#18        // java/lang/String.isEmpty:()Z\n+  #17 = Class              #19            // java/lang/String\n+  #18 = NameAndType        #20:#21        // isEmpty:()Z\n+  #19 = Utf8               java/lang/String\n+  #20 = Utf8               isEmpty\n+  #21 = Utf8               ()Z\n+  #22 = String             #23            // UTF-8\n+  #23 = Utf8               UTF-8\n+  #24 = Fieldref           #11.#25        // com/fasterxml/jackson/core/util/RequestPayload._charset:Ljava/lang/String;\n+  #25 = NameAndType        #26:#27        // _charset:Ljava/lang/String;\n+  #26 = Utf8               _charset\n+  #27 = Utf8               Ljava/lang/String;\n+  #28 = Fieldref           #11.#29        // com/fasterxml/jackson/core/util/RequestPayload._payloadAsText:Ljava/lang/CharSequence;\n+  #29 = NameAndType        #30:#31        // _payloadAsText:Ljava/lang/CharSequence;\n+  #30 = Utf8               _payloadAsText\n+  #31 = Utf8               Ljava/lang/CharSequence;\n+  #32 = Methodref          #17.#33        // java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+  #33 = NameAndType        #5:#34         // \"<init>\":([BLjava/lang/String;)V\n+  #34 = Utf8               ([BLjava/lang/String;)V\n+  #35 = Class              #36            // java/io/IOException\n+  #36 = Utf8               java/io/IOException\n+  #37 = Class              #38            // java/lang/RuntimeException\n+  #38 = Utf8               java/lang/RuntimeException\n+  #39 = Methodref          #37.#40        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #40 = NameAndType        #5:#41         // \"<init>\":(Ljava/lang/Throwable;)V\n+  #41 = Utf8               (Ljava/lang/Throwable;)V\n+  #42 = InterfaceMethodref #43.#44        // java/lang/CharSequence.toString:()Ljava/lang/String;\n+  #43 = Class              #45            // java/lang/CharSequence\n+  #44 = NameAndType        #46:#47        // toString:()Ljava/lang/String;\n+  #45 = Utf8               java/lang/CharSequence\n+  #46 = Utf8               toString\n+  #47 = Utf8               ()Ljava/lang/String;\n+  #48 = Class              #49            // java/io/Serializable\n+  #49 = Utf8               java/io/Serializable\n+  #50 = Utf8               serialVersionUID\n+  #51 = Utf8               J\n+  #52 = Utf8               ConstantValue\n+  #53 = Long               1l\n+  #55 = Utf8               Code\n+  #56 = Utf8               LineNumberTable\n+  #57 = Utf8               LocalVariableTable\n+  #58 = Utf8               this\n+  #59 = Utf8               Lcom/fasterxml/jackson/core/util/RequestPayload;\n+  #60 = Utf8               bytes\n+  #61 = Utf8               charset\n+  #62 = Utf8               StackMapTable\n+  #63 = Class              #15            // \"[B\"\n+  #64 = Utf8               (Ljava/lang/CharSequence;)V\n+  #65 = Utf8               str\n+  #66 = Utf8               getRawPayload\n+  #67 = Utf8               ()Ljava/lang/Object;\n+  #68 = Utf8               e\n+  #69 = Utf8               Ljava/io/IOException;\n+  #70 = Utf8               SourceFile\n+  #71 = Utf8               RequestPayload.java\n {\n   private static final long serialVersionUID = 1l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1l\n \n   protected byte[] _payloadAsBytes;\n@@ -101,31 +101,31 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     16\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: invokespecial #3                  // Method java/lang/IllegalArgumentException.\"<init>\":()V\n+        12: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":()V\n         15: athrow\n         16: aload_0\n         17: aload_1\n-        18: putfield      #4                  // Field _payloadAsBytes:[B\n+        18: putfield      #10                 // Field _payloadAsBytes:[B\n         21: aload_0\n         22: aload_2\n         23: ifnull        33\n         26: aload_2\n-        27: invokevirtual #5                  // Method java/lang/String.isEmpty:()Z\n+        27: invokevirtual #16                 // Method java/lang/String.isEmpty:()Z\n         30: ifeq          38\n-        33: ldc           #6                  // String UTF-8\n+        33: ldc           #22                 // String UTF-8\n         35: goto          39\n         38: aload_2\n-        39: putfield      #7                  // Field _charset:Ljava/lang/String;\n+        39: putfield      #24                 // Field _charset:Ljava/lang/String;\n         42: return\n       LineNumberTable:\n         line 27: 0\n         line 28: 4\n         line 29: 8\n         line 31: 16\n         line 32: 21\n@@ -154,21 +154,21 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     16\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: invokespecial #3                  // Method java/lang/IllegalArgumentException.\"<init>\":()V\n+        12: invokespecial #9                  // Method java/lang/IllegalArgumentException.\"<init>\":()V\n         15: athrow\n         16: aload_0\n         17: aload_1\n-        18: putfield      #8                  // Field _payloadAsText:Ljava/lang/CharSequence;\n+        18: putfield      #28                 // Field _payloadAsText:Ljava/lang/CharSequence;\n         21: return\n       LineNumberTable:\n         line 35: 0\n         line 36: 4\n         line 37: 8\n         line 39: 16\n         line 40: 21\n@@ -184,21 +184,21 @@\n \n   public java.lang.Object getRawPayload();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _payloadAsBytes:[B\n+         1: getfield      #10                 // Field _payloadAsBytes:[B\n          4: ifnull        12\n          7: aload_0\n-         8: getfield      #4                  // Field _payloadAsBytes:[B\n+         8: getfield      #10                 // Field _payloadAsBytes:[B\n         11: areturn\n         12: aload_0\n-        13: getfield      #8                  // Field _payloadAsText:Ljava/lang/CharSequence;\n+        13: getfield      #28                 // Field _payloadAsText:Ljava/lang/CharSequence;\n         16: areturn\n       LineNumberTable:\n         line 49: 0\n         line 50: 7\n         line 53: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -208,33 +208,33 @@\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field _payloadAsBytes:[B\n+         1: getfield      #10                 // Field _payloadAsBytes:[B\n          4: ifnull        33\n-         7: new           #9                  // class java/lang/String\n+         7: new           #17                 // class java/lang/String\n         10: dup\n         11: aload_0\n-        12: getfield      #4                  // Field _payloadAsBytes:[B\n+        12: getfield      #10                 // Field _payloadAsBytes:[B\n         15: aload_0\n-        16: getfield      #7                  // Field _charset:Ljava/lang/String;\n-        19: invokespecial #10                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n+        16: getfield      #24                 // Field _charset:Ljava/lang/String;\n+        19: invokespecial #32                 // Method java/lang/String.\"<init>\":([BLjava/lang/String;)V\n         22: areturn\n         23: astore_1\n-        24: new           #12                 // class java/lang/RuntimeException\n+        24: new           #37                 // class java/lang/RuntimeException\n         27: dup\n         28: aload_1\n-        29: invokespecial #13                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        29: invokespecial #39                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         32: athrow\n         33: aload_0\n-        34: getfield      #8                  // Field _payloadAsText:Ljava/lang/CharSequence;\n-        37: invokeinterface #14,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;\n+        34: getfield      #28                 // Field _payloadAsText:Ljava/lang/CharSequence;\n+        37: invokeinterface #42,  1           // InterfaceMethod java/lang/CharSequence.toString:()Ljava/lang/String;\n         42: areturn\n       Exception table:\n          from    to  target type\n              7    22    23   Class java/io/IOException\n       LineNumberTable:\n         line 58: 0\n         line 60: 7\n"}]}
