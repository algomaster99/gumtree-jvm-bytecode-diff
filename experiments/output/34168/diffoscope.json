{"diffoscope-json-version": 1, "source1": "first/FailableFunction.class", "source2": "second/FailableFunction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,202 +1,202 @@\n-  SHA-256 checksum d199a693672b88d66b8c409a603f73b228f1a87e9f6c113c3f8eb92cb933ae25\n+  SHA-256 checksum 9881dd55f9f951f6f3cde580869c0e8629463658017dda5c9039ce753086a67f\n   Compiled from \"FailableFunction.java\"\n public interface org.apache.commons.lang3.function.FailableFunction<T extends java.lang.Object, R extends java.lang.Object, E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/lang3/function/FailableFunction\n-  super_class: #9                         // java/lang/Object\n+  this_class: #6                          // org/apache/commons/lang3/function/FailableFunction\n+  super_class: #24                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 10, attributes: 5\n Constant pool:\n-   #1 = InvokeDynamic      #0:#57         // #0:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n-   #2 = Fieldref           #8.#58         // org/apache/commons/lang3/function/FailableFunction.NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n-   #3 = Methodref          #59.#60        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #4 = InvokeDynamic      #1:#62         // #1:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n-   #5 = InvokeDynamic      #2:#62         // #2:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n-   #6 = InterfaceMethodref #8.#64         // org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #7 = InvokeDynamic      #3:#57         // #3:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n-   #8 = Class              #66            // org/apache/commons/lang3/function/FailableFunction\n-   #9 = Class              #67            // java/lang/Object\n-  #10 = Utf8               NOP\n-  #11 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction;\n-  #12 = Utf8               identity\n-  #13 = Utf8               ()Lorg/apache/commons/lang3/function/FailableFunction;\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               Signature\n-  #17 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TT;TE;>;\n-  #18 = Utf8               nop\n-  #19 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n-  #20 = Utf8               andThen\n-  #21 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n-  #22 = Utf8               LocalVariableTable\n-  #23 = Utf8               this\n-  #24 = Utf8               after\n-  #25 = Utf8               LocalVariableTypeTable\n-  #26 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n-  #27 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;\n-  #28 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TT;TV;TE;>;\n-  #29 = Utf8               apply\n-  #30 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #31 = Utf8               Exceptions\n-  #32 = Class              #68            // java/lang/Throwable\n-  #33 = Utf8               (TT;)TR;^TE;\n-  #34 = Utf8               compose\n-  #35 = Utf8               before\n-  #36 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;\n-  #37 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TV;TR;TE;>;\n-  #38 = Utf8               lambda$compose$3\n-  #39 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #40 = Utf8               v\n-  #41 = Utf8               Ljava/lang/Object;\n-  #42 = Utf8               lambda$andThen$2\n-  #43 = Utf8               t\n-  #44 = Utf8               lambda$identity$1\n-  #45 = Utf8               lambda$static$0\n-  #46 = Utf8               <clinit>\n-  #47 = Utf8               ()V\n-  #48 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #49 = Utf8               SourceFile\n-  #50 = Utf8               FailableFunction.java\n-  #51 = Utf8               RuntimeVisibleAnnotations\n-  #52 = Utf8               Ljava/lang/FunctionalInterface;\n-  #53 = Utf8               BootstrapMethods\n-  #54 = MethodHandle       6:#69          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #55 = MethodType         #30            //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #56 = MethodHandle       6:#70          // REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #57 = NameAndType        #29:#13        // apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n-  #58 = NameAndType        #10:#11        // NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n-  #59 = Class              #71            // java/util/Objects\n-  #60 = NameAndType        #72:#30        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #61 = MethodHandle       7:#73          // REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #62 = NameAndType        #29:#74        // apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n-  #63 = MethodHandle       7:#75          // REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #64 = NameAndType        #29:#30        // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #65 = MethodHandle       6:#76          // REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #66 = Utf8               org/apache/commons/lang3/function/FailableFunction\n-  #67 = Utf8               java/lang/Object\n-  #68 = Utf8               java/lang/Throwable\n-  #69 = Methodref          #77.#78        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #70 = InterfaceMethodref #8.#79         // org/apache/commons/lang3/function/FailableFunction.lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #71 = Utf8               java/util/Objects\n-  #72 = Utf8               requireNonNull\n-  #73 = InterfaceMethodref #8.#80         // org/apache/commons/lang3/function/FailableFunction.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #74 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n-  #75 = InterfaceMethodref #8.#81         // org/apache/commons/lang3/function/FailableFunction.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #76 = InterfaceMethodref #8.#82         // org/apache/commons/lang3/function/FailableFunction.lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #77 = Class              #83            // java/lang/invoke/LambdaMetafactory\n-  #78 = NameAndType        #84:#88        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #79 = NameAndType        #44:#30        // lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #80 = NameAndType        #42:#39        // lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #81 = NameAndType        #38:#39        // lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-  #82 = NameAndType        #45:#30        // lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #83 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #84 = Utf8               metafactory\n-  #85 = Class              #90            // java/lang/invoke/MethodHandles$Lookup\n-  #86 = Utf8               Lookup\n-  #87 = Utf8               InnerClasses\n-  #88 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #89 = Class              #91            // java/lang/invoke/MethodHandles\n-  #90 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #91 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = InvokeDynamic      #0:#2          // #0:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n+   #2 = NameAndType        #3:#4          // apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n+   #3 = Utf8               apply\n+   #4 = Utf8               ()Lorg/apache/commons/lang3/function/FailableFunction;\n+   #5 = Fieldref           #6.#7          // org/apache/commons/lang3/function/FailableFunction.NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n+   #6 = Class              #8             // org/apache/commons/lang3/function/FailableFunction\n+   #7 = NameAndType        #9:#10         // NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n+   #8 = Utf8               org/apache/commons/lang3/function/FailableFunction\n+   #9 = Utf8               NOP\n+  #10 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction;\n+  #11 = Methodref          #12.#13        // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #12 = Class              #14            // java/util/Objects\n+  #13 = NameAndType        #15:#16        // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #14 = Utf8               java/util/Objects\n+  #15 = Utf8               requireNonNull\n+  #16 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #17 = InvokeDynamic      #1:#18         // #1:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+  #18 = NameAndType        #3:#19         // apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+  #19 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+  #20 = InvokeDynamic      #2:#18         // #2:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+  #21 = InterfaceMethodref #6.#22         // org/apache/commons/lang3/function/FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #22 = NameAndType        #3:#16         // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #23 = InvokeDynamic      #3:#2          // #3:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n+  #24 = Class              #25            // java/lang/Object\n+  #25 = Utf8               java/lang/Object\n+  #26 = Utf8               identity\n+  #27 = Utf8               Code\n+  #28 = Utf8               LineNumberTable\n+  #29 = Utf8               Signature\n+  #30 = Utf8               <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TT;TE;>;\n+  #31 = Utf8               nop\n+  #32 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n+  #33 = Utf8               andThen\n+  #34 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+  #35 = Utf8               LocalVariableTable\n+  #36 = Utf8               this\n+  #37 = Utf8               after\n+  #38 = Utf8               LocalVariableTypeTable\n+  #39 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n+  #40 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;\n+  #41 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TT;TV;TE;>;\n+  #42 = Utf8               Exceptions\n+  #43 = Class              #44            // java/lang/Throwable\n+  #44 = Utf8               java/lang/Throwable\n+  #45 = Utf8               (TT;)TR;^TE;\n+  #46 = Utf8               compose\n+  #47 = Utf8               before\n+  #48 = Utf8               Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;\n+  #49 = Utf8               <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TV;TR;TE;>;\n+  #50 = Utf8               lambda$compose$3\n+  #51 = Utf8               (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #52 = Utf8               v\n+  #53 = Utf8               Ljava/lang/Object;\n+  #54 = Utf8               lambda$andThen$2\n+  #55 = Utf8               t\n+  #56 = Utf8               lambda$identity$1\n+  #57 = Utf8               lambda$static$0\n+  #58 = Utf8               <clinit>\n+  #59 = Utf8               ()V\n+  #60 = Utf8               <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+  #61 = Utf8               SourceFile\n+  #62 = Utf8               FailableFunction.java\n+  #63 = Utf8               RuntimeVisibleAnnotations\n+  #64 = Utf8               Ljava/lang/FunctionalInterface;\n+  #65 = Utf8               BootstrapMethods\n+  #66 = MethodHandle       6:#67          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #67 = Methodref          #68.#69        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #68 = Class              #70            // java/lang/invoke/LambdaMetafactory\n+  #69 = NameAndType        #71:#72        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #70 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #71 = Utf8               metafactory\n+  #72 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #73 = MethodType         #16            //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #74 = MethodHandle       6:#75          // REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #75 = InterfaceMethodref #6.#76         // org/apache/commons/lang3/function/FailableFunction.lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #76 = NameAndType        #56:#16        // lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #77 = MethodHandle       7:#78          // REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #78 = InterfaceMethodref #6.#79         // org/apache/commons/lang3/function/FailableFunction.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #79 = NameAndType        #54:#51        // lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #80 = MethodHandle       7:#81          // REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #81 = InterfaceMethodref #6.#82         // org/apache/commons/lang3/function/FailableFunction.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #82 = NameAndType        #50:#51        // lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+  #83 = MethodHandle       6:#84          // REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #84 = InterfaceMethodref #6.#85         // org/apache/commons/lang3/function/FailableFunction.lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #85 = NameAndType        #57:#16        // lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #86 = Utf8               InnerClasses\n+  #87 = Class              #88            // java/lang/invoke/MethodHandles$Lookup\n+  #88 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #89 = Class              #90            // java/lang/invoke/MethodHandles\n+  #90 = Utf8               java/lang/invoke/MethodHandles\n+  #91 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableFunction NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableFunction;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static <T extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableFunction<T, T, E> identity();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableFunction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: invokedynamic #1,  0              // InvokeDynamic #0:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n          5: areturn\n       LineNumberTable:\n         line 46: 0\n-    Signature: #17                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TT;TE;>;\n+    Signature: #30                          // <T:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TT;TE;>;\n \n   public static <T extends java.lang.Object, R extends java.lang.Object, E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableFunction<T, R, E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableFunction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n+         0: getstatic     #5                  // Field NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n          3: areturn\n       LineNumberTable:\n         line 58: 0\n-    Signature: #19                          // <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n+    Signature: #32                          // <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n \n   public default <V extends java.lang.Object> org.apache.commons.lang3.function.FailableFunction<T, V, E> andThen(org.apache.commons.lang3.function.FailableFunction<? super R, ? extends V, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #4,  0              // InvokeDynamic #1:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+         7: invokedynamic #17,  0             // InvokeDynamic #1:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n         12: areturn\n       LineNumberTable:\n         line 70: 0\n         line 71: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableFunction;\n             0      13     1 after   Lorg/apache/commons/lang3/function/FailableFunction;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n             0      13     1 after   Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;\n-    Signature: #28                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TT;TV;TE;>;\n+    Signature: #41                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TR;+TV;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TT;TV;TE;>;\n \n   public abstract R apply(T) throws E;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #33                          // (TT;)TR;^TE;\n+    Signature: #45                          // (TT;)TR;^TE;\n \n   public default <V extends java.lang.Object> org.apache.commons.lang3.function.FailableFunction<V, R, E> compose(org.apache.commons.lang3.function.FailableFunction<? super V, ? extends T, E>);\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+         1: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n          4: pop\n          5: aload_0\n          6: aload_1\n-         7: invokedynamic #5,  0              // InvokeDynamic #2:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n+         7: invokedynamic #20,  0             // InvokeDynamic #2:apply:(Lorg/apache/commons/lang3/function/FailableFunction;Lorg/apache/commons/lang3/function/FailableFunction;)Lorg/apache/commons/lang3/function/FailableFunction;\n         12: areturn\n       LineNumberTable:\n         line 93: 0\n         line 94: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableFunction;\n             0      13     1 before   Lorg/apache/commons/lang3/function/FailableFunction;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/lang3/function/FailableFunction<TT;TR;TE;>;\n             0      13     1 before   Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;\n-    Signature: #37                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TV;TR;TE;>;\n+    Signature: #49                          // <V:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<-TV;+TT;TE;>;)Lorg/apache/commons/lang3/function/FailableFunction<TV;TR;TE;>;\n \n   private java.lang.Object lambda$compose$3(org.apache.commons.lang3.function.FailableFunction, java.lang.Object) throws java.lang.Throwable;\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-         8: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         3: invokeinterface #21,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         8: invokeinterface #21,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n         13: areturn\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/function/FailableFunction;\n             0      14     1 before   Lorg/apache/commons/lang3/function/FailableFunction;\n@@ -211,16 +211,16 @@\n     descriptor: (Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n          1: aload_0\n          2: aload_2\n-         3: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-         8: invokeinterface #6,  2            // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         3: invokeinterface #21,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+         8: invokeinterface #21,  2           // InterfaceMethod apply:(Ljava/lang/Object;)Ljava/lang/Object;\n         13: areturn\n       LineNumberTable:\n         line 71: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/lang3/function/FailableFunction;\n             0      14     1 after   Lorg/apache/commons/lang3/function/FailableFunction;\n@@ -262,41 +262,41 @@\n       throws java.lang.Throwable\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #7,  0              // InvokeDynamic #3:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n-         5: putstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n+         0: invokedynamic #23,  0             // InvokeDynamic #3:apply:()Lorg/apache/commons/lang3/function/FailableFunction;\n+         5: putstatic     #5                  // Field NOP:Lorg/apache/commons/lang3/function/FailableFunction;\n          8: return\n       LineNumberTable:\n         line 36: 0\n }\n-Signature: #48                          // <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n+Signature: #60                          // <T:Ljava/lang/Object;R:Ljava/lang/Object;E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableFunction.java\"\n RuntimeVisibleAnnotations:\n-  0: #52()\n+  0: #64()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #86= #85 of #89;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #54 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #66 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #56 REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-  1: #54 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #74 REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$identity$1:(Ljava/lang/Object;)Ljava/lang/Object;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+  1: #66 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #61 REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-  2: #54 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #77 REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$andThen$2:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+  2: #66 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #63 REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-  3: #54 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #80 REF_invokeSpecial org/apache/commons/lang3/function/FailableFunction.lambda$compose$3:(Lorg/apache/commons/lang3/function/FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+  3: #66 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #65 REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n-      #55 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #83 REF_invokeStatic org/apache/commons/lang3/function/FailableFunction.lambda$static$0:(Ljava/lang/Object;)Ljava/lang/Object;\n+      #73 (Ljava/lang/Object;)Ljava/lang/Object;\n+InnerClasses:\n+  public static final #91= #87 of #89;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
