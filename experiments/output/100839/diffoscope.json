{"diffoscope-json-version": 1, "source1": "first/NewlineAtEndOfFileCheck.class", "source2": "second/NewlineAtEndOfFileCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,20 +31,41 @@\n     }\n     \n     public void setLineSeparator(final String lineSeparatorParam) {\n         this.lineSeparator = Enum.valueOf(LineSeparatorOption.class, lineSeparatorParam.trim().toUpperCase(Locale.ENGLISH));\n     }\n     \n     private void readAndCheckFile(final File file) throws IOException {\n-        try (final RandomAccessFile randomAccessFile = new RandomAccessFile(file, \"r\")) {\n-            if (this.lineSeparator == LineSeparatorOption.LF && endsWithNewline(randomAccessFile, LineSeparatorOption.CRLF)) {\n-                this.log(1, \"wrong.line.end\", new Object[0]);\n+        Throwable t = null;\n+        try {\n+            final RandomAccessFile randomAccessFile = new RandomAccessFile(file, \"r\");\n+            try {\n+                if (this.lineSeparator == LineSeparatorOption.LF && endsWithNewline(randomAccessFile, LineSeparatorOption.CRLF)) {\n+                    this.log(1, \"wrong.line.end\", new Object[0]);\n+                }\n+                else if (!endsWithNewline(randomAccessFile, this.lineSeparator)) {\n+                    this.log(1, \"noNewlineAtEOF\", new Object[0]);\n+                }\n             }\n-            else if (!endsWithNewline(randomAccessFile, this.lineSeparator)) {\n-                this.log(1, \"noNewlineAtEOF\", new Object[0]);\n+            finally {\n+                if (randomAccessFile != null) {\n+                    randomAccessFile.close();\n+                }\n+            }\n+        }\n+        finally {\n+            if (t == null) {\n+                final Throwable exception;\n+                t = exception;\n+            }\n+            else {\n+                final Throwable exception;\n+                if (t != exception) {\n+                    t.addSuppressed(exception);\n+                }\n             }\n         }\n     }\n     \n     private static boolean endsWithNewline(final RandomAccessFile file, final LineSeparatorOption separator) throws IOException {\n         final int len = separator.length();\n         boolean result;\n"}]}
