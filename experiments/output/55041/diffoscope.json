{"diffoscope-json-version": 1, "source1": "first/VFSFileSystem.class", "source2": "second/VFSFileSystem.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -177,18 +177,18 @@\n             if (!file.exists()) {\n                 return null;\n             }\n             final FileName path = file.getName();\n             final URLStreamHandler handler = (URLStreamHandler)new VFSFileSystem.VFSURLStreamHandler(path);\n             return new URL(null, path.getURI(), handler);\n         }\n-        catch (final FileSystemException fse) {\n+        catch (final FileSystemException ex) {\n             return null;\n         }\n-        catch (final MalformedURLException ex) {\n+        catch (final MalformedURLException ex2) {\n             return null;\n         }\n     }\n     \n     private FileSystemOptions getOptions(final String scheme) {\n         final FileSystemOptions opts = new FileSystemOptions();\n         FileSystemConfigBuilder builder;\n@@ -221,17 +221,17 @@\n             }\n         }\n         return null;\n     }\n     \n     private void setProperty(final FileSystemConfigBuilder builder, final FileSystemOptions options, final String key, final Object value) {\n         final String methodName = \"set\" + key.substring(0, 1).toUpperCase() + key.substring(1);\n-        final Class<?>[] paramTypes = { FileSystemOptions.class, value.getClass() };\n+        final Class[] paramTypes = { FileSystemOptions.class, value.getClass() };\n         try {\n-            final Method method = builder.getClass().getMethod(methodName, paramTypes);\n+            final Method method = builder.getClass().getMethod(methodName, (Class<?>[])paramTypes);\n             final Object[] params = { options, value };\n             method.invoke(builder, params);\n         }\n         catch (final Exception ex) {\n             this.log.warn((Object)(\"Cannot access property '\" + key + \"'! Ignoring.\"), (Throwable)ex);\n         }\n     }\n"}]}
