{"diffoscope-json-version": 1, "source1": "first/BaseNCodecInputStream.class", "source2": "second/BaseNCodecInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,152 +1,149 @@\n-  SHA-256 checksum b8fac171f6b79c46bb4f9bd111faf3b72f71071bacebe2dfc5d1a7b9a2202aad\n+  SHA-256 checksum 9b4a4a7c0696d3a3d53dd60860d1c166e27c50d3a872128f1f3a95c0f7125a4b\n   Compiled from \"BaseNCodecInputStream.java\"\n public class org.apache.commons.codec.binary.BaseNCodecInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #33                         // org/apache/commons/codec/binary/BaseNCodecInputStream\n-  super_class: #34                        // java/io/FilterInputStream\n+  this_class: #1                          // org/apache/commons/codec/binary/BaseNCodecInputStream\n+  super_class: #3                         // java/io/FilterInputStream\n   interfaces: 0, fields: 4, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Class              #84           // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #34.#85       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Fieldref           #33.#86       // org/apache/commons/codec/binary/BaseNCodecInputStream.singleByte:[B\n-    #4 = Class              #87           // org/apache/commons/codec/binary/BaseNCodec$Context\n-    #5 = Methodref          #4.#88        // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-    #6 = Fieldref           #33.#89       // org/apache/commons/codec/binary/BaseNCodecInputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-    #7 = Fieldref           #33.#90       // org/apache/commons/codec/binary/BaseNCodecInputStream.doEncode:Z\n-    #8 = Fieldref           #33.#91       // org/apache/commons/codec/binary/BaseNCodecInputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-    #9 = Fieldref           #4.#92        // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #10 = Methodref          #33.#93       // org/apache/commons/codec/binary/BaseNCodecInputStream.read:([BII)I\n-   #11 = Class              #94           // java/lang/NullPointerException\n-   #12 = Methodref          #11.#88       // java/lang/NullPointerException.\"<init>\":()V\n-   #13 = Class              #95           // java/lang/IndexOutOfBoundsException\n-   #14 = Methodref          #13.#88       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #15 = Methodref          #1.#96        // org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #16 = Fieldref           #33.#97       // org/apache/commons/codec/binary/BaseNCodecInputStream.in:Ljava/io/InputStream;\n-   #17 = Methodref          #98.#99       // java/io/InputStream.read:([B)I\n-   #18 = Methodref          #1.#100       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #19 = Methodref          #1.#101       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #20 = Methodref          #1.#102       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #21 = Class              #103          // java/io/IOException\n-   #22 = String             #104          // mark/reset not supported\n-   #23 = Methodref          #21.#105      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #24 = Class              #106          // java/lang/IllegalArgumentException\n-   #25 = Class              #107          // java/lang/StringBuilder\n-   #26 = Methodref          #25.#88       // java/lang/StringBuilder.\"<init>\":()V\n-   #27 = String             #108          // Negative skip length:\n-   #28 = Methodref          #25.#109      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #29 = Methodref          #25.#110      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #30 = Methodref          #25.#111      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #31 = Methodref          #24.#105      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #112.#113     // java/lang/Math.min:(JJ)J\n-   #33 = Class              #114          // org/apache/commons/codec/binary/BaseNCodecInputStream\n-   #34 = Class              #115          // java/io/FilterInputStream\n-   #35 = Utf8               baseNCodec\n-   #36 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #37 = Utf8               doEncode\n-   #38 = Utf8               Z\n-   #39 = Utf8               singleByte\n-   #40 = Utf8               [B\n-   #41 = Utf8               context\n-   #42 = Utf8               Context\n-   #43 = Utf8               InnerClasses\n-   #44 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #45 = Utf8               <init>\n-   #46 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #47 = Utf8               Code\n-   #48 = Utf8               LineNumberTable\n-   #49 = Utf8               LocalVariableTable\n-   #50 = Utf8               this\n-   #51 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-   #52 = Utf8               in\n-   #53 = Utf8               Ljava/io/InputStream;\n-   #54 = Utf8               available\n-   #55 = Utf8               ()I\n-   #56 = Utf8               StackMapTable\n-   #57 = Utf8               Exceptions\n-   #58 = Utf8               mark\n-   #59 = Utf8               (I)V\n-   #60 = Utf8               readLimit\n-   #61 = Utf8               I\n-   #62 = Utf8               markSupported\n-   #63 = Utf8               ()Z\n-   #64 = Utf8               read\n-   #65 = Utf8               b\n-   #66 = Utf8               B\n-   #67 = Utf8               r\n-   #68 = Utf8               ([BII)I\n-   #69 = Utf8               buf\n-   #70 = Utf8               c\n-   #71 = Utf8               readLen\n-   #72 = Utf8               offset\n-   #73 = Utf8               len\n-   #74 = Class              #40           // \"[B\"\n-   #75 = Utf8               reset\n-   #76 = Utf8               ()V\n-   #77 = Utf8               skip\n-   #78 = Utf8               (J)J\n-   #79 = Utf8               n\n-   #80 = Utf8               J\n-   #81 = Utf8               todo\n-   #82 = Utf8               SourceFile\n-   #83 = Utf8               BaseNCodecInputStream.java\n-   #84 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-   #85 = NameAndType        #45:#116      // \"<init>\":(Ljava/io/InputStream;)V\n-   #86 = NameAndType        #39:#40       // singleByte:[B\n-   #87 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-   #88 = NameAndType        #45:#76       // \"<init>\":()V\n-   #89 = NameAndType        #41:#44       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #90 = NameAndType        #37:#38       // doEncode:Z\n-   #91 = NameAndType        #35:#36       // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-   #92 = NameAndType        #117:#38      // eof:Z\n-   #93 = NameAndType        #64:#68       // read:([BII)I\n-   #94 = Utf8               java/lang/NullPointerException\n-   #95 = Utf8               java/lang/IndexOutOfBoundsException\n-   #96 = NameAndType        #118:#119     // hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #97 = NameAndType        #52:#53       // in:Ljava/io/InputStream;\n-   #98 = Class              #120          // java/io/InputStream\n-   #99 = NameAndType        #64:#121      // read:([B)I\n-  #100 = NameAndType        #122:#123     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #101 = NameAndType        #124:#123     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #102 = NameAndType        #125:#126     // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #103 = Utf8               java/io/IOException\n-  #104 = Utf8               mark/reset not supported\n-  #105 = NameAndType        #45:#127      // \"<init>\":(Ljava/lang/String;)V\n-  #106 = Utf8               java/lang/IllegalArgumentException\n+    #1 = Class              #2            // org/apache/commons/codec/binary/BaseNCodecInputStream\n+    #2 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n+    #3 = Class              #4            // java/io/FilterInputStream\n+    #4 = Utf8               java/io/FilterInputStream\n+    #5 = Utf8               baseNCodec\n+    #6 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n+    #7 = Utf8               doEncode\n+    #8 = Utf8               Z\n+    #9 = Utf8               singleByte\n+   #10 = Utf8               [B\n+   #11 = Utf8               context\n+   #12 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+   #15 = Utf8               Code\n+   #16 = Methodref          #3.#17        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #17 = NameAndType        #13:#18       // \"<init>\":(Ljava/io/InputStream;)V\n+   #18 = Utf8               (Ljava/io/InputStream;)V\n+   #19 = Fieldref           #1.#20        // org/apache/commons/codec/binary/BaseNCodecInputStream.singleByte:[B\n+   #20 = NameAndType        #9:#10        // singleByte:[B\n+   #21 = Class              #22           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #22 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #23 = Methodref          #21.#24       // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+   #24 = NameAndType        #13:#25       // \"<init>\":()V\n+   #25 = Utf8               ()V\n+   #26 = Fieldref           #1.#27        // org/apache/commons/codec/binary/BaseNCodecInputStream.context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #27 = NameAndType        #11:#12       // context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #28 = Fieldref           #1.#29        // org/apache/commons/codec/binary/BaseNCodecInputStream.doEncode:Z\n+   #29 = NameAndType        #7:#8         // doEncode:Z\n+   #30 = Fieldref           #1.#31        // org/apache/commons/codec/binary/BaseNCodecInputStream.baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #31 = NameAndType        #5:#6         // baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+   #32 = Utf8               LineNumberTable\n+   #33 = Utf8               LocalVariableTable\n+   #34 = Utf8               this\n+   #35 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n+   #36 = Utf8               in\n+   #37 = Utf8               Ljava/io/InputStream;\n+   #38 = Utf8               available\n+   #39 = Utf8               ()I\n+   #40 = Utf8               Exceptions\n+   #41 = Class              #42           // java/io/IOException\n+   #42 = Utf8               java/io/IOException\n+   #43 = Fieldref           #21.#44       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #44 = NameAndType        #45:#8        // eof:Z\n+   #45 = Utf8               eof\n+   #46 = Utf8               StackMapTable\n+   #47 = Utf8               mark\n+   #48 = Utf8               (I)V\n+   #49 = Utf8               readLimit\n+   #50 = Utf8               I\n+   #51 = Utf8               markSupported\n+   #52 = Utf8               ()Z\n+   #53 = Utf8               read\n+   #54 = Methodref          #1.#55        // org/apache/commons/codec/binary/BaseNCodecInputStream.read:([BII)I\n+   #55 = NameAndType        #53:#56       // read:([BII)I\n+   #56 = Utf8               ([BII)I\n+   #57 = Utf8               r\n+   #58 = Utf8               b\n+   #59 = Utf8               B\n+   #60 = Class              #61           // java/lang/NullPointerException\n+   #61 = Utf8               java/lang/NullPointerException\n+   #62 = Methodref          #60.#24       // java/lang/NullPointerException.\"<init>\":()V\n+   #63 = Class              #64           // java/lang/IndexOutOfBoundsException\n+   #64 = Utf8               java/lang/IndexOutOfBoundsException\n+   #65 = Methodref          #63.#24       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #66 = Methodref          #67.#69       // org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #67 = Class              #68           // org/apache/commons/codec/binary/BaseNCodec\n+   #68 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+   #69 = NameAndType        #70:#71       // hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #70 = Utf8               hasData\n+   #71 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #72 = Fieldref           #1.#73        // org/apache/commons/codec/binary/BaseNCodecInputStream.in:Ljava/io/InputStream;\n+   #73 = NameAndType        #36:#37       // in:Ljava/io/InputStream;\n+   #74 = Methodref          #75.#77       // java/io/InputStream.read:([B)I\n+   #75 = Class              #76           // java/io/InputStream\n+   #76 = Utf8               java/io/InputStream\n+   #77 = NameAndType        #53:#78       // read:([B)I\n+   #78 = Utf8               ([B)I\n+   #79 = Methodref          #67.#80       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #80 = NameAndType        #81:#82       // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #81 = Utf8               encode\n+   #82 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #83 = Methodref          #67.#84       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #84 = NameAndType        #85:#82       // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #85 = Utf8               decode\n+   #86 = Methodref          #67.#87       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #87 = NameAndType        #88:#89       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #88 = Utf8               readResults\n+   #89 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #90 = Utf8               offset\n+   #91 = Utf8               len\n+   #92 = Utf8               readLen\n+   #93 = Utf8               buf\n+   #94 = Utf8               c\n+   #95 = Class              #10           // \"[B\"\n+   #96 = Utf8               reset\n+   #97 = String             #98           // mark/reset not supported\n+   #98 = Utf8               mark/reset not supported\n+   #99 = Methodref          #41.#100      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #100 = NameAndType        #13:#101      // \"<init>\":(Ljava/lang/String;)V\n+  #101 = Utf8               (Ljava/lang/String;)V\n+  #102 = Utf8               skip\n+  #103 = Utf8               (J)J\n+  #104 = Class              #105          // java/lang/IllegalArgumentException\n+  #105 = Utf8               java/lang/IllegalArgumentException\n+  #106 = Class              #107          // java/lang/StringBuilder\n   #107 = Utf8               java/lang/StringBuilder\n-  #108 = Utf8               Negative skip length:\n-  #109 = NameAndType        #128:#129     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #110 = NameAndType        #128:#130     // append:(J)Ljava/lang/StringBuilder;\n-  #111 = NameAndType        #131:#132     // toString:()Ljava/lang/String;\n-  #112 = Class              #133          // java/lang/Math\n-  #113 = NameAndType        #134:#135     // min:(JJ)J\n-  #114 = Utf8               org/apache/commons/codec/binary/BaseNCodecInputStream\n-  #115 = Utf8               java/io/FilterInputStream\n-  #116 = Utf8               (Ljava/io/InputStream;)V\n-  #117 = Utf8               eof\n-  #118 = Utf8               hasData\n-  #119 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-  #120 = Utf8               java/io/InputStream\n-  #121 = Utf8               ([B)I\n-  #122 = Utf8               encode\n-  #123 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #124 = Utf8               decode\n-  #125 = Utf8               readResults\n-  #126 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #127 = Utf8               (Ljava/lang/String;)V\n-  #128 = Utf8               append\n-  #129 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #130 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #131 = Utf8               toString\n-  #132 = Utf8               ()Ljava/lang/String;\n-  #133 = Utf8               java/lang/Math\n-  #134 = Utf8               min\n-  #135 = Utf8               (JJ)J\n+  #108 = String             #109          // Negative skip length:\n+  #109 = Utf8               Negative skip length:\n+  #110 = Methodref          #106.#100     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #111 = Methodref          #106.#112     // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+  #112 = NameAndType        #113:#114     // append:(J)Ljava/lang/StringBuilder;\n+  #113 = Utf8               append\n+  #114 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #115 = Methodref          #106.#116     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #116 = NameAndType        #117:#118     // toString:()Ljava/lang/String;\n+  #117 = Utf8               toString\n+  #118 = Utf8               ()Ljava/lang/String;\n+  #119 = Methodref          #104.#100     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #120 = Methodref          #121.#123     // java/lang/Math.min:(JJ)J\n+  #121 = Class              #122          // java/lang/Math\n+  #122 = Utf8               java/lang/Math\n+  #123 = NameAndType        #124:#125     // min:(JJ)J\n+  #124 = Utf8               min\n+  #125 = Utf8               (JJ)J\n+  #126 = Utf8               n\n+  #127 = Utf8               J\n+  #128 = Utf8               todo\n+  #129 = Utf8               SourceFile\n+  #130 = Utf8               BaseNCodecInputStream.java\n+  #131 = Utf8               InnerClasses\n+  #132 = Utf8               Context\n {\n   private final org.apache.commons.codec.binary.BaseNCodec baseNCodec;\n     descriptor: Lorg/apache/commons/codec/binary/BaseNCodec;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final boolean doEncode;\n     descriptor: Z\n@@ -163,30 +160,30 @@\n   protected org.apache.commons.codec.binary.BaseNCodecInputStream(java.io.InputStream, org.apache.commons.codec.binary.BaseNCodec, boolean);\n     descriptor: (Ljava/io/InputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #16                 // Method java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n          6: iconst_1\n          7: newarray       byte\n-         9: putfield      #3                  // Field singleByte:[B\n+         9: putfield      #19                 // Field singleByte:[B\n         12: aload_0\n-        13: new           #4                  // class org/apache/commons/codec/binary/BaseNCodec$Context\n+        13: new           #21                 // class org/apache/commons/codec/binary/BaseNCodec$Context\n         16: dup\n-        17: invokespecial #5                  // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-        20: putfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        17: invokespecial #23                 // Method org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+        20: putfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n         23: aload_0\n         24: iload_3\n-        25: putfield      #7                  // Field doEncode:Z\n+        25: putfield      #28                 // Field doEncode:Z\n         28: aload_0\n         29: aload_2\n-        30: putfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        30: putfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n         33: return\n       LineNumberTable:\n         line 44: 0\n         line 39: 5\n         line 41: 12\n         line 45: 23\n         line 46: 28\n@@ -197,35 +194,35 @@\n             0      34     1    in   Ljava/io/InputStream;\n             0      34     2 baseNCodec   Lorg/apache/commons/codec/binary/BaseNCodec;\n             0      34     3 doEncode   Z\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-         4: getfield      #9                  // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         1: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+         4: getfield      #43                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          7: ifeq          14\n         10: iconst_0\n         11: goto          15\n         14: iconst_1\n         15: ireturn\n       LineNumberTable:\n         line 63: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 14 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n@@ -248,37 +245,39 @@\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #3                  // Field singleByte:[B\n+         2: getfield      #19                 // Field singleByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #10                 // Method read:([BII)I\n+         7: invokevirtual #54                 // Method read:([BII)I\n         10: istore_1\n-        11: iload_1\n-        12: ifne          29\n+        11: goto          25\n+        14: aload_0\n         15: aload_0\n-        16: aload_0\n-        17: getfield      #3                  // Field singleByte:[B\n-        20: iconst_0\n-        21: iconst_1\n-        22: invokevirtual #10                 // Method read:([BII)I\n-        25: istore_1\n-        26: goto          11\n+        16: getfield      #19                 // Field singleByte:[B\n+        19: iconst_0\n+        20: iconst_1\n+        21: invokevirtual #54                 // Method read:([BII)I\n+        24: istore_1\n+        25: iload_1\n+        26: ifeq          14\n         29: iload_1\n         30: ifle          54\n         33: aload_0\n-        34: getfield      #3                  // Field singleByte:[B\n+        34: getfield      #19                 // Field singleByte:[B\n         37: iconst_0\n         38: baload\n         39: istore_2\n         40: iload_2\n         41: ifge          52\n         44: sipush        256\n         47: iload_2\n@@ -287,285 +286,286 @@\n         52: iload_2\n         53: ireturn\n         54: iconst_m1\n         55: ireturn\n       LineNumberTable:\n         line 98: 0\n         line 99: 11\n-        line 100: 15\n+        line 100: 14\n+        line 99: 25\n         line 102: 29\n         line 103: 33\n         line 104: 40\n         line 106: 54\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           40      14     2     b   B\n             0      56     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n            11      45     1     r   I\n+           40      14     2     b   B\n       StackMapTable: number_of_entries = 5\n         frame_type = 252 /* append */\n-          offset_delta = 11\n+          offset_delta = 14\n           locals = [ int ]\n-        frame_type = 17 /* same */\n+        frame_type = 10 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 22\n+          offset_delta = 26\n           locals = [ int ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 0\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=4\n          0: aload_1\n          1: ifnonnull     12\n-         4: new           #11                 // class java/lang/NullPointerException\n+         4: new           #60                 // class java/lang/NullPointerException\n          7: dup\n-         8: invokespecial #12                 // Method java/lang/NullPointerException.\"<init>\":()V\n+         8: invokespecial #62                 // Method java/lang/NullPointerException.\"<init>\":()V\n         11: athrow\n         12: iload_2\n         13: iflt          20\n         16: iload_3\n         17: ifge          28\n-        20: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        20: new           #63                 // class java/lang/IndexOutOfBoundsException\n         23: dup\n-        24: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        24: invokespecial #65                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         27: athrow\n         28: iload_2\n         29: aload_1\n         30: arraylength\n         31: if_icmpgt     42\n         34: iload_2\n         35: iload_3\n         36: iadd\n         37: aload_1\n         38: arraylength\n         39: if_icmple     50\n-        42: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        42: new           #63                 // class java/lang/IndexOutOfBoundsException\n         45: dup\n-        46: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        46: invokespecial #65                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         49: athrow\n         50: iload_3\n         51: ifne          56\n         54: iconst_0\n         55: ireturn\n         56: iconst_0\n         57: istore        4\n-        59: iload         4\n-        61: ifne          170\n-        64: aload_0\n-        65: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-        68: aload_0\n-        69: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-        72: invokevirtual #15                 // Method org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-        75: ifne          151\n-        78: aload_0\n-        79: getfield      #7                  // Field doEncode:Z\n-        82: ifeq          91\n-        85: sipush        4096\n-        88: goto          94\n-        91: sipush        8192\n-        94: newarray       byte\n-        96: astore        5\n-        98: aload_0\n-        99: getfield      #16                 // Field in:Ljava/io/InputStream;\n-       102: aload         5\n-       104: invokevirtual #17                 // Method java/io/InputStream.read:([B)I\n-       107: istore        6\n-       109: aload_0\n-       110: getfield      #7                  // Field doEncode:Z\n-       113: ifeq          135\n-       116: aload_0\n-       117: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-       120: aload         5\n-       122: iconst_0\n-       123: iload         6\n-       125: aload_0\n-       126: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       129: invokevirtual #18                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-       132: goto          151\n-       135: aload_0\n-       136: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-       139: aload         5\n-       141: iconst_0\n-       142: iload         6\n-       144: aload_0\n-       145: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       148: invokevirtual #19                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-       151: aload_0\n-       152: getfield      #8                  // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n-       155: aload_1\n-       156: iload_2\n-       157: iload_3\n-       158: aload_0\n-       159: getfield      #6                  // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-       162: invokevirtual #20                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-       165: istore        4\n-       167: goto          59\n+        59: goto          165\n+        62: aload_0\n+        63: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+        66: aload_0\n+        67: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+        70: invokevirtual #66                 // Method org/apache/commons/codec/binary/BaseNCodec.hasData:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+        73: ifne          149\n+        76: aload_0\n+        77: getfield      #28                 // Field doEncode:Z\n+        80: ifeq          89\n+        83: sipush        4096\n+        86: goto          92\n+        89: sipush        8192\n+        92: newarray       byte\n+        94: astore        5\n+        96: aload_0\n+        97: getfield      #72                 // Field in:Ljava/io/InputStream;\n+       100: aload         5\n+       102: invokevirtual #74                 // Method java/io/InputStream.read:([B)I\n+       105: istore        6\n+       107: aload_0\n+       108: getfield      #28                 // Field doEncode:Z\n+       111: ifeq          133\n+       114: aload_0\n+       115: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       118: aload         5\n+       120: iconst_0\n+       121: iload         6\n+       123: aload_0\n+       124: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       127: invokevirtual #79                 // Method org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+       130: goto          149\n+       133: aload_0\n+       134: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       137: aload         5\n+       139: iconst_0\n+       140: iload         6\n+       142: aload_0\n+       143: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       146: invokevirtual #83                 // Method org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+       149: aload_0\n+       150: getfield      #30                 // Field baseNCodec:Lorg/apache/commons/codec/binary/BaseNCodec;\n+       153: aload_1\n+       154: iload_2\n+       155: iload_3\n+       156: aload_0\n+       157: getfield      #26                 // Field context:Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+       160: invokevirtual #86                 // Method org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+       163: istore        4\n+       165: iload         4\n+       167: ifeq          62\n        170: iload         4\n        172: ireturn\n       LineNumberTable:\n         line 130: 0\n         line 131: 4\n         line 132: 12\n         line 133: 20\n         line 134: 28\n         line 135: 42\n         line 136: 50\n         line 137: 54\n         line 139: 56\n         line 156: 59\n-        line 157: 64\n-        line 158: 78\n-        line 159: 98\n-        line 160: 109\n-        line 161: 116\n-        line 163: 135\n-        line 166: 151\n+        line 157: 62\n+        line 158: 76\n+        line 159: 96\n+        line 160: 107\n+        line 161: 114\n+        line 162: 130\n+        line 163: 133\n+        line 166: 149\n+        line 156: 165\n         line 168: 170\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           98      53     5   buf   [B\n-          109      42     6     c   I\n-           59     114     4 readLen   I\n             0     173     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n             0     173     1     b   [B\n             0     173     2 offset   I\n             0     173     3   len   I\n+           59     114     4 readLen   I\n+           96      53     5   buf   [B\n+          107      42     6     c   I\n       StackMapTable: number_of_entries = 12\n         frame_type = 12 /* same */\n         frame_type = 7 /* same */\n         frame_type = 7 /* same */\n         frame_type = 13 /* same */\n         frame_type = 7 /* same */\n         frame_type = 5 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 31 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 66 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 253 /* append */\n           offset_delta = 40\n           locals = [ class \"[B\", int ]\n         frame_type = 249 /* chop */\n           offset_delta = 15\n-        frame_type = 18 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 15 /* same */\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #21                 // class java/io/IOException\n+         0: new           #41                 // class java/io/IOException\n          3: dup\n-         4: ldc           #22                 // String mark/reset not supported\n-         6: invokespecial #23                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+         4: ldc           #97                 // String mark/reset not supported\n+         6: invokespecial #99                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n          9: athrow\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=7, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n-         3: ifge          33\n-         6: new           #24                 // class java/lang/IllegalArgumentException\n+         3: ifge          30\n+         6: new           #104                // class java/lang/IllegalArgumentException\n          9: dup\n-        10: new           #25                 // class java/lang/StringBuilder\n+        10: new           #106                // class java/lang/StringBuilder\n         13: dup\n-        14: invokespecial #26                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        17: ldc           #27                 // String Negative skip length:\n-        19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: lload_1\n-        23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-        26: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        29: invokespecial #31                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        32: athrow\n-        33: sipush        512\n-        36: newarray       byte\n-        38: astore_3\n-        39: lload_1\n-        40: lstore        4\n-        42: lload         4\n-        44: lconst_0\n-        45: lcmp\n-        46: ifle          90\n-        49: aload_3\n-        50: arraylength\n-        51: i2l\n-        52: lload         4\n-        54: invokestatic  #32                 // Method java/lang/Math.min:(JJ)J\n-        57: l2i\n-        58: istore        6\n-        60: aload_0\n-        61: aload_3\n-        62: iconst_0\n+        14: ldc           #108                // String Negative skip length:\n+        16: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        19: lload_1\n+        20: invokevirtual #111                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+        23: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        26: invokespecial #119                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        29: athrow\n+        30: sipush        512\n+        33: newarray       byte\n+        35: astore_3\n+        36: lload_1\n+        37: lstore        4\n+        39: goto          80\n+        42: aload_3\n+        43: arraylength\n+        44: i2l\n+        45: lload         4\n+        47: invokestatic  #120                // Method java/lang/Math.min:(JJ)J\n+        50: l2i\n+        51: istore        6\n+        53: aload_0\n+        54: aload_3\n+        55: iconst_0\n+        56: iload         6\n+        58: invokevirtual #54                 // Method read:([BII)I\n+        61: istore        6\n         63: iload         6\n-        65: invokevirtual #10                 // Method read:([BII)I\n-        68: istore        6\n-        70: iload         6\n-        72: iconst_m1\n-        73: if_icmpne     79\n-        76: goto          90\n-        79: lload         4\n-        81: iload         6\n-        83: i2l\n-        84: lsub\n-        85: lstore        4\n-        87: goto          42\n-        90: lload_1\n-        91: lload         4\n-        93: lsub\n-        94: lreturn\n+        65: iconst_m1\n+        66: if_icmpne     72\n+        69: goto          87\n+        72: lload         4\n+        74: iload         6\n+        76: i2l\n+        77: lsub\n+        78: lstore        4\n+        80: lload         4\n+        82: lconst_0\n+        83: lcmp\n+        84: ifgt          42\n+        87: lload_1\n+        88: lload         4\n+        90: lsub\n+        91: lreturn\n       LineNumberTable:\n         line 193: 0\n         line 194: 6\n-        line 198: 33\n-        line 199: 39\n-        line 201: 42\n-        line 202: 49\n-        line 203: 60\n-        line 204: 70\n-        line 205: 76\n-        line 207: 79\n-        line 208: 87\n-        line 210: 90\n+        line 198: 30\n+        line 199: 36\n+        line 201: 39\n+        line 202: 42\n+        line 203: 53\n+        line 204: 63\n+        line 205: 69\n+        line 207: 72\n+        line 201: 80\n+        line 210: 87\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           60      27     6   len   I\n-            0      95     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n-            0      95     1     n   J\n-           39      56     3     b   [B\n-           42      53     4  todo   J\n-      StackMapTable: number_of_entries = 4\n-        frame_type = 33 /* same */\n+            0      92     0  this   Lorg/apache/commons/codec/binary/BaseNCodecInputStream;\n+            0      92     1     n   J\n+           36      56     3     b   [B\n+           39      53     4  todo   J\n+           53      27     6   len   I\n+      StackMapTable: number_of_entries = 5\n+        frame_type = 30 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 8\n+          offset_delta = 11\n           locals = [ class \"[B\", long ]\n         frame_type = 252 /* append */\n-          offset_delta = 36\n+          offset_delta = 29\n           locals = [ int ]\n         frame_type = 250 /* chop */\n-          offset_delta = 10\n-    Exceptions:\n-      throws java.io.IOException\n+          offset_delta = 7\n+        frame_type = 6 /* same */\n }\n SourceFile: \"BaseNCodecInputStream.java\"\n InnerClasses:\n-  static #42= #4 of #1;                   // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #132= #21 of #67;                // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
