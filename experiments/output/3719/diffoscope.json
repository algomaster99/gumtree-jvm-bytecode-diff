{"diffoscope-json-version": 1, "source1": "first/FileExtensionConfigurationBuilderProvider.class", "source2": "second/FileExtensionConfigurationBuilderProvider.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,41 +1,41 @@\n-  SHA-256 checksum 584a9efc52f779d35729125f5fb2bd3fd1d40fa4283a7bce985d4a58856517f3\n+  SHA-256 checksum 032a757902a056f4c8978240ea81112039eee23c57087792a2d2a4560d32af3b\n   Compiled from \"FileExtensionConfigurationBuilderProvider.java\"\n public class org.apache.commons.configuration2.builder.combined.FileExtensionConfigurationBuilderProvider extends org.apache.commons.configuration2.builder.combined.BaseConfigurationBuilderProvider\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #21                         // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n   super_class: #24                        // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n   interfaces: 0, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #24.#82       // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-    #2 = Class              #83           // java/lang/IllegalArgumentException\n-    #3 = String             #84           // Matching configuration class must not be null!\n-    #4 = Methodref          #2.#85        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = String             #86           // File extension must not be null!\n-    #6 = Fieldref           #21.#87       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.matchingConfigurationClass:Ljava/lang/String;\n-    #7 = Fieldref           #21.#88       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extension:Ljava/lang/String;\n-    #8 = Methodref          #21.#89       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-    #9 = Methodref          #21.#90       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #10 = Methodref          #21.#91       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getExtension:()Ljava/lang/String;\n-   #11 = Methodref          #92.#93       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #12 = Methodref          #21.#94       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getMatchingConfigurationClass:()Ljava/lang/String;\n-   #13 = Methodref          #21.#95       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getConfigurationClass:()Ljava/lang/String;\n-   #14 = InterfaceMethodref #96.#97       // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #15 = InterfaceMethodref #98.#99       // java/util/Iterator.hasNext:()Z\n-   #16 = InterfaceMethodref #98.#100      // java/util/Iterator.next:()Ljava/lang/Object;\n-   #17 = Class              #101          // org/apache/commons/configuration2/builder/BuilderParameters\n-   #18 = Class              #102          // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-   #19 = Methodref          #18.#103      // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-   #20 = Methodref          #104.#105     // org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n-   #21 = Class              #106          // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #22 = Methodref          #92.#107      // java/lang/String.lastIndexOf:(I)I\n-   #23 = Methodref          #92.#108      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #24 = Class              #109          // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n+    #1 = Methodref          #24.#81       // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+    #2 = Class              #82           // java/lang/IllegalArgumentException\n+    #3 = String             #83           // Matching configuration class must not be null!\n+    #4 = Methodref          #2.#84        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #5 = String             #85           // File extension must not be null!\n+    #6 = Fieldref           #21.#86       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.matchingConfigurationClass:Ljava/lang/String;\n+    #7 = Fieldref           #21.#87       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extension:Ljava/lang/String;\n+    #8 = Methodref          #21.#88       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+    #9 = Methodref          #21.#89       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #10 = Methodref          #21.#90       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getExtension:()Ljava/lang/String;\n+   #11 = Methodref          #49.#91       // java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #12 = Methodref          #21.#92       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getMatchingConfigurationClass:()Ljava/lang/String;\n+   #13 = Methodref          #21.#93       // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider.getConfigurationClass:()Ljava/lang/String;\n+   #14 = InterfaceMethodref #50.#94       // java/util/Collection.iterator:()Ljava/util/Iterator;\n+   #15 = InterfaceMethodref #72.#95       // java/util/Iterator.hasNext:()Z\n+   #16 = InterfaceMethodref #72.#96       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #17 = Class              #97           // org/apache/commons/configuration2/builder/BuilderParameters\n+   #18 = Class              #98           // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+   #19 = Methodref          #18.#99       // org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl.getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+   #20 = Methodref          #100.#101     // org/apache/commons/configuration2/io/FileHandler.getFileName:()Ljava/lang/String;\n+   #21 = Class              #102          // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+   #22 = Methodref          #49.#103      // java/lang/String.lastIndexOf:(I)I\n+   #23 = Methodref          #49.#104      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #24 = Class              #105          // org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n    #25 = Utf8               EXT_SEPARATOR\n    #26 = Utf8               C\n    #27 = Utf8               ConstantValue\n    #28 = Integer            46\n    #29 = Utf8               matchingConfigurationClass\n    #30 = Utf8               Ljava/lang/String;\n    #31 = Utf8               extension\n@@ -52,98 +52,94 @@\n    #42 = Utf8               defConfigClass\n    #43 = Utf8               ext\n    #44 = Utf8               paramCls\n    #45 = Utf8               Ljava/util/Collection;\n    #46 = Utf8               LocalVariableTypeTable\n    #47 = Utf8               Ljava/util/Collection<Ljava/lang/String;>;\n    #48 = Utf8               StackMapTable\n-   #49 = Class              #106          // org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-   #50 = Class              #110          // java/lang/String\n-   #51 = Class              #111          // java/util/Collection\n-   #52 = Utf8               Signature\n-   #53 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n-   #54 = Utf8               getMatchingConfigurationClass\n-   #55 = Utf8               ()Ljava/lang/String;\n-   #56 = Utf8               getExtension\n-   #57 = Utf8               determineConfigurationClass\n-   #58 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n-   #59 = Utf8               decl\n-   #60 = Utf8               Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;\n-   #61 = Utf8               params\n-   #62 = Utf8               currentExt\n-   #63 = Utf8               Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;\n-   #64 = Utf8               Exceptions\n-   #65 = Class              #112          // org/apache/commons/configuration2/ex/ConfigurationException\n-   #66 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n-   #67 = Utf8               fetchCurrentFileName\n-   #68 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;\n-   #69 = Utf8               fp\n-   #70 = Utf8               Lorg/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl;\n-   #71 = Utf8               p\n-   #72 = Utf8               Lorg/apache/commons/configuration2/builder/BuilderParameters;\n-   #73 = Class              #113          // java/util/Iterator\n-   #74 = Utf8               (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n-   #75 = Utf8               extractExtension\n-   #76 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #77 = Utf8               fileName\n-   #78 = Utf8               pos\n-   #79 = Utf8               I\n-   #80 = Utf8               SourceFile\n-   #81 = Utf8               FileExtensionConfigurationBuilderProvider.java\n-   #82 = NameAndType        #32:#114      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-   #83 = Utf8               java/lang/IllegalArgumentException\n-   #84 = Utf8               Matching configuration class must not be null!\n-   #85 = NameAndType        #32:#115      // \"<init>\":(Ljava/lang/String;)V\n-   #86 = Utf8               File extension must not be null!\n-   #87 = NameAndType        #29:#30       // matchingConfigurationClass:Ljava/lang/String;\n-   #88 = NameAndType        #31:#30       // extension:Ljava/lang/String;\n-   #89 = NameAndType        #67:#68       // fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n-   #90 = NameAndType        #75:#76       // extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #91 = NameAndType        #56:#55       // getExtension:()Ljava/lang/String;\n-   #92 = Class              #110          // java/lang/String\n-   #93 = NameAndType        #116:#117     // equalsIgnoreCase:(Ljava/lang/String;)Z\n-   #94 = NameAndType        #54:#55       // getMatchingConfigurationClass:()Ljava/lang/String;\n-   #95 = NameAndType        #118:#55      // getConfigurationClass:()Ljava/lang/String;\n-   #96 = Class              #111          // java/util/Collection\n-   #97 = NameAndType        #119:#120     // iterator:()Ljava/util/Iterator;\n-   #98 = Class              #113          // java/util/Iterator\n-   #99 = NameAndType        #121:#122     // hasNext:()Z\n-  #100 = NameAndType        #123:#124     // next:()Ljava/lang/Object;\n-  #101 = Utf8               org/apache/commons/configuration2/builder/BuilderParameters\n-  #102 = Utf8               org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n-  #103 = NameAndType        #125:#126     // getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n-  #104 = Class              #127          // org/apache/commons/configuration2/io/FileHandler\n-  #105 = NameAndType        #128:#55      // getFileName:()Ljava/lang/String;\n-  #106 = Utf8               org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n-  #107 = NameAndType        #129:#130     // lastIndexOf:(I)I\n-  #108 = NameAndType        #131:#132     // substring:(I)Ljava/lang/String;\n-  #109 = Utf8               org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n-  #110 = Utf8               java/lang/String\n-  #111 = Utf8               java/util/Collection\n-  #112 = Utf8               org/apache/commons/configuration2/ex/ConfigurationException\n-  #113 = Utf8               java/util/Iterator\n-  #114 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n-  #115 = Utf8               (Ljava/lang/String;)V\n-  #116 = Utf8               equalsIgnoreCase\n-  #117 = Utf8               (Ljava/lang/String;)Z\n-  #118 = Utf8               getConfigurationClass\n-  #119 = Utf8               iterator\n-  #120 = Utf8               ()Ljava/util/Iterator;\n-  #121 = Utf8               hasNext\n-  #122 = Utf8               ()Z\n-  #123 = Utf8               next\n-  #124 = Utf8               ()Ljava/lang/Object;\n-  #125 = Utf8               getFileHandler\n-  #126 = Utf8               ()Lorg/apache/commons/configuration2/io/FileHandler;\n-  #127 = Utf8               org/apache/commons/configuration2/io/FileHandler\n-  #128 = Utf8               getFileName\n-  #129 = Utf8               lastIndexOf\n-  #130 = Utf8               (I)I\n-  #131 = Utf8               substring\n-  #132 = Utf8               (I)Ljava/lang/String;\n+   #49 = Class              #106          // java/lang/String\n+   #50 = Class              #107          // java/util/Collection\n+   #51 = Utf8               Signature\n+   #52 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n+   #53 = Utf8               getMatchingConfigurationClass\n+   #54 = Utf8               ()Ljava/lang/String;\n+   #55 = Utf8               getExtension\n+   #56 = Utf8               determineConfigurationClass\n+   #57 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection;)Ljava/lang/String;\n+   #58 = Utf8               decl\n+   #59 = Utf8               Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;\n+   #60 = Utf8               params\n+   #61 = Utf8               currentExt\n+   #62 = Utf8               Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;\n+   #63 = Utf8               Exceptions\n+   #64 = Class              #108          // org/apache/commons/configuration2/ex/ConfigurationException\n+   #65 = Utf8               (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+   #66 = Utf8               fetchCurrentFileName\n+   #67 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;\n+   #68 = Utf8               fp\n+   #69 = Utf8               Lorg/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl;\n+   #70 = Utf8               p\n+   #71 = Utf8               Lorg/apache/commons/configuration2/builder/BuilderParameters;\n+   #72 = Class              #109          // java/util/Iterator\n+   #73 = Utf8               (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+   #74 = Utf8               extractExtension\n+   #75 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #76 = Utf8               fileName\n+   #77 = Utf8               pos\n+   #78 = Utf8               I\n+   #79 = Utf8               SourceFile\n+   #80 = Utf8               FileExtensionConfigurationBuilderProvider.java\n+   #81 = NameAndType        #32:#110      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+   #82 = Utf8               java/lang/IllegalArgumentException\n+   #83 = Utf8               Matching configuration class must not be null!\n+   #84 = NameAndType        #32:#111      // \"<init>\":(Ljava/lang/String;)V\n+   #85 = Utf8               File extension must not be null!\n+   #86 = NameAndType        #29:#30       // matchingConfigurationClass:Ljava/lang/String;\n+   #87 = NameAndType        #31:#30       // extension:Ljava/lang/String;\n+   #88 = NameAndType        #66:#67       // fetchCurrentFileName:(Ljava/util/Collection;)Ljava/lang/String;\n+   #89 = NameAndType        #74:#75       // extractExtension:(Ljava/lang/String;)Ljava/lang/String;\n+   #90 = NameAndType        #55:#54       // getExtension:()Ljava/lang/String;\n+   #91 = NameAndType        #112:#113     // equalsIgnoreCase:(Ljava/lang/String;)Z\n+   #92 = NameAndType        #53:#54       // getMatchingConfigurationClass:()Ljava/lang/String;\n+   #93 = NameAndType        #114:#54      // getConfigurationClass:()Ljava/lang/String;\n+   #94 = NameAndType        #115:#116     // iterator:()Ljava/util/Iterator;\n+   #95 = NameAndType        #117:#118     // hasNext:()Z\n+   #96 = NameAndType        #119:#120     // next:()Ljava/lang/Object;\n+   #97 = Utf8               org/apache/commons/configuration2/builder/BuilderParameters\n+   #98 = Utf8               org/apache/commons/configuration2/builder/FileBasedBuilderParametersImpl\n+   #99 = NameAndType        #121:#122     // getFileHandler:()Lorg/apache/commons/configuration2/io/FileHandler;\n+  #100 = Class              #123          // org/apache/commons/configuration2/io/FileHandler\n+  #101 = NameAndType        #124:#54      // getFileName:()Ljava/lang/String;\n+  #102 = Utf8               org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider\n+  #103 = NameAndType        #125:#126     // lastIndexOf:(I)I\n+  #104 = NameAndType        #127:#128     // substring:(I)Ljava/lang/String;\n+  #105 = Utf8               org/apache/commons/configuration2/builder/combined/BaseConfigurationBuilderProvider\n+  #106 = Utf8               java/lang/String\n+  #107 = Utf8               java/util/Collection\n+  #108 = Utf8               org/apache/commons/configuration2/ex/ConfigurationException\n+  #109 = Utf8               java/util/Iterator\n+  #110 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;)V\n+  #111 = Utf8               (Ljava/lang/String;)V\n+  #112 = Utf8               equalsIgnoreCase\n+  #113 = Utf8               (Ljava/lang/String;)Z\n+  #114 = Utf8               getConfigurationClass\n+  #115 = Utf8               iterator\n+  #116 = Utf8               ()Ljava/util/Iterator;\n+  #117 = Utf8               hasNext\n+  #118 = Utf8               ()Z\n+  #119 = Utf8               next\n+  #120 = Utf8               ()Ljava/lang/Object;\n+  #121 = Utf8               getFileHandler\n+  #122 = Utf8               ()Lorg/apache/commons/configuration2/io/FileHandler;\n+  #123 = Utf8               org/apache/commons/configuration2/io/FileHandler\n+  #124 = Utf8               getFileName\n+  #125 = Utf8               lastIndexOf\n+  #126 = Utf8               (I)I\n+  #127 = Utf8               substring\n+  #128 = Utf8               (I)Ljava/lang/String;\n {\n   private static final char EXT_SEPARATOR = '.';\n     descriptor: C\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 46\n \n   private final java.lang.String matchingConfigurationClass;\n@@ -209,15 +205,15 @@\n             0      51     6 paramCls   Ljava/util/Collection<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 24\n           locals = [ class org/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/lang/String, class java/util/Collection ]\n           stack = []\n         frame_type = 14 /* same */\n-    Signature: #53                          // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n+    Signature: #52                          // (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)V\n \n   public java.lang.String getMatchingConfigurationClass();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -262,15 +258,15 @@\n         23: goto          30\n         26: aload_0\n         27: invokevirtual #13                 // Method getConfigurationClass:()Ljava/lang/String;\n         30: areturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 8\n-        line 136: 27\n+        line 136: 26\n         line 135: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/configuration2/builder/combined/FileExtensionConfigurationBuilderProvider;\n             0      31     1  decl   Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;\n             0      31     2 params   Ljava/util/Collection;\n             8      23     3 currentExt   Ljava/lang/String;\n@@ -281,15 +277,15 @@\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ class java/lang/String ]\n         frame_type = 67 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n     Exceptions:\n       throws org.apache.commons.configuration2.ex.ConfigurationException\n-    Signature: #66                          // (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+    Signature: #65                          // (Lorg/apache/commons/configuration2/builder/combined/ConfigurationDeclaration;Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n \n   private static java.lang.String fetchCurrentFileName(java.util.Collection<org.apache.commons.configuration2.builder.BuilderParameters>);\n     descriptor: (Ljava/util/Collection;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=4, args_size=1\n          0: aload_0\n@@ -333,15 +329,15 @@\n       StackMapTable: number_of_entries = 3\n         frame_type = 252 /* append */\n           offset_delta = 7\n           locals = [ class java/util/Iterator ]\n         frame_type = 38 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #74                          // (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n+    Signature: #73                          // (Ljava/util/Collection<Lorg/apache/commons/configuration2/builder/BuilderParameters;>;)Ljava/lang/String;\n \n   private static java.lang.String extractExtension(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n"}]}
