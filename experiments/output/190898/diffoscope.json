{"diffoscope-json-version": 1, "source1": "first/CSVFormat.class", "source2": "second/CSVFormat.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,905 +1,901 @@\n-  SHA-256 checksum e7315e7a5aeb4c173c768cbc78a068a90cbb3867dc338182f2b31d54cfc3b60a\n+  SHA-256 checksum d30b24de88b19c4330042b3ec39c85de52b3682f2be26284e17ee604c98ad76a\n   Compiled from \"CSVFormat.java\"\n public final class org.apache.commons.csv.CSVFormat implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #33                         // org/apache/commons/csv/CSVFormat\n-  super_class: #98                        // java/lang/Object\n+  this_class: #4                          // org/apache/commons/csv/CSVFormat\n+  super_class: #150                       // java/lang/Object\n   interfaces: 1, fields: 32, methods: 116, attributes: 2\n Constant pool:\n-    #1 = Class              #524          // org/apache/commons/csv/Constants\n-    #2 = Methodref          #33.#525      // org/apache/commons/csv/CSVFormat.containsLineBreak:(Ljava/lang/String;)Z\n-    #3 = Methodref          #33.#526      // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n-    #4 = Methodref          #33.#527      // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n-    #5 = Fieldref           #33.#528      // org/apache/commons/csv/CSVFormat.allowDuplicateHeaderNames:Z\n-    #6 = Fieldref           #33.#529      // org/apache/commons/csv/CSVFormat.quotedNullString:Ljava/lang/String;\n-    #7 = Fieldref           #33.#530      // org/apache/commons/csv/CSVFormat.autoFlush:Z\n-    #8 = Fieldref           #33.#531      // org/apache/commons/csv/CSVFormat.trim:Z\n-    #9 = Fieldref           #33.#532      // org/apache/commons/csv/CSVFormat.trailingDelimiter:Z\n-   #10 = Fieldref           #33.#533      // org/apache/commons/csv/CSVFormat.ignoreHeaderCase:Z\n-   #11 = Fieldref           #33.#534      // org/apache/commons/csv/CSVFormat.skipHeaderRecord:Z\n-   #12 = Fieldref           #33.#535      // org/apache/commons/csv/CSVFormat.header:[Ljava/lang/String;\n-   #13 = Fieldref           #33.#536      // org/apache/commons/csv/CSVFormat.headerComments:[Ljava/lang/String;\n-   #14 = Fieldref           #33.#537      // org/apache/commons/csv/CSVFormat.nullString:Ljava/lang/String;\n-   #15 = Fieldref           #33.#538      // org/apache/commons/csv/CSVFormat.recordSeparator:Ljava/lang/String;\n-   #16 = Fieldref           #33.#539      // org/apache/commons/csv/CSVFormat.ignoreEmptyLines:Z\n-   #17 = Fieldref           #33.#540      // org/apache/commons/csv/CSVFormat.allowMissingColumnNames:Z\n-   #18 = Fieldref           #33.#541      // org/apache/commons/csv/CSVFormat.ignoreSurroundingSpaces:Z\n-   #19 = Fieldref           #33.#542      // org/apache/commons/csv/CSVFormat.escapeCharacter:Ljava/lang/Character;\n-   #20 = Fieldref           #33.#543      // org/apache/commons/csv/CSVFormat.commentMarker:Ljava/lang/Character;\n-   #21 = Fieldref           #33.#544      // org/apache/commons/csv/CSVFormat.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-   #22 = Fieldref           #33.#545      // org/apache/commons/csv/CSVFormat.quoteCharacter:Ljava/lang/Character;\n-   #23 = Fieldref           #33.#546      // org/apache/commons/csv/CSVFormat.delimiter:Ljava/lang/String;\n-   #24 = Methodref          #547.#548     // \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n-   #25 = Class              #294          // \"[Ljava/lang/Object;\"\n-   #26 = String             #304          // source\n-   #27 = Methodref          #549.#550     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #28 = Class              #551          // java/lang/String\n-   #29 = Methodref          #28.#552      // java/lang/String.indexOf:(I)I\n-   #30 = Methodref          #33.#553      // org/apache/commons/csv/CSVFormat.contains:(Ljava/lang/String;C)Z\n-   #31 = Methodref          #554.#555     // java/lang/Character.charValue:()C\n-   #32 = Methodref          #33.#556      // org/apache/commons/csv/CSVFormat.isLineBreak:(C)Z\n-   #33 = Class              #557          // org/apache/commons/csv/CSVFormat\n-   #34 = Methodref          #28.#558      // java/lang/String.valueOf:(C)Ljava/lang/String;\n-   #35 = Methodref          #33.#559      // org/apache/commons/csv/CSVFormat.\"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n-   #36 = Methodref          #549.#560     // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #37 = Methodref          #28.#561      // java/lang/String.trim:()Ljava/lang/String;\n-   #38 = InterfaceMethodref #109.#562     // java/lang/CharSequence.length:()I\n-   #39 = InterfaceMethodref #109.#563     // java/lang/CharSequence.charAt:(I)C\n-   #40 = InterfaceMethodref #109.#564     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n-   #41 = Methodref          #242.#565     // org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-   #42 = Methodref          #242.#566     // org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n-   #43 = Methodref          #98.#567      // java/lang/Object.\"<init>\":()V\n-   #44 = Methodref          #244.#568     // org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #45 = Methodref          #244.#569     // org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-   #46 = Methodref          #244.#570     // org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-   #47 = Methodref          #244.#571     // org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-   #48 = Methodref          #244.#572     // org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-   #49 = Methodref          #244.#573     // org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #50 = Methodref          #244.#574     // org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #51 = Methodref          #244.#575     // org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #52 = Methodref          #244.#576     // org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #53 = Methodref          #244.#577     // org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #54 = Methodref          #244.#578     // org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-   #55 = Methodref          #244.#579     // org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-   #56 = Methodref          #244.#580     // org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #57 = Methodref          #244.#581     // org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #58 = Methodref          #244.#582     // org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #59 = Methodref          #244.#583     // org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #60 = Methodref          #244.#584     // org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #61 = Methodref          #244.#585     // org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-   #62 = Methodref          #244.#586     // org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-   #63 = Methodref          #33.#587      // org/apache/commons/csv/CSVFormat.validate:()V\n-   #64 = Methodref          #33.#588      // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-   #65 = Methodref          #33.#589      // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #66 = Class              #274          // \"[Ljava/lang/String;\"\n-   #67 = Class              #590          // java/lang/StringBuilder\n-   #68 = Methodref          #67.#567      // java/lang/StringBuilder.\"<init>\":()V\n-   #69 = Methodref          #67.#591      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #70 = Methodref          #67.#592      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #71 = Methodref          #67.#593      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #72 = InterfaceMethodref #428.#594     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-   #73 = InterfaceMethodref #428.#595     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #74 = Methodref          #244.#596     // org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #75 = Methodref          #33.#597      // org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-   #76 = Methodref          #244.#598     // org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-   #77 = Methodref          #98.#599      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #78 = Methodref          #549.#600     // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #79 = Methodref          #601.#602     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-   #80 = Class              #603          // java/io/StringWriter\n-   #81 = Methodref          #80.#567      // java/io/StringWriter.\"<init>\":()V\n-   #82 = Class              #604          // org/apache/commons/csv/CSVPrinter\n-   #83 = Methodref          #82.#605      // org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-   #84 = Methodref          #82.#606      // org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n-   #85 = Methodref          #80.#593      // java/io/StringWriter.toString:()Ljava/lang/String;\n-   #86 = Methodref          #28.#562      // java/lang/String.length:()I\n-   #87 = Methodref          #28.#607      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #88 = Methodref          #82.#608      // org/apache/commons/csv/CSVPrinter.close:()V\n-   #89 = Class              #609          // java/lang/Throwable\n-   #90 = Methodref          #89.#610      // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #91 = Class              #611          // java/io/IOException\n-   #92 = Class              #612          // java/lang/IllegalStateException\n-   #93 = Methodref          #92.#613      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #94 = Methodref          #28.#563      // java/lang/String.charAt:(I)C\n-   #95 = Methodref          #614.#548     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #96 = Methodref          #615.#548     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #97 = Methodref          #601.#616     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n-   #98 = Class              #617          // java/lang/Object\n-   #99 = Methodref          #618.#619     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n-  #100 = Methodref          #549.#620     // java/util/Objects.hash:([Ljava/lang/Object;)I\n-  #101 = Class              #621          // org/apache/commons/csv/CSVParser\n-  #102 = Methodref          #101.#622     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #103 = Class              #623          // java/io/OutputStreamWriter\n-  #104 = Class              #624          // java/io/FileOutputStream\n-  #105 = Methodref          #104.#625     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-  #106 = Methodref          #103.#626     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #107 = String             #627          //\n-  #108 = Fieldref           #444.#628     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #109 = Class              #629          // java/lang/CharSequence\n-  #110 = Class              #630          // java/io/Reader\n-  #111 = Methodref          #33.#631      // org/apache/commons/csv/CSVFormat.print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-  #112 = Methodref          #98.#593      // java/lang/Object.toString:()Ljava/lang/String;\n-  #113 = Methodref          #33.#632      // org/apache/commons/csv/CSVFormat.getTrim:()Z\n-  #114 = Methodref          #33.#633      // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #115 = Methodref          #33.#634      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #116 = Methodref          #33.#635      // org/apache/commons/csv/CSVFormat.getDelimiterString:()Ljava/lang/String;\n-  #117 = Methodref          #33.#636      // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n-  #118 = Methodref          #33.#637      // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #119 = Methodref          #33.#638      // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n-  #120 = Methodref          #33.#639      // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #121 = InterfaceMethodref #428.#640     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #122 = Class              #641          // java/nio/file/OpenOption\n-  #123 = Methodref          #642.#643     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #124 = Methodref          #33.#644      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #125 = Methodref          #33.#645      // org/apache/commons/csv/CSVFormat.append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #126 = Methodref          #33.#646      // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #127 = Methodref          #33.#647      // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #128 = Class              #648          // java/io/Writer\n-  #129 = Methodref          #140.#649     // org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n-  #130 = Methodref          #140.#650     // org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n-  #131 = Fieldref           #651.#652     // java/lang/System.out:Ljava/io/PrintStream;\n-  #132 = Methodref          #33.#653      // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n-  #133 = Methodref          #33.#654      // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #134 = Methodref          #33.#655      // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n-  #135 = Methodref          #28.#656      // java/lang/String.toCharArray:()[C\n-  #136 = Methodref          #33.#657      // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n-  #137 = Methodref          #33.#658      // org/apache/commons/csv/CSVFormat.isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n-  #138 = Class              #659          // org/apache/commons/csv/ExtendedBufferedReader\n-  #139 = Methodref          #138.#660     // org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-  #140 = Class              #661          // org/apache/commons/csv/IOUtils\n-  #141 = Methodref          #67.#662      // java/lang/StringBuilder.\"<init>\":(I)V\n-  #142 = Methodref          #138.#663     // org/apache/commons/csv/ExtendedBufferedReader.read:()I\n-  #143 = Methodref          #67.#664      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-  #144 = Methodref          #138.#665     // org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n-  #145 = Methodref          #28.#666      // java/lang/String.\"<init>\":([C)V\n-  #146 = Methodref          #67.#607      // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n-  #147 = Methodref          #67.#667      // java/lang/StringBuilder.setLength:(I)V\n-  #148 = Methodref          #33.#668      // org/apache/commons/csv/CSVFormat.append:(CLjava/lang/Appendable;)V\n-  #149 = Methodref          #33.#669      // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n-  #150 = Methodref          #33.#670      // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #151 = Fieldref           #444.#671     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #152 = Fieldref           #240.#672     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #153 = Methodref          #444.#673     // org/apache/commons/csv/QuoteMode.ordinal:()I\n-  #154 = Class              #674          // java/lang/Number\n-  #155 = String             #675          // Unexpected Quote value:\n-  #156 = Methodref          #92.#676      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #157 = Fieldref           #444.#677     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #158 = Methodref          #110.#663     // java/io/Reader.read:()I\n-  #159 = String             #678          // Delimiter=<\n-  #160 = String             #679          // Escape=<\n-  #161 = String             #680          // QuoteChar=<\n-  #162 = String             #681          // QuoteMode=<\n-  #163 = Methodref          #33.#682      // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n-  #164 = String             #683          // CommentStart=<\n-  #165 = Methodref          #33.#684      // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n-  #166 = String             #685          // NullString=<\n-  #167 = String             #686          // RecordSeparator=<\n-  #168 = Methodref          #33.#687      // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n-  #169 = String             #688          //  EmptyLines:ignored\n-  #170 = Methodref          #33.#689      // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n-  #171 = String             #690          //  SurroundingSpaces:ignored\n-  #172 = Methodref          #33.#691      // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n-  #173 = String             #692          //  IgnoreHeaderCase:ignored\n-  #174 = String             #693          //  SkipHeaderRecord:\n-  #175 = Methodref          #67.#694      // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-  #176 = String             #695          // HeaderComments:\n-  #177 = Methodref          #601.#696     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #178 = String             #697          // Header:\n-  #179 = Class              #698          // java/lang/IllegalArgumentException\n-  #180 = String             #699          // The delimiter cannot be a line break\n-  #181 = Methodref          #179.#676     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #182 = String             #700          // The quoteChar character and the delimiter cannot be the same (\\'\n-  #183 = String             #701          // \\')\n-  #184 = String             #702          // The escape character and the delimiter cannot be the same (\\'\n-  #185 = String             #703          // The comment start character and the delimiter cannot be the same (\\'\n-  #186 = Methodref          #554.#704     // java/lang/Character.equals:(Ljava/lang/Object;)Z\n-  #187 = String             #705          // The comment start character and the quoteChar cannot be the same (\\'\n-  #188 = String             #706          // The comment start and the escape character cannot be the same (\\'\n-  #189 = String             #707          // No quotes mode set but no escape character is set\n-  #190 = Class              #708          // java/util/HashSet\n-  #191 = Methodref          #190.#567     // java/util/HashSet.\"<init>\":()V\n-  #192 = InterfaceMethodref #453.#709     // java/util/Set.add:(Ljava/lang/Object;)Z\n-  #193 = String             #710          // The header contains a duplicate entry: \\'\n-  #194 = String             #711          // \\' in\n-  #195 = Methodref          #244.#712     // org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #196 = Methodref          #244.#713     // org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #197 = Methodref          #244.#714     // org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #198 = Methodref          #244.#715     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #199 = Methodref          #244.#716     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #200 = Methodref          #244.#717     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #201 = Methodref          #244.#718     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #202 = Methodref          #244.#719     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #203 = Methodref          #244.#720     // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #204 = Methodref          #244.#721     // org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #205 = Methodref          #244.#722     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #206 = Methodref          #244.#723     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #207 = Methodref          #244.#724     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #208 = Methodref          #244.#725     // org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #209 = Methodref          #244.#726     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #210 = Methodref          #244.#727     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #211 = Methodref          #244.#728     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #212 = Methodref          #244.#729     // org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #213 = Methodref          #244.#730     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #214 = Methodref          #244.#731     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #215 = Methodref          #244.#732     // org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #216 = Methodref          #244.#733     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #217 = Methodref          #244.#734     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #218 = Methodref          #651.#735     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-  #219 = Methodref          #244.#736     // org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #220 = Methodref          #244.#737     // org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #221 = String             #738          // ,\n-  #222 = Fieldref           #1.#739       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #223 = String             #740          // \\r\\n\n-  #224 = Fieldref           #33.#741      // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #225 = Fieldref           #33.#742      // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #226 = Fieldref           #33.#743      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #227 = Methodref          #244.#744     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #228 = Fieldref           #33.#745      // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #229 = Fieldref           #33.#746      // org/apache/commons/csv/CSVFormat.MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #230 = Fieldref           #33.#747      // org/apache/commons/csv/CSVFormat.MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n-  #231 = String             #748          // \\\\N\n-  #232 = Fieldref           #444.#749     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #233 = Fieldref           #33.#750      // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #234 = Fieldref           #33.#751      // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #235 = Fieldref           #33.#752      // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #236 = Fieldref           #33.#753      // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #237 = Fieldref           #33.#754      // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #238 = Fieldref           #33.#755      // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #239 = Class              #756          // java/io/Serializable\n-  #240 = Class              #757          // org/apache/commons/csv/CSVFormat$1\n-  #241 = Utf8               InnerClasses\n-  #242 = Class              #758          // org/apache/commons/csv/CSVFormat$Predefined\n-  #243 = Utf8               Predefined\n-  #244 = Class              #759          // org/apache/commons/csv/CSVFormat$Builder\n-  #245 = Utf8               Builder\n-  #246 = Utf8               DEFAULT\n-  #247 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-  #248 = Utf8               EXCEL\n-  #249 = Utf8               INFORMIX_UNLOAD\n-  #250 = Utf8               INFORMIX_UNLOAD_CSV\n-  #251 = Utf8               MONGODB_CSV\n-  #252 = Utf8               MONGODB_TSV\n-  #253 = Utf8               MYSQL\n-  #254 = Utf8               ORACLE\n-  #255 = Utf8               POSTGRESQL_CSV\n-  #256 = Utf8               POSTGRESQL_TEXT\n-  #257 = Utf8               RFC4180\n-  #258 = Utf8               serialVersionUID\n-  #259 = Utf8               J\n-  #260 = Utf8               ConstantValue\n-  #261 = Long               1l\n-  #263 = Utf8               TDF\n-  #264 = Utf8               allowDuplicateHeaderNames\n-  #265 = Utf8               Z\n-  #266 = Utf8               allowMissingColumnNames\n-  #267 = Utf8               autoFlush\n-  #268 = Utf8               commentMarker\n-  #269 = Utf8               Ljava/lang/Character;\n-  #270 = Utf8               delimiter\n-  #271 = Utf8               Ljava/lang/String;\n-  #272 = Utf8               escapeCharacter\n-  #273 = Utf8               header\n-  #274 = Utf8               [Ljava/lang/String;\n-  #275 = Utf8               headerComments\n-  #276 = Utf8               ignoreEmptyLines\n-  #277 = Utf8               ignoreHeaderCase\n-  #278 = Utf8               ignoreSurroundingSpaces\n-  #279 = Utf8               nullString\n-  #280 = Utf8               quoteCharacter\n-  #281 = Utf8               quotedNullString\n-  #282 = Utf8               quoteMode\n-  #283 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-  #284 = Utf8               recordSeparator\n-  #285 = Utf8               skipHeaderRecord\n-  #286 = Utf8               trailingDelimiter\n-  #287 = Utf8               trim\n-  #288 = Utf8               clone\n-  #289 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #290 = Utf8               Code\n-  #291 = Utf8               LineNumberTable\n-  #292 = Utf8               LocalVariableTable\n-  #293 = Utf8               values\n-  #294 = Utf8               [Ljava/lang/Object;\n-  #295 = Utf8               LocalVariableTypeTable\n-  #296 = Utf8               [TT;\n-  #297 = Utf8               StackMapTable\n-  #298 = Utf8               Signature\n-  #299 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;\n-  #300 = Utf8               RuntimeVisibleAnnotations\n-  #301 = Utf8               Ljava/lang/SafeVarargs;\n-  #302 = Utf8               contains\n-  #303 = Utf8               (Ljava/lang/String;C)Z\n-  #304 = Utf8               source\n-  #305 = Utf8               searchCh\n-  #306 = Utf8               C\n-  #307 = Utf8               containsLineBreak\n-  #308 = Utf8               (Ljava/lang/String;)Z\n-  #309 = Utf8               isLineBreak\n-  #310 = Utf8               (C)Z\n-  #311 = Utf8               c\n-  #312 = Utf8               (Ljava/lang/Character;)Z\n-  #313 = Utf8               newFormat\n-  #314 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n-  #315 = Utf8               toStringArray\n-  #316 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n-  #317 = Utf8               i\n-  #318 = Utf8               I\n-  #319 = Utf8               strings\n-  #320 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #321 = Utf8               charSequence\n-  #322 = Utf8               Ljava/lang/CharSequence;\n-  #323 = Utf8               count\n-  #324 = Utf8               len\n-  #325 = Utf8               pos\n-  #326 = Utf8               valueOf\n-  #327 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #328 = Utf8               format\n-  #329 = Utf8               <init>\n-  #330 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)V\n-  #331 = Utf8               this\n-  #332 = Utf8               builder\n-  #333 = Utf8               Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #334 = Utf8               (Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n-  #335 = Utf8               quoteChar\n-  #336 = Utf8               commentStart\n-  #337 = Utf8               escape\n-  #338 = Utf8               append\n-  #339 = Utf8               (CLjava/lang/Appendable;)V\n-  #340 = Utf8               appendable\n-  #341 = Utf8               Ljava/lang/Appendable;\n-  #342 = Utf8               Exceptions\n-  #343 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #344 = Utf8               csq\n-  #345 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #346 = Utf8               copy\n-  #347 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-  #348 = Utf8               equals\n-  #349 = Utf8               (Ljava/lang/Object;)Z\n-  #350 = Utf8               obj\n-  #351 = Utf8               Ljava/lang/Object;\n-  #352 = Utf8               other\n-  #353 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n-  #354 = Utf8               res\n-  #355 = Utf8               csvPrinter\n-  #356 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n-  #357 = Utf8               e\n-  #358 = Utf8               Ljava/io/IOException;\n-  #359 = Utf8               out\n-  #360 = Utf8               Ljava/io/StringWriter;\n-  #361 = Utf8               getAllowDuplicateHeaderNames\n-  #362 = Utf8               ()Z\n-  #363 = Utf8               getAllowMissingColumnNames\n-  #364 = Utf8               getAutoFlush\n-  #365 = Utf8               getCommentMarker\n-  #366 = Utf8               ()Ljava/lang/Character;\n-  #367 = Utf8               getDelimiter\n-  #368 = Utf8               ()C\n-  #369 = Utf8               Deprecated\n-  #370 = Utf8               Ljava/lang/Deprecated;\n-  #371 = Utf8               getDelimiterString\n-  #372 = Utf8               ()Ljava/lang/String;\n-  #373 = Utf8               getEscapeCharacter\n-  #374 = Utf8               getHeader\n-  #375 = Utf8               ()[Ljava/lang/String;\n-  #376 = Utf8               getHeaderComments\n-  #377 = Utf8               getIgnoreEmptyLines\n-  #378 = Utf8               getIgnoreHeaderCase\n-  #379 = Utf8               getIgnoreSurroundingSpaces\n-  #380 = Utf8               getNullString\n-  #381 = Utf8               getQuoteCharacter\n-  #382 = Utf8               getQuoteMode\n-  #383 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n-  #384 = Utf8               getRecordSeparator\n-  #385 = Utf8               getSkipHeaderRecord\n-  #386 = Utf8               getTrailingDelimiter\n-  #387 = Utf8               getTrim\n-  #388 = Utf8               hashCode\n-  #389 = Utf8               ()I\n-  #390 = Utf8               prime\n-  #391 = Utf8               result\n-  #392 = Utf8               isCommentMarkerSet\n-  #393 = Utf8               isDelimiter\n-  #394 = Utf8               (CLjava/lang/CharSequence;I[CI)Z\n-  #395 = Utf8               ch\n-  #396 = Utf8               charSeq\n-  #397 = Utf8               startIndex\n-  #398 = Utf8               [C\n-  #399 = Utf8               delimiterLength\n-  #400 = Utf8               isEscapeCharacterSet\n-  #401 = Utf8               isNullStringSet\n-  #402 = Utf8               isQuoteCharacterSet\n-  #403 = Utf8               parse\n-  #404 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #405 = Utf8               reader\n-  #406 = Utf8               Ljava/io/Reader;\n-  #407 = Utf8               print\n-  #408 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #409 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #410 = Utf8               Ljava/io/File;\n-  #411 = Utf8               charset\n-  #412 = Utf8               Ljava/nio/charset/Charset;\n-  #413 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #414 = Utf8               value\n-  #415 = Utf8               newRecord\n-  #416 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #417 = Utf8               object\n-  #418 = Utf8               offset\n-  #419 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n-  #420 = Utf8               Ljava/nio/file/Path;\n-  #421 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-  #422 = Utf8               printer\n-  #423 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n-  #424 = Utf8               println\n-  #425 = Utf8               (Ljava/lang/Appendable;)V\n-  #426 = Utf8               printRecord\n-  #427 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n-  #428 = Class              #760          // java/lang/Appendable\n-  #429 = Utf8               printWithEscapes\n-  #430 = Utf8               isDelimiterStart\n-  #431 = Utf8               start\n-  #432 = Utf8               end\n-  #433 = Utf8               delim\n-  #434 = Utf8               delimLength\n-  #435 = Class              #398          // \"[C\"\n-  #436 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #437 = Utf8               bufferedReader\n-  #438 = Utf8               Lorg/apache/commons/csv/ExtendedBufferedReader;\n-  #439 = Utf8               Ljava/lang/StringBuilder;\n-  #440 = Utf8               printWithQuotes\n-  #441 = Utf8               quote\n-  #442 = Utf8               escapeChar\n-  #443 = Utf8               quoteModePolicy\n-  #444 = Class              #761          // org/apache/commons/csv/QuoteMode\n-  #445 = Utf8               toString\n-  #446 = Utf8               sb\n-  #447 = Utf8               validate\n-  #448 = Utf8               ()V\n-  #449 = Utf8               hdr\n-  #450 = Utf8               dupCheck\n-  #451 = Utf8               Ljava/util/Set;\n-  #452 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n-  #453 = Class              #762          // java/util/Set\n-  #454 = Utf8               withAllowDuplicateHeaderNames\n-  #455 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n-  #456 = Utf8               withAllowMissingColumnNames\n-  #457 = Utf8               withAutoFlush\n-  #458 = Utf8               withCommentMarker\n-  #459 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n-  #460 = Utf8               withDelimiter\n-  #461 = Utf8               withEscape\n-  #462 = Utf8               withFirstRecordAsHeader\n-  #463 = Utf8               withHeader\n-  #464 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n-  #465 = Utf8               headerEnum\n-  #466 = Utf8               Ljava/lang/Class;\n-  #467 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n-  #468 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n-  #469 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n-  #470 = Utf8               resultSet\n-  #471 = Utf8               Ljava/sql/ResultSet;\n-  #472 = Class              #763          // java/sql/SQLException\n-  #473 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n-  #474 = Utf8               resultSetMetaData\n-  #475 = Utf8               Ljava/sql/ResultSetMetaData;\n-  #476 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n-  #477 = Utf8               withHeaderComments\n-  #478 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n-  #479 = Utf8               withIgnoreEmptyLines\n-  #480 = Utf8               withIgnoreHeaderCase\n-  #481 = Utf8               withIgnoreSurroundingSpaces\n-  #482 = Utf8               withNullString\n-  #483 = Utf8               withQuote\n-  #484 = Utf8               withQuoteMode\n-  #485 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #486 = Utf8               withRecordSeparator\n-  #487 = Utf8               withSkipHeaderRecord\n-  #488 = Utf8               withSystemRecordSeparator\n-  #489 = Utf8               withTrailingDelimiter\n-  #490 = Utf8               withTrim\n-  #491 = Utf8               access$000\n-  #492 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n-  #493 = Utf8               x0\n-  #494 = Utf8               access$100\n-  #495 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n-  #496 = Utf8               access$200\n-  #497 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n-  #498 = Utf8               access$300\n-  #499 = Utf8               access$400\n-  #500 = Utf8               access$500\n-  #501 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n-  #502 = Utf8               access$600\n-  #503 = Utf8               access$700\n-  #504 = Utf8               access$800\n-  #505 = Utf8               access$900\n-  #506 = Utf8               access$1000\n-  #507 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n-  #508 = Utf8               access$1100\n-  #509 = Utf8               access$1200\n-  #510 = Utf8               access$1300\n-  #511 = Utf8               access$1400\n-  #512 = Utf8               access$1500\n-  #513 = Utf8               access$1600\n-  #514 = Utf8               access$1700\n-  #515 = Utf8               access$1800\n-  #516 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n-  #517 = Utf8               x1\n-  #518 = Utf8               Lorg/apache/commons/csv/CSVFormat$1;\n-  #519 = Utf8               access$2000\n-  #520 = Utf8               access$2100\n-  #521 = Utf8               <clinit>\n-  #522 = Utf8               SourceFile\n-  #523 = Utf8               CSVFormat.java\n-  #524 = Utf8               org/apache/commons/csv/Constants\n-  #525 = NameAndType        #307:#308     // containsLineBreak:(Ljava/lang/String;)Z\n-  #526 = NameAndType        #309:#312     // isLineBreak:(Ljava/lang/Character;)Z\n-  #527 = NameAndType        #329:#330     // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n-  #528 = NameAndType        #264:#265     // allowDuplicateHeaderNames:Z\n-  #529 = NameAndType        #281:#271     // quotedNullString:Ljava/lang/String;\n-  #530 = NameAndType        #267:#265     // autoFlush:Z\n-  #531 = NameAndType        #287:#265     // trim:Z\n-  #532 = NameAndType        #286:#265     // trailingDelimiter:Z\n-  #533 = NameAndType        #277:#265     // ignoreHeaderCase:Z\n-  #534 = NameAndType        #285:#265     // skipHeaderRecord:Z\n-  #535 = NameAndType        #273:#274     // header:[Ljava/lang/String;\n-  #536 = NameAndType        #275:#274     // headerComments:[Ljava/lang/String;\n-  #537 = NameAndType        #279:#271     // nullString:Ljava/lang/String;\n-  #538 = NameAndType        #284:#271     // recordSeparator:Ljava/lang/String;\n-  #539 = NameAndType        #276:#265     // ignoreEmptyLines:Z\n-  #540 = NameAndType        #266:#265     // allowMissingColumnNames:Z\n-  #541 = NameAndType        #278:#265     // ignoreSurroundingSpaces:Z\n-  #542 = NameAndType        #272:#269     // escapeCharacter:Ljava/lang/Character;\n-  #543 = NameAndType        #268:#269     // commentMarker:Ljava/lang/Character;\n-  #544 = NameAndType        #282:#283     // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-  #545 = NameAndType        #280:#269     // quoteCharacter:Ljava/lang/Character;\n-  #546 = NameAndType        #270:#271     // delimiter:Ljava/lang/String;\n-  #547 = Class              #294          // \"[Ljava/lang/Object;\"\n-  #548 = NameAndType        #288:#764     // clone:()Ljava/lang/Object;\n-  #549 = Class              #765          // java/util/Objects\n-  #550 = NameAndType        #766:#767     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #551 = Utf8               java/lang/String\n-  #552 = NameAndType        #768:#769     // indexOf:(I)I\n-  #553 = NameAndType        #302:#303     // contains:(Ljava/lang/String;C)Z\n-  #554 = Class              #770          // java/lang/Character\n-  #555 = NameAndType        #771:#368     // charValue:()C\n-  #556 = NameAndType        #309:#310     // isLineBreak:(C)Z\n-  #557 = Utf8               org/apache/commons/csv/CSVFormat\n-  #558 = NameAndType        #326:#772     // valueOf:(C)Ljava/lang/String;\n-  #559 = NameAndType        #329:#334     // \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n-  #560 = NameAndType        #445:#773     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #561 = NameAndType        #287:#372     // trim:()Ljava/lang/String;\n-  #562 = NameAndType        #774:#389     // length:()I\n-  #563 = NameAndType        #775:#776     // charAt:(I)C\n-  #564 = NameAndType        #777:#778     // subSequence:(II)Ljava/lang/CharSequence;\n-  #565 = NameAndType        #326:#779     // valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-  #566 = NameAndType        #780:#347     // getFormat:()Lorg/apache/commons/csv/CSVFormat;\n-  #567 = NameAndType        #329:#448     // \"<init>\":()V\n-  #568 = NameAndType        #781:#782     // access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #569 = NameAndType        #783:#784     // access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #570 = NameAndType        #785:#786     // access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #571 = NameAndType        #787:#784     // access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #572 = NameAndType        #788:#784     // access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #573 = NameAndType        #789:#790     // access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #574 = NameAndType        #791:#790     // access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #575 = NameAndType        #792:#790     // access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #576 = NameAndType        #793:#782     // access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #577 = NameAndType        #794:#782     // access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #578 = NameAndType        #795:#796     // access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #579 = NameAndType        #797:#796     // access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #580 = NameAndType        #798:#790     // access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #581 = NameAndType        #799:#790     // access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #582 = NameAndType        #800:#790     // access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #583 = NameAndType        #801:#790     // access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #584 = NameAndType        #802:#790     // access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #585 = NameAndType        #803:#782     // access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #586 = NameAndType        #804:#790     // access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #587 = NameAndType        #447:#448     // validate:()V\n-  #588 = NameAndType        #315:#316     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-  #589 = NameAndType        #288:#289     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #590 = Utf8               java/lang/StringBuilder\n-  #591 = NameAndType        #338:#805     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #592 = NameAndType        #338:#806     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #593 = NameAndType        #445:#372     // toString:()Ljava/lang/String;\n-  #594 = NameAndType        #338:#807     // append:(C)Ljava/lang/Appendable;\n-  #595 = NameAndType        #338:#808     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #596 = NameAndType        #809:#810     // create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #597 = NameAndType        #332:#345     // builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #598 = NameAndType        #811:#347     // build:()Lorg/apache/commons/csv/CSVFormat;\n-  #599 = NameAndType        #812:#813     // getClass:()Ljava/lang/Class;\n-  #600 = NameAndType        #348:#814     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #601 = Class              #815          // java/util/Arrays\n-  #602 = NameAndType        #348:#816     // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #603 = Utf8               java/io/StringWriter\n-  #604 = Utf8               org/apache/commons/csv/CSVPrinter\n-  #605 = NameAndType        #329:#817     // \"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-  #606 = NameAndType        #426:#818     // printRecord:([Ljava/lang/Object;)V\n-  #607 = NameAndType        #819:#820     // substring:(II)Ljava/lang/String;\n-  #608 = NameAndType        #821:#448     // close:()V\n-  #609 = Utf8               java/lang/Throwable\n-  #610 = NameAndType        #822:#823     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #611 = Utf8               java/io/IOException\n-  #612 = Utf8               java/lang/IllegalStateException\n-  #613 = NameAndType        #329:#823     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #614 = Class              #274          // \"[Ljava/lang/String;\"\n-  #615 = Class              #274          // \"[Ljava/lang/String;\"\n-  #616 = NameAndType        #388:#824     // hashCode:([Ljava/lang/Object;)I\n-  #617 = Utf8               java/lang/Object\n-  #618 = Class              #825          // java/lang/Boolean\n-  #619 = NameAndType        #326:#826     // valueOf:(Z)Ljava/lang/Boolean;\n-  #620 = NameAndType        #827:#824     // hash:([Ljava/lang/Object;)I\n-  #621 = Utf8               org/apache/commons/csv/CSVParser\n-  #622 = NameAndType        #329:#828     // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #623 = Utf8               java/io/OutputStreamWriter\n-  #624 = Utf8               java/io/FileOutputStream\n-  #625 = NameAndType        #329:#829     // \"<init>\":(Ljava/io/File;)V\n-  #626 = NameAndType        #329:#830     // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #627 = Utf8\n-  #628 = NameAndType        #831:#283     // ALL:Lorg/apache/commons/csv/QuoteMode;\n-  #629 = Utf8               java/lang/CharSequence\n-  #630 = Utf8               java/io/Reader\n-  #631 = NameAndType        #407:#421     // print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-  #632 = NameAndType        #387:#362     // getTrim:()Z\n-  #633 = NameAndType        #287:#320     // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-  #634 = NameAndType        #407:#416     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #635 = NameAndType        #371:#372     // getDelimiterString:()Ljava/lang/String;\n-  #636 = NameAndType        #402:#362     // isQuoteCharacterSet:()Z\n-  #637 = NameAndType        #440:#416     // printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-  #638 = NameAndType        #400:#362     // isEscapeCharacterSet:()Z\n-  #639 = NameAndType        #429:#343     // printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #640 = NameAndType        #338:#832     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #641 = Utf8               java/nio/file/OpenOption\n-  #642 = Class              #833          // java/nio/file/Files\n-  #643 = NameAndType        #834:#835     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #644 = NameAndType        #407:#408     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n-  #645 = NameAndType        #338:#343     // append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n-  #646 = NameAndType        #440:#436     // printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #647 = NameAndType        #429:#436     // printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n-  #648 = Utf8               java/io/Writer\n-  #649 = NameAndType        #836:#837     // copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n-  #650 = NameAndType        #346:#838     // copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n-  #651 = Class              #839          // java/lang/System\n-  #652 = NameAndType        #359:#840     // out:Ljava/io/PrintStream;\n-  #653 = NameAndType        #386:#362     // getTrailingDelimiter:()Z\n-  #654 = NameAndType        #407:#413     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n-  #655 = NameAndType        #424:#425     // println:(Ljava/lang/Appendable;)V\n-  #656 = NameAndType        #841:#842     // toCharArray:()[C\n-  #657 = NameAndType        #373:#366     // getEscapeCharacter:()Ljava/lang/Character;\n-  #658 = NameAndType        #393:#394     // isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n-  #659 = Utf8               org/apache/commons/csv/ExtendedBufferedReader\n-  #660 = NameAndType        #329:#843     // \"<init>\":(Ljava/io/Reader;)V\n-  #661 = Utf8               org/apache/commons/csv/IOUtils\n-  #662 = NameAndType        #329:#844     // \"<init>\":(I)V\n-  #663 = NameAndType        #845:#389     // read:()I\n-  #664 = NameAndType        #338:#846     // append:(C)Ljava/lang/StringBuilder;\n-  #665 = NameAndType        #847:#848     // lookAhead:(I)[C\n-  #666 = NameAndType        #329:#849     // \"<init>\":([C)V\n-  #667 = NameAndType        #850:#844     // setLength:(I)V\n-  #668 = NameAndType        #338:#339     // append:(CLjava/lang/Appendable;)V\n-  #669 = NameAndType        #381:#366     // getQuoteCharacter:()Ljava/lang/Character;\n-  #670 = NameAndType        #382:#383     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-  #671 = NameAndType        #851:#283     // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-  #672 = NameAndType        #852:#853     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n-  #673 = NameAndType        #854:#389     // ordinal:()I\n-  #674 = Utf8               java/lang/Number\n-  #675 = Utf8               Unexpected Quote value:\n-  #676 = NameAndType        #329:#855     // \"<init>\":(Ljava/lang/String;)V\n-  #677 = NameAndType        #856:#283     // NONE:Lorg/apache/commons/csv/QuoteMode;\n-  #678 = Utf8               Delimiter=<\n-  #679 = Utf8               Escape=<\n-  #680 = Utf8               QuoteChar=<\n-  #681 = Utf8               QuoteMode=<\n-  #682 = NameAndType        #392:#362     // isCommentMarkerSet:()Z\n-  #683 = Utf8               CommentStart=<\n-  #684 = NameAndType        #401:#362     // isNullStringSet:()Z\n-  #685 = Utf8               NullString=<\n-  #686 = Utf8               RecordSeparator=<\n-  #687 = NameAndType        #377:#362     // getIgnoreEmptyLines:()Z\n-  #688 = Utf8                EmptyLines:ignored\n-  #689 = NameAndType        #379:#362     // getIgnoreSurroundingSpaces:()Z\n-  #690 = Utf8                SurroundingSpaces:ignored\n-  #691 = NameAndType        #378:#362     // getIgnoreHeaderCase:()Z\n-  #692 = Utf8                IgnoreHeaderCase:ignored\n-  #693 = Utf8                SkipHeaderRecord:\n-  #694 = NameAndType        #338:#857     // append:(Z)Ljava/lang/StringBuilder;\n-  #695 = Utf8               HeaderComments:\n-  #696 = NameAndType        #445:#353     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n-  #697 = Utf8               Header:\n-  #698 = Utf8               java/lang/IllegalArgumentException\n-  #699 = Utf8               The delimiter cannot be a line break\n-  #700 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n-  #701 = Utf8               \\')\n-  #702 = Utf8               The escape character and the delimiter cannot be the same (\\'\n-  #703 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n-  #704 = NameAndType        #348:#349     // equals:(Ljava/lang/Object;)Z\n-  #705 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n-  #706 = Utf8               The comment start and the escape character cannot be the same (\\'\n-  #707 = Utf8               No quotes mode set but no escape character is set\n-  #708 = Utf8               java/util/HashSet\n-  #709 = NameAndType        #858:#349     // add:(Ljava/lang/Object;)Z\n-  #710 = Utf8               The header contains a duplicate entry: \\'\n-  #711 = Utf8               \\' in\n-  #712 = NameAndType        #859:#860     // setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #713 = NameAndType        #861:#860     // setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #714 = NameAndType        #862:#860     // setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #715 = NameAndType        #863:#864     // setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #716 = NameAndType        #863:#865     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #717 = NameAndType        #866:#864     // setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #718 = NameAndType        #867:#864     // setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #719 = NameAndType        #867:#865     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #720 = NameAndType        #868:#869     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #721 = NameAndType        #870:#860     // setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #722 = NameAndType        #868:#871     // setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #723 = NameAndType        #868:#872     // setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #724 = NameAndType        #868:#873     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #725 = NameAndType        #874:#875     // setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #726 = NameAndType        #876:#860     // setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #727 = NameAndType        #877:#860     // setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #728 = NameAndType        #878:#860     // setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #729 = NameAndType        #879:#880     // setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #730 = NameAndType        #881:#864     // setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #731 = NameAndType        #881:#865     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #732 = NameAndType        #882:#883     // setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #733 = NameAndType        #884:#864     // setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #734 = NameAndType        #884:#880     // setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #735 = NameAndType        #885:#372     // lineSeparator:()Ljava/lang/String;\n-  #736 = NameAndType        #886:#860     // setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #737 = NameAndType        #887:#860     // setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #738 = Utf8               ,\n-  #739 = NameAndType        #888:#269     // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-  #740 = Utf8               \\r\\n\n-  #741 = NameAndType        #246:#247     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-  #742 = NameAndType        #248:#247     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-  #743 = NameAndType        #249:#247     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-  #744 = NameAndType        #866:#880     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #745 = NameAndType        #250:#247     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #746 = NameAndType        #251:#247     // MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #747 = NameAndType        #252:#247     // MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n-  #748 = Utf8               \\\\N\n-  #749 = NameAndType        #889:#283     // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-  #750 = NameAndType        #253:#247     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-  #751 = NameAndType        #254:#247     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-  #752 = NameAndType        #255:#247     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-  #753 = NameAndType        #256:#247     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-  #754 = NameAndType        #257:#247     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-  #755 = NameAndType        #263:#247     // TDF:Lorg/apache/commons/csv/CSVFormat;\n-  #756 = Utf8               java/io/Serializable\n-  #757 = Utf8               org/apache/commons/csv/CSVFormat$1\n-  #758 = Utf8               org/apache/commons/csv/CSVFormat$Predefined\n-  #759 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n-  #760 = Utf8               java/lang/Appendable\n-  #761 = Utf8               org/apache/commons/csv/QuoteMode\n-  #762 = Utf8               java/util/Set\n-  #763 = Utf8               java/sql/SQLException\n-  #764 = Utf8               ()Ljava/lang/Object;\n-  #765 = Utf8               java/util/Objects\n-  #766 = Utf8               requireNonNull\n-  #767 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #768 = Utf8               indexOf\n-  #769 = Utf8               (I)I\n-  #770 = Utf8               java/lang/Character\n-  #771 = Utf8               charValue\n-  #772 = Utf8               (C)Ljava/lang/String;\n-  #773 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #774 = Utf8               length\n-  #775 = Utf8               charAt\n-  #776 = Utf8               (I)C\n-  #777 = Utf8               subSequence\n-  #778 = Utf8               (II)Ljava/lang/CharSequence;\n-  #779 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-  #780 = Utf8               getFormat\n-  #781 = Utf8               access$2200\n-  #782 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-  #783 = Utf8               access$2300\n-  #784 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-  #785 = Utf8               access$2400\n-  #786 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-  #787 = Utf8               access$2500\n-  #788 = Utf8               access$2600\n-  #789 = Utf8               access$2700\n-  #790 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-  #791 = Utf8               access$2800\n-  #792 = Utf8               access$2900\n-  #793 = Utf8               access$3000\n-  #794 = Utf8               access$3100\n-  #795 = Utf8               access$3200\n-  #796 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-  #797 = Utf8               access$3300\n-  #798 = Utf8               access$3400\n-  #799 = Utf8               access$3500\n-  #800 = Utf8               access$3600\n-  #801 = Utf8               access$3700\n-  #802 = Utf8               access$3800\n-  #803 = Utf8               access$3900\n-  #804 = Utf8               access$4000\n-  #805 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #806 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #807 = Utf8               (C)Ljava/lang/Appendable;\n-  #808 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-  #809 = Utf8               create\n-  #810 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #811 = Utf8               build\n-  #812 = Utf8               getClass\n-  #813 = Utf8               ()Ljava/lang/Class;\n-  #814 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #815 = Utf8               java/util/Arrays\n-  #816 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n-  #817 = Utf8               (Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n-  #818 = Utf8               ([Ljava/lang/Object;)V\n-  #819 = Utf8               substring\n-  #820 = Utf8               (II)Ljava/lang/String;\n-  #821 = Utf8               close\n-  #822 = Utf8               addSuppressed\n-  #823 = Utf8               (Ljava/lang/Throwable;)V\n-  #824 = Utf8               ([Ljava/lang/Object;)I\n-  #825 = Utf8               java/lang/Boolean\n-  #826 = Utf8               (Z)Ljava/lang/Boolean;\n-  #827 = Utf8               hash\n-  #828 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n-  #829 = Utf8               (Ljava/io/File;)V\n-  #830 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #831 = Utf8               ALL\n-  #832 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-  #833 = Utf8               java/nio/file/Files\n-  #834 = Utf8               newBufferedWriter\n-  #835 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-  #836 = Utf8               copyLarge\n-  #837 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)J\n-  #838 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)J\n-  #839 = Utf8               java/lang/System\n-  #840 = Utf8               Ljava/io/PrintStream;\n-  #841 = Utf8               toCharArray\n-  #842 = Utf8               ()[C\n-  #843 = Utf8               (Ljava/io/Reader;)V\n-  #844 = Utf8               (I)V\n-  #845 = Utf8               read\n-  #846 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #847 = Utf8               lookAhead\n-  #848 = Utf8               (I)[C\n-  #849 = Utf8               ([C)V\n-  #850 = Utf8               setLength\n-  #851 = Utf8               MINIMAL\n-  #852 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n-  #853 = Utf8               [I\n-  #854 = Utf8               ordinal\n-  #855 = Utf8               (Ljava/lang/String;)V\n-  #856 = Utf8               NONE\n-  #857 = Utf8               (Z)Ljava/lang/StringBuilder;\n-  #858 = Utf8               add\n-  #859 = Utf8               setAllowDuplicateHeaderNames\n-  #860 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #861 = Utf8               setAllowMissingColumnNames\n-  #862 = Utf8               setAutoFlush\n-  #863 = Utf8               setCommentMarker\n-  #864 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #865 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #866 = Utf8               setDelimiter\n-  #867 = Utf8               setEscape\n-  #868 = Utf8               setHeader\n-  #869 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #870 = Utf8               setSkipHeaderRecord\n-  #871 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #872 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #873 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #874 = Utf8               setHeaderComments\n-  #875 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #876 = Utf8               setIgnoreEmptyLines\n-  #877 = Utf8               setIgnoreHeaderCase\n-  #878 = Utf8               setIgnoreSurroundingSpaces\n-  #879 = Utf8               setNullString\n-  #880 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #881 = Utf8               setQuote\n-  #882 = Utf8               setQuoteMode\n-  #883 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-  #884 = Utf8               setRecordSeparator\n-  #885 = Utf8               lineSeparator\n-  #886 = Utf8               setTrailingDelimiter\n-  #887 = Utf8               setTrim\n-  #888 = Utf8               DOUBLE_QUOTE_CHAR\n-  #889 = Utf8               ALL_NON_NULL\n+    #1 = Class              #2            // org/apache/commons/csv/Constants\n+    #2 = Utf8               org/apache/commons/csv/Constants\n+    #3 = Methodref          #4.#5         // org/apache/commons/csv/CSVFormat.containsLineBreak:(Ljava/lang/String;)Z\n+    #4 = Class              #6            // org/apache/commons/csv/CSVFormat\n+    #5 = NameAndType        #7:#8         // containsLineBreak:(Ljava/lang/String;)Z\n+    #6 = Utf8               org/apache/commons/csv/CSVFormat\n+    #7 = Utf8               containsLineBreak\n+    #8 = Utf8               (Ljava/lang/String;)Z\n+    #9 = Methodref          #4.#10        // org/apache/commons/csv/CSVFormat.isLineBreak:(Ljava/lang/Character;)Z\n+   #10 = NameAndType        #11:#12       // isLineBreak:(Ljava/lang/Character;)Z\n+   #11 = Utf8               isLineBreak\n+   #12 = Utf8               (Ljava/lang/Character;)Z\n+   #13 = Methodref          #4.#14        // org/apache/commons/csv/CSVFormat.\"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+   #14 = NameAndType        #15:#16       // \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+   #15 = Utf8               <init>\n+   #16 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+   #17 = Fieldref           #4.#18        // org/apache/commons/csv/CSVFormat.allowDuplicateHeaderNames:Z\n+   #18 = NameAndType        #19:#20       // allowDuplicateHeaderNames:Z\n+   #19 = Utf8               allowDuplicateHeaderNames\n+   #20 = Utf8               Z\n+   #21 = Fieldref           #4.#22        // org/apache/commons/csv/CSVFormat.quotedNullString:Ljava/lang/String;\n+   #22 = NameAndType        #23:#24       // quotedNullString:Ljava/lang/String;\n+   #23 = Utf8               quotedNullString\n+   #24 = Utf8               Ljava/lang/String;\n+   #25 = Fieldref           #4.#26        // org/apache/commons/csv/CSVFormat.autoFlush:Z\n+   #26 = NameAndType        #27:#20       // autoFlush:Z\n+   #27 = Utf8               autoFlush\n+   #28 = Fieldref           #4.#29        // org/apache/commons/csv/CSVFormat.trim:Z\n+   #29 = NameAndType        #30:#20       // trim:Z\n+   #30 = Utf8               trim\n+   #31 = Fieldref           #4.#32        // org/apache/commons/csv/CSVFormat.trailingDelimiter:Z\n+   #32 = NameAndType        #33:#20       // trailingDelimiter:Z\n+   #33 = Utf8               trailingDelimiter\n+   #34 = Fieldref           #4.#35        // org/apache/commons/csv/CSVFormat.ignoreHeaderCase:Z\n+   #35 = NameAndType        #36:#20       // ignoreHeaderCase:Z\n+   #36 = Utf8               ignoreHeaderCase\n+   #37 = Fieldref           #4.#38        // org/apache/commons/csv/CSVFormat.skipHeaderRecord:Z\n+   #38 = NameAndType        #39:#20       // skipHeaderRecord:Z\n+   #39 = Utf8               skipHeaderRecord\n+   #40 = Fieldref           #4.#41        // org/apache/commons/csv/CSVFormat.header:[Ljava/lang/String;\n+   #41 = NameAndType        #42:#43       // header:[Ljava/lang/String;\n+   #42 = Utf8               header\n+   #43 = Utf8               [Ljava/lang/String;\n+   #44 = Fieldref           #4.#45        // org/apache/commons/csv/CSVFormat.headerComments:[Ljava/lang/String;\n+   #45 = NameAndType        #46:#43       // headerComments:[Ljava/lang/String;\n+   #46 = Utf8               headerComments\n+   #47 = Fieldref           #4.#48        // org/apache/commons/csv/CSVFormat.nullString:Ljava/lang/String;\n+   #48 = NameAndType        #49:#24       // nullString:Ljava/lang/String;\n+   #49 = Utf8               nullString\n+   #50 = Fieldref           #4.#51        // org/apache/commons/csv/CSVFormat.recordSeparator:Ljava/lang/String;\n+   #51 = NameAndType        #52:#24       // recordSeparator:Ljava/lang/String;\n+   #52 = Utf8               recordSeparator\n+   #53 = Fieldref           #4.#54        // org/apache/commons/csv/CSVFormat.ignoreEmptyLines:Z\n+   #54 = NameAndType        #55:#20       // ignoreEmptyLines:Z\n+   #55 = Utf8               ignoreEmptyLines\n+   #56 = Fieldref           #4.#57        // org/apache/commons/csv/CSVFormat.allowMissingColumnNames:Z\n+   #57 = NameAndType        #58:#20       // allowMissingColumnNames:Z\n+   #58 = Utf8               allowMissingColumnNames\n+   #59 = Fieldref           #4.#60        // org/apache/commons/csv/CSVFormat.ignoreSurroundingSpaces:Z\n+   #60 = NameAndType        #61:#20       // ignoreSurroundingSpaces:Z\n+   #61 = Utf8               ignoreSurroundingSpaces\n+   #62 = Fieldref           #4.#63        // org/apache/commons/csv/CSVFormat.escapeCharacter:Ljava/lang/Character;\n+   #63 = NameAndType        #64:#65       // escapeCharacter:Ljava/lang/Character;\n+   #64 = Utf8               escapeCharacter\n+   #65 = Utf8               Ljava/lang/Character;\n+   #66 = Fieldref           #4.#67        // org/apache/commons/csv/CSVFormat.commentMarker:Ljava/lang/Character;\n+   #67 = NameAndType        #68:#65       // commentMarker:Ljava/lang/Character;\n+   #68 = Utf8               commentMarker\n+   #69 = Fieldref           #4.#70        // org/apache/commons/csv/CSVFormat.quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #70 = NameAndType        #71:#72       // quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+   #71 = Utf8               quoteMode\n+   #72 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+   #73 = Fieldref           #4.#74        // org/apache/commons/csv/CSVFormat.quoteCharacter:Ljava/lang/Character;\n+   #74 = NameAndType        #75:#65       // quoteCharacter:Ljava/lang/Character;\n+   #75 = Utf8               quoteCharacter\n+   #76 = Fieldref           #4.#77        // org/apache/commons/csv/CSVFormat.delimiter:Ljava/lang/String;\n+   #77 = NameAndType        #78:#24       // delimiter:Ljava/lang/String;\n+   #78 = Utf8               delimiter\n+   #79 = Methodref          #80.#81       // \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n+   #80 = Class              #82           // \"[Ljava/lang/Object;\"\n+   #81 = NameAndType        #83:#84       // clone:()Ljava/lang/Object;\n+   #82 = Utf8               [Ljava/lang/Object;\n+   #83 = Utf8               clone\n+   #84 = Utf8               ()Ljava/lang/Object;\n+   #85 = String             #86           // source\n+   #86 = Utf8               source\n+   #87 = Methodref          #88.#89       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #88 = Class              #90           // java/util/Objects\n+   #89 = NameAndType        #91:#92       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #90 = Utf8               java/util/Objects\n+   #91 = Utf8               requireNonNull\n+   #92 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #93 = Class              #94           // java/lang/String\n+   #94 = Utf8               java/lang/String\n+   #95 = Methodref          #93.#96       // java/lang/String.indexOf:(I)I\n+   #96 = NameAndType        #97:#98       // indexOf:(I)I\n+   #97 = Utf8               indexOf\n+   #98 = Utf8               (I)I\n+   #99 = Methodref          #4.#100       // org/apache/commons/csv/CSVFormat.contains:(Ljava/lang/String;C)Z\n+  #100 = NameAndType        #101:#102     // contains:(Ljava/lang/String;C)Z\n+  #101 = Utf8               contains\n+  #102 = Utf8               (Ljava/lang/String;C)Z\n+  #103 = Methodref          #104.#105     // java/lang/Character.charValue:()C\n+  #104 = Class              #106          // java/lang/Character\n+  #105 = NameAndType        #107:#108     // charValue:()C\n+  #106 = Utf8               java/lang/Character\n+  #107 = Utf8               charValue\n+  #108 = Utf8               ()C\n+  #109 = Methodref          #4.#110       // org/apache/commons/csv/CSVFormat.isLineBreak:(C)Z\n+  #110 = NameAndType        #11:#111      // isLineBreak:(C)Z\n+  #111 = Utf8               (C)Z\n+  #112 = Methodref          #93.#113      // java/lang/String.valueOf:(C)Ljava/lang/String;\n+  #113 = NameAndType        #114:#115     // valueOf:(C)Ljava/lang/String;\n+  #114 = Utf8               valueOf\n+  #115 = Utf8               (C)Ljava/lang/String;\n+  #116 = Methodref          #4.#117       // org/apache/commons/csv/CSVFormat.\"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n+  #117 = NameAndType        #15:#118      // \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n+  #118 = Utf8               (Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n+  #119 = Methodref          #88.#120      // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #120 = NameAndType        #121:#122     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #121 = Utf8               toString\n+  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #123 = Methodref          #93.#124      // java/lang/String.trim:()Ljava/lang/String;\n+  #124 = NameAndType        #30:#125      // trim:()Ljava/lang/String;\n+  #125 = Utf8               ()Ljava/lang/String;\n+  #126 = InterfaceMethodref #127.#128     // java/lang/CharSequence.length:()I\n+  #127 = Class              #129          // java/lang/CharSequence\n+  #128 = NameAndType        #130:#131     // length:()I\n+  #129 = Utf8               java/lang/CharSequence\n+  #130 = Utf8               length\n+  #131 = Utf8               ()I\n+  #132 = InterfaceMethodref #127.#133     // java/lang/CharSequence.charAt:(I)C\n+  #133 = NameAndType        #134:#135     // charAt:(I)C\n+  #134 = Utf8               charAt\n+  #135 = Utf8               (I)C\n+  #136 = InterfaceMethodref #127.#137     // java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+  #137 = NameAndType        #138:#139     // subSequence:(II)Ljava/lang/CharSequence;\n+  #138 = Utf8               subSequence\n+  #139 = Utf8               (II)Ljava/lang/CharSequence;\n+  #140 = Methodref          #141.#142     // org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+  #141 = Class              #143          // org/apache/commons/csv/CSVFormat$Predefined\n+  #142 = NameAndType        #114:#144     // valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+  #143 = Utf8               org/apache/commons/csv/CSVFormat$Predefined\n+  #144 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+  #145 = Methodref          #141.#146     // org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+  #146 = NameAndType        #147:#148     // getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+  #147 = Utf8               getFormat\n+  #148 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+  #149 = Methodref          #150.#151     // java/lang/Object.\"<init>\":()V\n+  #150 = Class              #152          // java/lang/Object\n+  #151 = NameAndType        #15:#153      // \"<init>\":()V\n+  #152 = Utf8               java/lang/Object\n+  #153 = Utf8               ()V\n+  #154 = Methodref          #155.#156     // org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #155 = Class              #157          // org/apache/commons/csv/CSVFormat$Builder\n+  #156 = NameAndType        #158:#159     // access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #157 = Utf8               org/apache/commons/csv/CSVFormat$Builder\n+  #158 = Utf8               access$2200\n+  #159 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #160 = Methodref          #155.#161     // org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #161 = NameAndType        #162:#163     // access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #162 = Utf8               access$2300\n+  #163 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #164 = Methodref          #155.#165     // org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #165 = NameAndType        #166:#167     // access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #166 = Utf8               access$2400\n+  #167 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+  #168 = Methodref          #155.#169     // org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #169 = NameAndType        #170:#163     // access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #170 = Utf8               access$2500\n+  #171 = Methodref          #155.#172     // org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #172 = NameAndType        #173:#163     // access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+  #173 = Utf8               access$2600\n+  #174 = Methodref          #155.#175     // org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #175 = NameAndType        #176:#177     // access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #176 = Utf8               access$2700\n+  #177 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #178 = Methodref          #155.#179     // org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #179 = NameAndType        #180:#177     // access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #180 = Utf8               access$2800\n+  #181 = Methodref          #155.#182     // org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #182 = NameAndType        #183:#177     // access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #183 = Utf8               access$2900\n+  #184 = Methodref          #155.#185     // org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #185 = NameAndType        #186:#159     // access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #186 = Utf8               access$3000\n+  #187 = Methodref          #155.#188     // org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #188 = NameAndType        #189:#159     // access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #189 = Utf8               access$3100\n+  #190 = Methodref          #155.#191     // org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #191 = NameAndType        #192:#193     // access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #192 = Utf8               access$3200\n+  #193 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #194 = Methodref          #155.#195     // org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #195 = NameAndType        #196:#193     // access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+  #196 = Utf8               access$3300\n+  #197 = Methodref          #155.#198     // org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #198 = NameAndType        #199:#177     // access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #199 = Utf8               access$3400\n+  #200 = Methodref          #155.#201     // org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #201 = NameAndType        #202:#177     // access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #202 = Utf8               access$3500\n+  #203 = Methodref          #155.#204     // org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #204 = NameAndType        #205:#177     // access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #205 = Utf8               access$3600\n+  #206 = Methodref          #155.#207     // org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #207 = NameAndType        #208:#177     // access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #208 = Utf8               access$3700\n+  #209 = Methodref          #155.#210     // org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #210 = NameAndType        #211:#177     // access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #211 = Utf8               access$3800\n+  #212 = Methodref          #155.#213     // org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #213 = NameAndType        #214:#159     // access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+  #214 = Utf8               access$3900\n+  #215 = Methodref          #155.#216     // org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #216 = NameAndType        #217:#177     // access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+  #217 = Utf8               access$4000\n+  #218 = Methodref          #4.#219       // org/apache/commons/csv/CSVFormat.validate:()V\n+  #219 = NameAndType        #220:#153     // validate:()V\n+  #220 = Utf8               validate\n+  #221 = Methodref          #4.#222       // org/apache/commons/csv/CSVFormat.toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #222 = NameAndType        #223:#224     // toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+  #223 = Utf8               toStringArray\n+  #224 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/String;\n+  #225 = Methodref          #4.#226       // org/apache/commons/csv/CSVFormat.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #226 = NameAndType        #83:#227      // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #227 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #228 = Class              #43           // \"[Ljava/lang/String;\"\n+  #229 = Class              #230          // java/lang/StringBuilder\n+  #230 = Utf8               java/lang/StringBuilder\n+  #231 = Methodref          #229.#151     // java/lang/StringBuilder.\"<init>\":()V\n+  #232 = Methodref          #229.#233     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #233 = NameAndType        #234:#235     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #234 = Utf8               append\n+  #235 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #236 = Methodref          #229.#237     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #237 = NameAndType        #234:#238     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #238 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #239 = Methodref          #229.#240     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #240 = NameAndType        #121:#125     // toString:()Ljava/lang/String;\n+  #241 = InterfaceMethodref #242.#243     // java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+  #242 = Class              #244          // java/lang/Appendable\n+  #243 = NameAndType        #234:#245     // append:(C)Ljava/lang/Appendable;\n+  #244 = Utf8               java/lang/Appendable\n+  #245 = Utf8               (C)Ljava/lang/Appendable;\n+  #246 = InterfaceMethodref #242.#247     // java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #247 = NameAndType        #234:#248     // append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #248 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #249 = Methodref          #155.#250     // org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #250 = NameAndType        #251:#252     // create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #251 = Utf8               create\n+  #252 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #253 = Methodref          #4.#254       // org/apache/commons/csv/CSVFormat.builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #254 = NameAndType        #255:#256     // builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #255 = Utf8               builder\n+  #256 = Utf8               ()Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #257 = Methodref          #155.#258     // org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+  #258 = NameAndType        #259:#148     // build:()Lorg/apache/commons/csv/CSVFormat;\n+  #259 = Utf8               build\n+  #260 = Methodref          #150.#261     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #261 = NameAndType        #262:#263     // getClass:()Ljava/lang/Class;\n+  #262 = Utf8               getClass\n+  #263 = Utf8               ()Ljava/lang/Class;\n+  #264 = Methodref          #88.#265      // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #265 = NameAndType        #266:#267     // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #266 = Utf8               equals\n+  #267 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #268 = Methodref          #269.#270     // java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #269 = Class              #271          // java/util/Arrays\n+  #270 = NameAndType        #266:#272     // equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #271 = Utf8               java/util/Arrays\n+  #272 = Utf8               ([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+  #273 = Class              #274          // java/io/StringWriter\n+  #274 = Utf8               java/io/StringWriter\n+  #275 = Methodref          #273.#151     // java/io/StringWriter.\"<init>\":()V\n+  #276 = Class              #277          // org/apache/commons/csv/CSVPrinter\n+  #277 = Utf8               org/apache/commons/csv/CSVPrinter\n+  #278 = Methodref          #276.#279     // org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #279 = NameAndType        #15:#280      // \"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #280 = Utf8               (Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+  #281 = Methodref          #276.#282     // org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n+  #282 = NameAndType        #283:#284     // printRecord:([Ljava/lang/Object;)V\n+  #283 = Utf8               printRecord\n+  #284 = Utf8               ([Ljava/lang/Object;)V\n+  #285 = Methodref          #273.#240     // java/io/StringWriter.toString:()Ljava/lang/String;\n+  #286 = Methodref          #93.#128      // java/lang/String.length:()I\n+  #287 = Methodref          #93.#288      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #288 = NameAndType        #289:#290     // substring:(II)Ljava/lang/String;\n+  #289 = Utf8               substring\n+  #290 = Utf8               (II)Ljava/lang/String;\n+  #291 = Methodref          #276.#292     // org/apache/commons/csv/CSVPrinter.close:()V\n+  #292 = NameAndType        #293:#153     // close:()V\n+  #293 = Utf8               close\n+  #294 = Class              #295          // java/lang/Throwable\n+  #295 = Utf8               java/lang/Throwable\n+  #296 = Methodref          #294.#297     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #297 = NameAndType        #298:#299     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #298 = Utf8               addSuppressed\n+  #299 = Utf8               (Ljava/lang/Throwable;)V\n+  #300 = Class              #301          // java/io/IOException\n+  #301 = Utf8               java/io/IOException\n+  #302 = Class              #303          // java/lang/IllegalStateException\n+  #303 = Utf8               java/lang/IllegalStateException\n+  #304 = Methodref          #302.#305     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #305 = NameAndType        #15:#299      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #306 = Methodref          #93.#133      // java/lang/String.charAt:(I)C\n+  #307 = Methodref          #228.#81      // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+  #308 = Methodref          #269.#309     // java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+  #309 = NameAndType        #310:#311     // hashCode:([Ljava/lang/Object;)I\n+  #310 = Utf8               hashCode\n+  #311 = Utf8               ([Ljava/lang/Object;)I\n+  #312 = Methodref          #313.#314     // java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+  #313 = Class              #315          // java/lang/Boolean\n+  #314 = NameAndType        #114:#316     // valueOf:(Z)Ljava/lang/Boolean;\n+  #315 = Utf8               java/lang/Boolean\n+  #316 = Utf8               (Z)Ljava/lang/Boolean;\n+  #317 = Methodref          #88.#318      // java/util/Objects.hash:([Ljava/lang/Object;)I\n+  #318 = NameAndType        #319:#311     // hash:([Ljava/lang/Object;)I\n+  #319 = Utf8               hash\n+  #320 = Class              #321          // org/apache/commons/csv/CSVParser\n+  #321 = Utf8               org/apache/commons/csv/CSVParser\n+  #322 = Methodref          #320.#323     // org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #323 = NameAndType        #15:#324      // \"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #324 = Utf8               (Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+  #325 = Class              #326          // java/io/OutputStreamWriter\n+  #326 = Utf8               java/io/OutputStreamWriter\n+  #327 = Class              #328          // java/io/FileOutputStream\n+  #328 = Utf8               java/io/FileOutputStream\n+  #329 = Methodref          #327.#330     // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+  #330 = NameAndType        #15:#331      // \"<init>\":(Ljava/io/File;)V\n+  #331 = Utf8               (Ljava/io/File;)V\n+  #332 = Methodref          #325.#333     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #333 = NameAndType        #15:#334      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #334 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #335 = String             #336          //\n+  #336 = Utf8\n+  #337 = Fieldref           #338.#339     // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #338 = Class              #340          // org/apache/commons/csv/QuoteMode\n+  #339 = NameAndType        #341:#72      // ALL:Lorg/apache/commons/csv/QuoteMode;\n+  #340 = Utf8               org/apache/commons/csv/QuoteMode\n+  #341 = Utf8               ALL\n+  #342 = Class              #343          // java/io/Reader\n+  #343 = Utf8               java/io/Reader\n+  #344 = Methodref          #4.#345       // org/apache/commons/csv/CSVFormat.print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+  #345 = NameAndType        #346:#347     // print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+  #346 = Utf8               print\n+  #347 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+  #348 = Methodref          #150.#240     // java/lang/Object.toString:()Ljava/lang/String;\n+  #349 = Methodref          #4.#350       // org/apache/commons/csv/CSVFormat.getTrim:()Z\n+  #350 = NameAndType        #351:#352     // getTrim:()Z\n+  #351 = Utf8               getTrim\n+  #352 = Utf8               ()Z\n+  #353 = Methodref          #4.#354       // org/apache/commons/csv/CSVFormat.trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #354 = NameAndType        #30:#355      // trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #355 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+  #356 = Methodref          #4.#357       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #357 = NameAndType        #346:#358     // print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #358 = Utf8               (Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #359 = Methodref          #4.#360       // org/apache/commons/csv/CSVFormat.getDelimiterString:()Ljava/lang/String;\n+  #360 = NameAndType        #361:#125     // getDelimiterString:()Ljava/lang/String;\n+  #361 = Utf8               getDelimiterString\n+  #362 = Methodref          #4.#363       // org/apache/commons/csv/CSVFormat.isQuoteCharacterSet:()Z\n+  #363 = NameAndType        #364:#352     // isQuoteCharacterSet:()Z\n+  #364 = Utf8               isQuoteCharacterSet\n+  #365 = Methodref          #4.#366       // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #366 = NameAndType        #367:#358     // printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+  #367 = Utf8               printWithQuotes\n+  #368 = Methodref          #4.#369       // org/apache/commons/csv/CSVFormat.isEscapeCharacterSet:()Z\n+  #369 = NameAndType        #370:#352     // isEscapeCharacterSet:()Z\n+  #370 = Utf8               isEscapeCharacterSet\n+  #371 = Methodref          #4.#372       // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #372 = NameAndType        #373:#374     // printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #373 = Utf8               printWithEscapes\n+  #374 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #375 = InterfaceMethodref #242.#376     // java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #376 = NameAndType        #234:#377     // append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #377 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #378 = Class              #379          // java/nio/file/OpenOption\n+  #379 = Utf8               java/nio/file/OpenOption\n+  #380 = Methodref          #381.#382     // java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #381 = Class              #383          // java/nio/file/Files\n+  #382 = NameAndType        #384:#385     // newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #383 = Utf8               java/nio/file/Files\n+  #384 = Utf8               newBufferedWriter\n+  #385 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+  #386 = Methodref          #4.#387       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #387 = NameAndType        #346:#388     // print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #388 = Utf8               (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+  #389 = Methodref          #4.#390       // org/apache/commons/csv/CSVFormat.append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #390 = NameAndType        #234:#374     // append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+  #391 = Methodref          #4.#392       // org/apache/commons/csv/CSVFormat.printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #392 = NameAndType        #367:#393     // printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #393 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #394 = Methodref          #4.#395       // org/apache/commons/csv/CSVFormat.printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #395 = NameAndType        #373:#393     // printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+  #396 = Class              #397          // java/io/Writer\n+  #397 = Utf8               java/io/Writer\n+  #398 = Methodref          #399.#400     // org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n+  #399 = Class              #401          // org/apache/commons/csv/IOUtils\n+  #400 = NameAndType        #402:#403     // copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n+  #401 = Utf8               org/apache/commons/csv/IOUtils\n+  #402 = Utf8               copyLarge\n+  #403 = Utf8               (Ljava/io/Reader;Ljava/io/Writer;)J\n+  #404 = Methodref          #399.#405     // org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n+  #405 = NameAndType        #406:#407     // copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n+  #406 = Utf8               copy\n+  #407 = Utf8               (Ljava/io/Reader;Ljava/lang/Appendable;)J\n+  #408 = Fieldref           #409.#410     // java/lang/System.out:Ljava/io/PrintStream;\n+  #409 = Class              #411          // java/lang/System\n+  #410 = NameAndType        #412:#413     // out:Ljava/io/PrintStream;\n+  #411 = Utf8               java/lang/System\n+  #412 = Utf8               out\n+  #413 = Utf8               Ljava/io/PrintStream;\n+  #414 = Methodref          #4.#415       // org/apache/commons/csv/CSVFormat.getTrailingDelimiter:()Z\n+  #415 = NameAndType        #416:#352     // getTrailingDelimiter:()Z\n+  #416 = Utf8               getTrailingDelimiter\n+  #417 = Methodref          #4.#418       // org/apache/commons/csv/CSVFormat.print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #418 = NameAndType        #346:#419     // print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #419 = Utf8               (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+  #420 = Methodref          #4.#421       // org/apache/commons/csv/CSVFormat.println:(Ljava/lang/Appendable;)V\n+  #421 = NameAndType        #422:#423     // println:(Ljava/lang/Appendable;)V\n+  #422 = Utf8               println\n+  #423 = Utf8               (Ljava/lang/Appendable;)V\n+  #424 = Methodref          #93.#425      // java/lang/String.toCharArray:()[C\n+  #425 = NameAndType        #426:#427     // toCharArray:()[C\n+  #426 = Utf8               toCharArray\n+  #427 = Utf8               ()[C\n+  #428 = Methodref          #4.#429       // org/apache/commons/csv/CSVFormat.getEscapeCharacter:()Ljava/lang/Character;\n+  #429 = NameAndType        #430:#431     // getEscapeCharacter:()Ljava/lang/Character;\n+  #430 = Utf8               getEscapeCharacter\n+  #431 = Utf8               ()Ljava/lang/Character;\n+  #432 = Methodref          #4.#433       // org/apache/commons/csv/CSVFormat.isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+  #433 = NameAndType        #434:#435     // isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+  #434 = Utf8               isDelimiter\n+  #435 = Utf8               (CLjava/lang/CharSequence;I[CI)Z\n+  #436 = Class              #437          // org/apache/commons/csv/ExtendedBufferedReader\n+  #437 = Utf8               org/apache/commons/csv/ExtendedBufferedReader\n+  #438 = Methodref          #436.#439     // org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+  #439 = NameAndType        #15:#440      // \"<init>\":(Ljava/io/Reader;)V\n+  #440 = Utf8               (Ljava/io/Reader;)V\n+  #441 = Methodref          #229.#442     // java/lang/StringBuilder.\"<init>\":(I)V\n+  #442 = NameAndType        #15:#443      // \"<init>\":(I)V\n+  #443 = Utf8               (I)V\n+  #444 = Methodref          #436.#445     // org/apache/commons/csv/ExtendedBufferedReader.read:()I\n+  #445 = NameAndType        #446:#131     // read:()I\n+  #446 = Utf8               read\n+  #447 = Methodref          #229.#448     // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #448 = NameAndType        #234:#449     // append:(C)Ljava/lang/StringBuilder;\n+  #449 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #450 = Methodref          #436.#451     // org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n+  #451 = NameAndType        #452:#453     // lookAhead:(I)[C\n+  #452 = Utf8               lookAhead\n+  #453 = Utf8               (I)[C\n+  #454 = Methodref          #93.#455      // java/lang/String.\"<init>\":([C)V\n+  #455 = NameAndType        #15:#456      // \"<init>\":([C)V\n+  #456 = Utf8               ([C)V\n+  #457 = Methodref          #229.#288     // java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+  #458 = Methodref          #229.#459     // java/lang/StringBuilder.setLength:(I)V\n+  #459 = NameAndType        #460:#443     // setLength:(I)V\n+  #460 = Utf8               setLength\n+  #461 = Methodref          #4.#462       // org/apache/commons/csv/CSVFormat.append:(CLjava/lang/Appendable;)V\n+  #462 = NameAndType        #234:#463     // append:(CLjava/lang/Appendable;)V\n+  #463 = Utf8               (CLjava/lang/Appendable;)V\n+  #464 = Methodref          #4.#465       // org/apache/commons/csv/CSVFormat.getQuoteCharacter:()Ljava/lang/Character;\n+  #465 = NameAndType        #466:#431     // getQuoteCharacter:()Ljava/lang/Character;\n+  #466 = Utf8               getQuoteCharacter\n+  #467 = Methodref          #4.#468       // org/apache/commons/csv/CSVFormat.getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #468 = NameAndType        #469:#470     // getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+  #469 = Utf8               getQuoteMode\n+  #470 = Utf8               ()Lorg/apache/commons/csv/QuoteMode;\n+  #471 = Fieldref           #338.#472     // org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #472 = NameAndType        #473:#72      // MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+  #473 = Utf8               MINIMAL\n+  #474 = Fieldref           #475.#476     // org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #475 = Class              #477          // org/apache/commons/csv/CSVFormat$1\n+  #476 = NameAndType        #478:#479     // $SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+  #477 = Utf8               org/apache/commons/csv/CSVFormat$1\n+  #478 = Utf8               $SwitchMap$org$apache$commons$csv$QuoteMode\n+  #479 = Utf8               [I\n+  #480 = Methodref          #338.#481     // org/apache/commons/csv/QuoteMode.ordinal:()I\n+  #481 = NameAndType        #482:#131     // ordinal:()I\n+  #482 = Utf8               ordinal\n+  #483 = Class              #484          // java/lang/Number\n+  #484 = Utf8               java/lang/Number\n+  #485 = String             #486          // Unexpected Quote value:\n+  #486 = Utf8               Unexpected Quote value:\n+  #487 = Methodref          #302.#488     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #488 = NameAndType        #15:#489      // \"<init>\":(Ljava/lang/String;)V\n+  #489 = Utf8               (Ljava/lang/String;)V\n+  #490 = Fieldref           #338.#491     // org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #491 = NameAndType        #492:#72      // NONE:Lorg/apache/commons/csv/QuoteMode;\n+  #492 = Utf8               NONE\n+  #493 = Methodref          #342.#445     // java/io/Reader.read:()I\n+  #494 = String             #495          // Delimiter=<\n+  #495 = Utf8               Delimiter=<\n+  #496 = String             #497          // Escape=<\n+  #497 = Utf8               Escape=<\n+  #498 = String             #499          // QuoteChar=<\n+  #499 = Utf8               QuoteChar=<\n+  #500 = String             #501          // QuoteMode=<\n+  #501 = Utf8               QuoteMode=<\n+  #502 = Methodref          #4.#503       // org/apache/commons/csv/CSVFormat.isCommentMarkerSet:()Z\n+  #503 = NameAndType        #504:#352     // isCommentMarkerSet:()Z\n+  #504 = Utf8               isCommentMarkerSet\n+  #505 = String             #506          // CommentStart=<\n+  #506 = Utf8               CommentStart=<\n+  #507 = Methodref          #4.#508       // org/apache/commons/csv/CSVFormat.isNullStringSet:()Z\n+  #508 = NameAndType        #509:#352     // isNullStringSet:()Z\n+  #509 = Utf8               isNullStringSet\n+  #510 = String             #511          // NullString=<\n+  #511 = Utf8               NullString=<\n+  #512 = String             #513          // RecordSeparator=<\n+  #513 = Utf8               RecordSeparator=<\n+  #514 = Methodref          #4.#515       // org/apache/commons/csv/CSVFormat.getIgnoreEmptyLines:()Z\n+  #515 = NameAndType        #516:#352     // getIgnoreEmptyLines:()Z\n+  #516 = Utf8               getIgnoreEmptyLines\n+  #517 = String             #518          //  EmptyLines:ignored\n+  #518 = Utf8                EmptyLines:ignored\n+  #519 = Methodref          #4.#520       // org/apache/commons/csv/CSVFormat.getIgnoreSurroundingSpaces:()Z\n+  #520 = NameAndType        #521:#352     // getIgnoreSurroundingSpaces:()Z\n+  #521 = Utf8               getIgnoreSurroundingSpaces\n+  #522 = String             #523          //  SurroundingSpaces:ignored\n+  #523 = Utf8                SurroundingSpaces:ignored\n+  #524 = Methodref          #4.#525       // org/apache/commons/csv/CSVFormat.getIgnoreHeaderCase:()Z\n+  #525 = NameAndType        #526:#352     // getIgnoreHeaderCase:()Z\n+  #526 = Utf8               getIgnoreHeaderCase\n+  #527 = String             #528          //  IgnoreHeaderCase:ignored\n+  #528 = Utf8                IgnoreHeaderCase:ignored\n+  #529 = String             #530          //  SkipHeaderRecord:\n+  #530 = Utf8                SkipHeaderRecord:\n+  #531 = Methodref          #229.#532     // java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+  #532 = NameAndType        #234:#533     // append:(Z)Ljava/lang/StringBuilder;\n+  #533 = Utf8               (Z)Ljava/lang/StringBuilder;\n+  #534 = String             #535          // HeaderComments:\n+  #535 = Utf8               HeaderComments:\n+  #536 = Methodref          #269.#537     // java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #537 = NameAndType        #121:#538     // toString:([Ljava/lang/Object;)Ljava/lang/String;\n+  #538 = Utf8               ([Ljava/lang/Object;)Ljava/lang/String;\n+  #539 = String             #540          // Header:\n+  #540 = Utf8               Header:\n+  #541 = Class              #542          // java/lang/IllegalArgumentException\n+  #542 = Utf8               java/lang/IllegalArgumentException\n+  #543 = String             #544          // The delimiter cannot be a line break\n+  #544 = Utf8               The delimiter cannot be a line break\n+  #545 = Methodref          #541.#488     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #546 = String             #547          // The quoteChar character and the delimiter cannot be the same (\\'\n+  #547 = Utf8               The quoteChar character and the delimiter cannot be the same (\\'\n+  #548 = String             #549          // \\')\n+  #549 = Utf8               \\')\n+  #550 = String             #551          // The escape character and the delimiter cannot be the same (\\'\n+  #551 = Utf8               The escape character and the delimiter cannot be the same (\\'\n+  #552 = String             #553          // The comment start character and the delimiter cannot be the same (\\'\n+  #553 = Utf8               The comment start character and the delimiter cannot be the same (\\'\n+  #554 = Methodref          #104.#555     // java/lang/Character.equals:(Ljava/lang/Object;)Z\n+  #555 = NameAndType        #266:#556     // equals:(Ljava/lang/Object;)Z\n+  #556 = Utf8               (Ljava/lang/Object;)Z\n+  #557 = String             #558          // The comment start character and the quoteChar cannot be the same (\\'\n+  #558 = Utf8               The comment start character and the quoteChar cannot be the same (\\'\n+  #559 = String             #560          // The comment start and the escape character cannot be the same (\\'\n+  #560 = Utf8               The comment start and the escape character cannot be the same (\\'\n+  #561 = String             #562          // No quotes mode set but no escape character is set\n+  #562 = Utf8               No quotes mode set but no escape character is set\n+  #563 = Class              #564          // java/util/HashSet\n+  #564 = Utf8               java/util/HashSet\n+  #565 = Methodref          #563.#151     // java/util/HashSet.\"<init>\":()V\n+  #566 = InterfaceMethodref #567.#568     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #567 = Class              #569          // java/util/Set\n+  #568 = NameAndType        #570:#556     // add:(Ljava/lang/Object;)Z\n+  #569 = Utf8               java/util/Set\n+  #570 = Utf8               add\n+  #571 = String             #572          // The header contains a duplicate entry: \\'\n+  #572 = Utf8               The header contains a duplicate entry: \\'\n+  #573 = String             #574          // \\' in\n+  #574 = Utf8               \\' in\n+  #575 = Methodref          #155.#576     // org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #576 = NameAndType        #577:#578     // setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #577 = Utf8               setAllowDuplicateHeaderNames\n+  #578 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #579 = Methodref          #155.#580     // org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #580 = NameAndType        #581:#578     // setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #581 = Utf8               setAllowMissingColumnNames\n+  #582 = Methodref          #155.#583     // org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #583 = NameAndType        #584:#578     // setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #584 = Utf8               setAutoFlush\n+  #585 = Methodref          #155.#586     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #586 = NameAndType        #587:#588     // setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #587 = Utf8               setCommentMarker\n+  #588 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #589 = Methodref          #155.#590     // org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #590 = NameAndType        #587:#591     // setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #591 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #592 = Methodref          #155.#593     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #593 = NameAndType        #594:#588     // setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #594 = Utf8               setDelimiter\n+  #595 = Methodref          #155.#596     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #596 = NameAndType        #597:#588     // setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #597 = Utf8               setEscape\n+  #598 = Methodref          #155.#599     // org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #599 = NameAndType        #597:#591     // setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #600 = Methodref          #155.#601     // org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #601 = NameAndType        #602:#603     // setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #602 = Utf8               setHeader\n+  #603 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #604 = Methodref          #155.#605     // org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #605 = NameAndType        #606:#578     // setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #606 = Utf8               setSkipHeaderRecord\n+  #607 = Methodref          #155.#608     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #608 = NameAndType        #602:#609     // setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #609 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #610 = Methodref          #155.#611     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #611 = NameAndType        #602:#612     // setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #612 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #613 = Methodref          #155.#614     // org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #614 = NameAndType        #602:#615     // setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #615 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #616 = Methodref          #155.#617     // org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #617 = NameAndType        #618:#619     // setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #618 = Utf8               setHeaderComments\n+  #619 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #620 = Methodref          #155.#621     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #621 = NameAndType        #622:#578     // setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #622 = Utf8               setIgnoreEmptyLines\n+  #623 = Methodref          #155.#624     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #624 = NameAndType        #625:#578     // setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #625 = Utf8               setIgnoreHeaderCase\n+  #626 = Methodref          #155.#627     // org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #627 = NameAndType        #628:#578     // setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #628 = Utf8               setIgnoreSurroundingSpaces\n+  #629 = Methodref          #155.#630     // org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #630 = NameAndType        #631:#632     // setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #631 = Utf8               setNullString\n+  #632 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #633 = Methodref          #155.#634     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #634 = NameAndType        #635:#588     // setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #635 = Utf8               setQuote\n+  #636 = Methodref          #155.#637     // org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #637 = NameAndType        #635:#591     // setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #638 = Methodref          #155.#639     // org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #639 = NameAndType        #640:#641     // setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #640 = Utf8               setQuoteMode\n+  #641 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #642 = Methodref          #155.#643     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #643 = NameAndType        #644:#588     // setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #644 = Utf8               setRecordSeparator\n+  #645 = Methodref          #155.#646     // org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #646 = NameAndType        #644:#632     // setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #647 = Methodref          #409.#648     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+  #648 = NameAndType        #649:#125     // lineSeparator:()Ljava/lang/String;\n+  #649 = Utf8               lineSeparator\n+  #650 = Methodref          #155.#651     // org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #651 = NameAndType        #652:#578     // setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #652 = Utf8               setTrailingDelimiter\n+  #653 = Methodref          #155.#654     // org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #654 = NameAndType        #655:#578     // setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #655 = Utf8               setTrim\n+  #656 = String             #657          // ,\n+  #657 = Utf8               ,\n+  #658 = Fieldref           #1.#659       // org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #659 = NameAndType        #660:#65      // DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+  #660 = Utf8               DOUBLE_QUOTE_CHAR\n+  #661 = String             #662          // \\r\\n\n+  #662 = Utf8               \\r\\n\n+  #663 = Fieldref           #4.#664       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #664 = NameAndType        #665:#666     // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+  #665 = Utf8               DEFAULT\n+  #666 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+  #667 = Fieldref           #4.#668       // org/apache/commons/csv/CSVFormat.EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #668 = NameAndType        #669:#666     // EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+  #669 = Utf8               EXCEL\n+  #670 = Fieldref           #4.#671       // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #671 = NameAndType        #672:#666     // INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+  #672 = Utf8               INFORMIX_UNLOAD\n+  #673 = Methodref          #155.#674     // org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #674 = NameAndType        #594:#632     // setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #675 = Fieldref           #4.#676       // org/apache/commons/csv/CSVFormat.INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #676 = NameAndType        #677:#666     // INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #677 = Utf8               INFORMIX_UNLOAD_CSV\n+  #678 = Fieldref           #4.#679       // org/apache/commons/csv/CSVFormat.MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #679 = NameAndType        #680:#666     // MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #680 = Utf8               MONGODB_CSV\n+  #681 = Fieldref           #4.#682       // org/apache/commons/csv/CSVFormat.MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n+  #682 = NameAndType        #683:#666     // MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n+  #683 = Utf8               MONGODB_TSV\n+  #684 = String             #685          // \\\\N\n+  #685 = Utf8               \\\\N\n+  #686 = Fieldref           #338.#687     // org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #687 = NameAndType        #688:#72      // ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+  #688 = Utf8               ALL_NON_NULL\n+  #689 = Fieldref           #4.#690       // org/apache/commons/csv/CSVFormat.MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #690 = NameAndType        #691:#666     // MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+  #691 = Utf8               MYSQL\n+  #692 = Fieldref           #4.#693       // org/apache/commons/csv/CSVFormat.ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #693 = NameAndType        #694:#666     // ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+  #694 = Utf8               ORACLE\n+  #695 = Fieldref           #4.#696       // org/apache/commons/csv/CSVFormat.POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #696 = NameAndType        #697:#666     // POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+  #697 = Utf8               POSTGRESQL_CSV\n+  #698 = Fieldref           #4.#699       // org/apache/commons/csv/CSVFormat.POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #699 = NameAndType        #700:#666     // POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+  #700 = Utf8               POSTGRESQL_TEXT\n+  #701 = Fieldref           #4.#702       // org/apache/commons/csv/CSVFormat.RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #702 = NameAndType        #703:#666     // RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+  #703 = Utf8               RFC4180\n+  #704 = Fieldref           #4.#705       // org/apache/commons/csv/CSVFormat.TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #705 = NameAndType        #706:#666     // TDF:Lorg/apache/commons/csv/CSVFormat;\n+  #706 = Utf8               TDF\n+  #707 = Class              #708          // java/io/Serializable\n+  #708 = Utf8               java/io/Serializable\n+  #709 = Utf8               serialVersionUID\n+  #710 = Utf8               J\n+  #711 = Utf8               ConstantValue\n+  #712 = Long               1l\n+  #714 = Utf8               Code\n+  #715 = Utf8               LineNumberTable\n+  #716 = Utf8               LocalVariableTable\n+  #717 = Utf8               values\n+  #718 = Utf8               LocalVariableTypeTable\n+  #719 = Utf8               [TT;\n+  #720 = Utf8               StackMapTable\n+  #721 = Utf8               Signature\n+  #722 = Utf8               <T:Ljava/lang/Object;>([TT;)[TT;\n+  #723 = Utf8               RuntimeVisibleAnnotations\n+  #724 = Utf8               Ljava/lang/SafeVarargs;\n+  #725 = Utf8               searchCh\n+  #726 = Utf8               C\n+  #727 = Utf8               c\n+  #728 = Utf8               newFormat\n+  #729 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n+  #730 = Utf8               i\n+  #731 = Utf8               I\n+  #732 = Utf8               strings\n+  #733 = Utf8               charSequence\n+  #734 = Utf8               Ljava/lang/CharSequence;\n+  #735 = Utf8               count\n+  #736 = Utf8               len\n+  #737 = Utf8               pos\n+  #738 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #739 = Utf8               format\n+  #740 = Utf8               this\n+  #741 = Utf8               Lorg/apache/commons/csv/CSVFormat$Builder;\n+  #742 = Utf8               quoteChar\n+  #743 = Utf8               commentStart\n+  #744 = Utf8               escape\n+  #745 = Utf8               appendable\n+  #746 = Utf8               Ljava/lang/Appendable;\n+  #747 = Utf8               Exceptions\n+  #748 = Utf8               csq\n+  #749 = Utf8               obj\n+  #750 = Utf8               Ljava/lang/Object;\n+  #751 = Utf8               other\n+  #752 = Utf8               res\n+  #753 = Utf8               csvPrinter\n+  #754 = Utf8               Lorg/apache/commons/csv/CSVPrinter;\n+  #755 = Utf8               e\n+  #756 = Utf8               Ljava/io/IOException;\n+  #757 = Utf8               Ljava/io/StringWriter;\n+  #758 = Utf8               getAllowDuplicateHeaderNames\n+  #759 = Utf8               getAllowMissingColumnNames\n+  #760 = Utf8               getAutoFlush\n+  #761 = Utf8               getCommentMarker\n+  #762 = Utf8               getDelimiter\n+  #763 = Utf8               Deprecated\n+  #764 = Utf8               Ljava/lang/Deprecated;\n+  #765 = Utf8               getHeader\n+  #766 = Utf8               ()[Ljava/lang/String;\n+  #767 = Utf8               getHeaderComments\n+  #768 = Utf8               getNullString\n+  #769 = Utf8               getRecordSeparator\n+  #770 = Utf8               getSkipHeaderRecord\n+  #771 = Utf8               prime\n+  #772 = Utf8               result\n+  #773 = Utf8               ch\n+  #774 = Utf8               charSeq\n+  #775 = Utf8               startIndex\n+  #776 = Utf8               [C\n+  #777 = Utf8               delimiterLength\n+  #778 = Utf8               parse\n+  #779 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+  #780 = Utf8               reader\n+  #781 = Utf8               Ljava/io/Reader;\n+  #782 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #783 = Utf8               Ljava/io/File;\n+  #784 = Utf8               charset\n+  #785 = Utf8               Ljava/nio/charset/Charset;\n+  #786 = Utf8               value\n+  #787 = Utf8               newRecord\n+  #788 = Utf8               object\n+  #789 = Utf8               offset\n+  #790 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n+  #791 = Utf8               Ljava/nio/file/Path;\n+  #792 = Utf8               printer\n+  #793 = Utf8               ()Lorg/apache/commons/csv/CSVPrinter;\n+  #794 = Utf8               (Ljava/lang/Appendable;[Ljava/lang/Object;)V\n+  #795 = Utf8               isDelimiterStart\n+  #796 = Utf8               start\n+  #797 = Utf8               end\n+  #798 = Utf8               delim\n+  #799 = Utf8               delimLength\n+  #800 = Class              #776          // \"[C\"\n+  #801 = Utf8               bufferedReader\n+  #802 = Utf8               Lorg/apache/commons/csv/ExtendedBufferedReader;\n+  #803 = Utf8               Ljava/lang/StringBuilder;\n+  #804 = Utf8               quote\n+  #805 = Utf8               escapeChar\n+  #806 = Utf8               quoteModePolicy\n+  #807 = Utf8               sb\n+  #808 = Utf8               hdr\n+  #809 = Utf8               dupCheck\n+  #810 = Utf8               Ljava/util/Set;\n+  #811 = Utf8               Ljava/util/Set<Ljava/lang/String;>;\n+  #812 = Utf8               withAllowDuplicateHeaderNames\n+  #813 = Utf8               (Z)Lorg/apache/commons/csv/CSVFormat;\n+  #814 = Utf8               withAllowMissingColumnNames\n+  #815 = Utf8               withAutoFlush\n+  #816 = Utf8               withCommentMarker\n+  #817 = Utf8               (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n+  #818 = Utf8               withDelimiter\n+  #819 = Utf8               withEscape\n+  #820 = Utf8               withFirstRecordAsHeader\n+  #821 = Utf8               withHeader\n+  #822 = Utf8               (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n+  #823 = Utf8               headerEnum\n+  #824 = Utf8               Ljava/lang/Class;\n+  #825 = Utf8               Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n+  #826 = Utf8               (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+  #827 = Utf8               (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n+  #828 = Utf8               resultSet\n+  #829 = Utf8               Ljava/sql/ResultSet;\n+  #830 = Class              #831          // java/sql/SQLException\n+  #831 = Utf8               java/sql/SQLException\n+  #832 = Utf8               (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n+  #833 = Utf8               resultSetMetaData\n+  #834 = Utf8               Ljava/sql/ResultSetMetaData;\n+  #835 = Utf8               ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n+  #836 = Utf8               withHeaderComments\n+  #837 = Utf8               ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n+  #838 = Utf8               withIgnoreEmptyLines\n+  #839 = Utf8               withIgnoreHeaderCase\n+  #840 = Utf8               withIgnoreSurroundingSpaces\n+  #841 = Utf8               withNullString\n+  #842 = Utf8               withQuote\n+  #843 = Utf8               withQuoteMode\n+  #844 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+  #845 = Utf8               withRecordSeparator\n+  #846 = Utf8               withSkipHeaderRecord\n+  #847 = Utf8               withSystemRecordSeparator\n+  #848 = Utf8               withTrailingDelimiter\n+  #849 = Utf8               withTrim\n+  #850 = Utf8               access$000\n+  #851 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n+  #852 = Utf8               x0\n+  #853 = Utf8               access$100\n+  #854 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n+  #855 = Utf8               access$200\n+  #856 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n+  #857 = Utf8               access$300\n+  #858 = Utf8               access$400\n+  #859 = Utf8               access$500\n+  #860 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)Z\n+  #861 = Utf8               access$600\n+  #862 = Utf8               access$700\n+  #863 = Utf8               access$800\n+  #864 = Utf8               access$900\n+  #865 = Utf8               access$1000\n+  #866 = Utf8               (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n+  #867 = Utf8               access$1100\n+  #868 = Utf8               access$1200\n+  #869 = Utf8               access$1300\n+  #870 = Utf8               access$1400\n+  #871 = Utf8               access$1500\n+  #872 = Utf8               access$1600\n+  #873 = Utf8               access$1700\n+  #874 = Utf8               access$1800\n+  #875 = Utf8               (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n+  #876 = Utf8               x1\n+  #877 = Utf8               Lorg/apache/commons/csv/CSVFormat$1;\n+  #878 = Utf8               access$2000\n+  #879 = Utf8               access$2100\n+  #880 = Utf8               <clinit>\n+  #881 = Utf8               SourceFile\n+  #882 = Utf8               CSVFormat.java\n+  #883 = Utf8               InnerClasses\n+  #884 = Utf8               Builder\n+  #885 = Utf8               Predefined\n {\n   public static final org.apache.commons.csv.CSVFormat DEFAULT;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   public static final org.apache.commons.csv.CSVFormat EXCEL;\n     descriptor: Lorg/apache/commons/csv/CSVFormat;\n@@ -1032,45 +1028,45 @@\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n          4: aconst_null\n          5: goto          15\n          8: aload_0\n-         9: invokevirtual #24                 // Method \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n-        12: checkcast     #25                 // class \"[Ljava/lang/Object;\"\n+         9: invokevirtual #79                 // Method \"[Ljava/lang/Object;\".clone:()Ljava/lang/Object;\n+        12: checkcast     #80                 // class \"[Ljava/lang/Object;\"\n         15: areturn\n       LineNumberTable:\n         line 1156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 values   [Ljava/lang/Object;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 values   [TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 8 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class \"[Ljava/lang/Object;\" ]\n-    Signature: #299                         // <T:Ljava/lang/Object;>([TT;)[TT;\n+    Signature: #722                         // <T:Ljava/lang/Object;>([TT;)[TT;\n     RuntimeVisibleAnnotations:\n-      0: #301()\n+      0: #724()\n         java.lang.SafeVarargs\n \n   private static boolean contains(java.lang.String, char);\n     descriptor: (Ljava/lang/String;C)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #26                 // String source\n-         3: invokestatic  #27                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-         6: checkcast     #28                 // class java/lang/String\n+         1: ldc           #85                 // String source\n+         3: invokestatic  #87                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         6: checkcast     #93                 // class java/lang/String\n          9: iload_1\n-        10: invokevirtual #29                 // Method java/lang/String.indexOf:(I)I\n+        10: invokevirtual #95                 // Method java/lang/String.indexOf:(I)I\n         13: iflt          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n       LineNumberTable:\n         line 1167: 0\n@@ -1086,19 +1082,19 @@\n   private static boolean containsLineBreak(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        13\n-         3: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n+         3: invokestatic  #99                 // Method contains:(Ljava/lang/String;C)Z\n          6: ifne          18\n          9: aload_0\n         10: bipush        10\n-        12: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n+        12: invokestatic  #99                 // Method contains:(Ljava/lang/String;C)Z\n         15: ifeq          22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n       LineNumberTable:\n         line 1178: 0\n@@ -1141,16 +1137,16 @@\n     descriptor: (Ljava/lang/Character;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        18\n          4: aload_0\n-         5: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n-         8: invokestatic  #32                 // Method isLineBreak:(C)Z\n+         5: invokevirtual #103                // Method java/lang/Character.charValue:()C\n+         8: invokestatic  #109                // Method isLineBreak:(C)Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1200: 0\n@@ -1163,18 +1159,18 @@\n           stack = [ int ]\n \n   public static org.apache.commons.csv.CSVFormat newFormat(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=20, locals=1, args_size=1\n-         0: new           #33                 // class org/apache/commons/csv/CSVFormat\n+         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n          3: dup\n          4: iload_0\n-         5: invokestatic  #34                 // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n+         5: invokestatic  #112                // Method java/lang/String.valueOf:(C)Ljava/lang/String;\n          8: aconst_null\n          9: aconst_null\n         10: aconst_null\n         11: aconst_null\n         12: iconst_0\n         13: iconst_0\n         14: aconst_null\n@@ -1184,15 +1180,15 @@\n         18: iconst_0\n         19: iconst_0\n         20: iconst_0\n         21: iconst_0\n         22: iconst_0\n         23: iconst_0\n         24: iconst_1\n-        25: invokespecial #35                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n+        25: invokespecial #116                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n         28: areturn\n       LineNumberTable:\n         line 1221: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0 delimiter   C\n \n@@ -1203,29 +1199,29 @@\n       stack=4, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: arraylength\n-         8: anewarray     #28                 // class java/lang/String\n+         8: anewarray     #93                 // class java/lang/String\n         11: astore_1\n         12: iconst_0\n         13: istore_2\n         14: iload_2\n         15: aload_0\n         16: arraylength\n         17: if_icmpge     36\n         20: aload_1\n         21: iload_2\n         22: aload_0\n         23: iload_2\n         24: aaload\n         25: aconst_null\n-        26: invokestatic  #36                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        26: invokestatic  #119                // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n         29: aastore\n         30: iinc          2, 1\n         33: goto          14\n         36: aload_1\n         37: areturn\n       LineNumberTable:\n         line 1226: 0\n@@ -1250,58 +1246,58 @@\n \n   static java.lang.CharSequence trim(java.lang.CharSequence);\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=1\n          0: aload_0\n-         1: instanceof    #28                 // class java/lang/String\n+         1: instanceof    #93                 // class java/lang/String\n          4: ifeq          15\n          7: aload_0\n-         8: checkcast     #28                 // class java/lang/String\n-        11: invokevirtual #37                 // Method java/lang/String.trim:()Ljava/lang/String;\n+         8: checkcast     #93                 // class java/lang/String\n+        11: invokevirtual #123                // Method java/lang/String.trim:()Ljava/lang/String;\n         14: areturn\n         15: aload_0\n-        16: invokeinterface #38,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        16: invokeinterface #126,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         21: istore_1\n         22: iload_1\n         23: istore_2\n         24: iconst_0\n         25: istore_3\n         26: iload_3\n         27: iload_2\n         28: if_icmpge     49\n         31: aload_0\n         32: iload_3\n-        33: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        33: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         38: bipush        32\n         40: if_icmpgt     49\n         43: iinc          3, 1\n         46: goto          26\n         49: iload_3\n         50: iload_2\n         51: if_icmpge     74\n         54: aload_0\n         55: iload_2\n         56: iconst_1\n         57: isub\n-        58: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        58: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         63: bipush        32\n         65: if_icmpgt     74\n         68: iinc          2, -1\n         71: goto          49\n         74: iload_3\n         75: ifgt          83\n         78: iload_2\n         79: iload_1\n         80: if_icmpge     94\n         83: aload_0\n         84: iload_3\n         85: iload_2\n-        86: invokeinterface #40,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n+        86: invokeinterface #136,  3          // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;\n         91: goto          95\n         94: aload_0\n         95: areturn\n       LineNumberTable:\n         line 1237: 0\n         line 1238: 7\n         line 1240: 15\n@@ -1332,108 +1328,108 @@\n \n   public static org.apache.commons.csv.CSVFormat valueOf(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #41                 // Method org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n-         4: invokevirtual #42                 // Method org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokestatic  #140                // Method org/apache/commons/csv/CSVFormat$Predefined.valueOf:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Predefined;\n+         4: invokevirtual #145                // Method org/apache/commons/csv/CSVFormat$Predefined.getFormat:()Lorg/apache/commons/csv/CSVFormat;\n          7: areturn\n       LineNumberTable:\n         line 1261: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 format   Ljava/lang/String;\n \n   private org.apache.commons.csv.CSVFormat(org.apache.commons.csv.CSVFormat$Builder);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #43                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #149                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #44                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-         9: putfield      #23                 // Field delimiter:Ljava/lang/String;\n+         6: invokestatic  #154                // Method org/apache/commons/csv/CSVFormat$Builder.access$2200:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+         9: putfield      #76                 // Field delimiter:Ljava/lang/String;\n         12: aload_0\n         13: aload_1\n-        14: invokestatic  #45                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-        17: putfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+        14: invokestatic  #160                // Method org/apache/commons/csv/CSVFormat$Builder.access$2300:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+        17: putfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n         20: aload_0\n         21: aload_1\n-        22: invokestatic  #46                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n-        25: putfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        22: invokestatic  #164                // Method org/apache/commons/csv/CSVFormat$Builder.access$2400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Lorg/apache/commons/csv/QuoteMode;\n+        25: putfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         28: aload_0\n         29: aload_1\n-        30: invokestatic  #47                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-        33: putfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        30: invokestatic  #168                // Method org/apache/commons/csv/CSVFormat$Builder.access$2500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+        33: putfield      #66                 // Field commentMarker:Ljava/lang/Character;\n         36: aload_0\n         37: aload_1\n-        38: invokestatic  #48                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n-        41: putfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        38: invokestatic  #171                // Method org/apache/commons/csv/CSVFormat$Builder.access$2600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/Character;\n+        41: putfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n         44: aload_0\n         45: aload_1\n-        46: invokestatic  #49                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-        49: putfield      #18                 // Field ignoreSurroundingSpaces:Z\n+        46: invokestatic  #174                // Method org/apache/commons/csv/CSVFormat$Builder.access$2700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+        49: putfield      #59                 // Field ignoreSurroundingSpaces:Z\n         52: aload_0\n         53: aload_1\n-        54: invokestatic  #50                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-        57: putfield      #17                 // Field allowMissingColumnNames:Z\n+        54: invokestatic  #178                // Method org/apache/commons/csv/CSVFormat$Builder.access$2800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+        57: putfield      #56                 // Field allowMissingColumnNames:Z\n         60: aload_0\n         61: aload_1\n-        62: invokestatic  #51                 // Method org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-        65: putfield      #16                 // Field ignoreEmptyLines:Z\n+        62: invokestatic  #181                // Method org/apache/commons/csv/CSVFormat$Builder.access$2900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+        65: putfield      #53                 // Field ignoreEmptyLines:Z\n         68: aload_0\n         69: aload_1\n-        70: invokestatic  #52                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-        73: putfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        70: invokestatic  #184                // Method org/apache/commons/csv/CSVFormat$Builder.access$3000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+        73: putfield      #50                 // Field recordSeparator:Ljava/lang/String;\n         76: aload_0\n         77: aload_1\n-        78: invokestatic  #53                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-        81: putfield      #14                 // Field nullString:Ljava/lang/String;\n+        78: invokestatic  #187                // Method org/apache/commons/csv/CSVFormat$Builder.access$3100:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+        81: putfield      #47                 // Field nullString:Ljava/lang/String;\n         84: aload_0\n         85: aload_1\n-        86: invokestatic  #54                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-        89: putfield      #13                 // Field headerComments:[Ljava/lang/String;\n+        86: invokestatic  #190                // Method org/apache/commons/csv/CSVFormat$Builder.access$3200:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+        89: putfield      #44                 // Field headerComments:[Ljava/lang/String;\n         92: aload_0\n         93: aload_1\n-        94: invokestatic  #55                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n-        97: putfield      #12                 // Field header:[Ljava/lang/String;\n+        94: invokestatic  #194                // Method org/apache/commons/csv/CSVFormat$Builder.access$3300:(Lorg/apache/commons/csv/CSVFormat$Builder;)[Ljava/lang/String;\n+        97: putfield      #40                 // Field header:[Ljava/lang/String;\n        100: aload_0\n        101: aload_1\n-       102: invokestatic  #56                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       105: putfield      #11                 // Field skipHeaderRecord:Z\n+       102: invokestatic  #197                // Method org/apache/commons/csv/CSVFormat$Builder.access$3400:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       105: putfield      #37                 // Field skipHeaderRecord:Z\n        108: aload_0\n        109: aload_1\n-       110: invokestatic  #57                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       113: putfield      #10                 // Field ignoreHeaderCase:Z\n+       110: invokestatic  #200                // Method org/apache/commons/csv/CSVFormat$Builder.access$3500:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       113: putfield      #34                 // Field ignoreHeaderCase:Z\n        116: aload_0\n        117: aload_1\n-       118: invokestatic  #58                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       121: putfield      #9                  // Field trailingDelimiter:Z\n+       118: invokestatic  #203                // Method org/apache/commons/csv/CSVFormat$Builder.access$3600:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       121: putfield      #31                 // Field trailingDelimiter:Z\n        124: aload_0\n        125: aload_1\n-       126: invokestatic  #59                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       129: putfield      #8                  // Field trim:Z\n+       126: invokestatic  #206                // Method org/apache/commons/csv/CSVFormat$Builder.access$3700:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       129: putfield      #28                 // Field trim:Z\n        132: aload_0\n        133: aload_1\n-       134: invokestatic  #60                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       137: putfield      #7                  // Field autoFlush:Z\n+       134: invokestatic  #209                // Method org/apache/commons/csv/CSVFormat$Builder.access$3800:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       137: putfield      #25                 // Field autoFlush:Z\n        140: aload_0\n        141: aload_1\n-       142: invokestatic  #61                 // Method org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n-       145: putfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       142: invokestatic  #212                // Method org/apache/commons/csv/CSVFormat$Builder.access$3900:(Lorg/apache/commons/csv/CSVFormat$Builder;)Ljava/lang/String;\n+       145: putfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        148: aload_0\n        149: aload_1\n-       150: invokestatic  #62                 // Method org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n-       153: putfield      #5                  // Field allowDuplicateHeaderNames:Z\n+       150: invokestatic  #215                // Method org/apache/commons/csv/CSVFormat$Builder.access$4000:(Lorg/apache/commons/csv/CSVFormat$Builder;)Z\n+       153: putfield      #17                 // Field allowDuplicateHeaderNames:Z\n        156: aload_0\n-       157: invokespecial #63                 // Method validate:()V\n+       157: invokespecial #218                // Method validate:()V\n        160: return\n       LineNumberTable:\n         line 1302: 0\n         line 1303: 4\n         line 1304: 12\n         line 1305: 20\n         line 1306: 28\n@@ -1461,88 +1457,88 @@\n \n   private org.apache.commons.csv.CSVFormat(java.lang.String, java.lang.Character, org.apache.commons.csv.QuoteMode, java.lang.Character, java.lang.Character, boolean, boolean, java.lang.String, java.lang.String, java.lang.Object[], java.lang.String[], boolean, boolean, boolean, boolean, boolean, boolean, boolean);\n     descriptor: (Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=19, args_size=19\n          0: aload_0\n-         1: invokespecial #43                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #149                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #23                 // Field delimiter:Ljava/lang/String;\n+         6: putfield      #76                 // Field delimiter:Ljava/lang/String;\n          9: aload_0\n         10: aload_2\n-        11: putfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+        11: putfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n         14: aload_0\n         15: aload_3\n-        16: putfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        16: putfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n         19: aload_0\n         20: aload         4\n-        22: putfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        22: putfield      #66                 // Field commentMarker:Ljava/lang/Character;\n         25: aload_0\n         26: aload         5\n-        28: putfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        28: putfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n         31: aload_0\n         32: iload         6\n-        34: putfield      #18                 // Field ignoreSurroundingSpaces:Z\n+        34: putfield      #59                 // Field ignoreSurroundingSpaces:Z\n         37: aload_0\n         38: iload         13\n-        40: putfield      #17                 // Field allowMissingColumnNames:Z\n+        40: putfield      #56                 // Field allowMissingColumnNames:Z\n         43: aload_0\n         44: iload         7\n-        46: putfield      #16                 // Field ignoreEmptyLines:Z\n+        46: putfield      #53                 // Field ignoreEmptyLines:Z\n         49: aload_0\n         50: aload         8\n-        52: putfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        52: putfield      #50                 // Field recordSeparator:Ljava/lang/String;\n         55: aload_0\n         56: aload         9\n-        58: putfield      #14                 // Field nullString:Ljava/lang/String;\n+        58: putfield      #47                 // Field nullString:Ljava/lang/String;\n         61: aload_0\n         62: aload         10\n-        64: invokestatic  #64                 // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n-        67: putfield      #13                 // Field headerComments:[Ljava/lang/String;\n+        64: invokestatic  #221                // Method toStringArray:([Ljava/lang/Object;)[Ljava/lang/String;\n+        67: putfield      #44                 // Field headerComments:[Ljava/lang/String;\n         70: aload_0\n         71: aload         11\n-        73: invokestatic  #65                 // Method clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        76: checkcast     #66                 // class \"[Ljava/lang/String;\"\n-        79: putfield      #12                 // Field header:[Ljava/lang/String;\n+        73: invokestatic  #225                // Method clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        76: checkcast     #228                // class \"[Ljava/lang/String;\"\n+        79: putfield      #40                 // Field header:[Ljava/lang/String;\n         82: aload_0\n         83: iload         12\n-        85: putfield      #11                 // Field skipHeaderRecord:Z\n+        85: putfield      #37                 // Field skipHeaderRecord:Z\n         88: aload_0\n         89: iload         14\n-        91: putfield      #10                 // Field ignoreHeaderCase:Z\n+        91: putfield      #34                 // Field ignoreHeaderCase:Z\n         94: aload_0\n         95: iload         16\n-        97: putfield      #9                  // Field trailingDelimiter:Z\n+        97: putfield      #31                 // Field trailingDelimiter:Z\n        100: aload_0\n        101: iload         15\n-       103: putfield      #8                  // Field trim:Z\n+       103: putfield      #28                 // Field trim:Z\n        106: aload_0\n        107: iload         17\n-       109: putfield      #7                  // Field autoFlush:Z\n+       109: putfield      #25                 // Field autoFlush:Z\n        112: aload_0\n-       113: new           #67                 // class java/lang/StringBuilder\n+       113: new           #229                // class java/lang/StringBuilder\n        116: dup\n-       117: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       117: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n        120: aload_0\n-       121: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       124: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       121: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+       124: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n        127: aload         9\n-       129: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       129: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        132: aload_0\n-       133: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       136: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       139: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       142: putfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       133: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+       136: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       139: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       142: putfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        145: aload_0\n        146: iload         18\n-       148: putfield      #5                  // Field allowDuplicateHeaderNames:Z\n+       148: putfield      #17                 // Field allowDuplicateHeaderNames:Z\n        151: aload_0\n-       152: invokespecial #63                 // Method validate:()V\n+       152: invokespecial #218                // Method validate:()V\n        155: return\n       LineNumberTable:\n         line 1351: 0\n         line 1352: 4\n         line 1353: 9\n         line 1354: 14\n         line 1355: 19\n@@ -1588,15 +1584,15 @@\n   private void append(char, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (CLjava/lang/Appendable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_2\n          1: iload_1\n-         2: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+         2: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n          7: pop\n          8: return\n       LineNumberTable:\n         line 1376: 0\n         line 1380: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1609,15 +1605,15 @@\n   private void append(java.lang.CharSequence, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_2\n          1: aload_1\n-         2: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+         2: invokeinterface #246,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n          7: pop\n          8: return\n       LineNumberTable:\n         line 1384: 0\n         line 1388: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1629,30 +1625,30 @@\n \n   public org.apache.commons.csv.CSVFormat$Builder builder();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat$Builder;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #74                 // Method org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokestatic  #249                // Method org/apache/commons/csv/CSVFormat$Builder.create:(Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: areturn\n       LineNumberTable:\n         line 1396: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   org.apache.commons.csv.CSVFormat copy();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-         4: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         4: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n          7: areturn\n       LineNumberTable:\n         line 1405: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -1665,126 +1661,126 @@\n          1: aload_1\n          2: if_acmpne     7\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnull        22\n         11: aload_0\n-        12: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        12: invokevirtual #260                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         15: aload_1\n-        16: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        16: invokevirtual #260                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         19: if_acmpeq     24\n         22: iconst_0\n         23: ireturn\n         24: aload_1\n-        25: checkcast     #33                 // class org/apache/commons/csv/CSVFormat\n+        25: checkcast     #4                  // class org/apache/commons/csv/CSVFormat\n         28: astore_2\n         29: aload_0\n-        30: getfield      #5                  // Field allowDuplicateHeaderNames:Z\n+        30: getfield      #17                 // Field allowDuplicateHeaderNames:Z\n         33: aload_2\n-        34: getfield      #5                  // Field allowDuplicateHeaderNames:Z\n+        34: getfield      #17                 // Field allowDuplicateHeaderNames:Z\n         37: if_icmpne     269\n         40: aload_0\n-        41: getfield      #17                 // Field allowMissingColumnNames:Z\n+        41: getfield      #56                 // Field allowMissingColumnNames:Z\n         44: aload_2\n-        45: getfield      #17                 // Field allowMissingColumnNames:Z\n+        45: getfield      #56                 // Field allowMissingColumnNames:Z\n         48: if_icmpne     269\n         51: aload_0\n-        52: getfield      #7                  // Field autoFlush:Z\n+        52: getfield      #25                 // Field autoFlush:Z\n         55: aload_2\n-        56: getfield      #7                  // Field autoFlush:Z\n+        56: getfield      #25                 // Field autoFlush:Z\n         59: if_icmpne     269\n         62: aload_0\n-        63: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        63: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n         66: aload_2\n-        67: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-        70: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        67: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+        70: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         73: ifeq          269\n         76: aload_0\n-        77: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+        77: getfield      #76                 // Field delimiter:Ljava/lang/String;\n         80: aload_2\n-        81: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        84: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        81: getfield      #76                 // Field delimiter:Ljava/lang/String;\n+        84: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n         87: ifeq          269\n         90: aload_0\n-        91: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        91: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n         94: aload_2\n-        95: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        98: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+        95: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+        98: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        101: ifeq          269\n        104: aload_0\n-       105: getfield      #12                 // Field header:[Ljava/lang/String;\n+       105: getfield      #40                 // Field header:[Ljava/lang/String;\n        108: aload_2\n-       109: getfield      #12                 // Field header:[Ljava/lang/String;\n-       112: invokestatic  #79                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+       109: getfield      #40                 // Field header:[Ljava/lang/String;\n+       112: invokestatic  #268                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n        115: ifeq          269\n        118: aload_0\n-       119: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n+       119: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n        122: aload_2\n-       123: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-       126: invokestatic  #79                 // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n+       123: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n+       126: invokestatic  #268                // Method java/util/Arrays.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z\n        129: ifeq          269\n        132: aload_0\n-       133: getfield      #16                 // Field ignoreEmptyLines:Z\n+       133: getfield      #53                 // Field ignoreEmptyLines:Z\n        136: aload_2\n-       137: getfield      #16                 // Field ignoreEmptyLines:Z\n+       137: getfield      #53                 // Field ignoreEmptyLines:Z\n        140: if_icmpne     269\n        143: aload_0\n-       144: getfield      #10                 // Field ignoreHeaderCase:Z\n+       144: getfield      #34                 // Field ignoreHeaderCase:Z\n        147: aload_2\n-       148: getfield      #10                 // Field ignoreHeaderCase:Z\n+       148: getfield      #34                 // Field ignoreHeaderCase:Z\n        151: if_icmpne     269\n        154: aload_0\n-       155: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+       155: getfield      #59                 // Field ignoreSurroundingSpaces:Z\n        158: aload_2\n-       159: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+       159: getfield      #59                 // Field ignoreSurroundingSpaces:Z\n        162: if_icmpne     269\n        165: aload_0\n-       166: getfield      #14                 // Field nullString:Ljava/lang/String;\n+       166: getfield      #47                 // Field nullString:Ljava/lang/String;\n        169: aload_2\n-       170: getfield      #14                 // Field nullString:Ljava/lang/String;\n-       173: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       170: getfield      #47                 // Field nullString:Ljava/lang/String;\n+       173: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        176: ifeq          269\n        179: aload_0\n-       180: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+       180: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n        183: aload_2\n-       184: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       187: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       184: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+       187: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        190: ifeq          269\n        193: aload_0\n-       194: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       194: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n        197: aload_2\n-       198: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       198: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n        201: if_acmpne     269\n        204: aload_0\n-       205: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       205: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        208: aload_2\n-       209: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n-       212: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       209: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n+       212: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        215: ifeq          269\n        218: aload_0\n-       219: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+       219: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n        222: aload_2\n-       223: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-       226: invokestatic  #78                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+       223: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n+       226: invokestatic  #264                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n        229: ifeq          269\n        232: aload_0\n-       233: getfield      #11                 // Field skipHeaderRecord:Z\n+       233: getfield      #37                 // Field skipHeaderRecord:Z\n        236: aload_2\n-       237: getfield      #11                 // Field skipHeaderRecord:Z\n+       237: getfield      #37                 // Field skipHeaderRecord:Z\n        240: if_icmpne     269\n        243: aload_0\n-       244: getfield      #9                  // Field trailingDelimiter:Z\n+       244: getfield      #31                 // Field trailingDelimiter:Z\n        247: aload_2\n-       248: getfield      #9                  // Field trailingDelimiter:Z\n+       248: getfield      #31                 // Field trailingDelimiter:Z\n        251: if_icmpne     269\n        254: aload_0\n-       255: getfield      #8                  // Field trim:Z\n+       255: getfield      #28                 // Field trim:Z\n        258: aload_2\n-       259: getfield      #8                  // Field trim:Z\n+       259: getfield      #28                 // Field trim:Z\n        262: if_icmpne     269\n        265: iconst_1\n        266: goto          270\n        269: iconst_0\n        270: ireturn\n       LineNumberTable:\n         line 1410: 0\n@@ -1815,67 +1811,67 @@\n           stack = [ int ]\n \n   public java.lang.String format(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Ljava/lang/String;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=4, locals=7, args_size=2\n-         0: new           #80                 // class java/io/StringWriter\n+         0: new           #273                // class java/io/StringWriter\n          3: dup\n-         4: invokespecial #81                 // Method java/io/StringWriter.\"<init>\":()V\n+         4: invokespecial #275                // Method java/io/StringWriter.\"<init>\":()V\n          7: astore_2\n-         8: new           #82                 // class org/apache/commons/csv/CSVPrinter\n+         8: new           #276                // class org/apache/commons/csv/CSVPrinter\n         11: dup\n         12: aload_2\n         13: aload_0\n-        14: invokespecial #83                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+        14: invokespecial #278                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         17: astore_3\n         18: aload_3\n         19: aload_1\n-        20: invokevirtual #84                 // Method org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n+        20: invokevirtual #281                // Method org/apache/commons/csv/CSVPrinter.printRecord:([Ljava/lang/Object;)V\n         23: aload_2\n-        24: invokevirtual #85                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n+        24: invokevirtual #285                // Method java/io/StringWriter.toString:()Ljava/lang/String;\n         27: astore        4\n         29: aload_0\n-        30: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        30: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n         33: ifnull        52\n         36: aload         4\n-        38: invokevirtual #86                 // Method java/lang/String.length:()I\n+        38: invokevirtual #286                // Method java/lang/String.length:()I\n         41: aload_0\n-        42: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-        45: invokevirtual #86                 // Method java/lang/String.length:()I\n+        42: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n+        45: invokevirtual #286                // Method java/lang/String.length:()I\n         48: isub\n         49: goto          57\n         52: aload         4\n-        54: invokevirtual #86                 // Method java/lang/String.length:()I\n+        54: invokevirtual #286                // Method java/lang/String.length:()I\n         57: istore        5\n         59: aload         4\n         61: iconst_0\n         62: iload         5\n-        64: invokevirtual #87                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        64: invokevirtual #287                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         67: astore        6\n         69: aload_3\n-        70: invokevirtual #88                 // Method org/apache/commons/csv/CSVPrinter.close:()V\n+        70: invokevirtual #291                // Method org/apache/commons/csv/CSVPrinter.close:()V\n         73: aload         6\n         75: areturn\n         76: astore        4\n         78: aload_3\n-        79: invokevirtual #88                 // Method org/apache/commons/csv/CSVPrinter.close:()V\n+        79: invokevirtual #291                // Method org/apache/commons/csv/CSVPrinter.close:()V\n         82: goto          94\n         85: astore        5\n         87: aload         4\n         89: aload         5\n-        91: invokevirtual #90                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        91: invokevirtual #296                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         94: aload         4\n         96: athrow\n         97: astore_3\n-        98: new           #92                 // class java/lang/IllegalStateException\n+        98: new           #302                // class java/lang/IllegalStateException\n        101: dup\n        102: aload_3\n-       103: invokespecial #93                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n+       103: invokespecial #304                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/Throwable;)V\n        106: athrow\n       Exception table:\n          from    to  target type\n             18    69    76   Class java/lang/Throwable\n             78    82    85   Class java/lang/Throwable\n              8    73    97   Class java/io/IOException\n             76    97    97   Class java/io/IOException\n@@ -1922,124 +1918,124 @@\n \n   public boolean getAllowDuplicateHeaderNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field allowDuplicateHeaderNames:Z\n+         1: getfield      #17                 // Field allowDuplicateHeaderNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 1453: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getAllowMissingColumnNames();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field allowMissingColumnNames:Z\n+         1: getfield      #56                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 1462: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getAutoFlush();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field autoFlush:Z\n+         1: getfield      #25                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 1472: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getCommentMarker();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 1481: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public char getDelimiter();\n     descriptor: ()C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #76                 // Field delimiter:Ljava/lang/String;\n          4: iconst_0\n-         5: invokevirtual #94                 // Method java/lang/String.charAt:(I)C\n+         5: invokevirtual #306                // Method java/lang/String.charAt:(I)C\n          8: ireturn\n       LineNumberTable:\n         line 1492: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public java.lang.String getDelimiterString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #76                 // Field delimiter:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 1501: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getEscapeCharacter();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 1510: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String[] getHeader();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field header:[Ljava/lang/String;\n+         1: getfield      #40                 // Field header:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #12                 // Field header:[Ljava/lang/String;\n-        11: invokevirtual #95                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        14: checkcast     #66                 // class \"[Ljava/lang/String;\"\n+         8: getfield      #40                 // Field header:[Ljava/lang/String;\n+        11: invokevirtual #307                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        14: checkcast     #228                // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 1519: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2051,20 +2047,20 @@\n \n   public java.lang.String[] getHeaderComments();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n          4: ifnull        20\n          7: aload_0\n-         8: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-        11: invokevirtual #96                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        14: checkcast     #66                 // class \"[Ljava/lang/String;\"\n+         8: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n+        11: invokevirtual #307                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        14: checkcast     #228                // class \"[Ljava/lang/String;\"\n         17: goto          21\n         20: aconst_null\n         21: areturn\n       LineNumberTable:\n         line 1528: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -2076,141 +2072,141 @@\n \n   public boolean getIgnoreEmptyLines();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field ignoreEmptyLines:Z\n+         1: getfield      #53                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 1537: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getIgnoreHeaderCase();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field ignoreHeaderCase:Z\n+         1: getfield      #34                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 1547: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getIgnoreSurroundingSpaces();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #59                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 1556: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String getNullString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #47                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 1569: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.Character getQuoteCharacter();\n     descriptor: ()Ljava/lang/Character;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 1578: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public org.apache.commons.csv.QuoteMode getQuoteMode();\n     descriptor: ()Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 1587: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public java.lang.String getRecordSeparator();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 1596: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getSkipHeaderRecord();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field skipHeaderRecord:Z\n+         1: getfield      #37                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 1605: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getTrailingDelimiter();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field trailingDelimiter:Z\n+         1: getfield      #31                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 1615: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n   public boolean getTrim();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field trim:Z\n+         1: getfield      #28                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 1625: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVFormat;\n \n@@ -2223,126 +2219,126 @@\n          2: istore_1\n          3: iconst_1\n          4: istore_2\n          5: bipush        31\n          7: iload_2\n          8: imul\n          9: aload_0\n-        10: getfield      #12                 // Field header:[Ljava/lang/String;\n-        13: invokestatic  #97                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+        10: getfield      #40                 // Field header:[Ljava/lang/String;\n+        13: invokestatic  #308                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n         16: iadd\n         17: istore_2\n         18: bipush        31\n         20: iload_2\n         21: imul\n         22: aload_0\n-        23: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-        26: invokestatic  #97                 // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n+        23: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n+        26: invokestatic  #308                // Method java/util/Arrays.hashCode:([Ljava/lang/Object;)I\n         29: iadd\n         30: istore_2\n         31: bipush        31\n         33: iload_2\n         34: imul\n         35: bipush        17\n-        37: anewarray     #98                 // class java/lang/Object\n+        37: anewarray     #150                // class java/lang/Object\n         40: dup\n         41: iconst_0\n         42: aload_0\n-        43: getfield      #5                  // Field allowDuplicateHeaderNames:Z\n-        46: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        43: getfield      #17                 // Field allowDuplicateHeaderNames:Z\n+        46: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         49: aastore\n         50: dup\n         51: iconst_1\n         52: aload_0\n-        53: getfield      #17                 // Field allowMissingColumnNames:Z\n-        56: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        53: getfield      #56                 // Field allowMissingColumnNames:Z\n+        56: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         59: aastore\n         60: dup\n         61: iconst_2\n         62: aload_0\n-        63: getfield      #7                  // Field autoFlush:Z\n-        66: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        63: getfield      #25                 // Field autoFlush:Z\n+        66: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n         69: aastore\n         70: dup\n         71: iconst_3\n         72: aload_0\n-        73: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+        73: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n         76: aastore\n         77: dup\n         78: iconst_4\n         79: aload_0\n-        80: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+        80: getfield      #76                 // Field delimiter:Ljava/lang/String;\n         83: aastore\n         84: dup\n         85: iconst_5\n         86: aload_0\n-        87: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+        87: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n         90: aastore\n         91: dup\n         92: bipush        6\n         94: aload_0\n-        95: getfield      #16                 // Field ignoreEmptyLines:Z\n-        98: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+        95: getfield      #53                 // Field ignoreEmptyLines:Z\n+        98: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        101: aastore\n        102: dup\n        103: bipush        7\n        105: aload_0\n-       106: getfield      #10                 // Field ignoreHeaderCase:Z\n-       109: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       106: getfield      #34                 // Field ignoreHeaderCase:Z\n+       109: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        112: aastore\n        113: dup\n        114: bipush        8\n        116: aload_0\n-       117: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n-       120: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       117: getfield      #59                 // Field ignoreSurroundingSpaces:Z\n+       120: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        123: aastore\n        124: dup\n        125: bipush        9\n        127: aload_0\n-       128: getfield      #14                 // Field nullString:Ljava/lang/String;\n+       128: getfield      #47                 // Field nullString:Ljava/lang/String;\n        131: aastore\n        132: dup\n        133: bipush        10\n        135: aload_0\n-       136: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+       136: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n        139: aastore\n        140: dup\n        141: bipush        11\n        143: aload_0\n-       144: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       144: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n        147: aastore\n        148: dup\n        149: bipush        12\n        151: aload_0\n-       152: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+       152: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n        155: aastore\n        156: dup\n        157: bipush        13\n        159: aload_0\n-       160: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+       160: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n        163: aastore\n        164: dup\n        165: bipush        14\n        167: aload_0\n-       168: getfield      #11                 // Field skipHeaderRecord:Z\n-       171: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       168: getfield      #37                 // Field skipHeaderRecord:Z\n+       171: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        174: aastore\n        175: dup\n        176: bipush        15\n        178: aload_0\n-       179: getfield      #9                  // Field trailingDelimiter:Z\n-       182: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       179: getfield      #31                 // Field trailingDelimiter:Z\n+       182: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        185: aastore\n        186: dup\n        187: bipush        16\n        189: aload_0\n-       190: getfield      #8                  // Field trim:Z\n-       193: invokestatic  #99                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n+       190: getfield      #28                 // Field trim:Z\n+       193: invokestatic  #312                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;\n        196: aastore\n-       197: invokestatic  #100                // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n+       197: invokestatic  #317                // Method java/util/Objects.hash:([Ljava/lang/Object;)I\n        200: iadd\n        201: ireturn\n       LineNumberTable:\n         line 1630: 0\n         line 1631: 3\n         line 1632: 5\n         line 1633: 18\n@@ -2358,15 +2354,15 @@\n \n   public boolean isCommentMarkerSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1647: 0\n@@ -2387,15 +2383,15 @@\n          1: aload         4\n          3: iconst_0\n          4: caload\n          5: if_icmpeq     10\n          8: iconst_0\n          9: ireturn\n         10: aload_2\n-        11: invokeinterface #38,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        11: invokeinterface #126,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         16: istore        6\n         18: iload_3\n         19: iload         5\n         21: iadd\n         22: iload         6\n         24: if_icmple     29\n         27: iconst_0\n@@ -2405,15 +2401,15 @@\n         32: iload         7\n         34: iload         5\n         36: if_icmpge     65\n         39: aload_2\n         40: iload_3\n         41: iload         7\n         43: iadd\n-        44: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        44: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         49: aload         4\n         51: iload         7\n         53: caload\n         54: if_icmpeq     59\n         57: iconst_0\n         58: ireturn\n         59: iinc          7, 1\n@@ -2455,15 +2451,15 @@\n \n   public boolean isEscapeCharacterSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1687: 0\n@@ -2477,15 +2473,15 @@\n \n   public boolean isNullStringSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #47                 // Field nullString:Ljava/lang/String;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1696: 0\n@@ -2499,15 +2495,15 @@\n \n   public boolean isQuoteCharacterSet();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n          4: ifnull        11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 1705: 0\n@@ -2520,19 +2516,19 @@\n           stack = [ int ]\n \n   public org.apache.commons.csv.CSVParser parse(java.io.Reader) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #101                // class org/apache/commons/csv/CSVParser\n+         0: new           #320                // class org/apache/commons/csv/CSVParser\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #102                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #322                // Method org/apache/commons/csv/CSVParser.\"<init>\":(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1720: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1 reader   Ljava/io/Reader;\n@@ -2540,19 +2536,19 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter print(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n-         0: new           #82                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #276                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n          4: aload_1\n          5: aload_0\n-         6: invokespecial #83                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+         6: invokespecial #278                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n          9: areturn\n       LineNumberTable:\n         line 1735: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      10     1   out   Ljava/lang/Appendable;\n@@ -2560,26 +2556,26 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter print(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n-         0: new           #82                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #276                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: new           #103                // class java/io/OutputStreamWriter\n+         4: new           #325                // class java/io/OutputStreamWriter\n          7: dup\n-         8: new           #104                // class java/io/FileOutputStream\n+         8: new           #327                // class java/io/FileOutputStream\n         11: dup\n         12: aload_1\n-        13: invokespecial #105                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+        13: invokespecial #329                // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n         16: aload_2\n-        17: invokespecial #106                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        17: invokespecial #332                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         20: aload_0\n-        21: invokespecial #83                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+        21: invokespecial #278                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         24: areturn\n       LineNumberTable:\n         line 1754: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      25     1   out   Ljava/io/File;\n@@ -2589,98 +2585,98 @@\n \n   public void print(java.lang.Object, java.lang.Appendable, boolean) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: ifnonnull     47\n+         1: ifnonnull     48\n          4: aconst_null\n          5: aload_0\n-         6: getfield      #14                 // Field nullString:Ljava/lang/String;\n-         9: if_acmpne     19\n-        12: ldc           #107                // String\n-        14: astore        4\n-        16: goto          87\n-        19: getstatic     #108                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-        22: aload_0\n-        23: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        26: if_acmpne     38\n-        29: aload_0\n-        30: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n-        33: astore        4\n-        35: goto          87\n-        38: aload_0\n-        39: getfield      #14                 // Field nullString:Ljava/lang/String;\n-        42: astore        4\n-        44: goto          87\n-        47: aload_1\n-        48: instanceof    #109                // class java/lang/CharSequence\n-        51: ifeq          63\n-        54: aload_1\n-        55: checkcast     #109                // class java/lang/CharSequence\n-        58: astore        4\n-        60: goto          87\n-        63: aload_1\n-        64: instanceof    #110                // class java/io/Reader\n-        67: ifeq          81\n-        70: aload_0\n-        71: aload_1\n-        72: checkcast     #110                // class java/io/Reader\n-        75: aload_2\n-        76: iload_3\n-        77: invokespecial #111                // Method print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n-        80: return\n-        81: aload_1\n-        82: invokevirtual #112                // Method java/lang/Object.toString:()Ljava/lang/String;\n-        85: astore        4\n-        87: aload_0\n-        88: invokevirtual #113                // Method getTrim:()Z\n-        91: ifeq          102\n-        94: aload         4\n-        96: invokestatic  #114                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n-        99: goto          104\n-       102: aload         4\n-       104: astore        4\n-       106: aload_0\n-       107: aload_1\n-       108: aload         4\n-       110: aload_2\n-       111: iload_3\n-       112: invokespecial #115                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n-       115: return\n+         6: getfield      #47                 // Field nullString:Ljava/lang/String;\n+         9: if_acmpne     20\n+        12: ldc_w         #335                // String\n+        15: astore        4\n+        17: goto          88\n+        20: getstatic     #337                // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+        23: aload_0\n+        24: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+        27: if_acmpne     39\n+        30: aload_0\n+        31: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n+        34: astore        4\n+        36: goto          88\n+        39: aload_0\n+        40: getfield      #47                 // Field nullString:Ljava/lang/String;\n+        43: astore        4\n+        45: goto          88\n+        48: aload_1\n+        49: instanceof    #127                // class java/lang/CharSequence\n+        52: ifeq          64\n+        55: aload_1\n+        56: checkcast     #127                // class java/lang/CharSequence\n+        59: astore        4\n+        61: goto          88\n+        64: aload_1\n+        65: instanceof    #342                // class java/io/Reader\n+        68: ifeq          82\n+        71: aload_0\n+        72: aload_1\n+        73: checkcast     #342                // class java/io/Reader\n+        76: aload_2\n+        77: iload_3\n+        78: invokespecial #344                // Method print:(Ljava/io/Reader;Ljava/lang/Appendable;Z)V\n+        81: return\n+        82: aload_1\n+        83: invokevirtual #348                // Method java/lang/Object.toString:()Ljava/lang/String;\n+        86: astore        4\n+        88: aload_0\n+        89: invokevirtual #349                // Method getTrim:()Z\n+        92: ifeq          103\n+        95: aload         4\n+        97: invokestatic  #353                // Method trim:(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;\n+       100: goto          105\n+       103: aload         4\n+       105: astore        4\n+       107: aload_0\n+       108: aload_1\n+       109: aload         4\n+       111: aload_2\n+       112: iload_3\n+       113: invokespecial #356                // Method print:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+       116: return\n       LineNumberTable:\n         line 1771: 0\n         line 1773: 4\n         line 1774: 12\n-        line 1775: 19\n-        line 1776: 29\n-        line 1778: 38\n-        line 1780: 47\n-        line 1781: 54\n-        line 1782: 63\n-        line 1783: 70\n-        line 1784: 80\n-        line 1786: 81\n-        line 1788: 87\n-        line 1789: 106\n-        line 1790: 115\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           16       3     4 charSequence   Ljava/lang/CharSequence;\n-           35       3     4 charSequence   Ljava/lang/CharSequence;\n-           44       3     4 charSequence   Ljava/lang/CharSequence;\n-           60       3     4 charSequence   Ljava/lang/CharSequence;\n-            0     116     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0     116     1 value   Ljava/lang/Object;\n-            0     116     2   out   Ljava/lang/Appendable;\n-            0     116     3 newRecord   Z\n-           87      29     4 charSequence   Ljava/lang/CharSequence;\n+        line 1775: 20\n+        line 1776: 30\n+        line 1778: 39\n+        line 1780: 48\n+        line 1781: 55\n+        line 1782: 64\n+        line 1783: 71\n+        line 1784: 81\n+        line 1786: 82\n+        line 1788: 88\n+        line 1789: 107\n+        line 1790: 116\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+           17       3     4 charSequence   Ljava/lang/CharSequence;\n+           36       3     4 charSequence   Ljava/lang/CharSequence;\n+           45       3     4 charSequence   Ljava/lang/CharSequence;\n+           61       3     4 charSequence   Ljava/lang/CharSequence;\n+            0     117     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0     117     1 value   Ljava/lang/Object;\n+            0     117     2   out   Ljava/lang/Appendable;\n+            0     117     3 newRecord   Z\n+           88      29     4 charSequence   Ljava/lang/CharSequence;\n       StackMapTable: number_of_entries = 8\n-        frame_type = 19 /* same */\n+        frame_type = 20 /* same */\n         frame_type = 18 /* same */\n         frame_type = 8 /* same */\n         frame_type = 15 /* same */\n         frame_type = 17 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 5\n           locals = [ class java/lang/CharSequence ]\n@@ -2694,53 +2690,53 @@\n     descriptor: (Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=5\n          0: iconst_0\n          1: istore        5\n          3: aload_2\n-         4: invokeinterface #38,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         4: invokeinterface #126,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n          9: istore        6\n         11: iload         4\n         13: ifne          27\n         16: aload_3\n         17: aload_0\n-        18: invokevirtual #116                // Method getDelimiterString:()Ljava/lang/String;\n-        21: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        18: invokevirtual #359                // Method getDelimiterString:()Ljava/lang/String;\n+        21: invokeinterface #246,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         26: pop\n         27: aload_1\n         28: ifnonnull     42\n         31: aload_3\n         32: aload_2\n-        33: invokeinterface #73,  2           // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+        33: invokeinterface #246,  2          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n         38: pop\n         39: goto          88\n         42: aload_0\n-        43: invokevirtual #117                // Method isQuoteCharacterSet:()Z\n+        43: invokevirtual #362                // Method isQuoteCharacterSet:()Z\n         46: ifeq          61\n         49: aload_0\n         50: aload_1\n         51: aload_2\n         52: aload_3\n         53: iload         4\n-        55: invokespecial #118                // Method printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n+        55: invokespecial #365                // Method printWithQuotes:(Ljava/lang/Object;Ljava/lang/CharSequence;Ljava/lang/Appendable;Z)V\n         58: goto          88\n         61: aload_0\n-        62: invokevirtual #119                // Method isEscapeCharacterSet:()Z\n+        62: invokevirtual #368                // Method isEscapeCharacterSet:()Z\n         65: ifeq          77\n         68: aload_0\n         69: aload_2\n         70: aload_3\n-        71: invokespecial #120                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        71: invokespecial #371                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         74: goto          88\n         77: aload_3\n         78: aload_2\n         79: iconst_0\n         80: iload         6\n-        82: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+        82: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n         87: pop\n         88: return\n       LineNumberTable:\n         line 1793: 0\n         line 1794: 3\n         line 1795: 11\n         line 1796: 16\n@@ -2777,17 +2773,17 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n-         4: anewarray     #122                // class java/nio/file/OpenOption\n-         7: invokestatic  #123                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n-        10: invokevirtual #124                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n+         4: anewarray     #378                // class java/nio/file/OpenOption\n+         7: invokestatic  #380                // Method java/nio/file/Files.newBufferedWriter:(Ljava/nio/file/Path;Ljava/nio/charset/Charset;[Ljava/nio/file/OpenOption;)Ljava/io/BufferedWriter;\n+        10: invokevirtual #386                // Method print:(Ljava/lang/Appendable;)Lorg/apache/commons/csv/CSVPrinter;\n         13: areturn\n       LineNumberTable:\n         line 1825: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      14     1   out   Ljava/nio/file/Path;\n@@ -2800,45 +2796,45 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=4\n          0: iload_3\n          1: ifne          13\n          4: aload_0\n          5: aload_0\n-         6: invokevirtual #116                // Method getDelimiterString:()Ljava/lang/String;\n+         6: invokevirtual #359                // Method getDelimiterString:()Ljava/lang/String;\n          9: aload_2\n-        10: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        10: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         13: aload_0\n-        14: invokevirtual #117                // Method isQuoteCharacterSet:()Z\n+        14: invokevirtual #362                // Method isQuoteCharacterSet:()Z\n         17: ifeq          29\n         20: aload_0\n         21: aload_1\n         22: aload_2\n-        23: invokespecial #126                // Method printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+        23: invokespecial #391                // Method printWithQuotes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n         26: goto          70\n         29: aload_0\n-        30: invokevirtual #119                // Method isEscapeCharacterSet:()Z\n+        30: invokevirtual #368                // Method isEscapeCharacterSet:()Z\n         33: ifeq          45\n         36: aload_0\n         37: aload_1\n         38: aload_2\n-        39: invokespecial #127                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+        39: invokespecial #394                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n         42: goto          70\n         45: aload_2\n-        46: instanceof    #128                // class java/io/Writer\n+        46: instanceof    #396                // class java/io/Writer\n         49: ifeq          64\n         52: aload_1\n         53: aload_2\n-        54: checkcast     #128                // class java/io/Writer\n-        57: invokestatic  #129                // Method org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n+        54: checkcast     #396                // class java/io/Writer\n+        57: invokestatic  #398                // Method org/apache/commons/csv/IOUtils.copyLarge:(Ljava/io/Reader;Ljava/io/Writer;)J\n         60: pop2\n         61: goto          70\n         64: aload_1\n         65: aload_2\n-        66: invokestatic  #130                // Method org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n+        66: invokestatic  #404                // Method org/apache/commons/csv/IOUtils.copy:(Ljava/io/Reader;Ljava/lang/Appendable;)J\n         69: pop2\n         70: return\n       LineNumberTable:\n         line 1830: 0\n         line 1831: 4\n         line 1833: 13\n         line 1834: 20\n@@ -2864,19 +2860,19 @@\n       throws java.io.IOException\n \n   public org.apache.commons.csv.CSVPrinter printer() throws java.io.IOException;\n     descriptor: ()Lorg/apache/commons/csv/CSVPrinter;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n-         0: new           #82                 // class org/apache/commons/csv/CSVPrinter\n+         0: new           #276                // class org/apache/commons/csv/CSVPrinter\n          3: dup\n-         4: getstatic     #131                // Field java/lang/System.out:Ljava/io/PrintStream;\n+         4: getstatic     #408                // Field java/lang/System.out:Ljava/io/PrintStream;\n          7: aload_0\n-         8: invokespecial #83                 // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n+         8: invokespecial #278                // Method org/apache/commons/csv/CSVPrinter.\"<init>\":(Ljava/lang/Appendable;Lorg/apache/commons/csv/CSVFormat;)V\n         11: areturn\n       LineNumberTable:\n         line 1857: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Exceptions:\n@@ -2884,29 +2880,29 @@\n \n   public void println(java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/lang/Appendable;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #132                // Method getTrailingDelimiter:()Z\n+         1: invokevirtual #414                // Method getTrailingDelimiter:()Z\n          4: ifeq          16\n          7: aload_0\n          8: aload_0\n-         9: invokevirtual #116                // Method getDelimiterString:()Ljava/lang/String;\n+         9: invokevirtual #359                // Method getDelimiterString:()Ljava/lang/String;\n         12: aload_1\n-        13: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        13: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         16: aload_0\n-        17: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        17: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n         20: ifnull        32\n         23: aload_0\n         24: aload_0\n-        25: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+        25: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n         28: aload_1\n-        29: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        29: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         32: return\n       LineNumberTable:\n         line 1868: 0\n         line 1869: 7\n         line 1871: 16\n         line 1872: 23\n         line 1874: 32\n@@ -2937,20 +2933,20 @@\n         11: aaload\n         12: aload_1\n         13: iload_3\n         14: ifne          21\n         17: iconst_1\n         18: goto          22\n         21: iconst_0\n-        22: invokevirtual #133                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n+        22: invokevirtual #417                // Method print:(Ljava/lang/Object;Ljava/lang/Appendable;Z)V\n         25: iinc          3, 1\n         28: goto          2\n         31: aload_0\n         32: aload_1\n-        33: invokevirtual #134                // Method println:(Ljava/lang/Appendable;)V\n+        33: invokevirtual #420                // Method println:(Ljava/lang/Appendable;)V\n         36: return\n       LineNumberTable:\n         line 1890: 0\n         line 1891: 8\n         line 1890: 25\n         line 1893: 31\n         line 1894: 36\n@@ -2983,41 +2979,41 @@\n     Code:\n       stack=6, locals=12, args_size=3\n          0: iconst_0\n          1: istore_3\n          2: iconst_0\n          3: istore        4\n          5: aload_1\n-         6: invokeinterface #38,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         6: invokeinterface #126,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         11: istore        5\n         13: aload_0\n-        14: invokevirtual #116                // Method getDelimiterString:()Ljava/lang/String;\n-        17: invokevirtual #135                // Method java/lang/String.toCharArray:()[C\n+        14: invokevirtual #359                // Method getDelimiterString:()Ljava/lang/String;\n+        17: invokevirtual #424                // Method java/lang/String.toCharArray:()[C\n         20: astore        6\n         22: aload         6\n         24: arraylength\n         25: istore        7\n         27: aload_0\n-        28: invokevirtual #136                // Method getEscapeCharacter:()Ljava/lang/Character;\n-        31: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n+        28: invokevirtual #428                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        31: invokevirtual #103                // Method java/lang/Character.charValue:()C\n         34: istore        8\n         36: iload         4\n         38: iload         5\n         40: if_icmpge     217\n         43: aload_1\n         44: iload         4\n-        46: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        46: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n         51: istore        9\n         53: aload_0\n         54: iload         9\n         56: aload_1\n         57: iload         4\n         59: aload         6\n         61: iload         7\n-        63: invokespecial #137                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+        63: invokespecial #432                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n         66: istore        10\n         68: iload         9\n         70: bipush        13\n         72: if_icmpeq     94\n         75: iload         9\n         77: bipush        10\n         79: if_icmpeq     94\n@@ -3029,54 +3025,54 @@\n         94: iload         4\n         96: iload_3\n         97: if_icmple     111\n        100: aload_2\n        101: aload_1\n        102: iload_3\n        103: iload         4\n-       105: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       105: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        110: pop\n        111: iload         9\n        113: bipush        10\n        115: if_icmpne     125\n        118: bipush        110\n        120: istore        9\n        122: goto          136\n        125: iload         9\n        127: bipush        13\n        129: if_icmpne     136\n        132: bipush        114\n        134: istore        9\n        136: aload_2\n        137: iload         8\n-       139: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       139: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        144: pop\n        145: aload_2\n        146: iload         9\n-       148: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       148: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        153: pop\n        154: iload         10\n        156: ifeq          206\n        159: iconst_1\n        160: istore        11\n        162: iload         11\n        164: iload         7\n        166: if_icmpge     206\n        169: iinc          4, 1\n        172: aload_1\n        173: iload         4\n-       175: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       175: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        180: istore        9\n        182: aload_2\n        183: iload         8\n-       185: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       185: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        190: pop\n        191: aload_2\n        192: iload         9\n-       194: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       194: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n        199: pop\n        200: iinc          11, 1\n        203: goto          162\n        206: iload         4\n        208: iconst_1\n        209: iadd\n        210: istore_3\n@@ -3085,15 +3081,15 @@\n        217: iload         4\n        219: iload_3\n        220: if_icmple     234\n        223: aload_2\n        224: aload_1\n        225: iload_3\n        226: iload         4\n-       228: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       228: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        233: pop\n        234: return\n       LineNumberTable:\n         line 1900: 0\n         line 1901: 2\n         line 1902: 5\n         line 1904: 13\n@@ -3166,69 +3162,69 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=8, locals=13, args_size=3\n          0: iconst_0\n          1: istore_3\n          2: iconst_0\n          3: istore        4\n-         5: new           #138                // class org/apache/commons/csv/ExtendedBufferedReader\n+         5: new           #436                // class org/apache/commons/csv/ExtendedBufferedReader\n          8: dup\n          9: aload_1\n-        10: invokespecial #139                // Method org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+        10: invokespecial #438                // Method org/apache/commons/csv/ExtendedBufferedReader.\"<init>\":(Ljava/io/Reader;)V\n         13: astore        5\n         15: aload_0\n-        16: invokevirtual #116                // Method getDelimiterString:()Ljava/lang/String;\n-        19: invokevirtual #135                // Method java/lang/String.toCharArray:()[C\n+        16: invokevirtual #359                // Method getDelimiterString:()Ljava/lang/String;\n+        19: invokevirtual #424                // Method java/lang/String.toCharArray:()[C\n         22: astore        6\n         24: aload         6\n         26: arraylength\n         27: istore        7\n         29: aload_0\n-        30: invokevirtual #136                // Method getEscapeCharacter:()Ljava/lang/Character;\n-        33: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n+        30: invokevirtual #428                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        33: invokevirtual #103                // Method java/lang/Character.charValue:()C\n         36: istore        8\n-        38: new           #67                 // class java/lang/StringBuilder\n+        38: new           #229                // class java/lang/StringBuilder\n         41: dup\n         42: sipush        4096\n-        45: invokespecial #141                // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        45: invokespecial #441                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         48: astore        9\n         50: iconst_m1\n         51: aload         5\n-        53: invokevirtual #142                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n+        53: invokevirtual #444                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n         56: dup\n         57: istore        10\n         59: if_icmpeq     271\n         62: aload         9\n         64: iload         10\n         66: i2c\n-        67: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        67: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         70: pop\n         71: aload_0\n         72: iload         10\n         74: i2c\n-        75: new           #67                 // class java/lang/StringBuilder\n+        75: new           #229                // class java/lang/StringBuilder\n         78: dup\n-        79: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        79: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n         82: aload         9\n-        84: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        87: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        90: new           #28                 // class java/lang/String\n+        84: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        87: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        90: new           #93                 // class java/lang/String\n         93: dup\n         94: aload         5\n         96: iload         7\n         98: iconst_1\n         99: isub\n-       100: invokevirtual #144                // Method org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n-       103: invokespecial #145                // Method java/lang/String.\"<init>\":([C)V\n-       106: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       109: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       100: invokevirtual #450                // Method org/apache/commons/csv/ExtendedBufferedReader.lookAhead:(I)[C\n+       103: invokespecial #454                // Method java/lang/String.\"<init>\":([C)V\n+       106: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       109: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        112: iload         4\n        114: aload         6\n        116: iload         7\n-       118: invokespecial #137                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+       118: invokespecial #432                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n        121: istore        11\n        123: iload         10\n        125: bipush        13\n        127: if_icmpeq     149\n        130: iload         10\n        132: bipush        10\n        134: if_icmpeq     149\n@@ -3240,20 +3236,20 @@\n        149: iload         4\n        151: iload_3\n        152: if_icmple     177\n        155: aload_0\n        156: aload         9\n        158: iload_3\n        159: iload         4\n-       161: invokevirtual #146                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+       161: invokevirtual #457                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n        164: aload_2\n-       165: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       165: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        168: aload         9\n        170: iconst_0\n-       171: invokevirtual #147                // Method java/lang/StringBuilder.setLength:(I)V\n+       171: invokevirtual #458                // Method java/lang/StringBuilder.setLength:(I)V\n        174: iconst_m1\n        175: istore        4\n        177: iload         10\n        179: bipush        10\n        181: if_icmpne     191\n        184: bipush        110\n        186: istore        10\n@@ -3262,39 +3258,39 @@\n        193: bipush        13\n        195: if_icmpne     202\n        198: bipush        114\n        200: istore        10\n        202: aload_0\n        203: iload         8\n        205: aload_2\n-       206: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+       206: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n        209: aload_0\n        210: iload         10\n        212: i2c\n        213: aload_2\n-       214: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+       214: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n        217: iload         11\n        219: ifeq          260\n        222: iconst_1\n        223: istore        12\n        225: iload         12\n        227: iload         7\n        229: if_icmpge     260\n        232: aload         5\n-       234: invokevirtual #142                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n+       234: invokevirtual #444                // Method org/apache/commons/csv/ExtendedBufferedReader.read:()I\n        237: istore        10\n        239: aload_0\n        240: iload         8\n        242: aload_2\n-       243: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+       243: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n        246: aload_0\n        247: iload         10\n        249: i2c\n        250: aload_2\n-       251: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+       251: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n        254: iinc          12, 1\n        257: goto          225\n        260: iload         4\n        262: iconst_1\n        263: iadd\n        264: istore_3\n        265: iinc          4, 1\n@@ -3302,17 +3298,17 @@\n        271: iload         4\n        273: iload_3\n        274: if_icmple     290\n        277: aload_0\n        278: aload         9\n        280: iload_3\n        281: iload         4\n-       283: invokevirtual #146                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+       283: invokevirtual #457                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n        286: aload_2\n-       287: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       287: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        290: return\n       LineNumberTable:\n         line 1946: 0\n         line 1947: 2\n         line 1950: 5\n         line 1951: 15\n         line 1952: 24\n@@ -3390,94 +3386,94 @@\n          0: iconst_0\n          1: istore        5\n          3: iconst_0\n          4: istore        6\n          6: iconst_0\n          7: istore        7\n          9: aload_2\n-        10: invokeinterface #38,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        10: invokeinterface #126,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         15: istore        8\n         17: aload_0\n-        18: invokevirtual #116                // Method getDelimiterString:()Ljava/lang/String;\n-        21: invokevirtual #135                // Method java/lang/String.toCharArray:()[C\n+        18: invokevirtual #359                // Method getDelimiterString:()Ljava/lang/String;\n+        21: invokevirtual #424                // Method java/lang/String.toCharArray:()[C\n         24: astore        9\n         26: aload         9\n         28: arraylength\n         29: istore        10\n         31: aload_0\n-        32: invokevirtual #149                // Method getQuoteCharacter:()Ljava/lang/Character;\n-        35: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n+        32: invokevirtual #464                // Method getQuoteCharacter:()Ljava/lang/Character;\n+        35: invokevirtual #103                // Method java/lang/Character.charValue:()C\n         38: istore        11\n         40: aload_0\n-        41: invokevirtual #119                // Method isEscapeCharacterSet:()Z\n+        41: invokevirtual #368                // Method isEscapeCharacterSet:()Z\n         44: ifeq          57\n         47: aload_0\n-        48: invokevirtual #136                // Method getEscapeCharacter:()Ljava/lang/Character;\n-        51: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n+        48: invokevirtual #428                // Method getEscapeCharacter:()Ljava/lang/Character;\n+        51: invokevirtual #103                // Method java/lang/Character.charValue:()C\n         54: goto          59\n         57: iload         11\n         59: istore        12\n         61: aload_0\n-        62: invokevirtual #150                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+        62: invokevirtual #467                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n         65: astore        13\n         67: aload         13\n         69: ifnonnull     77\n-        72: getstatic     #151                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+        72: getstatic     #471                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n         75: astore        13\n-        77: getstatic     #152                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n+        77: getstatic     #474                // Field org/apache/commons/csv/CSVFormat$1.$SwitchMap$org$apache$commons$csv$QuoteMode:[I\n         80: aload         13\n-        82: invokevirtual #153                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n+        82: invokevirtual #480                // Method org/apache/commons/csv/QuoteMode.ordinal:()I\n         85: iaload\n         86: tableswitch   { // 1 to 5\n                        1: 120\n                        2: 120\n                        3: 126\n                        4: 143\n                        5: 150\n                  default: 311\n             }\n        120: iconst_1\n        121: istore        5\n-       123: goto          339\n+       123: goto          340\n        126: aload_1\n-       127: instanceof    #154                // class java/lang/Number\n+       127: instanceof    #483                // class java/lang/Number\n        130: ifne          137\n        133: iconst_1\n        134: goto          138\n        137: iconst_0\n        138: istore        5\n-       140: goto          339\n+       140: goto          340\n        143: aload_0\n        144: aload_2\n        145: aload_3\n-       146: invokespecial #120                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       146: invokespecial #371                // Method printWithEscapes:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        149: return\n        150: iload         8\n        152: ifgt          166\n        155: iload         4\n        157: ifeq          293\n        160: iconst_1\n        161: istore        5\n        163: goto          293\n        166: aload_2\n        167: iload         7\n-       169: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       169: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        174: istore        14\n        176: iload         14\n        178: bipush        35\n        180: if_icmpgt     189\n        183: iconst_1\n        184: istore        5\n        186: goto          293\n        189: iload         7\n        191: iload         8\n        193: if_icmpge     262\n        196: aload_2\n        197: iload         7\n-       199: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       199: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        204: istore        14\n        206: iload         14\n        208: bipush        10\n        210: if_icmpeq     250\n        213: iload         14\n        215: bipush        13\n        217: if_icmpeq     250\n@@ -3489,108 +3485,108 @@\n        231: if_icmpeq     250\n        234: aload_0\n        235: iload         14\n        237: aload_2\n        238: iload         7\n        240: aload         9\n        242: iload         10\n-       244: invokespecial #137                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n+       244: invokespecial #432                // Method isDelimiter:(CLjava/lang/CharSequence;I[CI)Z\n        247: ifeq          256\n        250: iconst_1\n        251: istore        5\n        253: goto          262\n        256: iinc          7, 1\n        259: goto          189\n        262: iload         5\n        264: ifne          293\n        267: iload         8\n        269: iconst_1\n        270: isub\n        271: istore        7\n        273: aload_2\n        274: iload         7\n-       276: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       276: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n        281: istore        14\n        283: iload         14\n        285: bipush        32\n        287: if_icmpgt     293\n        290: iconst_1\n        291: istore        5\n        293: iload         5\n-       295: ifne          339\n+       295: ifne          340\n        298: aload_3\n        299: aload_2\n        300: iload         6\n        302: iload         8\n-       304: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       304: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n        309: pop\n        310: return\n-       311: new           #92                 // class java/lang/IllegalStateException\n+       311: new           #302                // class java/lang/IllegalStateException\n        314: dup\n-       315: new           #67                 // class java/lang/StringBuilder\n+       315: new           #229                // class java/lang/StringBuilder\n        318: dup\n-       319: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       322: ldc           #155                // String Unexpected Quote value:\n-       324: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       327: aload         13\n-       329: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       332: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       335: invokespecial #156                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       338: athrow\n-       339: iload         5\n-       341: ifne          357\n-       344: aload_3\n-       345: aload_2\n-       346: iload         6\n-       348: iload         8\n-       350: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       355: pop\n-       356: return\n-       357: aload_3\n-       358: iload         11\n-       360: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       365: pop\n-       366: iload         7\n-       368: iload         8\n-       370: if_icmpge     428\n-       373: aload_2\n-       374: iload         7\n-       376: invokeinterface #39,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-       381: istore        14\n-       383: iload         14\n-       385: iload         11\n-       387: if_icmpeq     397\n-       390: iload         14\n-       392: iload         12\n-       394: if_icmpne     422\n-       397: aload_3\n-       398: aload_2\n-       399: iload         6\n-       401: iload         7\n-       403: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       408: pop\n-       409: aload_3\n-       410: iload         12\n-       412: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       417: pop\n-       418: iload         7\n-       420: istore        6\n-       422: iinc          7, 1\n-       425: goto          366\n-       428: aload_3\n-       429: aload_2\n-       430: iload         6\n-       432: iload         7\n-       434: invokeinterface #121,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-       439: pop\n-       440: aload_3\n-       441: iload         11\n-       443: invokeinterface #72,  2           // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n-       448: pop\n-       449: return\n+       319: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+       322: ldc_w         #485                // String Unexpected Quote value:\n+       325: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       328: aload         13\n+       330: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       333: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       336: invokespecial #487                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       339: athrow\n+       340: iload         5\n+       342: ifne          358\n+       345: aload_3\n+       346: aload_2\n+       347: iload         6\n+       349: iload         8\n+       351: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       356: pop\n+       357: return\n+       358: aload_3\n+       359: iload         11\n+       361: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       366: pop\n+       367: iload         7\n+       369: iload         8\n+       371: if_icmpge     429\n+       374: aload_2\n+       375: iload         7\n+       377: invokeinterface #132,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+       382: istore        14\n+       384: iload         14\n+       386: iload         11\n+       388: if_icmpeq     398\n+       391: iload         14\n+       393: iload         12\n+       395: if_icmpne     423\n+       398: aload_3\n+       399: aload_2\n+       400: iload         6\n+       402: iload         7\n+       404: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       409: pop\n+       410: aload_3\n+       411: iload         12\n+       413: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       418: pop\n+       419: iload         7\n+       421: istore        6\n+       423: iinc          7, 1\n+       426: goto          367\n+       429: aload_3\n+       430: aload_2\n+       431: iload         6\n+       433: iload         7\n+       435: invokeinterface #375,  4          // InterfaceMethod java/lang/Appendable.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+       440: pop\n+       441: aload_3\n+       442: iload         11\n+       444: invokeinterface #241,  2          // InterfaceMethod java/lang/Appendable.append:(C)Ljava/lang/Appendable;\n+       449: pop\n+       450: return\n       LineNumberTable:\n         line 2001: 0\n         line 2002: 3\n         line 2003: 6\n         line 2004: 9\n         line 2006: 17\n         line 2007: 26\n@@ -3623,47 +3619,47 @@\n         line 2059: 273\n         line 2062: 283\n         line 2063: 290\n         line 2069: 293\n         line 2071: 298\n         line 2072: 310\n         line 2076: 311\n-        line 2079: 339\n-        line 2081: 344\n-        line 2082: 356\n-        line 2086: 357\n-        line 2090: 366\n-        line 2091: 373\n-        line 2092: 383\n-        line 2094: 397\n-        line 2095: 409\n-        line 2096: 418\n-        line 2098: 422\n-        line 2099: 425\n-        line 2102: 428\n-        line 2103: 440\n-        line 2104: 449\n+        line 2079: 340\n+        line 2081: 345\n+        line 2082: 357\n+        line 2086: 358\n+        line 2090: 367\n+        line 2091: 374\n+        line 2092: 384\n+        line 2094: 398\n+        line 2095: 410\n+        line 2096: 419\n+        line 2098: 423\n+        line 2099: 426\n+        line 2102: 429\n+        line 2103: 441\n+        line 2104: 450\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n           176     117    14     c   C\n-          383      42    14     c   C\n-            0     450     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            0     450     1 object   Ljava/lang/Object;\n-            0     450     2 charSeq   Ljava/lang/CharSequence;\n-            0     450     3   out   Ljava/lang/Appendable;\n-            0     450     4 newRecord   Z\n-            3     447     5 quote   Z\n-            6     444     6 start   I\n-            9     441     7   pos   I\n-           17     433     8   len   I\n-           26     424     9 delim   [C\n-           31     419    10 delimLength   I\n-           40     410    11 quoteChar   C\n-           61     389    12 escapeChar   C\n-           67     383    13 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n+          384      42    14     c   C\n+            0     451     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            0     451     1 object   Ljava/lang/Object;\n+            0     451     2 charSeq   Ljava/lang/CharSequence;\n+            0     451     3   out   Ljava/lang/Appendable;\n+            0     451     4 newRecord   Z\n+            3     448     5 quote   Z\n+            6     445     6 start   I\n+            9     442     7   pos   I\n+           17     434     8   len   I\n+           26     425     9 delim   [C\n+           31     420    10 delimLength   I\n+           40     411    11 quoteChar   C\n+           61     390    12 escapeChar   C\n+           67     384    13 quoteModePolicy   Lorg/apache/commons/csv/QuoteMode;\n       StackMapTable: number_of_entries = 22\n         frame_type = 255 /* full_frame */\n           offset_delta = 57\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/lang/Object, class java/lang/CharSequence, class java/lang/Appendable, int, int, int, int, int, class \"[C\", int, int ]\n           stack = []\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ int ]\n@@ -3683,15 +3679,15 @@\n           locals = [ int ]\n         frame_type = 60 /* same */\n         frame_type = 5 /* same */\n         frame_type = 5 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 30\n         frame_type = 17 /* same */\n-        frame_type = 27 /* same */\n+        frame_type = 28 /* same */\n         frame_type = 17 /* same */\n         frame_type = 8 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 30\n           locals = [ int ]\n         frame_type = 24 /* same */\n         frame_type = 250 /* chop */\n@@ -3701,89 +3697,89 @@\n \n   private void printWithQuotes(java.io.Reader, java.lang.Appendable) throws java.io.IOException;\n     descriptor: (Ljava/io/Reader;Ljava/lang/Appendable;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: aload_0\n-         1: invokevirtual #150                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n-         4: getstatic     #157                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+         1: invokevirtual #467                // Method getQuoteMode:()Lorg/apache/commons/csv/QuoteMode;\n+         4: getstatic     #490                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n          7: if_acmpne     17\n         10: aload_0\n         11: aload_1\n         12: aload_2\n-        13: invokespecial #127                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n+        13: invokespecial #394                // Method printWithEscapes:(Ljava/io/Reader;Ljava/lang/Appendable;)V\n         16: return\n         17: iconst_0\n         18: istore_3\n         19: aload_0\n-        20: invokevirtual #149                // Method getQuoteCharacter:()Ljava/lang/Character;\n-        23: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n+        20: invokevirtual #464                // Method getQuoteCharacter:()Ljava/lang/Character;\n+        23: invokevirtual #103                // Method java/lang/Character.charValue:()C\n         26: istore        4\n-        28: new           #67                 // class java/lang/StringBuilder\n+        28: new           #229                // class java/lang/StringBuilder\n         31: dup\n         32: sipush        4096\n-        35: invokespecial #141                // Method java/lang/StringBuilder.\"<init>\":(I)V\n+        35: invokespecial #441                // Method java/lang/StringBuilder.\"<init>\":(I)V\n         38: astore        5\n         40: aload_0\n         41: iload         4\n         43: aload_2\n-        44: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+        44: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n         47: iconst_m1\n         48: aload_1\n-        49: invokevirtual #158                // Method java/io/Reader.read:()I\n+        49: invokevirtual #493                // Method java/io/Reader.read:()I\n         52: dup\n         53: istore        6\n         55: if_icmpeq     119\n         58: aload         5\n         60: iload         6\n         62: i2c\n-        63: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         66: pop\n         67: iload         6\n         69: iload         4\n         71: if_icmpne     113\n         74: iload_3\n         75: ifle          105\n         78: aload_0\n         79: aload         5\n         81: iconst_0\n         82: iload_3\n-        83: invokevirtual #146                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+        83: invokevirtual #457                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n         86: aload_2\n-        87: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+        87: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n         90: aload_0\n         91: iload         4\n         93: aload_2\n-        94: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+        94: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n         97: aload         5\n         99: iconst_0\n-       100: invokevirtual #147                // Method java/lang/StringBuilder.setLength:(I)V\n+       100: invokevirtual #458                // Method java/lang/StringBuilder.setLength:(I)V\n        103: iconst_m1\n        104: istore_3\n        105: aload_0\n        106: iload         6\n        108: i2c\n        109: aload_2\n-       110: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+       110: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n        113: iinc          3, 1\n        116: goto          47\n        119: iload_3\n        120: ifle          135\n        123: aload_0\n        124: aload         5\n        126: iconst_0\n        127: iload_3\n-       128: invokevirtual #146                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n+       128: invokevirtual #457                // Method java/lang/StringBuilder.substring:(II)Ljava/lang/String;\n        131: aload_2\n-       132: invokespecial #125                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n+       132: invokespecial #389                // Method append:(Ljava/lang/CharSequence;Ljava/lang/Appendable;)V\n        135: aload_0\n        136: iload         4\n        138: aload_2\n-       139: invokespecial #148                // Method append:(CLjava/lang/Appendable;)V\n+       139: invokespecial #461                // Method append:(CLjava/lang/Appendable;)V\n        142: return\n       LineNumberTable:\n         line 2113: 0\n         line 2114: 10\n         line 2115: 16\n         line 2118: 17\n         line 2120: 19\n@@ -3827,1537 +3823,1537 @@\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #67                 // class java/lang/StringBuilder\n+         0: new           #229                // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #159                // String Delimiter=<\n-        11: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: aload_0\n-        15: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        18: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        21: bipush        62\n-        23: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        26: pop\n-        27: aload_0\n-        28: invokevirtual #119                // Method isEscapeCharacterSet:()Z\n-        31: ifeq          60\n-        34: aload_1\n-        35: bipush        32\n-        37: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        40: pop\n-        41: aload_1\n-        42: ldc           #160                // String Escape=<\n-        44: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: aload_0\n-        48: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        51: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        54: bipush        62\n-        56: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        59: pop\n-        60: aload_0\n-        61: invokevirtual #117                // Method isQuoteCharacterSet:()Z\n-        64: ifeq          93\n-        67: aload_1\n-        68: bipush        32\n-        70: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        73: pop\n-        74: aload_1\n-        75: ldc           #161                // String QuoteChar=<\n-        77: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        80: aload_0\n-        81: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        84: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        87: bipush        62\n-        89: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        92: pop\n-        93: aload_0\n-        94: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-        97: ifnull        126\n-       100: aload_1\n-       101: bipush        32\n-       103: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       106: pop\n-       107: aload_1\n-       108: ldc           #162                // String QuoteMode=<\n-       110: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       113: aload_0\n-       114: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-       117: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       120: bipush        62\n-       122: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       125: pop\n-       126: aload_0\n-       127: invokevirtual #163                // Method isCommentMarkerSet:()Z\n-       130: ifeq          159\n-       133: aload_1\n-       134: bipush        32\n-       136: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       139: pop\n-       140: aload_1\n-       141: ldc           #164                // String CommentStart=<\n-       143: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       146: aload_0\n-       147: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       150: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       153: bipush        62\n-       155: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       158: pop\n-       159: aload_0\n-       160: invokevirtual #165                // Method isNullStringSet:()Z\n-       163: ifeq          192\n-       166: aload_1\n-       167: bipush        32\n-       169: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       172: pop\n-       173: aload_1\n-       174: ldc           #166                // String NullString=<\n-       176: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       179: aload_0\n-       180: getfield      #14                 // Field nullString:Ljava/lang/String;\n-       183: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       186: bipush        62\n-       188: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       191: pop\n-       192: aload_0\n-       193: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-       196: ifnull        225\n-       199: aload_1\n-       200: bipush        32\n-       202: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       205: pop\n-       206: aload_1\n-       207: ldc           #167                // String RecordSeparator=<\n-       209: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       212: aload_0\n-       213: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n-       216: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       219: bipush        62\n-       221: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       224: pop\n-       225: aload_0\n-       226: invokevirtual #168                // Method getIgnoreEmptyLines:()Z\n-       229: ifeq          239\n-       232: aload_1\n-       233: ldc           #169                // String  EmptyLines:ignored\n-       235: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       238: pop\n-       239: aload_0\n-       240: invokevirtual #170                // Method getIgnoreSurroundingSpaces:()Z\n-       243: ifeq          253\n-       246: aload_1\n-       247: ldc           #171                // String  SurroundingSpaces:ignored\n-       249: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       252: pop\n-       253: aload_0\n-       254: invokevirtual #172                // Method getIgnoreHeaderCase:()Z\n-       257: ifeq          267\n-       260: aload_1\n-       261: ldc           #173                // String  IgnoreHeaderCase:ignored\n-       263: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       266: pop\n-       267: aload_1\n-       268: ldc           #174                // String  SkipHeaderRecord:\n-       270: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       273: aload_0\n-       274: getfield      #11                 // Field skipHeaderRecord:Z\n-       277: invokevirtual #175                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n-       280: pop\n-       281: aload_0\n-       282: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-       285: ifnull        312\n-       288: aload_1\n-       289: bipush        32\n-       291: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       294: pop\n-       295: aload_1\n-       296: ldc           #176                // String HeaderComments:\n-       298: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       301: aload_0\n-       302: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n-       305: invokestatic  #177                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       308: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       311: pop\n-       312: aload_0\n-       313: getfield      #12                 // Field header:[Ljava/lang/String;\n-       316: ifnull        343\n-       319: aload_1\n-       320: bipush        32\n-       322: invokevirtual #143                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-       325: pop\n-       326: aload_1\n-       327: ldc           #178                // String Header:\n-       329: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       332: aload_0\n-       333: getfield      #12                 // Field header:[Ljava/lang/String;\n-       336: invokestatic  #177                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       339: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       342: pop\n-       343: aload_1\n-       344: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       347: areturn\n+         9: ldc_w         #494                // String Delimiter=<\n+        12: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: aload_0\n+        16: getfield      #76                 // Field delimiter:Ljava/lang/String;\n+        19: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: bipush        62\n+        24: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        27: pop\n+        28: aload_0\n+        29: invokevirtual #368                // Method isEscapeCharacterSet:()Z\n+        32: ifeq          62\n+        35: aload_1\n+        36: bipush        32\n+        38: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        41: pop\n+        42: aload_1\n+        43: ldc_w         #496                // String Escape=<\n+        46: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        49: aload_0\n+        50: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+        53: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        56: bipush        62\n+        58: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        61: pop\n+        62: aload_0\n+        63: invokevirtual #362                // Method isQuoteCharacterSet:()Z\n+        66: ifeq          96\n+        69: aload_1\n+        70: bipush        32\n+        72: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        75: pop\n+        76: aload_1\n+        77: ldc_w         #498                // String QuoteChar=<\n+        80: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        83: aload_0\n+        84: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+        87: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        90: bipush        62\n+        92: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        95: pop\n+        96: aload_0\n+        97: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       100: ifnull        130\n+       103: aload_1\n+       104: bipush        32\n+       106: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       109: pop\n+       110: aload_1\n+       111: ldc_w         #500                // String QuoteMode=<\n+       114: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       117: aload_0\n+       118: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       121: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       124: bipush        62\n+       126: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       129: pop\n+       130: aload_0\n+       131: invokevirtual #502                // Method isCommentMarkerSet:()Z\n+       134: ifeq          164\n+       137: aload_1\n+       138: bipush        32\n+       140: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       143: pop\n+       144: aload_1\n+       145: ldc_w         #505                // String CommentStart=<\n+       148: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       151: aload_0\n+       152: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       155: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       158: bipush        62\n+       160: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       163: pop\n+       164: aload_0\n+       165: invokevirtual #507                // Method isNullStringSet:()Z\n+       168: ifeq          198\n+       171: aload_1\n+       172: bipush        32\n+       174: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       177: pop\n+       178: aload_1\n+       179: ldc_w         #510                // String NullString=<\n+       182: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       185: aload_0\n+       186: getfield      #47                 // Field nullString:Ljava/lang/String;\n+       189: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       192: bipush        62\n+       194: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       197: pop\n+       198: aload_0\n+       199: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n+       202: ifnull        232\n+       205: aload_1\n+       206: bipush        32\n+       208: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       211: pop\n+       212: aload_1\n+       213: ldc_w         #512                // String RecordSeparator=<\n+       216: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       219: aload_0\n+       220: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n+       223: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       226: bipush        62\n+       228: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       231: pop\n+       232: aload_0\n+       233: invokevirtual #514                // Method getIgnoreEmptyLines:()Z\n+       236: ifeq          247\n+       239: aload_1\n+       240: ldc_w         #517                // String  EmptyLines:ignored\n+       243: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       246: pop\n+       247: aload_0\n+       248: invokevirtual #519                // Method getIgnoreSurroundingSpaces:()Z\n+       251: ifeq          262\n+       254: aload_1\n+       255: ldc_w         #522                // String  SurroundingSpaces:ignored\n+       258: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       261: pop\n+       262: aload_0\n+       263: invokevirtual #524                // Method getIgnoreHeaderCase:()Z\n+       266: ifeq          277\n+       269: aload_1\n+       270: ldc_w         #527                // String  IgnoreHeaderCase:ignored\n+       273: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       276: pop\n+       277: aload_1\n+       278: ldc_w         #529                // String  SkipHeaderRecord:\n+       281: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       284: aload_0\n+       285: getfield      #37                 // Field skipHeaderRecord:Z\n+       288: invokevirtual #531                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;\n+       291: pop\n+       292: aload_0\n+       293: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n+       296: ifnull        324\n+       299: aload_1\n+       300: bipush        32\n+       302: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       305: pop\n+       306: aload_1\n+       307: ldc_w         #534                // String HeaderComments:\n+       310: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       313: aload_0\n+       314: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n+       317: invokestatic  #536                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       320: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       323: pop\n+       324: aload_0\n+       325: getfield      #40                 // Field header:[Ljava/lang/String;\n+       328: ifnull        356\n+       331: aload_1\n+       332: bipush        32\n+       334: invokevirtual #447                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       337: pop\n+       338: aload_1\n+       339: ldc_w         #539                // String Header:\n+       342: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       345: aload_0\n+       346: getfield      #40                 // Field header:[Ljava/lang/String;\n+       349: invokestatic  #536                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       352: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       355: pop\n+       356: aload_1\n+       357: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       360: areturn\n       LineNumberTable:\n         line 2152: 0\n         line 2153: 8\n-        line 2154: 27\n-        line 2155: 34\n-        line 2156: 41\n-        line 2158: 60\n-        line 2159: 67\n-        line 2160: 74\n-        line 2162: 93\n-        line 2163: 100\n-        line 2164: 107\n-        line 2166: 126\n-        line 2167: 133\n-        line 2168: 140\n-        line 2170: 159\n-        line 2171: 166\n-        line 2172: 173\n-        line 2174: 192\n-        line 2175: 199\n-        line 2176: 206\n-        line 2178: 225\n-        line 2179: 232\n-        line 2181: 239\n-        line 2182: 246\n-        line 2184: 253\n-        line 2185: 260\n-        line 2187: 267\n-        line 2188: 281\n-        line 2189: 288\n-        line 2190: 295\n-        line 2192: 312\n-        line 2193: 319\n-        line 2194: 326\n-        line 2196: 343\n+        line 2154: 28\n+        line 2155: 35\n+        line 2156: 42\n+        line 2158: 62\n+        line 2159: 69\n+        line 2160: 76\n+        line 2162: 96\n+        line 2163: 103\n+        line 2164: 110\n+        line 2166: 130\n+        line 2167: 137\n+        line 2168: 144\n+        line 2170: 164\n+        line 2171: 171\n+        line 2172: 178\n+        line 2174: 198\n+        line 2175: 205\n+        line 2176: 212\n+        line 2178: 232\n+        line 2179: 239\n+        line 2181: 247\n+        line 2182: 254\n+        line 2184: 262\n+        line 2185: 269\n+        line 2187: 277\n+        line 2188: 292\n+        line 2189: 299\n+        line 2190: 306\n+        line 2192: 324\n+        line 2193: 331\n+        line 2194: 338\n+        line 2196: 356\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     348     0  this   Lorg/apache/commons/csv/CSVFormat;\n-            8     340     1    sb   Ljava/lang/StringBuilder;\n+            0     361     0  this   Lorg/apache/commons/csv/CSVFormat;\n+            8     353     1    sb   Ljava/lang/StringBuilder;\n       StackMapTable: number_of_entries = 11\n         frame_type = 252 /* append */\n-          offset_delta = 60\n+          offset_delta = 62\n           locals = [ class java/lang/StringBuilder ]\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 32 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 13 /* same */\n-        frame_type = 44 /* same */\n-        frame_type = 30 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 33 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 14 /* same */\n+        frame_type = 46 /* same */\n+        frame_type = 31 /* same */\n \n   private void validate() throws java.lang.IllegalArgumentException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=6, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-         4: invokestatic  #2                  // Method containsLineBreak:(Ljava/lang/String;)Z\n-         7: ifeq          20\n-        10: new           #179                // class java/lang/IllegalArgumentException\n+         1: getfield      #76                 // Field delimiter:Ljava/lang/String;\n+         4: invokestatic  #3                  // Method containsLineBreak:(Ljava/lang/String;)Z\n+         7: ifeq          21\n+        10: new           #541                // class java/lang/IllegalArgumentException\n         13: dup\n-        14: ldc           #180                // String The delimiter cannot be a line break\n-        16: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        19: athrow\n-        20: aload_0\n-        21: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        24: ifnull        79\n-        27: aload_0\n-        28: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        31: aload_0\n-        32: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        35: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n-        38: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n-        41: ifeq          79\n-        44: new           #179                // class java/lang/IllegalArgumentException\n-        47: dup\n-        48: new           #67                 // class java/lang/StringBuilder\n-        51: dup\n-        52: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        55: ldc           #182                // String The quoteChar character and the delimiter cannot be the same (\\'\n-        57: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        60: aload_0\n-        61: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-        64: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        67: ldc           #183                // String \\')\n-        69: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        78: athrow\n-        79: aload_0\n-        80: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        83: ifnull        138\n-        86: aload_0\n-        87: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-        90: aload_0\n-        91: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-        94: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n-        97: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n-       100: ifeq          138\n-       103: new           #179                // class java/lang/IllegalArgumentException\n-       106: dup\n-       107: new           #67                 // class java/lang/StringBuilder\n-       110: dup\n-       111: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       114: ldc           #184                // String The escape character and the delimiter cannot be the same (\\'\n-       116: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       119: aload_0\n-       120: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       123: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       126: ldc           #183                // String \\')\n-       128: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       131: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       134: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       137: athrow\n-       138: aload_0\n-       139: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       142: ifnull        197\n-       145: aload_0\n-       146: getfield      #23                 // Field delimiter:Ljava/lang/String;\n-       149: aload_0\n-       150: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       153: invokevirtual #31                 // Method java/lang/Character.charValue:()C\n-       156: invokestatic  #30                 // Method contains:(Ljava/lang/String;C)Z\n-       159: ifeq          197\n-       162: new           #179                // class java/lang/IllegalArgumentException\n-       165: dup\n-       166: new           #67                 // class java/lang/StringBuilder\n-       169: dup\n-       170: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       173: ldc           #185                // String The comment start character and the delimiter cannot be the same (\\'\n-       175: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       178: aload_0\n-       179: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       182: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       185: ldc           #183                // String \\')\n-       187: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       190: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       193: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       196: athrow\n-       197: aload_0\n-       198: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       201: ifnull        253\n+        14: ldc_w         #543                // String The delimiter cannot be a line break\n+        17: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        20: athrow\n+        21: aload_0\n+        22: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+        25: ifnull        82\n+        28: aload_0\n+        29: getfield      #76                 // Field delimiter:Ljava/lang/String;\n+        32: aload_0\n+        33: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+        36: invokevirtual #103                // Method java/lang/Character.charValue:()C\n+        39: invokestatic  #99                 // Method contains:(Ljava/lang/String;C)Z\n+        42: ifeq          82\n+        45: new           #541                // class java/lang/IllegalArgumentException\n+        48: dup\n+        49: new           #229                // class java/lang/StringBuilder\n+        52: dup\n+        53: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+        56: ldc_w         #546                // String The quoteChar character and the delimiter cannot be the same (\\'\n+        59: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        62: aload_0\n+        63: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+        66: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        69: ldc_w         #548                // String \\')\n+        72: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        75: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        78: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        81: athrow\n+        82: aload_0\n+        83: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+        86: ifnull        143\n+        89: aload_0\n+        90: getfield      #76                 // Field delimiter:Ljava/lang/String;\n+        93: aload_0\n+        94: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+        97: invokevirtual #103                // Method java/lang/Character.charValue:()C\n+       100: invokestatic  #99                 // Method contains:(Ljava/lang/String;C)Z\n+       103: ifeq          143\n+       106: new           #541                // class java/lang/IllegalArgumentException\n+       109: dup\n+       110: new           #229                // class java/lang/StringBuilder\n+       113: dup\n+       114: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+       117: ldc_w         #550                // String The escape character and the delimiter cannot be the same (\\'\n+       120: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       123: aload_0\n+       124: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+       127: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       130: ldc_w         #548                // String \\')\n+       133: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       136: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       139: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       142: athrow\n+       143: aload_0\n+       144: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       147: ifnull        204\n+       150: aload_0\n+       151: getfield      #76                 // Field delimiter:Ljava/lang/String;\n+       154: aload_0\n+       155: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       158: invokevirtual #103                // Method java/lang/Character.charValue:()C\n+       161: invokestatic  #99                 // Method contains:(Ljava/lang/String;C)Z\n+       164: ifeq          204\n+       167: new           #541                // class java/lang/IllegalArgumentException\n+       170: dup\n+       171: new           #229                // class java/lang/StringBuilder\n+       174: dup\n+       175: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+       178: ldc_w         #552                // String The comment start character and the delimiter cannot be the same (\\'\n+       181: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       184: aload_0\n+       185: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       188: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       191: ldc_w         #548                // String \\')\n+       194: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       197: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       200: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       203: athrow\n        204: aload_0\n-       205: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n-       208: aload_0\n-       209: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       212: invokevirtual #186                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n-       215: ifeq          253\n-       218: new           #179                // class java/lang/IllegalArgumentException\n-       221: dup\n-       222: new           #67                 // class java/lang/StringBuilder\n-       225: dup\n-       226: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       229: ldc           #187                // String The comment start character and the quoteChar cannot be the same (\\'\n-       231: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       234: aload_0\n-       235: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       238: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       241: ldc           #183                // String \\')\n-       243: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       246: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       249: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       252: athrow\n-       253: aload_0\n-       254: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       257: ifnull        309\n-       260: aload_0\n-       261: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       264: aload_0\n-       265: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       268: invokevirtual #186                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n-       271: ifeq          309\n-       274: new           #179                // class java/lang/IllegalArgumentException\n-       277: dup\n-       278: new           #67                 // class java/lang/StringBuilder\n-       281: dup\n-       282: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       285: ldc           #188                // String The comment start and the escape character cannot be the same (\\'\n-       287: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       290: aload_0\n-       291: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n-       294: invokevirtual #69                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       297: ldc           #183                // String \\')\n-       299: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       302: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       305: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       308: athrow\n-       309: aload_0\n-       310: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n-       313: ifnonnull     336\n-       316: aload_0\n-       317: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n-       320: getstatic     #157                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n-       323: if_acmpne     336\n-       326: new           #179                // class java/lang/IllegalArgumentException\n-       329: dup\n-       330: ldc           #189                // String No quotes mode set but no escape character is set\n-       332: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       335: athrow\n-       336: aload_0\n-       337: getfield      #12                 // Field header:[Ljava/lang/String;\n-       340: ifnull        441\n-       343: aload_0\n-       344: getfield      #5                  // Field allowDuplicateHeaderNames:Z\n-       347: ifne          441\n-       350: new           #190                // class java/util/HashSet\n-       353: dup\n-       354: invokespecial #191                // Method java/util/HashSet.\"<init>\":()V\n-       357: astore_1\n-       358: aload_0\n-       359: getfield      #12                 // Field header:[Ljava/lang/String;\n-       362: astore_2\n-       363: aload_2\n-       364: arraylength\n-       365: istore_3\n-       366: iconst_0\n-       367: istore        4\n-       369: iload         4\n-       371: iload_3\n-       372: if_icmpge     441\n+       205: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+       208: ifnull        262\n+       211: aload_0\n+       212: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n+       215: aload_0\n+       216: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       219: invokevirtual #554                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       222: ifeq          262\n+       225: new           #541                // class java/lang/IllegalArgumentException\n+       228: dup\n+       229: new           #229                // class java/lang/StringBuilder\n+       232: dup\n+       233: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+       236: ldc_w         #557                // String The comment start character and the quoteChar cannot be the same (\\'\n+       239: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       242: aload_0\n+       243: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       246: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       249: ldc_w         #548                // String \\')\n+       252: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       255: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       258: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       261: athrow\n+       262: aload_0\n+       263: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+       266: ifnull        320\n+       269: aload_0\n+       270: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+       273: aload_0\n+       274: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       277: invokevirtual #554                // Method java/lang/Character.equals:(Ljava/lang/Object;)Z\n+       280: ifeq          320\n+       283: new           #541                // class java/lang/IllegalArgumentException\n+       286: dup\n+       287: new           #229                // class java/lang/StringBuilder\n+       290: dup\n+       291: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+       294: ldc_w         #559                // String The comment start and the escape character cannot be the same (\\'\n+       297: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       300: aload_0\n+       301: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n+       304: invokevirtual #232                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       307: ldc_w         #548                // String \\')\n+       310: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       313: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       316: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       319: athrow\n+       320: aload_0\n+       321: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n+       324: ifnonnull     348\n+       327: aload_0\n+       328: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+       331: getstatic     #490                // Field org/apache/commons/csv/QuoteMode.NONE:Lorg/apache/commons/csv/QuoteMode;\n+       334: if_acmpne     348\n+       337: new           #541                // class java/lang/IllegalArgumentException\n+       340: dup\n+       341: ldc_w         #561                // String No quotes mode set but no escape character is set\n+       344: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       347: athrow\n+       348: aload_0\n+       349: getfield      #40                 // Field header:[Ljava/lang/String;\n+       352: ifnull        455\n+       355: aload_0\n+       356: getfield      #17                 // Field allowDuplicateHeaderNames:Z\n+       359: ifne          455\n+       362: new           #563                // class java/util/HashSet\n+       365: dup\n+       366: invokespecial #565                // Method java/util/HashSet.\"<init>\":()V\n+       369: astore_1\n+       370: aload_0\n+       371: getfield      #40                 // Field header:[Ljava/lang/String;\n+       374: astore_2\n        375: aload_2\n-       376: iload         4\n-       378: aaload\n-       379: astore        5\n-       381: aload_1\n-       382: aload         5\n-       384: invokeinterface #192,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n-       389: ifne          435\n-       392: new           #179                // class java/lang/IllegalArgumentException\n-       395: dup\n-       396: new           #67                 // class java/lang/StringBuilder\n-       399: dup\n-       400: invokespecial #68                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       403: ldc           #193                // String The header contains a duplicate entry: \\'\n-       405: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       408: aload         5\n-       410: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       413: ldc           #194                // String \\' in\n-       415: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       418: aload_0\n-       419: getfield      #12                 // Field header:[Ljava/lang/String;\n-       422: invokestatic  #177                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n-       425: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       428: invokevirtual #71                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       431: invokespecial #181                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-       434: athrow\n-       435: iinc          4, 1\n-       438: goto          369\n-       441: return\n+       376: arraylength\n+       377: istore_3\n+       378: iconst_0\n+       379: istore        4\n+       381: iload         4\n+       383: iload_3\n+       384: if_icmpge     455\n+       387: aload_2\n+       388: iload         4\n+       390: aaload\n+       391: astore        5\n+       393: aload_1\n+       394: aload         5\n+       396: invokeinterface #566,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n+       401: ifne          449\n+       404: new           #541                // class java/lang/IllegalArgumentException\n+       407: dup\n+       408: new           #229                // class java/lang/StringBuilder\n+       411: dup\n+       412: invokespecial #231                // Method java/lang/StringBuilder.\"<init>\":()V\n+       415: ldc_w         #571                // String The header contains a duplicate entry: \\'\n+       418: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       421: aload         5\n+       423: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       426: ldc_w         #573                // String \\' in\n+       429: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       432: aload_0\n+       433: getfield      #40                 // Field header:[Ljava/lang/String;\n+       436: invokestatic  #536                // Method java/util/Arrays.toString:([Ljava/lang/Object;)Ljava/lang/String;\n+       439: invokevirtual #236                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       442: invokevirtual #239                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       445: invokespecial #545                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       448: athrow\n+       449: iinc          4, 1\n+       452: goto          381\n+       455: return\n       LineNumberTable:\n         line 2205: 0\n         line 2206: 10\n-        line 2209: 20\n-        line 2210: 44\n-        line 2213: 79\n-        line 2214: 103\n-        line 2217: 138\n-        line 2218: 162\n-        line 2221: 197\n-        line 2222: 218\n-        line 2225: 253\n-        line 2226: 274\n-        line 2229: 309\n-        line 2230: 326\n-        line 2234: 336\n-        line 2235: 350\n-        line 2236: 358\n-        line 2237: 381\n-        line 2238: 392\n-        line 2236: 435\n-        line 2242: 441\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-          381      54     5   hdr   Ljava/lang/String;\n-          358      83     1 dupCheck   Ljava/util/Set;\n-            0     442     0  this   Lorg/apache/commons/csv/CSVFormat;\n+        line 2209: 21\n+        line 2210: 45\n+        line 2213: 82\n+        line 2214: 106\n+        line 2217: 143\n+        line 2218: 167\n+        line 2221: 204\n+        line 2222: 225\n+        line 2225: 262\n+        line 2226: 283\n+        line 2229: 320\n+        line 2230: 337\n+        line 2234: 348\n+        line 2235: 362\n+        line 2236: 370\n+        line 2237: 393\n+        line 2238: 404\n+        line 2236: 449\n+        line 2242: 455\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+          393      56     5   hdr   Ljava/lang/String;\n+          370      85     1 dupCheck   Ljava/util/Set;\n+            0     456     0  this   Lorg/apache/commons/csv/CSVFormat;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-          358      83     1 dupCheck   Ljava/util/Set<Ljava/lang/String;>;\n+          370      85     1 dupCheck   Ljava/util/Set<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 10\n-        frame_type = 20 /* same */\n-        frame_type = 58 /* same */\n-        frame_type = 58 /* same */\n-        frame_type = 58 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 55 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 21 /* same */\n+        frame_type = 60 /* same */\n+        frame_type = 60 /* same */\n+        frame_type = 60 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 57 /* same */\n+        frame_type = 27 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 32\n           locals = [ class org/apache/commons/csv/CSVFormat, class java/util/Set, class \"[Ljava/lang/String;\", int, int ]\n           stack = []\n         frame_type = 251 /* same_frame_extended */\n-          offset_delta = 65\n+          offset_delta = 67\n         frame_type = 255 /* full_frame */\n           offset_delta = 5\n           locals = [ class org/apache/commons/csv/CSVFormat ]\n           stack = []\n     Exceptions:\n       throws java.lang.IllegalArgumentException\n \n   public org.apache.commons.csv.CSVFormat withAllowDuplicateHeaderNames();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #195                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #575                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2253: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAllowDuplicateHeaderNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #195                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #575                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowDuplicateHeaderNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2266: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 allowDuplicateHeaderNames   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #196                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #579                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2279: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAllowMissingColumnNames(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #196                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #579                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2292: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 allowMissingColumnNames   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withAutoFlush(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #197                // Method org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #582                // Method org/apache/commons/csv/CSVFormat$Builder.setAutoFlush:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2306: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 autoFlush   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withCommentMarker(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #198                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #585                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2321: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 commentMarker   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withCommentMarker(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #199                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #589                // Method org/apache/commons/csv/CSVFormat$Builder.setCommentMarker:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2336: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 commentMarker   Ljava/lang/Character;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withDelimiter(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #200                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #592                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2349: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 delimiter   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withEscape(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #201                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #595                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2362: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 escape   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withEscape(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #202                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #598                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2375: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 escape   Ljava/lang/Character;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withFirstRecordAsHeader();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_0\n-         5: anewarray     #28                 // class java/lang/String\n-         8: invokevirtual #203                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         5: anewarray     #93                 // class java/lang/String\n+         8: invokevirtual #600                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n         11: iconst_1\n-        12: invokevirtual #204                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        15: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        12: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        15: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         18: areturn\n       LineNumberTable:\n         line 2398: 0\n         line 2399: 8\n         line 2400: 12\n         line 2401: 15\n         line 2398: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.lang.Class<? extends java.lang.Enum<?>>);\n     descriptor: (Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #205                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #607                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/lang/Class;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2432: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 headerEnum   Ljava/lang/Class;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     1 headerEnum   Ljava/lang/Class<+Ljava/lang/Enum<*>;>;\n     Deprecated: true\n-    Signature: #468                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n+    Signature: #826                         // (Ljava/lang/Class<+Ljava/lang/Enum<*>;>;)Lorg/apache/commons/csv/CSVFormat;\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSet) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #206                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #610                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSet;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2460: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 resultSet   Ljava/sql/ResultSet;\n     Exceptions:\n       throws java.sql.SQLException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.sql.ResultSetMetaData) throws java.sql.SQLException;\n     descriptor: (Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #207                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #613                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:(Ljava/sql/ResultSetMetaData;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2488: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 resultSetMetaData   Ljava/sql/ResultSetMetaData;\n     Exceptions:\n       throws java.sql.SQLException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeader(java.lang.String...);\n     descriptor: ([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #203                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #600                // Method org/apache/commons/csv/CSVFormat$Builder.setHeader:([Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2515: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 header   [Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withHeaderComments(java.lang.Object...);\n     descriptor: ([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #208                // Method org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #616                // Method org/apache/commons/csv/CSVFormat$Builder.setHeaderComments:([Ljava/lang/Object;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2534: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 headerComments   [Ljava/lang/Object;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2547: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreEmptyLines(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2560: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 ignoreEmptyLines   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #210                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #623                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2573: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreHeaderCase(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #210                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #623                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreHeaderCase:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2586: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 ignoreHeaderCase   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #626                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2599: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withIgnoreSurroundingSpaces(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #626                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2611: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 ignoreSurroundingSpaces   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withNullString(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #212                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #629                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2627: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 nullString   Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withQuote(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #213                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #633                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2640: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 quoteChar   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withQuote(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2653: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 quoteChar   Ljava/lang/Character;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withQuoteMode(org.apache.commons.csv.QuoteMode);\n     descriptor: (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2666: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 quoteMode   Lorg/apache/commons/csv/QuoteMode;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withRecordSeparator(char);\n     descriptor: (C)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #642                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2683: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 recordSeparator   C\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withRecordSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: aload_1\n-         5: invokevirtual #217                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #645                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2701: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 recordSeparator   Ljava/lang/String;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #204                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2715: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withSkipHeaderRecord(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #204                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2728: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 skipHeaderRecord   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withSystemRecordSeparator();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-         4: invokestatic  #218                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n-         7: invokevirtual #217                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        10: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         4: invokestatic  #647                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+         7: invokevirtual #645                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        10: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         13: areturn\n       LineNumberTable:\n         line 2746: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2758: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrailingDelimiter(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #219                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #650                // Method org/apache/commons/csv/CSVFormat$Builder.setTrailingDelimiter:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2771: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1 trailingDelimiter   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrim();\n     descriptor: ()Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iconst_1\n-         5: invokevirtual #220                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #653                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2783: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   public org.apache.commons.csv.CSVFormat withTrim(boolean);\n     descriptor: (Z)Lorg/apache/commons/csv/CSVFormat;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+         1: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n          4: iload_1\n-         5: invokevirtual #220                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-         8: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #653                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+         8: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n         11: areturn\n       LineNumberTable:\n         line 2796: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0      12     1  trim   Z\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #370()\n+      0: #764()\n         java.lang.Deprecated\n \n   static java.lang.String access$000(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field delimiter:Ljava/lang/String;\n+         1: getfield      #76                 // Field delimiter:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.Character access$100(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field quoteCharacter:Ljava/lang/Character;\n+         1: getfield      #73                 // Field quoteCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static org.apache.commons.csv.QuoteMode access$200(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Lorg/apache/commons/csv/QuoteMode;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n+         1: getfield      #69                 // Field quoteMode:Lorg/apache/commons/csv/QuoteMode;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.Character access$300(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field commentMarker:Ljava/lang/Character;\n+         1: getfield      #66                 // Field commentMarker:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.Character access$400(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/Character;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #19                 // Field escapeCharacter:Ljava/lang/Character;\n+         1: getfield      #62                 // Field escapeCharacter:Ljava/lang/Character;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$500(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field ignoreSurroundingSpaces:Z\n+         1: getfield      #59                 // Field ignoreSurroundingSpaces:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$600(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #17                 // Field allowMissingColumnNames:Z\n+         1: getfield      #56                 // Field allowMissingColumnNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$700(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field ignoreEmptyLines:Z\n+         1: getfield      #53                 // Field ignoreEmptyLines:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String access$800(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #15                 // Field recordSeparator:Ljava/lang/String;\n+         1: getfield      #50                 // Field recordSeparator:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String access$900(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field nullString:Ljava/lang/String;\n+         1: getfield      #47                 // Field nullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String[] access$1000(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #13                 // Field headerComments:[Ljava/lang/String;\n+         1: getfield      #44                 // Field headerComments:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String[] access$1100(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)[Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field header:[Ljava/lang/String;\n+         1: getfield      #40                 // Field header:[Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1200(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #11                 // Field skipHeaderRecord:Z\n+         1: getfield      #37                 // Field skipHeaderRecord:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1300(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field ignoreHeaderCase:Z\n+         1: getfield      #34                 // Field ignoreHeaderCase:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1400(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field trailingDelimiter:Z\n+         1: getfield      #31                 // Field trailingDelimiter:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1500(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field trim:Z\n+         1: getfield      #28                 // Field trim:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1600(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field autoFlush:Z\n+         1: getfield      #25                 // Field autoFlush:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static java.lang.String access$1700(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Ljava/lang/String;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field quotedNullString:Ljava/lang/String;\n+         1: getfield      #21                 // Field quotedNullString:Ljava/lang/String;\n          4: areturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   static boolean access$1800(org.apache.commons.csv.CSVFormat);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field allowDuplicateHeaderNames:Z\n+         1: getfield      #17                 // Field allowDuplicateHeaderNames:Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/csv/CSVFormat;\n \n   org.apache.commons.csv.CSVFormat(org.apache.commons.csv.CSVFormat$Builder, org.apache.commons.csv.CSVFormat$1);\n     descriptor: (Lorg/apache/commons/csv/CSVFormat$Builder;Lorg/apache/commons/csv/CSVFormat$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n+         2: invokespecial #13                 // Method \"<init>\":(Lorg/apache/commons/csv/CSVFormat$Builder;)V\n          5: return\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/csv/CSVFormat;\n             0       6     1    x0   Lorg/apache/commons/csv/CSVFormat$Builder;\n@@ -5365,283 +5361,283 @@\n \n   static boolean access$2000(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #3                  // Method isLineBreak:(Ljava/lang/Character;)Z\n+         1: invokestatic  #9                  // Method isLineBreak:(Ljava/lang/Character;)Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Ljava/lang/Character;\n \n   static boolean access$2100(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #2                  // Method containsLineBreak:(Ljava/lang/String;)Z\n+         1: invokestatic  #3                  // Method containsLineBreak:(Ljava/lang/String;)Z\n          4: ireturn\n       LineNumberTable:\n         line 163: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Ljava/lang/String;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=20, locals=0, args_size=0\n-         0: new           #33                 // class org/apache/commons/csv/CSVFormat\n+         0: new           #4                  // class org/apache/commons/csv/CSVFormat\n          3: dup\n-         4: ldc           #221                // String ,\n-         6: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-         9: aconst_null\n+         4: ldc_w         #656                // String ,\n+         7: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n         10: aconst_null\n         11: aconst_null\n-        12: iconst_0\n-        13: iconst_1\n-        14: ldc           #223                // String \\r\\n\n-        16: aconst_null\n-        17: aconst_null\n+        12: aconst_null\n+        13: iconst_0\n+        14: iconst_1\n+        15: ldc_w         #661                // String \\r\\n\n         18: aconst_null\n-        19: iconst_0\n-        20: iconst_0\n+        19: aconst_null\n+        20: aconst_null\n         21: iconst_0\n         22: iconst_0\n         23: iconst_0\n         24: iconst_0\n-        25: iconst_1\n-        26: invokespecial #35                 // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n-        29: putstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        32: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        35: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-        38: iconst_0\n-        39: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        42: iconst_1\n-        43: invokevirtual #196                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        46: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-        49: putstatic     #225                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n-        52: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        55: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-        58: bipush        124\n-        60: invokevirtual #200                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        63: bipush        92\n-        65: invokevirtual #201                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        68: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        71: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        74: bipush        10\n-        76: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        79: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-        82: putstatic     #226                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n-        85: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-        88: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-        91: ldc           #221                // String ,\n-        93: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-        96: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-        99: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       102: bipush        10\n-       104: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       107: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       110: putstatic     #228                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       113: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       116: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       119: ldc           #221                // String ,\n-       121: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       124: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       127: invokevirtual #202                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       130: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       133: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       136: getstatic     #151                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       139: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       142: iconst_0\n-       143: invokevirtual #204                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       146: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       149: putstatic     #229                // Field MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       152: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       155: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       158: bipush        9\n-       160: invokevirtual #200                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       163: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       166: invokevirtual #202                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       169: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       172: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       175: getstatic     #151                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       178: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       181: iconst_0\n-       182: invokevirtual #204                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       185: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       188: putstatic     #230                // Field MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n-       191: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       194: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       197: bipush        9\n-       199: invokevirtual #200                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       202: bipush        92\n-       204: invokevirtual #201                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       207: iconst_0\n-       208: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       211: aconst_null\n-       212: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       215: bipush        10\n-       217: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       220: ldc           #231                // String \\\\N\n-       222: invokevirtual #212                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       225: getstatic     #232                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       228: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       231: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       234: putstatic     #233                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n-       237: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       240: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       243: ldc           #221                // String ,\n-       245: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       248: bipush        92\n-       250: invokevirtual #201                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       253: iconst_0\n-       254: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       257: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       260: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       263: ldc           #231                // String \\\\N\n-       265: invokevirtual #212                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       268: iconst_1\n-       269: invokevirtual #220                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       272: invokestatic  #218                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n-       275: invokevirtual #217                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       278: getstatic     #151                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n-       281: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       284: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       287: putstatic     #234                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n-       290: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       293: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       296: ldc           #221                // String ,\n-       298: invokevirtual #227                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       301: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       304: invokevirtual #202                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       307: iconst_0\n-       308: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       311: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       314: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       317: bipush        10\n-       319: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       322: ldc           #107                // String\n-       324: invokevirtual #212                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       327: getstatic     #232                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       330: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       333: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       336: putstatic     #235                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n-       339: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       342: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       345: bipush        9\n-       347: invokevirtual #200                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       350: bipush        92\n-       352: invokevirtual #201                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       355: iconst_0\n-       356: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       359: getstatic     #222                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n-       362: invokevirtual #214                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       365: bipush        10\n-       367: invokevirtual #216                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       370: ldc           #231                // String \\\\N\n-       372: invokevirtual #212                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       375: getstatic     #232                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n-       378: invokevirtual #215                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       381: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       384: putstatic     #236                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n-       387: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       390: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       393: iconst_0\n-       394: invokevirtual #209                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       397: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       400: putstatic     #237                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n-       403: getstatic     #224                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-       406: invokevirtual #75                 // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n-       409: bipush        9\n-       411: invokevirtual #200                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       414: iconst_1\n-       415: invokevirtual #211                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n-       418: invokevirtual #76                 // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n-       421: putstatic     #238                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n-       424: return\n+        25: iconst_0\n+        26: iconst_0\n+        27: iconst_1\n+        28: invokespecial #116                // Method \"<init>\":(Ljava/lang/String;Ljava/lang/Character;Lorg/apache/commons/csv/QuoteMode;Ljava/lang/Character;Ljava/lang/Character;ZZLjava/lang/String;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;ZZZZZZZ)V\n+        31: putstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        34: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        37: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        40: iconst_0\n+        41: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        44: iconst_1\n+        45: invokevirtual #579                // Method org/apache/commons/csv/CSVFormat$Builder.setAllowMissingColumnNames:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        48: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        51: putstatic     #667                // Field EXCEL:Lorg/apache/commons/csv/CSVFormat;\n+        54: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        57: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        60: bipush        124\n+        62: invokevirtual #592                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        65: bipush        92\n+        67: invokevirtual #595                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        70: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+        73: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        76: bipush        10\n+        78: invokevirtual #642                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        81: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+        84: putstatic     #670                // Field INFORMIX_UNLOAD:Lorg/apache/commons/csv/CSVFormat;\n+        87: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+        90: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+        93: ldc_w         #656                // String ,\n+        96: invokevirtual #673                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+        99: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       102: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       105: bipush        10\n+       107: invokevirtual #642                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       110: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       113: putstatic     #675                // Field INFORMIX_UNLOAD_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       116: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       119: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       122: ldc_w         #656                // String ,\n+       125: invokevirtual #673                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       128: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       131: invokevirtual #598                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       134: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       137: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       140: getstatic     #471                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       143: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       146: iconst_0\n+       147: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       150: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       153: putstatic     #678                // Field MONGODB_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       156: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       159: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       162: bipush        9\n+       164: invokevirtual #592                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       167: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       170: invokevirtual #598                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       173: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       176: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       179: getstatic     #471                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       182: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       185: iconst_0\n+       186: invokevirtual #604                // Method org/apache/commons/csv/CSVFormat$Builder.setSkipHeaderRecord:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       189: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       192: putstatic     #681                // Field MONGODB_TSV:Lorg/apache/commons/csv/CSVFormat;\n+       195: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       198: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       201: bipush        9\n+       203: invokevirtual #592                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       206: bipush        92\n+       208: invokevirtual #595                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       211: iconst_0\n+       212: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       215: aconst_null\n+       216: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       219: bipush        10\n+       221: invokevirtual #642                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       224: ldc_w         #684                // String \\\\N\n+       227: invokevirtual #629                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       230: getstatic     #686                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       233: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       236: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       239: putstatic     #689                // Field MYSQL:Lorg/apache/commons/csv/CSVFormat;\n+       242: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       245: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       248: ldc_w         #656                // String ,\n+       251: invokevirtual #673                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       254: bipush        92\n+       256: invokevirtual #595                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       259: iconst_0\n+       260: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       263: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       266: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       269: ldc_w         #684                // String \\\\N\n+       272: invokevirtual #629                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       275: iconst_1\n+       276: invokevirtual #653                // Method org/apache/commons/csv/CSVFormat$Builder.setTrim:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       279: invokestatic  #647                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+       282: invokevirtual #645                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       285: getstatic     #471                // Field org/apache/commons/csv/QuoteMode.MINIMAL:Lorg/apache/commons/csv/QuoteMode;\n+       288: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       291: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       294: putstatic     #692                // Field ORACLE:Lorg/apache/commons/csv/CSVFormat;\n+       297: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       300: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       303: ldc_w         #656                // String ,\n+       306: invokevirtual #673                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       309: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       312: invokevirtual #598                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       315: iconst_0\n+       316: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       319: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       322: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       325: bipush        10\n+       327: invokevirtual #642                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       330: ldc_w         #335                // String\n+       333: invokevirtual #629                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       336: getstatic     #686                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       339: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       342: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       345: putstatic     #695                // Field POSTGRESQL_CSV:Lorg/apache/commons/csv/CSVFormat;\n+       348: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       351: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       354: bipush        9\n+       356: invokevirtual #592                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       359: bipush        92\n+       361: invokevirtual #595                // Method org/apache/commons/csv/CSVFormat$Builder.setEscape:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       364: iconst_0\n+       365: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       368: getstatic     #658                // Field org/apache/commons/csv/Constants.DOUBLE_QUOTE_CHAR:Ljava/lang/Character;\n+       371: invokevirtual #636                // Method org/apache/commons/csv/CSVFormat$Builder.setQuote:(Ljava/lang/Character;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       374: bipush        10\n+       376: invokevirtual #642                // Method org/apache/commons/csv/CSVFormat$Builder.setRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       379: ldc_w         #684                // String \\\\N\n+       382: invokevirtual #629                // Method org/apache/commons/csv/CSVFormat$Builder.setNullString:(Ljava/lang/String;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       385: getstatic     #686                // Field org/apache/commons/csv/QuoteMode.ALL_NON_NULL:Lorg/apache/commons/csv/QuoteMode;\n+       388: invokevirtual #638                // Method org/apache/commons/csv/CSVFormat$Builder.setQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       391: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       394: putstatic     #698                // Field POSTGRESQL_TEXT:Lorg/apache/commons/csv/CSVFormat;\n+       397: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       400: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       403: iconst_0\n+       404: invokevirtual #620                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreEmptyLines:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       407: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       410: putstatic     #701                // Field RFC4180:Lorg/apache/commons/csv/CSVFormat;\n+       413: getstatic     #663                // Field DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+       416: invokevirtual #253                // Method builder:()Lorg/apache/commons/csv/CSVFormat$Builder;\n+       419: bipush        9\n+       421: invokevirtual #592                // Method org/apache/commons/csv/CSVFormat$Builder.setDelimiter:(C)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       424: iconst_1\n+       425: invokevirtual #626                // Method org/apache/commons/csv/CSVFormat$Builder.setIgnoreSurroundingSpaces:(Z)Lorg/apache/commons/csv/CSVFormat$Builder;\n+       428: invokevirtual #257                // Method org/apache/commons/csv/CSVFormat$Builder.build:()Lorg/apache/commons/csv/CSVFormat;\n+       431: putstatic     #704                // Field TDF:Lorg/apache/commons/csv/CSVFormat;\n+       434: return\n       LineNumberTable:\n         line 778: 0\n-        line 812: 32\n-        line 813: 39\n-        line 814: 43\n-        line 815: 46\n-        line 842: 52\n-        line 843: 60\n-        line 844: 65\n-        line 845: 71\n-        line 846: 76\n-        line 847: 79\n-        line 873: 85\n-        line 874: 93\n-        line 875: 99\n-        line 876: 104\n-        line 877: 107\n-        line 907: 113\n-        line 908: 121\n-        line 909: 127\n-        line 910: 133\n-        line 911: 139\n-        line 912: 143\n-        line 913: 146\n-        line 944: 152\n-        line 945: 160\n-        line 946: 166\n-        line 947: 172\n-        line 948: 178\n-        line 949: 182\n-        line 950: 185\n-        line 979: 191\n-        line 980: 199\n-        line 981: 204\n-        line 982: 208\n-        line 983: 212\n-        line 984: 217\n-        line 985: 222\n-        line 986: 228\n-        line 987: 231\n-        line 1018: 237\n-        line 1019: 245\n-        line 1020: 250\n-        line 1021: 254\n-        line 1022: 260\n-        line 1023: 265\n-        line 1024: 269\n-        line 1025: 272\n-        line 1026: 281\n-        line 1027: 284\n-        line 1057: 290\n-        line 1058: 298\n-        line 1059: 304\n-        line 1060: 308\n-        line 1061: 314\n-        line 1062: 319\n-        line 1063: 324\n-        line 1064: 330\n-        line 1065: 333\n-        line 1095: 339\n-        line 1096: 347\n-        line 1097: 352\n-        line 1098: 356\n-        line 1099: 362\n-        line 1100: 367\n-        line 1101: 372\n-        line 1102: 378\n-        line 1103: 381\n-        line 1121: 387\n-        line 1141: 403\n-        line 1142: 411\n-        line 1143: 415\n-        line 1144: 418\n-        line 1141: 424\n+        line 812: 34\n+        line 813: 41\n+        line 814: 45\n+        line 815: 48\n+        line 842: 54\n+        line 843: 62\n+        line 844: 67\n+        line 845: 73\n+        line 846: 78\n+        line 847: 81\n+        line 873: 87\n+        line 874: 96\n+        line 875: 102\n+        line 876: 107\n+        line 877: 110\n+        line 907: 116\n+        line 908: 125\n+        line 909: 131\n+        line 910: 137\n+        line 911: 143\n+        line 912: 147\n+        line 913: 150\n+        line 944: 156\n+        line 945: 164\n+        line 946: 170\n+        line 947: 176\n+        line 948: 182\n+        line 949: 186\n+        line 950: 189\n+        line 979: 195\n+        line 980: 203\n+        line 981: 208\n+        line 982: 212\n+        line 983: 216\n+        line 984: 221\n+        line 985: 227\n+        line 986: 233\n+        line 987: 236\n+        line 1018: 242\n+        line 1019: 251\n+        line 1020: 256\n+        line 1021: 260\n+        line 1022: 266\n+        line 1023: 272\n+        line 1024: 276\n+        line 1025: 279\n+        line 1026: 288\n+        line 1027: 291\n+        line 1057: 297\n+        line 1058: 306\n+        line 1059: 312\n+        line 1060: 316\n+        line 1061: 322\n+        line 1062: 327\n+        line 1063: 333\n+        line 1064: 339\n+        line 1065: 342\n+        line 1095: 348\n+        line 1096: 356\n+        line 1097: 361\n+        line 1098: 365\n+        line 1099: 371\n+        line 1100: 376\n+        line 1101: 382\n+        line 1102: 388\n+        line 1103: 391\n+        line 1121: 397\n+        line 1141: 413\n+        line 1142: 421\n+        line 1143: 425\n+        line 1144: 428\n+        line 1141: 434\n }\n SourceFile: \"CSVFormat.java\"\n InnerClasses:\n-  static #240;                            // class org/apache/commons/csv/CSVFormat$1\n-  public static final #243= #242 of #33;  // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n-  public static #245= #244 of #33;        // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n+  public static #884= #155 of #4;         // Builder=class org/apache/commons/csv/CSVFormat$Builder of class org/apache/commons/csv/CSVFormat\n+  public static final #885= #141 of #4;   // Predefined=class org/apache/commons/csv/CSVFormat$Predefined of class org/apache/commons/csv/CSVFormat\n+  static #475;                            // class org/apache/commons/csv/CSVFormat$1\n"}]}
