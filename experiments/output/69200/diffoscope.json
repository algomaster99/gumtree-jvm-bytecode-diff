{"diffoscope-json-version": 1, "source1": "first/MLSxEntryParser.class", "source2": "second/MLSxEntryParser.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -16,14 +16,24 @@\n public class MLSxEntryParser extends FTPFileEntryParserImpl\n {\n     private static final MLSxEntryParser INSTANCE;\n     private static final HashMap<String, Integer> TYPE_TO_INT;\n     private static final int[] UNIX_GROUPS;\n     private static final int[][] UNIX_PERMS;\n     \n+    static {\n+        INSTANCE = new MLSxEntryParser();\n+        (TYPE_TO_INT = new HashMap<String, Integer>()).put(\"file\", Integer.valueOf(0));\n+        MLSxEntryParser.TYPE_TO_INT.put(\"cdir\", Integer.valueOf(1));\n+        MLSxEntryParser.TYPE_TO_INT.put(\"pdir\", Integer.valueOf(1));\n+        MLSxEntryParser.TYPE_TO_INT.put(\"dir\", Integer.valueOf(1));\n+        UNIX_GROUPS = new int[] { 0, 1, 2 };\n+        UNIX_PERMS = new int[][] { new int[0], { 2 }, { 1 }, { 2, 1 }, new int[1], { 0, 2 }, { 0, 1 }, { 0, 1, 2 } };\n+    }\n+    \n     public static MLSxEntryParser getInstance() {\n         return MLSxEntryParser.INSTANCE;\n     }\n     \n     public static FTPFile parseEntry(final String entry) {\n         return MLSxEntryParser.INSTANCE.parseFTPEntry(entry);\n     }\n@@ -56,15 +66,17 @@\n     }\n     \n     public static Instant parseGmtInstant(final String timestamp) {\n         return parseGMTdateTime(timestamp).toInstant();\n     }\n     \n     private void doUnixPerms(final FTPFile file, final String valueLowerCase) {\n-        for (final char c : valueLowerCase.toCharArray()) {\n+        char[] charArray;\n+        for (int length = (charArray = valueLowerCase.toCharArray()).length, i = 0; i < length; ++i) {\n+            final char c = charArray[i];\n             switch (c) {\n                 case 'a': {\n                     file.setPermission(0, 1, true);\n                     break;\n                 }\n                 case 'c': {\n                     file.setPermission(0, 1, true);\n@@ -121,15 +133,17 @@\n                 return null;\n             }\n             final FTPFile file2 = new FTPFile();\n             file2.setRawListing(entry);\n             file2.setName(parts[1]);\n             final String[] facts = factList.split(\";\");\n             final boolean hasUnixMode = parts[0].toLowerCase(Locale.ENGLISH).contains(\"unix.mode=\");\n-            for (final String fact : facts) {\n+            String[] array;\n+            for (int length = (array = facts).length, j = 0; j < length; ++j) {\n+                final String fact = array[j];\n                 final String[] factparts = fact.split(\"=\", -1);\n                 if (factparts.length != 2) {\n                     return null;\n                 }\n                 final String factname = factparts[0].toLowerCase(Locale.ENGLISH);\n                 final String factvalue = factparts[1];\n                 if (!factvalue.isEmpty()) {\n@@ -162,33 +176,25 @@\n                             file2.setUser(factvalue);\n                         }\n                         else if (\"mode\".equals(unixfact)) {\n                             final int off = factvalue.length() - 3;\n                             for (int i = 0; i < 3; ++i) {\n                                 final int ch = factvalue.charAt(off + i) - '0';\n                                 if (ch >= 0 && ch <= 7) {\n-                                    for (final int p : MLSxEntryParser.UNIX_PERMS[ch]) {\n+                                    int[] array2;\n+                                    for (int length2 = (array2 = MLSxEntryParser.UNIX_PERMS[ch]).length, k = 0; k < length2; ++k) {\n+                                        final int p = array2[k];\n                                         file2.setPermission(MLSxEntryParser.UNIX_GROUPS[i], p, true);\n                                     }\n                                 }\n                             }\n                         }\n                     }\n                     else if (!hasUnixMode && \"perm\".equals(factname)) {\n                         this.doUnixPerms(file2, valueLowerCase);\n                     }\n                 }\n             }\n             return file2;\n         }\n     }\n-    \n-    static {\n-        INSTANCE = new MLSxEntryParser();\n-        (TYPE_TO_INT = new HashMap<String, Integer>()).put(\"file\", Integer.valueOf(0));\n-        MLSxEntryParser.TYPE_TO_INT.put(\"cdir\", Integer.valueOf(1));\n-        MLSxEntryParser.TYPE_TO_INT.put(\"pdir\", Integer.valueOf(1));\n-        MLSxEntryParser.TYPE_TO_INT.put(\"dir\", Integer.valueOf(1));\n-        UNIX_GROUPS = new int[] { 0, 1, 2 };\n-        UNIX_PERMS = new int[][] { new int[0], { 2 }, { 1 }, { 2, 1 }, { 0 }, { 0, 2 }, { 0, 1 }, { 0, 1, 2 } };\n-    }\n }\n"}]}
