{"diffoscope-json-version": 1, "source1": "first/SequenceReader.class", "source2": "second/SequenceReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,228 +1,226 @@\n-  SHA-256 checksum ea9f21b18dbd5abc0dae68dce6c0e236db3ebba7a08b3c9546a7052e17ff8159\n+  SHA-256 checksum 38984311d1d6e90f93bd3cad7a0008fbdf071ed3c7ac93973c2dd514a32873f0\n   Compiled from \"SequenceReader.java\"\n public class org.apache.commons.io.input.SequenceReader extends java.io.Reader\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #24                         // org/apache/commons/io/input/SequenceReader\n-  super_class: #4                         // java/io/Reader\n+  this_class: #1                          // org/apache/commons/io/input/SequenceReader\n+  super_class: #3                         // java/io/Reader\n   interfaces: 0, fields: 2, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #2            // org/apache/commons/io/IOUtils\n-    #2 = Utf8               org/apache/commons/io/IOUtils\n-    #3 = Methodref          #4.#5         // java/io/Reader.\"<init>\":()V\n-    #4 = Class              #6            // java/io/Reader\n-    #5 = NameAndType        #7:#8         // \"<init>\":()V\n-    #6 = Utf8               java/io/Reader\n-    #7 = Utf8               <init>\n-    #8 = Utf8               ()V\n-    #9 = String             #10           // readers\n-   #10 = Utf8               readers\n-   #11 = Methodref          #12.#13       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #12 = Class              #14           // java/util/Objects\n-   #13 = NameAndType        #15:#16       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #14 = Utf8               java/util/Objects\n-   #15 = Utf8               requireNonNull\n-   #16 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #17 = Class              #18           // java/lang/Iterable\n-   #18 = Utf8               java/lang/Iterable\n-   #19 = InterfaceMethodref #17.#20       // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-   #20 = NameAndType        #21:#22       // iterator:()Ljava/util/Iterator;\n-   #21 = Utf8               iterator\n-   #22 = Utf8               ()Ljava/util/Iterator;\n-   #23 = Fieldref           #24.#25       // org/apache/commons/io/input/SequenceReader.readers:Ljava/util/Iterator;\n-   #24 = Class              #26           // org/apache/commons/io/input/SequenceReader\n-   #25 = NameAndType        #10:#27       // readers:Ljava/util/Iterator;\n-   #26 = Utf8               org/apache/commons/io/input/SequenceReader\n-   #27 = Utf8               Ljava/util/Iterator;\n-   #28 = Methodref          #24.#29       // org/apache/commons/io/input/SequenceReader.nextReader:()Ljava/io/Reader;\n-   #29 = NameAndType        #30:#31       // nextReader:()Ljava/io/Reader;\n-   #30 = Utf8               nextReader\n-   #31 = Utf8               ()Ljava/io/Reader;\n-   #32 = Fieldref           #24.#33       // org/apache/commons/io/input/SequenceReader.reader:Ljava/io/Reader;\n-   #33 = NameAndType        #34:#35       // reader:Ljava/io/Reader;\n-   #34 = Utf8               reader\n-   #35 = Utf8               Ljava/io/Reader;\n-   #36 = Methodref          #37.#38       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #37 = Class              #39           // java/util/Arrays\n-   #38 = NameAndType        #40:#41       // asList:([Ljava/lang/Object;)Ljava/util/List;\n-   #39 = Utf8               java/util/Arrays\n-   #40 = Utf8               asList\n-   #41 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-   #42 = Methodref          #24.#43       // org/apache/commons/io/input/SequenceReader.\"<init>\":(Ljava/lang/Iterable;)V\n-   #43 = NameAndType        #7:#44        // \"<init>\":(Ljava/lang/Iterable;)V\n-   #44 = Utf8               (Ljava/lang/Iterable;)V\n-   #45 = InterfaceMethodref #46.#47       // java/util/Iterator.hasNext:()Z\n-   #46 = Class              #48           // java/util/Iterator\n-   #47 = NameAndType        #49:#50       // hasNext:()Z\n-   #48 = Utf8               java/util/Iterator\n-   #49 = Utf8               hasNext\n-   #50 = Utf8               ()Z\n-   #51 = InterfaceMethodref #46.#52       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #52 = NameAndType        #53:#54       // next:()Ljava/lang/Object;\n-   #53 = Utf8               next\n-   #54 = Utf8               ()Ljava/lang/Object;\n-   #55 = Methodref          #4.#56        // java/io/Reader.read:()I\n-   #56 = NameAndType        #57:#58       // read:()I\n-   #57 = Utf8               read\n-   #58 = Utf8               ()I\n-   #59 = String             #60           // cbuf\n-   #60 = Utf8               cbuf\n-   #61 = Class              #62           // java/lang/IndexOutOfBoundsException\n-   #62 = Utf8               java/lang/IndexOutOfBoundsException\n-   #63 = Class              #64           // java/lang/StringBuilder\n-   #64 = Utf8               java/lang/StringBuilder\n-   #65 = Methodref          #63.#5        // java/lang/StringBuilder.\"<init>\":()V\n-   #66 = String             #67           // Array Size=\n-   #67 = Utf8               Array Size=\n-   #68 = Methodref          #63.#69       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #69 = NameAndType        #70:#71       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #70 = Utf8               append\n-   #71 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #72 = Methodref          #63.#73       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #73 = NameAndType        #70:#74       // append:(I)Ljava/lang/StringBuilder;\n-   #74 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #75 = String             #76           // , offset=\n-   #76 = Utf8               , offset=\n-   #77 = String             #78           // , length=\n-   #78 = Utf8               , length=\n-   #79 = Methodref          #63.#80       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #80 = NameAndType        #81:#82       // toString:()Ljava/lang/String;\n-   #81 = Utf8               toString\n-   #82 = Utf8               ()Ljava/lang/String;\n-   #83 = Methodref          #61.#84       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-   #84 = NameAndType        #7:#85        // \"<init>\":(Ljava/lang/String;)V\n-   #85 = Utf8               (Ljava/lang/String;)V\n-   #86 = Methodref          #4.#87        // java/io/Reader.read:([CII)I\n-   #87 = NameAndType        #57:#88       // read:([CII)I\n-   #88 = Utf8               ([CII)I\n-   #89 = Utf8               Signature\n-   #90 = Utf8               Ljava/util/Iterator<+Ljava/io/Reader;>;\n-   #91 = Utf8               Code\n-   #92 = Utf8               LineNumberTable\n-   #93 = Utf8               LocalVariableTable\n-   #94 = Utf8               this\n-   #95 = Utf8               Lorg/apache/commons/io/input/SequenceReader;\n-   #96 = Utf8               Ljava/lang/Iterable;\n-   #97 = Utf8               LocalVariableTypeTable\n-   #98 = Utf8               Ljava/lang/Iterable<+Ljava/io/Reader;>;\n-   #99 = Utf8               (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n-  #100 = Utf8               ([Ljava/io/Reader;)V\n-  #101 = Utf8               [Ljava/io/Reader;\n-  #102 = Utf8               close\n-  #103 = Utf8               Exceptions\n-  #104 = Class              #105          // java/io/IOException\n-  #105 = Utf8               java/io/IOException\n-  #106 = Utf8               StackMapTable\n-  #107 = Utf8               c\n-  #108 = Utf8               I\n-  #109 = Utf8               readLen\n-  #110 = Utf8               [C\n-  #111 = Utf8               off\n-  #112 = Utf8               len\n-  #113 = Utf8               count\n-  #114 = Utf8               SourceFile\n-  #115 = Utf8               SequenceReader.java\n+    #1 = Class              #2            // org/apache/commons/io/input/SequenceReader\n+    #2 = Utf8               org/apache/commons/io/input/SequenceReader\n+    #3 = Class              #4            // java/io/Reader\n+    #4 = Utf8               java/io/Reader\n+    #5 = Utf8               reader\n+    #6 = Utf8               Ljava/io/Reader;\n+    #7 = Utf8               readers\n+    #8 = Utf8               Ljava/util/Iterator;\n+    #9 = Utf8               Signature\n+   #10 = Utf8               Ljava/util/Iterator<+Ljava/io/Reader;>;\n+   #11 = Utf8               <init>\n+   #12 = Utf8               (Ljava/lang/Iterable;)V\n+   #13 = Utf8               (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n+   #14 = Utf8               Code\n+   #15 = Methodref          #3.#16        // java/io/Reader.\"<init>\":()V\n+   #16 = NameAndType        #11:#17       // \"<init>\":()V\n+   #17 = Utf8               ()V\n+   #18 = String             #7            // readers\n+   #19 = Methodref          #20.#22       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #20 = Class              #21           // java/util/Objects\n+   #21 = Utf8               java/util/Objects\n+   #22 = NameAndType        #23:#24       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #23 = Utf8               requireNonNull\n+   #24 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #25 = Class              #26           // java/lang/Iterable\n+   #26 = Utf8               java/lang/Iterable\n+   #27 = InterfaceMethodref #25.#28       // java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+   #28 = NameAndType        #29:#30       // iterator:()Ljava/util/Iterator;\n+   #29 = Utf8               iterator\n+   #30 = Utf8               ()Ljava/util/Iterator;\n+   #31 = Fieldref           #1.#32        // org/apache/commons/io/input/SequenceReader.readers:Ljava/util/Iterator;\n+   #32 = NameAndType        #7:#8         // readers:Ljava/util/Iterator;\n+   #33 = Methodref          #1.#34        // org/apache/commons/io/input/SequenceReader.nextReader:()Ljava/io/Reader;\n+   #34 = NameAndType        #35:#36       // nextReader:()Ljava/io/Reader;\n+   #35 = Utf8               nextReader\n+   #36 = Utf8               ()Ljava/io/Reader;\n+   #37 = Fieldref           #1.#38        // org/apache/commons/io/input/SequenceReader.reader:Ljava/io/Reader;\n+   #38 = NameAndType        #5:#6         // reader:Ljava/io/Reader;\n+   #39 = Utf8               LineNumberTable\n+   #40 = Utf8               LocalVariableTable\n+   #41 = Utf8               this\n+   #42 = Utf8               Lorg/apache/commons/io/input/SequenceReader;\n+   #43 = Utf8               Ljava/lang/Iterable;\n+   #44 = Utf8               LocalVariableTypeTable\n+   #45 = Utf8               Ljava/lang/Iterable<+Ljava/io/Reader;>;\n+   #46 = Utf8               ([Ljava/io/Reader;)V\n+   #47 = Methodref          #48.#50       // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #48 = Class              #49           // java/util/Arrays\n+   #49 = Utf8               java/util/Arrays\n+   #50 = NameAndType        #51:#52       // asList:([Ljava/lang/Object;)Ljava/util/List;\n+   #51 = Utf8               asList\n+   #52 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+   #53 = Methodref          #1.#54        // org/apache/commons/io/input/SequenceReader.\"<init>\":(Ljava/lang/Iterable;)V\n+   #54 = NameAndType        #11:#12       // \"<init>\":(Ljava/lang/Iterable;)V\n+   #55 = Utf8               [Ljava/io/Reader;\n+   #56 = Utf8               close\n+   #57 = Utf8               Exceptions\n+   #58 = Class              #59           // java/io/IOException\n+   #59 = Utf8               java/io/IOException\n+   #60 = InterfaceMethodref #61.#63       // java/util/Iterator.hasNext:()Z\n+   #61 = Class              #62           // java/util/Iterator\n+   #62 = Utf8               java/util/Iterator\n+   #63 = NameAndType        #64:#65       // hasNext:()Z\n+   #64 = Utf8               hasNext\n+   #65 = Utf8               ()Z\n+   #66 = InterfaceMethodref #61.#67       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #67 = NameAndType        #68:#69       // next:()Ljava/lang/Object;\n+   #68 = Utf8               next\n+   #69 = Utf8               ()Ljava/lang/Object;\n+   #70 = Utf8               StackMapTable\n+   #71 = Utf8               read\n+   #72 = Utf8               ()I\n+   #73 = Methodref          #3.#74        // java/io/Reader.read:()I\n+   #74 = NameAndType        #71:#72       // read:()I\n+   #75 = Utf8               c\n+   #76 = Utf8               I\n+   #77 = Utf8               ([CII)I\n+   #78 = String             #79           // cbuf\n+   #79 = Utf8               cbuf\n+   #80 = Class              #81           // java/lang/IndexOutOfBoundsException\n+   #81 = Utf8               java/lang/IndexOutOfBoundsException\n+   #82 = Class              #83           // java/lang/StringBuilder\n+   #83 = Utf8               java/lang/StringBuilder\n+   #84 = String             #85           // Array Size=\n+   #85 = Utf8               Array Size=\n+   #86 = Methodref          #82.#87       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #87 = NameAndType        #11:#88       // \"<init>\":(Ljava/lang/String;)V\n+   #88 = Utf8               (Ljava/lang/String;)V\n+   #89 = Methodref          #82.#90       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #90 = NameAndType        #91:#92       // append:(I)Ljava/lang/StringBuilder;\n+   #91 = Utf8               append\n+   #92 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #93 = String             #94           // , offset=\n+   #94 = Utf8               , offset=\n+   #95 = Methodref          #82.#96       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = NameAndType        #91:#97       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #98 = String             #99           // , length=\n+   #99 = Utf8               , length=\n+  #100 = Methodref          #82.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #101 = NameAndType        #102:#103     // toString:()Ljava/lang/String;\n+  #102 = Utf8               toString\n+  #103 = Utf8               ()Ljava/lang/String;\n+  #104 = Methodref          #80.#87       // java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+  #105 = Methodref          #3.#106       // java/io/Reader.read:([CII)I\n+  #106 = NameAndType        #71:#77       // read:([CII)I\n+  #107 = Utf8               [C\n+  #108 = Utf8               off\n+  #109 = Utf8               len\n+  #110 = Utf8               count\n+  #111 = Utf8               readLen\n+  #112 = Utf8               SourceFile\n+  #113 = Utf8               SequenceReader.java\n {\n   private java.io.Reader reader;\n     descriptor: Ljava/io/Reader;\n     flags: (0x0002) ACC_PRIVATE\n \n   private java.util.Iterator<? extends java.io.Reader> readers;\n     descriptor: Ljava/util/Iterator;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #90                          // Ljava/util/Iterator<+Ljava/io/Reader;>;\n+    Signature: #10                          // Ljava/util/Iterator<+Ljava/io/Reader;>;\n \n   public org.apache.commons.io.input.SequenceReader(java.lang.Iterable<? extends java.io.Reader>);\n     descriptor: (Ljava/lang/Iterable;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #13                          // (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method java/io/Reader.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/io/Reader.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #9                  // String readers\n-         8: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #17                 // class java/lang/Iterable\n-        14: invokeinterface #19,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n-        19: putfield      #23                 // Field readers:Ljava/util/Iterator;\n+         6: ldc           #18                 // String readers\n+         8: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #25                 // class java/lang/Iterable\n+        14: invokeinterface #27,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;\n+        19: putfield      #31                 // Field readers:Ljava/util/Iterator;\n         22: aload_0\n         23: aload_0\n-        24: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n-        27: putfield      #32                 // Field reader:Ljava/io/Reader;\n+        24: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n+        27: putfield      #37                 // Field reader:Ljava/io/Reader;\n         30: return\n       LineNumberTable:\n         line 42: 0\n         line 43: 4\n         line 44: 22\n         line 45: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      31     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             0      31     1 readers   Ljava/lang/Iterable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      31     1 readers   Ljava/lang/Iterable<+Ljava/io/Reader;>;\n-    Signature: #99                          // (Ljava/lang/Iterable<+Ljava/io/Reader;>;)V\n \n   public org.apache.commons.io.input.SequenceReader(java.io.Reader...);\n     descriptor: ([Ljava/io/Reader;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #36                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-         5: invokespecial #42                 // Method \"<init>\":(Ljava/lang/Iterable;)V\n+         2: invokestatic  #47                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+         5: invokespecial #53                 // Method \"<init>\":(Ljava/lang/Iterable;)V\n          8: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             0       9     1 readers   [Ljava/io/Reader;\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #23                 // Field readers:Ljava/util/Iterator;\n+         2: putfield      #31                 // Field readers:Ljava/util/Iterator;\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #32                 // Field reader:Ljava/io/Reader;\n+         7: putfield      #37                 // Field reader:Ljava/io/Reader;\n         10: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 5\n         line 65: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/SequenceReader;\n-    Exceptions:\n-      throws java.io.IOException\n \n   private java.io.Reader nextReader();\n     descriptor: ()Ljava/io/Reader;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field readers:Ljava/util/Iterator;\n-         4: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+         1: getfield      #31                 // Field readers:Ljava/util/Iterator;\n+         4: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n          9: ifeq          27\n         12: aload_0\n-        13: getfield      #23                 // Field readers:Ljava/util/Iterator;\n-        16: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        21: checkcast     #4                  // class java/io/Reader\n+        13: getfield      #31                 // Field readers:Ljava/util/Iterator;\n+        16: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        21: checkcast     #3                  // class java/io/Reader\n         24: goto          28\n         27: aconst_null\n         28: areturn\n       LineNumberTable:\n         line 73: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -231,175 +229,177 @@\n         frame_type = 27 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/io/Reader ]\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: iconst_m1\n          1: istore_1\n-         2: aload_0\n-         3: getfield      #32                 // Field reader:Ljava/io/Reader;\n-         6: ifnull        36\n-         9: aload_0\n-        10: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        13: invokevirtual #55                 // Method java/io/Reader.read:()I\n-        16: istore_1\n-        17: iload_1\n-        18: iconst_m1\n-        19: if_icmpeq     25\n-        22: goto          36\n-        25: aload_0\n-        26: aload_0\n-        27: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n-        30: putfield      #32                 // Field reader:Ljava/io/Reader;\n-        33: goto          2\n+         2: goto          29\n+         5: aload_0\n+         6: getfield      #37                 // Field reader:Ljava/io/Reader;\n+         9: invokevirtual #73                 // Method java/io/Reader.read:()I\n+        12: istore_1\n+        13: iload_1\n+        14: iconst_m1\n+        15: if_icmpeq     21\n+        18: goto          36\n+        21: aload_0\n+        22: aload_0\n+        23: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n+        26: putfield      #37                 // Field reader:Ljava/io/Reader;\n+        29: aload_0\n+        30: getfield      #37                 // Field reader:Ljava/io/Reader;\n+        33: ifnonnull     5\n         36: iload_1\n         37: ireturn\n       LineNumberTable:\n         line 83: 0\n         line 84: 2\n-        line 85: 9\n-        line 86: 17\n-        line 87: 22\n-        line 89: 25\n+        line 85: 5\n+        line 86: 13\n+        line 87: 18\n+        line 89: 21\n+        line 84: 29\n         line 91: 36\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      38     0  this   Lorg/apache/commons/io/input/SequenceReader;\n             2      36     1     c   I\n-      StackMapTable: number_of_entries = 3\n+      StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n-        frame_type = 22 /* same */\n-        frame_type = 10 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 15 /* same */\n+        frame_type = 7 /* same */\n+        frame_type = 6 /* same */\n \n   public int read(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n-      stack=4, locals=6, args_size=4\n+      stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #59                 // String cbuf\n-         3: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #78                 // String cbuf\n+         3: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_3\n          8: iflt          23\n         11: iload_2\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n-        20: if_icmple     69\n-        23: new           #61                 // class java/lang/IndexOutOfBoundsException\n+        20: if_icmple     66\n+        23: new           #80                 // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: new           #63                 // class java/lang/StringBuilder\n+        27: new           #82                 // class java/lang/StringBuilder\n         30: dup\n-        31: invokespecial #65                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        34: ldc           #66                 // String Array Size=\n-        36: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        39: aload_1\n-        40: arraylength\n-        41: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        44: ldc           #75                 // String , offset=\n-        46: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        49: iload_2\n-        50: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        53: ldc           #77                 // String , length=\n-        55: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        58: iload_3\n-        59: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        62: invokevirtual #79                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        65: invokespecial #83                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n-        68: athrow\n-        69: iconst_0\n-        70: istore        4\n+        31: ldc           #84                 // String Array Size=\n+        33: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        36: aload_1\n+        37: arraylength\n+        38: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        41: ldc           #93                 // String , offset=\n+        43: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: iload_2\n+        47: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: ldc           #98                 // String , length=\n+        52: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: iload_3\n+        56: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        59: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        62: invokespecial #104                // Method java/lang/IndexOutOfBoundsException.\"<init>\":(Ljava/lang/String;)V\n+        65: athrow\n+        66: iconst_0\n+        67: istore        4\n+        69: goto          125\n         72: aload_0\n-        73: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        76: ifnull        135\n-        79: aload_0\n-        80: getfield      #32                 // Field reader:Ljava/io/Reader;\n-        83: aload_1\n-        84: iload_2\n-        85: iload_3\n-        86: invokevirtual #86                 // Method java/io/Reader.read:([CII)I\n-        89: istore        5\n-        91: iload         5\n-        93: iconst_m1\n-        94: if_icmpne     108\n-        97: aload_0\n-        98: aload_0\n-        99: invokespecial #28                 // Method nextReader:()Ljava/io/Reader;\n-       102: putfield      #32                 // Field reader:Ljava/io/Reader;\n-       105: goto          132\n-       108: iload         4\n-       110: iload         5\n-       112: iadd\n-       113: istore        4\n-       115: iload_2\n-       116: iload         5\n-       118: iadd\n-       119: istore_2\n-       120: iload_3\n-       121: iload         5\n-       123: isub\n-       124: istore_3\n-       125: iload_3\n-       126: ifgt          132\n-       129: goto          135\n-       132: goto          72\n-       135: iload         4\n-       137: ifle          143\n-       140: iload         4\n-       142: ireturn\n-       143: iconst_m1\n-       144: ireturn\n+        73: getfield      #37                 // Field reader:Ljava/io/Reader;\n+        76: aload_1\n+        77: iload_2\n+        78: iload_3\n+        79: invokevirtual #105                // Method java/io/Reader.read:([CII)I\n+        82: istore        5\n+        84: iload         5\n+        86: iconst_m1\n+        87: if_icmpne     101\n+        90: aload_0\n+        91: aload_0\n+        92: invokespecial #33                 // Method nextReader:()Ljava/io/Reader;\n+        95: putfield      #37                 // Field reader:Ljava/io/Reader;\n+        98: goto          125\n+       101: iload         4\n+       103: iload         5\n+       105: iadd\n+       106: istore        4\n+       108: iload_2\n+       109: iload         5\n+       111: iadd\n+       112: istore_2\n+       113: iload_3\n+       114: iload         5\n+       116: isub\n+       117: istore_3\n+       118: iload_3\n+       119: ifgt          125\n+       122: goto          132\n+       125: aload_0\n+       126: getfield      #37                 // Field reader:Ljava/io/Reader;\n+       129: ifnonnull     72\n+       132: iload         4\n+       134: ifle          140\n+       137: iload         4\n+       139: ireturn\n+       140: iconst_m1\n+       141: ireturn\n       LineNumberTable:\n         line 101: 0\n         line 102: 7\n         line 103: 23\n-        line 105: 69\n-        line 106: 72\n-        line 107: 79\n-        line 108: 91\n-        line 109: 97\n-        line 111: 108\n-        line 112: 115\n-        line 113: 120\n-        line 114: 125\n-        line 115: 129\n-        line 118: 132\n-        line 119: 135\n-        line 120: 140\n-        line 122: 143\n+        line 105: 66\n+        line 106: 69\n+        line 107: 72\n+        line 108: 84\n+        line 109: 90\n+        line 110: 98\n+        line 111: 101\n+        line 112: 108\n+        line 113: 113\n+        line 114: 118\n+        line 115: 122\n+        line 106: 125\n+        line 119: 132\n+        line 120: 137\n+        line 122: 140\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           91      41     5 readLen   I\n-            0     145     0  this   Lorg/apache/commons/io/input/SequenceReader;\n-            0     145     1  cbuf   [C\n-            0     145     2   off   I\n-            0     145     3   len   I\n-           72      73     4 count   I\n+            0     142     0  this   Lorg/apache/commons/io/input/SequenceReader;\n+            0     142     1  cbuf   [C\n+            0     142     2   off   I\n+            0     142     3   len   I\n+           69      73     4 count   I\n+           84      41     5 readLen   I\n       StackMapTable: number_of_entries = 7\n         frame_type = 23 /* same */\n-        frame_type = 45 /* same */\n+        frame_type = 42 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 2\n+          offset_delta = 5\n           locals = [ int ]\n         frame_type = 252 /* append */\n-          offset_delta = 35\n+          offset_delta = 28\n           locals = [ int ]\n         frame_type = 250 /* chop */\n           offset_delta = 23\n-        frame_type = 2 /* same */\n+        frame_type = 6 /* same */\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"SequenceReader.java\"\n"}]}
