{"diffoscope-json-version": 1, "source1": "first/ZstdUtils.class", "source2": "second/ZstdUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,88 +1,87 @@\n-  SHA-256 checksum 94552bb3a2bccb0d20b9692fd0c1393f6a5e21f6fddcf41244043659308c893c\n+  SHA-256 checksum 2001d1a064edd75762b06c9bae59f7fdda8c32e53d3c66af378078aa6c757c8a\n   Compiled from \"ZstdUtils.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #15                         // org/apache/commons/compress/compressors/zstandard/ZstdUtils\n   super_class: #16                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 7, attributes: 2\n Constant pool:\n-   #1 = Fieldref           #15.#44        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.cachedZstdAvailability:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-   #2 = String             #45            // com.github.luben.zstd.ZstdInputStream\n-   #3 = Methodref          #46.#47        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n-   #4 = Class              #48            // java/lang/NoClassDefFoundError\n-   #5 = Class              #49            // java/lang/Exception\n-   #6 = Fieldref           #17.#50        // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-   #7 = Fieldref           #17.#51        // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-   #8 = Methodref          #15.#52        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.internalIsZstdCompressionAvailable:()Z\n-   #9 = Fieldref           #15.#53        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.ZSTANDARD_FRAME_MAGIC:[B\n-  #10 = Fieldref           #15.#54        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.SKIPPABLE_FRAME_MAGIC:[B\n-  #11 = Fieldref           #17.#55        // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-  #12 = Methodref          #16.#56        // java/lang/Object.\"<init>\":()V\n-  #13 = Methodref          #57.#58        // org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z\n-  #14 = Methodref          #15.#59        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.setCacheZstdAvailablity:(Z)V\n-  #15 = Class              #60            // org/apache/commons/compress/compressors/zstandard/ZstdUtils\n-  #16 = Class              #61            // java/lang/Object\n-  #17 = Class              #62            // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability\n+   #1 = Fieldref           #15.#43        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.cachedZstdAvailability:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+   #2 = String             #44            // com.github.luben.zstd.ZstdInputStream\n+   #3 = Methodref          #45.#46        // java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;\n+   #4 = Class              #47            // java/lang/NoClassDefFoundError\n+   #5 = Class              #48            // java/lang/Exception\n+   #6 = Fieldref           #17.#49        // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+   #7 = Fieldref           #17.#50        // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+   #8 = Methodref          #15.#51        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.internalIsZstdCompressionAvailable:()Z\n+   #9 = Fieldref           #15.#52        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.ZSTANDARD_FRAME_MAGIC:[B\n+  #10 = Fieldref           #15.#53        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.SKIPPABLE_FRAME_MAGIC:[B\n+  #11 = Fieldref           #17.#54        // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+  #12 = Methodref          #16.#55        // java/lang/Object.\"<init>\":()V\n+  #13 = Methodref          #56.#57        // org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z\n+  #14 = Methodref          #15.#58        // org/apache/commons/compress/compressors/zstandard/ZstdUtils.setCacheZstdAvailablity:(Z)V\n+  #15 = Class              #59            // org/apache/commons/compress/compressors/zstandard/ZstdUtils\n+  #16 = Class              #60            // java/lang/Object\n+  #17 = Class              #61            // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability\n   #18 = Utf8               CachedAvailability\n   #19 = Utf8               InnerClasses\n   #20 = Utf8               ZSTANDARD_FRAME_MAGIC\n   #21 = Utf8               [B\n   #22 = Utf8               SKIPPABLE_FRAME_MAGIC\n   #23 = Utf8               cachedZstdAvailability\n   #24 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n   #25 = Utf8               getCachedZstdAvailability\n   #26 = Utf8               ()Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n   #27 = Utf8               Code\n   #28 = Utf8               LineNumberTable\n   #29 = Utf8               internalIsZstdCompressionAvailable\n   #30 = Utf8               ()Z\n   #31 = Utf8               StackMapTable\n-  #32 = Class              #63            // java/lang/Throwable\n+  #32 = Class              #62            // java/lang/Throwable\n   #33 = Utf8               isZstdCompressionAvailable\n-  #34 = Class              #62            // org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability\n-  #35 = Utf8               matches\n-  #36 = Utf8               ([BI)Z\n-  #37 = Utf8               setCacheZstdAvailablity\n-  #38 = Utf8               (Z)V\n-  #39 = Utf8               <init>\n-  #40 = Utf8               ()V\n-  #41 = Utf8               <clinit>\n-  #42 = Utf8               SourceFile\n-  #43 = Utf8               ZstdUtils.java\n-  #44 = NameAndType        #23:#24        // cachedZstdAvailability:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-  #45 = Utf8               com.github.luben.zstd.ZstdInputStream\n-  #46 = Class              #64            // java/lang/Class\n-  #47 = NameAndType        #65:#66        // forName:(Ljava/lang/String;)Ljava/lang/Class;\n-  #48 = Utf8               java/lang/NoClassDefFoundError\n-  #49 = Utf8               java/lang/Exception\n-  #50 = NameAndType        #67:#24        // DONT_CACHE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-  #51 = NameAndType        #68:#24        // CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-  #52 = NameAndType        #29:#30        // internalIsZstdCompressionAvailable:()Z\n-  #53 = NameAndType        #20:#21        // ZSTANDARD_FRAME_MAGIC:[B\n-  #54 = NameAndType        #22:#21        // SKIPPABLE_FRAME_MAGIC:[B\n-  #55 = NameAndType        #69:#24        // CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n-  #56 = NameAndType        #39:#40        // \"<init>\":()V\n-  #57 = Class              #70            // org/apache/commons/compress/utils/OsgiUtils\n-  #58 = NameAndType        #71:#30        // isRunningInOsgiEnvironment:()Z\n-  #59 = NameAndType        #37:#38        // setCacheZstdAvailablity:(Z)V\n-  #60 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdUtils\n-  #61 = Utf8               java/lang/Object\n-  #62 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability\n-  #63 = Utf8               java/lang/Throwable\n-  #64 = Utf8               java/lang/Class\n-  #65 = Utf8               forName\n-  #66 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n-  #67 = Utf8               DONT_CACHE\n-  #68 = Utf8               CACHED_AVAILABLE\n-  #69 = Utf8               CACHED_UNAVAILABLE\n-  #70 = Utf8               org/apache/commons/compress/utils/OsgiUtils\n-  #71 = Utf8               isRunningInOsgiEnvironment\n+  #34 = Utf8               matches\n+  #35 = Utf8               ([BI)Z\n+  #36 = Utf8               setCacheZstdAvailablity\n+  #37 = Utf8               (Z)V\n+  #38 = Utf8               <init>\n+  #39 = Utf8               ()V\n+  #40 = Utf8               <clinit>\n+  #41 = Utf8               SourceFile\n+  #42 = Utf8               ZstdUtils.java\n+  #43 = NameAndType        #23:#24        // cachedZstdAvailability:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+  #44 = Utf8               com.github.luben.zstd.ZstdInputStream\n+  #45 = Class              #63            // java/lang/Class\n+  #46 = NameAndType        #64:#65        // forName:(Ljava/lang/String;)Ljava/lang/Class;\n+  #47 = Utf8               java/lang/NoClassDefFoundError\n+  #48 = Utf8               java/lang/Exception\n+  #49 = NameAndType        #66:#24        // DONT_CACHE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+  #50 = NameAndType        #67:#24        // CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+  #51 = NameAndType        #29:#30        // internalIsZstdCompressionAvailable:()Z\n+  #52 = NameAndType        #20:#21        // ZSTANDARD_FRAME_MAGIC:[B\n+  #53 = NameAndType        #22:#21        // SKIPPABLE_FRAME_MAGIC:[B\n+  #54 = NameAndType        #68:#24        // CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability;\n+  #55 = NameAndType        #38:#39        // \"<init>\":()V\n+  #56 = Class              #69            // org/apache/commons/compress/utils/OsgiUtils\n+  #57 = NameAndType        #70:#30        // isRunningInOsgiEnvironment:()Z\n+  #58 = NameAndType        #36:#37        // setCacheZstdAvailablity:(Z)V\n+  #59 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdUtils\n+  #60 = Utf8               java/lang/Object\n+  #61 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdUtils$CachedAvailability\n+  #62 = Utf8               java/lang/Throwable\n+  #63 = Utf8               java/lang/Class\n+  #64 = Utf8               forName\n+  #65 = Utf8               (Ljava/lang/String;)Ljava/lang/Class;\n+  #66 = Utf8               DONT_CACHE\n+  #67 = Utf8               CACHED_AVAILABLE\n+  #68 = Utf8               CACHED_UNAVAILABLE\n+  #69 = Utf8               org/apache/commons/compress/utils/OsgiUtils\n+  #70 = Utf8               isRunningInOsgiEnvironment\n {\n   private static final byte[] ZSTANDARD_FRAME_MAGIC;\n     descriptor: [B\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_MAGIC;\n     descriptor: [B\n@@ -284,14 +283,15 @@\n         42: return\n       LineNumberTable:\n         line 126: 0\n         line 127: 4\n         line 128: 13\n         line 129: 22\n         line 130: 26\n+        line 131: 36\n         line 133: 42\n       StackMapTable: number_of_entries = 4\n         frame_type = 13 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 22\n           locals = [ int ]\n         frame_type = 66 /* same_locals_1_stack_item */\n"}]}
