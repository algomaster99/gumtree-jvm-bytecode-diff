{"diffoscope-json-version": 1, "source1": "first/CircularByteBuffer.class", "source2": "second/CircularByteBuffer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,130 +1,130 @@\n-  SHA-256 checksum 6ff47e77d37a60140f344e67c523dfc726a11499f4b285f11da5bb39d6e20848\n+  SHA-256 checksum 18311965d60ef2d5cfd76b63a1009a7ad5c9dda7fa1b2234920423048f6b15fb\n   Compiled from \"CircularByteBuffer.java\"\n public class org.apache.commons.io.input.buffer.CircularByteBuffer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #29                         // org/apache/commons/io/input/buffer/CircularByteBuffer\n-  super_class: #30                        // java/lang/Object\n+  this_class: #14                         // org/apache/commons/io/input/buffer/CircularByteBuffer\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #30.#75       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #7.#76        // org/apache/commons/io/IOUtils.byteArray:(I)[B\n-    #3 = Fieldref           #29.#77       // org/apache/commons/io/input/buffer/CircularByteBuffer.buffer:[B\n-    #4 = Fieldref           #29.#78       // org/apache/commons/io/input/buffer/CircularByteBuffer.startOffset:I\n-    #5 = Fieldref           #29.#79       // org/apache/commons/io/input/buffer/CircularByteBuffer.endOffset:I\n-    #6 = Fieldref           #29.#80       // org/apache/commons/io/input/buffer/CircularByteBuffer.currentNumberOfBytes:I\n-    #7 = Class              #81           // org/apache/commons/io/IOUtils\n-    #8 = Methodref          #29.#82       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n-    #9 = Class              #83           // java/lang/IllegalStateException\n-   #10 = String             #84           // No bytes available.\n-   #11 = Methodref          #9.#85        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = String             #53           // targetBuffer\n-   #13 = Methodref          #86.#87       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #14 = Class              #88           // java/lang/IllegalArgumentException\n-   #15 = Class              #89           // java/lang/StringBuilder\n-   #16 = Methodref          #15.#75       // java/lang/StringBuilder.\"<init>\":()V\n-   #17 = String             #90           // Invalid offset:\n-   #18 = Methodref          #15.#91       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #19 = Methodref          #15.#92       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #15.#93       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #21 = Methodref          #14.#85       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = String             #94           // Invalid length:\n-   #23 = String             #95           // The supplied byte array contains only\n-   #24 = String             #96           //  bytes, but offset, and length would require\n-   #25 = String             #97           // Currently, there are only\n-   #26 = String             #98           // in the buffer, not\n-   #27 = String             #99           // No space available\n-   #28 = String             #100          // Buffer\n-   #29 = Class              #101          // org/apache/commons/io/input/buffer/CircularByteBuffer\n-   #30 = Class              #102          // java/lang/Object\n-   #31 = Utf8               buffer\n-   #32 = Utf8               [B\n-   #33 = Utf8               startOffset\n-   #34 = Utf8               I\n-   #35 = Utf8               endOffset\n-   #36 = Utf8               currentNumberOfBytes\n-   #37 = Utf8               <init>\n-   #38 = Utf8               (I)V\n-   #39 = Utf8               Code\n-   #40 = Utf8               LineNumberTable\n-   #41 = Utf8               LocalVariableTable\n-   #42 = Utf8               this\n-   #43 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n-   #44 = Utf8               size\n-   #45 = Utf8               ()V\n-   #46 = Utf8               read\n-   #47 = Utf8               ()B\n-   #48 = Utf8               b\n-   #49 = Utf8               B\n-   #50 = Utf8               StackMapTable\n-   #51 = Utf8               ([BII)V\n-   #52 = Utf8               i\n-   #53 = Utf8               targetBuffer\n-   #54 = Utf8               targetOffset\n-   #55 = Utf8               length\n-   #56 = Utf8               offset\n-   #57 = Utf8               add\n-   #58 = Utf8               (B)V\n-   #59 = Utf8               value\n-   #60 = Utf8               peek\n-   #61 = Utf8               ([BII)Z\n-   #62 = Utf8               sourceBuffer\n-   #63 = Utf8               localOffset\n-   #64 = Utf8               hasSpace\n-   #65 = Utf8               ()Z\n-   #66 = Utf8               (I)Z\n-   #67 = Utf8               count\n-   #68 = Utf8               hasBytes\n-   #69 = Utf8               getSpace\n-   #70 = Utf8               ()I\n-   #71 = Utf8               getCurrentNumberOfBytes\n-   #72 = Utf8               clear\n-   #73 = Utf8               SourceFile\n-   #74 = Utf8               CircularByteBuffer.java\n-   #75 = NameAndType        #37:#45       // \"<init>\":()V\n-   #76 = NameAndType        #103:#104     // byteArray:(I)[B\n-   #77 = NameAndType        #31:#32       // buffer:[B\n-   #78 = NameAndType        #33:#34       // startOffset:I\n-   #79 = NameAndType        #35:#34       // endOffset:I\n-   #80 = NameAndType        #36:#34       // currentNumberOfBytes:I\n-   #81 = Utf8               org/apache/commons/io/IOUtils\n-   #82 = NameAndType        #37:#38       // \"<init>\":(I)V\n-   #83 = Utf8               java/lang/IllegalStateException\n-   #84 = Utf8               No bytes available.\n-   #85 = NameAndType        #37:#105      // \"<init>\":(Ljava/lang/String;)V\n-   #86 = Class              #106          // java/util/Objects\n-   #87 = NameAndType        #107:#108     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #88 = Utf8               java/lang/IllegalArgumentException\n-   #89 = Utf8               java/lang/StringBuilder\n-   #90 = Utf8               Invalid offset:\n-   #91 = NameAndType        #109:#110     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #92 = NameAndType        #109:#111     // append:(I)Ljava/lang/StringBuilder;\n-   #93 = NameAndType        #112:#113     // toString:()Ljava/lang/String;\n-   #94 = Utf8               Invalid length:\n-   #95 = Utf8               The supplied byte array contains only\n-   #96 = Utf8                bytes, but offset, and length would require\n-   #97 = Utf8               Currently, there are only\n-   #98 = Utf8               in the buffer, not\n-   #99 = Utf8               No space available\n-  #100 = Utf8               Buffer\n-  #101 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n-  #102 = Utf8               java/lang/Object\n-  #103 = Utf8               byteArray\n-  #104 = Utf8               (I)[B\n-  #105 = Utf8               (Ljava/lang/String;)V\n-  #106 = Utf8               java/util/Objects\n-  #107 = Utf8               requireNonNull\n-  #108 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #109 = Utf8               append\n-  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #112 = Utf8               toString\n-  #113 = Utf8               ()Ljava/lang/String;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/IOUtils.byteArray:(I)[B\n+    #8 = Class              #10           // org/apache/commons/io/IOUtils\n+    #9 = NameAndType        #11:#12       // byteArray:(I)[B\n+   #10 = Utf8               org/apache/commons/io/IOUtils\n+   #11 = Utf8               byteArray\n+   #12 = Utf8               (I)[B\n+   #13 = Fieldref           #14.#15       // org/apache/commons/io/input/buffer/CircularByteBuffer.buffer:[B\n+   #14 = Class              #16           // org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #15 = NameAndType        #17:#18       // buffer:[B\n+   #16 = Utf8               org/apache/commons/io/input/buffer/CircularByteBuffer\n+   #17 = Utf8               buffer\n+   #18 = Utf8               [B\n+   #19 = Fieldref           #14.#20       // org/apache/commons/io/input/buffer/CircularByteBuffer.startOffset:I\n+   #20 = NameAndType        #21:#22       // startOffset:I\n+   #21 = Utf8               startOffset\n+   #22 = Utf8               I\n+   #23 = Fieldref           #14.#24       // org/apache/commons/io/input/buffer/CircularByteBuffer.endOffset:I\n+   #24 = NameAndType        #25:#22       // endOffset:I\n+   #25 = Utf8               endOffset\n+   #26 = Fieldref           #14.#27       // org/apache/commons/io/input/buffer/CircularByteBuffer.currentNumberOfBytes:I\n+   #27 = NameAndType        #28:#22       // currentNumberOfBytes:I\n+   #28 = Utf8               currentNumberOfBytes\n+   #29 = Methodref          #14.#30       // org/apache/commons/io/input/buffer/CircularByteBuffer.\"<init>\":(I)V\n+   #30 = NameAndType        #5:#31        // \"<init>\":(I)V\n+   #31 = Utf8               (I)V\n+   #32 = Class              #33           // java/lang/IllegalStateException\n+   #33 = Utf8               java/lang/IllegalStateException\n+   #34 = String             #35           // No bytes available.\n+   #35 = Utf8               No bytes available.\n+   #36 = Methodref          #32.#37       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = NameAndType        #5:#38        // \"<init>\":(Ljava/lang/String;)V\n+   #38 = Utf8               (Ljava/lang/String;)V\n+   #39 = String             #40           // targetBuffer\n+   #40 = Utf8               targetBuffer\n+   #41 = Methodref          #42.#43       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #42 = Class              #44           // java/util/Objects\n+   #43 = NameAndType        #45:#46       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #44 = Utf8               java/util/Objects\n+   #45 = Utf8               requireNonNull\n+   #46 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #47 = Class              #48           // java/lang/IllegalArgumentException\n+   #48 = Utf8               java/lang/IllegalArgumentException\n+   #49 = Class              #50           // java/lang/StringBuilder\n+   #50 = Utf8               java/lang/StringBuilder\n+   #51 = Methodref          #49.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #52 = String             #53           // Invalid offset:\n+   #53 = Utf8               Invalid offset:\n+   #54 = Methodref          #49.#55       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #55 = NameAndType        #56:#57       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #56 = Utf8               append\n+   #57 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #58 = Methodref          #49.#59       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #59 = NameAndType        #56:#60       // append:(I)Ljava/lang/StringBuilder;\n+   #60 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #61 = Methodref          #49.#62       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #62 = NameAndType        #63:#64       // toString:()Ljava/lang/String;\n+   #63 = Utf8               toString\n+   #64 = Utf8               ()Ljava/lang/String;\n+   #65 = Methodref          #47.#37       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #66 = String             #67           // Invalid length:\n+   #67 = Utf8               Invalid length:\n+   #68 = String             #69           // The supplied byte array contains only\n+   #69 = Utf8               The supplied byte array contains only\n+   #70 = String             #71           //  bytes, but offset, and length would require\n+   #71 = Utf8                bytes, but offset, and length would require\n+   #72 = String             #73           // Currently, there are only\n+   #73 = Utf8               Currently, there are only\n+   #74 = String             #75           // in the buffer, not\n+   #75 = Utf8               in the buffer, not\n+   #76 = String             #77           // No space available\n+   #77 = Utf8               No space available\n+   #78 = String             #79           // Buffer\n+   #79 = Utf8               Buffer\n+   #80 = Utf8               Code\n+   #81 = Utf8               LineNumberTable\n+   #82 = Utf8               LocalVariableTable\n+   #83 = Utf8               this\n+   #84 = Utf8               Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n+   #85 = Utf8               size\n+   #86 = Utf8               read\n+   #87 = Utf8               ()B\n+   #88 = Utf8               b\n+   #89 = Utf8               B\n+   #90 = Utf8               StackMapTable\n+   #91 = Utf8               ([BII)V\n+   #92 = Utf8               i\n+   #93 = Utf8               targetOffset\n+   #94 = Utf8               length\n+   #95 = Utf8               offset\n+   #96 = Utf8               add\n+   #97 = Utf8               (B)V\n+   #98 = Utf8               value\n+   #99 = Utf8               peek\n+  #100 = Utf8               ([BII)Z\n+  #101 = Utf8               sourceBuffer\n+  #102 = Utf8               localOffset\n+  #103 = Utf8               hasSpace\n+  #104 = Utf8               ()Z\n+  #105 = Utf8               (I)Z\n+  #106 = Utf8               count\n+  #107 = Utf8               hasBytes\n+  #108 = Utf8               getSpace\n+  #109 = Utf8               ()I\n+  #110 = Utf8               getCurrentNumberOfBytes\n+  #111 = Utf8               clear\n+  #112 = Utf8               SourceFile\n+  #113 = Utf8               CircularByteBuffer.java\n {\n   private final byte[] buffer;\n     descriptor: [B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private int startOffset;\n     descriptor: I\n@@ -143,25 +143,25 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: invokestatic  #2                  // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n-         9: putfield      #3                  // Field buffer:[B\n+         6: invokestatic  #7                  // Method org/apache/commons/io/IOUtils.byteArray:(I)[B\n+         9: putfield      #13                 // Field buffer:[B\n         12: aload_0\n         13: iconst_0\n-        14: putfield      #4                  // Field startOffset:I\n+        14: putfield      #19                 // Field startOffset:I\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #5                  // Field endOffset:I\n+        19: putfield      #23                 // Field endOffset:I\n         22: aload_0\n         23: iconst_0\n-        24: putfield      #6                  // Field currentNumberOfBytes:I\n+        24: putfield      #26                 // Field currentNumberOfBytes:I\n         27: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 4\n         line 43: 12\n         line 44: 17\n         line 45: 22\n@@ -174,62 +174,62 @@\n   public org.apache.commons.io.input.buffer.CircularByteBuffer();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: sipush        8192\n-         4: invokespecial #8                  // Method \"<init>\":(I)V\n+         4: invokespecial #29                 // Method \"<init>\":(I)V\n          7: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n \n   public byte read();\n     descriptor: ()B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field currentNumberOfBytes:I\n+         1: getfield      #26                 // Field currentNumberOfBytes:I\n          4: ifgt          17\n-         7: new           #9                  // class java/lang/IllegalStateException\n+         7: new           #32                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #10                 // String No bytes available.\n-        13: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #34                 // String No bytes available.\n+        13: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #3                  // Field buffer:[B\n+        18: getfield      #13                 // Field buffer:[B\n         21: aload_0\n-        22: getfield      #4                  // Field startOffset:I\n+        22: getfield      #19                 // Field startOffset:I\n         25: baload\n         26: istore_1\n         27: aload_0\n         28: dup\n-        29: getfield      #6                  // Field currentNumberOfBytes:I\n+        29: getfield      #26                 // Field currentNumberOfBytes:I\n         32: iconst_1\n         33: isub\n-        34: putfield      #6                  // Field currentNumberOfBytes:I\n+        34: putfield      #26                 // Field currentNumberOfBytes:I\n         37: aload_0\n         38: dup\n-        39: getfield      #4                  // Field startOffset:I\n+        39: getfield      #19                 // Field startOffset:I\n         42: iconst_1\n         43: iadd\n         44: dup_x1\n-        45: putfield      #4                  // Field startOffset:I\n+        45: putfield      #19                 // Field startOffset:I\n         48: aload_0\n-        49: getfield      #3                  // Field buffer:[B\n+        49: getfield      #13                 // Field buffer:[B\n         52: arraylength\n         53: if_icmpne     61\n         56: aload_0\n         57: iconst_0\n-        58: putfield      #4                  // Field startOffset:I\n+        58: putfield      #19                 // Field startOffset:I\n         61: iload_1\n         62: ireturn\n       LineNumberTable:\n         line 64: 0\n         line 65: 7\n         line 67: 17\n         line 68: 27\n@@ -248,138 +248,138 @@\n \n   public void read(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #12                 // String targetBuffer\n-         3: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #39                 // String targetBuffer\n+         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          17\n         11: iload_2\n         12: aload_1\n         13: arraylength\n         14: if_icmplt     44\n-        17: new           #14                 // class java/lang/IllegalArgumentException\n+        17: new           #47                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #15                 // class java/lang/StringBuilder\n+        21: new           #49                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #17                 // String Invalid offset:\n-        30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        28: ldc           #52                 // String Invalid offset:\n+        30: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         33: iload_2\n-        34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        40: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         43: athrow\n         44: iload_3\n         45: iflt          57\n         48: iload_3\n         49: aload_0\n-        50: getfield      #3                  // Field buffer:[B\n+        50: getfield      #13                 // Field buffer:[B\n         53: arraylength\n         54: if_icmple     84\n-        57: new           #14                 // class java/lang/IllegalArgumentException\n+        57: new           #47                 // class java/lang/IllegalArgumentException\n         60: dup\n-        61: new           #15                 // class java/lang/StringBuilder\n+        61: new           #49                 // class java/lang/StringBuilder\n         64: dup\n-        65: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        68: ldc           #22                 // String Invalid length:\n-        70: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        68: ldc           #66                 // String Invalid length:\n+        70: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         73: iload_3\n-        74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        80: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        74: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        77: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        80: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         83: athrow\n         84: iload_2\n         85: iload_3\n         86: iadd\n         87: aload_1\n         88: arraylength\n         89: if_icmple     133\n-        92: new           #14                 // class java/lang/IllegalArgumentException\n+        92: new           #47                 // class java/lang/IllegalArgumentException\n         95: dup\n-        96: new           #15                 // class java/lang/StringBuilder\n+        96: new           #49                 // class java/lang/StringBuilder\n         99: dup\n-       100: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       103: ldc           #23                 // String The supplied byte array contains only\n-       105: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       100: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       103: ldc           #68                 // String The supplied byte array contains only\n+       105: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        108: aload_1\n        109: arraylength\n-       110: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       113: ldc           #24                 // String  bytes, but offset, and length would require\n-       115: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       110: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       113: ldc           #70                 // String  bytes, but offset, and length would require\n+       115: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        118: iload_2\n        119: iload_3\n        120: iadd\n        121: iconst_1\n        122: isub\n-       123: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       126: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       129: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       123: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       126: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       129: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        132: athrow\n        133: aload_0\n-       134: getfield      #6                  // Field currentNumberOfBytes:I\n+       134: getfield      #26                 // Field currentNumberOfBytes:I\n        137: iload_3\n        138: if_icmpge     180\n-       141: new           #9                  // class java/lang/IllegalStateException\n+       141: new           #32                 // class java/lang/IllegalStateException\n        144: dup\n-       145: new           #15                 // class java/lang/StringBuilder\n+       145: new           #49                 // class java/lang/StringBuilder\n        148: dup\n-       149: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       152: ldc           #25                 // String Currently, there are only\n-       154: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       149: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       152: ldc           #72                 // String Currently, there are only\n+       154: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        157: aload_0\n-       158: getfield      #6                  // Field currentNumberOfBytes:I\n-       161: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       164: ldc           #26                 // String in the buffer, not\n-       166: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       158: getfield      #26                 // Field currentNumberOfBytes:I\n+       161: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       164: ldc           #74                 // String in the buffer, not\n+       166: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        169: iload_3\n-       170: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       173: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       176: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       170: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       173: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       176: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        179: athrow\n        180: iload_2\n        181: istore        4\n        183: iconst_0\n        184: istore        5\n        186: iload         5\n        188: iload_3\n        189: if_icmpge     248\n        192: aload_1\n        193: iload         4\n        195: iinc          4, 1\n        198: aload_0\n-       199: getfield      #3                  // Field buffer:[B\n+       199: getfield      #13                 // Field buffer:[B\n        202: aload_0\n-       203: getfield      #4                  // Field startOffset:I\n+       203: getfield      #19                 // Field startOffset:I\n        206: baload\n        207: bastore\n        208: aload_0\n        209: dup\n-       210: getfield      #6                  // Field currentNumberOfBytes:I\n+       210: getfield      #26                 // Field currentNumberOfBytes:I\n        213: iconst_1\n        214: isub\n-       215: putfield      #6                  // Field currentNumberOfBytes:I\n+       215: putfield      #26                 // Field currentNumberOfBytes:I\n        218: aload_0\n        219: dup\n-       220: getfield      #4                  // Field startOffset:I\n+       220: getfield      #19                 // Field startOffset:I\n        223: iconst_1\n        224: iadd\n        225: dup_x1\n-       226: putfield      #4                  // Field startOffset:I\n+       226: putfield      #19                 // Field startOffset:I\n        229: aload_0\n-       230: getfield      #3                  // Field buffer:[B\n+       230: getfield      #13                 // Field buffer:[B\n        233: arraylength\n        234: if_icmpne     242\n        237: aload_0\n        238: iconst_0\n-       239: putfield      #4                  // Field startOffset:I\n+       239: putfield      #19                 // Field startOffset:I\n        242: iinc          5, 1\n        245: goto          186\n        248: return\n       LineNumberTable:\n         line 90: 0\n         line 91: 7\n         line 92: 17\n@@ -421,50 +421,50 @@\n \n   public void add(byte);\n     descriptor: (B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field currentNumberOfBytes:I\n+         1: getfield      #26                 // Field currentNumberOfBytes:I\n          4: aload_0\n-         5: getfield      #3                  // Field buffer:[B\n+         5: getfield      #13                 // Field buffer:[B\n          8: arraylength\n          9: if_icmplt     22\n-        12: new           #9                  // class java/lang/IllegalStateException\n+        12: new           #32                 // class java/lang/IllegalStateException\n         15: dup\n-        16: ldc           #27                 // String No space available\n-        18: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #76                 // String No space available\n+        18: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: aload_0\n-        23: getfield      #3                  // Field buffer:[B\n+        23: getfield      #13                 // Field buffer:[B\n         26: aload_0\n-        27: getfield      #5                  // Field endOffset:I\n+        27: getfield      #23                 // Field endOffset:I\n         30: iload_1\n         31: bastore\n         32: aload_0\n         33: dup\n-        34: getfield      #6                  // Field currentNumberOfBytes:I\n+        34: getfield      #26                 // Field currentNumberOfBytes:I\n         37: iconst_1\n         38: iadd\n-        39: putfield      #6                  // Field currentNumberOfBytes:I\n+        39: putfield      #26                 // Field currentNumberOfBytes:I\n         42: aload_0\n         43: dup\n-        44: getfield      #5                  // Field endOffset:I\n+        44: getfield      #23                 // Field endOffset:I\n         47: iconst_1\n         48: iadd\n         49: dup_x1\n-        50: putfield      #5                  // Field endOffset:I\n+        50: putfield      #23                 // Field endOffset:I\n         53: aload_0\n-        54: getfield      #3                  // Field buffer:[B\n+        54: getfield      #13                 // Field buffer:[B\n         57: arraylength\n         58: if_icmpne     66\n         61: aload_0\n         62: iconst_0\n-        63: putfield      #5                  // Field endOffset:I\n+        63: putfield      #23                 // Field endOffset:I\n         66: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 12\n         line 128: 22\n         line 129: 32\n         line 130: 42\n@@ -480,84 +480,84 @@\n \n   public boolean peek(byte[], int, int);\n     descriptor: ([BII)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=6, args_size=4\n          0: aload_1\n-         1: ldc           #28                 // String Buffer\n-         3: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #78                 // String Buffer\n+         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          17\n         11: iload_2\n         12: aload_1\n         13: arraylength\n         14: if_icmplt     44\n-        17: new           #14                 // class java/lang/IllegalArgumentException\n+        17: new           #47                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #15                 // class java/lang/StringBuilder\n+        21: new           #49                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #17                 // String Invalid offset:\n-        30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        28: ldc           #52                 // String Invalid offset:\n+        30: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         33: iload_2\n-        34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        40: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         43: athrow\n         44: iload_3\n         45: iflt          57\n         48: iload_3\n         49: aload_0\n-        50: getfield      #3                  // Field buffer:[B\n+        50: getfield      #13                 // Field buffer:[B\n         53: arraylength\n         54: if_icmple     84\n-        57: new           #14                 // class java/lang/IllegalArgumentException\n+        57: new           #47                 // class java/lang/IllegalArgumentException\n         60: dup\n-        61: new           #15                 // class java/lang/StringBuilder\n+        61: new           #49                 // class java/lang/StringBuilder\n         64: dup\n-        65: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        68: ldc           #22                 // String Invalid length:\n-        70: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        68: ldc           #66                 // String Invalid length:\n+        70: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         73: iload_3\n-        74: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        77: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        80: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        74: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        77: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        80: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         83: athrow\n         84: iload_3\n         85: aload_0\n-        86: getfield      #6                  // Field currentNumberOfBytes:I\n+        86: getfield      #26                 // Field currentNumberOfBytes:I\n         89: if_icmpge     94\n         92: iconst_0\n         93: ireturn\n         94: aload_0\n-        95: getfield      #4                  // Field startOffset:I\n+        95: getfield      #19                 // Field startOffset:I\n         98: istore        4\n        100: iconst_0\n        101: istore        5\n        103: iload         5\n        105: iload_3\n        106: if_icmpge     149\n        109: aload_0\n-       110: getfield      #3                  // Field buffer:[B\n+       110: getfield      #13                 // Field buffer:[B\n        113: iload         4\n        115: baload\n        116: aload_1\n        117: iload         5\n        119: iload_2\n        120: iadd\n        121: baload\n        122: if_icmpeq     127\n        125: iconst_0\n        126: ireturn\n        127: iinc          4, 1\n        130: iload         4\n        132: aload_0\n-       133: getfield      #3                  // Field buffer:[B\n+       133: getfield      #13                 // Field buffer:[B\n        136: arraylength\n        137: if_icmpne     143\n        140: iconst_0\n        141: istore        4\n        143: iinc          5, 1\n        146: goto          103\n        149: iconst_1\n@@ -602,99 +602,99 @@\n \n   public void add(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: ldc           #28                 // String Buffer\n-         3: invokestatic  #13                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #78                 // String Buffer\n+         3: invokestatic  #41                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          17\n         11: iload_2\n         12: aload_1\n         13: arraylength\n         14: if_icmplt     44\n-        17: new           #14                 // class java/lang/IllegalArgumentException\n+        17: new           #47                 // class java/lang/IllegalArgumentException\n         20: dup\n-        21: new           #15                 // class java/lang/StringBuilder\n+        21: new           #49                 // class java/lang/StringBuilder\n         24: dup\n-        25: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        28: ldc           #17                 // String Invalid offset:\n-        30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        28: ldc           #52                 // String Invalid offset:\n+        30: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         33: iload_2\n-        34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        37: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        40: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        37: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        40: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         43: athrow\n         44: iload_3\n         45: ifge          75\n-        48: new           #14                 // class java/lang/IllegalArgumentException\n+        48: new           #47                 // class java/lang/IllegalArgumentException\n         51: dup\n-        52: new           #15                 // class java/lang/StringBuilder\n+        52: new           #49                 // class java/lang/StringBuilder\n         55: dup\n-        56: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        59: ldc           #22                 // String Invalid length:\n-        61: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        56: invokespecial #51                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        59: ldc           #66                 // String Invalid length:\n+        61: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         64: iload_3\n-        65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        68: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        71: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        65: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        68: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        71: invokespecial #65                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         74: athrow\n         75: aload_0\n-        76: getfield      #6                  // Field currentNumberOfBytes:I\n+        76: getfield      #26                 // Field currentNumberOfBytes:I\n         79: iload_3\n         80: iadd\n         81: aload_0\n-        82: getfield      #3                  // Field buffer:[B\n+        82: getfield      #13                 // Field buffer:[B\n         85: arraylength\n         86: if_icmple     99\n-        89: new           #9                  // class java/lang/IllegalStateException\n+        89: new           #32                 // class java/lang/IllegalStateException\n         92: dup\n-        93: ldc           #27                 // String No space available\n-        95: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        93: ldc           #76                 // String No space available\n+        95: invokespecial #36                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         98: athrow\n         99: iconst_0\n        100: istore        4\n        102: iload         4\n        104: iload_3\n        105: if_icmpge     153\n        108: aload_0\n-       109: getfield      #3                  // Field buffer:[B\n+       109: getfield      #13                 // Field buffer:[B\n        112: aload_0\n-       113: getfield      #5                  // Field endOffset:I\n+       113: getfield      #23                 // Field endOffset:I\n        116: aload_1\n        117: iload_2\n        118: iload         4\n        120: iadd\n        121: baload\n        122: bastore\n        123: aload_0\n        124: dup\n-       125: getfield      #5                  // Field endOffset:I\n+       125: getfield      #23                 // Field endOffset:I\n        128: iconst_1\n        129: iadd\n        130: dup_x1\n-       131: putfield      #5                  // Field endOffset:I\n+       131: putfield      #23                 // Field endOffset:I\n        134: aload_0\n-       135: getfield      #3                  // Field buffer:[B\n+       135: getfield      #13                 // Field buffer:[B\n        138: arraylength\n        139: if_icmpne     147\n        142: aload_0\n        143: iconst_0\n-       144: putfield      #5                  // Field endOffset:I\n+       144: putfield      #23                 // Field endOffset:I\n        147: iinc          4, 1\n        150: goto          102\n        153: aload_0\n        154: dup\n-       155: getfield      #6                  // Field currentNumberOfBytes:I\n+       155: getfield      #26                 // Field currentNumberOfBytes:I\n        158: iload_3\n        159: iadd\n-       160: putfield      #6                  // Field currentNumberOfBytes:I\n+       160: putfield      #26                 // Field currentNumberOfBytes:I\n        163: return\n       LineNumberTable:\n         line 187: 0\n         line 188: 7\n         line 189: 17\n         line 191: 44\n         line 192: 48\n@@ -728,17 +728,17 @@\n \n   public boolean hasSpace();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field currentNumberOfBytes:I\n+         1: getfield      #26                 // Field currentNumberOfBytes:I\n          4: aload_0\n-         5: getfield      #3                  // Field buffer:[B\n+         5: getfield      #13                 // Field buffer:[B\n          8: arraylength\n          9: if_icmpge     16\n         12: iconst_1\n         13: goto          17\n         16: iconst_0\n         17: ireturn\n       LineNumberTable:\n@@ -753,19 +753,19 @@\n \n   public boolean hasSpace(int);\n     descriptor: (I)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #6                  // Field currentNumberOfBytes:I\n+         1: getfield      #26                 // Field currentNumberOfBytes:I\n          4: iload_1\n          5: iadd\n          6: aload_0\n-         7: getfield      #3                  // Field buffer:[B\n+         7: getfield      #13                 // Field buffer:[B\n         10: arraylength\n         11: if_icmpgt     18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n@@ -781,15 +781,15 @@\n \n   public boolean hasBytes();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field currentNumberOfBytes:I\n+         1: getfield      #26                 // Field currentNumberOfBytes:I\n          4: ifle          11\n          7: iconst_1\n          8: goto          12\n         11: iconst_0\n         12: ireturn\n       LineNumberTable:\n         line 236: 0\n@@ -803,54 +803,54 @@\n \n   public int getSpace();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field buffer:[B\n+         1: getfield      #13                 // Field buffer:[B\n          4: arraylength\n          5: aload_0\n-         6: getfield      #6                  // Field currentNumberOfBytes:I\n+         6: getfield      #26                 // Field currentNumberOfBytes:I\n          9: isub\n         10: ireturn\n       LineNumberTable:\n         line 245: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n \n   public int getCurrentNumberOfBytes();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field currentNumberOfBytes:I\n+         1: getfield      #26                 // Field currentNumberOfBytes:I\n          4: ireturn\n       LineNumberTable:\n         line 254: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/buffer/CircularByteBuffer;\n \n   public void clear();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: putfield      #4                  // Field startOffset:I\n+         2: putfield      #19                 // Field startOffset:I\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #5                  // Field endOffset:I\n+         7: putfield      #23                 // Field endOffset:I\n         10: aload_0\n         11: iconst_0\n-        12: putfield      #6                  // Field currentNumberOfBytes:I\n+        12: putfield      #26                 // Field currentNumberOfBytes:I\n         15: return\n       LineNumberTable:\n         line 261: 0\n         line 262: 5\n         line 263: 10\n         line 264: 15\n       LocalVariableTable:\n"}]}
