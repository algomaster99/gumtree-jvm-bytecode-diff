{"diffoscope-json-version": 1, "source1": "first/NumberOutput.class", "source2": "second/NumberOutput.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,95 @@\n-  SHA-256 checksum 9ccd3de7f7168d3e7479dedf071e4191acab816d056a450dd45035943274014c\n+  SHA-256 checksum 442a172c4e711fa73194f7506dfebd90f43ab81713bc9fd74b9e3750c79dfe03\n   Compiled from \"NumberOutput.java\"\n public final class com.fasterxml.jackson.core.io.NumberOutput\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #81                         // com/fasterxml/jackson/core/io/NumberOutput\n   super_class: #82                        // java/lang/Object\n   interfaces: 0, fields: 10, methods: 28, attributes: 1\n Constant pool:\n-    #1 = Methodref          #82.#162      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #163          // java/lang/Integer\n+    #1 = Methodref          #82.#161      // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #162          // java/lang/Integer\n     #3 = Integer            -2147483648\n-    #4 = Methodref          #81.#164      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestI:([CI)I\n-    #5 = Fieldref           #81.#165      // com/fasterxml/jackson/core/io/NumberOutput.MILLION:I\n-    #6 = Methodref          #81.#166      // com/fasterxml/jackson/core/io/NumberOutput._leading3:(I[CI)I\n-    #7 = Methodref          #81.#167      // com/fasterxml/jackson/core/io/NumberOutput._full3:(I[CI)I\n-    #8 = Fieldref           #81.#168      // com/fasterxml/jackson/core/io/NumberOutput.BILLION:I\n-    #9 = Methodref          #81.#169      // com/fasterxml/jackson/core/io/NumberOutput._outputFullBillion:(I[CI)I\n-   #10 = Methodref          #81.#170      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestI:([BI)I\n-   #11 = Methodref          #81.#171      // com/fasterxml/jackson/core/io/NumberOutput._leading3:(I[BI)I\n-   #12 = Methodref          #81.#172      // com/fasterxml/jackson/core/io/NumberOutput._full3:(I[BI)I\n-   #13 = Methodref          #81.#173      // com/fasterxml/jackson/core/io/NumberOutput._outputFullBillion:(I[BI)I\n-   #14 = Fieldref           #81.#174      // com/fasterxml/jackson/core/io/NumberOutput.MIN_INT_AS_LONG:J\n-   #15 = Methodref          #81.#175      // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[CI)I\n-   #16 = Class              #176          // java/lang/Long\n+    #4 = Methodref          #81.#163      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestI:([CI)I\n+    #5 = Fieldref           #81.#164      // com/fasterxml/jackson/core/io/NumberOutput.MILLION:I\n+    #6 = Methodref          #81.#165      // com/fasterxml/jackson/core/io/NumberOutput._leading3:(I[CI)I\n+    #7 = Methodref          #81.#166      // com/fasterxml/jackson/core/io/NumberOutput._full3:(I[CI)I\n+    #8 = Fieldref           #81.#167      // com/fasterxml/jackson/core/io/NumberOutput.BILLION:I\n+    #9 = Methodref          #81.#168      // com/fasterxml/jackson/core/io/NumberOutput._outputFullBillion:(I[CI)I\n+   #10 = Methodref          #81.#169      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestI:([BI)I\n+   #11 = Methodref          #81.#170      // com/fasterxml/jackson/core/io/NumberOutput._leading3:(I[BI)I\n+   #12 = Methodref          #81.#171      // com/fasterxml/jackson/core/io/NumberOutput._full3:(I[BI)I\n+   #13 = Methodref          #81.#172      // com/fasterxml/jackson/core/io/NumberOutput._outputFullBillion:(I[BI)I\n+   #14 = Fieldref           #81.#173      // com/fasterxml/jackson/core/io/NumberOutput.MIN_INT_AS_LONG:J\n+   #15 = Methodref          #81.#174      // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[CI)I\n+   #16 = Class              #175          // java/lang/Long\n    #17 = Long               -9223372036854775808l\n-   #19 = Methodref          #81.#177      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestL:([CI)I\n-   #20 = Fieldref           #81.#178      // com/fasterxml/jackson/core/io/NumberOutput.MAX_INT_AS_LONG:J\n-   #21 = Fieldref           #81.#179      // com/fasterxml/jackson/core/io/NumberOutput.BILLION_L:J\n-   #22 = Methodref          #81.#180      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoBillion:(I[CI)I\n-   #23 = Methodref          #81.#181      // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[BI)I\n-   #24 = Methodref          #81.#182      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestL:([BI)I\n-   #25 = Methodref          #81.#183      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoBillion:(I[BI)I\n-   #26 = Fieldref           #81.#184      // com/fasterxml/jackson/core/io/NumberOutput.sSmallIntStrs:[Ljava/lang/String;\n-   #27 = Fieldref           #81.#185      // com/fasterxml/jackson/core/io/NumberOutput.sSmallIntStrs2:[Ljava/lang/String;\n-   #28 = Methodref          #2.#186       // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #19 = Methodref          #81.#176      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestL:([CI)I\n+   #20 = Fieldref           #81.#177      // com/fasterxml/jackson/core/io/NumberOutput.MAX_INT_AS_LONG:J\n+   #21 = Fieldref           #81.#178      // com/fasterxml/jackson/core/io/NumberOutput.BILLION_L:J\n+   #22 = Methodref          #81.#179      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoBillion:(I[CI)I\n+   #23 = Methodref          #81.#180      // com/fasterxml/jackson/core/io/NumberOutput.outputInt:(I[BI)I\n+   #24 = Methodref          #81.#181      // com/fasterxml/jackson/core/io/NumberOutput._outputSmallestL:([BI)I\n+   #25 = Methodref          #81.#182      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoBillion:(I[BI)I\n+   #26 = Fieldref           #81.#183      // com/fasterxml/jackson/core/io/NumberOutput.sSmallIntStrs:[Ljava/lang/String;\n+   #27 = Fieldref           #81.#184      // com/fasterxml/jackson/core/io/NumberOutput.sSmallIntStrs2:[Ljava/lang/String;\n+   #28 = Methodref          #2.#185       // java/lang/Integer.toString:(I)Ljava/lang/String;\n    #29 = Long               2147483647l\n    #31 = Long               -2147483648l\n-   #33 = Methodref          #81.#186      // com/fasterxml/jackson/core/io/NumberOutput.toString:(I)Ljava/lang/String;\n-   #34 = Methodref          #16.#187      // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #35 = Methodref          #81.#188      // com/fasterxml/jackson/core/io/NumberOutput.toString:(DZ)Ljava/lang/String;\n-   #36 = Methodref          #189.#190     // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toString:(D)Ljava/lang/String;\n-   #37 = Methodref          #191.#190     // java/lang/Double.toString:(D)Ljava/lang/String;\n-   #38 = Methodref          #81.#192      // com/fasterxml/jackson/core/io/NumberOutput.toString:(FZ)Ljava/lang/String;\n-   #39 = Methodref          #193.#194     // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toString:(F)Ljava/lang/String;\n-   #40 = Methodref          #195.#194     // java/lang/Float.toString:(F)Ljava/lang/String;\n-   #41 = Methodref          #191.#196     // java/lang/Double.isNaN:(D)Z\n-   #42 = Methodref          #191.#197     // java/lang/Double.isInfinite:(D)Z\n-   #43 = Methodref          #195.#198     // java/lang/Float.isNaN:(F)Z\n-   #44 = Methodref          #195.#199     // java/lang/Float.isInfinite:(F)Z\n-   #45 = Methodref          #81.#200      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoMillion:([CIII)I\n-   #46 = Fieldref           #81.#201      // com/fasterxml/jackson/core/io/NumberOutput.TRIPLET_TO_CHARS:[I\n-   #47 = Methodref          #81.#202      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoMillion:([BIII)I\n-   #48 = Fieldref           #81.#203      // com/fasterxml/jackson/core/io/NumberOutput.SMALLEST_LONG:Ljava/lang/String;\n-   #49 = Methodref          #59.#204      // java/lang/String.length:()I\n-   #50 = Methodref          #59.#205      // java/lang/String.getChars:(II[CI)V\n-   #51 = Methodref          #59.#206      // java/lang/String.charAt:(I)C\n-   #52 = Fieldref           #81.#207      // com/fasterxml/jackson/core/io/NumberOutput.SMALLEST_INT:Ljava/lang/String;\n+   #33 = Methodref          #81.#185      // com/fasterxml/jackson/core/io/NumberOutput.toString:(I)Ljava/lang/String;\n+   #34 = Methodref          #16.#186      // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #35 = Methodref          #81.#187      // com/fasterxml/jackson/core/io/NumberOutput.toString:(DZ)Ljava/lang/String;\n+   #36 = Methodref          #188.#189     // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal.toString:(D)Ljava/lang/String;\n+   #37 = Methodref          #190.#189     // java/lang/Double.toString:(D)Ljava/lang/String;\n+   #38 = Methodref          #81.#191      // com/fasterxml/jackson/core/io/NumberOutput.toString:(FZ)Ljava/lang/String;\n+   #39 = Methodref          #192.#193     // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal.toString:(F)Ljava/lang/String;\n+   #40 = Methodref          #194.#193     // java/lang/Float.toString:(F)Ljava/lang/String;\n+   #41 = Methodref          #190.#195     // java/lang/Double.isNaN:(D)Z\n+   #42 = Methodref          #190.#196     // java/lang/Double.isInfinite:(D)Z\n+   #43 = Methodref          #194.#197     // java/lang/Float.isNaN:(F)Z\n+   #44 = Methodref          #194.#198     // java/lang/Float.isInfinite:(F)Z\n+   #45 = Methodref          #81.#199      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoMillion:([CIII)I\n+   #46 = Fieldref           #81.#200      // com/fasterxml/jackson/core/io/NumberOutput.TRIPLET_TO_CHARS:[I\n+   #47 = Methodref          #81.#201      // com/fasterxml/jackson/core/io/NumberOutput._outputUptoMillion:([BIII)I\n+   #48 = Fieldref           #81.#202      // com/fasterxml/jackson/core/io/NumberOutput.SMALLEST_LONG:Ljava/lang/String;\n+   #49 = Methodref          #59.#203      // java/lang/String.length:()I\n+   #50 = Methodref          #59.#204      // java/lang/String.getChars:(II[CI)V\n+   #51 = Methodref          #59.#205      // java/lang/String.charAt:(I)C\n+   #52 = Fieldref           #81.#206      // com/fasterxml/jackson/core/io/NumberOutput.SMALLEST_INT:Ljava/lang/String;\n    #53 = Integer            1000000\n    #54 = Integer            1000000000\n    #55 = Long               1000000000l\n-   #57 = Methodref          #59.#208      // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #58 = Methodref          #59.#209      // java/lang/String.valueOf:(J)Ljava/lang/String;\n-   #59 = Class              #210          // java/lang/String\n-   #60 = String             #211          // 0\n-   #61 = String             #212          // 1\n-   #62 = String             #213          // 2\n-   #63 = String             #214          // 3\n-   #64 = String             #215          // 4\n-   #65 = String             #216          // 5\n-   #66 = String             #217          // 6\n-   #67 = String             #218          // 7\n-   #68 = String             #219          // 8\n-   #69 = String             #220          // 9\n-   #70 = String             #221          // 10\n-   #71 = String             #222          // -1\n-   #72 = String             #223          // -2\n-   #73 = String             #224          // -3\n-   #74 = String             #225          // -4\n-   #75 = String             #226          // -5\n-   #76 = String             #227          // -6\n-   #77 = String             #228          // -7\n-   #78 = String             #229          // -8\n-   #79 = String             #230          // -9\n-   #80 = String             #231          // -10\n-   #81 = Class              #232          // com/fasterxml/jackson/core/io/NumberOutput\n-   #82 = Class              #233          // java/lang/Object\n+   #57 = Methodref          #59.#207      // java/lang/String.valueOf:(I)Ljava/lang/String;\n+   #58 = Methodref          #59.#208      // java/lang/String.valueOf:(J)Ljava/lang/String;\n+   #59 = Class              #209          // java/lang/String\n+   #60 = String             #210          // 0\n+   #61 = String             #211          // 1\n+   #62 = String             #212          // 2\n+   #63 = String             #213          // 3\n+   #64 = String             #214          // 4\n+   #65 = String             #215          // 5\n+   #66 = String             #216          // 6\n+   #67 = String             #217          // 7\n+   #68 = String             #218          // 8\n+   #69 = String             #219          // 9\n+   #70 = String             #220          // 10\n+   #71 = String             #221          // -1\n+   #72 = String             #222          // -2\n+   #73 = String             #223          // -3\n+   #74 = String             #224          // -4\n+   #75 = String             #225          // -5\n+   #76 = String             #226          // -6\n+   #77 = String             #227          // -7\n+   #78 = String             #228          // -8\n+   #79 = String             #229          // -9\n+   #80 = String             #230          // -10\n+   #81 = Class              #231          // com/fasterxml/jackson/core/io/NumberOutput\n+   #82 = Class              #232          // java/lang/Object\n    #83 = Utf8               MILLION\n    #84 = Utf8               I\n    #85 = Utf8               BILLION\n    #86 = Utf8               BILLION_L\n    #87 = Utf8               J\n    #88 = Utf8               MIN_INT_AS_LONG\n    #89 = Utf8               MAX_INT_AS_LONG\n@@ -130,130 +130,129 @@\n   #124 = Utf8               v2\n   #125 = Utf8               (J)Ljava/lang/String;\n   #126 = Utf8               (D)Ljava/lang/String;\n   #127 = Utf8               D\n   #128 = Utf8               (DZ)Ljava/lang/String;\n   #129 = Utf8               useFastWriter\n   #130 = Utf8               Z\n-  #131 = Class              #210          // java/lang/String\n-  #132 = Utf8               (F)Ljava/lang/String;\n-  #133 = Utf8               F\n-  #134 = Utf8               (FZ)Ljava/lang/String;\n-  #135 = Utf8               notFinite\n-  #136 = Utf8               (D)Z\n-  #137 = Utf8               value\n-  #138 = Utf8               (F)Z\n-  #139 = Utf8               _outputUptoBillion\n-  #140 = Utf8               millions\n-  #141 = Utf8               enc\n-  #142 = Utf8               _outputFullBillion\n-  #143 = Utf8               _outputUptoMillion\n-  #144 = Utf8               ([CIII)I\n-  #145 = Utf8               ([BIII)I\n-  #146 = Utf8               _leading3\n-  #147 = Utf8               t\n-  #148 = Utf8               _full3\n-  #149 = Utf8               _outputSmallestL\n-  #150 = Utf8               ([CI)I\n-  #151 = Utf8               len\n-  #152 = Utf8               ([BI)I\n-  #153 = Utf8               i\n-  #154 = Utf8               _outputSmallestI\n-  #155 = Utf8               <clinit>\n-  #156 = Utf8               i3\n-  #157 = Utf8               i2\n-  #158 = Utf8               i1\n-  #159 = Utf8               fullIx\n-  #160 = Utf8               SourceFile\n-  #161 = Utf8               NumberOutput.java\n-  #162 = NameAndType        #98:#99       // \"<init>\":()V\n-  #163 = Utf8               java/lang/Integer\n-  #164 = NameAndType        #154:#150     // _outputSmallestI:([CI)I\n-  #165 = NameAndType        #83:#84       // MILLION:I\n-  #166 = NameAndType        #146:#106     // _leading3:(I[CI)I\n-  #167 = NameAndType        #148:#106     // _full3:(I[CI)I\n-  #168 = NameAndType        #85:#84       // BILLION:I\n-  #169 = NameAndType        #142:#106     // _outputFullBillion:(I[CI)I\n-  #170 = NameAndType        #154:#152     // _outputSmallestI:([BI)I\n-  #171 = NameAndType        #146:#115     // _leading3:(I[BI)I\n-  #172 = NameAndType        #148:#115     // _full3:(I[BI)I\n-  #173 = NameAndType        #142:#115     // _outputFullBillion:(I[BI)I\n-  #174 = NameAndType        #88:#87       // MIN_INT_AS_LONG:J\n-  #175 = NameAndType        #105:#106     // outputInt:(I[CI)I\n-  #176 = Utf8               java/lang/Long\n-  #177 = NameAndType        #149:#150     // _outputSmallestL:([CI)I\n-  #178 = NameAndType        #89:#87       // MAX_INT_AS_LONG:J\n-  #179 = NameAndType        #86:#87       // BILLION_L:J\n-  #180 = NameAndType        #139:#106     // _outputUptoBillion:(I[CI)I\n-  #181 = NameAndType        #105:#115     // outputInt:(I[BI)I\n-  #182 = NameAndType        #149:#152     // _outputSmallestL:([BI)I\n-  #183 = NameAndType        #139:#115     // _outputUptoBillion:(I[BI)I\n-  #184 = NameAndType        #95:#96       // sSmallIntStrs:[Ljava/lang/String;\n-  #185 = NameAndType        #97:#96       // sSmallIntStrs2:[Ljava/lang/String;\n-  #186 = NameAndType        #122:#123     // toString:(I)Ljava/lang/String;\n-  #187 = NameAndType        #122:#125     // toString:(J)Ljava/lang/String;\n-  #188 = NameAndType        #122:#128     // toString:(DZ)Ljava/lang/String;\n-  #189 = Class              #234          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-  #190 = NameAndType        #122:#126     // toString:(D)Ljava/lang/String;\n-  #191 = Class              #235          // java/lang/Double\n-  #192 = NameAndType        #122:#134     // toString:(FZ)Ljava/lang/String;\n-  #193 = Class              #236          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-  #194 = NameAndType        #122:#132     // toString:(F)Ljava/lang/String;\n-  #195 = Class              #237          // java/lang/Float\n-  #196 = NameAndType        #238:#136     // isNaN:(D)Z\n-  #197 = NameAndType        #239:#136     // isInfinite:(D)Z\n-  #198 = NameAndType        #238:#138     // isNaN:(F)Z\n-  #199 = NameAndType        #239:#138     // isInfinite:(F)Z\n-  #200 = NameAndType        #143:#144     // _outputUptoMillion:([CIII)I\n-  #201 = NameAndType        #93:#94       // TRIPLET_TO_CHARS:[I\n-  #202 = NameAndType        #143:#145     // _outputUptoMillion:([BIII)I\n-  #203 = NameAndType        #92:#91       // SMALLEST_LONG:Ljava/lang/String;\n-  #204 = NameAndType        #240:#241     // length:()I\n-  #205 = NameAndType        #242:#243     // getChars:(II[CI)V\n-  #206 = NameAndType        #244:#245     // charAt:(I)C\n-  #207 = NameAndType        #90:#91       // SMALLEST_INT:Ljava/lang/String;\n-  #208 = NameAndType        #246:#123     // valueOf:(I)Ljava/lang/String;\n-  #209 = NameAndType        #246:#125     // valueOf:(J)Ljava/lang/String;\n-  #210 = Utf8               java/lang/String\n-  #211 = Utf8               0\n-  #212 = Utf8               1\n-  #213 = Utf8               2\n-  #214 = Utf8               3\n-  #215 = Utf8               4\n-  #216 = Utf8               5\n-  #217 = Utf8               6\n-  #218 = Utf8               7\n-  #219 = Utf8               8\n-  #220 = Utf8               9\n-  #221 = Utf8               10\n-  #222 = Utf8               -1\n-  #223 = Utf8               -2\n-  #224 = Utf8               -3\n-  #225 = Utf8               -4\n-  #226 = Utf8               -5\n-  #227 = Utf8               -6\n-  #228 = Utf8               -7\n-  #229 = Utf8               -8\n-  #230 = Utf8               -9\n-  #231 = Utf8               -10\n-  #232 = Utf8               com/fasterxml/jackson/core/io/NumberOutput\n-  #233 = Utf8               java/lang/Object\n-  #234 = Utf8               com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n-  #235 = Utf8               java/lang/Double\n-  #236 = Utf8               com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n-  #237 = Utf8               java/lang/Float\n-  #238 = Utf8               isNaN\n-  #239 = Utf8               isInfinite\n-  #240 = Utf8               length\n-  #241 = Utf8               ()I\n-  #242 = Utf8               getChars\n-  #243 = Utf8               (II[CI)V\n-  #244 = Utf8               charAt\n-  #245 = Utf8               (I)C\n-  #246 = Utf8               valueOf\n+  #131 = Utf8               (F)Ljava/lang/String;\n+  #132 = Utf8               F\n+  #133 = Utf8               (FZ)Ljava/lang/String;\n+  #134 = Utf8               notFinite\n+  #135 = Utf8               (D)Z\n+  #136 = Utf8               value\n+  #137 = Utf8               (F)Z\n+  #138 = Utf8               _outputUptoBillion\n+  #139 = Utf8               millions\n+  #140 = Utf8               enc\n+  #141 = Utf8               _outputFullBillion\n+  #142 = Utf8               _outputUptoMillion\n+  #143 = Utf8               ([CIII)I\n+  #144 = Utf8               ([BIII)I\n+  #145 = Utf8               _leading3\n+  #146 = Utf8               t\n+  #147 = Utf8               _full3\n+  #148 = Utf8               _outputSmallestL\n+  #149 = Utf8               ([CI)I\n+  #150 = Utf8               len\n+  #151 = Utf8               ([BI)I\n+  #152 = Utf8               i\n+  #153 = Utf8               _outputSmallestI\n+  #154 = Utf8               <clinit>\n+  #155 = Utf8               i3\n+  #156 = Utf8               i2\n+  #157 = Utf8               i1\n+  #158 = Utf8               fullIx\n+  #159 = Utf8               SourceFile\n+  #160 = Utf8               NumberOutput.java\n+  #161 = NameAndType        #98:#99       // \"<init>\":()V\n+  #162 = Utf8               java/lang/Integer\n+  #163 = NameAndType        #153:#149     // _outputSmallestI:([CI)I\n+  #164 = NameAndType        #83:#84       // MILLION:I\n+  #165 = NameAndType        #145:#106     // _leading3:(I[CI)I\n+  #166 = NameAndType        #147:#106     // _full3:(I[CI)I\n+  #167 = NameAndType        #85:#84       // BILLION:I\n+  #168 = NameAndType        #141:#106     // _outputFullBillion:(I[CI)I\n+  #169 = NameAndType        #153:#151     // _outputSmallestI:([BI)I\n+  #170 = NameAndType        #145:#115     // _leading3:(I[BI)I\n+  #171 = NameAndType        #147:#115     // _full3:(I[BI)I\n+  #172 = NameAndType        #141:#115     // _outputFullBillion:(I[BI)I\n+  #173 = NameAndType        #88:#87       // MIN_INT_AS_LONG:J\n+  #174 = NameAndType        #105:#106     // outputInt:(I[CI)I\n+  #175 = Utf8               java/lang/Long\n+  #176 = NameAndType        #148:#149     // _outputSmallestL:([CI)I\n+  #177 = NameAndType        #89:#87       // MAX_INT_AS_LONG:J\n+  #178 = NameAndType        #86:#87       // BILLION_L:J\n+  #179 = NameAndType        #138:#106     // _outputUptoBillion:(I[CI)I\n+  #180 = NameAndType        #105:#115     // outputInt:(I[BI)I\n+  #181 = NameAndType        #148:#151     // _outputSmallestL:([BI)I\n+  #182 = NameAndType        #138:#115     // _outputUptoBillion:(I[BI)I\n+  #183 = NameAndType        #95:#96       // sSmallIntStrs:[Ljava/lang/String;\n+  #184 = NameAndType        #97:#96       // sSmallIntStrs2:[Ljava/lang/String;\n+  #185 = NameAndType        #122:#123     // toString:(I)Ljava/lang/String;\n+  #186 = NameAndType        #122:#125     // toString:(J)Ljava/lang/String;\n+  #187 = NameAndType        #122:#128     // toString:(DZ)Ljava/lang/String;\n+  #188 = Class              #233          // com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+  #189 = NameAndType        #122:#126     // toString:(D)Ljava/lang/String;\n+  #190 = Class              #234          // java/lang/Double\n+  #191 = NameAndType        #122:#133     // toString:(FZ)Ljava/lang/String;\n+  #192 = Class              #235          // com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+  #193 = NameAndType        #122:#131     // toString:(F)Ljava/lang/String;\n+  #194 = Class              #236          // java/lang/Float\n+  #195 = NameAndType        #237:#135     // isNaN:(D)Z\n+  #196 = NameAndType        #238:#135     // isInfinite:(D)Z\n+  #197 = NameAndType        #237:#137     // isNaN:(F)Z\n+  #198 = NameAndType        #238:#137     // isInfinite:(F)Z\n+  #199 = NameAndType        #142:#143     // _outputUptoMillion:([CIII)I\n+  #200 = NameAndType        #93:#94       // TRIPLET_TO_CHARS:[I\n+  #201 = NameAndType        #142:#144     // _outputUptoMillion:([BIII)I\n+  #202 = NameAndType        #92:#91       // SMALLEST_LONG:Ljava/lang/String;\n+  #203 = NameAndType        #239:#240     // length:()I\n+  #204 = NameAndType        #241:#242     // getChars:(II[CI)V\n+  #205 = NameAndType        #243:#244     // charAt:(I)C\n+  #206 = NameAndType        #90:#91       // SMALLEST_INT:Ljava/lang/String;\n+  #207 = NameAndType        #245:#123     // valueOf:(I)Ljava/lang/String;\n+  #208 = NameAndType        #245:#125     // valueOf:(J)Ljava/lang/String;\n+  #209 = Utf8               java/lang/String\n+  #210 = Utf8               0\n+  #211 = Utf8               1\n+  #212 = Utf8               2\n+  #213 = Utf8               3\n+  #214 = Utf8               4\n+  #215 = Utf8               5\n+  #216 = Utf8               6\n+  #217 = Utf8               7\n+  #218 = Utf8               8\n+  #219 = Utf8               9\n+  #220 = Utf8               10\n+  #221 = Utf8               -1\n+  #222 = Utf8               -2\n+  #223 = Utf8               -3\n+  #224 = Utf8               -4\n+  #225 = Utf8               -5\n+  #226 = Utf8               -6\n+  #227 = Utf8               -7\n+  #228 = Utf8               -8\n+  #229 = Utf8               -9\n+  #230 = Utf8               -10\n+  #231 = Utf8               com/fasterxml/jackson/core/io/NumberOutput\n+  #232 = Utf8               java/lang/Object\n+  #233 = Utf8               com/fasterxml/jackson/core/io/schubfach/DoubleToDecimal\n+  #234 = Utf8               java/lang/Double\n+  #235 = Utf8               com/fasterxml/jackson/core/io/schubfach/FloatToDecimal\n+  #236 = Utf8               java/lang/Float\n+  #237 = Utf8               isNaN\n+  #238 = Utf8               isInfinite\n+  #239 = Utf8               length\n+  #240 = Utf8               ()I\n+  #241 = Utf8               getChars\n+  #242 = Utf8               (II[CI)V\n+  #243 = Utf8               charAt\n+  #244 = Utf8               (I)C\n+  #245 = Utf8               valueOf\n {\n   private static int MILLION;\n     descriptor: I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n \n   private static int BILLION;\n     descriptor: I\n"}]}
