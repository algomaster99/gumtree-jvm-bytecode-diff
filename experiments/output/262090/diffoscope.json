{"diffoscope-json-version": 1, "source1": "first/FailableBiFunction.class", "source2": "second/FailableBiFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,20 +2,20 @@\n package org.apache.commons.lang3.function;\n \n import java.util.Objects;\n \n @FunctionalInterface\n public interface FailableBiFunction<T, U, R, E extends Throwable>\n {\n-    public static final FailableBiFunction NOP = (t, u) -> null;\n+    public static final FailableBiFunction NOP = (p0, p1) -> null;\n     \n     default <T, U, R, E extends Throwable> FailableBiFunction<T, U, R, E> nop() {\n         return FailableBiFunction.NOP;\n     }\n     \n-    default <V> FailableBiFunction<T, U, V, E> andThen(final FailableFunction<? super R, ? extends V, E> after) {\n-        Objects.requireNonNull(after);\n-        return (FailableBiFunction<T, U, V, E>)((t, u) -> after.apply(this.apply(t, u)));\n+    default <V> FailableBiFunction<T, U, V, E> andThen(final FailableFunction<? super R, ? extends V, E> obj) {\n+        Objects.requireNonNull(obj);\n+        return (FailableBiFunction<T, U, V, E>)((o, o2) -> failableFunction.apply(this.apply(o, o2)));\n     }\n     \n     R apply(final T p0, final U p1) throws E, Throwable;\n }\n"}]}
