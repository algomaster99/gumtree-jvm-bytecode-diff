{"diffoscope-json-version": 1, "source1": "first/StopWatch.class", "source2": "second/StopWatch.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,168 +1,168 @@\n-  SHA-256 checksum adf7ab12f7ecf87db32dc6af23208a7a563de9744bbcc17ea85a657fdb749725\n+  SHA-256 checksum 4f45f83503e84f30d27925023ef4b5c34f6531775b38d1dad8e425933b74ef96\n   Compiled from \"StopWatch.java\"\n public class org.apache.commons.lang3.time.StopWatch\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/lang3/time/StopWatch\n-  super_class: #43                        // java/lang/Object\n+  super_class: #11                        // java/lang/Object\n   interfaces: 0, fields: 6, methods: 20, attributes: 2\n Constant pool:\n-    #1 = Class              #90           // org/apache/commons/lang3/time/StopWatch\n-    #2 = Methodref          #1.#91        // org/apache/commons/lang3/time/StopWatch.\"<init>\":()V\n-    #3 = Methodref          #1.#92        // org/apache/commons/lang3/time/StopWatch.start:()V\n-    #4 = Methodref          #43.#91       // java/lang/Object.\"<init>\":()V\n-    #5 = Fieldref           #48.#93       // org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-    #6 = Fieldref           #1.#94        // org/apache/commons/lang3/time/StopWatch.runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-    #7 = Fieldref           #46.#95       // org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-    #8 = Fieldref           #1.#96        // org/apache/commons/lang3/time/StopWatch.splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-    #9 = Fieldref           #48.#97       // org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #10 = Class              #98           // java/lang/IllegalStateException\n-   #11 = String             #99           // Stopwatch must be reset before being restarted.\n-   #12 = Methodref          #10.#100      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = String             #101          // Stopwatch already started.\n-   #14 = Methodref          #102.#103     // java/lang/System.nanoTime:()J\n-   #15 = Fieldref           #1.#104       // org/apache/commons/lang3/time/StopWatch.startTime:J\n-   #16 = Methodref          #102.#105     // java/lang/System.currentTimeMillis:()J\n-   #17 = Fieldref           #1.#106       // org/apache/commons/lang3/time/StopWatch.startTimeMillis:J\n-   #18 = Fieldref           #48.#107      // org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #19 = Fieldref           #48.#108      // org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #20 = String             #109          // Stopwatch is not running.\n-   #21 = Fieldref           #1.#110       // org/apache/commons/lang3/time/StopWatch.stopTime:J\n-   #22 = Fieldref           #46.#111      // org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #23 = String             #112          // Stopwatch has not been split.\n-   #24 = String             #113          // Stopwatch must be running to suspend.\n-   #25 = String             #114          // Stopwatch must be suspended to resume.\n-   #26 = Methodref          #1.#115       // org/apache/commons/lang3/time/StopWatch.getNanoTime:()J\n-   #27 = Long               1000000l\n-   #29 = Fieldref           #116.#117     // java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-   #30 = Methodref          #116.#118     // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n-   #31 = Class              #119          // java/lang/RuntimeException\n-   #32 = String             #120          // Illegal running state has occurred.\n-   #33 = Methodref          #31.#100      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #1.#121       // org/apache/commons/lang3/time/StopWatch.getSplitNanoTime:()J\n-   #35 = String             #122          // Stopwatch must be split to get the split time.\n-   #36 = String             #123          // Stopwatch has not been started\n-   #37 = Methodref          #1.#124       // org/apache/commons/lang3/time/StopWatch.getTime:()J\n-   #38 = Methodref          #125.#126     // org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n-   #39 = Methodref          #1.#127       // org/apache/commons/lang3/time/StopWatch.getSplitTime:()J\n-   #40 = Methodref          #48.#128      // org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n-   #41 = Methodref          #48.#129      // org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n-   #42 = Methodref          #48.#130      // org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n-   #43 = Class              #131          // java/lang/Object\n-   #44 = Class              #132          // org/apache/commons/lang3/time/StopWatch$1\n-   #45 = Utf8               InnerClasses\n-   #46 = Class              #133          // org/apache/commons/lang3/time/StopWatch$SplitState\n-   #47 = Utf8               SplitState\n-   #48 = Class              #134          // org/apache/commons/lang3/time/StopWatch$State\n-   #49 = Utf8               State\n-   #50 = Utf8               NANO_2_MILLIS\n-   #51 = Utf8               J\n-   #52 = Utf8               ConstantValue\n-   #53 = Utf8               runningState\n-   #54 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #55 = Utf8               splitState\n-   #56 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #57 = Utf8               startTime\n+    #1 = Class              #2            // org/apache/commons/lang3/time/StopWatch\n+    #2 = Utf8               org/apache/commons/lang3/time/StopWatch\n+    #3 = Methodref          #1.#4         // org/apache/commons/lang3/time/StopWatch.\"<init>\":()V\n+    #4 = NameAndType        #5:#6         // \"<init>\":()V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #1.#8         // org/apache/commons/lang3/time/StopWatch.start:()V\n+    #8 = NameAndType        #9:#6         // start:()V\n+    #9 = Utf8               start\n+   #10 = Methodref          #11.#4        // java/lang/Object.\"<init>\":()V\n+   #11 = Class              #12           // java/lang/Object\n+   #12 = Utf8               java/lang/Object\n+   #13 = Fieldref           #14.#15       // org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #14 = Class              #16           // org/apache/commons/lang3/time/StopWatch$State\n+   #15 = NameAndType        #17:#18       // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #16 = Utf8               org/apache/commons/lang3/time/StopWatch$State\n+   #17 = Utf8               UNSTARTED\n+   #18 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #19 = Fieldref           #1.#20        // org/apache/commons/lang3/time/StopWatch.runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #20 = NameAndType        #21:#18       // runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #21 = Utf8               runningState\n+   #22 = Fieldref           #23.#24       // org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #23 = Class              #25           // org/apache/commons/lang3/time/StopWatch$SplitState\n+   #24 = NameAndType        #26:#27       // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #25 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState\n+   #26 = Utf8               UNSPLIT\n+   #27 = Utf8               Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #28 = Fieldref           #1.#29        // org/apache/commons/lang3/time/StopWatch.splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #29 = NameAndType        #30:#27       // splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #30 = Utf8               splitState\n+   #31 = Fieldref           #14.#32       // org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #32 = NameAndType        #33:#18       // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #33 = Utf8               STOPPED\n+   #34 = Class              #35           // java/lang/IllegalStateException\n+   #35 = Utf8               java/lang/IllegalStateException\n+   #36 = String             #37           // Stopwatch must be reset before being restarted.\n+   #37 = Utf8               Stopwatch must be reset before being restarted.\n+   #38 = Methodref          #34.#39       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #39 = NameAndType        #5:#40        // \"<init>\":(Ljava/lang/String;)V\n+   #40 = Utf8               (Ljava/lang/String;)V\n+   #41 = String             #42           // Stopwatch already started.\n+   #42 = Utf8               Stopwatch already started.\n+   #43 = Methodref          #44.#45       // java/lang/System.nanoTime:()J\n+   #44 = Class              #46           // java/lang/System\n+   #45 = NameAndType        #47:#48       // nanoTime:()J\n+   #46 = Utf8               java/lang/System\n+   #47 = Utf8               nanoTime\n+   #48 = Utf8               ()J\n+   #49 = Fieldref           #1.#50        // org/apache/commons/lang3/time/StopWatch.startTime:J\n+   #50 = NameAndType        #51:#52       // startTime:J\n+   #51 = Utf8               startTime\n+   #52 = Utf8               J\n+   #53 = Methodref          #44.#54       // java/lang/System.currentTimeMillis:()J\n+   #54 = NameAndType        #55:#48       // currentTimeMillis:()J\n+   #55 = Utf8               currentTimeMillis\n+   #56 = Fieldref           #1.#57        // org/apache/commons/lang3/time/StopWatch.startTimeMillis:J\n+   #57 = NameAndType        #58:#52       // startTimeMillis:J\n    #58 = Utf8               startTimeMillis\n-   #59 = Utf8               stopTime\n-   #60 = Utf8               createStarted\n-   #61 = Utf8               ()Lorg/apache/commons/lang3/time/StopWatch;\n-   #62 = Utf8               Code\n-   #63 = Utf8               LineNumberTable\n-   #64 = Utf8               <init>\n-   #65 = Utf8               ()V\n-   #66 = Utf8               start\n-   #67 = Utf8               StackMapTable\n-   #68 = Utf8               stop\n-   #69 = Utf8               reset\n-   #70 = Utf8               split\n-   #71 = Utf8               unsplit\n-   #72 = Utf8               suspend\n-   #73 = Utf8               resume\n-   #74 = Utf8               getTime\n-   #75 = Utf8               ()J\n-   #76 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n-   #77 = Utf8               getNanoTime\n-   #78 = Utf8               getSplitTime\n-   #79 = Utf8               getSplitNanoTime\n-   #80 = Utf8               getStartTime\n-   #81 = Utf8               toString\n-   #82 = Utf8               ()Ljava/lang/String;\n-   #83 = Utf8               toSplitString\n-   #84 = Utf8               isStarted\n-   #85 = Utf8               ()Z\n-   #86 = Utf8               isSuspended\n-   #87 = Utf8               isStopped\n-   #88 = Utf8               SourceFile\n-   #89 = Utf8               StopWatch.java\n-   #90 = Utf8               org/apache/commons/lang3/time/StopWatch\n-   #91 = NameAndType        #64:#65       // \"<init>\":()V\n-   #92 = NameAndType        #66:#65       // start:()V\n-   #93 = NameAndType        #135:#54      // UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #94 = NameAndType        #53:#54       // runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #95 = NameAndType        #136:#56      // UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #96 = NameAndType        #55:#56       // splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-   #97 = NameAndType        #137:#54      // STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-   #98 = Utf8               java/lang/IllegalStateException\n-   #99 = Utf8               Stopwatch must be reset before being restarted.\n-  #100 = NameAndType        #64:#138      // \"<init>\":(Ljava/lang/String;)V\n-  #101 = Utf8               Stopwatch already started.\n-  #102 = Class              #139          // java/lang/System\n-  #103 = NameAndType        #140:#75      // nanoTime:()J\n-  #104 = NameAndType        #57:#51       // startTime:J\n-  #105 = NameAndType        #141:#75      // currentTimeMillis:()J\n-  #106 = NameAndType        #58:#51       // startTimeMillis:J\n-  #107 = NameAndType        #142:#54      // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #108 = NameAndType        #143:#54      // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-  #109 = Utf8               Stopwatch is not running.\n-  #110 = NameAndType        #59:#51       // stopTime:J\n-  #111 = NameAndType        #144:#56      // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-  #112 = Utf8               Stopwatch has not been split.\n-  #113 = Utf8               Stopwatch must be running to suspend.\n-  #114 = Utf8               Stopwatch must be suspended to resume.\n-  #115 = NameAndType        #77:#75       // getNanoTime:()J\n-  #116 = Class              #145          // java/util/concurrent/TimeUnit\n-  #117 = NameAndType        #146:#147     // NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-  #118 = NameAndType        #148:#149     // convert:(JLjava/util/concurrent/TimeUnit;)J\n-  #119 = Utf8               java/lang/RuntimeException\n-  #120 = Utf8               Illegal running state has occurred.\n-  #121 = NameAndType        #79:#75       // getSplitNanoTime:()J\n-  #122 = Utf8               Stopwatch must be split to get the split time.\n-  #123 = Utf8               Stopwatch has not been started\n-  #124 = NameAndType        #74:#75       // getTime:()J\n-  #125 = Class              #150          // org/apache/commons/lang3/time/DurationFormatUtils\n-  #126 = NameAndType        #151:#152     // formatDurationHMS:(J)Ljava/lang/String;\n-  #127 = NameAndType        #78:#75       // getSplitTime:()J\n-  #128 = NameAndType        #84:#85       // isStarted:()Z\n-  #129 = NameAndType        #86:#85       // isSuspended:()Z\n-  #130 = NameAndType        #87:#85       // isStopped:()Z\n-  #131 = Utf8               java/lang/Object\n-  #132 = Utf8               org/apache/commons/lang3/time/StopWatch$1\n-  #133 = Utf8               org/apache/commons/lang3/time/StopWatch$SplitState\n-  #134 = Utf8               org/apache/commons/lang3/time/StopWatch$State\n-  #135 = Utf8               UNSTARTED\n-  #136 = Utf8               UNSPLIT\n-  #137 = Utf8               STOPPED\n-  #138 = Utf8               (Ljava/lang/String;)V\n-  #139 = Utf8               java/lang/System\n-  #140 = Utf8               nanoTime\n-  #141 = Utf8               currentTimeMillis\n-  #142 = Utf8               RUNNING\n-  #143 = Utf8               SUSPENDED\n-  #144 = Utf8               SPLIT\n-  #145 = Utf8               java/util/concurrent/TimeUnit\n-  #146 = Utf8               NANOSECONDS\n-  #147 = Utf8               Ljava/util/concurrent/TimeUnit;\n-  #148 = Utf8               convert\n-  #149 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n-  #150 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils\n-  #151 = Utf8               formatDurationHMS\n-  #152 = Utf8               (J)Ljava/lang/String;\n+   #59 = Fieldref           #14.#60       // org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #60 = NameAndType        #61:#18       // RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #61 = Utf8               RUNNING\n+   #62 = Fieldref           #14.#63       // org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #63 = NameAndType        #64:#18       // SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+   #64 = Utf8               SUSPENDED\n+   #65 = String             #66           // Stopwatch is not running.\n+   #66 = Utf8               Stopwatch is not running.\n+   #67 = Fieldref           #1.#68        // org/apache/commons/lang3/time/StopWatch.stopTime:J\n+   #68 = NameAndType        #69:#52       // stopTime:J\n+   #69 = Utf8               stopTime\n+   #70 = Fieldref           #23.#71       // org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #71 = NameAndType        #72:#27       // SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+   #72 = Utf8               SPLIT\n+   #73 = String             #74           // Stopwatch has not been split.\n+   #74 = Utf8               Stopwatch has not been split.\n+   #75 = String             #76           // Stopwatch must be running to suspend.\n+   #76 = Utf8               Stopwatch must be running to suspend.\n+   #77 = String             #78           // Stopwatch must be suspended to resume.\n+   #78 = Utf8               Stopwatch must be suspended to resume.\n+   #79 = Methodref          #1.#80        // org/apache/commons/lang3/time/StopWatch.getNanoTime:()J\n+   #80 = NameAndType        #81:#48       // getNanoTime:()J\n+   #81 = Utf8               getNanoTime\n+   #82 = Long               1000000l\n+   #84 = Fieldref           #85.#86       // java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+   #85 = Class              #87           // java/util/concurrent/TimeUnit\n+   #86 = NameAndType        #88:#89       // NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+   #87 = Utf8               java/util/concurrent/TimeUnit\n+   #88 = Utf8               NANOSECONDS\n+   #89 = Utf8               Ljava/util/concurrent/TimeUnit;\n+   #90 = Methodref          #85.#91       // java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+   #91 = NameAndType        #92:#93       // convert:(JLjava/util/concurrent/TimeUnit;)J\n+   #92 = Utf8               convert\n+   #93 = Utf8               (JLjava/util/concurrent/TimeUnit;)J\n+   #94 = Class              #95           // java/lang/RuntimeException\n+   #95 = Utf8               java/lang/RuntimeException\n+   #96 = String             #97           // Illegal running state has occurred.\n+   #97 = Utf8               Illegal running state has occurred.\n+   #98 = Methodref          #94.#39       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+   #99 = Methodref          #1.#100       // org/apache/commons/lang3/time/StopWatch.getSplitNanoTime:()J\n+  #100 = NameAndType        #101:#48      // getSplitNanoTime:()J\n+  #101 = Utf8               getSplitNanoTime\n+  #102 = String             #103          // Stopwatch must be split to get the split time.\n+  #103 = Utf8               Stopwatch must be split to get the split time.\n+  #104 = String             #105          // Stopwatch has not been started\n+  #105 = Utf8               Stopwatch has not been started\n+  #106 = Methodref          #1.#107       // org/apache/commons/lang3/time/StopWatch.getTime:()J\n+  #107 = NameAndType        #108:#48      // getTime:()J\n+  #108 = Utf8               getTime\n+  #109 = Methodref          #110.#111     // org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n+  #110 = Class              #112          // org/apache/commons/lang3/time/DurationFormatUtils\n+  #111 = NameAndType        #113:#114     // formatDurationHMS:(J)Ljava/lang/String;\n+  #112 = Utf8               org/apache/commons/lang3/time/DurationFormatUtils\n+  #113 = Utf8               formatDurationHMS\n+  #114 = Utf8               (J)Ljava/lang/String;\n+  #115 = Methodref          #1.#116       // org/apache/commons/lang3/time/StopWatch.getSplitTime:()J\n+  #116 = NameAndType        #117:#48      // getSplitTime:()J\n+  #117 = Utf8               getSplitTime\n+  #118 = Methodref          #14.#119      // org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n+  #119 = NameAndType        #120:#121     // isStarted:()Z\n+  #120 = Utf8               isStarted\n+  #121 = Utf8               ()Z\n+  #122 = Methodref          #14.#123      // org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n+  #123 = NameAndType        #124:#121     // isSuspended:()Z\n+  #124 = Utf8               isSuspended\n+  #125 = Methodref          #14.#126      // org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n+  #126 = NameAndType        #127:#121     // isStopped:()Z\n+  #127 = Utf8               isStopped\n+  #128 = Utf8               NANO_2_MILLIS\n+  #129 = Utf8               ConstantValue\n+  #130 = Utf8               createStarted\n+  #131 = Utf8               ()Lorg/apache/commons/lang3/time/StopWatch;\n+  #132 = Utf8               Code\n+  #133 = Utf8               LineNumberTable\n+  #134 = Utf8               StackMapTable\n+  #135 = Utf8               stop\n+  #136 = Utf8               reset\n+  #137 = Utf8               split\n+  #138 = Utf8               unsplit\n+  #139 = Utf8               suspend\n+  #140 = Utf8               resume\n+  #141 = Utf8               (Ljava/util/concurrent/TimeUnit;)J\n+  #142 = Utf8               getStartTime\n+  #143 = Utf8               toString\n+  #144 = Utf8               ()Ljava/lang/String;\n+  #145 = Utf8               toSplitString\n+  #146 = Utf8               SourceFile\n+  #147 = Utf8               StopWatch.java\n+  #148 = Utf8               InnerClasses\n+  #149 = Utf8               State\n+  #150 = Utf8               SplitState\n+  #151 = Class              #152          // org/apache/commons/lang3/time/StopWatch$1\n+  #152 = Utf8               org/apache/commons/lang3/time/StopWatch$1\n {\n   private static final long NANO_2_MILLIS = 1000000l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 1000000l\n \n   private org.apache.commons.lang3.time.StopWatch$State runningState;\n@@ -188,77 +188,77 @@\n   public static org.apache.commons.lang3.time.StopWatch createStarted();\n     descriptor: ()Lorg/apache/commons/lang3/time/StopWatch;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=0\n          0: new           #1                  // class org/apache/commons/lang3/time/StopWatch\n          3: dup\n-         4: invokespecial #2                  // Method \"<init>\":()V\n+         4: invokespecial #3                  // Method \"<init>\":()V\n          7: astore_0\n          8: aload_0\n-         9: invokevirtual #3                  // Method start:()V\n+         9: invokevirtual #7                  // Method start:()V\n         12: aload_0\n         13: areturn\n       LineNumberTable:\n         line 72: 0\n         line 73: 8\n         line 74: 12\n \n   public org.apache.commons.lang3.time.StopWatch();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #4                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #10                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         8: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         5: getstatic     #13                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         8: putfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         11: aload_0\n-        12: getstatic     #7                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        15: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        12: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        15: putfield      #28                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         18: return\n       LineNumberTable:\n         line 213: 0\n         line 183: 4\n         line 188: 11\n         line 214: 18\n \n   public void start();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #9                  // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #31                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpne     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #11                 // String Stopwatch must be reset before being restarted.\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #36                 // String Stopwatch must be reset before being restarted.\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        24: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        21: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        24: getstatic     #13                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         27: if_acmpeq     40\n-        30: new           #10                 // class java/lang/IllegalStateException\n+        30: new           #34                 // class java/lang/IllegalStateException\n         33: dup\n-        34: ldc           #13                 // String Stopwatch already started.\n-        36: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        34: ldc           #41                 // String Stopwatch already started.\n+        36: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: aload_0\n-        41: invokestatic  #14                 // Method java/lang/System.nanoTime:()J\n-        44: putfield      #15                 // Field startTime:J\n+        41: invokestatic  #43                 // Method java/lang/System.nanoTime:()J\n+        44: putfield      #49                 // Field startTime:J\n         47: aload_0\n-        48: invokestatic  #16                 // Method java/lang/System.currentTimeMillis:()J\n-        51: putfield      #17                 // Field startTimeMillis:J\n+        48: invokestatic  #53                 // Method java/lang/System.currentTimeMillis:()J\n+        51: putfield      #56                 // Field startTimeMillis:J\n         54: aload_0\n-        55: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        58: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        55: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        58: putfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         61: return\n       LineNumberTable:\n         line 229: 0\n         line 230: 10\n         line 232: 20\n         line 233: 30\n         line 235: 40\n@@ -271,36 +271,36 @@\n \n   public void stop();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     30\n         10: aload_0\n-        11: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        14: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        11: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        14: getstatic     #62                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         17: if_acmpeq     30\n-        20: new           #10                 // class java/lang/IllegalStateException\n+        20: new           #34                 // class java/lang/IllegalStateException\n         23: dup\n-        24: ldc           #20                 // String Stopwatch is not running.\n-        26: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        24: ldc           #65                 // String Stopwatch is not running.\n+        26: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         29: athrow\n         30: aload_0\n-        31: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        34: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        31: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        34: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n         37: if_acmpne     47\n         40: aload_0\n-        41: invokestatic  #14                 // Method java/lang/System.nanoTime:()J\n-        44: putfield      #21                 // Field stopTime:J\n+        41: invokestatic  #43                 // Method java/lang/System.nanoTime:()J\n+        44: putfield      #67                 // Field stopTime:J\n         47: aload_0\n-        48: getstatic     #9                  // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        51: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        48: getstatic     #31                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        51: putfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         54: return\n       LineNumberTable:\n         line 254: 0\n         line 255: 20\n         line 257: 30\n         line 258: 40\n         line 260: 47\n@@ -311,45 +311,45 @@\n \n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getstatic     #13                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: putfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: aload_0\n-         8: getstatic     #7                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        11: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         8: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        11: putfield      #28                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         14: return\n       LineNumberTable:\n         line 273: 0\n         line 274: 7\n         line 275: 14\n \n   public void split();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #20                 // String Stopwatch is not running.\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #65                 // String Stopwatch is not running.\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: invokestatic  #14                 // Method java/lang/System.nanoTime:()J\n-        24: putfield      #21                 // Field stopTime:J\n+        21: invokestatic  #43                 // Method java/lang/System.nanoTime:()J\n+        24: putfield      #67                 // Field stopTime:J\n         27: aload_0\n-        28: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        31: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        28: getstatic     #70                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        31: putfield      #28                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         34: return\n       LineNumberTable:\n         line 291: 0\n         line 292: 10\n         line 294: 20\n         line 295: 27\n         line 296: 34\n@@ -358,25 +358,25 @@\n \n   public void unsplit();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-         4: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         1: getfield      #28                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         4: getstatic     #70                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n          7: if_acmpeq     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #23                 // String Stopwatch has not been split.\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #73                 // String Stopwatch has not been split.\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getstatic     #7                  // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-        24: putfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        21: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.UNSPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+        24: putfield      #28                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n         27: return\n       LineNumberTable:\n         line 312: 0\n         line 313: 10\n         line 315: 20\n         line 316: 27\n       StackMapTable: number_of_entries = 1\n@@ -384,28 +384,28 @@\n \n   public void suspend();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #24                 // String Stopwatch must be running to suspend.\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #75                 // String Stopwatch must be running to suspend.\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: invokestatic  #14                 // Method java/lang/System.nanoTime:()J\n-        24: putfield      #21                 // Field stopTime:J\n+        21: invokestatic  #43                 // Method java/lang/System.nanoTime:()J\n+        24: putfield      #67                 // Field stopTime:J\n         27: aload_0\n-        28: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        31: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        28: getstatic     #62                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        31: putfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         34: return\n       LineNumberTable:\n         line 332: 0\n         line 333: 10\n         line 335: 20\n         line 336: 27\n         line 337: 34\n@@ -414,34 +414,34 @@\n \n   public void resume();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #62                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #25                 // String Stopwatch must be suspended to resume.\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #77                 // String Stopwatch must be suspended to resume.\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n         21: dup\n-        22: getfield      #15                 // Field startTime:J\n-        25: invokestatic  #14                 // Method java/lang/System.nanoTime:()J\n+        22: getfield      #49                 // Field startTime:J\n+        25: invokestatic  #43                 // Method java/lang/System.nanoTime:()J\n         28: aload_0\n-        29: getfield      #21                 // Field stopTime:J\n+        29: getfield      #67                 // Field stopTime:J\n         32: lsub\n         33: ladd\n-        34: putfield      #15                 // Field startTime:J\n+        34: putfield      #49                 // Field startTime:J\n         37: aload_0\n-        38: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        41: putfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        38: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        41: putfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n         44: return\n       LineNumberTable:\n         line 353: 0\n         line 354: 10\n         line 356: 20\n         line 357: 37\n         line 358: 44\n@@ -450,73 +450,73 @@\n \n   public long getTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #26                 // Method getNanoTime:()J\n-         4: ldc2_w        #27                 // long 1000000l\n+         1: invokevirtual #79                 // Method getNanoTime:()J\n+         4: ldc2_w        #82                 // long 1000000l\n          7: ldiv\n          8: lreturn\n       LineNumberTable:\n         line 373: 0\n \n   public long getTime(java.util.concurrent.TimeUnit);\n     descriptor: (Ljava/util/concurrent/TimeUnit;)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokevirtual #26                 // Method getNanoTime:()J\n-         5: getstatic     #29                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n-         8: invokevirtual #30                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n+         2: invokevirtual #79                 // Method getNanoTime:()J\n+         5: getstatic     #84                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;\n+         8: invokevirtual #90                 // Method java/util/concurrent/TimeUnit.convert:(JLjava/util/concurrent/TimeUnit;)J\n         11: lreturn\n       LineNumberTable:\n         line 393: 0\n \n   public long getNanoTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #9                  // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #31                 // Field org/apache/commons/lang3/time/StopWatch$State.STOPPED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpeq     20\n         10: aload_0\n-        11: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        14: getstatic     #19                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        11: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        14: getstatic     #62                 // Field org/apache/commons/lang3/time/StopWatch$State.SUSPENDED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         17: if_acmpne     30\n         20: aload_0\n-        21: getfield      #21                 // Field stopTime:J\n+        21: getfield      #67                 // Field stopTime:J\n         24: aload_0\n-        25: getfield      #15                 // Field startTime:J\n+        25: getfield      #49                 // Field startTime:J\n         28: lsub\n         29: lreturn\n         30: aload_0\n-        31: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        34: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        31: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        34: getstatic     #13                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n         37: if_acmpne     42\n         40: lconst_0\n         41: lreturn\n         42: aload_0\n-        43: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-        46: getstatic     #18                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        43: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+        46: getstatic     #59                 // Field org/apache/commons/lang3/time/StopWatch$State.RUNNING:Lorg/apache/commons/lang3/time/StopWatch$State;\n         49: if_acmpne     61\n-        52: invokestatic  #14                 // Method java/lang/System.nanoTime:()J\n+        52: invokestatic  #43                 // Method java/lang/System.nanoTime:()J\n         55: aload_0\n-        56: getfield      #15                 // Field startTime:J\n+        56: getfield      #49                 // Field startTime:J\n         59: lsub\n         60: lreturn\n-        61: new           #31                 // class java/lang/RuntimeException\n+        61: new           #94                 // class java/lang/RuntimeException\n         64: dup\n-        65: ldc           #32                 // String Illegal running state has occurred.\n-        67: invokespecial #33                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n+        65: ldc           #96                 // String Illegal running state has occurred.\n+        67: invokespecial #98                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;)V\n         70: athrow\n       LineNumberTable:\n         line 410: 0\n         line 411: 20\n         line 412: 30\n         line 413: 40\n         line 414: 42\n@@ -530,39 +530,39 @@\n \n   public long getSplitTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #34                 // Method getSplitNanoTime:()J\n-         4: ldc2_w        #27                 // long 1000000l\n+         1: invokevirtual #99                 // Method getSplitNanoTime:()J\n+         4: ldc2_w        #82                 // long 1000000l\n          7: ldiv\n          8: lreturn\n       LineNumberTable:\n         line 436: 0\n \n   public long getSplitNanoTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n-         4: getstatic     #22                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         1: getfield      #28                 // Field splitState:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n+         4: getstatic     #70                 // Field org/apache/commons/lang3/time/StopWatch$SplitState.SPLIT:Lorg/apache/commons/lang3/time/StopWatch$SplitState;\n          7: if_acmpeq     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #35                 // String Stopwatch must be split to get the split time.\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #102                // String Stopwatch must be split to get the split time.\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #21                 // Field stopTime:J\n+        21: getfield      #67                 // Field stopTime:J\n         24: aload_0\n-        25: getfield      #15                 // Field startTime:J\n+        25: getfield      #49                 // Field startTime:J\n         28: lsub\n         29: lreturn\n       LineNumberTable:\n         line 454: 0\n         line 455: 10\n         line 457: 20\n       StackMapTable: number_of_entries = 1\n@@ -570,90 +570,90 @@\n \n   public long getStartTime();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: getstatic     #5                  // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: getstatic     #13                 // Field org/apache/commons/lang3/time/StopWatch$State.UNSTARTED:Lorg/apache/commons/lang3/time/StopWatch$State;\n          7: if_acmpne     20\n-        10: new           #10                 // class java/lang/IllegalStateException\n+        10: new           #34                 // class java/lang/IllegalStateException\n         13: dup\n-        14: ldc           #36                 // String Stopwatch has not been started\n-        16: invokespecial #12                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #104                // String Stopwatch has not been started\n+        16: invokespecial #38                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #17                 // Field startTimeMillis:J\n+        21: getfield      #56                 // Field startTimeMillis:J\n         24: lreturn\n       LineNumberTable:\n         line 469: 0\n         line 470: 10\n         line 473: 20\n       StackMapTable: number_of_entries = 1\n         frame_type = 20 /* same */\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #37                 // Method getTime:()J\n-         4: invokestatic  #38                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n+         1: invokevirtual #106                // Method getTime:()J\n+         4: invokestatic  #109                // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 489: 0\n \n   public java.lang.String toSplitString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #39                 // Method getSplitTime:()J\n-         4: invokestatic  #38                 // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n+         1: invokevirtual #115                // Method getSplitTime:()J\n+         4: invokestatic  #109                // Method org/apache/commons/lang3/time/DurationFormatUtils.formatDurationHMS:(J)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 505: 0\n \n   public boolean isStarted();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: invokevirtual #40                 // Method org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: invokevirtual #118                // Method org/apache/commons/lang3/time/StopWatch$State.isStarted:()Z\n          7: ireturn\n       LineNumberTable:\n         line 519: 0\n \n   public boolean isSuspended();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: invokevirtual #41                 // Method org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: invokevirtual #122                // Method org/apache/commons/lang3/time/StopWatch$State.isSuspended:()Z\n          7: ireturn\n       LineNumberTable:\n         line 532: 0\n \n   public boolean isStopped();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n-         4: invokevirtual #42                 // Method org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n+         1: getfield      #19                 // Field runningState:Lorg/apache/commons/lang3/time/StopWatch$State;\n+         4: invokevirtual #125                // Method org/apache/commons/lang3/time/StopWatch$State.isStopped:()Z\n          7: ireturn\n       LineNumberTable:\n         line 547: 0\n }\n SourceFile: \"StopWatch.java\"\n InnerClasses:\n-  static #44;                             // class org/apache/commons/lang3/time/StopWatch$1\n-  private static final #47= #46 of #1;    // SplitState=class org/apache/commons/lang3/time/StopWatch$SplitState of class org/apache/commons/lang3/time/StopWatch\n-  private static abstract #49= #48 of #1; // State=class org/apache/commons/lang3/time/StopWatch$State of class org/apache/commons/lang3/time/StopWatch\n+  private static abstract #149= #14 of #1; // State=class org/apache/commons/lang3/time/StopWatch$State of class org/apache/commons/lang3/time/StopWatch\n+  private static final #150= #23 of #1;   // SplitState=class org/apache/commons/lang3/time/StopWatch$SplitState of class org/apache/commons/lang3/time/StopWatch\n+  static #151;                            // class org/apache/commons/lang3/time/StopWatch$1\n"}]}
