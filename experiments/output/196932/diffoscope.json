{"diffoscope-json-version": 1, "source1": "first/TypeReference.class", "source2": "second/TypeReference.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,108 +1,108 @@\n-  SHA-256 checksum 1754dd8364b04d302fdc78ced51fa63552016ea6eba565a5ecf5acea0cf44fc8\n+  SHA-256 checksum 4ceaefd2b65e6f19964b949ce3bda980ece9152adbbdbbf55cbe09424f022c8b\n   Compiled from \"TypeReference.java\"\n public abstract class com.fasterxml.jackson.core.type.TypeReference<T extends java.lang.Object> extends java.lang.Object implements java.lang.Comparable<com.fasterxml.jackson.core.type.TypeReference<T>>\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #11                         // com/fasterxml/jackson/core/type/TypeReference\n-  super_class: #13                        // java/lang/Object\n+  this_class: #31                         // com/fasterxml/jackson/core/type/TypeReference\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 1, methods: 4, attributes: 2\n Constant pool:\n-   #1 = Methodref          #13.#40        // java/lang/Object.\"<init>\":()V\n-   #2 = Methodref          #13.#41        // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #3 = Methodref          #4.#42         // java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;\n-   #4 = Class              #43            // java/lang/Class\n-   #5 = Class              #44            // java/lang/IllegalArgumentException\n-   #6 = String             #45            // Internal error: TypeReference constructed without actual type information\n-   #7 = Methodref          #5.#46         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #8 = Class              #47            // java/lang/reflect/ParameterizedType\n-   #9 = InterfaceMethodref #8.#48         // java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;\n-  #10 = Fieldref           #11.#49        // com/fasterxml/jackson/core/type/TypeReference._type:Ljava/lang/reflect/Type;\n-  #11 = Class              #50            // com/fasterxml/jackson/core/type/TypeReference\n-  #12 = Methodref          #11.#51        // com/fasterxml/jackson/core/type/TypeReference.compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n-  #13 = Class              #52            // java/lang/Object\n-  #14 = Class              #53            // java/lang/Comparable\n-  #15 = Utf8               _type\n-  #16 = Utf8               Ljava/lang/reflect/Type;\n-  #17 = Utf8               <init>\n-  #18 = Utf8               ()V\n-  #19 = Utf8               Code\n-  #20 = Utf8               LineNumberTable\n-  #21 = Utf8               LocalVariableTable\n-  #22 = Utf8               this\n-  #23 = Utf8               Lcom/fasterxml/jackson/core/type/TypeReference;\n-  #24 = Utf8               superClass\n-  #25 = Utf8               LocalVariableTypeTable\n-  #26 = Utf8               Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n-  #27 = Utf8               StackMapTable\n-  #28 = Class              #54            // java/lang/reflect/Type\n-  #29 = Utf8               getType\n-  #30 = Utf8               ()Ljava/lang/reflect/Type;\n-  #31 = Utf8               compareTo\n-  #32 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference;)I\n-  #33 = Utf8               o\n-  #34 = Utf8               Signature\n-  #35 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n-  #36 = Utf8               (Ljava/lang/Object;)I\n-  #37 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n-  #38 = Utf8               SourceFile\n-  #39 = Utf8               TypeReference.java\n-  #40 = NameAndType        #17:#18        // \"<init>\":()V\n-  #41 = NameAndType        #55:#56        // getClass:()Ljava/lang/Class;\n-  #42 = NameAndType        #57:#30        // getGenericSuperclass:()Ljava/lang/reflect/Type;\n-  #43 = Utf8               java/lang/Class\n-  #44 = Utf8               java/lang/IllegalArgumentException\n-  #45 = Utf8               Internal error: TypeReference constructed without actual type information\n-  #46 = NameAndType        #17:#58        // \"<init>\":(Ljava/lang/String;)V\n-  #47 = Utf8               java/lang/reflect/ParameterizedType\n-  #48 = NameAndType        #59:#60        // getActualTypeArguments:()[Ljava/lang/reflect/Type;\n-  #49 = NameAndType        #15:#16        // _type:Ljava/lang/reflect/Type;\n-  #50 = Utf8               com/fasterxml/jackson/core/type/TypeReference\n-  #51 = NameAndType        #31:#32        // compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n-  #52 = Utf8               java/lang/Object\n-  #53 = Utf8               java/lang/Comparable\n-  #54 = Utf8               java/lang/reflect/Type\n-  #55 = Utf8               getClass\n-  #56 = Utf8               ()Ljava/lang/Class;\n-  #57 = Utf8               getGenericSuperclass\n-  #58 = Utf8               (Ljava/lang/String;)V\n-  #59 = Utf8               getActualTypeArguments\n-  #60 = Utf8               ()[Ljava/lang/reflect/Type;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Methodref          #2.#8          // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #8 = NameAndType        #9:#10         // getClass:()Ljava/lang/Class;\n+   #9 = Utf8               getClass\n+  #10 = Utf8               ()Ljava/lang/Class;\n+  #11 = Methodref          #12.#13        // java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;\n+  #12 = Class              #14            // java/lang/Class\n+  #13 = NameAndType        #15:#16        // getGenericSuperclass:()Ljava/lang/reflect/Type;\n+  #14 = Utf8               java/lang/Class\n+  #15 = Utf8               getGenericSuperclass\n+  #16 = Utf8               ()Ljava/lang/reflect/Type;\n+  #17 = Class              #18            // java/lang/IllegalArgumentException\n+  #18 = Utf8               java/lang/IllegalArgumentException\n+  #19 = String             #20            // Internal error: TypeReference constructed without actual type information\n+  #20 = Utf8               Internal error: TypeReference constructed without actual type information\n+  #21 = Methodref          #17.#22        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #22 = NameAndType        #5:#23         // \"<init>\":(Ljava/lang/String;)V\n+  #23 = Utf8               (Ljava/lang/String;)V\n+  #24 = Class              #25            // java/lang/reflect/ParameterizedType\n+  #25 = Utf8               java/lang/reflect/ParameterizedType\n+  #26 = InterfaceMethodref #24.#27        // java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;\n+  #27 = NameAndType        #28:#29        // getActualTypeArguments:()[Ljava/lang/reflect/Type;\n+  #28 = Utf8               getActualTypeArguments\n+  #29 = Utf8               ()[Ljava/lang/reflect/Type;\n+  #30 = Fieldref           #31.#32        // com/fasterxml/jackson/core/type/TypeReference._type:Ljava/lang/reflect/Type;\n+  #31 = Class              #33            // com/fasterxml/jackson/core/type/TypeReference\n+  #32 = NameAndType        #34:#35        // _type:Ljava/lang/reflect/Type;\n+  #33 = Utf8               com/fasterxml/jackson/core/type/TypeReference\n+  #34 = Utf8               _type\n+  #35 = Utf8               Ljava/lang/reflect/Type;\n+  #36 = Methodref          #31.#37        // com/fasterxml/jackson/core/type/TypeReference.compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+  #37 = NameAndType        #38:#39        // compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+  #38 = Utf8               compareTo\n+  #39 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+  #40 = Class              #41            // java/lang/Comparable\n+  #41 = Utf8               java/lang/Comparable\n+  #42 = Utf8               Code\n+  #43 = Utf8               LineNumberTable\n+  #44 = Utf8               LocalVariableTable\n+  #45 = Utf8               this\n+  #46 = Utf8               Lcom/fasterxml/jackson/core/type/TypeReference;\n+  #47 = Utf8               superClass\n+  #48 = Utf8               LocalVariableTypeTable\n+  #49 = Utf8               Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n+  #50 = Utf8               StackMapTable\n+  #51 = Class              #52            // java/lang/reflect/Type\n+  #52 = Utf8               java/lang/reflect/Type\n+  #53 = Utf8               getType\n+  #54 = Utf8               o\n+  #55 = Utf8               Signature\n+  #56 = Utf8               (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n+  #57 = Utf8               (Ljava/lang/Object;)I\n+  #58 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n+  #59 = Utf8               SourceFile\n+  #60 = Utf8               TypeReference.java\n {\n   protected final java.lang.reflect.Type _type;\n     descriptor: Ljava/lang/reflect/Type;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   protected com.fasterxml.jackson.core.type.TypeReference();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-         8: invokevirtual #3                  // Method java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;\n+         5: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         8: invokevirtual #11                 // Method java/lang/Class.getGenericSuperclass:()Ljava/lang/reflect/Type;\n         11: astore_1\n         12: aload_1\n-        13: instanceof    #4                  // class java/lang/Class\n+        13: instanceof    #12                 // class java/lang/Class\n         16: ifeq          29\n-        19: new           #5                  // class java/lang/IllegalArgumentException\n+        19: new           #17                 // class java/lang/IllegalArgumentException\n         22: dup\n-        23: ldc           #6                  // String Internal error: TypeReference constructed without actual type information\n-        25: invokespecial #7                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        23: ldc           #19                 // String Internal error: TypeReference constructed without actual type information\n+        25: invokespecial #21                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         28: athrow\n         29: aload_0\n         30: aload_1\n-        31: checkcast     #8                  // class java/lang/reflect/ParameterizedType\n-        34: invokeinterface #9,  1            // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;\n+        31: checkcast     #24                 // class java/lang/reflect/ParameterizedType\n+        34: invokeinterface #26,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;\n         39: iconst_0\n         40: aaload\n-        41: putfield      #10                 // Field _type:Ljava/lang/reflect/Type;\n+        41: putfield      #30                 // Field _type:Ljava/lang/reflect/Type;\n         44: return\n       LineNumberTable:\n         line 32: 0\n         line 33: 4\n         line 34: 12\n         line 35: 19\n         line 44: 29\n@@ -122,15 +122,15 @@\n \n   public java.lang.reflect.Type getType();\n     descriptor: ()Ljava/lang/reflect/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #10                 // Field _type:Ljava/lang/reflect/Type;\n+         1: getfield      #30                 // Field _type:Ljava/lang/reflect/Type;\n          4: areturn\n       LineNumberTable:\n         line 47: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/type/TypeReference;\n       LocalVariableTypeTable:\n@@ -150,30 +150,30 @@\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lcom/fasterxml/jackson/core/type/TypeReference;\n             0       2     1     o   Lcom/fasterxml/jackson/core/type/TypeReference;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n             0       2     1     o   Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n-    Signature: #35                          // (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n+    Signature: #56                          // (Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;)I\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #11                 // class com/fasterxml/jackson/core/type/TypeReference\n-         5: invokevirtual #12                 // Method compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n+         2: checkcast     #31                 // class com/fasterxml/jackson/core/type/TypeReference\n+         5: invokevirtual #36                 // Method compareTo:(Lcom/fasterxml/jackson/core/type/TypeReference;)I\n          8: ireturn\n       LineNumberTable:\n         line 27: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/type/TypeReference;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;\n }\n-Signature: #37                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n+Signature: #58                          // <T:Ljava/lang/Object;>Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/core/type/TypeReference<TT;>;>;\n SourceFile: \"TypeReference.java\"\n"}]}
