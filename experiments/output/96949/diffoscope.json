{"diffoscope-json-version": 1, "source1": "first/DescendantTokenCheck.class", "source2": "second/DescendantTokenCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -56,15 +56,17 @@\n         else {\n             this.logAsSeparated(ast);\n         }\n     }\n     \n     private void logAsSeparated(final DetailAST ast) {\n         final String name = TokenUtil.getTokenName(ast.getType());\n-        for (final int element : this.limitedTokens) {\n+        int[] limitedTokens;\n+        for (int length = (limitedTokens = this.limitedTokens).length, i = 0; i < length; ++i) {\n+            final int element = limitedTokens[i];\n             final int tokenCount = this.counts[element - 1];\n             if (tokenCount < this.minimumNumber) {\n                 final String descendantName = TokenUtil.getTokenName(element);\n                 if (this.minimumMessage == null) {\n                     this.minimumMessage = \"descendant.token.min\";\n                 }\n                 this.log(ast, this.minimumMessage, new Object[] { String.valueOf(tokenCount), String.valueOf(this.minimumNumber), name, descendantName });\n@@ -78,15 +80,17 @@\n             }\n         }\n     }\n     \n     private void logAsTotal(final DetailAST ast) {\n         final String name = TokenUtil.getTokenName(ast.getType());\n         int total = 0;\n-        for (final int element : this.limitedTokens) {\n+        int[] limitedTokens;\n+        for (int length = (limitedTokens = this.limitedTokens).length, i = 0; i < length; ++i) {\n+            final int element = limitedTokens[i];\n             total += this.counts[element - 1];\n         }\n         if (total < this.minimumNumber) {\n             if (this.minimumMessage == null) {\n                 this.minimumMessage = \"descendant.token.sum.min\";\n             }\n             this.log(ast, this.minimumMessage, new Object[] { String.valueOf(total), String.valueOf(this.minimumNumber), name });\n"}]}
