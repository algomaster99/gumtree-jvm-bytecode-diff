{"diffoscope-json-version": 1, "source1": "first/Rule.class", "source2": "second/Rule.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -139,14 +139,17 @@\n                 if (trim.startsWith(\"#include\")) {\n                     final String trim2 = trim.substring(Rule.HASH_INCLUDE_LENGTH).trim();\n                     if (trim2.contains(\" \")) {\n                         throw new IllegalArgumentException(\"Malformed import statement '\" + s2 + \"' in \" + s);\n                     }\n                     try (final Scanner scanner2 = createScanner(trim2)) {\n                         hashMap.putAll(parseRules(scanner2, s + \"->\" + trim2));\n+                        if (scanner2 == null) {\n+                            continue;\n+                        }\n                     }\n                 }\n                 else {\n                     final String[] split = trim.split(\"\\\\s+\");\n                     if (split.length != 4) {\n                         throw new IllegalArgumentException(\"Malformed rule statement split into \" + split.length + \" parts: \" + s2 + \" in \" + s);\n                     }\n@@ -289,15 +292,15 @@\n         //    32: aload_0        \n         //    33: arraylength    \n         //    34: istore_1       \n         //    35: iconst_0       \n         //    36: istore_2       \n         //    37: iload_2        \n         //    38: iload_1        \n-        //    39: if_icmpge       295\n+        //    39: if_icmpge       245\n         //    42: aload_0        \n         //    43: iload_2        \n         //    44: aaload         \n         //    45: astore_3       \n         //    46: new             Ljava/util/EnumMap;\n         //    49: dup            \n         //    50: ldc             Lorg/apache/commons/codec/language/bm/RuleType;.class\n@@ -308,15 +311,15 @@\n         //    62: aload           5\n         //    64: arraylength    \n         //    65: istore          6\n         //    67: iconst_0       \n         //    68: istore          7\n         //    70: iload           7\n         //    72: iload           6\n-        //    74: if_icmpge       274\n+        //    74: if_icmpge       224\n         //    77: aload           5\n         //    79: iload           7\n         //    81: aaload         \n         //    82: astore          8\n         //    84: new             Ljava/util/HashMap;\n         //    87: dup            \n         //    88: invokespecial   java/util/HashMap.<init>:()V\n@@ -330,96 +333,71 @@\n         //   105: aload           8\n         //   107: aload           9\n         //   109: invokedynamic   BootstrapMethod #11, accept:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/util/Map;)Ljava/util/function/Consumer;\n         //   114: invokeinterface java/util/Set.forEach:(Ljava/util/function/Consumer;)V\n         //   119: aload           8\n         //   121: getstatic       org/apache/commons/codec/language/bm/RuleType.RULES:Lorg/apache/commons/codec/language/bm/RuleType;\n         //   124: invokevirtual   org/apache/commons/codec/language/bm/RuleType.equals:(Ljava/lang/Object;)Z\n-        //   127: ifne            253\n+        //   127: ifne            203\n         //   130: aload_3        \n         //   131: aload           8\n         //   133: ldc             \"common\"\n         //   135: invokestatic    org/apache/commons/codec/language/bm/Rule.createScanner:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Scanner;\n         //   138: astore          11\n-        //   140: aconst_null    \n-        //   141: astore          12\n-        //   143: aload           9\n-        //   145: ldc             \"common\"\n-        //   147: aload           11\n-        //   149: aload_3        \n-        //   150: aload           8\n-        //   152: ldc             \"common\"\n-        //   154: invokestatic    org/apache/commons/codec/language/bm/Rule.createResourceName:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n-        //   157: invokestatic    org/apache/commons/codec/language/bm/Rule.parseRules:(Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n-        //   160: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        //   165: pop            \n-        //   166: aload           11\n-        //   168: ifnull          253\n-        //   171: aload           12\n-        //   173: ifnull          196\n-        //   176: aload           11\n-        //   178: invokevirtual   java/util/Scanner.close:()V\n-        //   181: goto            253\n-        //   184: astore          13\n-        //   186: aload           12\n-        //   188: aload           13\n-        //   190: invokevirtual   java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        //   193: goto            253\n-        //   196: aload           11\n-        //   198: invokevirtual   java/util/Scanner.close:()V\n-        //   201: goto            253\n-        //   204: astore          13\n-        //   206: aload           13\n-        //   208: astore          12\n-        //   210: aload           13\n-        //   212: athrow         \n-        //   213: astore          14\n-        //   215: aload           11\n-        //   217: ifnull          250\n-        //   220: aload           12\n-        //   222: ifnull          245\n-        //   225: aload           11\n-        //   227: invokevirtual   java/util/Scanner.close:()V\n-        //   230: goto            250\n-        //   233: astore          15\n-        //   235: aload           12\n-        //   237: aload           15\n-        //   239: invokevirtual   java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        //   242: goto            250\n-        //   245: aload           11\n-        //   247: invokevirtual   java/util/Scanner.close:()V\n-        //   250: aload           14\n-        //   252: athrow         \n-        //   253: aload           4\n-        //   255: aload           8\n-        //   257: aload           9\n-        //   259: invokestatic    java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-        //   262: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        //   267: pop            \n-        //   268: iinc            7, 1\n-        //   271: goto            70\n-        //   274: getstatic       org/apache/commons/codec/language/bm/Rule.RULES:Ljava/util/Map;\n-        //   277: aload_3        \n-        //   278: aload           4\n-        //   280: invokestatic    java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n-        //   283: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        //   288: pop            \n-        //   289: iinc            2, 1\n-        //   292: goto            37\n-        //   295: return         \n-        //    StackMapTable: 00 0C FE 00 25 07 01 01 01 01 FF 00 20 00 08 07 01 01 01 01 07 00 FB 07 00 C9 07 01 02 01 01 00 00 FF 00 71 00 0D 07 01 01 01 01 07 00 FB 07 00 C9 07 01 02 01 01 07 00 FC 07 00 C9 07 01 03 07 00 D6 07 00 D7 00 01 07 00 D7 0B 47 07 00 D7 48 07 00 D7 FF 00 13 00 0F 07 01 01 01 01 07 00 FB 07 00 C9 07 01 02 01 01 07 00 FC 07 00 C9 07 01 03 07 00 D6 07 00 D7 00 07 00 D7 00 01 07 00 D7 0B 04 FF 00 02 00 0B 07 01 01 01 01 07 00 FB 07 00 C9 07 01 02 01 01 07 00 FC 07 00 C9 07 01 03 00 00 FF 00 14 00 05 07 01 01 01 01 07 00 FB 07 00 C9 00 00 FF 00 14 00 00 00 00\n+        //   140: aload           9\n+        //   142: ldc             \"common\"\n+        //   144: aload           11\n+        //   146: aload_3        \n+        //   147: aload           8\n+        //   149: ldc             \"common\"\n+        //   151: invokestatic    org/apache/commons/codec/language/bm/Rule.createResourceName:(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/lang/String;\n+        //   154: invokestatic    org/apache/commons/codec/language/bm/Rule.parseRules:(Ljava/util/Scanner;Ljava/lang/String;)Ljava/util/Map;\n+        //   157: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        //   162: pop            \n+        //   163: aload           11\n+        //   165: ifnull          203\n+        //   168: aload           11\n+        //   170: invokevirtual   java/util/Scanner.close:()V\n+        //   173: goto            203\n+        //   176: astore          12\n+        //   178: aload           11\n+        //   180: ifnull          200\n+        //   183: aload           11\n+        //   185: invokevirtual   java/util/Scanner.close:()V\n+        //   188: goto            200\n+        //   191: astore          13\n+        //   193: aload           12\n+        //   195: aload           13\n+        //   197: invokevirtual   java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        //   200: aload           12\n+        //   202: athrow         \n+        //   203: aload           4\n+        //   205: aload           8\n+        //   207: aload           9\n+        //   209: invokestatic    java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+        //   212: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        //   217: pop            \n+        //   218: iinc            7, 1\n+        //   221: goto            70\n+        //   224: getstatic       org/apache/commons/codec/language/bm/Rule.RULES:Ljava/util/Map;\n+        //   227: aload_3        \n+        //   228: aload           4\n+        //   230: invokestatic    java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;\n+        //   233: invokeinterface java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        //   238: pop            \n+        //   239: iinc            2, 1\n+        //   242: goto            37\n+        //   245: return         \n+        //    StackMapTable: 00 08 FE 00 25 07 00 F8 01 01 FF 00 20 00 08 07 00 F8 01 01 07 00 8D 07 00 25 07 00 F9 01 01 00 00 FF 00 69 00 0C 07 00 F8 01 01 07 00 8D 07 00 25 07 00 F9 01 01 07 00 90 07 00 25 07 00 21 07 00 0A 00 01 07 00 5A FF 00 0E 00 0D 07 00 F8 01 01 07 00 8D 07 00 25 07 00 F9 01 01 07 00 90 07 00 25 07 00 21 07 00 0A 07 00 5A 00 01 07 00 5A 08 F9 00 02 FF 00 14 00 05 07 00 F8 01 01 07 00 8D 07 00 25 00 00 FF 00 14 00 00 00 00\n         //    Exceptions:\n         //  Try           Handler\n         //  Start  End    Start  End    Type                 \n         //  -----  -----  -----  -----  ---------------------\n-        //  176    181    184    196    Ljava/lang/Throwable;\n-        //  143    166    204    213    Ljava/lang/Throwable;\n-        //  143    166    213    253    Any\n-        //  225    230    233    245    Ljava/lang/Throwable;\n-        //  204    215    213    253    Any\n+        //  140    163    176    203    Ljava/lang/Throwable;\n+        //  183    188    191    200    Ljava/lang/Throwable;\n         // \n         // The error that occurred was:\n         // \n         // java.lang.IllegalStateException: Could not infer any expression.\n         //     at com.strobel.decompiler.ast.TypeAnalysis.runInference(TypeAnalysis.java:382)\n         //     at com.strobel.decompiler.ast.TypeAnalysis.run(TypeAnalysis.java:95)\n         //     at com.strobel.decompiler.ast.AstOptimizer.optimize(AstOptimizer.java:344)\n"}]}
