{"diffoscope-json-version": 1, "source1": "first/SevenZFile$ArchiveStatistics.class", "source2": "second/SevenZFile$ArchiveStatistics.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,59 @@\n-  SHA-256 checksum 992e2080527df6731e9ff990d2a59a21d801a7e68d29905cf1190f8e7c1651d9\n+  SHA-256 checksum e82ff096e407e463e647c50e56ebda618e62dfe66b5c0cbc1db95ca1ba5b7bf5\n   Compiled from \"SevenZFile.java\"\n class org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n   this_class: #48                         // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n   super_class: #49                        // java/lang/Object\n-  interfaces: 0, fields: 9, methods: 27, attributes: 2\n+  interfaces: 0, fields: 9, methods: 26, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #48.#108      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntriesWithStream:I\n-    #2 = Fieldref           #48.#109      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntries:I\n-    #3 = Fieldref           #48.#110      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfCoders:J\n-    #4 = Fieldref           #48.#111      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfUnpackSubStreams:J\n-    #5 = Fieldref           #48.#112      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderHasCrc:Ljava/util/BitSet;\n-    #6 = Fieldref           #48.#113      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfInStreams:J\n-    #7 = Fieldref           #48.#114      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfOutStreams:J\n-    #8 = Fieldref           #48.#115      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfFolders:I\n-    #9 = Fieldref           #48.#116      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfPackedStreams:I\n-   #10 = Methodref          #48.#117      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.\"<init>\":()V\n-   #11 = Methodref          #49.#117      // java/lang/Object.\"<init>\":()V\n-   #12 = Class              #118          // java/lang/StringBuilder\n-   #13 = Methodref          #12.#117      // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #119          // Archive with\n-   #15 = Methodref          #12.#120      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#121      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = String             #122          //  entries in\n-   #18 = String             #123          //  folders. Estimated size\n-   #19 = Methodref          #48.#124      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.estimateSize:()J\n+    #1 = Fieldref           #48.#107      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntriesWithStream:I\n+    #2 = Fieldref           #48.#108      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfEntries:I\n+    #3 = Fieldref           #48.#109      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfCoders:J\n+    #4 = Fieldref           #48.#110      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfUnpackSubStreams:J\n+    #5 = Fieldref           #48.#111      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderHasCrc:Ljava/util/BitSet;\n+    #6 = Fieldref           #48.#112      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfInStreams:J\n+    #7 = Fieldref           #48.#113      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfOutStreams:J\n+    #8 = Fieldref           #48.#114      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfFolders:I\n+    #9 = Fieldref           #48.#115      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.numberOfPackedStreams:I\n+   #10 = Methodref          #48.#116      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.\"<init>\":()V\n+   #11 = Methodref          #49.#116      // java/lang/Object.\"<init>\":()V\n+   #12 = Class              #117          // java/lang/StringBuilder\n+   #13 = Methodref          #12.#116      // java/lang/StringBuilder.\"<init>\":()V\n+   #14 = String             #118          // Archive with\n+   #15 = Methodref          #12.#119      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #16 = Methodref          #12.#120      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #17 = String             #121          //  entries in\n+   #18 = String             #122          //  folders. Estimated size\n+   #19 = Methodref          #48.#123      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.estimateSize:()J\n    #20 = Long               1024l\n-   #22 = Methodref          #12.#125      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n-   #23 = String             #126          //  kB.\n-   #24 = Methodref          #12.#127      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #22 = Methodref          #12.#124      // java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;\n+   #23 = String             #125          //  kB.\n+   #24 = Methodref          #12.#126      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n    #25 = Long               16l\n-   #27 = Methodref          #48.#128      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderSize:()J\n-   #28 = Methodref          #48.#129      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.coderSize:()J\n-   #29 = Methodref          #48.#130      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.bindPairSize:()J\n+   #27 = Methodref          #48.#127      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.folderSize:()J\n+   #28 = Methodref          #48.#128      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.coderSize:()J\n+   #29 = Methodref          #48.#129      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.bindPairSize:()J\n    #30 = Long               8l\n-   #32 = Methodref          #48.#131      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.entrySize:()J\n-   #33 = Methodref          #48.#132      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.streamMapSize:()J\n+   #32 = Methodref          #48.#130      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.entrySize:()J\n+   #33 = Methodref          #48.#131      // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics.streamMapSize:()J\n    #34 = Long               2l\n-   #36 = Class              #133          // java/io/IOException\n-   #37 = String             #134          // archive with entries but no folders\n-   #38 = Methodref          #36.#135      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #39 = String             #136          // archive doesn\\'t contain enough substreams for entries\n-   #40 = Class              #137          // org/apache/commons/compress/MemoryLimitException\n-   #41 = Methodref          #40.#138      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n+   #36 = Class              #132          // java/io/IOException\n+   #37 = String             #133          // archive with entries but no folders\n+   #38 = Methodref          #36.#134      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #39 = String             #135          // archive doesn\\'t contain enough substreams for entries\n+   #40 = Class              #136          // org/apache/commons/compress/MemoryLimitException\n+   #41 = Methodref          #40.#137      // org/apache/commons/compress/MemoryLimitException.\"<init>\":(JI)V\n    #42 = Long               30l\n    #44 = Long               22l\n    #46 = Long               100l\n-   #48 = Class              #140          // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n-   #49 = Class              #141          // java/lang/Object\n+   #48 = Class              #139          // org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n+   #49 = Class              #140          // java/lang/Object\n    #50 = Utf8               numberOfPackedStreams\n    #51 = Utf8               I\n    #52 = Utf8               numberOfCoders\n    #53 = Utf8               J\n    #54 = Utf8               numberOfOutStreams\n    #55 = Utf8               numberOfInStreams\n    #56 = Utf8               numberOfUnpackSubStreams\n@@ -75,15 +75,15 @@\n    #72 = Utf8               StackMapTable\n    #73 = Utf8               Exceptions\n    #74 = Utf8               folderSize\n    #75 = Utf8               coderSize\n    #76 = Utf8               bindPairSize\n    #77 = Utf8               entrySize\n    #78 = Utf8               streamMapSize\n-   #79 = Class              #142          // org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n+   #79 = Class              #141          // org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n    #80 = Utf8               InnerClasses\n    #81 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$1;)V\n    #82 = Utf8               access$102\n    #83 = Utf8               ArchiveStatistics\n    #84 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;I)I\n    #85 = Utf8               access$100\n    #86 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)I\n@@ -95,65 +95,64 @@\n    #92 = Utf8               access$502\n    #93 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;Ljava/util/BitSet;)Ljava/util/BitSet;\n    #94 = Utf8               access$500\n    #95 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)Ljava/util/BitSet;\n    #96 = Utf8               access$602\n    #97 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n    #98 = Utf8               access$600\n-   #99 = Utf8               access$700\n-  #100 = Utf8               access$702\n-  #101 = Utf8               access$302\n-  #102 = Utf8               access$402\n-  #103 = Utf8               access$802\n-  #104 = Utf8               access$800\n-  #105 = Utf8               access$902\n-  #106 = Utf8               SourceFile\n-  #107 = Utf8               SevenZFile.java\n-  #108 = NameAndType        #61:#51       // numberOfEntriesWithStream:I\n-  #109 = NameAndType        #60:#51       // numberOfEntries:I\n-  #110 = NameAndType        #52:#53       // numberOfCoders:J\n-  #111 = NameAndType        #56:#53       // numberOfUnpackSubStreams:J\n-  #112 = NameAndType        #58:#59       // folderHasCrc:Ljava/util/BitSet;\n-  #113 = NameAndType        #55:#53       // numberOfInStreams:J\n-  #114 = NameAndType        #54:#53       // numberOfOutStreams:J\n-  #115 = NameAndType        #57:#51       // numberOfFolders:I\n-  #116 = NameAndType        #50:#51       // numberOfPackedStreams:I\n-  #117 = NameAndType        #62:#63       // \"<init>\":()V\n-  #118 = Utf8               java/lang/StringBuilder\n-  #119 = Utf8               Archive with\n-  #120 = NameAndType        #143:#144     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #121 = NameAndType        #143:#145     // append:(I)Ljava/lang/StringBuilder;\n-  #122 = Utf8                entries in\n-  #123 = Utf8                folders. Estimated size\n-  #124 = NameAndType        #68:#69       // estimateSize:()J\n-  #125 = NameAndType        #143:#146     // append:(J)Ljava/lang/StringBuilder;\n-  #126 = Utf8                kB.\n-  #127 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n-  #128 = NameAndType        #74:#69       // folderSize:()J\n-  #129 = NameAndType        #75:#69       // coderSize:()J\n-  #130 = NameAndType        #76:#69       // bindPairSize:()J\n-  #131 = NameAndType        #77:#69       // entrySize:()J\n-  #132 = NameAndType        #78:#69       // streamMapSize:()J\n-  #133 = Utf8               java/io/IOException\n-  #134 = Utf8               archive with entries but no folders\n-  #135 = NameAndType        #62:#147      // \"<init>\":(Ljava/lang/String;)V\n-  #136 = Utf8               archive doesn\\'t contain enough substreams for entries\n-  #137 = Utf8               org/apache/commons/compress/MemoryLimitException\n-  #138 = NameAndType        #62:#148      // \"<init>\":(JI)V\n-  #139 = Class              #149          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n-  #140 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n-  #141 = Utf8               java/lang/Object\n-  #142 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n-  #143 = Utf8               append\n-  #144 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #146 = Utf8               (J)Ljava/lang/StringBuilder;\n-  #147 = Utf8               (Ljava/lang/String;)V\n-  #148 = Utf8               (JI)V\n-  #149 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n+   #99 = Utf8               access$714\n+  #100 = Utf8               access$314\n+  #101 = Utf8               access$414\n+  #102 = Utf8               access$802\n+  #103 = Utf8               access$800\n+  #104 = Utf8               access$902\n+  #105 = Utf8               SourceFile\n+  #106 = Utf8               SevenZFile.java\n+  #107 = NameAndType        #61:#51       // numberOfEntriesWithStream:I\n+  #108 = NameAndType        #60:#51       // numberOfEntries:I\n+  #109 = NameAndType        #52:#53       // numberOfCoders:J\n+  #110 = NameAndType        #56:#53       // numberOfUnpackSubStreams:J\n+  #111 = NameAndType        #58:#59       // folderHasCrc:Ljava/util/BitSet;\n+  #112 = NameAndType        #55:#53       // numberOfInStreams:J\n+  #113 = NameAndType        #54:#53       // numberOfOutStreams:J\n+  #114 = NameAndType        #57:#51       // numberOfFolders:I\n+  #115 = NameAndType        #50:#51       // numberOfPackedStreams:I\n+  #116 = NameAndType        #62:#63       // \"<init>\":()V\n+  #117 = Utf8               java/lang/StringBuilder\n+  #118 = Utf8               Archive with\n+  #119 = NameAndType        #142:#143     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #120 = NameAndType        #142:#144     // append:(I)Ljava/lang/StringBuilder;\n+  #121 = Utf8                entries in\n+  #122 = Utf8                folders. Estimated size\n+  #123 = NameAndType        #68:#69       // estimateSize:()J\n+  #124 = NameAndType        #142:#145     // append:(J)Ljava/lang/StringBuilder;\n+  #125 = Utf8                kB.\n+  #126 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n+  #127 = NameAndType        #74:#69       // folderSize:()J\n+  #128 = NameAndType        #75:#69       // coderSize:()J\n+  #129 = NameAndType        #76:#69       // bindPairSize:()J\n+  #130 = NameAndType        #77:#69       // entrySize:()J\n+  #131 = NameAndType        #78:#69       // streamMapSize:()J\n+  #132 = Utf8               java/io/IOException\n+  #133 = Utf8               archive with entries but no folders\n+  #134 = NameAndType        #62:#146      // \"<init>\":(Ljava/lang/String;)V\n+  #135 = Utf8               archive doesn\\'t contain enough substreams for entries\n+  #136 = Utf8               org/apache/commons/compress/MemoryLimitException\n+  #137 = NameAndType        #62:#147      // \"<init>\":(JI)V\n+  #138 = Class              #148          // org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  #139 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics\n+  #140 = Utf8               java/lang/Object\n+  #141 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n+  #142 = Utf8               append\n+  #143 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #144 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #145 = Utf8               (J)Ljava/lang/StringBuilder;\n+  #146 = Utf8               (Ljava/lang/String;)V\n+  #147 = Utf8               (JI)V\n+  #148 = Utf8               org/apache/commons/compress/archivers/sevenz/SevenZFile\n {\n   private int numberOfPackedStreams;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private long numberOfCoders;\n     descriptor: J\n@@ -564,61 +563,59 @@\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #4                  // Field numberOfUnpackSubStreams:J\n          4: lreturn\n       LineNumberTable:\n         line 2077: 0\n \n-  static long access$700(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics);\n-    descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;)J\n-    flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n-    Code:\n-      stack=2, locals=1, args_size=1\n-         0: aload_0\n-         1: getfield      #3                  // Field numberOfCoders:J\n-         4: lreturn\n-      LineNumberTable:\n-        line 2077: 0\n-\n-  static long access$702(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n+  static long access$714(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #3                  // Field numberOfCoders:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #3                  // Field numberOfCoders:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #3                  // Field numberOfCoders:J\n+        11: lreturn\n       LineNumberTable:\n         line 2077: 0\n \n-  static long access$302(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n+  static long access$314(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #7                  // Field numberOfOutStreams:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #7                  // Field numberOfOutStreams:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #7                  // Field numberOfOutStreams:J\n+        11: lreturn\n       LineNumberTable:\n         line 2077: 0\n \n-  static long access$402(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n+  static long access$414(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, long);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;J)J\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: lload_1\n-         2: dup2_x1\n-         3: putfield      #6                  // Field numberOfInStreams:J\n-         6: lreturn\n+         1: dup\n+         2: getfield      #6                  // Field numberOfInStreams:J\n+         5: lload_1\n+         6: ladd\n+         7: dup2_x1\n+         8: putfield      #6                  // Field numberOfInStreams:J\n+        11: lreturn\n       LineNumberTable:\n         line 2077: 0\n \n   static int access$802(org.apache.commons.compress.archivers.sevenz.SevenZFile$ArchiveStatistics, int);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics;I)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n@@ -654,8 +651,8 @@\n          6: ireturn\n       LineNumberTable:\n         line 2077: 0\n }\n SourceFile: \"SevenZFile.java\"\n InnerClasses:\n   #79;                                    // class org/apache/commons/compress/archivers/sevenz/SevenZFile$1\n-  private static #83= #48 of #139;        // ArchiveStatistics=class org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics of class org/apache/commons/compress/archivers/sevenz/SevenZFile\n+  private static #83= #48 of #138;        // ArchiveStatistics=class org/apache/commons/compress/archivers/sevenz/SevenZFile$ArchiveStatistics of class org/apache/commons/compress/archivers/sevenz/SevenZFile\n"}]}
