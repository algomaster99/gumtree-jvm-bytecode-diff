{"diffoscope-json-version": 1, "source1": "first/ClassConstantPool.class", "source2": "second/ClassConstantPool.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -73,15 +73,15 @@\n         }\n     }\n     \n     public int indexOf(final ClassFileEntry entry) {\n         if (!this.resolved) {\n             throw new IllegalStateException(\"Constant pool is not yet resolved; this does not make any sense\");\n         }\n-        if (null == this.indexCache) {\n+        if (this.indexCache == null) {\n             throw new IllegalStateException(\"Index cache is not initialized!\");\n         }\n         final Integer entryIndex = Integer.valueOf(this.indexCache.get((Object)entry));\n         if (entryIndex != null) {\n             return entryIndex + 1;\n         }\n         return -1;\n@@ -175,13 +175,15 @@\n                 ++index;\n             }\n         }\n     }\n     \n     public ClassFileEntry addWithNestedEntries(final ClassFileEntry entry) {\n         this.add(entry);\n-        for (final ClassFileEntry nestedEntry : entry.getNestedClassFileEntries()) {\n+        ClassFileEntry[] nestedClassFileEntries;\n+        for (int length = (nestedClassFileEntries = entry.getNestedClassFileEntries()).length, i = 0; i < length; ++i) {\n+            final ClassFileEntry nestedEntry = nestedClassFileEntries[i];\n             this.addWithNestedEntries(nestedEntry);\n         }\n         return entry;\n     }\n }\n"}]}
