{"diffoscope-json-version": 1, "source1": "first/BaseNCodec.class", "source2": "second/BaseNCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,60 +1,60 @@\n-  SHA-256 checksum c65eccd4aa18b1e1668dd8c2044598ba85c88f3125f10c0ae61c0aceba1e736b\n+  SHA-256 checksum 6ffb2beca2f3f7f81b3e884141268c157b24bb8843125696932e533071004526\n   Compiled from \"BaseNCodec.java\"\n public abstract class org.apache.commons.codec.binary.BaseNCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 50\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #1                          // org/apache/commons/codec/binary/BaseNCodec\n   super_class: #41                        // java/lang/Object\n   interfaces: 2, fields: 13, methods: 24, attributes: 2\n Constant pool:\n-    #1 = Class              #141          // org/apache/commons/codec/binary/BaseNCodec\n-    #2 = Methodref          #1.#142       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n-    #3 = Methodref          #41.#143      // java/lang/Object.\"<init>\":()V\n-    #4 = Fieldref           #1.#144       // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n-    #5 = Fieldref           #1.#145       // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n-    #6 = Fieldref           #1.#146       // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n-    #7 = Fieldref           #1.#147       // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n-    #8 = Fieldref           #1.#148       // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n-    #9 = Fieldref           #1.#149       // org/apache/commons/codec/binary/BaseNCodec.pad:B\n-   #10 = Fieldref           #32.#150      // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n-   #11 = Fieldref           #32.#151      // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #12 = Fieldref           #32.#152      // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n-   #13 = Methodref          #1.#153       // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n-   #14 = Methodref          #154.#155     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #15 = Methodref          #1.#156       // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #16 = Methodref          #1.#157       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #17 = Methodref          #158.#159     // java/lang/Math.min:(II)I\n-   #18 = Fieldref           #32.#160      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #19 = Class              #95           // \"[B\"\n-   #20 = Class              #161          // org/apache/commons/codec/EncoderException\n-   #21 = String             #162          // Parameter supplied to Base-N encode is not a byte[]\n-   #22 = Methodref          #20.#163      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Methodref          #1.#164       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n-   #24 = Methodref          #165.#166     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n-   #25 = Methodref          #1.#167       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n-   #26 = Class              #168          // java/lang/String\n-   #27 = Methodref          #1.#169       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n-   #28 = Class              #170          // org/apache/commons/codec/DecoderException\n-   #29 = String             #171          // Parameter supplied to Base-N decode is not a byte[] or a String\n-   #30 = Methodref          #28.#163      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #31 = Methodref          #165.#172     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n-   #32 = Class              #173          // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #33 = Methodref          #32.#143      // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n-   #34 = Methodref          #1.#174       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #35 = Methodref          #1.#175       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #36 = Methodref          #1.#176       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n-   #37 = Methodref          #1.#177       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #38 = Methodref          #1.#178       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n-   #39 = Methodref          #1.#179       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n-   #40 = Methodref          #1.#180       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n-   #41 = Class              #181          // java/lang/Object\n-   #42 = Class              #182          // org/apache/commons/codec/BinaryEncoder\n-   #43 = Class              #183          // org/apache/commons/codec/BinaryDecoder\n+    #1 = Class              #140          // org/apache/commons/codec/binary/BaseNCodec\n+    #2 = Methodref          #1.#141       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIB)V\n+    #3 = Methodref          #41.#142      // java/lang/Object.\"<init>\":()V\n+    #4 = Fieldref           #1.#143       // org/apache/commons/codec/binary/BaseNCodec.PAD:B\n+    #5 = Fieldref           #1.#144       // org/apache/commons/codec/binary/BaseNCodec.unencodedBlockSize:I\n+    #6 = Fieldref           #1.#145       // org/apache/commons/codec/binary/BaseNCodec.encodedBlockSize:I\n+    #7 = Fieldref           #1.#146       // org/apache/commons/codec/binary/BaseNCodec.lineLength:I\n+    #8 = Fieldref           #1.#147       // org/apache/commons/codec/binary/BaseNCodec.chunkSeparatorLength:I\n+    #9 = Fieldref           #1.#148       // org/apache/commons/codec/binary/BaseNCodec.pad:B\n+   #10 = Fieldref           #32.#149      // org/apache/commons/codec/binary/BaseNCodec$Context.buffer:[B\n+   #11 = Fieldref           #32.#150      // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #12 = Fieldref           #32.#151      // org/apache/commons/codec/binary/BaseNCodec$Context.readPos:I\n+   #13 = Methodref          #1.#152       // org/apache/commons/codec/binary/BaseNCodec.getDefaultBufferSize:()I\n+   #14 = Methodref          #153.#154     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #15 = Methodref          #1.#155       // org/apache/commons/codec/binary/BaseNCodec.resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #16 = Methodref          #1.#156       // org/apache/commons/codec/binary/BaseNCodec.available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #17 = Methodref          #157.#158     // java/lang/Math.min:(II)I\n+   #18 = Fieldref           #32.#159      // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #19 = Class              #94           // \"[B\"\n+   #20 = Class              #160          // org/apache/commons/codec/EncoderException\n+   #21 = String             #161          // Parameter supplied to Base-N encode is not a byte[]\n+   #22 = Methodref          #20.#162      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = Methodref          #1.#163       // org/apache/commons/codec/binary/BaseNCodec.encode:([B)[B\n+   #24 = Methodref          #164.#165     // org/apache/commons/codec/binary/StringUtils.newStringUtf8:([B)Ljava/lang/String;\n+   #25 = Methodref          #1.#166       // org/apache/commons/codec/binary/BaseNCodec.decode:([B)[B\n+   #26 = Class              #167          // java/lang/String\n+   #27 = Methodref          #1.#168       // org/apache/commons/codec/binary/BaseNCodec.decode:(Ljava/lang/String;)[B\n+   #28 = Class              #169          // org/apache/commons/codec/DecoderException\n+   #29 = String             #170          // Parameter supplied to Base-N decode is not a byte[] or a String\n+   #30 = Methodref          #28.#162      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #31 = Methodref          #164.#171     // org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B\n+   #32 = Class              #172          // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #33 = Methodref          #32.#142      // org/apache/commons/codec/binary/BaseNCodec$Context.\"<init>\":()V\n+   #34 = Methodref          #1.#173       // org/apache/commons/codec/binary/BaseNCodec.decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #35 = Methodref          #1.#174       // org/apache/commons/codec/binary/BaseNCodec.readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #36 = Methodref          #1.#175       // org/apache/commons/codec/binary/BaseNCodec.encode:([BII)[B\n+   #37 = Methodref          #1.#176       // org/apache/commons/codec/binary/BaseNCodec.encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+   #38 = Methodref          #1.#177       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:(B)Z\n+   #39 = Methodref          #1.#178       // org/apache/commons/codec/binary/BaseNCodec.isWhiteSpace:(B)Z\n+   #40 = Methodref          #1.#179       // org/apache/commons/codec/binary/BaseNCodec.isInAlphabet:([BZ)Z\n+   #41 = Class              #180          // java/lang/Object\n+   #42 = Class              #181          // org/apache/commons/codec/BinaryEncoder\n+   #43 = Class              #182          // org/apache/commons/codec/BinaryDecoder\n    #44 = Utf8               Context\n    #45 = Utf8               InnerClasses\n    #46 = Utf8               EOF\n    #47 = Utf8               I\n    #48 = Utf8               ConstantValue\n    #49 = Integer            -1\n    #50 = Utf8               MIME_CHUNK_SIZE\n@@ -86,130 +86,129 @@\n    #76 = Utf8               LocalVariableTable\n    #77 = Utf8               this\n    #78 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec;\n    #79 = Utf8               (IIIIB)V\n    #80 = Utf8               useChunking\n    #81 = Utf8               Z\n    #82 = Utf8               StackMapTable\n-   #83 = Class              #141          // org/apache/commons/codec/binary/BaseNCodec\n-   #84 = Utf8               hasData\n-   #85 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n-   #86 = Utf8               context\n-   #87 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n-   #88 = Utf8               available\n-   #89 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-   #90 = Utf8               getDefaultBufferSize\n-   #91 = Utf8               ()I\n-   #92 = Utf8               resizeBuffer\n-   #93 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #94 = Utf8               b\n-   #95 = Utf8               [B\n-   #96 = Utf8               ensureBufferSize\n-   #97 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #98 = Utf8               size\n-   #99 = Utf8               readResults\n-  #100 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #101 = Utf8               len\n-  #102 = Utf8               bPos\n-  #103 = Utf8               bAvail\n-  #104 = Utf8               isWhiteSpace\n-  #105 = Utf8               (B)Z\n-  #106 = Utf8               byteToCheck\n-  #107 = Utf8               encode\n-  #108 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #109 = Utf8               obj\n-  #110 = Utf8               Ljava/lang/Object;\n-  #111 = Utf8               Exceptions\n-  #112 = Utf8               encodeToString\n-  #113 = Utf8               ([B)Ljava/lang/String;\n-  #114 = Utf8               pArray\n-  #115 = Utf8               encodeAsString\n-  #116 = Utf8               decode\n-  #117 = Utf8               (Ljava/lang/String;)[B\n-  #118 = Utf8               Ljava/lang/String;\n-  #119 = Utf8               ([B)[B\n-  #120 = Utf8               result\n-  #121 = Utf8               ([BII)[B\n-  #122 = Utf8               offset\n-  #123 = Utf8               length\n-  #124 = Utf8               buf\n-  #125 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #126 = Utf8               isInAlphabet\n-  #127 = Utf8               ([BZ)Z\n-  #128 = Utf8               octet\n-  #129 = Utf8               arrayOctet\n-  #130 = Utf8               allowWSPad\n-  #131 = Utf8               (Ljava/lang/String;)Z\n-  #132 = Utf8               basen\n-  #133 = Utf8               containsAlphabetOrPad\n-  #134 = Utf8               ([B)Z\n-  #135 = Utf8               element\n-  #136 = Utf8               getEncodedLength\n-  #137 = Utf8               ([B)J\n-  #138 = Utf8               J\n-  #139 = Utf8               SourceFile\n-  #140 = Utf8               BaseNCodec.java\n-  #141 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-  #142 = NameAndType        #72:#79       // \"<init>\":(IIIIB)V\n-  #143 = NameAndType        #72:#184      // \"<init>\":()V\n-  #144 = NameAndType        #63:#61       // PAD:B\n-  #145 = NameAndType        #68:#47       // unencodedBlockSize:I\n-  #146 = NameAndType        #69:#47       // encodedBlockSize:I\n-  #147 = NameAndType        #70:#47       // lineLength:I\n-  #148 = NameAndType        #71:#47       // chunkSeparatorLength:I\n-  #149 = NameAndType        #67:#61       // pad:B\n-  #150 = NameAndType        #185:#95      // buffer:[B\n-  #151 = NameAndType        #186:#47      // pos:I\n-  #152 = NameAndType        #187:#47      // readPos:I\n-  #153 = NameAndType        #90:#91       // getDefaultBufferSize:()I\n-  #154 = Class              #188          // java/lang/System\n-  #155 = NameAndType        #189:#190     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #156 = NameAndType        #92:#93       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #157 = NameAndType        #88:#89       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #158 = Class              #191          // java/lang/Math\n-  #159 = NameAndType        #192:#193     // min:(II)I\n-  #160 = NameAndType        #194:#81      // eof:Z\n-  #161 = Utf8               org/apache/commons/codec/EncoderException\n-  #162 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n-  #163 = NameAndType        #72:#195      // \"<init>\":(Ljava/lang/String;)V\n-  #164 = NameAndType        #107:#119     // encode:([B)[B\n-  #165 = Class              #196          // org/apache/commons/codec/binary/StringUtils\n-  #166 = NameAndType        #197:#113     // newStringUtf8:([B)Ljava/lang/String;\n-  #167 = NameAndType        #116:#119     // decode:([B)[B\n-  #168 = Utf8               java/lang/String\n-  #169 = NameAndType        #116:#117     // decode:(Ljava/lang/String;)[B\n-  #170 = Utf8               org/apache/commons/codec/DecoderException\n-  #171 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n-  #172 = NameAndType        #198:#117     // getBytesUtf8:(Ljava/lang/String;)[B\n-  #173 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #174 = NameAndType        #116:#125     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #175 = NameAndType        #99:#100      // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n-  #176 = NameAndType        #107:#121     // encode:([BII)[B\n-  #177 = NameAndType        #107:#125     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-  #178 = NameAndType        #126:#105     // isInAlphabet:(B)Z\n-  #179 = NameAndType        #104:#105     // isWhiteSpace:(B)Z\n-  #180 = NameAndType        #126:#127     // isInAlphabet:([BZ)Z\n-  #181 = Utf8               java/lang/Object\n-  #182 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #183 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #184 = Utf8               ()V\n-  #185 = Utf8               buffer\n-  #186 = Utf8               pos\n-  #187 = Utf8               readPos\n-  #188 = Utf8               java/lang/System\n-  #189 = Utf8               arraycopy\n-  #190 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #191 = Utf8               java/lang/Math\n-  #192 = Utf8               min\n-  #193 = Utf8               (II)I\n-  #194 = Utf8               eof\n-  #195 = Utf8               (Ljava/lang/String;)V\n-  #196 = Utf8               org/apache/commons/codec/binary/StringUtils\n-  #197 = Utf8               newStringUtf8\n-  #198 = Utf8               getBytesUtf8\n+   #83 = Utf8               hasData\n+   #84 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z\n+   #85 = Utf8               context\n+   #86 = Utf8               Lorg/apache/commons/codec/binary/BaseNCodec$Context;\n+   #87 = Utf8               available\n+   #88 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+   #89 = Utf8               getDefaultBufferSize\n+   #90 = Utf8               ()I\n+   #91 = Utf8               resizeBuffer\n+   #92 = Utf8               (Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #93 = Utf8               b\n+   #94 = Utf8               [B\n+   #95 = Utf8               ensureBufferSize\n+   #96 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #97 = Utf8               size\n+   #98 = Utf8               readResults\n+   #99 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #100 = Utf8               len\n+  #101 = Utf8               bPos\n+  #102 = Utf8               bAvail\n+  #103 = Utf8               isWhiteSpace\n+  #104 = Utf8               (B)Z\n+  #105 = Utf8               byteToCheck\n+  #106 = Utf8               encode\n+  #107 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #108 = Utf8               obj\n+  #109 = Utf8               Ljava/lang/Object;\n+  #110 = Utf8               Exceptions\n+  #111 = Utf8               encodeToString\n+  #112 = Utf8               ([B)Ljava/lang/String;\n+  #113 = Utf8               pArray\n+  #114 = Utf8               encodeAsString\n+  #115 = Utf8               decode\n+  #116 = Utf8               (Ljava/lang/String;)[B\n+  #117 = Utf8               Ljava/lang/String;\n+  #118 = Utf8               ([B)[B\n+  #119 = Utf8               result\n+  #120 = Utf8               ([BII)[B\n+  #121 = Utf8               offset\n+  #122 = Utf8               length\n+  #123 = Utf8               buf\n+  #124 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #125 = Utf8               isInAlphabet\n+  #126 = Utf8               ([BZ)Z\n+  #127 = Utf8               octet\n+  #128 = Utf8               arrayOctet\n+  #129 = Utf8               allowWSPad\n+  #130 = Utf8               (Ljava/lang/String;)Z\n+  #131 = Utf8               basen\n+  #132 = Utf8               containsAlphabetOrPad\n+  #133 = Utf8               ([B)Z\n+  #134 = Utf8               element\n+  #135 = Utf8               getEncodedLength\n+  #136 = Utf8               ([B)J\n+  #137 = Utf8               J\n+  #138 = Utf8               SourceFile\n+  #139 = Utf8               BaseNCodec.java\n+  #140 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+  #141 = NameAndType        #72:#79       // \"<init>\":(IIIIB)V\n+  #142 = NameAndType        #72:#183      // \"<init>\":()V\n+  #143 = NameAndType        #63:#61       // PAD:B\n+  #144 = NameAndType        #68:#47       // unencodedBlockSize:I\n+  #145 = NameAndType        #69:#47       // encodedBlockSize:I\n+  #146 = NameAndType        #70:#47       // lineLength:I\n+  #147 = NameAndType        #71:#47       // chunkSeparatorLength:I\n+  #148 = NameAndType        #67:#61       // pad:B\n+  #149 = NameAndType        #184:#94      // buffer:[B\n+  #150 = NameAndType        #185:#47      // pos:I\n+  #151 = NameAndType        #186:#47      // readPos:I\n+  #152 = NameAndType        #89:#90       // getDefaultBufferSize:()I\n+  #153 = Class              #187          // java/lang/System\n+  #154 = NameAndType        #188:#189     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #155 = NameAndType        #91:#92       // resizeBuffer:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+  #156 = NameAndType        #87:#88       // available:(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #157 = Class              #190          // java/lang/Math\n+  #158 = NameAndType        #191:#192     // min:(II)I\n+  #159 = NameAndType        #193:#81      // eof:Z\n+  #160 = Utf8               org/apache/commons/codec/EncoderException\n+  #161 = Utf8               Parameter supplied to Base-N encode is not a byte[]\n+  #162 = NameAndType        #72:#194      // \"<init>\":(Ljava/lang/String;)V\n+  #163 = NameAndType        #106:#118     // encode:([B)[B\n+  #164 = Class              #195          // org/apache/commons/codec/binary/StringUtils\n+  #165 = NameAndType        #196:#112     // newStringUtf8:([B)Ljava/lang/String;\n+  #166 = NameAndType        #115:#118     // decode:([B)[B\n+  #167 = Utf8               java/lang/String\n+  #168 = NameAndType        #115:#116     // decode:(Ljava/lang/String;)[B\n+  #169 = Utf8               org/apache/commons/codec/DecoderException\n+  #170 = Utf8               Parameter supplied to Base-N decode is not a byte[] or a String\n+  #171 = NameAndType        #197:#116     // getBytesUtf8:(Ljava/lang/String;)[B\n+  #172 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+  #173 = NameAndType        #115:#124     // decode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #174 = NameAndType        #98:#99       // readResults:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I\n+  #175 = NameAndType        #106:#120     // encode:([BII)[B\n+  #176 = NameAndType        #106:#124     // encode:([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #177 = NameAndType        #125:#104     // isInAlphabet:(B)Z\n+  #178 = NameAndType        #103:#104     // isWhiteSpace:(B)Z\n+  #179 = NameAndType        #125:#126     // isInAlphabet:([BZ)Z\n+  #180 = Utf8               java/lang/Object\n+  #181 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #182 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #183 = Utf8               ()V\n+  #184 = Utf8               buffer\n+  #185 = Utf8               pos\n+  #186 = Utf8               readPos\n+  #187 = Utf8               java/lang/System\n+  #188 = Utf8               arraycopy\n+  #189 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #190 = Utf8               java/lang/Math\n+  #191 = Utf8               min\n+  #192 = Utf8               (II)I\n+  #193 = Utf8               eof\n+  #194 = Utf8               (Ljava/lang/String;)V\n+  #195 = Utf8               org/apache/commons/codec/binary/StringUtils\n+  #196 = Utf8               newStringUtf8\n+  #197 = Utf8               getBytesUtf8\n {\n   static final int EOF = -1;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   public static final int MIME_CHUNK_SIZE = 76;\n@@ -643,25 +642,24 @@\n         10: dup\n         11: ldc           #21                 // String Parameter supplied to Base-N encode is not a byte[]\n         13: invokespecial #22                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n         19: checkcast     #19                 // class \"[B\"\n-        22: checkcast     #19                 // class \"[B\"\n-        25: invokevirtual #23                 // Method encode:([B)[B\n-        28: areturn\n+        22: invokevirtual #23                 // Method encode:([B)[B\n+        25: areturn\n       LineNumberTable:\n         line 335: 0\n         line 336: 7\n         line 338: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      29     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      29     1   obj   Ljava/lang/Object;\n+            0      26     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      26     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 1\n         frame_type = 17 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.EncoderException\n \n   public java.lang.String encodeToString(byte[]);\n     descriptor: ([B)Ljava/lang/String;\n@@ -700,46 +698,45 @@\n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: instanceof    #19                 // class \"[B\"\n-         4: ifeq          19\n+         4: ifeq          16\n          7: aload_0\n          8: aload_1\n          9: checkcast     #19                 // class \"[B\"\n-        12: checkcast     #19                 // class \"[B\"\n-        15: invokevirtual #25                 // Method decode:([B)[B\n-        18: areturn\n-        19: aload_1\n-        20: instanceof    #26                 // class java/lang/String\n-        23: ifeq          35\n-        26: aload_0\n-        27: aload_1\n-        28: checkcast     #26                 // class java/lang/String\n-        31: invokevirtual #27                 // Method decode:(Ljava/lang/String;)[B\n-        34: areturn\n-        35: new           #28                 // class org/apache/commons/codec/DecoderException\n-        38: dup\n-        39: ldc           #29                 // String Parameter supplied to Base-N decode is not a byte[] or a String\n-        41: invokespecial #30                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-        44: athrow\n+        12: invokevirtual #25                 // Method decode:([B)[B\n+        15: areturn\n+        16: aload_1\n+        17: instanceof    #26                 // class java/lang/String\n+        20: ifeq          32\n+        23: aload_0\n+        24: aload_1\n+        25: checkcast     #26                 // class java/lang/String\n+        28: invokevirtual #27                 // Method decode:(Ljava/lang/String;)[B\n+        31: areturn\n+        32: new           #28                 // class org/apache/commons/codec/DecoderException\n+        35: dup\n+        36: ldc           #29                 // String Parameter supplied to Base-N decode is not a byte[] or a String\n+        38: invokespecial #30                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        41: athrow\n       LineNumberTable:\n         line 379: 0\n         line 380: 7\n-        line 381: 19\n-        line 382: 26\n-        line 384: 35\n+        line 381: 16\n+        line 382: 23\n+        line 384: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      45     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n-            0      45     1   obj   Ljava/lang/Object;\n+            0      42     0  this   Lorg/apache/commons/codec/binary/BaseNCodec;\n+            0      42     1   obj   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 19 /* same */\n+        frame_type = 16 /* same */\n         frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.DecoderException\n \n   public byte[] decode(java.lang.String);\n     descriptor: (Ljava/lang/String;)[B\n     flags: (0x0001) ACC_PUBLIC\n"}]}
