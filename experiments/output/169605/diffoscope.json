{"diffoscope-json-version": 1, "source1": "first/Functions.class", "source2": "second/Functions.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,59 @@\n-  SHA-256 checksum 0e421e4944f9ff5cd16680420d7fab0395e2887f5777c94cddb105c73d28d59a\n+  SHA-256 checksum 18d0b1d3120680ea423ef658ee1d1ce2b3af18afaff53e3834d08d82460b99ab\n   Compiled from \"Functions.java\"\n public class org.apache.commons.lang3.Functions\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #25                         // org/apache/commons/lang3/Functions\n   super_class: #26                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 13, attributes: 3\n Constant pool:\n-    #1 = Methodref          #26.#141      // java/lang/Object.\"<init>\":()V\n-    #2 = InterfaceMethodref #42.#142      // org/apache/commons/lang3/Functions$FailableRunnable.run:()V\n-    #3 = Class              #143          // java/lang/Throwable\n-    #4 = Methodref          #25.#144      // org/apache/commons/lang3/Functions.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-    #5 = InterfaceMethodref #40.#145      // org/apache/commons/lang3/Functions$FailableCallable.call:()Ljava/lang/Object;\n-    #6 = InterfaceMethodref #38.#146      // org/apache/commons/lang3/Functions$FailableConsumer.accept:(Ljava/lang/Object;)V\n-    #7 = InterfaceMethodref #36.#147      // org/apache/commons/lang3/Functions$FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n-    #8 = InterfaceMethodref #34.#148      // org/apache/commons/lang3/Functions$FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-    #9 = InterfaceMethodref #32.#149      // org/apache/commons/lang3/Functions$FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #10 = InterfaceMethodref #30.#150      // org/apache/commons/lang3/Functions$FailablePredicate.test:(Ljava/lang/Object;)Z\n-   #11 = InterfaceMethodref #27.#151      // org/apache/commons/lang3/Functions$FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #12 = InvokeDynamic      #0:#157       // #0:accept:()Lorg/apache/commons/lang3/Functions$FailableConsumer;\n-   #13 = Class              #158          // java/lang/NullPointerException\n-   #14 = String             #159          // A resource action must not be null.\n-   #15 = Methodref          #13.#160      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Methodref          #25.#161      // org/apache/commons/lang3/Functions.tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n-   #17 = String             #162          // The Throwable must not be null.\n-   #18 = Class              #163          // java/lang/RuntimeException\n-   #19 = Class              #164          // java/lang/Error\n-   #20 = Class              #165          // java/io/IOException\n-   #21 = Class              #166          // java/io/UncheckedIOException\n-   #22 = Methodref          #21.#167      // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n-   #23 = Class              #168          // java/lang/reflect/UndeclaredThrowableException\n-   #24 = Methodref          #23.#169      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #25 = Class              #170          // org/apache/commons/lang3/Functions\n-   #26 = Class              #171          // java/lang/Object\n-   #27 = Class              #172          // org/apache/commons/lang3/Functions$FailableBiPredicate\n+    #1 = Methodref          #26.#138      // java/lang/Object.\"<init>\":()V\n+    #2 = InterfaceMethodref #42.#139      // org/apache/commons/lang3/Functions$FailableRunnable.run:()V\n+    #3 = Class              #140          // java/lang/Throwable\n+    #4 = Methodref          #25.#141      // org/apache/commons/lang3/Functions.rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+    #5 = InterfaceMethodref #40.#142      // org/apache/commons/lang3/Functions$FailableCallable.call:()Ljava/lang/Object;\n+    #6 = InterfaceMethodref #38.#143      // org/apache/commons/lang3/Functions$FailableConsumer.accept:(Ljava/lang/Object;)V\n+    #7 = InterfaceMethodref #36.#144      // org/apache/commons/lang3/Functions$FailableBiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n+    #8 = InterfaceMethodref #34.#145      // org/apache/commons/lang3/Functions$FailableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+    #9 = InterfaceMethodref #32.#146      // org/apache/commons/lang3/Functions$FailableBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #10 = InterfaceMethodref #30.#147      // org/apache/commons/lang3/Functions$FailablePredicate.test:(Ljava/lang/Object;)Z\n+   #11 = InterfaceMethodref #27.#148      // org/apache/commons/lang3/Functions$FailableBiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #12 = InvokeDynamic      #0:#154       // #0:accept:()Lorg/apache/commons/lang3/Functions$FailableConsumer;\n+   #13 = Class              #155          // java/lang/NullPointerException\n+   #14 = String             #156          // A resource action must not be null.\n+   #15 = Methodref          #13.#157      // java/lang/NullPointerException.\"<init>\":(Ljava/lang/String;)V\n+   #16 = Methodref          #25.#158      // org/apache/commons/lang3/Functions.tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n+   #17 = String             #159          // The Throwable must not be null.\n+   #18 = Class              #160          // java/lang/RuntimeException\n+   #19 = Class              #161          // java/lang/Error\n+   #20 = Class              #162          // java/io/IOException\n+   #21 = Class              #163          // java/io/UncheckedIOException\n+   #22 = Methodref          #21.#164      // java/io/UncheckedIOException.\"<init>\":(Ljava/io/IOException;)V\n+   #23 = Class              #165          // java/lang/reflect/UndeclaredThrowableException\n+   #24 = Methodref          #23.#166      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #25 = Class              #167          // org/apache/commons/lang3/Functions\n+   #26 = Class              #168          // java/lang/Object\n+   #27 = Class              #169          // org/apache/commons/lang3/Functions$FailableBiPredicate\n    #28 = Utf8               FailableBiPredicate\n    #29 = Utf8               InnerClasses\n-   #30 = Class              #173          // org/apache/commons/lang3/Functions$FailablePredicate\n+   #30 = Class              #170          // org/apache/commons/lang3/Functions$FailablePredicate\n    #31 = Utf8               FailablePredicate\n-   #32 = Class              #174          // org/apache/commons/lang3/Functions$FailableBiFunction\n+   #32 = Class              #171          // org/apache/commons/lang3/Functions$FailableBiFunction\n    #33 = Utf8               FailableBiFunction\n-   #34 = Class              #175          // org/apache/commons/lang3/Functions$FailableFunction\n+   #34 = Class              #172          // org/apache/commons/lang3/Functions$FailableFunction\n    #35 = Utf8               FailableFunction\n-   #36 = Class              #176          // org/apache/commons/lang3/Functions$FailableBiConsumer\n+   #36 = Class              #173          // org/apache/commons/lang3/Functions$FailableBiConsumer\n    #37 = Utf8               FailableBiConsumer\n-   #38 = Class              #177          // org/apache/commons/lang3/Functions$FailableConsumer\n+   #38 = Class              #174          // org/apache/commons/lang3/Functions$FailableConsumer\n    #39 = Utf8               FailableConsumer\n-   #40 = Class              #178          // org/apache/commons/lang3/Functions$FailableCallable\n+   #40 = Class              #175          // org/apache/commons/lang3/Functions$FailableCallable\n    #41 = Utf8               FailableCallable\n-   #42 = Class              #179          // org/apache/commons/lang3/Functions$FailableRunnable\n+   #42 = Class              #176          // org/apache/commons/lang3/Functions$FailableRunnable\n    #43 = Utf8               FailableRunnable\n    #44 = Utf8               <init>\n    #45 = Utf8               ()V\n    #46 = Utf8               Code\n    #47 = Utf8               LineNumberTable\n    #48 = Utf8               LocalVariableTable\n    #49 = Utf8               this\n@@ -63,157 +63,154 @@\n    #53 = Utf8               t\n    #54 = Utf8               Ljava/lang/Throwable;\n    #55 = Utf8               pRunnable\n    #56 = Utf8               Lorg/apache/commons/lang3/Functions$FailableRunnable;\n    #57 = Utf8               LocalVariableTypeTable\n    #58 = Utf8               Lorg/apache/commons/lang3/Functions$FailableRunnable<TT;>;\n    #59 = Utf8               StackMapTable\n-   #60 = Class              #143          // java/lang/Throwable\n-   #61 = Utf8               Signature\n-   #62 = Utf8               <T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableRunnable<TT;>;)V\n-   #63 = Utf8               call\n-   #64 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/lang/Object;\n-   #65 = Utf8               pCallable\n-   #66 = Utf8               Lorg/apache/commons/lang3/Functions$FailableCallable;\n-   #67 = Utf8               Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;\n-   #68 = Utf8               <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;)TO;\n-   #69 = Utf8               accept\n-   #70 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V\n-   #71 = Utf8               pConsumer\n-   #72 = Utf8               Lorg/apache/commons/lang3/Functions$FailableConsumer;\n-   #73 = Utf8               pObject\n-   #74 = Utf8               Ljava/lang/Object;\n-   #75 = Utf8               Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;\n-   #76 = Utf8               TO;\n-   #77 = Utf8               <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;TO;)V\n-   #78 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n-   #79 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiConsumer;\n-   #80 = Utf8               pObject1\n-   #81 = Utf8               pObject2\n-   #82 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;\n-   #83 = Utf8               TO1;\n-   #84 = Utf8               TO2;\n-   #85 = Utf8               <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;TO1;TO2;)V\n-   #86 = Utf8               apply\n-   #87 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n-   #88 = Utf8               pFunction\n-   #89 = Utf8               Lorg/apache/commons/lang3/Functions$FailableFunction;\n-   #90 = Utf8               pInput\n-   #91 = Utf8               Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;\n-   #92 = Utf8               TI;\n-   #93 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;TI;)TO;\n-   #94 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #95 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiFunction;\n-   #96 = Utf8               pInput1\n-   #97 = Utf8               pInput2\n-   #98 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;\n-   #99 = Utf8               TI1;\n-  #100 = Utf8               TI2;\n-  #101 = Utf8               <I1:Ljava/lang/Object;I2:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;TI1;TI2;)TO;\n-  #102 = Utf8               test\n-  #103 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z\n-  #104 = Utf8               pPredicate\n-  #105 = Utf8               Lorg/apache/commons/lang3/Functions$FailablePredicate;\n-  #106 = Utf8               Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;\n-  #107 = Utf8               <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;TO;)Z\n-  #108 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #109 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiPredicate;\n-  #110 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;\n-  #111 = Utf8               <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;TO1;TO2;)Z\n-  #112 = Utf8               tryWithResources\n-  #113 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n-  #114 = Utf8               errorHandler\n-  #115 = Utf8               runnable\n-  #116 = Utf8               pAction\n-  #117 = Utf8               pErrorHandler\n-  #118 = Utf8               pResources\n-  #119 = Utf8               [Lorg/apache/commons/lang3/Functions$FailableRunnable;\n-  #120 = Utf8               th\n-  #121 = Utf8               Lorg/apache/commons/lang3/Functions$FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;\n-  #122 = Utf8               Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;\n-  #123 = Utf8               Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Object;>;\n-  #124 = Utf8               [Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;\n-  #125 = Class              #177          // org/apache/commons/lang3/Functions$FailableConsumer\n-  #126 = Class              #119          // \"[Lorg/apache/commons/lang3/Functions$FailableRunnable;\"\n-  #127 = Class              #179          // org/apache/commons/lang3/Functions$FailableRunnable\n-  #128 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/Functions$FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n-  #129 = Utf8               RuntimeVisibleAnnotations\n-  #130 = Utf8               Ljava/lang/SafeVarargs;\n-  #131 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n-  #132 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n-  #133 = Utf8               rethrow\n-  #134 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #135 = Utf8               pThrowable\n-  #136 = Utf8               lambda$tryWithResources$0\n-  #137 = Utf8               (Ljava/lang/Throwable;)V\n-  #138 = Utf8               Exceptions\n-  #139 = Utf8               SourceFile\n-  #140 = Utf8               Functions.java\n-  #141 = NameAndType        #44:#45       // \"<init>\":()V\n-  #142 = NameAndType        #51:#45       // run:()V\n-  #143 = Utf8               java/lang/Throwable\n-  #144 = NameAndType        #133:#134     // rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n-  #145 = NameAndType        #63:#180      // call:()Ljava/lang/Object;\n-  #146 = NameAndType        #69:#181      // accept:(Ljava/lang/Object;)V\n-  #147 = NameAndType        #69:#182      // accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n-  #148 = NameAndType        #86:#183      // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #149 = NameAndType        #86:#184      // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #150 = NameAndType        #102:#185     // test:(Ljava/lang/Object;)Z\n-  #151 = NameAndType        #102:#186     // test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #152 = Utf8               BootstrapMethods\n-  #153 = MethodHandle       6:#187        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #154 = MethodType         #181          //  (Ljava/lang/Object;)V\n-  #155 = MethodHandle       6:#188        // REF_invokeStatic org/apache/commons/lang3/Functions.lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n-  #156 = MethodType         #137          //  (Ljava/lang/Throwable;)V\n-  #157 = NameAndType        #69:#189      // accept:()Lorg/apache/commons/lang3/Functions$FailableConsumer;\n-  #158 = Utf8               java/lang/NullPointerException\n-  #159 = Utf8               A resource action must not be null.\n-  #160 = NameAndType        #44:#190      // \"<init>\":(Ljava/lang/String;)V\n-  #161 = NameAndType        #112:#113     // tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n-  #162 = Utf8               The Throwable must not be null.\n-  #163 = Utf8               java/lang/RuntimeException\n-  #164 = Utf8               java/lang/Error\n-  #165 = Utf8               java/io/IOException\n-  #166 = Utf8               java/io/UncheckedIOException\n-  #167 = NameAndType        #44:#191      // \"<init>\":(Ljava/io/IOException;)V\n-  #168 = Utf8               java/lang/reflect/UndeclaredThrowableException\n-  #169 = NameAndType        #44:#137      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #170 = Utf8               org/apache/commons/lang3/Functions\n-  #171 = Utf8               java/lang/Object\n-  #172 = Utf8               org/apache/commons/lang3/Functions$FailableBiPredicate\n-  #173 = Utf8               org/apache/commons/lang3/Functions$FailablePredicate\n-  #174 = Utf8               org/apache/commons/lang3/Functions$FailableBiFunction\n-  #175 = Utf8               org/apache/commons/lang3/Functions$FailableFunction\n-  #176 = Utf8               org/apache/commons/lang3/Functions$FailableBiConsumer\n-  #177 = Utf8               org/apache/commons/lang3/Functions$FailableConsumer\n-  #178 = Utf8               org/apache/commons/lang3/Functions$FailableCallable\n-  #179 = Utf8               org/apache/commons/lang3/Functions$FailableRunnable\n-  #180 = Utf8               ()Ljava/lang/Object;\n-  #181 = Utf8               (Ljava/lang/Object;)V\n-  #182 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n-  #183 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #184 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #185 = Utf8               (Ljava/lang/Object;)Z\n-  #186 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #187 = Methodref          #192.#193     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #188 = Methodref          #25.#194      // org/apache/commons/lang3/Functions.lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n-  #189 = Utf8               ()Lorg/apache/commons/lang3/Functions$FailableConsumer;\n-  #190 = Utf8               (Ljava/lang/String;)V\n-  #191 = Utf8               (Ljava/io/IOException;)V\n-  #192 = Class              #195          // java/lang/invoke/LambdaMetafactory\n-  #193 = NameAndType        #196:#199     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #194 = NameAndType        #136:#137     // lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n-  #195 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #196 = Utf8               metafactory\n-  #197 = Class              #201          // java/lang/invoke/MethodHandles$Lookup\n-  #198 = Utf8               Lookup\n-  #199 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #200 = Class              #202          // java/lang/invoke/MethodHandles\n-  #201 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #202 = Utf8               java/lang/invoke/MethodHandles\n+   #60 = Utf8               Signature\n+   #61 = Utf8               <T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableRunnable<TT;>;)V\n+   #62 = Utf8               call\n+   #63 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/lang/Object;\n+   #64 = Utf8               pCallable\n+   #65 = Utf8               Lorg/apache/commons/lang3/Functions$FailableCallable;\n+   #66 = Utf8               Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;\n+   #67 = Utf8               <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;)TO;\n+   #68 = Utf8               accept\n+   #69 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V\n+   #70 = Utf8               pConsumer\n+   #71 = Utf8               Lorg/apache/commons/lang3/Functions$FailableConsumer;\n+   #72 = Utf8               pObject\n+   #73 = Utf8               Ljava/lang/Object;\n+   #74 = Utf8               Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;\n+   #75 = Utf8               TO;\n+   #76 = Utf8               <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;TO;)V\n+   #77 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n+   #78 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiConsumer;\n+   #79 = Utf8               pObject1\n+   #80 = Utf8               pObject2\n+   #81 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;\n+   #82 = Utf8               TO1;\n+   #83 = Utf8               TO2;\n+   #84 = Utf8               <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;TO1;TO2;)V\n+   #85 = Utf8               apply\n+   #86 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n+   #87 = Utf8               pFunction\n+   #88 = Utf8               Lorg/apache/commons/lang3/Functions$FailableFunction;\n+   #89 = Utf8               pInput\n+   #90 = Utf8               Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;\n+   #91 = Utf8               TI;\n+   #92 = Utf8               <I:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;TI;)TO;\n+   #93 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #94 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiFunction;\n+   #95 = Utf8               pInput1\n+   #96 = Utf8               pInput2\n+   #97 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;\n+   #98 = Utf8               TI1;\n+   #99 = Utf8               TI2;\n+  #100 = Utf8               <I1:Ljava/lang/Object;I2:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;TI1;TI2;)TO;\n+  #101 = Utf8               test\n+  #102 = Utf8               (Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z\n+  #103 = Utf8               pPredicate\n+  #104 = Utf8               Lorg/apache/commons/lang3/Functions$FailablePredicate;\n+  #105 = Utf8               Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;\n+  #106 = Utf8               <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;TO;)Z\n+  #107 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #108 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiPredicate;\n+  #109 = Utf8               Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;\n+  #110 = Utf8               <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;TO1;TO2;)Z\n+  #111 = Utf8               tryWithResources\n+  #112 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n+  #113 = Utf8               errorHandler\n+  #114 = Utf8               runnable\n+  #115 = Utf8               pAction\n+  #116 = Utf8               pErrorHandler\n+  #117 = Utf8               pResources\n+  #118 = Utf8               [Lorg/apache/commons/lang3/Functions$FailableRunnable;\n+  #119 = Utf8               th\n+  #120 = Utf8               Lorg/apache/commons/lang3/Functions$FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;\n+  #121 = Utf8               Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;\n+  #122 = Utf8               Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Object;>;\n+  #123 = Utf8               [Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;\n+  #124 = Class              #118          // \"[Lorg/apache/commons/lang3/Functions$FailableRunnable;\"\n+  #125 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/Functions$FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n+  #126 = Utf8               RuntimeVisibleAnnotations\n+  #127 = Utf8               Ljava/lang/SafeVarargs;\n+  #128 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n+  #129 = Utf8               (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n+  #130 = Utf8               rethrow\n+  #131 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+  #132 = Utf8               pThrowable\n+  #133 = Utf8               lambda$tryWithResources$0\n+  #134 = Utf8               (Ljava/lang/Throwable;)V\n+  #135 = Utf8               Exceptions\n+  #136 = Utf8               SourceFile\n+  #137 = Utf8               Functions.java\n+  #138 = NameAndType        #44:#45       // \"<init>\":()V\n+  #139 = NameAndType        #51:#45       // run:()V\n+  #140 = Utf8               java/lang/Throwable\n+  #141 = NameAndType        #130:#131     // rethrow:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n+  #142 = NameAndType        #62:#177      // call:()Ljava/lang/Object;\n+  #143 = NameAndType        #68:#178      // accept:(Ljava/lang/Object;)V\n+  #144 = NameAndType        #68:#179      // accept:(Ljava/lang/Object;Ljava/lang/Object;)V\n+  #145 = NameAndType        #85:#180      // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #146 = NameAndType        #85:#181      // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #147 = NameAndType        #101:#182     // test:(Ljava/lang/Object;)Z\n+  #148 = NameAndType        #101:#183     // test:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #149 = Utf8               BootstrapMethods\n+  #150 = MethodHandle       6:#184        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #151 = MethodType         #178          //  (Ljava/lang/Object;)V\n+  #152 = MethodHandle       6:#185        // REF_invokeStatic org/apache/commons/lang3/Functions.lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n+  #153 = MethodType         #134          //  (Ljava/lang/Throwable;)V\n+  #154 = NameAndType        #68:#186      // accept:()Lorg/apache/commons/lang3/Functions$FailableConsumer;\n+  #155 = Utf8               java/lang/NullPointerException\n+  #156 = Utf8               A resource action must not be null.\n+  #157 = NameAndType        #44:#187      // \"<init>\":(Ljava/lang/String;)V\n+  #158 = NameAndType        #111:#112     // tryWithResources:(Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n+  #159 = Utf8               The Throwable must not be null.\n+  #160 = Utf8               java/lang/RuntimeException\n+  #161 = Utf8               java/lang/Error\n+  #162 = Utf8               java/io/IOException\n+  #163 = Utf8               java/io/UncheckedIOException\n+  #164 = NameAndType        #44:#188      // \"<init>\":(Ljava/io/IOException;)V\n+  #165 = Utf8               java/lang/reflect/UndeclaredThrowableException\n+  #166 = NameAndType        #44:#134      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #167 = Utf8               org/apache/commons/lang3/Functions\n+  #168 = Utf8               java/lang/Object\n+  #169 = Utf8               org/apache/commons/lang3/Functions$FailableBiPredicate\n+  #170 = Utf8               org/apache/commons/lang3/Functions$FailablePredicate\n+  #171 = Utf8               org/apache/commons/lang3/Functions$FailableBiFunction\n+  #172 = Utf8               org/apache/commons/lang3/Functions$FailableFunction\n+  #173 = Utf8               org/apache/commons/lang3/Functions$FailableBiConsumer\n+  #174 = Utf8               org/apache/commons/lang3/Functions$FailableConsumer\n+  #175 = Utf8               org/apache/commons/lang3/Functions$FailableCallable\n+  #176 = Utf8               org/apache/commons/lang3/Functions$FailableRunnable\n+  #177 = Utf8               ()Ljava/lang/Object;\n+  #178 = Utf8               (Ljava/lang/Object;)V\n+  #179 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n+  #180 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #181 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #182 = Utf8               (Ljava/lang/Object;)Z\n+  #183 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #184 = Methodref          #189.#190     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #185 = Methodref          #25.#191      // org/apache/commons/lang3/Functions.lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n+  #186 = Utf8               ()Lorg/apache/commons/lang3/Functions$FailableConsumer;\n+  #187 = Utf8               (Ljava/lang/String;)V\n+  #188 = Utf8               (Ljava/io/IOException;)V\n+  #189 = Class              #192          // java/lang/invoke/LambdaMetafactory\n+  #190 = NameAndType        #193:#196     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #191 = NameAndType        #133:#134     // lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n+  #192 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #193 = Utf8               metafactory\n+  #194 = Class              #198          // java/lang/invoke/MethodHandles$Lookup\n+  #195 = Utf8               Lookup\n+  #196 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #197 = Class              #199          // java/lang/invoke/MethodHandles\n+  #198 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #199 = Utf8               java/lang/invoke/MethodHandles\n {\n   public org.apache.commons.lang3.Functions();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -254,15 +251,15 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0 pRunnable   Lorg/apache/commons/lang3/Functions$FailableRunnable<TT;>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n-    Signature: #62                          // <T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableRunnable<TT;>;)V\n+    Signature: #61                          // <T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableRunnable<TT;>;)V\n \n   public static <O extends java.lang.Object, T extends java.lang.Throwable> O call(org.apache.commons.lang3.Functions$FailableCallable<O, T>);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableCallable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n@@ -285,15 +282,15 @@\n             0      13     0 pCallable   Lorg/apache/commons/lang3/Functions$FailableCallable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 pCallable   Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;\n       StackMapTable: number_of_entries = 1\n         frame_type = 71 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #68                          // <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;)TO;\n+    Signature: #67                          // <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableCallable<TO;TT;>;)TO;\n \n   public static <O extends java.lang.Object, T extends java.lang.Throwable> void accept(org.apache.commons.lang3.Functions$FailableConsumer<O, T>, O);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableConsumer;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n@@ -323,15 +320,15 @@\n         Start  Length  Slot  Name   Signature\n             0      17     0 pConsumer   Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;\n             0      17     1 pObject   TO;\n       StackMapTable: number_of_entries = 2\n         frame_type = 74 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n-    Signature: #77                          // <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;TO;)V\n+    Signature: #76                          // <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableConsumer<TO;TT;>;TO;)V\n \n   public static <O1 extends java.lang.Object, O2 extends java.lang.Object, T extends java.lang.Throwable> void accept(org.apache.commons.lang3.Functions$FailableBiConsumer<O1, O2, T>, O1, O2);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableBiConsumer;Ljava/lang/Object;Ljava/lang/Object;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -364,15 +361,15 @@\n             0      18     0 pConsumer   Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;\n             0      18     1 pObject1   TO1;\n             0      18     2 pObject2   TO2;\n       StackMapTable: number_of_entries = 2\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n-    Signature: #85                          // <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;TO1;TO2;)V\n+    Signature: #84                          // <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiConsumer<TO1;TO2;TT;>;TO1;TO2;)V\n \n   public static <I extends java.lang.Object, O extends java.lang.Object, T extends java.lang.Throwable> O apply(org.apache.commons.lang3.Functions$FailableFunction<I, O, T>, I);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableFunction;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n@@ -398,15 +395,15 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 pFunction   Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;\n             0      14     1 pInput   TI;\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #93                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;TI;)TO;\n+    Signature: #92                          // <I:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableFunction<TI;TO;TT;>;TI;)TO;\n \n   public static <I1 extends java.lang.Object, I2 extends java.lang.Object, O extends java.lang.Object, T extends java.lang.Throwable> O apply(org.apache.commons.lang3.Functions$FailableBiFunction<I1, I2, O, T>, I1, I2);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableBiFunction;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -435,15 +432,15 @@\n         Start  Length  Slot  Name   Signature\n             0      15     0 pFunction   Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;\n             0      15     1 pInput1   TI1;\n             0      15     2 pInput2   TI2;\n       StackMapTable: number_of_entries = 1\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #101                         // <I1:Ljava/lang/Object;I2:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;TI1;TI2;)TO;\n+    Signature: #100                         // <I1:Ljava/lang/Object;I2:Ljava/lang/Object;O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiFunction<TI1;TI2;TO;TT;>;TI1;TI2;)TO;\n \n   public static <O extends java.lang.Object, T extends java.lang.Throwable> boolean test(org.apache.commons.lang3.Functions$FailablePredicate<O, T>, O);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailablePredicate;Ljava/lang/Object;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n@@ -469,15 +466,15 @@\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0 pPredicate   Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;\n             0      14     1 pObject   TO;\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #107                         // <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;TO;)Z\n+    Signature: #106                         // <O:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailablePredicate<TO;TT;>;TO;)Z\n \n   public static <O1 extends java.lang.Object, O2 extends java.lang.Object, T extends java.lang.Throwable> boolean test(org.apache.commons.lang3.Functions$FailableBiPredicate<O1, O2, T>, O1, O2);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableBiPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=3\n          0: aload_0\n@@ -506,15 +503,15 @@\n         Start  Length  Slot  Name   Signature\n             0      15     0 pPredicate   Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;\n             0      15     1 pObject1   TO1;\n             0      15     2 pObject2   TO2;\n       StackMapTable: number_of_entries = 1\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n-    Signature: #111                         // <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;TO1;TO2;)Z\n+    Signature: #110                         // <O1:Ljava/lang/Object;O2:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Lorg/apache/commons/lang3/Functions$FailableBiPredicate<TO1;TO2;TT;>;TO1;TO2;)Z\n \n   public static void tryWithResources(org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.Functions$FailableConsumer<java.lang.Throwable, ? extends java.lang.Throwable>, org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>...);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableRunnable;Lorg/apache/commons/lang3/Functions$FailableConsumer;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=10, args_size=3\n          0: aload_1\n@@ -675,17 +672,17 @@\n         frame_type = 250 /* chop */\n           offset_delta = 10\n         frame_type = 248 /* chop */\n           offset_delta = 5\n         frame_type = 79 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Throwable ]\n         frame_type = 7 /* same */\n-    Signature: #128                         // (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/Functions$FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n+    Signature: #125                         // (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;Lorg/apache/commons/lang3/Functions$FailableConsumer<Ljava/lang/Throwable;+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n     RuntimeVisibleAnnotations:\n-      0: #130()\n+      0: #127()\n         java.lang.SafeVarargs\n \n   public static void tryWithResources(org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>, org.apache.commons.lang3.Functions$FailableRunnable<? extends java.lang.Throwable>...);\n     descriptor: (Lorg/apache/commons/lang3/Functions$FailableRunnable;[Lorg/apache/commons/lang3/Functions$FailableRunnable;)V\n     flags: (0x0089) ACC_PUBLIC, ACC_STATIC, ACC_VARARGS\n     Code:\n       stack=3, locals=2, args_size=2\n@@ -701,17 +698,17 @@\n         Start  Length  Slot  Name   Signature\n             0       7     0 pAction   Lorg/apache/commons/lang3/Functions$FailableRunnable;\n             0       7     1 pResources   [Lorg/apache/commons/lang3/Functions$FailableRunnable;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0 pAction   Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;\n             0       7     1 pResources   [Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;\n-    Signature: #132                         // (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n+    Signature: #129                         // (Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;[Lorg/apache/commons/lang3/Functions$FailableRunnable<+Ljava/lang/Throwable;>;)V\n     RuntimeVisibleAnnotations:\n-      0: #130()\n+      0: #127()\n         java.lang.SafeVarargs\n \n   public static java.lang.RuntimeException rethrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/RuntimeException;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n@@ -790,14 +787,14 @@\n   public static #31= #30 of #25;          // FailablePredicate=class org/apache/commons/lang3/Functions$FailablePredicate of class org/apache/commons/lang3/Functions\n   public static #33= #32 of #25;          // FailableBiFunction=class org/apache/commons/lang3/Functions$FailableBiFunction of class org/apache/commons/lang3/Functions\n   public static #35= #34 of #25;          // FailableFunction=class org/apache/commons/lang3/Functions$FailableFunction of class org/apache/commons/lang3/Functions\n   public static #37= #36 of #25;          // FailableBiConsumer=class org/apache/commons/lang3/Functions$FailableBiConsumer of class org/apache/commons/lang3/Functions\n   public static #39= #38 of #25;          // FailableConsumer=class org/apache/commons/lang3/Functions$FailableConsumer of class org/apache/commons/lang3/Functions\n   public static #41= #40 of #25;          // FailableCallable=class org/apache/commons/lang3/Functions$FailableCallable of class org/apache/commons/lang3/Functions\n   public static #43= #42 of #25;          // FailableRunnable=class org/apache/commons/lang3/Functions$FailableRunnable of class org/apache/commons/lang3/Functions\n-  public static final #198= #197 of #200; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #195= #194 of #197; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #153 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #150 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #154 (Ljava/lang/Object;)V\n-      #155 REF_invokeStatic org/apache/commons/lang3/Functions.lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n-      #156 (Ljava/lang/Throwable;)V\n+      #151 (Ljava/lang/Object;)V\n+      #152 REF_invokeStatic org/apache/commons/lang3/Functions.lambda$tryWithResources$0:(Ljava/lang/Throwable;)V\n+      #153 (Ljava/lang/Throwable;)V\n"}]}
