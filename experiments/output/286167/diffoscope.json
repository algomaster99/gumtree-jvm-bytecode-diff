{"diffoscope-json-version": 1, "source1": "first/X7875_NewUnix.class", "source2": "second/X7875_NewUnix.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,57 +1,57 @@\n-  SHA-256 checksum 0ed1d89305c6a8b6957b7826e26bcb0a042804678deb84aae49d2eb440d4d2b4\n+  SHA-256 checksum c2a21567dd82be7a6ca5811050bc9c6c304f94a9d11a661a6bae2331f571fc23\n   Compiled from \"X7875_NewUnix.java\"\n public class org.apache.commons.compress.archivers.zip.X7875_NewUnix implements org.apache.commons.compress.archivers.zip.ZipExtraField,java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #29                         // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n   super_class: #38                        // java/lang/Object\n   interfaces: 3, fields: 7, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Methodref          #38.#96       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #29.#97       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.version:I\n-    #3 = Methodref          #29.#98       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.reset:()V\n-    #4 = Fieldref           #29.#99       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-    #5 = Fieldref           #29.#100      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.uid:Ljava/math/BigInteger;\n-    #6 = Methodref          #101.#102     // org/apache/commons/compress/archivers/zip/ZipUtil.bigToLong:(Ljava/math/BigInteger;)J\n-    #7 = Fieldref           #29.#103      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.gid:Ljava/math/BigInteger;\n-    #8 = Methodref          #101.#104     // org/apache/commons/compress/archivers/zip/ZipUtil.longToBig:(J)Ljava/math/BigInteger;\n-    #9 = Methodref          #18.#105      // java/math/BigInteger.toByteArray:()[B\n-   #10 = Methodref          #29.#106      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.trimLeadingZeroesForceMinLength:([B)[B\n-   #11 = Class              #107          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #12 = Methodref          #11.#108      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #13 = Fieldref           #29.#109      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #14 = Methodref          #101.#110     // org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B\n-   #15 = Methodref          #101.#111     // org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B\n-   #16 = Methodref          #112.#113     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #17 = Methodref          #101.#114     // org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I\n-   #18 = Class              #115          // java/math/BigInteger\n-   #19 = Methodref          #18.#116      // java/math/BigInteger.\"<init>\":(I[B)V\n-   #20 = Fieldref           #29.#117      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ONE_THOUSAND:Ljava/math/BigInteger;\n-   #21 = Class              #118          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#96       // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #119          // 0x7875 Zip Extra Field: UID=\n-   #24 = Methodref          #21.#120      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #21.#121      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #26 = String             #122          //  GID=\n-   #27 = Methodref          #21.#123      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = Methodref          #38.#124      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #29 = Class              #125          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-   #30 = Methodref          #18.#126      // java/math/BigInteger.equals:(Ljava/lang/Object;)Z\n+    #1 = Methodref          #38.#95       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #29.#96       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.version:I\n+    #3 = Methodref          #29.#97       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.reset:()V\n+    #4 = Fieldref           #29.#98       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+    #5 = Fieldref           #29.#99       // org/apache/commons/compress/archivers/zip/X7875_NewUnix.uid:Ljava/math/BigInteger;\n+    #6 = Methodref          #100.#101     // org/apache/commons/compress/archivers/zip/ZipUtil.bigToLong:(Ljava/math/BigInteger;)J\n+    #7 = Fieldref           #29.#102      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.gid:Ljava/math/BigInteger;\n+    #8 = Methodref          #100.#103     // org/apache/commons/compress/archivers/zip/ZipUtil.longToBig:(J)Ljava/math/BigInteger;\n+    #9 = Methodref          #18.#104      // java/math/BigInteger.toByteArray:()[B\n+   #10 = Methodref          #29.#105      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.trimLeadingZeroesForceMinLength:([B)[B\n+   #11 = Class              #106          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #12 = Methodref          #11.#107      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #13 = Fieldref           #29.#108      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #14 = Methodref          #100.#109     // org/apache/commons/compress/archivers/zip/ZipUtil.reverse:([B)[B\n+   #15 = Methodref          #100.#110     // org/apache/commons/compress/archivers/zip/ZipUtil.unsignedIntToSignedByte:(I)B\n+   #16 = Methodref          #111.#112     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #17 = Methodref          #100.#113     // org/apache/commons/compress/archivers/zip/ZipUtil.signedByteToUnsignedInt:(B)I\n+   #18 = Class              #114          // java/math/BigInteger\n+   #19 = Methodref          #18.#115      // java/math/BigInteger.\"<init>\":(I[B)V\n+   #20 = Fieldref           #29.#116      // org/apache/commons/compress/archivers/zip/X7875_NewUnix.ONE_THOUSAND:Ljava/math/BigInteger;\n+   #21 = Class              #117          // java/lang/StringBuilder\n+   #22 = Methodref          #21.#95       // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #118          // 0x7875 Zip Extra Field: UID=\n+   #24 = Methodref          #21.#119      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #21.#120      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #26 = String             #121          //  GID=\n+   #27 = Methodref          #21.#122      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = Methodref          #38.#123      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #29 = Class              #124          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n+   #30 = Methodref          #18.#125      // java/math/BigInteger.equals:(Ljava/lang/Object;)Z\n    #31 = Integer            -1234567\n-   #32 = Methodref          #18.#127      // java/math/BigInteger.hashCode:()I\n-   #33 = Methodref          #128.#129     // java/lang/Integer.rotateLeft:(II)I\n-   #34 = Methodref          #130.#131     // java/lang/Math.max:(II)I\n+   #32 = Methodref          #18.#126      // java/math/BigInteger.hashCode:()I\n+   #33 = Methodref          #127.#128     // java/lang/Integer.rotateLeft:(II)I\n+   #34 = Methodref          #129.#130     // java/lang/Math.max:(II)I\n    #35 = Long               1000l\n-   #37 = Methodref          #18.#132      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n-   #38 = Class              #133          // java/lang/Object\n-   #39 = Class              #134          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #40 = Class              #135          // java/lang/Cloneable\n-   #41 = Class              #136          // java/io/Serializable\n+   #37 = Methodref          #18.#131      // java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;\n+   #38 = Class              #132          // java/lang/Object\n+   #39 = Class              #133          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #40 = Class              #134          // java/lang/Cloneable\n+   #41 = Class              #135          // java/io/Serializable\n    #42 = Utf8               HEADER_ID\n    #43 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n    #44 = Utf8               ZERO\n    #45 = Utf8               ONE_THOUSAND\n    #46 = Utf8               Ljava/math/BigInteger;\n    #47 = Utf8               serialVersionUID\n    #48 = Utf8               J\n@@ -71,109 +71,108 @@\n    #63 = Utf8               ()J\n    #64 = Utf8               getGID\n    #65 = Utf8               setUID\n    #66 = Utf8               (J)V\n    #67 = Utf8               setGID\n    #68 = Utf8               getLocalFileDataLength\n    #69 = Utf8               StackMapTable\n-   #70 = Class              #137          // \"[B\"\n+   #70 = Class              #136          // \"[B\"\n    #71 = Utf8               getCentralDirectoryLength\n    #72 = Utf8               getLocalFileDataData\n    #73 = Utf8               ()[B\n    #74 = Utf8               getCentralDirectoryData\n    #75 = Utf8               parseFromLocalFileData\n    #76 = Utf8               ([BII)V\n    #77 = Utf8               Exceptions\n-   #78 = Class              #138          // java/util/zip/ZipException\n+   #78 = Class              #137          // java/util/zip/ZipException\n    #79 = Utf8               parseFromCentralDirectoryData\n    #80 = Utf8               reset\n    #81 = Utf8               toString\n    #82 = Utf8               ()Ljava/lang/String;\n    #83 = Utf8               clone\n    #84 = Utf8               ()Ljava/lang/Object;\n-   #85 = Class              #139          // java/lang/CloneNotSupportedException\n+   #85 = Class              #138          // java/lang/CloneNotSupportedException\n    #86 = Utf8               equals\n    #87 = Utf8               (Ljava/lang/Object;)Z\n-   #88 = Class              #125          // org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-   #89 = Utf8               hashCode\n-   #90 = Utf8               ()I\n-   #91 = Utf8               trimLeadingZeroesForceMinLength\n-   #92 = Utf8               ([B)[B\n-   #93 = Utf8               <clinit>\n-   #94 = Utf8               SourceFile\n-   #95 = Utf8               X7875_NewUnix.java\n-   #96 = NameAndType        #56:#57       // \"<init>\":()V\n-   #97 = NameAndType        #52:#53       // version:I\n-   #98 = NameAndType        #80:#57       // reset:()V\n-   #99 = NameAndType        #42:#43       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #100 = NameAndType        #54:#46       // uid:Ljava/math/BigInteger;\n-  #101 = Class              #140          // org/apache/commons/compress/archivers/zip/ZipUtil\n-  #102 = NameAndType        #141:#142     // bigToLong:(Ljava/math/BigInteger;)J\n-  #103 = NameAndType        #55:#46       // gid:Ljava/math/BigInteger;\n-  #104 = NameAndType        #143:#144     // longToBig:(J)Ljava/math/BigInteger;\n-  #105 = NameAndType        #145:#73      // toByteArray:()[B\n-  #106 = NameAndType        #91:#92       // trimLeadingZeroesForceMinLength:([B)[B\n-  #107 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #108 = NameAndType        #56:#146      // \"<init>\":(I)V\n-  #109 = NameAndType        #44:#43       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #110 = NameAndType        #147:#92      // reverse:([B)[B\n-  #111 = NameAndType        #148:#149     // unsignedIntToSignedByte:(I)B\n-  #112 = Class              #150          // java/lang/System\n-  #113 = NameAndType        #151:#152     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #114 = NameAndType        #153:#154     // signedByteToUnsignedInt:(B)I\n-  #115 = Utf8               java/math/BigInteger\n-  #116 = NameAndType        #56:#155      // \"<init>\":(I[B)V\n-  #117 = NameAndType        #45:#46       // ONE_THOUSAND:Ljava/math/BigInteger;\n-  #118 = Utf8               java/lang/StringBuilder\n-  #119 = Utf8               0x7875 Zip Extra Field: UID=\n-  #120 = NameAndType        #156:#157     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #121 = NameAndType        #156:#158     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #122 = Utf8                GID=\n-  #123 = NameAndType        #81:#82       // toString:()Ljava/lang/String;\n-  #124 = NameAndType        #83:#84       // clone:()Ljava/lang/Object;\n-  #125 = Utf8               org/apache/commons/compress/archivers/zip/X7875_NewUnix\n-  #126 = NameAndType        #86:#87       // equals:(Ljava/lang/Object;)Z\n-  #127 = NameAndType        #89:#90       // hashCode:()I\n-  #128 = Class              #159          // java/lang/Integer\n-  #129 = NameAndType        #160:#161     // rotateLeft:(II)I\n-  #130 = Class              #162          // java/lang/Math\n-  #131 = NameAndType        #163:#161     // max:(II)I\n-  #132 = NameAndType        #164:#144     // valueOf:(J)Ljava/math/BigInteger;\n-  #133 = Utf8               java/lang/Object\n-  #134 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #135 = Utf8               java/lang/Cloneable\n-  #136 = Utf8               java/io/Serializable\n-  #137 = Utf8               [B\n-  #138 = Utf8               java/util/zip/ZipException\n-  #139 = Utf8               java/lang/CloneNotSupportedException\n-  #140 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n-  #141 = Utf8               bigToLong\n-  #142 = Utf8               (Ljava/math/BigInteger;)J\n-  #143 = Utf8               longToBig\n-  #144 = Utf8               (J)Ljava/math/BigInteger;\n-  #145 = Utf8               toByteArray\n-  #146 = Utf8               (I)V\n-  #147 = Utf8               reverse\n-  #148 = Utf8               unsignedIntToSignedByte\n-  #149 = Utf8               (I)B\n-  #150 = Utf8               java/lang/System\n-  #151 = Utf8               arraycopy\n-  #152 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #153 = Utf8               signedByteToUnsignedInt\n-  #154 = Utf8               (B)I\n-  #155 = Utf8               (I[B)V\n-  #156 = Utf8               append\n-  #157 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #158 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #159 = Utf8               java/lang/Integer\n-  #160 = Utf8               rotateLeft\n-  #161 = Utf8               (II)I\n-  #162 = Utf8               java/lang/Math\n-  #163 = Utf8               max\n-  #164 = Utf8               valueOf\n+   #88 = Utf8               hashCode\n+   #89 = Utf8               ()I\n+   #90 = Utf8               trimLeadingZeroesForceMinLength\n+   #91 = Utf8               ([B)[B\n+   #92 = Utf8               <clinit>\n+   #93 = Utf8               SourceFile\n+   #94 = Utf8               X7875_NewUnix.java\n+   #95 = NameAndType        #56:#57       // \"<init>\":()V\n+   #96 = NameAndType        #52:#53       // version:I\n+   #97 = NameAndType        #80:#57       // reset:()V\n+   #98 = NameAndType        #42:#43       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #99 = NameAndType        #54:#46       // uid:Ljava/math/BigInteger;\n+  #100 = Class              #139          // org/apache/commons/compress/archivers/zip/ZipUtil\n+  #101 = NameAndType        #140:#141     // bigToLong:(Ljava/math/BigInteger;)J\n+  #102 = NameAndType        #55:#46       // gid:Ljava/math/BigInteger;\n+  #103 = NameAndType        #142:#143     // longToBig:(J)Ljava/math/BigInteger;\n+  #104 = NameAndType        #144:#73      // toByteArray:()[B\n+  #105 = NameAndType        #90:#91       // trimLeadingZeroesForceMinLength:([B)[B\n+  #106 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #107 = NameAndType        #56:#145      // \"<init>\":(I)V\n+  #108 = NameAndType        #44:#43       // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #109 = NameAndType        #146:#91      // reverse:([B)[B\n+  #110 = NameAndType        #147:#148     // unsignedIntToSignedByte:(I)B\n+  #111 = Class              #149          // java/lang/System\n+  #112 = NameAndType        #150:#151     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #113 = NameAndType        #152:#153     // signedByteToUnsignedInt:(B)I\n+  #114 = Utf8               java/math/BigInteger\n+  #115 = NameAndType        #56:#154      // \"<init>\":(I[B)V\n+  #116 = NameAndType        #45:#46       // ONE_THOUSAND:Ljava/math/BigInteger;\n+  #117 = Utf8               java/lang/StringBuilder\n+  #118 = Utf8               0x7875 Zip Extra Field: UID=\n+  #119 = NameAndType        #155:#156     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #120 = NameAndType        #155:#157     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #121 = Utf8                GID=\n+  #122 = NameAndType        #81:#82       // toString:()Ljava/lang/String;\n+  #123 = NameAndType        #83:#84       // clone:()Ljava/lang/Object;\n+  #124 = Utf8               org/apache/commons/compress/archivers/zip/X7875_NewUnix\n+  #125 = NameAndType        #86:#87       // equals:(Ljava/lang/Object;)Z\n+  #126 = NameAndType        #88:#89       // hashCode:()I\n+  #127 = Class              #158          // java/lang/Integer\n+  #128 = NameAndType        #159:#160     // rotateLeft:(II)I\n+  #129 = Class              #161          // java/lang/Math\n+  #130 = NameAndType        #162:#160     // max:(II)I\n+  #131 = NameAndType        #163:#143     // valueOf:(J)Ljava/math/BigInteger;\n+  #132 = Utf8               java/lang/Object\n+  #133 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #134 = Utf8               java/lang/Cloneable\n+  #135 = Utf8               java/io/Serializable\n+  #136 = Utf8               [B\n+  #137 = Utf8               java/util/zip/ZipException\n+  #138 = Utf8               java/lang/CloneNotSupportedException\n+  #139 = Utf8               org/apache/commons/compress/archivers/zip/ZipUtil\n+  #140 = Utf8               bigToLong\n+  #141 = Utf8               (Ljava/math/BigInteger;)J\n+  #142 = Utf8               longToBig\n+  #143 = Utf8               (J)Ljava/math/BigInteger;\n+  #144 = Utf8               toByteArray\n+  #145 = Utf8               (I)V\n+  #146 = Utf8               reverse\n+  #147 = Utf8               unsignedIntToSignedByte\n+  #148 = Utf8               (I)B\n+  #149 = Utf8               java/lang/System\n+  #150 = Utf8               arraycopy\n+  #151 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #152 = Utf8               signedByteToUnsignedInt\n+  #153 = Utf8               (B)I\n+  #154 = Utf8               (I[B)V\n+  #155 = Utf8               append\n+  #156 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #157 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #158 = Utf8               java/lang/Integer\n+  #159 = Utf8               rotateLeft\n+  #160 = Utf8               (II)I\n+  #161 = Utf8               java/lang/Math\n+  #162 = Utf8               max\n+  #163 = Utf8               valueOf\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n"}]}
