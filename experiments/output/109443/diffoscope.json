{"diffoscope-json-version": 1, "source1": "first/FastDateParser$CaseInsensitiveTextStrategy.class", "source2": "second/FastDateParser$CaseInsensitiveTextStrategy.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,27 +8,27 @@\n private static class CaseInsensitiveTextStrategy extends FastDateParser.PatternStrategy\n {\n     private final int field;\n     final Locale locale;\n     private final Map<String, Integer> lKeyValues;\n     \n     CaseInsensitiveTextStrategy(final int field, final Calendar definingCalendar, final Locale locale) {\n-        super((FastDateParser.FastDateParser$1)null);\n+        super((FastDateParser.PatternStrategy)null);\n         this.field = field;\n         this.locale = locale;\n         final StringBuilder regex = new StringBuilder();\n         regex.append(\"((?iu)\");\n-        this.lKeyValues = FastDateParser.access$600(definingCalendar, locale, field, regex);\n+        this.lKeyValues = FastDateParser.access$4(definingCalendar, locale, field, regex);\n         regex.setLength();\n         regex.append(\")\");\n         this.createPattern(regex);\n     }\n     \n     void setCalendar(final FastDateParser parser, final Calendar cal, final String value) {\n         final String lowerCase = value.toLowerCase(this.locale);\n         Integer iVal = Integer.valueOf(this.lKeyValues.get((Object)lowerCase));\n         if (iVal == null) {\n-            iVal = Integer.valueOf(this.lKeyValues.get((Object)(lowerCase + '.')));\n+            iVal = Integer.valueOf(this.lKeyValues.get((Object)(String.valueOf(lowerCase) + '.')));\n         }\n         cal.set(this.field, iVal);\n     }\n }\n"}]}
