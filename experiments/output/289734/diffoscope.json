{"diffoscope-json-version": 1, "source1": "first/WildcardFilter.class", "source2": "second/WildcardFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,130 +1,127 @@\n-  SHA-256 checksum 0c67700d41d40ceb00f78cc4519f610b522646f38f2bf730baaece7fc8341a2e\n+  SHA-256 checksum cf442d9203068fca0873456db4ef5352db3190094889608ef9a48693540faad1\n   Compiled from \"WildcardFilter.java\"\n public class org.apache.commons.io.filefilter.WildcardFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #24                         // org/apache/commons/io/filefilter/WildcardFilter\n   super_class: #25                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 2, methods: 6, attributes: 3\n Constant pool:\n-    #1 = Methodref          #25.#55       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-    #2 = Class              #56           // java/lang/IllegalArgumentException\n-    #3 = String             #57           // The wildcard list must not be null\n-    #4 = Methodref          #2.#58        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #5 = Fieldref           #24.#59       // org/apache/commons/io/filefilter/WildcardFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-    #6 = InterfaceMethodref #60.#61       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #1 = Methodref          #25.#53       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #2 = Class              #54           // java/lang/IllegalArgumentException\n+    #3 = String             #55           // The wildcard list must not be null\n+    #4 = Methodref          #2.#56        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #5 = Fieldref           #24.#57       // org/apache/commons/io/filefilter/WildcardFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+    #6 = InterfaceMethodref #39.#58       // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n     #7 = Class              #33           // \"[Ljava/lang/String;\"\n-    #8 = Fieldref           #24.#62       // org/apache/commons/io/filefilter/WildcardFilter.wildcards:[Ljava/lang/String;\n-    #9 = String             #63           // The wildcard must not be null\n-   #10 = Class              #64           // java/lang/String\n-   #11 = String             #65           // The wildcard array must not be null\n-   #12 = Methodref          #66.#67       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #13 = Methodref          #22.#68       // java/io/File.isDirectory:()Z\n-   #14 = Methodref          #22.#69       // java/io/File.getName:()Ljava/lang/String;\n-   #15 = Methodref          #70.#71       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #16 = Class              #72           // java/nio/file/LinkOption\n-   #17 = Methodref          #73.#74       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #18 = Fieldref           #75.#76       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #19 = InterfaceMethodref #77.#78       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #20 = Methodref          #79.#80       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #21 = Fieldref           #75.#81       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #22 = Class              #82           // java/io/File\n-   #23 = Methodref          #22.#83       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #24 = Class              #84           // org/apache/commons/io/filefilter/WildcardFilter\n-   #25 = Class              #85           // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #26 = Class              #86           // java/io/Serializable\n+    #8 = Fieldref           #24.#59       // org/apache/commons/io/filefilter/WildcardFilter.wildcards:[Ljava/lang/String;\n+    #9 = String             #60           // The wildcard must not be null\n+   #10 = Class              #61           // java/lang/String\n+   #11 = String             #62           // The wildcard array must not be null\n+   #12 = Methodref          #63.#64       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #13 = Methodref          #22.#65       // java/io/File.isDirectory:()Z\n+   #14 = Methodref          #22.#66       // java/io/File.getName:()Ljava/lang/String;\n+   #15 = Methodref          #67.#68       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #16 = Class              #69           // java/nio/file/LinkOption\n+   #17 = Methodref          #70.#71       // java/nio/file/Files.isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #18 = Fieldref           #72.#73       // java/nio/file/FileVisitResult.TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #19 = InterfaceMethodref #74.#75       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #20 = Methodref          #76.#77       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #21 = Fieldref           #72.#78       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #22 = Class              #79           // java/io/File\n+   #23 = Methodref          #22.#80       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #24 = Class              #81           // org/apache/commons/io/filefilter/WildcardFilter\n+   #25 = Class              #82           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #26 = Class              #83           // java/io/Serializable\n    #27 = Utf8               serialVersionUID\n    #28 = Utf8               J\n    #29 = Utf8               ConstantValue\n    #30 = Long               -5037645902506953517l\n    #32 = Utf8               wildcards\n    #33 = Utf8               [Ljava/lang/String;\n    #34 = Utf8               <init>\n    #35 = Utf8               (Ljava/util/List;)V\n    #36 = Utf8               Code\n    #37 = Utf8               LineNumberTable\n    #38 = Utf8               StackMapTable\n-   #39 = Class              #84           // org/apache/commons/io/filefilter/WildcardFilter\n-   #40 = Class              #87           // java/util/List\n-   #41 = Utf8               Signature\n-   #42 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n-   #43 = Utf8               (Ljava/lang/String;)V\n-   #44 = Class              #64           // java/lang/String\n-   #45 = Utf8               ([Ljava/lang/String;)V\n-   #46 = Utf8               accept\n-   #47 = Utf8               (Ljava/io/File;)Z\n-   #48 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #49 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #50 = Utf8               SourceFile\n-   #51 = Utf8               WildcardFilter.java\n-   #52 = Utf8               Deprecated\n-   #53 = Utf8               RuntimeVisibleAnnotations\n-   #54 = Utf8               Ljava/lang/Deprecated;\n-   #55 = NameAndType        #34:#88       // \"<init>\":()V\n-   #56 = Utf8               java/lang/IllegalArgumentException\n-   #57 = Utf8               The wildcard list must not be null\n-   #58 = NameAndType        #34:#43       // \"<init>\":(Ljava/lang/String;)V\n-   #59 = NameAndType        #89:#33       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #60 = Class              #87           // java/util/List\n-   #61 = NameAndType        #90:#91       // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #62 = NameAndType        #32:#33       // wildcards:[Ljava/lang/String;\n-   #63 = Utf8               The wildcard must not be null\n-   #64 = Utf8               java/lang/String\n-   #65 = Utf8               The wildcard array must not be null\n-   #66 = Class              #92           // java/lang/System\n-   #67 = NameAndType        #93:#94       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #68 = NameAndType        #95:#96       // isDirectory:()Z\n-   #69 = NameAndType        #97:#98       // getName:()Ljava/lang/String;\n-   #70 = Class              #99           // org/apache/commons/io/FilenameUtils\n-   #71 = NameAndType        #100:#101     // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #72 = Utf8               java/nio/file/LinkOption\n-   #73 = Class              #102          // java/nio/file/Files\n-   #74 = NameAndType        #95:#103      // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #75 = Class              #104          // java/nio/file/FileVisitResult\n-   #76 = NameAndType        #105:#106     // TERMINATE:Ljava/nio/file/FileVisitResult;\n-   #77 = Class              #107          // java/nio/file/Path\n-   #78 = NameAndType        #108:#109     // getFileName:()Ljava/nio/file/Path;\n-   #79 = Class              #110          // java/util/Objects\n-   #80 = NameAndType        #111:#112     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #81 = NameAndType        #113:#106     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #82 = Utf8               java/io/File\n-   #83 = NameAndType        #34:#114      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #84 = Utf8               org/apache/commons/io/filefilter/WildcardFilter\n-   #85 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #86 = Utf8               java/io/Serializable\n-   #87 = Utf8               java/util/List\n-   #88 = Utf8               ()V\n-   #89 = Utf8               EMPTY_STRING_ARRAY\n-   #90 = Utf8               toArray\n-   #91 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #92 = Utf8               java/lang/System\n-   #93 = Utf8               arraycopy\n-   #94 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #95 = Utf8               isDirectory\n-   #96 = Utf8               ()Z\n-   #97 = Utf8               getName\n-   #98 = Utf8               ()Ljava/lang/String;\n-   #99 = Utf8               org/apache/commons/io/FilenameUtils\n-  #100 = Utf8               wildcardMatch\n-  #101 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #102 = Utf8               java/nio/file/Files\n-  #103 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #104 = Utf8               java/nio/file/FileVisitResult\n-  #105 = Utf8               TERMINATE\n-  #106 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #107 = Utf8               java/nio/file/Path\n-  #108 = Utf8               getFileName\n-  #109 = Utf8               ()Ljava/nio/file/Path;\n-  #110 = Utf8               java/util/Objects\n-  #111 = Utf8               toString\n-  #112 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #113 = Utf8               CONTINUE\n-  #114 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #39 = Class              #84           // java/util/List\n+   #40 = Utf8               Signature\n+   #41 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V\n+   #42 = Utf8               (Ljava/lang/String;)V\n+   #43 = Utf8               ([Ljava/lang/String;)V\n+   #44 = Utf8               accept\n+   #45 = Utf8               (Ljava/io/File;)Z\n+   #46 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #47 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #48 = Utf8               SourceFile\n+   #49 = Utf8               WildcardFilter.java\n+   #50 = Utf8               Deprecated\n+   #51 = Utf8               RuntimeVisibleAnnotations\n+   #52 = Utf8               Ljava/lang/Deprecated;\n+   #53 = NameAndType        #34:#85       // \"<init>\":()V\n+   #54 = Utf8               java/lang/IllegalArgumentException\n+   #55 = Utf8               The wildcard list must not be null\n+   #56 = NameAndType        #34:#42       // \"<init>\":(Ljava/lang/String;)V\n+   #57 = NameAndType        #86:#33       // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #58 = NameAndType        #87:#88       // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #59 = NameAndType        #32:#33       // wildcards:[Ljava/lang/String;\n+   #60 = Utf8               The wildcard must not be null\n+   #61 = Utf8               java/lang/String\n+   #62 = Utf8               The wildcard array must not be null\n+   #63 = Class              #89           // java/lang/System\n+   #64 = NameAndType        #90:#91       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #65 = NameAndType        #92:#93       // isDirectory:()Z\n+   #66 = NameAndType        #94:#95       // getName:()Ljava/lang/String;\n+   #67 = Class              #96           // org/apache/commons/io/FilenameUtils\n+   #68 = NameAndType        #97:#98       // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #69 = Utf8               java/nio/file/LinkOption\n+   #70 = Class              #99           // java/nio/file/Files\n+   #71 = NameAndType        #92:#100      // isDirectory:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #72 = Class              #101          // java/nio/file/FileVisitResult\n+   #73 = NameAndType        #102:#103     // TERMINATE:Ljava/nio/file/FileVisitResult;\n+   #74 = Class              #104          // java/nio/file/Path\n+   #75 = NameAndType        #105:#106     // getFileName:()Ljava/nio/file/Path;\n+   #76 = Class              #107          // java/util/Objects\n+   #77 = NameAndType        #108:#109     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #78 = NameAndType        #110:#103     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #79 = Utf8               java/io/File\n+   #80 = NameAndType        #34:#111      // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #81 = Utf8               org/apache/commons/io/filefilter/WildcardFilter\n+   #82 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #83 = Utf8               java/io/Serializable\n+   #84 = Utf8               java/util/List\n+   #85 = Utf8               ()V\n+   #86 = Utf8               EMPTY_STRING_ARRAY\n+   #87 = Utf8               toArray\n+   #88 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #89 = Utf8               java/lang/System\n+   #90 = Utf8               arraycopy\n+   #91 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #92 = Utf8               isDirectory\n+   #93 = Utf8               ()Z\n+   #94 = Utf8               getName\n+   #95 = Utf8               ()Ljava/lang/String;\n+   #96 = Utf8               org/apache/commons/io/FilenameUtils\n+   #97 = Utf8               wildcardMatch\n+   #98 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #99 = Utf8               java/nio/file/Files\n+  #100 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #101 = Utf8               java/nio/file/FileVisitResult\n+  #102 = Utf8               TERMINATE\n+  #103 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #104 = Utf8               java/nio/file/Path\n+  #105 = Utf8               getFileName\n+  #106 = Utf8               ()Ljava/nio/file/Path;\n+  #107 = Utf8               java/util/Objects\n+  #108 = Utf8               toString\n+  #109 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #110 = Utf8               CONTINUE\n+  #111 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n {\n   private static final long serialVersionUID = -5037645902506953517l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -5037645902506953517l\n \n   private final java.lang.String[] wildcards;\n@@ -159,15 +156,15 @@\n         line 97: 18\n         line 98: 34\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 18\n           locals = [ class org/apache/commons/io/filefilter/WildcardFilter, class java/util/List ]\n           stack = []\n-    Signature: #42                          // (Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #41                          // (Ljava/util/List<Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.WildcardFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=2\n          0: aload_0\n@@ -408,9 +405,9 @@\n         frame_type = 23 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n }\n SourceFile: \"WildcardFilter.java\"\n Deprecated: true\n RuntimeVisibleAnnotations:\n-  0: #54()\n+  0: #52()\n     java.lang.Deprecated\n"}]}
