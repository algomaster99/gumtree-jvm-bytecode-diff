{"diffoscope-json-version": 1, "source1": "first/ProxyInputStream.class", "source2": "second/ProxyInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,37 +1,37 @@\n-  SHA-256 checksum 3ff8a018c07952d52ed8fb68299d695be52f3130a3cdd5665e5336b8f6e04047\n+  SHA-256 checksum ee486e68a04269c7af9bf8184461db244173c3f758034243ddf9e3dbfd0ab7de\n   Compiled from \"ProxyInputStream.java\"\n public abstract class org.apache.commons.io.input.ProxyInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #19                         // org/apache/commons/io/input/ProxyInputStream\n   super_class: #20                        // java/io/FilterInputStream\n   interfaces: 0, fields: 0, methods: 13, attributes: 3\n Constant pool:\n-    #1 = Class              #66           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #20.#67       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Methodref          #19.#68       // org/apache/commons/io/input/ProxyInputStream.beforeRead:(I)V\n-    #4 = Fieldref           #19.#69       // org/apache/commons/io/input/ProxyInputStream.in:Ljava/io/InputStream;\n-    #5 = Methodref          #70.#71       // java/io/InputStream.read:()I\n-    #6 = Methodref          #19.#72       // org/apache/commons/io/input/ProxyInputStream.afterRead:(I)V\n-    #7 = Class              #73           // java/io/IOException\n-    #8 = Methodref          #19.#74       // org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-    #9 = Methodref          #1.#75        // org/apache/commons/io/IOUtils.length:([B)I\n-   #10 = Methodref          #70.#76       // java/io/InputStream.read:([B)I\n-   #11 = Methodref          #70.#77       // java/io/InputStream.read:([BII)I\n-   #12 = Methodref          #70.#78       // java/io/InputStream.skip:(J)J\n-   #13 = Methodref          #20.#79       // java/io/FilterInputStream.available:()I\n-   #14 = InvokeDynamic      #0:#85        // #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-   #15 = Methodref          #1.#86        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #16 = Methodref          #70.#87       // java/io/InputStream.mark:(I)V\n-   #17 = Methodref          #70.#88       // java/io/InputStream.reset:()V\n-   #18 = Methodref          #70.#89       // java/io/InputStream.markSupported:()Z\n-   #19 = Class              #90           // org/apache/commons/io/input/ProxyInputStream\n-   #20 = Class              #91           // java/io/FilterInputStream\n+    #1 = Class              #64           // org/apache/commons/io/IOUtils\n+    #2 = Methodref          #20.#65       // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #3 = Methodref          #19.#66       // org/apache/commons/io/input/ProxyInputStream.beforeRead:(I)V\n+    #4 = Fieldref           #19.#67       // org/apache/commons/io/input/ProxyInputStream.in:Ljava/io/InputStream;\n+    #5 = Methodref          #68.#69       // java/io/InputStream.read:()I\n+    #6 = Methodref          #19.#70       // org/apache/commons/io/input/ProxyInputStream.afterRead:(I)V\n+    #7 = Class              #71           // java/io/IOException\n+    #8 = Methodref          #19.#72       // org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+    #9 = Methodref          #1.#73        // org/apache/commons/io/IOUtils.length:([B)I\n+   #10 = Methodref          #68.#74       // java/io/InputStream.read:([B)I\n+   #11 = Methodref          #68.#75       // java/io/InputStream.read:([BII)I\n+   #12 = Methodref          #68.#76       // java/io/InputStream.skip:(J)J\n+   #13 = Methodref          #20.#77       // java/io/FilterInputStream.available:()I\n+   #14 = InvokeDynamic      #0:#83        // #0:accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+   #15 = Methodref          #1.#84        // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #16 = Methodref          #68.#85       // java/io/InputStream.mark:(I)V\n+   #17 = Methodref          #68.#86       // java/io/InputStream.reset:()V\n+   #18 = Methodref          #68.#87       // java/io/InputStream.markSupported:()Z\n+   #19 = Class              #88           // org/apache/commons/io/input/ProxyInputStream\n+   #20 = Class              #89           // java/io/FilterInputStream\n    #21 = Utf8               <init>\n    #22 = Utf8               (Ljava/io/InputStream;)V\n    #23 = Utf8               Code\n    #24 = Utf8               LineNumberTable\n    #25 = Utf8               LocalVariableTable\n    #26 = Utf8               this\n    #27 = Utf8               Lorg/apache/commons/io/input/ProxyInputStream;\n@@ -40,88 +40,86 @@\n    #30 = Utf8               read\n    #31 = Utf8               ()I\n    #32 = Utf8               b\n    #33 = Utf8               I\n    #34 = Utf8               e\n    #35 = Utf8               Ljava/io/IOException;\n    #36 = Utf8               StackMapTable\n-   #37 = Class              #90           // org/apache/commons/io/input/ProxyInputStream\n-   #38 = Class              #73           // java/io/IOException\n-   #39 = Utf8               Exceptions\n-   #40 = Utf8               ([B)I\n-   #41 = Utf8               n\n-   #42 = Utf8               bts\n-   #43 = Utf8               [B\n-   #44 = Utf8               ([BII)I\n-   #45 = Utf8               off\n-   #46 = Utf8               len\n-   #47 = Utf8               skip\n-   #48 = Utf8               (J)J\n-   #49 = Utf8               ln\n-   #50 = Utf8               J\n-   #51 = Utf8               available\n-   #52 = Utf8               close\n-   #53 = Utf8               ()V\n-   #54 = Utf8               mark\n-   #55 = Utf8               (I)V\n-   #56 = Utf8               readlimit\n-   #57 = Utf8               reset\n-   #58 = Utf8               markSupported\n-   #59 = Utf8               ()Z\n-   #60 = Utf8               beforeRead\n-   #61 = Utf8               afterRead\n-   #62 = Utf8               handleIOException\n-   #63 = Utf8               (Ljava/io/IOException;)V\n-   #64 = Utf8               SourceFile\n-   #65 = Utf8               ProxyInputStream.java\n-   #66 = Utf8               org/apache/commons/io/IOUtils\n-   #67 = NameAndType        #21:#22       // \"<init>\":(Ljava/io/InputStream;)V\n-   #68 = NameAndType        #60:#55       // beforeRead:(I)V\n-   #69 = NameAndType        #92:#29       // in:Ljava/io/InputStream;\n-   #70 = Class              #93           // java/io/InputStream\n-   #71 = NameAndType        #30:#31       // read:()I\n-   #72 = NameAndType        #61:#55       // afterRead:(I)V\n-   #73 = Utf8               java/io/IOException\n-   #74 = NameAndType        #62:#63       // handleIOException:(Ljava/io/IOException;)V\n-   #75 = NameAndType        #94:#40       // length:([B)I\n-   #76 = NameAndType        #30:#40       // read:([B)I\n-   #77 = NameAndType        #30:#44       // read:([BII)I\n-   #78 = NameAndType        #47:#48       // skip:(J)J\n-   #79 = NameAndType        #51:#31       // available:()I\n-   #80 = Utf8               BootstrapMethods\n-   #81 = MethodHandle       6:#95         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #82 = MethodType         #96           //  (Ljava/lang/Object;)V\n-   #83 = MethodHandle       5:#8          // REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-   #84 = MethodType         #63           //  (Ljava/io/IOException;)V\n-   #85 = NameAndType        #97:#98       // accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-   #86 = NameAndType        #52:#99       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #87 = NameAndType        #54:#55       // mark:(I)V\n-   #88 = NameAndType        #57:#53       // reset:()V\n-   #89 = NameAndType        #58:#59       // markSupported:()Z\n-   #90 = Utf8               org/apache/commons/io/input/ProxyInputStream\n-   #91 = Utf8               java/io/FilterInputStream\n-   #92 = Utf8               in\n-   #93 = Utf8               java/io/InputStream\n-   #94 = Utf8               length\n-   #95 = Methodref          #100.#101     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #96 = Utf8               (Ljava/lang/Object;)V\n-   #97 = Utf8               accept\n-   #98 = Utf8               (Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n-   #99 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #100 = Class              #102          // java/lang/invoke/LambdaMetafactory\n-  #101 = NameAndType        #103:#107     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #102 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #103 = Utf8               metafactory\n-  #104 = Class              #109          // java/lang/invoke/MethodHandles$Lookup\n-  #105 = Utf8               Lookup\n-  #106 = Utf8               InnerClasses\n-  #107 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #108 = Class              #110          // java/lang/invoke/MethodHandles\n-  #109 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #110 = Utf8               java/lang/invoke/MethodHandles\n+   #37 = Utf8               Exceptions\n+   #38 = Utf8               ([B)I\n+   #39 = Utf8               n\n+   #40 = Utf8               bts\n+   #41 = Utf8               [B\n+   #42 = Utf8               ([BII)I\n+   #43 = Utf8               off\n+   #44 = Utf8               len\n+   #45 = Utf8               skip\n+   #46 = Utf8               (J)J\n+   #47 = Utf8               ln\n+   #48 = Utf8               J\n+   #49 = Utf8               available\n+   #50 = Utf8               close\n+   #51 = Utf8               ()V\n+   #52 = Utf8               mark\n+   #53 = Utf8               (I)V\n+   #54 = Utf8               readlimit\n+   #55 = Utf8               reset\n+   #56 = Utf8               markSupported\n+   #57 = Utf8               ()Z\n+   #58 = Utf8               beforeRead\n+   #59 = Utf8               afterRead\n+   #60 = Utf8               handleIOException\n+   #61 = Utf8               (Ljava/io/IOException;)V\n+   #62 = Utf8               SourceFile\n+   #63 = Utf8               ProxyInputStream.java\n+   #64 = Utf8               org/apache/commons/io/IOUtils\n+   #65 = NameAndType        #21:#22       // \"<init>\":(Ljava/io/InputStream;)V\n+   #66 = NameAndType        #58:#53       // beforeRead:(I)V\n+   #67 = NameAndType        #90:#29       // in:Ljava/io/InputStream;\n+   #68 = Class              #91           // java/io/InputStream\n+   #69 = NameAndType        #30:#31       // read:()I\n+   #70 = NameAndType        #59:#53       // afterRead:(I)V\n+   #71 = Utf8               java/io/IOException\n+   #72 = NameAndType        #60:#61       // handleIOException:(Ljava/io/IOException;)V\n+   #73 = NameAndType        #92:#38       // length:([B)I\n+   #74 = NameAndType        #30:#38       // read:([B)I\n+   #75 = NameAndType        #30:#42       // read:([BII)I\n+   #76 = NameAndType        #45:#46       // skip:(J)J\n+   #77 = NameAndType        #49:#31       // available:()I\n+   #78 = Utf8               BootstrapMethods\n+   #79 = MethodHandle       6:#93         // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #80 = MethodType         #94           //  (Ljava/lang/Object;)V\n+   #81 = MethodHandle       5:#8          // REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+   #82 = MethodType         #61           //  (Ljava/io/IOException;)V\n+   #83 = NameAndType        #95:#96       // accept:(Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+   #84 = NameAndType        #50:#97       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #85 = NameAndType        #52:#53       // mark:(I)V\n+   #86 = NameAndType        #55:#51       // reset:()V\n+   #87 = NameAndType        #56:#57       // markSupported:()Z\n+   #88 = Utf8               org/apache/commons/io/input/ProxyInputStream\n+   #89 = Utf8               java/io/FilterInputStream\n+   #90 = Utf8               in\n+   #91 = Utf8               java/io/InputStream\n+   #92 = Utf8               length\n+   #93 = Methodref          #98.#99       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+   #94 = Utf8               (Ljava/lang/Object;)V\n+   #95 = Utf8               accept\n+   #96 = Utf8               (Lorg/apache/commons/io/input/ProxyInputStream;)Lorg/apache/commons/io/function/IOConsumer;\n+   #97 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #98 = Class              #100          // java/lang/invoke/LambdaMetafactory\n+   #99 = NameAndType        #101:#105     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #100 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #101 = Utf8               metafactory\n+  #102 = Class              #107          // java/lang/invoke/MethodHandles$Lookup\n+  #103 = Utf8               Lookup\n+  #104 = Utf8               InnerClasses\n+  #105 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #106 = Class              #108          // java/lang/invoke/MethodHandles\n+  #107 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #108 = Utf8               java/lang/invoke/MethodHandles\n {\n   public org.apache.commons.io.input.ProxyInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -493,14 +491,14 @@\n             0       2     0  this   Lorg/apache/commons/io/input/ProxyInputStream;\n             0       2     1     e   Ljava/io/IOException;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ProxyInputStream.java\"\n InnerClasses:\n-  public static final #105= #104 of #108; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #103= #102 of #106; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #81 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #79 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #82 (Ljava/lang/Object;)V\n-      #83 REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n-      #84 (Ljava/io/IOException;)V\n+      #80 (Ljava/lang/Object;)V\n+      #81 REF_invokeVirtual org/apache/commons/io/input/ProxyInputStream.handleIOException:(Ljava/io/IOException;)V\n+      #82 (Ljava/io/IOException;)V\n"}]}
