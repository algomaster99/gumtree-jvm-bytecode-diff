{"diffoscope-json-version": 1, "source1": "first/BitField.class", "source2": "second/BitField.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -2,80 +2,80 @@\n package org.apache.commons.lang3;\n \n public class BitField\n {\n     private final int _mask;\n     private final int _shift_count;\n     \n-    public BitField(final int mask) {\n-        this._mask = mask;\n-        this._shift_count = ((mask == 0) ? 0 : Integer.numberOfTrailingZeros(mask));\n+    public BitField(final int n) {\n+        this._mask = n;\n+        this._shift_count = ((n == 0) ? 0 : Integer.numberOfTrailingZeros(n));\n     }\n     \n-    public int getValue(final int holder) {\n-        return this.getRawValue(holder) >> this._shift_count;\n+    public int getValue(final int n) {\n+        return this.getRawValue(n) >> this._shift_count;\n     }\n     \n-    public short getShortValue(final short holder) {\n-        return (short)this.getValue(holder);\n+    public short getShortValue(final short n) {\n+        return (short)this.getValue(n);\n     }\n     \n-    public int getRawValue(final int holder) {\n-        return holder & this._mask;\n+    public int getRawValue(final int n) {\n+        return n & this._mask;\n     }\n     \n-    public short getShortRawValue(final short holder) {\n-        return (short)this.getRawValue(holder);\n+    public short getShortRawValue(final short n) {\n+        return (short)this.getRawValue(n);\n     }\n     \n-    public boolean isSet(final int holder) {\n-        return (holder & this._mask) != 0x0;\n+    public boolean isSet(final int n) {\n+        return (n & this._mask) != 0x0;\n     }\n     \n-    public boolean isAllSet(final int holder) {\n-        return (holder & this._mask) == this._mask;\n+    public boolean isAllSet(final int n) {\n+        return (n & this._mask) == this._mask;\n     }\n     \n-    public int setValue(final int holder, final int value) {\n-        return (holder & ~this._mask) | (value << this._shift_count & this._mask);\n+    public int setValue(final int n, final int n2) {\n+        return (n & ~this._mask) | (n2 << this._shift_count & this._mask);\n     }\n     \n-    public short setShortValue(final short holder, final short value) {\n-        return (short)this.setValue(holder, value);\n+    public short setShortValue(final short n, final short n2) {\n+        return (short)this.setValue(n, n2);\n     }\n     \n-    public int clear(final int holder) {\n-        return holder & ~this._mask;\n+    public int clear(final int n) {\n+        return n & ~this._mask;\n     }\n     \n-    public short clearShort(final short holder) {\n-        return (short)this.clear(holder);\n+    public short clearShort(final short n) {\n+        return (short)this.clear(n);\n     }\n     \n-    public byte clearByte(final byte holder) {\n-        return (byte)this.clear(holder);\n+    public byte clearByte(final byte b) {\n+        return (byte)this.clear(b);\n     }\n     \n-    public int set(final int holder) {\n-        return holder | this._mask;\n+    public int set(final int n) {\n+        return n | this._mask;\n     }\n     \n-    public short setShort(final short holder) {\n-        return (short)this.set(holder);\n+    public short setShort(final short n) {\n+        return (short)this.set(n);\n     }\n     \n-    public byte setByte(final byte holder) {\n-        return (byte)this.set(holder);\n+    public byte setByte(final byte b) {\n+        return (byte)this.set(b);\n     }\n     \n-    public int setBoolean(final int holder, final boolean flag) {\n-        return flag ? this.set(holder) : this.clear(holder);\n+    public int setBoolean(final int n, final boolean b) {\n+        return b ? this.set(n) : this.clear(n);\n     }\n     \n-    public short setShortBoolean(final short holder, final boolean flag) {\n-        return flag ? this.setShort(holder) : this.clearShort(holder);\n+    public short setShortBoolean(final short short1, final boolean b) {\n+        return b ? this.setShort(short1) : this.clearShort(short1);\n     }\n     \n-    public byte setByteBoolean(final byte holder, final boolean flag) {\n-        return flag ? this.setByte(holder) : this.clearByte(holder);\n+    public byte setByteBoolean(final byte byte1, final boolean b) {\n+        return b ? this.setByte(byte1) : this.clearByte(byte1);\n     }\n }\n"}]}
