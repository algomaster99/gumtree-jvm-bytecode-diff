{"diffoscope-json-version": 1, "source1": "first/DeflateParameters.class", "source2": "second/DeflateParameters.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,77 +1,72 @@\n-  SHA-256 checksum b739cba0032672f229f7ffe4c6de190bd01648123d74b694d4c4a07a6963c582\n+  SHA-256 checksum 7eff5c2814341d8720ae3f4c3400d165b3f9a8354696cef67d8906d30cf1af9c\n   Compiled from \"DeflateParameters.java\"\n public class org.apache.commons.compress.compressors.deflate.DeflateParameters\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #5                          // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-  super_class: #14                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #14.#42        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #5.#43         // org/apache/commons/compress/compressors/deflate/DeflateParameters.zlibHeader:Z\n-   #3 = Class              #44            // java/util/zip/Deflater\n-   #4 = Fieldref           #5.#45         // org/apache/commons/compress/compressors/deflate/DeflateParameters.compressionLevel:I\n-   #5 = Class              #46            // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #6 = Class              #47            // java/lang/IllegalArgumentException\n-   #7 = Class              #48            // java/lang/StringBuilder\n-   #8 = Methodref          #7.#42         // java/lang/StringBuilder.\"<init>\":()V\n-   #9 = String             #49            // Invalid Deflate compression level:\n-  #10 = Methodref          #7.#50         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = Methodref          #7.#51         // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #12 = Methodref          #7.#52         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #13 = Methodref          #6.#53         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #14 = Class              #54            // java/lang/Object\n-  #15 = Utf8               MAX_LEVEL\n-  #16 = Utf8               I\n-  #17 = Utf8               ConstantValue\n-  #18 = Integer            9\n-  #19 = Utf8               MIN_LEVEL\n-  #20 = Integer            0\n-  #21 = Utf8               zlibHeader\n-  #22 = Utf8               Z\n-  #23 = Utf8               compressionLevel\n-  #24 = Utf8               <init>\n-  #25 = Utf8               ()V\n-  #26 = Utf8               Code\n-  #27 = Utf8               LineNumberTable\n-  #28 = Utf8               LocalVariableTable\n-  #29 = Utf8               this\n-  #30 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n-  #31 = Utf8               withZlibHeader\n-  #32 = Utf8               ()Z\n-  #33 = Utf8               setWithZlibHeader\n-  #34 = Utf8               (Z)V\n-  #35 = Utf8               getCompressionLevel\n-  #36 = Utf8               ()I\n-  #37 = Utf8               setCompressionLevel\n-  #38 = Utf8               (I)V\n-  #39 = Utf8               StackMapTable\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               DeflateParameters.java\n-  #42 = NameAndType        #24:#25        // \"<init>\":()V\n-  #43 = NameAndType        #21:#22        // zlibHeader:Z\n-  #44 = Utf8               java/util/zip/Deflater\n-  #45 = NameAndType        #23:#16        // compressionLevel:I\n-  #46 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n-  #47 = Utf8               java/lang/IllegalArgumentException\n-  #48 = Utf8               java/lang/StringBuilder\n-  #49 = Utf8               Invalid Deflate compression level:\n-  #50 = NameAndType        #55:#56        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #51 = NameAndType        #55:#57        // append:(I)Ljava/lang/StringBuilder;\n-  #52 = NameAndType        #58:#59        // toString:()Ljava/lang/String;\n-  #53 = NameAndType        #24:#60        // \"<init>\":(Ljava/lang/String;)V\n-  #54 = Utf8               java/lang/Object\n-  #55 = Utf8               append\n-  #56 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #57 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #58 = Utf8               toString\n-  #59 = Utf8               ()Ljava/lang/String;\n-  #60 = Utf8               (Ljava/lang/String;)V\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #2 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               MAX_LEVEL\n+   #6 = Utf8               I\n+   #7 = Utf8               ConstantValue\n+   #8 = Integer            9\n+   #9 = Utf8               MIN_LEVEL\n+  #10 = Integer            0\n+  #11 = Utf8               zlibHeader\n+  #12 = Utf8               Z\n+  #13 = Utf8               compressionLevel\n+  #14 = Utf8               <init>\n+  #15 = Utf8               ()V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/lang/Object.\"<init>\":()V\n+  #18 = NameAndType        #14:#15        // \"<init>\":()V\n+  #19 = Fieldref           #1.#20         // org/apache/commons/compress/compressors/deflate/DeflateParameters.zlibHeader:Z\n+  #20 = NameAndType        #11:#12        // zlibHeader:Z\n+  #21 = Fieldref           #1.#22         // org/apache/commons/compress/compressors/deflate/DeflateParameters.compressionLevel:I\n+  #22 = NameAndType        #13:#6         // compressionLevel:I\n+  #23 = Utf8               LineNumberTable\n+  #24 = Utf8               LocalVariableTable\n+  #25 = Utf8               this\n+  #26 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n+  #27 = Utf8               withZlibHeader\n+  #28 = Utf8               ()Z\n+  #29 = Utf8               setWithZlibHeader\n+  #30 = Utf8               (Z)V\n+  #31 = Utf8               getCompressionLevel\n+  #32 = Utf8               ()I\n+  #33 = Utf8               setCompressionLevel\n+  #34 = Utf8               (I)V\n+  #35 = Class              #36            // java/lang/IllegalArgumentException\n+  #36 = Utf8               java/lang/IllegalArgumentException\n+  #37 = Class              #38            // java/lang/StringBuilder\n+  #38 = Utf8               java/lang/StringBuilder\n+  #39 = String             #40            // Invalid Deflate compression level:\n+  #40 = Utf8               Invalid Deflate compression level:\n+  #41 = Methodref          #37.#42        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #42 = NameAndType        #14:#43        // \"<init>\":(Ljava/lang/String;)V\n+  #43 = Utf8               (Ljava/lang/String;)V\n+  #44 = Methodref          #37.#45        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #45 = NameAndType        #46:#47        // append:(I)Ljava/lang/StringBuilder;\n+  #46 = Utf8               append\n+  #47 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #48 = Methodref          #37.#49        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #49 = NameAndType        #50:#51        // toString:()Ljava/lang/String;\n+  #50 = Utf8               toString\n+  #51 = Utf8               ()Ljava/lang/String;\n+  #52 = Methodref          #35.#42        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #53 = Utf8               StackMapTable\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               DeflateParameters.java\n {\n   static final int MAX_LEVEL = 9;\n     descriptor: I\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n     ConstantValue: int 9\n \n   static final int MIN_LEVEL = 0;\n@@ -89,52 +84,53 @@\n \n   public org.apache.commons.compress.compressors.deflate.DeflateParameters();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n-         6: putfield      #2                  // Field zlibHeader:Z\n+         6: putfield      #19                 // Field zlibHeader:Z\n          9: aload_0\n         10: iconst_m1\n-        11: putfield      #4                  // Field compressionLevel:I\n+        11: putfield      #21                 // Field compressionLevel:I\n         14: return\n       LineNumberTable:\n         line 28: 0\n         line 33: 4\n         line 34: 9\n+        line 28: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n \n   public boolean withZlibHeader();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field zlibHeader:Z\n+         1: getfield      #19                 // Field zlibHeader:Z\n          4: ireturn\n       LineNumberTable:\n         line 42: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n \n   public void setWithZlibHeader(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #2                  // Field zlibHeader:Z\n+         2: putfield      #19                 // Field zlibHeader:Z\n          5: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n@@ -142,55 +138,54 @@\n \n   public int getCompressionLevel();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field compressionLevel:I\n+         1: getfield      #21                 // Field compressionLevel:I\n          4: ireturn\n       LineNumberTable:\n         line 63: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n \n   public void setCompressionLevel(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=4, locals=2, args_size=2\n+      stack=5, locals=2, args_size=2\n          0: iload_1\n          1: iflt          10\n          4: iload_1\n          5: bipush        9\n-         7: if_icmple     37\n-        10: new           #6                  // class java/lang/IllegalArgumentException\n+         7: if_icmple     34\n+        10: new           #35                 // class java/lang/IllegalArgumentException\n         13: dup\n-        14: new           #7                  // class java/lang/StringBuilder\n+        14: new           #37                 // class java/lang/StringBuilder\n         17: dup\n-        18: invokespecial #8                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        21: ldc           #9                  // String Invalid Deflate compression level:\n-        23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        26: iload_1\n-        27: invokevirtual #11                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        30: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokespecial #13                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        36: athrow\n-        37: aload_0\n-        38: iload_1\n-        39: putfield      #4                  // Field compressionLevel:I\n-        42: return\n+        18: ldc           #39                 // String Invalid Deflate compression level:\n+        20: invokespecial #41                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        23: iload_1\n+        24: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        27: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        30: invokespecial #52                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        33: athrow\n+        34: aload_0\n+        35: iload_1\n+        36: putfield      #21                 // Field compressionLevel:I\n+        39: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 10\n-        line 79: 37\n-        line 80: 42\n+        line 79: 34\n+        line 80: 39\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      43     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n-            0      43     1 compressionLevel   I\n+            0      40     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n+            0      40     1 compressionLevel   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 10 /* same */\n-        frame_type = 26 /* same */\n+        frame_type = 23 /* same */\n }\n SourceFile: \"DeflateParameters.java\"\n"}]}
