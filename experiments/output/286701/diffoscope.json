{"diffoscope-json-version": 1, "source1": "first/ZipShort.class", "source2": "second/ZipShort.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,110 +1,114 @@\n-  SHA-256 checksum bdb3c2564a57f2103ea42089f1b709dc144e56ef984b91ea3f75ad901b275c97\n+  SHA-256 checksum e54b341ad110017e97bc6f07ef69889dce000b1404452b9cf8611bb909996e1d\n   Compiled from \"ZipShort.java\"\n public final class org.apache.commons.compress.archivers.zip.ZipShort implements java.lang.Cloneable,java.io.Serializable\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // org/apache/commons/compress/archivers/zip/ZipShort\n-  super_class: #22                        // java/lang/Object\n-  interfaces: 2, fields: 3, methods: 14, attributes: 1\n+  super_class: #17                        // java/lang/Object\n+  interfaces: 2, fields: 3, methods: 14, attributes: 3\n Constant pool:\n-   #1 = Methodref          #22.#62        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #8.#63         // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n-   #3 = Methodref          #8.#64         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n-   #4 = Methodref          #8.#65         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #5 = Methodref          #66.#67        // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n-   #6 = Methodref          #8.#68         // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n-   #7 = Methodref          #66.#69        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n-   #8 = Class              #70            // org/apache/commons/compress/archivers/zip/ZipShort\n-   #9 = Methodref          #8.#71         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-  #10 = Methodref          #22.#72        // java/lang/Object.clone:()Ljava/lang/Object;\n-  #11 = Class              #73            // java/lang/CloneNotSupportedException\n-  #12 = Class              #74            // java/lang/RuntimeException\n-  #13 = Methodref          #12.#75        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-  #14 = Class              #76            // java/lang/StringBuilder\n-  #15 = Methodref          #14.#62        // java/lang/StringBuilder.\"<init>\":()V\n-  #16 = String             #77            // ZipShort value:\n-  #17 = Methodref          #14.#78        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #18 = Methodref          #14.#79        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #19 = Methodref          #14.#80        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #20 = Methodref          #8.#81         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-  #21 = Fieldref           #8.#82         // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #22 = Class              #83            // java/lang/Object\n-  #23 = Class              #84            // java/lang/Cloneable\n-  #24 = Class              #85            // java/io/Serializable\n-  #25 = Utf8               ZERO\n-  #26 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #27 = Utf8               serialVersionUID\n-  #28 = Utf8               J\n-  #29 = Utf8               ConstantValue\n-  #30 = Long               1l\n-  #32 = Utf8               value\n-  #33 = Utf8               I\n-  #34 = Utf8               <init>\n-  #35 = Utf8               (I)V\n-  #36 = Utf8               Code\n-  #37 = Utf8               LineNumberTable\n-  #38 = Utf8               ([B)V\n-  #39 = Utf8               ([BI)V\n-  #40 = Utf8               getBytes\n-  #41 = Utf8               ()[B\n-  #42 = Utf8               getValue\n-  #43 = Utf8               ()I\n-  #44 = Utf8               (I)[B\n-  #45 = Utf8               putShort\n-  #46 = Utf8               (I[BI)V\n-  #47 = Utf8               ([BI)I\n-  #48 = Utf8               ([B)I\n-  #49 = Utf8               equals\n-  #50 = Utf8               (Ljava/lang/Object;)Z\n-  #51 = Utf8               StackMapTable\n-  #52 = Utf8               hashCode\n-  #53 = Utf8               clone\n-  #54 = Utf8               ()Ljava/lang/Object;\n-  #55 = Class              #73            // java/lang/CloneNotSupportedException\n-  #56 = Utf8               toString\n-  #57 = Utf8               ()Ljava/lang/String;\n-  #58 = Utf8               <clinit>\n-  #59 = Utf8               ()V\n-  #60 = Utf8               SourceFile\n-  #61 = Utf8               ZipShort.java\n-  #62 = NameAndType        #34:#59        // \"<init>\":()V\n-  #63 = NameAndType        #32:#33        // value:I\n-  #64 = NameAndType        #34:#39        // \"<init>\":([BI)V\n-  #65 = NameAndType        #42:#47        // getValue:([BI)I\n-  #66 = Class              #86            // org/apache/commons/compress/utils/ByteUtils\n-  #67 = NameAndType        #87:#88        // toLittleEndian:([BJII)V\n-  #68 = NameAndType        #45:#46        // putShort:(I[BI)V\n-  #69 = NameAndType        #89:#90        // fromLittleEndian:([BII)J\n-  #70 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #71 = NameAndType        #42:#43        // getValue:()I\n-  #72 = NameAndType        #53:#54        // clone:()Ljava/lang/Object;\n-  #73 = Utf8               java/lang/CloneNotSupportedException\n-  #74 = Utf8               java/lang/RuntimeException\n-  #75 = NameAndType        #34:#91        // \"<init>\":(Ljava/lang/Throwable;)V\n-  #76 = Utf8               java/lang/StringBuilder\n-  #77 = Utf8               ZipShort value:\n-  #78 = NameAndType        #92:#93        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #79 = NameAndType        #92:#94        // append:(I)Ljava/lang/StringBuilder;\n-  #80 = NameAndType        #56:#57        // toString:()Ljava/lang/String;\n-  #81 = NameAndType        #34:#35        // \"<init>\":(I)V\n-  #82 = NameAndType        #25:#26        // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #83 = Utf8               java/lang/Object\n-  #84 = Utf8               java/lang/Cloneable\n-  #85 = Utf8               java/io/Serializable\n-  #86 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #87 = Utf8               toLittleEndian\n-  #88 = Utf8               ([BJII)V\n-  #89 = Utf8               fromLittleEndian\n-  #90 = Utf8               ([BII)J\n-  #91 = Utf8               (Ljava/lang/Throwable;)V\n-  #92 = Utf8               append\n-  #93 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #94 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #1 = Methodref          #17.#56        // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #8.#57         // org/apache/commons/compress/archivers/zip/ZipShort.value:I\n+   #3 = Methodref          #8.#58         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":([BI)V\n+   #4 = Methodref          #8.#59         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #5 = Methodref          #60.#61        // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:([BJII)V\n+   #6 = Methodref          #8.#62         // org/apache/commons/compress/archivers/zip/ZipShort.putShort:(I[BI)V\n+   #7 = Methodref          #60.#63        // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([BII)J\n+   #8 = Class              #64            // org/apache/commons/compress/archivers/zip/ZipShort\n+   #9 = Methodref          #8.#65         // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+  #10 = Methodref          #17.#66        // java/lang/Object.clone:()Ljava/lang/Object;\n+  #11 = Class              #67            // java/lang/CloneNotSupportedException\n+  #12 = Class              #68            // java/lang/RuntimeException\n+  #13 = Methodref          #12.#69        // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #14 = InvokeDynamic      #0:#73         // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+  #15 = Methodref          #8.#74         // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+  #16 = Fieldref           #8.#75         // org/apache/commons/compress/archivers/zip/ZipShort.ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #17 = Class              #76            // java/lang/Object\n+  #18 = Class              #77            // java/lang/Cloneable\n+  #19 = Class              #78            // java/io/Serializable\n+  #20 = Utf8               ZERO\n+  #21 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #22 = Utf8               serialVersionUID\n+  #23 = Utf8               J\n+  #24 = Utf8               ConstantValue\n+  #25 = Long               1l\n+  #27 = Utf8               value\n+  #28 = Utf8               I\n+  #29 = Utf8               <init>\n+  #30 = Utf8               (I)V\n+  #31 = Utf8               Code\n+  #32 = Utf8               LineNumberTable\n+  #33 = Utf8               ([B)V\n+  #34 = Utf8               ([BI)V\n+  #35 = Utf8               getBytes\n+  #36 = Utf8               ()[B\n+  #37 = Utf8               getValue\n+  #38 = Utf8               ()I\n+  #39 = Utf8               (I)[B\n+  #40 = Utf8               putShort\n+  #41 = Utf8               (I[BI)V\n+  #42 = Utf8               ([BI)I\n+  #43 = Utf8               ([B)I\n+  #44 = Utf8               equals\n+  #45 = Utf8               (Ljava/lang/Object;)Z\n+  #46 = Utf8               StackMapTable\n+  #47 = Utf8               hashCode\n+  #48 = Utf8               clone\n+  #49 = Utf8               ()Ljava/lang/Object;\n+  #50 = Utf8               toString\n+  #51 = Utf8               ()Ljava/lang/String;\n+  #52 = Utf8               <clinit>\n+  #53 = Utf8               ()V\n+  #54 = Utf8               SourceFile\n+  #55 = Utf8               ZipShort.java\n+  #56 = NameAndType        #29:#53        // \"<init>\":()V\n+  #57 = NameAndType        #27:#28        // value:I\n+  #58 = NameAndType        #29:#34        // \"<init>\":([BI)V\n+  #59 = NameAndType        #37:#42        // getValue:([BI)I\n+  #60 = Class              #79            // org/apache/commons/compress/utils/ByteUtils\n+  #61 = NameAndType        #80:#81        // toLittleEndian:([BJII)V\n+  #62 = NameAndType        #40:#41        // putShort:(I[BI)V\n+  #63 = NameAndType        #82:#83        // fromLittleEndian:([BII)J\n+  #64 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #65 = NameAndType        #37:#38        // getValue:()I\n+  #66 = NameAndType        #48:#49        // clone:()Ljava/lang/Object;\n+  #67 = Utf8               java/lang/CloneNotSupportedException\n+  #68 = Utf8               java/lang/RuntimeException\n+  #69 = NameAndType        #29:#84        // \"<init>\":(Ljava/lang/Throwable;)V\n+  #70 = Utf8               BootstrapMethods\n+  #71 = MethodHandle       6:#85          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #72 = String             #86            // ZipShort value: \\u0001\n+  #73 = NameAndType        #87:#88        // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #74 = NameAndType        #29:#30        // \"<init>\":(I)V\n+  #75 = NameAndType        #20:#21        // ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #76 = Utf8               java/lang/Object\n+  #77 = Utf8               java/lang/Cloneable\n+  #78 = Utf8               java/io/Serializable\n+  #79 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #80 = Utf8               toLittleEndian\n+  #81 = Utf8               ([BJII)V\n+  #82 = Utf8               fromLittleEndian\n+  #83 = Utf8               ([BII)J\n+  #84 = Utf8               (Ljava/lang/Throwable;)V\n+  #85 = Methodref          #89.#90        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #86 = Utf8               ZipShort value: \\u0001\n+  #87 = Utf8               makeConcatWithConstants\n+  #88 = Utf8               (I)Ljava/lang/String;\n+  #89 = Class              #91            // java/lang/invoke/StringConcatFactory\n+  #90 = NameAndType        #87:#95        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #91 = Utf8               java/lang/invoke/StringConcatFactory\n+  #92 = Class              #97            // java/lang/invoke/MethodHandles$Lookup\n+  #93 = Utf8               Lookup\n+  #94 = Utf8               InnerClasses\n+  #95 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #96 = Class              #98            // java/lang/invoke/MethodHandles\n+  #97 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #98 = Utf8               java/lang/invoke/MethodHandles\n {\n   public static final org.apache.commons.compress.archivers.zip.ZipShort ZERO;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n   private static final long serialVersionUID = 1l;\n     descriptor: J\n@@ -326,36 +330,36 @@\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #14                 // class java/lang/StringBuilder\n-         3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #16                 // String ZipShort value:\n-         9: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: getfield      #2                  // Field value:I\n-        16: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        22: areturn\n+      stack=1, locals=1, args_size=1\n+         0: aload_0\n+         1: getfield      #2                  // Field value:I\n+         4: invokedynamic #14,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n+         9: areturn\n       LineNumberTable:\n         line 159: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=3, locals=0, args_size=0\n          0: new           #8                  // class org/apache/commons/compress/archivers/zip/ZipShort\n          3: dup\n          4: iconst_0\n-         5: invokespecial #20                 // Method \"<init>\":(I)V\n-         8: putstatic     #21                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         5: invokespecial #15                 // Method \"<init>\":(I)V\n+         8: putstatic     #16                 // Field ZERO:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         11: return\n       LineNumberTable:\n         line 34: 0\n }\n SourceFile: \"ZipShort.java\"\n+InnerClasses:\n+  public static final #93= #92 of #96;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #71 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #72 ZipShort value: \\u0001\n"}]}
