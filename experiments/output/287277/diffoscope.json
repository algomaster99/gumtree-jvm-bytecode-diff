{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,344 +1,339 @@\n-  SHA-256 checksum 72381bbec7119bc1e23edf31d1c6de44aac67b22533634834c0e37d38d9ef0bb\n+  SHA-256 checksum 9dab6ea6950b6378a17f6b23061558c310f9ebd8fef345d4a6a0c437a2d7e84f\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n-  major version: 52\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #40                         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  super_class: #95                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  super_class: #89                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 25, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Methodref          #40.#186      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #2 = Methodref          #95.#187      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #3 = Fieldref           #40.#188      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #4 = InvokeDynamic      #0:#193       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #5 = Fieldref           #40.#194      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #6 = Class              #195          // org/apache/commons/compress/compressors/lz4/XXHash32\n-    #7 = Methodref          #6.#187       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-    #8 = Fieldref           #40.#196      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-    #9 = Fieldref           #40.#197      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #10 = Class              #198          // org/apache/commons/compress/utils/CountingInputStream\n-   #11 = Methodref          #10.#199      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Fieldref           #40.#200      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #13 = Fieldref           #40.#201      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #14 = Methodref          #40.#202      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #15 = Methodref          #40.#203      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #16 = Fieldref           #40.#204      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #17 = Methodref          #205.#206     // java/io/InputStream.close:()V\n-   #18 = Methodref          #10.#206      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #19 = Fieldref           #40.#207      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #20 = Methodref          #40.#208      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #21 = Methodref          #40.#209      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #22 = Fieldref           #40.#210      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #23 = Methodref          #40.#211      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #24 = Fieldref           #40.#212      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #25 = Methodref          #6.#213       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #26 = Methodref          #10.#214      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #27 = Methodref          #40.#215      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #28 = Methodref          #40.#216      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #29 = String             #217          // Not a LZ4 frame stream\n-   #30 = String             #218          // LZ4 frame stream followed by garbage\n-   #31 = Methodref          #219.#220     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #32 = Methodref          #40.#221      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #33 = Class              #222          // java/io/IOException\n-   #34 = Methodref          #33.#223      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #35 = Methodref          #40.#224      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #36 = Methodref          #40.#225      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #37 = Methodref          #40.#226      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-   #38 = String             #227          // Premature end of stream while reading frame flags\n-   #39 = Methodref          #6.#228       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #40 = Class              #229          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-   #41 = Class              #230          // java/lang/StringBuilder\n-   #42 = Methodref          #41.#187      // java/lang/StringBuilder.\"<init>\":()V\n-   #43 = String             #231          // Unsupported version\n-   #44 = Methodref          #41.#232      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #45 = Methodref          #41.#233      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #46 = Methodref          #41.#234      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #47 = Fieldref           #40.#235      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #48 = Class              #236          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #49 = Integer            65536\n-   #50 = Fieldref           #40.#237      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #51 = Fieldref           #40.#238      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #52 = String             #239          // Premature end of stream while reading frame BD byte\n-   #53 = String             #240          // Premature end of stream while reading content size\n-   #54 = String             #241          // Premature end of stream while reading frame header checksum\n-   #55 = Methodref          #6.#242       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-   #56 = Long               255l\n-   #58 = Methodref          #6.#243       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #59 = String             #244          // Frame header checksum mismatch\n-   #60 = Methodref          #40.#245      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #61 = Methodref          #246.#247     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #62 = Long               -2147483648l\n-   #64 = Long               2147483647l\n-   #66 = String             #248          // Found illegal block with negative size\n-   #67 = Methodref          #40.#249      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #68 = Class              #250          // org/apache/commons/compress/utils/BoundedInputStream\n-   #69 = Methodref          #68.#251      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #70 = Class              #252          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #71 = Methodref          #70.#253      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #72 = Fieldref           #40.#254      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #73 = Methodref          #48.#199      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #74 = Methodref          #48.#255      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #75 = String             #256          // block\n-   #76 = Methodref          #40.#257      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #77 = String             #258          // content\n-   #78 = String             #259          // Premature end of stream while reading\n-   #79 = String             #260          //  checksum\n-   #80 = Methodref          #246.#261     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #81 = String             #262          //  checksum mismatch.\n-   #82 = Methodref          #10.#263      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #83 = Methodref          #205.#203     // java/io/InputStream.read:([BII)I\n-   #84 = Methodref          #48.#214      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #85 = Methodref          #40.#264      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #86 = Fieldref           #40.#265      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-   #87 = Methodref          #40.#266      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #88 = String             #267          // Found illegal skippable frame with negative size\n-   #89 = Methodref          #219.#268     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #90 = String             #269          // Premature end of stream while skipping frame\n-   #91 = Methodref          #270.#271     // java/lang/Math.min:(II)I\n-   #92 = Methodref          #272.#273     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #93 = Fieldref           #40.#274      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-   #94 = Methodref          #275.#276     // java/util/Arrays.equals:([B[B)Z\n-   #95 = Class              #277          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #96 = Class              #278          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #97 = Utf8               LZ4_SIGNATURE\n-   #98 = Utf8               [B\n-   #99 = Utf8               SKIPPABLE_FRAME_TRAILER\n-  #100 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n-  #101 = Utf8               B\n-  #102 = Utf8               ConstantValue\n-  #103 = Integer            80\n-  #104 = Utf8               VERSION_MASK\n-  #105 = Utf8               I\n-  #106 = Integer            192\n-  #107 = Utf8               SUPPORTED_VERSION\n-  #108 = Integer            64\n-  #109 = Utf8               BLOCK_INDEPENDENCE_MASK\n-  #110 = Integer            32\n-  #111 = Utf8               BLOCK_CHECKSUM_MASK\n-  #112 = Integer            16\n-  #113 = Utf8               CONTENT_SIZE_MASK\n-  #114 = Integer            8\n-  #115 = Utf8               CONTENT_CHECKSUM_MASK\n-  #116 = Integer            4\n-  #117 = Utf8               BLOCK_MAX_SIZE_MASK\n-  #118 = Integer            112\n-  #119 = Utf8               UNCOMPRESSED_FLAG_MASK\n-  #120 = Integer            -2147483648\n-  #121 = Utf8               oneByte\n-  #122 = Utf8               supplier\n-  #123 = Class              #279          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #124 = Utf8               ByteSupplier\n-  #125 = Utf8               InnerClasses\n-  #126 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #127 = Utf8               inputStream\n-  #128 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #129 = Utf8               decompressConcatenated\n-  #130 = Utf8               Z\n-  #131 = Utf8               expectBlockChecksum\n-  #132 = Utf8               expectBlockDependency\n-  #133 = Utf8               expectContentSize\n-  #134 = Utf8               expectContentChecksum\n-  #135 = Utf8               currentBlock\n-  #136 = Utf8               Ljava/io/InputStream;\n-  #137 = Utf8               endReached\n-  #138 = Utf8               inUncompressed\n-  #139 = Utf8               contentHash\n-  #140 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #141 = Utf8               blockHash\n-  #142 = Utf8               blockDependencyBuffer\n-  #143 = Utf8               <init>\n-  #144 = Utf8               (Ljava/io/InputStream;)V\n-  #145 = Utf8               Code\n-  #146 = Utf8               LineNumberTable\n-  #147 = Utf8               Exceptions\n-  #148 = Utf8               (Ljava/io/InputStream;Z)V\n-  #149 = Utf8               read\n-  #150 = Utf8               ()I\n-  #151 = Utf8               StackMapTable\n-  #152 = Utf8               close\n-  #153 = Utf8               ()V\n-  #154 = Class              #280          // java/lang/Throwable\n-  #155 = Utf8               ([BII)I\n-  #156 = Utf8               getCompressedCount\n-  #157 = Utf8               ()J\n-  #158 = Utf8               init\n-  #159 = Utf8               (Z)V\n-  #160 = Utf8               readSignature\n-  #161 = Utf8               (Z)Z\n-  #162 = Class              #281          // java/lang/String\n-  #163 = Class              #98           // \"[B\"\n-  #164 = Utf8               readFrameDescriptor\n-  #165 = Class              #229          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #166 = Utf8               nextBlock\n-  #167 = Class              #282          // java/io/InputStream\n-  #168 = Class              #236          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #169 = Utf8               maybeFinishCurrentBlock\n-  #170 = Utf8               verifyContentChecksum\n-  #171 = Utf8               verifyChecksum\n-  #172 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #173 = Utf8               readOneByte\n-  #174 = Utf8               readOnce\n-  #175 = Utf8               isSkippableFrameSignature\n-  #176 = Utf8               ([B)Z\n-  #177 = Utf8               skipSkippableFrame\n-  #178 = Utf8               ([B)I\n-  #179 = Utf8               appendToBlockDependencyBuffer\n-  #180 = Utf8               ([BII)V\n-  #181 = Utf8               matches\n-  #182 = Utf8               ([BI)Z\n-  #183 = Utf8               <clinit>\n-  #184 = Utf8               SourceFile\n-  #185 = Utf8               FramedLZ4CompressorInputStream.java\n-  #186 = NameAndType        #143:#148     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #187 = NameAndType        #143:#153     // \"<init>\":()V\n-  #188 = NameAndType        #121:#98      // oneByte:[B\n-  #189 = Utf8               BootstrapMethods\n-  #190 = MethodHandle       6:#283        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #191 = MethodType         #150          //  ()I\n-  #192 = MethodHandle       7:#37         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-  #193 = NameAndType        #284:#285     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #194 = NameAndType        #122:#126     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #195 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #196 = NameAndType        #139:#140     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #197 = NameAndType        #141:#140     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #198 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #199 = NameAndType        #143:#144     // \"<init>\":(Ljava/io/InputStream;)V\n-  #200 = NameAndType        #127:#128     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #201 = NameAndType        #129:#130     // decompressConcatenated:Z\n-  #202 = NameAndType        #158:#159     // init:(Z)V\n-  #203 = NameAndType        #149:#155     // read:([BII)I\n-  #204 = NameAndType        #135:#136     // currentBlock:Ljava/io/InputStream;\n-  #205 = Class              #282          // java/io/InputStream\n-  #206 = NameAndType        #152:#153     // close:()V\n-  #207 = NameAndType        #137:#130     // endReached:Z\n-  #208 = NameAndType        #174:#155     // readOnce:([BII)I\n-  #209 = NameAndType        #166:#153     // nextBlock:()V\n-  #210 = NameAndType        #132:#130     // expectBlockDependency:Z\n-  #211 = NameAndType        #179:#180     // appendToBlockDependencyBuffer:([BII)V\n-  #212 = NameAndType        #134:#130     // expectContentChecksum:Z\n-  #213 = NameAndType        #286:#180     // update:([BII)V\n-  #214 = NameAndType        #287:#157     // getBytesRead:()J\n-  #215 = NameAndType        #160:#161     // readSignature:(Z)Z\n-  #216 = NameAndType        #164:#153     // readFrameDescriptor:()V\n-  #217 = Utf8               Not a LZ4 frame stream\n-  #218 = Utf8               LZ4 frame stream followed by garbage\n-  #219 = Class              #288          // org/apache/commons/compress/utils/IOUtils\n-  #220 = NameAndType        #289:#290     // readFully:(Ljava/io/InputStream;[B)I\n-  #221 = NameAndType        #291:#292     // count:(I)V\n-  #222 = Utf8               java/io/IOException\n-  #223 = NameAndType        #143:#293     // \"<init>\":(Ljava/lang/String;)V\n-  #224 = NameAndType        #177:#178     // skipSkippableFrame:([B)I\n-  #225 = NameAndType        #181:#182     // matches:([BI)Z\n-  #226 = NameAndType        #173:#150     // readOneByte:()I\n-  #227 = Utf8               Premature end of stream while reading frame flags\n-  #228 = NameAndType        #286:#292     // update:(I)V\n-  #229 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #230 = Utf8               java/lang/StringBuilder\n-  #231 = Utf8               Unsupported version\n-  #232 = NameAndType        #294:#295     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #233 = NameAndType        #294:#296     // append:(I)Ljava/lang/StringBuilder;\n-  #234 = NameAndType        #297:#298     // toString:()Ljava/lang/String;\n-  #235 = NameAndType        #142:#98      // blockDependencyBuffer:[B\n-  #236 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #237 = NameAndType        #131:#130     // expectBlockChecksum:Z\n-  #238 = NameAndType        #133:#130     // expectContentSize:Z\n-  #239 = Utf8               Premature end of stream while reading frame BD byte\n-  #240 = Utf8               Premature end of stream while reading content size\n-  #241 = Utf8               Premature end of stream while reading frame header checksum\n-  #242 = NameAndType        #299:#157     // getValue:()J\n-  #243 = NameAndType        #300:#153     // reset:()V\n-  #244 = Utf8               Frame header checksum mismatch\n-  #245 = NameAndType        #169:#153     // maybeFinishCurrentBlock:()V\n-  #246 = Class              #301          // org/apache/commons/compress/utils/ByteUtils\n-  #247 = NameAndType        #302:#303     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #248 = Utf8               Found illegal block with negative size\n-  #249 = NameAndType        #170:#153     // verifyContentChecksum:()V\n-  #250 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #251 = NameAndType        #143:#304     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #252 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #253 = NameAndType        #143:#305     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #254 = NameAndType        #138:#130     // inUncompressed:Z\n-  #255 = NameAndType        #306:#307     // prefill:([B)V\n-  #256 = Utf8               block\n-  #257 = NameAndType        #171:#172     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #258 = Utf8               content\n-  #259 = Utf8               Premature end of stream while reading\n-  #260 = Utf8                checksum\n-  #261 = NameAndType        #302:#308     // fromLittleEndian:([B)J\n-  #262 = Utf8                checksum mismatch.\n-  #263 = NameAndType        #149:#150     // read:()I\n-  #264 = NameAndType        #291:#309     // count:(J)V\n-  #265 = NameAndType        #99:#98       // SKIPPABLE_FRAME_TRAILER:[B\n-  #266 = NameAndType        #175:#176     // isSkippableFrameSignature:([B)Z\n-  #267 = Utf8               Found illegal skippable frame with negative size\n-  #268 = NameAndType        #310:#311     // skip:(Ljava/io/InputStream;J)J\n-  #269 = Utf8               Premature end of stream while skipping frame\n-  #270 = Class              #312          // java/lang/Math\n-  #271 = NameAndType        #313:#314     // min:(II)I\n-  #272 = Class              #315          // java/lang/System\n-  #273 = NameAndType        #316:#317     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #274 = NameAndType        #97:#98       // LZ4_SIGNATURE:[B\n-  #275 = Class              #318          // java/util/Arrays\n-  #276 = NameAndType        #319:#320     // equals:([B[B)Z\n-  #277 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #278 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #279 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #280 = Utf8               java/lang/Throwable\n-  #281 = Utf8               java/lang/String\n-  #282 = Utf8               java/io/InputStream\n-  #283 = Methodref          #321.#322     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #284 = Utf8               getAsByte\n-  #285 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #286 = Utf8               update\n-  #287 = Utf8               getBytesRead\n-  #288 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #289 = Utf8               readFully\n-  #290 = Utf8               (Ljava/io/InputStream;[B)I\n-  #291 = Utf8               count\n-  #292 = Utf8               (I)V\n-  #293 = Utf8               (Ljava/lang/String;)V\n-  #294 = Utf8               append\n-  #295 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #296 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #297 = Utf8               toString\n-  #298 = Utf8               ()Ljava/lang/String;\n-  #299 = Utf8               getValue\n-  #300 = Utf8               reset\n-  #301 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #302 = Utf8               fromLittleEndian\n-  #303 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #304 = Utf8               (Ljava/io/InputStream;J)V\n-  #305 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #306 = Utf8               prefill\n-  #307 = Utf8               ([B)V\n-  #308 = Utf8               ([B)J\n-  #309 = Utf8               (J)V\n-  #310 = Utf8               skip\n-  #311 = Utf8               (Ljava/io/InputStream;J)J\n-  #312 = Utf8               java/lang/Math\n-  #313 = Utf8               min\n-  #314 = Utf8               (II)I\n-  #315 = Utf8               java/lang/System\n-  #316 = Utf8               arraycopy\n-  #317 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #318 = Utf8               java/util/Arrays\n-  #319 = Utf8               equals\n-  #320 = Utf8               ([B[B)Z\n-  #321 = Class              #323          // java/lang/invoke/LambdaMetafactory\n-  #322 = NameAndType        #324:#327     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #323 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #324 = Utf8               metafactory\n-  #325 = Class              #329          // java/lang/invoke/MethodHandles$Lookup\n-  #326 = Utf8               Lookup\n-  #327 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #328 = Class              #330          // java/lang/invoke/MethodHandles\n-  #329 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #330 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #40.#178      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #2 = Methodref          #89.#179      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #3 = Fieldref           #40.#180      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+    #4 = InvokeDynamic      #0:#185       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+    #5 = Fieldref           #40.#186      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+    #6 = Class              #187          // org/apache/commons/compress/compressors/lz4/XXHash32\n+    #7 = Methodref          #6.#179       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+    #8 = Fieldref           #40.#188      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+    #9 = Fieldref           #40.#189      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #10 = Class              #190          // org/apache/commons/compress/utils/CountingInputStream\n+   #11 = Methodref          #10.#191      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #12 = Fieldref           #40.#192      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #13 = Fieldref           #40.#193      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #14 = Methodref          #40.#194      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #15 = Methodref          #40.#195      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #16 = Fieldref           #40.#196      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #17 = Methodref          #160.#197     // java/io/InputStream.close:()V\n+   #18 = Methodref          #10.#197      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #19 = Fieldref           #40.#198      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #20 = Methodref          #40.#199      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #21 = Methodref          #40.#200      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #22 = Fieldref           #40.#201      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #23 = Methodref          #40.#202      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #24 = Fieldref           #40.#203      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #25 = Methodref          #6.#204       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #26 = Methodref          #10.#205      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #27 = Methodref          #40.#206      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #28 = Methodref          #40.#207      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+   #29 = String             #208          // Not a LZ4 frame stream\n+   #30 = String             #209          // LZ4 frame stream followed by garbage\n+   #31 = Methodref          #210.#211     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+   #32 = Methodref          #40.#212      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+   #33 = Class              #213          // java/io/IOException\n+   #34 = Methodref          #33.#214      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #35 = Methodref          #40.#215      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+   #36 = Methodref          #40.#216      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+   #37 = Methodref          #40.#217      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+   #38 = String             #218          // Premature end of stream while reading frame flags\n+   #39 = Methodref          #6.#219       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+   #40 = Class              #220          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+   #41 = InvokeDynamic      #1:#223       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #42 = Fieldref           #40.#224      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+   #43 = Class              #225          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+   #44 = Integer            65536\n+   #45 = Fieldref           #40.#226      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+   #46 = Fieldref           #40.#227      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+   #47 = String             #228          // Premature end of stream while reading frame BD byte\n+   #48 = String             #229          // Premature end of stream while reading content size\n+   #49 = String             #230          // Premature end of stream while reading frame header checksum\n+   #50 = Methodref          #6.#231       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+   #51 = Long               255l\n+   #53 = Methodref          #6.#232       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+   #54 = String             #233          // Frame header checksum mismatch\n+   #55 = Methodref          #40.#234      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+   #56 = Methodref          #235.#236     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+   #57 = Long               -2147483648l\n+   #59 = Long               2147483647l\n+   #61 = String             #237          // Found illegal block with negative size\n+   #62 = Methodref          #40.#238      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+   #63 = Class              #239          // org/apache/commons/compress/utils/BoundedInputStream\n+   #64 = Methodref          #63.#240      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+   #65 = Class              #241          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+   #66 = Methodref          #65.#242      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+   #67 = Fieldref           #40.#243      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+   #68 = Methodref          #43.#191      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #69 = Methodref          #43.#244      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+   #70 = String             #245          // block\n+   #71 = Methodref          #40.#246      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+   #72 = String             #247          // content\n+   #73 = InvokeDynamic      #2:#249       // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #74 = Methodref          #235.#250     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+   #75 = InvokeDynamic      #3:#249       // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+   #76 = Methodref          #10.#252      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+   #77 = Methodref          #160.#195     // java/io/InputStream.read:([BII)I\n+   #78 = Methodref          #43.#205      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+   #79 = Methodref          #40.#253      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+   #80 = Fieldref           #40.#254      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+   #81 = Methodref          #40.#255      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+   #82 = String             #256          // Found illegal skippable frame with negative size\n+   #83 = Methodref          #210.#257     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #84 = String             #258          // Premature end of stream while skipping frame\n+   #85 = Methodref          #259.#260     // java/lang/Math.min:(II)I\n+   #86 = Methodref          #261.#262     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #87 = Fieldref           #40.#263      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+   #88 = Methodref          #264.#265     // java/util/Arrays.equals:([B[B)Z\n+   #89 = Class              #266          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #90 = Class              #267          // org/apache/commons/compress/utils/InputStreamStatistics\n+   #91 = Utf8               LZ4_SIGNATURE\n+   #92 = Utf8               [B\n+   #93 = Utf8               SKIPPABLE_FRAME_TRAILER\n+   #94 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n+   #95 = Utf8               B\n+   #96 = Utf8               ConstantValue\n+   #97 = Integer            80\n+   #98 = Utf8               VERSION_MASK\n+   #99 = Utf8               I\n+  #100 = Integer            192\n+  #101 = Utf8               SUPPORTED_VERSION\n+  #102 = Integer            64\n+  #103 = Utf8               BLOCK_INDEPENDENCE_MASK\n+  #104 = Integer            32\n+  #105 = Utf8               BLOCK_CHECKSUM_MASK\n+  #106 = Integer            16\n+  #107 = Utf8               CONTENT_SIZE_MASK\n+  #108 = Integer            8\n+  #109 = Utf8               CONTENT_CHECKSUM_MASK\n+  #110 = Integer            4\n+  #111 = Utf8               BLOCK_MAX_SIZE_MASK\n+  #112 = Integer            112\n+  #113 = Utf8               UNCOMPRESSED_FLAG_MASK\n+  #114 = Integer            -2147483648\n+  #115 = Utf8               oneByte\n+  #116 = Utf8               supplier\n+  #117 = Class              #268          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #118 = Utf8               ByteSupplier\n+  #119 = Utf8               InnerClasses\n+  #120 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #121 = Utf8               inputStream\n+  #122 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #123 = Utf8               decompressConcatenated\n+  #124 = Utf8               Z\n+  #125 = Utf8               expectBlockChecksum\n+  #126 = Utf8               expectBlockDependency\n+  #127 = Utf8               expectContentSize\n+  #128 = Utf8               expectContentChecksum\n+  #129 = Utf8               currentBlock\n+  #130 = Utf8               Ljava/io/InputStream;\n+  #131 = Utf8               endReached\n+  #132 = Utf8               inUncompressed\n+  #133 = Utf8               contentHash\n+  #134 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #135 = Utf8               blockHash\n+  #136 = Utf8               blockDependencyBuffer\n+  #137 = Utf8               <init>\n+  #138 = Utf8               (Ljava/io/InputStream;)V\n+  #139 = Utf8               Code\n+  #140 = Utf8               LineNumberTable\n+  #141 = Utf8               Exceptions\n+  #142 = Utf8               (Ljava/io/InputStream;Z)V\n+  #143 = Utf8               read\n+  #144 = Utf8               ()I\n+  #145 = Utf8               StackMapTable\n+  #146 = Utf8               close\n+  #147 = Utf8               ()V\n+  #148 = Class              #269          // java/lang/Throwable\n+  #149 = Utf8               ([BII)I\n+  #150 = Utf8               getCompressedCount\n+  #151 = Utf8               ()J\n+  #152 = Utf8               init\n+  #153 = Utf8               (Z)V\n+  #154 = Utf8               readSignature\n+  #155 = Utf8               (Z)Z\n+  #156 = Class              #270          // java/lang/String\n+  #157 = Class              #92           // \"[B\"\n+  #158 = Utf8               readFrameDescriptor\n+  #159 = Utf8               nextBlock\n+  #160 = Class              #271          // java/io/InputStream\n+  #161 = Utf8               maybeFinishCurrentBlock\n+  #162 = Utf8               verifyContentChecksum\n+  #163 = Utf8               verifyChecksum\n+  #164 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #165 = Utf8               readOneByte\n+  #166 = Utf8               readOnce\n+  #167 = Utf8               isSkippableFrameSignature\n+  #168 = Utf8               ([B)Z\n+  #169 = Utf8               skipSkippableFrame\n+  #170 = Utf8               ([B)I\n+  #171 = Utf8               appendToBlockDependencyBuffer\n+  #172 = Utf8               ([BII)V\n+  #173 = Utf8               matches\n+  #174 = Utf8               ([BI)Z\n+  #175 = Utf8               <clinit>\n+  #176 = Utf8               SourceFile\n+  #177 = Utf8               FramedLZ4CompressorInputStream.java\n+  #178 = NameAndType        #137:#142     // \"<init>\":(Ljava/io/InputStream;Z)V\n+  #179 = NameAndType        #137:#147     // \"<init>\":()V\n+  #180 = NameAndType        #115:#92      // oneByte:[B\n+  #181 = Utf8               BootstrapMethods\n+  #182 = MethodHandle       6:#272        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #183 = MethodType         #144          //  ()I\n+  #184 = MethodHandle       7:#37         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #185 = NameAndType        #273:#274     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #186 = NameAndType        #116:#120     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #187 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+  #188 = NameAndType        #133:#134     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #189 = NameAndType        #135:#134     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+  #190 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #191 = NameAndType        #137:#138     // \"<init>\":(Ljava/io/InputStream;)V\n+  #192 = NameAndType        #121:#122     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #193 = NameAndType        #123:#124     // decompressConcatenated:Z\n+  #194 = NameAndType        #152:#153     // init:(Z)V\n+  #195 = NameAndType        #143:#149     // read:([BII)I\n+  #196 = NameAndType        #129:#130     // currentBlock:Ljava/io/InputStream;\n+  #197 = NameAndType        #146:#147     // close:()V\n+  #198 = NameAndType        #131:#124     // endReached:Z\n+  #199 = NameAndType        #166:#149     // readOnce:([BII)I\n+  #200 = NameAndType        #159:#147     // nextBlock:()V\n+  #201 = NameAndType        #126:#124     // expectBlockDependency:Z\n+  #202 = NameAndType        #171:#172     // appendToBlockDependencyBuffer:([BII)V\n+  #203 = NameAndType        #128:#124     // expectContentChecksum:Z\n+  #204 = NameAndType        #275:#172     // update:([BII)V\n+  #205 = NameAndType        #276:#151     // getBytesRead:()J\n+  #206 = NameAndType        #154:#155     // readSignature:(Z)Z\n+  #207 = NameAndType        #158:#147     // readFrameDescriptor:()V\n+  #208 = Utf8               Not a LZ4 frame stream\n+  #209 = Utf8               LZ4 frame stream followed by garbage\n+  #210 = Class              #277          // org/apache/commons/compress/utils/IOUtils\n+  #211 = NameAndType        #278:#279     // readFully:(Ljava/io/InputStream;[B)I\n+  #212 = NameAndType        #280:#281     // count:(I)V\n+  #213 = Utf8               java/io/IOException\n+  #214 = NameAndType        #137:#282     // \"<init>\":(Ljava/lang/String;)V\n+  #215 = NameAndType        #169:#170     // skipSkippableFrame:([B)I\n+  #216 = NameAndType        #173:#174     // matches:([BI)Z\n+  #217 = NameAndType        #165:#144     // readOneByte:()I\n+  #218 = Utf8               Premature end of stream while reading frame flags\n+  #219 = NameAndType        #275:#281     // update:(I)V\n+  #220 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  #221 = MethodHandle       6:#283        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #222 = String             #284          // Unsupported version \\u0001\n+  #223 = NameAndType        #285:#286     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #224 = NameAndType        #136:#92      // blockDependencyBuffer:[B\n+  #225 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #226 = NameAndType        #125:#124     // expectBlockChecksum:Z\n+  #227 = NameAndType        #127:#124     // expectContentSize:Z\n+  #228 = Utf8               Premature end of stream while reading frame BD byte\n+  #229 = Utf8               Premature end of stream while reading content size\n+  #230 = Utf8               Premature end of stream while reading frame header checksum\n+  #231 = NameAndType        #287:#151     // getValue:()J\n+  #232 = NameAndType        #288:#147     // reset:()V\n+  #233 = Utf8               Frame header checksum mismatch\n+  #234 = NameAndType        #161:#147     // maybeFinishCurrentBlock:()V\n+  #235 = Class              #289          // org/apache/commons/compress/utils/ByteUtils\n+  #236 = NameAndType        #290:#291     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #237 = Utf8               Found illegal block with negative size\n+  #238 = NameAndType        #162:#147     // verifyContentChecksum:()V\n+  #239 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #240 = NameAndType        #137:#292     // \"<init>\":(Ljava/io/InputStream;J)V\n+  #241 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #242 = NameAndType        #137:#293     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #243 = NameAndType        #132:#124     // inUncompressed:Z\n+  #244 = NameAndType        #294:#295     // prefill:([B)V\n+  #245 = Utf8               block\n+  #246 = NameAndType        #163:#164     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #247 = Utf8               content\n+  #248 = String             #296          // Premature end of stream while reading \\u0001 checksum\n+  #249 = NameAndType        #285:#297     // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+  #250 = NameAndType        #290:#298     // fromLittleEndian:([B)J\n+  #251 = String             #299          // \\u0001 checksum mismatch.\n+  #252 = NameAndType        #143:#144     // read:()I\n+  #253 = NameAndType        #280:#300     // count:(J)V\n+  #254 = NameAndType        #93:#92       // SKIPPABLE_FRAME_TRAILER:[B\n+  #255 = NameAndType        #167:#168     // isSkippableFrameSignature:([B)Z\n+  #256 = Utf8               Found illegal skippable frame with negative size\n+  #257 = NameAndType        #301:#302     // skip:(Ljava/io/InputStream;J)J\n+  #258 = Utf8               Premature end of stream while skipping frame\n+  #259 = Class              #303          // java/lang/Math\n+  #260 = NameAndType        #304:#305     // min:(II)I\n+  #261 = Class              #306          // java/lang/System\n+  #262 = NameAndType        #307:#308     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #263 = NameAndType        #91:#92       // LZ4_SIGNATURE:[B\n+  #264 = Class              #309          // java/util/Arrays\n+  #265 = NameAndType        #310:#311     // equals:([B[B)Z\n+  #266 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #267 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #268 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #269 = Utf8               java/lang/Throwable\n+  #270 = Utf8               java/lang/String\n+  #271 = Utf8               java/io/InputStream\n+  #272 = Methodref          #312.#313     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #273 = Utf8               getAsByte\n+  #274 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+  #275 = Utf8               update\n+  #276 = Utf8               getBytesRead\n+  #277 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #278 = Utf8               readFully\n+  #279 = Utf8               (Ljava/io/InputStream;[B)I\n+  #280 = Utf8               count\n+  #281 = Utf8               (I)V\n+  #282 = Utf8               (Ljava/lang/String;)V\n+  #283 = Methodref          #314.#315     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #284 = Utf8               Unsupported version \\u0001\n+  #285 = Utf8               makeConcatWithConstants\n+  #286 = Utf8               (I)Ljava/lang/String;\n+  #287 = Utf8               getValue\n+  #288 = Utf8               reset\n+  #289 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #290 = Utf8               fromLittleEndian\n+  #291 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #292 = Utf8               (Ljava/io/InputStream;J)V\n+  #293 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #294 = Utf8               prefill\n+  #295 = Utf8               ([B)V\n+  #296 = Utf8               Premature end of stream while reading \\u0001 checksum\n+  #297 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #298 = Utf8               ([B)J\n+  #299 = Utf8               \\u0001 checksum mismatch.\n+  #300 = Utf8               (J)V\n+  #301 = Utf8               skip\n+  #302 = Utf8               (Ljava/io/InputStream;J)J\n+  #303 = Utf8               java/lang/Math\n+  #304 = Utf8               min\n+  #305 = Utf8               (II)I\n+  #306 = Utf8               java/lang/System\n+  #307 = Utf8               arraycopy\n+  #308 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #309 = Utf8               java/util/Arrays\n+  #310 = Utf8               equals\n+  #311 = Utf8               ([B[B)Z\n+  #312 = Class              #316          // java/lang/invoke/LambdaMetafactory\n+  #313 = NameAndType        #317:#320     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #314 = Class              #321          // java/lang/invoke/StringConcatFactory\n+  #315 = NameAndType        #285:#322     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #316 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #317 = Utf8               metafactory\n+  #318 = Class              #324          // java/lang/invoke/MethodHandles$Lookup\n+  #319 = Utf8               Lookup\n+  #320 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #321 = Utf8               java/lang/invoke/StringConcatFactory\n+  #322 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #323 = Class              #325          // java/lang/invoke/MethodHandles\n+  #324 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #325 = Utf8               java/lang/invoke/MethodHandles\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -806,15 +801,15 @@\n     Exceptions:\n       throws java.io.IOException\n \n   private void readFrameDescriptor() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n-      stack=5, locals=5, args_size=1\n+      stack=4, locals=5, args_size=1\n          0: aload_0\n          1: invokespecial #37                 // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n         10: new           #33                 // class java/io/IOException\n@@ -826,194 +821,188 @@\n         21: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         24: iload_1\n         25: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n         28: iload_1\n         29: sipush        192\n         32: iand\n         33: bipush        64\n-        35: if_icmpeq     68\n+        35: if_icmpeq     55\n         38: new           #33                 // class java/io/IOException\n         41: dup\n-        42: new           #41                 // class java/lang/StringBuilder\n-        45: dup\n-        46: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        49: ldc           #43                 // String Unsupported version\n-        51: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: iload_1\n-        55: bipush        6\n-        57: ishr\n-        58: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        61: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        64: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        67: athrow\n-        68: aload_0\n-        69: iload_1\n-        70: bipush        32\n-        72: iand\n-        73: ifne          80\n-        76: iconst_1\n-        77: goto          81\n-        80: iconst_0\n-        81: putfield      #22                 // Field expectBlockDependency:Z\n-        84: aload_0\n-        85: getfield      #22                 // Field expectBlockDependency:Z\n-        88: ifeq          109\n-        91: aload_0\n-        92: getfield      #47                 // Field blockDependencyBuffer:[B\n-        95: ifnonnull     114\n-        98: aload_0\n-        99: ldc           #49                 // int 65536\n-       101: newarray       byte\n-       103: putfield      #47                 // Field blockDependencyBuffer:[B\n-       106: goto          114\n-       109: aload_0\n-       110: aconst_null\n-       111: putfield      #47                 // Field blockDependencyBuffer:[B\n-       114: aload_0\n-       115: iload_1\n-       116: bipush        16\n-       118: iand\n-       119: ifeq          126\n-       122: iconst_1\n-       123: goto          127\n-       126: iconst_0\n-       127: putfield      #50                 // Field expectBlockChecksum:Z\n-       130: aload_0\n-       131: iload_1\n-       132: bipush        8\n-       134: iand\n-       135: ifeq          142\n-       138: iconst_1\n-       139: goto          143\n-       142: iconst_0\n-       143: putfield      #51                 // Field expectContentSize:Z\n-       146: aload_0\n-       147: iload_1\n-       148: iconst_4\n-       149: iand\n-       150: ifeq          157\n-       153: iconst_1\n-       154: goto          158\n-       157: iconst_0\n-       158: putfield      #24                 // Field expectContentChecksum:Z\n-       161: aload_0\n-       162: invokespecial #37                 // Method readOneByte:()I\n-       165: istore_2\n-       166: iload_2\n-       167: iconst_m1\n-       168: if_icmpne     181\n-       171: new           #33                 // class java/io/IOException\n-       174: dup\n-       175: ldc           #52                 // String Premature end of stream while reading frame BD byte\n-       177: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       180: athrow\n-       181: aload_0\n-       182: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       185: iload_2\n-       186: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-       189: aload_0\n-       190: getfield      #51                 // Field expectContentSize:Z\n-       193: ifeq          245\n-       196: bipush        8\n-       198: newarray       byte\n-       200: astore_3\n-       201: aload_0\n-       202: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-       205: aload_3\n-       206: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-       209: istore        4\n-       211: aload_0\n-       212: iload         4\n-       214: invokevirtual #32                 // Method count:(I)V\n-       217: bipush        8\n-       219: iload         4\n-       221: if_icmpeq     234\n-       224: new           #33                 // class java/io/IOException\n-       227: dup\n-       228: ldc           #53                 // String Premature end of stream while reading content size\n-       230: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       233: athrow\n-       234: aload_0\n-       235: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       238: aload_3\n-       239: iconst_0\n-       240: aload_3\n-       241: arraylength\n-       242: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-       245: aload_0\n-       246: invokespecial #37                 // Method readOneByte:()I\n-       249: istore_3\n-       250: iload_3\n-       251: iconst_m1\n-       252: if_icmpne     265\n-       255: new           #33                 // class java/io/IOException\n-       258: dup\n-       259: ldc           #54                 // String Premature end of stream while reading frame header checksum\n-       261: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       264: athrow\n-       265: aload_0\n-       266: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       269: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-       272: bipush        8\n-       274: lshr\n-       275: ldc2_w        #56                 // long 255l\n-       278: land\n-       279: l2i\n-       280: istore        4\n-       282: aload_0\n-       283: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       286: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-       289: iload_3\n-       290: iload         4\n-       292: if_icmpeq     305\n-       295: new           #33                 // class java/io/IOException\n-       298: dup\n-       299: ldc           #59                 // String Frame header checksum mismatch\n-       301: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       304: athrow\n-       305: return\n+        42: iload_1\n+        43: bipush        6\n+        45: ishr\n+        46: invokedynamic #41,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+        51: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        54: athrow\n+        55: aload_0\n+        56: iload_1\n+        57: bipush        32\n+        59: iand\n+        60: ifne          67\n+        63: iconst_1\n+        64: goto          68\n+        67: iconst_0\n+        68: putfield      #22                 // Field expectBlockDependency:Z\n+        71: aload_0\n+        72: getfield      #22                 // Field expectBlockDependency:Z\n+        75: ifeq          96\n+        78: aload_0\n+        79: getfield      #42                 // Field blockDependencyBuffer:[B\n+        82: ifnonnull     101\n+        85: aload_0\n+        86: ldc           #44                 // int 65536\n+        88: newarray       byte\n+        90: putfield      #42                 // Field blockDependencyBuffer:[B\n+        93: goto          101\n+        96: aload_0\n+        97: aconst_null\n+        98: putfield      #42                 // Field blockDependencyBuffer:[B\n+       101: aload_0\n+       102: iload_1\n+       103: bipush        16\n+       105: iand\n+       106: ifeq          113\n+       109: iconst_1\n+       110: goto          114\n+       113: iconst_0\n+       114: putfield      #45                 // Field expectBlockChecksum:Z\n+       117: aload_0\n+       118: iload_1\n+       119: bipush        8\n+       121: iand\n+       122: ifeq          129\n+       125: iconst_1\n+       126: goto          130\n+       129: iconst_0\n+       130: putfield      #46                 // Field expectContentSize:Z\n+       133: aload_0\n+       134: iload_1\n+       135: iconst_4\n+       136: iand\n+       137: ifeq          144\n+       140: iconst_1\n+       141: goto          145\n+       144: iconst_0\n+       145: putfield      #24                 // Field expectContentChecksum:Z\n+       148: aload_0\n+       149: invokespecial #37                 // Method readOneByte:()I\n+       152: istore_2\n+       153: iload_2\n+       154: iconst_m1\n+       155: if_icmpne     168\n+       158: new           #33                 // class java/io/IOException\n+       161: dup\n+       162: ldc           #47                 // String Premature end of stream while reading frame BD byte\n+       164: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       167: athrow\n+       168: aload_0\n+       169: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       172: iload_2\n+       173: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+       176: aload_0\n+       177: getfield      #46                 // Field expectContentSize:Z\n+       180: ifeq          232\n+       183: bipush        8\n+       185: newarray       byte\n+       187: astore_3\n+       188: aload_0\n+       189: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+       192: aload_3\n+       193: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       196: istore        4\n+       198: aload_0\n+       199: iload         4\n+       201: invokevirtual #32                 // Method count:(I)V\n+       204: bipush        8\n+       206: iload         4\n+       208: if_icmpeq     221\n+       211: new           #33                 // class java/io/IOException\n+       214: dup\n+       215: ldc           #48                 // String Premature end of stream while reading content size\n+       217: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       220: athrow\n+       221: aload_0\n+       222: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       225: aload_3\n+       226: iconst_0\n+       227: aload_3\n+       228: arraylength\n+       229: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+       232: aload_0\n+       233: invokespecial #37                 // Method readOneByte:()I\n+       236: istore_3\n+       237: iload_3\n+       238: iconst_m1\n+       239: if_icmpne     252\n+       242: new           #33                 // class java/io/IOException\n+       245: dup\n+       246: ldc           #49                 // String Premature end of stream while reading frame header checksum\n+       248: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       251: athrow\n+       252: aload_0\n+       253: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       256: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+       259: bipush        8\n+       261: lshr\n+       262: ldc2_w        #51                 // long 255l\n+       265: land\n+       266: l2i\n+       267: istore        4\n+       269: aload_0\n+       270: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       273: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+       276: iload_3\n+       277: iload         4\n+       279: if_icmpeq     292\n+       282: new           #33                 // class java/io/IOException\n+       285: dup\n+       286: ldc           #54                 // String Frame header checksum mismatch\n+       288: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       291: athrow\n+       292: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 5\n         line 205: 10\n         line 207: 20\n         line 208: 28\n         line 209: 38\n-        line 211: 68\n-        line 212: 84\n-        line 213: 91\n-        line 214: 98\n-        line 217: 109\n-        line 219: 114\n-        line 220: 130\n-        line 221: 146\n-        line 222: 161\n-        line 223: 166\n-        line 224: 171\n-        line 226: 181\n-        line 227: 189\n-        line 228: 196\n-        line 229: 201\n-        line 230: 211\n-        line 231: 217\n-        line 232: 224\n-        line 234: 234\n-        line 236: 245\n-        line 237: 250\n-        line 238: 255\n-        line 240: 265\n-        line 241: 282\n-        line 242: 289\n-        line 243: 295\n-        line 245: 305\n+        line 211: 55\n+        line 212: 71\n+        line 213: 78\n+        line 214: 85\n+        line 217: 96\n+        line 219: 101\n+        line 220: 117\n+        line 221: 133\n+        line 222: 148\n+        line 223: 153\n+        line 224: 158\n+        line 226: 168\n+        line 227: 176\n+        line 228: 183\n+        line 229: 188\n+        line 230: 198\n+        line 231: 204\n+        line 232: 211\n+        line 234: 221\n+        line 236: 232\n+        line 237: 237\n+        line 238: 242\n+        line 240: 252\n+        line 241: 269\n+        line 242: 276\n+        line 243: 282\n+        line 245: 292\n       StackMapTable: number_of_entries = 17\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n-        frame_type = 47 /* same */\n+        frame_type = 34 /* same */\n         frame_type = 75 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream, int ]\n           stack = [ class org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream, int ]\n         frame_type = 27 /* same */\n@@ -1055,99 +1044,99 @@\n \n   private void nextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokespecial #60                 // Method maybeFinishCurrentBlock:()V\n+         1: invokespecial #55                 // Method maybeFinishCurrentBlock:()V\n          4: aload_0\n          5: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          8: iconst_4\n-         9: invokestatic  #61                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         9: invokestatic  #56                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #62                 // long -2147483648l\n+        14: ldc2_w        #57                 // long -2147483648l\n         17: land\n         18: lconst_0\n         19: lcmp\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: istore_3\n         29: lload_1\n-        30: ldc2_w        #64                 // long 2147483647l\n+        30: ldc2_w        #59                 // long 2147483647l\n         33: land\n         34: l2i\n         35: istore        4\n         37: iload         4\n         39: ifge          52\n         42: new           #33                 // class java/io/IOException\n         45: dup\n-        46: ldc           #66                 // String Found illegal block with negative size\n+        46: ldc           #61                 // String Found illegal block with negative size\n         48: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         51: athrow\n         52: iload         4\n         54: ifne          82\n         57: aload_0\n-        58: invokespecial #67                 // Method verifyContentChecksum:()V\n+        58: invokespecial #62                 // Method verifyContentChecksum:()V\n         61: aload_0\n         62: getfield      #13                 // Field decompressConcatenated:Z\n         65: ifne          76\n         68: aload_0\n         69: iconst_1\n         70: putfield      #19                 // Field endReached:Z\n         73: goto          81\n         76: aload_0\n         77: iconst_0\n         78: invokespecial #14                 // Method init:(Z)V\n         81: return\n-        82: new           #68                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        82: new           #63                 // class org/apache/commons/compress/utils/BoundedInputStream\n         85: dup\n         86: aload_0\n         87: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         90: iload         4\n         92: i2l\n-        93: invokespecial #69                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        93: invokespecial #64                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         96: astore        5\n         98: aload_0\n-        99: getfield      #50                 // Field expectBlockChecksum:Z\n+        99: getfield      #45                 // Field expectBlockChecksum:Z\n        102: ifeq          120\n-       105: new           #70                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+       105: new           #65                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n        108: dup\n        109: aload_0\n        110: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        113: aload         5\n-       115: invokespecial #71                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+       115: invokespecial #66                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n        118: astore        5\n        120: iload_3\n        121: ifeq          138\n        124: aload_0\n        125: iconst_1\n-       126: putfield      #72                 // Field inUncompressed:Z\n+       126: putfield      #67                 // Field inUncompressed:Z\n        129: aload_0\n        130: aload         5\n        132: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n        135: goto          176\n        138: aload_0\n        139: iconst_0\n-       140: putfield      #72                 // Field inUncompressed:Z\n-       143: new           #48                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       140: putfield      #67                 // Field inUncompressed:Z\n+       143: new           #43                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n        146: dup\n        147: aload         5\n-       149: invokespecial #73                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       149: invokespecial #68                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        152: astore        6\n        154: aload_0\n        155: getfield      #22                 // Field expectBlockDependency:Z\n        158: ifeq          170\n        161: aload         6\n        163: aload_0\n-       164: getfield      #47                 // Field blockDependencyBuffer:[B\n-       167: invokevirtual #74                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+       164: getfield      #42                 // Field blockDependencyBuffer:[B\n+       167: invokevirtual #69                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n        170: aload_0\n        171: aload         6\n        173: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n        176: return\n       LineNumberTable:\n         line 248: 0\n         line 249: 4\n@@ -1208,24 +1197,24 @@\n          7: aload_0\n          8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n         11: invokevirtual #17                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n         16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #50                 // Field expectBlockChecksum:Z\n+        20: getfield      #45                 // Field expectBlockChecksum:Z\n         23: ifeq          43\n         26: aload_0\n         27: aload_0\n         28: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        31: ldc           #75                 // String block\n-        33: invokespecial #76                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        31: ldc           #70                 // String block\n+        33: invokespecial #71                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         36: aload_0\n         37: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        40: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        40: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         43: return\n       LineNumberTable:\n         line 282: 0\n         line 283: 7\n         line 284: 14\n         line 285: 19\n         line 286: 26\n@@ -1243,19 +1232,19 @@\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #24                 // Field expectContentChecksum:Z\n          4: ifeq          17\n          7: aload_0\n          8: aload_0\n          9: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        12: ldc           #77                 // String content\n-        14: invokespecial #76                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        12: ldc           #72                 // String content\n+        14: invokespecial #71                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         17: aload_0\n         18: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        21: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        21: invokevirtual #53                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         24: return\n       LineNumberTable:\n         line 293: 0\n         line 294: 7\n         line 296: 17\n         line 297: 24\n       StackMapTable: number_of_entries = 1\n@@ -1277,78 +1266,64 @@\n          9: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore        4\n         14: aload_0\n         15: iload         4\n         17: invokevirtual #32                 // Method count:(I)V\n         20: iconst_4\n         21: iload         4\n-        23: if_icmpeq     58\n+        23: if_icmpeq     40\n         26: new           #33                 // class java/io/IOException\n         29: dup\n-        30: new           #41                 // class java/lang/StringBuilder\n-        33: dup\n-        34: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #78                 // String Premature end of stream while reading\n-        39: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: aload_2\n-        43: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #79                 // String  checksum\n-        48: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        57: athrow\n-        58: aload_1\n-        59: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-        62: lstore        5\n-        64: lload         5\n-        66: aload_3\n-        67: invokestatic  #80                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-        70: lcmp\n-        71: ifeq          101\n-        74: new           #33                 // class java/io/IOException\n-        77: dup\n-        78: new           #41                 // class java/lang/StringBuilder\n-        81: dup\n-        82: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        85: aload_2\n-        86: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: ldc           #81                 // String  checksum mismatch.\n-        91: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        94: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        97: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-       100: athrow\n-       101: return\n+        30: aload_2\n+        31: invokedynamic #73,  0             // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        39: athrow\n+        40: aload_1\n+        41: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+        44: lstore        5\n+        46: lload         5\n+        48: aload_3\n+        49: invokestatic  #74                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        52: lcmp\n+        53: ifeq          70\n+        56: new           #33                 // class java/io/IOException\n+        59: dup\n+        60: aload_2\n+        61: invokedynamic #75,  0             // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;\n+        66: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        69: athrow\n+        70: return\n       LineNumberTable:\n         line 300: 0\n         line 301: 4\n         line 302: 14\n         line 303: 20\n         line 304: 26\n-        line 306: 58\n-        line 307: 64\n-        line 308: 74\n-        line 310: 101\n+        line 306: 40\n+        line 307: 46\n+        line 308: 56\n+        line 310: 70\n       StackMapTable: number_of_entries = 2\n         frame_type = 253 /* append */\n-          offset_delta = 58\n+          offset_delta = 40\n           locals = [ class \"[B\", int ]\n         frame_type = 252 /* append */\n-          offset_delta = 42\n+          offset_delta = 29\n           locals = [ long ]\n     Exceptions:\n       throws java.io.IOException\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #82                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         4: invokevirtual #76                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n         15: invokevirtual #32                 // Method count:(I)V\n@@ -1373,48 +1348,48 @@\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #72                 // Field inUncompressed:Z\n+         1: getfield      #67                 // Field inUncompressed:Z\n          4: ifeq          28\n          7: aload_0\n          8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #83                 // Method java/io/InputStream.read:([BII)I\n+        14: invokevirtual #77                 // Method java/io/InputStream.read:([BII)I\n         17: istore        4\n         19: aload_0\n         20: iload         4\n         22: invokevirtual #32                 // Method count:(I)V\n         25: iload         4\n         27: ireturn\n         28: aload_0\n         29: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        32: checkcast     #48                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+        32: checkcast     #43                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        39: invokevirtual #78                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         42: lstore        5\n         44: aload_0\n         45: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n         48: aload_1\n         49: iload_2\n         50: iload_3\n-        51: invokevirtual #83                 // Method java/io/InputStream.read:([BII)I\n+        51: invokevirtual #77                 // Method java/io/InputStream.read:([BII)I\n         54: istore        7\n         56: aload_0\n         57: aload         4\n-        59: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        59: invokevirtual #78                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         62: lload         5\n         64: lsub\n-        65: invokevirtual #85                 // Method count:(J)V\n+        65: invokevirtual #79                 // Method count:(J)V\n         68: iload         7\n         70: ireturn\n       LineNumberTable:\n         line 322: 0\n         line 323: 7\n         line 324: 19\n         line 325: 25\n@@ -1446,15 +1421,15 @@\n         14: istore_1\n         15: iload_1\n         16: iconst_4\n         17: if_icmpge     41\n         20: aload_0\n         21: iload_1\n         22: baload\n-        23: getstatic     #86                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        23: getstatic     #80                 // Field SKIPPABLE_FRAME_TRAILER:[B\n         26: iload_1\n         27: iconst_1\n         28: isub\n         29: baload\n         30: if_icmpeq     35\n         33: iconst_0\n         34: ireturn\n@@ -1486,45 +1461,45 @@\n       stack=4, locals=7, args_size=2\n          0: iconst_4\n          1: istore_2\n          2: iload_2\n          3: iconst_4\n          4: if_icmpne     89\n          7: aload_1\n-         8: invokestatic  #87                 // Method isSkippableFrameSignature:([B)Z\n+         8: invokestatic  #81                 // Method isSkippableFrameSignature:([B)Z\n         11: ifeq          89\n         14: aload_0\n         15: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         18: iconst_4\n-        19: invokestatic  #61                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+        19: invokestatic  #56                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         22: lstore_3\n         23: lload_3\n         24: lconst_0\n         25: lcmp\n         26: ifge          39\n         29: new           #33                 // class java/io/IOException\n         32: dup\n-        33: ldc           #88                 // String Found illegal skippable frame with negative size\n+        33: ldc           #82                 // String Found illegal skippable frame with negative size\n         35: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n         40: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         43: lload_3\n-        44: invokestatic  #89                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        44: invokestatic  #83                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         47: lstore        5\n         49: aload_0\n         50: lload         5\n-        52: invokevirtual #85                 // Method count:(J)V\n+        52: invokevirtual #79                 // Method count:(J)V\n         55: lload_3\n         56: lload         5\n         58: lcmp\n         59: ifeq          72\n         62: new           #33                 // class java/io/IOException\n         65: dup\n-        66: ldc           #90                 // String Premature end of stream while skipping frame\n+        66: ldc           #84                 // String Premature end of stream while skipping frame\n         68: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         71: athrow\n         72: aload_0\n         73: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         76: aload_1\n         77: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         80: istore_2\n@@ -1566,43 +1541,43 @@\n   private void appendToBlockDependencyBuffer(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: getfield      #47                 // Field blockDependencyBuffer:[B\n+         2: getfield      #42                 // Field blockDependencyBuffer:[B\n          5: arraylength\n-         6: invokestatic  #91                 // Method java/lang/Math.min:(II)I\n+         6: invokestatic  #85                 // Method java/lang/Math.min:(II)I\n          9: istore_3\n         10: iload_3\n         11: ifle          55\n         14: aload_0\n-        15: getfield      #47                 // Field blockDependencyBuffer:[B\n+        15: getfield      #42                 // Field blockDependencyBuffer:[B\n         18: arraylength\n         19: iload_3\n         20: isub\n         21: istore        4\n         23: iload         4\n         25: ifle          43\n         28: aload_0\n-        29: getfield      #47                 // Field blockDependencyBuffer:[B\n+        29: getfield      #42                 // Field blockDependencyBuffer:[B\n         32: iload_3\n         33: aload_0\n-        34: getfield      #47                 // Field blockDependencyBuffer:[B\n+        34: getfield      #42                 // Field blockDependencyBuffer:[B\n         37: iconst_0\n         38: iload         4\n-        40: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        40: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         43: aload_1\n         44: iload_2\n         45: aload_0\n-        46: getfield      #47                 // Field blockDependencyBuffer:[B\n+        46: getfield      #42                 // Field blockDependencyBuffer:[B\n         49: iload         4\n         51: iload_3\n-        52: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: return\n       LineNumberTable:\n         line 373: 0\n         line 374: 10\n         line 375: 14\n         line 376: 23\n         line 378: 28\n@@ -1617,40 +1592,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #93                 // Field LZ4_SIGNATURE:[B\n+         1: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #93                 // Field LZ4_SIGNATURE:[B\n+        14: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #93                 // Field LZ4_SIGNATURE:[B\n+        21: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #93                 // Field LZ4_SIGNATURE:[B\n+        32: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #92                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #86                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #93                 // Field LZ4_SIGNATURE:[B\n-        43: invokestatic  #94                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #87                 // Field LZ4_SIGNATURE:[B\n+        43: invokestatic  #88                 // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 396: 0\n         line 397: 8\n         line 400: 10\n         line 401: 12\n         line 402: 21\n@@ -1681,38 +1656,47 @@\n         13: iconst_2\n         14: bipush        77\n         16: bastore\n         17: dup\n         18: iconst_3\n         19: bipush        24\n         21: bastore\n-        22: putstatic     #93                 // Field LZ4_SIGNATURE:[B\n+        22: putstatic     #87                 // Field LZ4_SIGNATURE:[B\n         25: iconst_3\n         26: newarray       byte\n         28: dup\n         29: iconst_0\n         30: bipush        42\n         32: bastore\n         33: dup\n         34: iconst_1\n         35: bipush        77\n         37: bastore\n         38: dup\n         39: iconst_2\n         40: bipush        24\n         42: bastore\n-        43: putstatic     #86                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        43: putstatic     #80                 // Field SKIPPABLE_FRAME_TRAILER:[B\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n InnerClasses:\n-  public static #124= #123 of #246;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #326= #325 of #328; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static #118= #117 of #235;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #319= #318 of #323; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #190 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #182 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #183 ()I\n+      #184 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+      #183 ()I\n+  1: #221 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #222 Unsupported version \\u0001\n+  2: #221 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #248 Premature end of stream while reading \\u0001 checksum\n+  3: #221 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #191 ()I\n-      #192 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-      #191 ()I\n+      #251 \\u0001 checksum mismatch.\n"}]}
