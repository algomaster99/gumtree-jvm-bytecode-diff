{"diffoscope-json-version": 1, "source1": "first/DefaultConversionHandler.class", "source2": "second/DefaultConversionHandler.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,14 +12,20 @@\n {\n     public static final DefaultConversionHandler INSTANCE;\n     public static final String DEFAULT_DATE_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n     private static final AbstractListDelimiterHandler EXTRACTOR;\n     private static final ConfigurationInterpolator NULL_INTERPOLATOR;\n     private volatile String dateFormat;\n     \n+    static {\n+        INSTANCE = new DefaultConversionHandler();\n+        EXTRACTOR = (AbstractListDelimiterHandler)DisabledListDelimiterHandler.INSTANCE;\n+        NULL_INTERPOLATOR = (ConfigurationInterpolator)new DefaultConversionHandler.DefaultConversionHandler$1();\n+    }\n+    \n     public String getDateFormat() {\n         final String fmt = this.dateFormat;\n         return (fmt != null) ? fmt : \"yyyy-MM-dd HH:mm:ss\";\n     }\n     \n     public void setDateFormat(final String dateFormat) {\n         this.dateFormat = dateFormat;\n@@ -84,15 +90,15 @@\n         final T result = (T)PropertyConverter.to((Class)targetCls, src, this);\n         return result;\n     }\n     \n     private <T> T[] toObjectArray(final Object src, final Class<T> elemClass, final ConfigurationInterpolator ci) {\n         final Collection<T> convertedCol = new LinkedList<T>();\n         this.convertToCollection(src, elemClass, ci, convertedCol);\n-        final T[] result = (T[])Array.newInstance(elemClass, convertedCol.size());\n+        final Object[] result = (Object[])Array.newInstance(elemClass, convertedCol.size());\n         return convertedCol.toArray(result);\n     }\n     \n     private Object toPrimitiveArray(final Object src, final Class<?> elemClass, final ConfigurationInterpolator ci) {\n         if (src.getClass().isArray()) {\n             if (src.getClass().getComponentType().equals(elemClass)) {\n                 return src;\n@@ -121,14 +127,8 @@\n             dest.add(this.convert(o, elemClass, ci));\n         }\n     }\n     \n     private static ConfigurationInterpolator fetchInterpolator(final ConfigurationInterpolator ci) {\n         return (ci != null) ? ci : DefaultConversionHandler.NULL_INTERPOLATOR;\n     }\n-    \n-    static {\n-        INSTANCE = new DefaultConversionHandler();\n-        EXTRACTOR = (AbstractListDelimiterHandler)DisabledListDelimiterHandler.INSTANCE;\n-        NULL_INTERPOLATOR = (ConfigurationInterpolator)new DefaultConversionHandler.DefaultConversionHandler$1();\n-    }\n }\n"}]}
