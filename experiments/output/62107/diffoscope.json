{"diffoscope-json-version": 1, "source1": "first/FromNetASCIIOutputStream.class", "source2": "second/FromNetASCIIOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,300 +1,303 @@\n-  SHA-256 checksum 40b4fff0bc95d47c98ca7ce157c4508df96639af1bce18551fdc040884b90388\n+  SHA-256 checksum f742004bc24b430c5c0aa6782d488bb7c5040ee92ca4437b05ea60ca90e75047\n   Compiled from \"FromNetASCIIOutputStream.java\"\n public final class org.apache.commons.net.io.FromNetASCIIOutputStream extends java.io.FilterOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  super_class: #13                        // java/io/FilterOutputStream\n+  this_class: #1                          // org/apache/commons/net/io/FromNetASCIIOutputStream\n+  super_class: #3                         // java/io/FilterOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #13.#43        // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #2 = Fieldref           #12.#44        // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n-   #3 = Fieldref           #12.#45        // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n-   #4 = Fieldref           #46.#47        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-   #5 = Methodref          #48.#49        // java/io/OutputStream.write:([B)V\n-   #6 = Methodref          #48.#50        // java/io/OutputStream.write:(I)V\n-   #7 = Fieldref           #46.#51        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-   #8 = Methodref          #12.#52        // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n-   #9 = Methodref          #12.#53        // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n-  #10 = Methodref          #48.#53        // java/io/OutputStream.write:([BII)V\n-  #11 = Methodref          #13.#54        // java/io/FilterOutputStream.close:()V\n-  #12 = Class              #55            // org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #13 = Class              #56            // java/io/FilterOutputStream\n-  #14 = Utf8               lastWasCR\n-  #15 = Utf8               Z\n-  #16 = Utf8               <init>\n-  #17 = Utf8               (Ljava/io/OutputStream;)V\n-  #18 = Utf8               Code\n-  #19 = Utf8               LineNumberTable\n-  #20 = Utf8               LocalVariableTable\n-  #21 = Utf8               this\n-  #22 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-  #23 = Utf8               output\n-  #24 = Utf8               Ljava/io/OutputStream;\n-  #25 = Utf8               writeInt\n-  #26 = Utf8               (I)V\n-  #27 = Utf8               ch\n-  #28 = Utf8               I\n-  #29 = Utf8               StackMapTable\n-  #30 = Utf8               Exceptions\n-  #31 = Class              #57            // java/io/IOException\n-  #32 = Utf8               write\n-  #33 = Utf8               ([B)V\n-  #34 = Utf8               buffer\n-  #35 = Utf8               [B\n-  #36 = Utf8               ([BII)V\n-  #37 = Utf8               offset\n-  #38 = Utf8               length\n-  #39 = Utf8               close\n-  #40 = Utf8               ()V\n-  #41 = Utf8               SourceFile\n-  #42 = Utf8               FromNetASCIIOutputStream.java\n-  #43 = NameAndType        #16:#17        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #44 = NameAndType        #14:#15        // lastWasCR:Z\n-  #45 = NameAndType        #58:#24        // out:Ljava/io/OutputStream;\n-  #46 = Class              #59            // org/apache/commons/net/io/FromNetASCIIInputStream\n-  #47 = NameAndType        #60:#35        // _lineSeparatorBytes:[B\n-  #48 = Class              #61            // java/io/OutputStream\n-  #49 = NameAndType        #32:#33        // write:([B)V\n-  #50 = NameAndType        #32:#26        // write:(I)V\n-  #51 = NameAndType        #62:#15        // _noConversionRequired:Z\n-  #52 = NameAndType        #25:#26        // writeInt:(I)V\n-  #53 = NameAndType        #32:#36        // write:([BII)V\n-  #54 = NameAndType        #39:#40        // close:()V\n-  #55 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n-  #56 = Utf8               java/io/FilterOutputStream\n-  #57 = Utf8               java/io/IOException\n-  #58 = Utf8               out\n-  #59 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n-  #60 = Utf8               _lineSeparatorBytes\n-  #61 = Utf8               java/io/OutputStream\n-  #62 = Utf8               _noConversionRequired\n+   #1 = Class              #2             // org/apache/commons/net/io/FromNetASCIIOutputStream\n+   #2 = Utf8               org/apache/commons/net/io/FromNetASCIIOutputStream\n+   #3 = Class              #4             // java/io/FilterOutputStream\n+   #4 = Utf8               java/io/FilterOutputStream\n+   #5 = Utf8               lastWasCR\n+   #6 = Utf8               Z\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/OutputStream;)V\n+   #9 = Utf8               Code\n+  #10 = Methodref          #3.#11         // java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #11 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/OutputStream;)V\n+  #12 = Fieldref           #1.#13         // org/apache/commons/net/io/FromNetASCIIOutputStream.lastWasCR:Z\n+  #13 = NameAndType        #5:#6          // lastWasCR:Z\n+  #14 = Utf8               LineNumberTable\n+  #15 = Utf8               LocalVariableTable\n+  #16 = Utf8               this\n+  #17 = Utf8               Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+  #18 = Utf8               output\n+  #19 = Utf8               Ljava/io/OutputStream;\n+  #20 = Utf8               writeInt\n+  #21 = Utf8               (I)V\n+  #22 = Utf8               Exceptions\n+  #23 = Class              #24            // java/io/IOException\n+  #24 = Utf8               java/io/IOException\n+  #25 = Fieldref           #1.#26         // org/apache/commons/net/io/FromNetASCIIOutputStream.out:Ljava/io/OutputStream;\n+  #26 = NameAndType        #27:#19        // out:Ljava/io/OutputStream;\n+  #27 = Utf8               out\n+  #28 = Fieldref           #29.#31        // org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+  #29 = Class              #30            // org/apache/commons/net/io/FromNetASCIIInputStream\n+  #30 = Utf8               org/apache/commons/net/io/FromNetASCIIInputStream\n+  #31 = NameAndType        #32:#33        // _lineSeparatorBytes:[B\n+  #32 = Utf8               _lineSeparatorBytes\n+  #33 = Utf8               [B\n+  #34 = Methodref          #35.#37        // java/io/OutputStream.write:([B)V\n+  #35 = Class              #36            // java/io/OutputStream\n+  #36 = Utf8               java/io/OutputStream\n+  #37 = NameAndType        #38:#39        // write:([B)V\n+  #38 = Utf8               write\n+  #39 = Utf8               ([B)V\n+  #40 = Methodref          #35.#41        // java/io/OutputStream.write:(I)V\n+  #41 = NameAndType        #38:#21        // write:(I)V\n+  #42 = Utf8               ch\n+  #43 = Utf8               I\n+  #44 = Utf8               StackMapTable\n+  #45 = Fieldref           #29.#46        // org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+  #46 = NameAndType        #47:#6         // _noConversionRequired:Z\n+  #47 = Utf8               _noConversionRequired\n+  #48 = Methodref          #1.#49         // org/apache/commons/net/io/FromNetASCIIOutputStream.writeInt:(I)V\n+  #49 = NameAndType        #20:#21        // writeInt:(I)V\n+  #50 = Methodref          #1.#51         // org/apache/commons/net/io/FromNetASCIIOutputStream.write:([BII)V\n+  #51 = NameAndType        #38:#52        // write:([BII)V\n+  #52 = Utf8               ([BII)V\n+  #53 = Utf8               buffer\n+  #54 = Methodref          #35.#51        // java/io/OutputStream.write:([BII)V\n+  #55 = Utf8               offset\n+  #56 = Utf8               length\n+  #57 = Utf8               close\n+  #58 = Utf8               ()V\n+  #59 = Methodref          #3.#60         // java/io/FilterOutputStream.close:()V\n+  #60 = NameAndType        #57:#58        // close:()V\n+  #61 = Utf8               SourceFile\n+  #62 = Utf8               FromNetASCIIOutputStream.java\n {\n   private boolean lastWasCR;\n     descriptor: Z\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.net.io.FromNetASCIIOutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #1                  // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+         2: invokespecial #10                 // Method java/io/FilterOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #2                  // Field lastWasCR:Z\n+         7: putfield      #12                 // Field lastWasCR:Z\n         10: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 5\n         line 53: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n             0      11     1 output   Ljava/io/OutputStream;\n \n   private void writeInt(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n-         1: lookupswitch  { // 2\n-                      10: 36\n-                      13: 28\n-                 default: 78\n+         1: tableswitch   { // 10 to 13\n+                      10: 40\n+                      11: 82\n+                      12: 82\n+                      13: 32\n+                 default: 82\n             }\n-        28: aload_0\n-        29: iconst_1\n-        30: putfield      #2                  // Field lastWasCR:Z\n-        33: goto          107\n-        36: aload_0\n-        37: getfield      #2                  // Field lastWasCR:Z\n-        40: ifeq          61\n-        43: aload_0\n-        44: getfield      #3                  // Field out:Ljava/io/OutputStream;\n-        47: getstatic     #4                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n-        50: invokevirtual #5                  // Method java/io/OutputStream.write:([B)V\n-        53: aload_0\n-        54: iconst_0\n-        55: putfield      #2                  // Field lastWasCR:Z\n-        58: goto          107\n-        61: aload_0\n-        62: iconst_0\n-        63: putfield      #2                  // Field lastWasCR:Z\n-        66: aload_0\n-        67: getfield      #3                  // Field out:Ljava/io/OutputStream;\n-        70: bipush        10\n-        72: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n-        75: goto          107\n-        78: aload_0\n-        79: getfield      #2                  // Field lastWasCR:Z\n-        82: ifeq          99\n-        85: aload_0\n-        86: getfield      #3                  // Field out:Ljava/io/OutputStream;\n-        89: bipush        13\n-        91: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n-        94: aload_0\n-        95: iconst_0\n-        96: putfield      #2                  // Field lastWasCR:Z\n-        99: aload_0\n-       100: getfield      #3                  // Field out:Ljava/io/OutputStream;\n-       103: iload_1\n-       104: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n-       107: return\n+        32: aload_0\n+        33: iconst_1\n+        34: putfield      #12                 // Field lastWasCR:Z\n+        37: goto          111\n+        40: aload_0\n+        41: getfield      #12                 // Field lastWasCR:Z\n+        44: ifeq          65\n+        47: aload_0\n+        48: getfield      #25                 // Field out:Ljava/io/OutputStream;\n+        51: getstatic     #28                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._lineSeparatorBytes:[B\n+        54: invokevirtual #34                 // Method java/io/OutputStream.write:([B)V\n+        57: aload_0\n+        58: iconst_0\n+        59: putfield      #12                 // Field lastWasCR:Z\n+        62: goto          111\n+        65: aload_0\n+        66: iconst_0\n+        67: putfield      #12                 // Field lastWasCR:Z\n+        70: aload_0\n+        71: getfield      #25                 // Field out:Ljava/io/OutputStream;\n+        74: bipush        10\n+        76: invokevirtual #40                 // Method java/io/OutputStream.write:(I)V\n+        79: goto          111\n+        82: aload_0\n+        83: getfield      #12                 // Field lastWasCR:Z\n+        86: ifeq          103\n+        89: aload_0\n+        90: getfield      #25                 // Field out:Ljava/io/OutputStream;\n+        93: bipush        13\n+        95: invokevirtual #40                 // Method java/io/OutputStream.write:(I)V\n+        98: aload_0\n+        99: iconst_0\n+       100: putfield      #12                 // Field lastWasCR:Z\n+       103: aload_0\n+       104: getfield      #25                 // Field out:Ljava/io/OutputStream;\n+       107: iload_1\n+       108: invokevirtual #40                 // Method java/io/OutputStream.write:(I)V\n+       111: return\n       LineNumberTable:\n         line 58: 0\n-        line 61: 28\n-        line 63: 33\n-        line 65: 36\n-        line 67: 43\n-        line 68: 53\n-        line 69: 58\n-        line 71: 61\n-        line 72: 66\n-        line 73: 75\n-        line 75: 78\n-        line 77: 85\n-        line 78: 94\n-        line 80: 99\n-        line 83: 107\n+        line 61: 32\n+        line 63: 37\n+        line 65: 40\n+        line 67: 47\n+        line 68: 57\n+        line 69: 62\n+        line 71: 65\n+        line 72: 70\n+        line 73: 79\n+        line 75: 82\n+        line 77: 89\n+        line 78: 98\n+        line 80: 103\n+        line 83: 111\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     108     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-            0     108     1    ch   I\n+            0     112     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+            0     112     1    ch   I\n       StackMapTable: number_of_entries = 6\n-        frame_type = 28 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 7 /* same */\n         frame_type = 24 /* same */\n         frame_type = 16 /* same */\n         frame_type = 20 /* same */\n         frame_type = 7 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: getstatic     #7                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #45                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          15\n          6: aload_0\n-         7: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #25                 // Field out:Ljava/io/OutputStream;\n         10: iload_1\n-        11: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        11: invokevirtual #40                 // Method java/io/OutputStream.write:(I)V\n         14: return\n         15: aload_0\n         16: iload_1\n-        17: invokespecial #8                  // Method writeInt:(I)V\n+        17: invokespecial #48                 // Method writeInt:(I)V\n         20: return\n       LineNumberTable:\n         line 102: 0\n         line 104: 6\n         line 105: 14\n         line 108: 15\n         line 109: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n             0      21     1    ch   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void write(byte[]) throws java.io.IOException;\n     descriptor: ([B)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #9                  // Method write:([BII)V\n+         5: invokevirtual #50                 // Method write:([BII)V\n          8: return\n       LineNumberTable:\n         line 123: 0\n         line 124: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n             0       9     1 buffer   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n-         0: getstatic     #7                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n-         3: ifeq          17\n+         0: getstatic     #45                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         3: ifeq          27\n          6: aload_0\n-         7: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+         7: getfield      #25                 // Field out:Ljava/io/OutputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #10                 // Method java/io/OutputStream.write:([BII)V\n+        13: invokevirtual #54                 // Method java/io/OutputStream.write:([BII)V\n         16: return\n-        17: iload_3\n-        18: iinc          3, -1\n-        21: ifle          37\n-        24: aload_0\n-        25: aload_1\n-        26: iload_2\n-        27: iinc          2, 1\n-        30: baload\n-        31: invokespecial #8                  // Method writeInt:(I)V\n-        34: goto          17\n-        37: return\n+        17: aload_0\n+        18: aload_1\n+        19: iload_2\n+        20: iinc          2, 1\n+        23: baload\n+        24: invokespecial #48                 // Method writeInt:(I)V\n+        27: iload_3\n+        28: iinc          3, -1\n+        31: ifgt          17\n+        34: return\n       LineNumberTable:\n         line 141: 0\n         line 145: 6\n         line 146: 16\n-        line 149: 17\n-        line 150: 24\n-        line 152: 37\n+        line 150: 17\n+        line 149: 27\n+        line 152: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      38     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n-            0      38     1 buffer   [B\n-            0      38     2 offset   I\n-            0      38     3 length   I\n+            0      35     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n+            0      35     1 buffer   [B\n+            0      35     2 offset   I\n+            0      35     3 length   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 17 /* same */\n-        frame_type = 19 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 9 /* same */\n \n   public synchronized void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #7                  // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n+         0: getstatic     #45                 // Field org/apache/commons/net/io/FromNetASCIIInputStream._noConversionRequired:Z\n          3: ifeq          11\n          6: aload_0\n-         7: invokespecial #11                 // Method java/io/FilterOutputStream.close:()V\n+         7: invokespecial #59                 // Method java/io/FilterOutputStream.close:()V\n         10: return\n         11: aload_0\n-        12: getfield      #2                  // Field lastWasCR:Z\n+        12: getfield      #12                 // Field lastWasCR:Z\n         15: ifeq          27\n         18: aload_0\n-        19: getfield      #3                  // Field out:Ljava/io/OutputStream;\n+        19: getfield      #25                 // Field out:Ljava/io/OutputStream;\n         22: bipush        13\n-        24: invokevirtual #6                  // Method java/io/OutputStream.write:(I)V\n+        24: invokevirtual #40                 // Method java/io/OutputStream.write:(I)V\n         27: aload_0\n-        28: invokespecial #11                 // Method java/io/FilterOutputStream.close:()V\n+        28: invokespecial #59                 // Method java/io/FilterOutputStream.close:()V\n         31: return\n       LineNumberTable:\n         line 164: 0\n         line 166: 6\n         line 167: 10\n         line 170: 11\n         line 171: 18\n@@ -302,11 +305,9 @@\n         line 174: 31\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      32     0  this   Lorg/apache/commons/net/io/FromNetASCIIOutputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 11 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"FromNetASCIIOutputStream.java\"\n"}]}
