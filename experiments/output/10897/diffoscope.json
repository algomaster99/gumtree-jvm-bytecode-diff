{"diffoscope-json-version": 1, "source1": "first/ModuleRequires.class", "source2": "second/ModuleRequires.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,147 +1,147 @@\n-  SHA-256 checksum d454c97306dcdf7719794374c76b23d089d91ce325e92824b2cc6cc9cdcea86e\n+  SHA-256 checksum 30487b23ad86117b1e5f77caf757e41ead248f07303ab7b3c8b9f30a0fdc8959\n   Compiled from \"ModuleRequires.java\"\n public final class org.apache.bcel.classfile.ModuleRequires implements java.lang.Cloneable,org.apache.bcel.classfile.Node\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/bcel/classfile/ModuleRequires\n-  super_class: #18                        // java/lang/Object\n+  this_class: #14                         // org/apache/bcel/classfile/ModuleRequires\n+  super_class: #2                         // java/lang/Object\n   interfaces: 2, fields: 3, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Methodref          #18.#68       // java/lang/Object.\"<init>\":()V\n-    #2 = InterfaceMethodref #69.#70       // java/io/DataInput.readUnsignedShort:()I\n-    #3 = Fieldref           #8.#71        // org/apache/bcel/classfile/ModuleRequires.requiresIndex:I\n-    #4 = Fieldref           #8.#72        // org/apache/bcel/classfile/ModuleRequires.requiresFlags:I\n-    #5 = Fieldref           #8.#73        // org/apache/bcel/classfile/ModuleRequires.requiresVersionIndex:I\n-    #6 = InterfaceMethodref #74.#75       // org/apache/bcel/classfile/Visitor.visitModuleRequires:(Lorg/apache/bcel/classfile/ModuleRequires;)V\n-    #7 = Methodref          #18.#76       // java/lang/Object.clone:()Ljava/lang/Object;\n-    #8 = Class              #77           // org/apache/bcel/classfile/ModuleRequires\n-    #9 = Class              #78           // java/lang/CloneNotSupportedException\n-   #10 = Methodref          #79.#80       // java/io/DataOutputStream.writeShort:(I)V\n-   #11 = Class              #81           // java/lang/StringBuilder\n-   #12 = Methodref          #11.#68       // java/lang/StringBuilder.\"<init>\":()V\n-   #13 = String             #82           // requires(\n-   #14 = Methodref          #11.#83       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #11.#84       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #16 = String             #85           // ,\n-   #17 = String             #86           // %04x\n-   #18 = Class              #87           // java/lang/Object\n-   #19 = Methodref          #88.#89       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #20 = Methodref          #65.#90       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #21 = String             #91           // )\n-   #22 = Methodref          #11.#92       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #23 = Class              #93           // org/apache/bcel/Const\n-   #24 = Methodref          #94.#95       // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #25 = Methodref          #96.#97       // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #26 = String             #98           // 0\n-   #27 = Methodref          #94.#99       // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n-   #28 = Class              #100          // java/lang/Cloneable\n-   #29 = Class              #101          // org/apache/bcel/classfile/Node\n-   #30 = Utf8               requiresIndex\n-   #31 = Utf8               I\n-   #32 = Utf8               requiresFlags\n-   #33 = Utf8               requiresVersionIndex\n-   #34 = Utf8               <init>\n-   #35 = Utf8               (Ljava/io/DataInput;)V\n-   #36 = Utf8               Code\n-   #37 = Utf8               LineNumberTable\n-   #38 = Utf8               LocalVariableTable\n-   #39 = Utf8               this\n-   #40 = Utf8               Lorg/apache/bcel/classfile/ModuleRequires;\n-   #41 = Utf8               file\n-   #42 = Utf8               Ljava/io/DataInput;\n-   #43 = Utf8               Exceptions\n-   #44 = Class              #102          // java/io/IOException\n-   #45 = Utf8               accept\n-   #46 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-   #47 = Utf8               v\n-   #48 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n-   #49 = Utf8               copy\n-   #50 = Utf8               ()Lorg/apache/bcel/classfile/ModuleRequires;\n-   #51 = Utf8               StackMapTable\n-   #52 = Utf8               dump\n-   #53 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #54 = Utf8               Ljava/io/DataOutputStream;\n-   #55 = Utf8               toString\n-   #56 = Utf8               ()Ljava/lang/String;\n-   #57 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #58 = Utf8               constant_pool\n-   #59 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #60 = Utf8               buf\n-   #61 = Utf8               Ljava/lang/StringBuilder;\n-   #62 = Utf8               module_name\n-   #63 = Utf8               Ljava/lang/String;\n-   #64 = Utf8               version\n-   #65 = Class              #103          // java/lang/String\n-   #66 = Utf8               SourceFile\n-   #67 = Utf8               ModuleRequires.java\n-   #68 = NameAndType        #34:#104      // \"<init>\":()V\n-   #69 = Class              #105          // java/io/DataInput\n-   #70 = NameAndType        #106:#107     // readUnsignedShort:()I\n-   #71 = NameAndType        #30:#31       // requiresIndex:I\n-   #72 = NameAndType        #32:#31       // requiresFlags:I\n-   #73 = NameAndType        #33:#31       // requiresVersionIndex:I\n-   #74 = Class              #108          // org/apache/bcel/classfile/Visitor\n-   #75 = NameAndType        #109:#110     // visitModuleRequires:(Lorg/apache/bcel/classfile/ModuleRequires;)V\n-   #76 = NameAndType        #111:#112     // clone:()Ljava/lang/Object;\n-   #77 = Utf8               org/apache/bcel/classfile/ModuleRequires\n-   #78 = Utf8               java/lang/CloneNotSupportedException\n-   #79 = Class              #113          // java/io/DataOutputStream\n-   #80 = NameAndType        #114:#115     // writeShort:(I)V\n-   #81 = Utf8               java/lang/StringBuilder\n-   #82 = Utf8               requires(\n-   #83 = NameAndType        #116:#117     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #84 = NameAndType        #116:#118     // append:(I)Ljava/lang/StringBuilder;\n-   #85 = Utf8               ,\n-   #86 = Utf8               %04x\n-   #87 = Utf8               java/lang/Object\n-   #88 = Class              #119          // java/lang/Integer\n-   #89 = NameAndType        #120:#121     // valueOf:(I)Ljava/lang/Integer;\n-   #90 = NameAndType        #122:#123     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #91 = Utf8               )\n-   #92 = NameAndType        #55:#56       // toString:()Ljava/lang/String;\n-   #93 = Utf8               org/apache/bcel/Const\n-   #94 = Class              #124          // org/apache/bcel/classfile/ConstantPool\n-   #95 = NameAndType        #125:#126     // constantToString:(IB)Ljava/lang/String;\n-   #96 = Class              #127          // org/apache/bcel/classfile/Utility\n-   #97 = NameAndType        #128:#129     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #98 = Utf8               0\n-   #99 = NameAndType        #130:#126     // getConstantString:(IB)Ljava/lang/String;\n-  #100 = Utf8               java/lang/Cloneable\n-  #101 = Utf8               org/apache/bcel/classfile/Node\n-  #102 = Utf8               java/io/IOException\n-  #103 = Utf8               java/lang/String\n-  #104 = Utf8               ()V\n-  #105 = Utf8               java/io/DataInput\n-  #106 = Utf8               readUnsignedShort\n-  #107 = Utf8               ()I\n-  #108 = Utf8               org/apache/bcel/classfile/Visitor\n-  #109 = Utf8               visitModuleRequires\n-  #110 = Utf8               (Lorg/apache/bcel/classfile/ModuleRequires;)V\n-  #111 = Utf8               clone\n-  #112 = Utf8               ()Ljava/lang/Object;\n-  #113 = Utf8               java/io/DataOutputStream\n-  #114 = Utf8               writeShort\n-  #115 = Utf8               (I)V\n-  #116 = Utf8               append\n-  #117 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #118 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #119 = Utf8               java/lang/Integer\n-  #120 = Utf8               valueOf\n-  #121 = Utf8               (I)Ljava/lang/Integer;\n-  #122 = Utf8               format\n-  #123 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #124 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #125 = Utf8               constantToString\n-  #126 = Utf8               (IB)Ljava/lang/String;\n-  #127 = Utf8               org/apache/bcel/classfile/Utility\n-  #128 = Utf8               compactClassName\n-  #129 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #130 = Utf8               getConstantString\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = InterfaceMethodref #8.#9         // java/io/DataInput.readUnsignedShort:()I\n+    #8 = Class              #10           // java/io/DataInput\n+    #9 = NameAndType        #11:#12       // readUnsignedShort:()I\n+   #10 = Utf8               java/io/DataInput\n+   #11 = Utf8               readUnsignedShort\n+   #12 = Utf8               ()I\n+   #13 = Fieldref           #14.#15       // org/apache/bcel/classfile/ModuleRequires.requiresIndex:I\n+   #14 = Class              #16           // org/apache/bcel/classfile/ModuleRequires\n+   #15 = NameAndType        #17:#18       // requiresIndex:I\n+   #16 = Utf8               org/apache/bcel/classfile/ModuleRequires\n+   #17 = Utf8               requiresIndex\n+   #18 = Utf8               I\n+   #19 = Fieldref           #14.#20       // org/apache/bcel/classfile/ModuleRequires.requiresFlags:I\n+   #20 = NameAndType        #21:#18       // requiresFlags:I\n+   #21 = Utf8               requiresFlags\n+   #22 = Fieldref           #14.#23       // org/apache/bcel/classfile/ModuleRequires.requiresVersionIndex:I\n+   #23 = NameAndType        #24:#18       // requiresVersionIndex:I\n+   #24 = Utf8               requiresVersionIndex\n+   #25 = InterfaceMethodref #26.#27       // org/apache/bcel/classfile/Visitor.visitModuleRequires:(Lorg/apache/bcel/classfile/ModuleRequires;)V\n+   #26 = Class              #28           // org/apache/bcel/classfile/Visitor\n+   #27 = NameAndType        #29:#30       // visitModuleRequires:(Lorg/apache/bcel/classfile/ModuleRequires;)V\n+   #28 = Utf8               org/apache/bcel/classfile/Visitor\n+   #29 = Utf8               visitModuleRequires\n+   #30 = Utf8               (Lorg/apache/bcel/classfile/ModuleRequires;)V\n+   #31 = Methodref          #2.#32        // java/lang/Object.clone:()Ljava/lang/Object;\n+   #32 = NameAndType        #33:#34       // clone:()Ljava/lang/Object;\n+   #33 = Utf8               clone\n+   #34 = Utf8               ()Ljava/lang/Object;\n+   #35 = Class              #36           // java/lang/CloneNotSupportedException\n+   #36 = Utf8               java/lang/CloneNotSupportedException\n+   #37 = Methodref          #38.#39       // java/io/DataOutputStream.writeShort:(I)V\n+   #38 = Class              #40           // java/io/DataOutputStream\n+   #39 = NameAndType        #41:#42       // writeShort:(I)V\n+   #40 = Utf8               java/io/DataOutputStream\n+   #41 = Utf8               writeShort\n+   #42 = Utf8               (I)V\n+   #43 = Class              #44           // java/lang/StringBuilder\n+   #44 = Utf8               java/lang/StringBuilder\n+   #45 = Methodref          #43.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #46 = String             #47           // requires(\n+   #47 = Utf8               requires(\n+   #48 = Methodref          #43.#49       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #49 = NameAndType        #50:#51       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #50 = Utf8               append\n+   #51 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Methodref          #43.#53       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #53 = NameAndType        #50:#54       // append:(I)Ljava/lang/StringBuilder;\n+   #54 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #55 = String             #56           // ,\n+   #56 = Utf8               ,\n+   #57 = String             #58           // %04x\n+   #58 = Utf8               %04x\n+   #59 = Methodref          #60.#61       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #60 = Class              #62           // java/lang/Integer\n+   #61 = NameAndType        #63:#64       // valueOf:(I)Ljava/lang/Integer;\n+   #62 = Utf8               java/lang/Integer\n+   #63 = Utf8               valueOf\n+   #64 = Utf8               (I)Ljava/lang/Integer;\n+   #65 = Methodref          #66.#67       // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #66 = Class              #68           // java/lang/String\n+   #67 = NameAndType        #69:#70       // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #68 = Utf8               java/lang/String\n+   #69 = Utf8               format\n+   #70 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #71 = String             #72           // )\n+   #72 = Utf8               )\n+   #73 = Methodref          #43.#74       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #74 = NameAndType        #75:#76       // toString:()Ljava/lang/String;\n+   #75 = Utf8               toString\n+   #76 = Utf8               ()Ljava/lang/String;\n+   #77 = Class              #78           // org/apache/bcel/Const\n+   #78 = Utf8               org/apache/bcel/Const\n+   #79 = Methodref          #80.#81       // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+   #80 = Class              #82           // org/apache/bcel/classfile/ConstantPool\n+   #81 = NameAndType        #83:#84       // constantToString:(IB)Ljava/lang/String;\n+   #82 = Utf8               org/apache/bcel/classfile/ConstantPool\n+   #83 = Utf8               constantToString\n+   #84 = Utf8               (IB)Ljava/lang/String;\n+   #85 = Methodref          #86.#87       // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #86 = Class              #88           // org/apache/bcel/classfile/Utility\n+   #87 = NameAndType        #89:#90       // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #88 = Utf8               org/apache/bcel/classfile/Utility\n+   #89 = Utf8               compactClassName\n+   #90 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+   #91 = String             #92           // 0\n+   #92 = Utf8               0\n+   #93 = Methodref          #80.#94       // org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+   #94 = NameAndType        #95:#84       // getConstantString:(IB)Ljava/lang/String;\n+   #95 = Utf8               getConstantString\n+   #96 = Class              #97           // java/lang/Cloneable\n+   #97 = Utf8               java/lang/Cloneable\n+   #98 = Class              #99           // org/apache/bcel/classfile/Node\n+   #99 = Utf8               org/apache/bcel/classfile/Node\n+  #100 = Utf8               (Ljava/io/DataInput;)V\n+  #101 = Utf8               Code\n+  #102 = Utf8               LineNumberTable\n+  #103 = Utf8               LocalVariableTable\n+  #104 = Utf8               this\n+  #105 = Utf8               Lorg/apache/bcel/classfile/ModuleRequires;\n+  #106 = Utf8               file\n+  #107 = Utf8               Ljava/io/DataInput;\n+  #108 = Utf8               Exceptions\n+  #109 = Class              #110          // java/io/IOException\n+  #110 = Utf8               java/io/IOException\n+  #111 = Utf8               accept\n+  #112 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+  #113 = Utf8               v\n+  #114 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n+  #115 = Utf8               copy\n+  #116 = Utf8               ()Lorg/apache/bcel/classfile/ModuleRequires;\n+  #117 = Utf8               StackMapTable\n+  #118 = Utf8               dump\n+  #119 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #120 = Utf8               Ljava/io/DataOutputStream;\n+  #121 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+  #122 = Utf8               constant_pool\n+  #123 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+  #124 = Utf8               buf\n+  #125 = Utf8               Ljava/lang/StringBuilder;\n+  #126 = Utf8               module_name\n+  #127 = Utf8               Ljava/lang/String;\n+  #128 = Utf8               version\n+  #129 = Utf8               SourceFile\n+  #130 = Utf8               ModuleRequires.java\n {\n   private final int requiresIndex;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int requiresFlags;\n     descriptor: I\n@@ -156,24 +156,24 @@\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        11: putfield      #3                  // Field requiresIndex:I\n+         6: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        11: putfield      #13                 // Field requiresIndex:I\n         14: aload_0\n         15: aload_1\n-        16: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        21: putfield      #4                  // Field requiresFlags:I\n+        16: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        21: putfield      #19                 // Field requiresFlags:I\n         24: aload_0\n         25: aload_1\n-        26: invokeinterface #2,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        31: putfield      #5                  // Field requiresVersionIndex:I\n+        26: invokeinterface #7,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        31: putfield      #22                 // Field requiresVersionIndex:I\n         34: return\n       LineNumberTable:\n         line 45: 0\n         line 46: 4\n         line 47: 14\n         line 48: 24\n         line 49: 34\n@@ -187,15 +187,15 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #6,  2            // InterfaceMethod org/apache/bcel/classfile/Visitor.visitModuleRequires:(Lorg/apache/bcel/classfile/ModuleRequires;)V\n+         2: invokeinterface #25,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitModuleRequires:(Lorg/apache/bcel/classfile/ModuleRequires;)V\n          7: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/ModuleRequires;\n@@ -203,16 +203,16 @@\n \n   public org.apache.bcel.classfile.ModuleRequires copy();\n     descriptor: ()Lorg/apache/bcel/classfile/ModuleRequires;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #7                  // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #8                  // class org/apache/bcel/classfile/ModuleRequires\n+         1: invokevirtual #31                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #14                 // class org/apache/bcel/classfile/ModuleRequires\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n@@ -230,24 +230,24 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field requiresIndex:I\n-         5: invokevirtual #10                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #13                 // Field requiresIndex:I\n+         5: invokevirtual #37                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #4                  // Field requiresFlags:I\n-        13: invokevirtual #10                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #19                 // Field requiresFlags:I\n+        13: invokevirtual #37                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #5                  // Field requiresVersionIndex:I\n-        21: invokevirtual #10                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #22                 // Field requiresVersionIndex:I\n+        21: invokevirtual #37                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: return\n       LineNumberTable:\n         line 83: 0\n         line 84: 8\n         line 85: 16\n         line 86: 24\n       LocalVariableTable:\n@@ -258,105 +258,105 @@\n       throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n-         0: new           #11                 // class java/lang/StringBuilder\n+         0: new           #43                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #13                 // String requires(\n-         9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #45                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #46                 // String requires(\n+         9: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: getfield      #3                  // Field requiresIndex:I\n-        16: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #16                 // String ,\n-        21: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: ldc           #17                 // String %04x\n+        13: getfield      #13                 // Field requiresIndex:I\n+        16: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        19: ldc           #55                 // String ,\n+        21: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: ldc           #57                 // String %04x\n         26: iconst_1\n-        27: anewarray     #18                 // class java/lang/Object\n+        27: anewarray     #2                  // class java/lang/Object\n         30: dup\n         31: iconst_0\n         32: aload_0\n-        33: getfield      #4                  // Field requiresFlags:I\n-        36: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        33: getfield      #19                 // Field requiresFlags:I\n+        36: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         39: aastore\n-        40: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        43: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #16                 // String ,\n-        48: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        40: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        43: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: ldc           #55                 // String ,\n+        48: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         51: aload_0\n-        52: getfield      #5                  // Field requiresVersionIndex:I\n-        55: invokevirtual #15                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        58: ldc           #21                 // String )\n-        60: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        63: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        52: getfield      #22                 // Field requiresVersionIndex:I\n+        55: invokevirtual #52                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        58: ldc           #71                 // String )\n+        60: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        63: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         66: areturn\n       LineNumberTable:\n         line 93: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      67     0  this   Lorg/apache/bcel/classfile/ModuleRequires;\n \n   public java.lang.String toString(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=2\n-         0: new           #11                 // class java/lang/StringBuilder\n+         0: new           #43                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #12                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #45                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_2\n          8: aload_1\n          9: aload_0\n-        10: getfield      #3                  // Field requiresIndex:I\n+        10: getfield      #13                 // Field requiresIndex:I\n         13: bipush        19\n-        15: invokevirtual #24                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+        15: invokevirtual #79                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n         18: astore_3\n         19: aload_2\n         20: aload_3\n         21: iconst_0\n-        22: invokestatic  #25                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-        25: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: invokestatic  #85                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        25: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         28: pop\n         29: aload_2\n-        30: ldc           #16                 // String ,\n-        32: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        35: ldc           #17                 // String %04x\n+        30: ldc           #55                 // String ,\n+        32: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: ldc           #57                 // String %04x\n         37: iconst_1\n-        38: anewarray     #18                 // class java/lang/Object\n+        38: anewarray     #2                  // class java/lang/Object\n         41: dup\n         42: iconst_0\n         43: aload_0\n-        44: getfield      #4                  // Field requiresFlags:I\n-        47: invokestatic  #19                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+        44: getfield      #19                 // Field requiresFlags:I\n+        47: invokestatic  #59                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n         50: aastore\n-        51: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        54: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokestatic  #65                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        54: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         57: pop\n         58: aload_0\n-        59: getfield      #5                  // Field requiresVersionIndex:I\n+        59: getfield      #22                 // Field requiresVersionIndex:I\n         62: ifne          70\n-        65: ldc           #26                 // String 0\n+        65: ldc           #91                 // String 0\n         67: goto          79\n         70: aload_1\n         71: aload_0\n-        72: getfield      #5                  // Field requiresVersionIndex:I\n+        72: getfield      #22                 // Field requiresVersionIndex:I\n         75: iconst_1\n-        76: invokevirtual #27                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n+        76: invokevirtual #93                 // Method org/apache/bcel/classfile/ConstantPool.getConstantString:(IB)Ljava/lang/String;\n         79: astore        4\n         81: aload_2\n-        82: ldc           #16                 // String ,\n-        84: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        82: ldc           #55                 // String ,\n+        84: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         87: aload         4\n-        89: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        89: invokevirtual #48                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         92: pop\n         93: aload_2\n-        94: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        94: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         97: areturn\n       LineNumberTable:\n         line 100: 0\n         line 101: 8\n         line 102: 19\n         line 103: 29\n         line 104: 58\n"}]}
