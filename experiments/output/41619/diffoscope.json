{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Integral.class", "source2": "second/NewAttributeBands$Integral.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -17,68 +17,66 @@\n     private Integral previousIntegral;\n     private int previousPValue;\n     \n     public Integral(final NewAttributeBands this$0, final String tag) {\n         super(this.this$0 = this$0);\n         this.band = new ArrayList();\n         this.tag = tag;\n-        this.defaultCodec = NewAttributeBands.access$100(this$0, tag);\n+        this.defaultCodec = NewAttributeBands.access$1(this$0, tag);\n     }\n     \n     public Integral(final NewAttributeBands this$0, final String tag, final Integral previousIntegral) {\n         super(this.this$0 = this$0);\n         this.band = new ArrayList();\n         this.tag = tag;\n-        this.defaultCodec = NewAttributeBands.access$100(this$0, tag);\n+        this.defaultCodec = NewAttributeBands.access$1(this$0, tag);\n         this.previousIntegral = previousIntegral;\n     }\n     \n     public void addAttributeToBand(final NewAttribute attribute, final InputStream inputStream) {\n         Object val = null;\n         int value = 0;\n         if (this.tag.equals(\"B\") || this.tag.equals(\"FB\")) {\n-            value = (NewAttributeBands.access$200(this.this$0, 1, inputStream) & 0xFF);\n+            value = (NewAttributeBands.access$2(this.this$0, 1, inputStream) & 0xFF);\n         }\n         else if (this.tag.equals(\"SB\")) {\n-            value = NewAttributeBands.access$200(this.this$0, 1, inputStream);\n+            value = NewAttributeBands.access$2(this.this$0, 1, inputStream);\n         }\n         else if (this.tag.equals(\"H\") || this.tag.equals(\"FH\")) {\n-            value = (NewAttributeBands.access$200(this.this$0, 2, inputStream) & 0xFFFF);\n+            value = (NewAttributeBands.access$2(this.this$0, 2, inputStream) & 0xFFFF);\n         }\n         else if (this.tag.equals(\"SH\")) {\n-            value = NewAttributeBands.access$200(this.this$0, 2, inputStream);\n+            value = NewAttributeBands.access$2(this.this$0, 2, inputStream);\n         }\n         else if (this.tag.equals(\"I\") || this.tag.equals(\"FI\") || this.tag.equals(\"SI\")) {\n-            value = NewAttributeBands.access$200(this.this$0, 4, inputStream);\n+            value = NewAttributeBands.access$2(this.this$0, 4, inputStream);\n         }\n-        else if (!this.tag.equals(\"V\") && !this.tag.equals(\"FV\")) {\n-            if (!this.tag.equals(\"SV\")) {\n-                if (this.tag.startsWith(\"PO\") || this.tag.startsWith(\"OS\")) {\n-                    final char uint_type = this.tag.substring(2).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    value = NewAttributeBands.access$200(this.this$0, length, inputStream);\n-                    value += this.previousIntegral.previousPValue;\n-                    val = attribute.getLabel(value);\n-                    this.previousPValue = value;\n-                }\n-                else if (this.tag.startsWith(\"P\")) {\n-                    final char uint_type = this.tag.substring(1).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    value = NewAttributeBands.access$200(this.this$0, length, inputStream);\n-                    val = attribute.getLabel(value);\n-                    this.previousPValue = value;\n-                }\n-                else if (this.tag.startsWith(\"O\")) {\n-                    final char uint_type = this.tag.substring(1).toCharArray()[0];\n-                    final int length = this.getLength(uint_type);\n-                    value = NewAttributeBands.access$200(this.this$0, length, inputStream);\n-                    value += this.previousIntegral.previousPValue;\n-                    val = attribute.getLabel(value);\n-                    this.previousPValue = value;\n-                }\n+        else if (!this.tag.equals(\"V\") && !this.tag.equals(\"FV\") && !this.tag.equals(\"SV\")) {\n+            if (this.tag.startsWith(\"PO\") || this.tag.startsWith(\"OS\")) {\n+                final char uint_type = this.tag.substring(2).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                value = NewAttributeBands.access$2(this.this$0, length, inputStream);\n+                value += this.previousIntegral.previousPValue;\n+                val = attribute.getLabel(value);\n+                this.previousPValue = value;\n+            }\n+            else if (this.tag.startsWith(\"P\")) {\n+                final char uint_type = this.tag.substring(1).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                value = NewAttributeBands.access$2(this.this$0, length, inputStream);\n+                val = attribute.getLabel(value);\n+                this.previousPValue = value;\n+            }\n+            else if (this.tag.startsWith(\"O\")) {\n+                final char uint_type = this.tag.substring(1).toCharArray()[0];\n+                final int length = this.getLength(uint_type);\n+                value = NewAttributeBands.access$2(this.this$0, length, inputStream);\n+                value += this.previousIntegral.previousPValue;\n+                val = attribute.getLabel(value);\n+                this.previousPValue = value;\n             }\n         }\n         if (val == null) {\n             val = Integer.valueOf(value);\n         }\n         this.band.add(val);\n     }\n"}]}
