{"diffoscope-json-version": 1, "source1": "first/XpathFileGeneratorAstFilter.class", "source2": "second/XpathFileGeneratorAstFilter.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,23 +1,27 @@\n \n package com.puppycrawl.tools.checkstyle;\n \n-import java.util.HashMap;\n import java.util.List;\n import com.puppycrawl.tools.checkstyle.xpath.XpathQueryGenerator;\n import com.puppycrawl.tools.checkstyle.api.AuditEvent;\n+import java.util.HashMap;\n import com.puppycrawl.tools.checkstyle.api.Violation;\n import java.util.Map;\n \n public class XpathFileGeneratorAstFilter extends AbstractAutomaticBean implements TreeWalkerFilter\n {\n     private static final String DELIMITER = \" | \\n\";\n     private static final Map<Violation, String> MESSAGE_QUERY_MAP;\n     private int tabWidth;\n     \n+    static {\n+        MESSAGE_QUERY_MAP = new HashMap<Violation, String>();\n+    }\n+    \n     public void setTabWidth(final int tabWidth) {\n         this.tabWidth = tabWidth;\n     }\n     \n     public static String findCorrespondingXpathQuery(final AuditEvent event) {\n         return XpathFileGeneratorAstFilter.MESSAGE_QUERY_MAP.get(event.getViolation());\n     }\n@@ -33,12 +37,8 @@\n             if (!xpathQueries.isEmpty()) {\n                 final String query = String.join(\" | \\n\", xpathQueries);\n                 XpathFileGeneratorAstFilter.MESSAGE_QUERY_MAP.put(event.getViolation(), query);\n             }\n         }\n         return true;\n     }\n-    \n-    static {\n-        MESSAGE_QUERY_MAP = new HashMap<Violation, String>();\n-    }\n }\n"}]}
