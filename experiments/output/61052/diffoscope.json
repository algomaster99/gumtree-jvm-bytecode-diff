{"diffoscope-json-version": 1, "source1": "first/SerializationUtils$ClassLoaderAwareObjectInputStream.class", "source2": "second/SerializationUtils$ClassLoaderAwareObjectInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,22 +1,34 @@\n \n package org.apache.commons.lang3;\n \n-import java.util.HashMap;\n import java.io.ObjectStreamClass;\n import java.io.IOException;\n import java.io.InputStream;\n+import java.util.HashMap;\n import java.util.Map;\n import java.io.ObjectInputStream;\n \n static class ClassLoaderAwareObjectInputStream extends ObjectInputStream\n {\n     private static final Map<String, Class<?>> primitiveTypes;\n     private final ClassLoader classLoader;\n     \n+    static {\n+        (ClassLoaderAwareObjectInputStream.primitiveTypes = new HashMap()).put(\"byte\", Byte.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"short\", Short.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"int\", Integer.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"long\", Long.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"float\", Float.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"double\", Double.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"boolean\", Boolean.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"char\", Character.TYPE);\n+        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"void\", Void.TYPE);\n+    }\n+    \n     ClassLoaderAwareObjectInputStream(final InputStream in, final ClassLoader classLoader) throws IOException {\n         super(in);\n         this.classLoader = classLoader;\n     }\n     \n     @Override\n     protected Class<?> resolveClass(final ObjectStreamClass desc) throws IOException, ClassNotFoundException {\n@@ -33,20 +45,8 @@\n                 if (cls != null) {\n                     return cls;\n                 }\n                 throw cnfe;\n             }\n         }\n     }\n-    \n-    static {\n-        (ClassLoaderAwareObjectInputStream.primitiveTypes = new HashMap()).put(\"byte\", Byte.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"short\", Short.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"int\", Integer.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"long\", Long.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"float\", Float.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"double\", Double.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"boolean\", Boolean.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"char\", Character.TYPE);\n-        ClassLoaderAwareObjectInputStream.primitiveTypes.put(\"void\", Void.TYPE);\n-    }\n }\n"}]}
