{"diffoscope-json-version": 1, "source1": "first/LineNumber.class", "source2": "second/LineNumber.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,59 +6,59 @@\n import java.io.DataInput;\n \n public final class LineNumber implements Cloneable, Node\n {\n     private short startPc;\n     private short lineNumber;\n     \n-    LineNumber(final DataInput file) throws IOException {\n-        this(file.readUnsignedShort(), file.readUnsignedShort());\n+    LineNumber(final DataInput dataInput) throws IOException {\n+        this(dataInput.readUnsignedShort(), dataInput.readUnsignedShort());\n     }\n     \n-    public LineNumber(final int startPc, final int lineNumber) {\n-        this.startPc = (short)startPc;\n-        this.lineNumber = (short)lineNumber;\n+    public LineNumber(final int n, final int n2) {\n+        this.startPc = (short)n;\n+        this.lineNumber = (short)n2;\n     }\n     \n-    public LineNumber(final LineNumber c) {\n-        this(c.getStartPC(), c.getLineNumber());\n+    public LineNumber(final LineNumber lineNumber) {\n+        this(lineNumber.getStartPC(), lineNumber.getLineNumber());\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitLineNumber(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitLineNumber(this);\n     }\n     \n     public LineNumber copy() {\n         try {\n             return (LineNumber)this.clone();\n         }\n         catch (final CloneNotSupportedException ex) {\n             return null;\n         }\n     }\n     \n-    public void dump(final DataOutputStream file) throws IOException {\n-        file.writeShort(this.startPc);\n-        file.writeShort(this.lineNumber);\n+    public void dump(final DataOutputStream dataOutputStream) throws IOException {\n+        dataOutputStream.writeShort(this.startPc);\n+        dataOutputStream.writeShort(this.lineNumber);\n     }\n     \n     public int getLineNumber() {\n         return this.lineNumber & 0xFFFF;\n     }\n     \n     public int getStartPC() {\n         return this.startPc & 0xFFFF;\n     }\n     \n-    public void setLineNumber(final int lineNumber) {\n-        this.lineNumber = (short)lineNumber;\n+    public void setLineNumber(final int n) {\n+        this.lineNumber = (short)n;\n     }\n     \n-    public void setStartPC(final int startPc) {\n-        this.startPc = (short)startPc;\n+    public void setStartPC(final int n) {\n+        this.startPc = (short)n;\n     }\n     \n     @Override\n     public String toString() {\n         return \"LineNumber(\" + this.getStartPC() + \", \" + this.getLineNumber() + \")\";\n     }\n }\n"}]}
