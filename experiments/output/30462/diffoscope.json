{"diffoscope-json-version": 1, "source1": "first/CSVParser$CSVRecordIterator.class", "source2": "second/CSVParser$CSVRecordIterator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,113 +1,113 @@\n-  SHA-256 checksum 5bc5047e4280d7839f22ded1bae21ca4d56ec9c399db4e063ebe9dad374e8501\n+  SHA-256 checksum a1c3ad651fa1217c4554bade5ffd054cc3add47d0b5d5f06d904e6c969877978\n   Compiled from \"CSVParser.java\"\n class org.apache.commons.csv.CSVParser$CSVRecordIterator extends java.lang.Object implements java.util.Iterator<org.apache.commons.csv.CSVRecord>\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n-  this_class: #25                         // org/apache/commons/csv/CSVParser$CSVRecordIterator\n-  super_class: #26                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/csv/CSVParser$CSVRecordIterator\n+  super_class: #8                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 6, attributes: 3\n Constant pool:\n-   #1 = Fieldref           #25.#57        // org/apache/commons/csv/CSVParser$CSVRecordIterator.this$0:Lorg/apache/commons/csv/CSVParser;\n-   #2 = Methodref          #26.#58        // java/lang/Object.\"<init>\":()V\n-   #3 = Methodref          #59.#60        // org/apache/commons/csv/CSVParser.nextRecord:()Lorg/apache/commons/csv/CSVRecord;\n-   #4 = Class              #61            // java/io/IOException\n-   #5 = Class              #62            // java/lang/IllegalStateException\n-   #6 = Class              #63            // java/lang/StringBuilder\n-   #7 = Methodref          #6.#58         // java/lang/StringBuilder.\"<init>\":()V\n-   #8 = Methodref          #26.#64        // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #9 = Methodref          #65.#66        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n-  #10 = Methodref          #6.#67         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #11 = String             #68            //  reading next record:\n-  #12 = Methodref          #4.#69         // java/io/IOException.toString:()Ljava/lang/String;\n-  #13 = Methodref          #6.#69         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #14 = Methodref          #5.#70         // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #15 = Methodref          #59.#71        // org/apache/commons/csv/CSVParser.isClosed:()Z\n-  #16 = Fieldref           #25.#72        // org/apache/commons/csv/CSVParser$CSVRecordIterator.current:Lorg/apache/commons/csv/CSVRecord;\n-  #17 = Methodref          #25.#73        // org/apache/commons/csv/CSVParser$CSVRecordIterator.getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n-  #18 = Class              #74            // java/util/NoSuchElementException\n-  #19 = String             #75            // CSVParser has been closed\n-  #20 = Methodref          #18.#76        // java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n-  #21 = String             #77            // No more CSV records available\n-  #22 = Class              #78            // java/lang/UnsupportedOperationException\n-  #23 = Methodref          #22.#58        // java/lang/UnsupportedOperationException.\"<init>\":()V\n-  #24 = Methodref          #25.#79        // org/apache/commons/csv/CSVParser$CSVRecordIterator.next:()Lorg/apache/commons/csv/CSVRecord;\n-  #25 = Class              #80            // org/apache/commons/csv/CSVParser$CSVRecordIterator\n-  #26 = Class              #81            // java/lang/Object\n-  #27 = Class              #82            // java/util/Iterator\n-  #28 = Utf8               current\n-  #29 = Utf8               Lorg/apache/commons/csv/CSVRecord;\n-  #30 = Utf8               this$0\n-  #31 = Utf8               Lorg/apache/commons/csv/CSVParser;\n-  #32 = Utf8               <init>\n-  #33 = Utf8               (Lorg/apache/commons/csv/CSVParser;)V\n-  #34 = Utf8               Code\n-  #35 = Utf8               LineNumberTable\n-  #36 = Utf8               LocalVariableTable\n-  #37 = Utf8               this\n-  #38 = Utf8               CSVRecordIterator\n-  #39 = Utf8               InnerClasses\n-  #40 = Utf8               Lorg/apache/commons/csv/CSVParser$CSVRecordIterator;\n-  #41 = Utf8               getNextRecord\n-  #42 = Utf8               ()Lorg/apache/commons/csv/CSVRecord;\n-  #43 = Utf8               e\n-  #44 = Utf8               Ljava/io/IOException;\n-  #45 = Utf8               StackMapTable\n-  #46 = Utf8               hasNext\n-  #47 = Utf8               ()Z\n-  #48 = Utf8               next\n-  #49 = Class              #83            // org/apache/commons/csv/CSVRecord\n-  #50 = Utf8               remove\n-  #51 = Utf8               ()V\n-  #52 = Utf8               ()Ljava/lang/Object;\n-  #53 = Utf8               Signature\n-  #54 = Utf8               Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/commons/csv/CSVRecord;>;\n-  #55 = Utf8               SourceFile\n-  #56 = Utf8               CSVParser.java\n-  #57 = NameAndType        #30:#31        // this$0:Lorg/apache/commons/csv/CSVParser;\n-  #58 = NameAndType        #32:#51        // \"<init>\":()V\n-  #59 = Class              #84            // org/apache/commons/csv/CSVParser\n-  #60 = NameAndType        #85:#42        // nextRecord:()Lorg/apache/commons/csv/CSVRecord;\n-  #61 = Utf8               java/io/IOException\n-  #62 = Utf8               java/lang/IllegalStateException\n-  #63 = Utf8               java/lang/StringBuilder\n-  #64 = NameAndType        #86:#87        // getClass:()Ljava/lang/Class;\n-  #65 = Class              #88            // java/lang/Class\n-  #66 = NameAndType        #89:#90        // getSimpleName:()Ljava/lang/String;\n-  #67 = NameAndType        #91:#92        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #68 = Utf8                reading next record:\n-  #69 = NameAndType        #93:#90        // toString:()Ljava/lang/String;\n-  #70 = NameAndType        #32:#94        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #71 = NameAndType        #95:#47        // isClosed:()Z\n-  #72 = NameAndType        #28:#29        // current:Lorg/apache/commons/csv/CSVRecord;\n-  #73 = NameAndType        #41:#42        // getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n-  #74 = Utf8               java/util/NoSuchElementException\n-  #75 = Utf8               CSVParser has been closed\n-  #76 = NameAndType        #32:#96        // \"<init>\":(Ljava/lang/String;)V\n-  #77 = Utf8               No more CSV records available\n-  #78 = Utf8               java/lang/UnsupportedOperationException\n-  #79 = NameAndType        #48:#42        // next:()Lorg/apache/commons/csv/CSVRecord;\n-  #80 = Utf8               org/apache/commons/csv/CSVParser$CSVRecordIterator\n-  #81 = Utf8               java/lang/Object\n-  #82 = Utf8               java/util/Iterator\n-  #83 = Utf8               org/apache/commons/csv/CSVRecord\n-  #84 = Utf8               org/apache/commons/csv/CSVParser\n-  #85 = Utf8               nextRecord\n-  #86 = Utf8               getClass\n-  #87 = Utf8               ()Ljava/lang/Class;\n-  #88 = Utf8               java/lang/Class\n-  #89 = Utf8               getSimpleName\n-  #90 = Utf8               ()Ljava/lang/String;\n-  #91 = Utf8               append\n-  #92 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #93 = Utf8               toString\n-  #94 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #95 = Utf8               isClosed\n-  #96 = Utf8               (Ljava/lang/String;)V\n+   #1 = Fieldref           #2.#3          // org/apache/commons/csv/CSVParser$CSVRecordIterator.this$0:Lorg/apache/commons/csv/CSVParser;\n+   #2 = Class              #4             // org/apache/commons/csv/CSVParser$CSVRecordIterator\n+   #3 = NameAndType        #5:#6          // this$0:Lorg/apache/commons/csv/CSVParser;\n+   #4 = Utf8               org/apache/commons/csv/CSVParser$CSVRecordIterator\n+   #5 = Utf8               this$0\n+   #6 = Utf8               Lorg/apache/commons/csv/CSVParser;\n+   #7 = Methodref          #8.#9          // java/lang/Object.\"<init>\":()V\n+   #8 = Class              #10            // java/lang/Object\n+   #9 = NameAndType        #11:#12        // \"<init>\":()V\n+  #10 = Utf8               java/lang/Object\n+  #11 = Utf8               <init>\n+  #12 = Utf8               ()V\n+  #13 = Methodref          #14.#15        // org/apache/commons/csv/CSVParser.nextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+  #14 = Class              #16            // org/apache/commons/csv/CSVParser\n+  #15 = NameAndType        #17:#18        // nextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+  #16 = Utf8               org/apache/commons/csv/CSVParser\n+  #17 = Utf8               nextRecord\n+  #18 = Utf8               ()Lorg/apache/commons/csv/CSVRecord;\n+  #19 = Class              #20            // java/io/IOException\n+  #20 = Utf8               java/io/IOException\n+  #21 = Class              #22            // java/lang/IllegalStateException\n+  #22 = Utf8               java/lang/IllegalStateException\n+  #23 = Class              #24            // java/lang/StringBuilder\n+  #24 = Utf8               java/lang/StringBuilder\n+  #25 = Methodref          #23.#9         // java/lang/StringBuilder.\"<init>\":()V\n+  #26 = Methodref          #8.#27         // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #27 = NameAndType        #28:#29        // getClass:()Ljava/lang/Class;\n+  #28 = Utf8               getClass\n+  #29 = Utf8               ()Ljava/lang/Class;\n+  #30 = Methodref          #31.#32        // java/lang/Class.getSimpleName:()Ljava/lang/String;\n+  #31 = Class              #33            // java/lang/Class\n+  #32 = NameAndType        #34:#35        // getSimpleName:()Ljava/lang/String;\n+  #33 = Utf8               java/lang/Class\n+  #34 = Utf8               getSimpleName\n+  #35 = Utf8               ()Ljava/lang/String;\n+  #36 = Methodref          #23.#37        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = NameAndType        #38:#39        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #38 = Utf8               append\n+  #39 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #40 = String             #41            //  reading next record:\n+  #41 = Utf8                reading next record:\n+  #42 = Methodref          #19.#43        // java/io/IOException.toString:()Ljava/lang/String;\n+  #43 = NameAndType        #44:#35        // toString:()Ljava/lang/String;\n+  #44 = Utf8               toString\n+  #45 = Methodref          #23.#43        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #46 = Methodref          #21.#47        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #47 = NameAndType        #11:#48        // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #48 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #49 = Methodref          #14.#50        // org/apache/commons/csv/CSVParser.isClosed:()Z\n+  #50 = NameAndType        #51:#52        // isClosed:()Z\n+  #51 = Utf8               isClosed\n+  #52 = Utf8               ()Z\n+  #53 = Fieldref           #2.#54         // org/apache/commons/csv/CSVParser$CSVRecordIterator.current:Lorg/apache/commons/csv/CSVRecord;\n+  #54 = NameAndType        #55:#56        // current:Lorg/apache/commons/csv/CSVRecord;\n+  #55 = Utf8               current\n+  #56 = Utf8               Lorg/apache/commons/csv/CSVRecord;\n+  #57 = Methodref          #2.#58         // org/apache/commons/csv/CSVParser$CSVRecordIterator.getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+  #58 = NameAndType        #59:#18        // getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+  #59 = Utf8               getNextRecord\n+  #60 = Class              #61            // java/util/NoSuchElementException\n+  #61 = Utf8               java/util/NoSuchElementException\n+  #62 = String             #63            // CSVParser has been closed\n+  #63 = Utf8               CSVParser has been closed\n+  #64 = Methodref          #60.#65        // java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n+  #65 = NameAndType        #11:#66        // \"<init>\":(Ljava/lang/String;)V\n+  #66 = Utf8               (Ljava/lang/String;)V\n+  #67 = String             #68            // No more CSV records available\n+  #68 = Utf8               No more CSV records available\n+  #69 = Class              #70            // java/lang/UnsupportedOperationException\n+  #70 = Utf8               java/lang/UnsupportedOperationException\n+  #71 = Methodref          #69.#9         // java/lang/UnsupportedOperationException.\"<init>\":()V\n+  #72 = Methodref          #2.#73         // org/apache/commons/csv/CSVParser$CSVRecordIterator.next:()Lorg/apache/commons/csv/CSVRecord;\n+  #73 = NameAndType        #74:#18        // next:()Lorg/apache/commons/csv/CSVRecord;\n+  #74 = Utf8               next\n+  #75 = Class              #76            // java/util/Iterator\n+  #76 = Utf8               java/util/Iterator\n+  #77 = Utf8               (Lorg/apache/commons/csv/CSVParser;)V\n+  #78 = Utf8               Code\n+  #79 = Utf8               LineNumberTable\n+  #80 = Utf8               LocalVariableTable\n+  #81 = Utf8               this\n+  #82 = Utf8               Lorg/apache/commons/csv/CSVParser$CSVRecordIterator;\n+  #83 = Utf8               e\n+  #84 = Utf8               Ljava/io/IOException;\n+  #85 = Utf8               StackMapTable\n+  #86 = Utf8               hasNext\n+  #87 = Class              #88            // org/apache/commons/csv/CSVRecord\n+  #88 = Utf8               org/apache/commons/csv/CSVRecord\n+  #89 = Utf8               remove\n+  #90 = Utf8               ()Ljava/lang/Object;\n+  #91 = Utf8               Signature\n+  #92 = Utf8               Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/commons/csv/CSVRecord;>;\n+  #93 = Utf8               SourceFile\n+  #94 = Utf8               CSVParser.java\n+  #95 = Utf8               InnerClasses\n+  #96 = Utf8               CSVRecordIterator\n {\n   private org.apache.commons.csv.CSVRecord current;\n     descriptor: Lorg/apache/commons/csv/CSVRecord;\n     flags: (0x0002) ACC_PRIVATE\n \n   final org.apache.commons.csv.CSVParser this$0;\n     descriptor: Lorg/apache/commons/csv/CSVParser;\n@@ -118,15 +118,15 @@\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: putfield      #1                  // Field this$0:Lorg/apache/commons/csv/CSVParser;\n          5: aload_0\n-         6: invokespecial #2                  // Method java/lang/Object.\"<init>\":()V\n+         6: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n          9: return\n       LineNumberTable:\n         line 528: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/csv/CSVParser$CSVRecordIterator;\n             0      10     1 this$0   Lorg/apache/commons/csv/CSVParser;\n@@ -134,34 +134,34 @@\n   private org.apache.commons.csv.CSVRecord getNextRecord();\n     descriptor: ()Lorg/apache/commons/csv/CSVRecord;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field this$0:Lorg/apache/commons/csv/CSVParser;\n-         4: invokevirtual #3                  // Method org/apache/commons/csv/CSVParser.nextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+         4: invokevirtual #13                 // Method org/apache/commons/csv/CSVParser.nextRecord:()Lorg/apache/commons/csv/CSVRecord;\n          7: areturn\n          8: astore_1\n-         9: new           #5                  // class java/lang/IllegalStateException\n+         9: new           #21                 // class java/lang/IllegalStateException\n         12: dup\n-        13: new           #6                  // class java/lang/StringBuilder\n+        13: new           #23                 // class java/lang/StringBuilder\n         16: dup\n-        17: invokespecial #7                  // Method java/lang/StringBuilder.\"<init>\":()V\n+        17: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n         20: aload_1\n-        21: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        24: invokevirtual #9                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n-        27: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: ldc           #11                 // String  reading next record:\n-        32: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        24: invokevirtual #30                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;\n+        27: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: ldc           #40                 // String  reading next record:\n+        32: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         35: aload_1\n-        36: invokevirtual #12                 // Method java/io/IOException.toString:()Ljava/lang/String;\n-        39: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        36: invokevirtual #42                 // Method java/io/IOException.toString:()Ljava/lang/String;\n+        39: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         45: aload_1\n-        46: invokespecial #14                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        46: invokespecial #46                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         49: athrow\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/io/IOException\n       LineNumberTable:\n         line 533: 0\n         line 534: 8\n@@ -178,27 +178,27 @@\n   public boolean hasNext();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field this$0:Lorg/apache/commons/csv/CSVParser;\n-         4: invokevirtual #15                 // Method org/apache/commons/csv/CSVParser.isClosed:()Z\n+         4: invokevirtual #49                 // Method org/apache/commons/csv/CSVParser.isClosed:()Z\n          7: ifeq          12\n         10: iconst_0\n         11: ireturn\n         12: aload_0\n-        13: getfield      #16                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n+        13: getfield      #53                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n         16: ifnonnull     27\n         19: aload_0\n         20: aload_0\n-        21: invokespecial #17                 // Method getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n-        24: putfield      #16                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n+        21: invokespecial #57                 // Method getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+        24: putfield      #53                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n         27: aload_0\n-        28: getfield      #16                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n+        28: getfield      #53                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n         31: ifnull        38\n         34: iconst_1\n         35: goto          39\n         38: iconst_0\n         39: ireturn\n       LineNumberTable:\n         line 542: 0\n@@ -219,38 +219,38 @@\n   public org.apache.commons.csv.CSVRecord next();\n     descriptor: ()Lorg/apache/commons/csv/CSVRecord;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: getfield      #1                  // Field this$0:Lorg/apache/commons/csv/CSVParser;\n-         4: invokevirtual #15                 // Method org/apache/commons/csv/CSVParser.isClosed:()Z\n+         4: invokevirtual #49                 // Method org/apache/commons/csv/CSVParser.isClosed:()Z\n          7: ifeq          20\n-        10: new           #18                 // class java/util/NoSuchElementException\n+        10: new           #60                 // class java/util/NoSuchElementException\n         13: dup\n-        14: ldc           #19                 // String CSVParser has been closed\n-        16: invokespecial #20                 // Method java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #62                 // String CSVParser has been closed\n+        16: invokespecial #64                 // Method java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #16                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n+        21: getfield      #53                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n         24: astore_1\n         25: aload_0\n         26: aconst_null\n-        27: putfield      #16                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n+        27: putfield      #53                 // Field current:Lorg/apache/commons/csv/CSVRecord;\n         30: aload_1\n         31: ifnonnull     53\n         34: aload_0\n-        35: invokespecial #17                 // Method getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n+        35: invokespecial #57                 // Method getNextRecord:()Lorg/apache/commons/csv/CSVRecord;\n         38: astore_1\n         39: aload_1\n         40: ifnonnull     53\n-        43: new           #18                 // class java/util/NoSuchElementException\n+        43: new           #60                 // class java/util/NoSuchElementException\n         46: dup\n-        47: ldc           #21                 // String No more CSV records available\n-        49: invokespecial #20                 // Method java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n+        47: ldc           #67                 // String No more CSV records available\n+        49: invokespecial #64                 // Method java/util/NoSuchElementException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: aload_1\n         54: areturn\n       LineNumberTable:\n         line 554: 0\n         line 555: 10\n         line 557: 20\n@@ -271,35 +271,35 @@\n           locals = [ class org/apache/commons/csv/CSVRecord ]\n \n   public void remove();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #22                 // class java/lang/UnsupportedOperationException\n+         0: new           #69                 // class java/lang/UnsupportedOperationException\n          3: dup\n-         4: invokespecial #23                 // Method java/lang/UnsupportedOperationException.\"<init>\":()V\n+         4: invokespecial #71                 // Method java/lang/UnsupportedOperationException.\"<init>\":()V\n          7: athrow\n       LineNumberTable:\n         line 573: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/csv/CSVParser$CSVRecordIterator;\n \n   public java.lang.Object next();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #24                 // Method next:()Lorg/apache/commons/csv/CSVRecord;\n+         1: invokevirtual #72                 // Method next:()Lorg/apache/commons/csv/CSVRecord;\n          4: areturn\n       LineNumberTable:\n         line 528: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/csv/CSVParser$CSVRecordIterator;\n }\n-Signature: #54                          // Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/commons/csv/CSVRecord;>;\n+Signature: #92                          // Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/commons/csv/CSVRecord;>;\n SourceFile: \"CSVParser.java\"\n InnerClasses:\n-  #38= #25 of #59;                        // CSVRecordIterator=class org/apache/commons/csv/CSVParser$CSVRecordIterator of class org/apache/commons/csv/CSVParser\n+  #96= #2 of #14;                         // CSVRecordIterator=class org/apache/commons/csv/CSVParser$CSVRecordIterator of class org/apache/commons/csv/CSVParser\n"}]}
