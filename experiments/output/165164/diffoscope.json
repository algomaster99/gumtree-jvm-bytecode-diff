{"diffoscope-json-version": 1, "source1": "first/PopulationCodec.class", "source2": "second/PopulationCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,50 +1,50 @@\n-  SHA-256 checksum a4bb2031079cb761784e7207f1ae4f9a5ce0ce33e12eddac73db3a9666659975\n+  SHA-256 checksum 5294af63758b576f01eebb1f9b55d5fb646dc39e959cf204ea4eb74e46e5bb4c\n   Compiled from \"PopulationCodec.java\"\n public class org.apache.commons.compress.harmony.pack200.PopulationCodec extends org.apache.commons.compress.harmony.pack200.Codec\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #32                         // org/apache/commons/compress/harmony/pack200/PopulationCodec\n   super_class: #33                        // org/apache/commons/compress/harmony/pack200/Codec\n   interfaces: 0, fields: 5, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Methodref          #33.#100      // org/apache/commons/compress/harmony/pack200/Codec.\"<init>\":()V\n-    #2 = Fieldref           #32.#101      // org/apache/commons/compress/harmony/pack200/PopulationCodec.favouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n-    #3 = Fieldref           #32.#102      // org/apache/commons/compress/harmony/pack200/PopulationCodec.tokenCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n-    #4 = Fieldref           #32.#103      // org/apache/commons/compress/harmony/pack200/PopulationCodec.unfavouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n-    #5 = Class              #104          // java/lang/IllegalArgumentException\n-    #6 = String             #105          // L must be between 1..255\n-    #7 = Methodref          #5.#106       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #8 = Fieldref           #32.#107      // org/apache/commons/compress/harmony/pack200/PopulationCodec.l:I\n-    #9 = Class              #108          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n-   #10 = String             #109          // Population encoding does not work unless the number of elements are known\n-   #11 = Methodref          #9.#106       // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Fieldref           #32.#110      // org/apache/commons/compress/harmony/pack200/PopulationCodec.lastBandLength:I\n-   #13 = Fieldref           #32.#111      // org/apache/commons/compress/harmony/pack200/PopulationCodec.favoured:[I\n-   #14 = Class              #112          // java/lang/Integer\n+    #1 = Methodref          #33.#97       // org/apache/commons/compress/harmony/pack200/Codec.\"<init>\":()V\n+    #2 = Fieldref           #32.#98       // org/apache/commons/compress/harmony/pack200/PopulationCodec.favouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n+    #3 = Fieldref           #32.#99       // org/apache/commons/compress/harmony/pack200/PopulationCodec.tokenCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n+    #4 = Fieldref           #32.#100      // org/apache/commons/compress/harmony/pack200/PopulationCodec.unfavouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n+    #5 = Class              #101          // java/lang/IllegalArgumentException\n+    #6 = String             #102          // L must be between 1..255\n+    #7 = Methodref          #5.#103       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+    #8 = Fieldref           #32.#104      // org/apache/commons/compress/harmony/pack200/PopulationCodec.l:I\n+    #9 = Class              #105          // org/apache/commons/compress/harmony/pack200/Pack200Exception\n+   #10 = String             #106          // Population encoding does not work unless the number of elements are known\n+   #11 = Methodref          #9.#103       // org/apache/commons/compress/harmony/pack200/Pack200Exception.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Fieldref           #32.#107      // org/apache/commons/compress/harmony/pack200/PopulationCodec.lastBandLength:I\n+   #13 = Fieldref           #32.#108      // org/apache/commons/compress/harmony/pack200/PopulationCodec.favoured:[I\n+   #14 = Class              #109          // java/lang/Integer\n    #15 = Integer            2147483647\n-   #16 = Methodref          #33.#113      // org/apache/commons/compress/harmony/pack200/Codec.decode:(Ljava/io/InputStream;J)I\n-   #17 = Methodref          #114.#115     // java/lang/Math.abs:(I)I\n-   #18 = Fieldref           #33.#116      // org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #19 = Class              #117          // org/apache/commons/compress/harmony/pack200/BHSDCodec\n-   #20 = Methodref          #19.#118      // org/apache/commons/compress/harmony/pack200/BHSDCodec.\"<init>\":(III)V\n-   #21 = Methodref          #19.#119      // org/apache/commons/compress/harmony/pack200/BHSDCodec.encodes:(J)Z\n-   #22 = Class              #120          // java/lang/StringBuilder\n-   #23 = Methodref          #22.#100      // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = String             #121          // Cannot calculate token codec from\n-   #25 = Methodref          #22.#122      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #22.#123      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = String             #124          //  and\n-   #28 = Methodref          #22.#125      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #29 = Methodref          #33.#126      // org/apache/commons/compress/harmony/pack200/Codec.decodeInts:(ILjava/io/InputStream;)[I\n-   #30 = Methodref          #127.#128     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #31 = Methodref          #33.#129      // org/apache/commons/compress/harmony/pack200/Codec.encode:([I)[B\n-   #32 = Class              #130          // org/apache/commons/compress/harmony/pack200/PopulationCodec\n-   #33 = Class              #131          // org/apache/commons/compress/harmony/pack200/Codec\n+   #16 = Methodref          #33.#110      // org/apache/commons/compress/harmony/pack200/Codec.decode:(Ljava/io/InputStream;J)I\n+   #17 = Methodref          #111.#112     // java/lang/Math.abs:(I)I\n+   #18 = Fieldref           #33.#113      // org/apache/commons/compress/harmony/pack200/Codec.BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #19 = Class              #114          // org/apache/commons/compress/harmony/pack200/BHSDCodec\n+   #20 = Methodref          #19.#115      // org/apache/commons/compress/harmony/pack200/BHSDCodec.\"<init>\":(III)V\n+   #21 = Methodref          #19.#116      // org/apache/commons/compress/harmony/pack200/BHSDCodec.encodes:(J)Z\n+   #22 = Class              #117          // java/lang/StringBuilder\n+   #23 = Methodref          #22.#97       // java/lang/StringBuilder.\"<init>\":()V\n+   #24 = String             #118          // Cannot calculate token codec from\n+   #25 = Methodref          #22.#119      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #26 = Methodref          #22.#120      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #27 = String             #121          //  and\n+   #28 = Methodref          #22.#122      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #29 = Methodref          #33.#123      // org/apache/commons/compress/harmony/pack200/Codec.decodeInts:(ILjava/io/InputStream;)[I\n+   #30 = Methodref          #124.#125     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #31 = Methodref          #33.#126      // org/apache/commons/compress/harmony/pack200/Codec.encode:([I)[B\n+   #32 = Class              #127          // org/apache/commons/compress/harmony/pack200/PopulationCodec\n+   #33 = Class              #128          // org/apache/commons/compress/harmony/pack200/Codec\n    #34 = Utf8               favouredCodec\n    #35 = Utf8               Lorg/apache/commons/compress/harmony/pack200/Codec;\n    #36 = Utf8               tokenCodec\n    #37 = Utf8               unfavouredCodec\n    #38 = Utf8               l\n    #39 = Utf8               I\n    #40 = Utf8               favoured\n@@ -55,115 +55,112 @@\n    #45 = Utf8               LineNumberTable\n    #46 = Utf8               LocalVariableTable\n    #47 = Utf8               this\n    #48 = Utf8               Lorg/apache/commons/compress/harmony/pack200/PopulationCodec;\n    #49 = Utf8               unvafouredCodec\n    #50 = Utf8               (Lorg/apache/commons/compress/harmony/pack200/Codec;ILorg/apache/commons/compress/harmony/pack200/Codec;)V\n    #51 = Utf8               StackMapTable\n-   #52 = Class              #130          // org/apache/commons/compress/harmony/pack200/PopulationCodec\n-   #53 = Class              #131          // org/apache/commons/compress/harmony/pack200/Codec\n-   #54 = Utf8               decode\n-   #55 = Utf8               (Ljava/io/InputStream;)I\n-   #56 = Utf8               in\n-   #57 = Utf8               Ljava/io/InputStream;\n-   #58 = Utf8               Exceptions\n-   #59 = Class              #132          // java/io/IOException\n-   #60 = Utf8               (Ljava/io/InputStream;J)I\n-   #61 = Utf8               last\n-   #62 = Utf8               J\n-   #63 = Utf8               decodeInts\n-   #64 = Utf8               (ILjava/io/InputStream;)[I\n-   #65 = Utf8               absoluteSmallest\n-   #66 = Utf8               absoluteValue\n-   #67 = Utf8               b\n-   #68 = Utf8               codec\n-   #69 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-   #70 = Utf8               index\n-   #71 = Utf8               i\n-   #72 = Utf8               n\n-   #73 = Utf8               result\n-   #74 = Utf8               smallest\n-   #75 = Utf8               value\n-   #76 = Utf8               k\n-   #77 = Class              #133          // java/io/InputStream\n-   #78 = Class              #117          // org/apache/commons/compress/harmony/pack200/BHSDCodec\n-   #79 = Class              #41           // \"[I\"\n-   #80 = Utf8               getFavoured\n-   #81 = Utf8               ()[I\n-   #82 = Utf8               getFavouredCodec\n-   #83 = Utf8               ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n-   #84 = Utf8               getUnfavouredCodec\n-   #85 = Utf8               encode\n-   #86 = Utf8               (II)[B\n-   #87 = Utf8               (I)[B\n-   #88 = Utf8               ([I[I[I)[B\n-   #89 = Utf8               tokens\n-   #90 = Utf8               unfavoured\n-   #91 = Utf8               favoured2\n-   #92 = Utf8               favouredEncoded\n-   #93 = Utf8               [B\n-   #94 = Utf8               tokensEncoded\n-   #95 = Utf8               unfavouredEncoded\n-   #96 = Utf8               band\n-   #97 = Utf8               getTokenCodec\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               PopulationCodec.java\n-  #100 = NameAndType        #42:#134      // \"<init>\":()V\n-  #101 = NameAndType        #34:#35       // favouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n-  #102 = NameAndType        #36:#35       // tokenCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n-  #103 = NameAndType        #37:#35       // unfavouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n-  #104 = Utf8               java/lang/IllegalArgumentException\n-  #105 = Utf8               L must be between 1..255\n-  #106 = NameAndType        #42:#135      // \"<init>\":(Ljava/lang/String;)V\n-  #107 = NameAndType        #38:#39       // l:I\n-  #108 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n-  #109 = Utf8               Population encoding does not work unless the number of elements are known\n-  #110 = NameAndType        #136:#39      // lastBandLength:I\n-  #111 = NameAndType        #40:#41       // favoured:[I\n-  #112 = Utf8               java/lang/Integer\n-  #113 = NameAndType        #54:#60       // decode:(Ljava/io/InputStream;J)I\n-  #114 = Class              #137          // java/lang/Math\n-  #115 = NameAndType        #138:#139     // abs:(I)I\n-  #116 = NameAndType        #140:#69      // BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n-  #117 = Utf8               org/apache/commons/compress/harmony/pack200/BHSDCodec\n-  #118 = NameAndType        #42:#141      // \"<init>\":(III)V\n-  #119 = NameAndType        #142:#143     // encodes:(J)Z\n-  #120 = Utf8               java/lang/StringBuilder\n-  #121 = Utf8               Cannot calculate token codec from\n-  #122 = NameAndType        #144:#145     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #123 = NameAndType        #144:#146     // append:(I)Ljava/lang/StringBuilder;\n-  #124 = Utf8                and\n-  #125 = NameAndType        #147:#148     // toString:()Ljava/lang/String;\n-  #126 = NameAndType        #63:#64       // decodeInts:(ILjava/io/InputStream;)[I\n-  #127 = Class              #149          // java/lang/System\n-  #128 = NameAndType        #150:#151     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #129 = NameAndType        #85:#152      // encode:([I)[B\n-  #130 = Utf8               org/apache/commons/compress/harmony/pack200/PopulationCodec\n-  #131 = Utf8               org/apache/commons/compress/harmony/pack200/Codec\n-  #132 = Utf8               java/io/IOException\n-  #133 = Utf8               java/io/InputStream\n-  #134 = Utf8               ()V\n-  #135 = Utf8               (Ljava/lang/String;)V\n-  #136 = Utf8               lastBandLength\n-  #137 = Utf8               java/lang/Math\n-  #138 = Utf8               abs\n-  #139 = Utf8               (I)I\n-  #140 = Utf8               BYTE1\n-  #141 = Utf8               (III)V\n-  #142 = Utf8               encodes\n-  #143 = Utf8               (J)Z\n-  #144 = Utf8               append\n-  #145 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #146 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #147 = Utf8               toString\n-  #148 = Utf8               ()Ljava/lang/String;\n-  #149 = Utf8               java/lang/System\n-  #150 = Utf8               arraycopy\n-  #151 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #152 = Utf8               ([I)[B\n+   #52 = Utf8               decode\n+   #53 = Utf8               (Ljava/io/InputStream;)I\n+   #54 = Utf8               in\n+   #55 = Utf8               Ljava/io/InputStream;\n+   #56 = Utf8               Exceptions\n+   #57 = Class              #129          // java/io/IOException\n+   #58 = Utf8               (Ljava/io/InputStream;J)I\n+   #59 = Utf8               last\n+   #60 = Utf8               J\n+   #61 = Utf8               decodeInts\n+   #62 = Utf8               (ILjava/io/InputStream;)[I\n+   #63 = Utf8               absoluteSmallest\n+   #64 = Utf8               absoluteValue\n+   #65 = Utf8               b\n+   #66 = Utf8               codec\n+   #67 = Utf8               Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+   #68 = Utf8               index\n+   #69 = Utf8               i\n+   #70 = Utf8               n\n+   #71 = Utf8               result\n+   #72 = Utf8               smallest\n+   #73 = Utf8               value\n+   #74 = Utf8               k\n+   #75 = Class              #130          // java/io/InputStream\n+   #76 = Class              #41           // \"[I\"\n+   #77 = Utf8               getFavoured\n+   #78 = Utf8               ()[I\n+   #79 = Utf8               getFavouredCodec\n+   #80 = Utf8               ()Lorg/apache/commons/compress/harmony/pack200/Codec;\n+   #81 = Utf8               getUnfavouredCodec\n+   #82 = Utf8               encode\n+   #83 = Utf8               (II)[B\n+   #84 = Utf8               (I)[B\n+   #85 = Utf8               ([I[I[I)[B\n+   #86 = Utf8               tokens\n+   #87 = Utf8               unfavoured\n+   #88 = Utf8               favoured2\n+   #89 = Utf8               favouredEncoded\n+   #90 = Utf8               [B\n+   #91 = Utf8               tokensEncoded\n+   #92 = Utf8               unfavouredEncoded\n+   #93 = Utf8               band\n+   #94 = Utf8               getTokenCodec\n+   #95 = Utf8               SourceFile\n+   #96 = Utf8               PopulationCodec.java\n+   #97 = NameAndType        #42:#131      // \"<init>\":()V\n+   #98 = NameAndType        #34:#35       // favouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n+   #99 = NameAndType        #36:#35       // tokenCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n+  #100 = NameAndType        #37:#35       // unfavouredCodec:Lorg/apache/commons/compress/harmony/pack200/Codec;\n+  #101 = Utf8               java/lang/IllegalArgumentException\n+  #102 = Utf8               L must be between 1..255\n+  #103 = NameAndType        #42:#132      // \"<init>\":(Ljava/lang/String;)V\n+  #104 = NameAndType        #38:#39       // l:I\n+  #105 = Utf8               org/apache/commons/compress/harmony/pack200/Pack200Exception\n+  #106 = Utf8               Population encoding does not work unless the number of elements are known\n+  #107 = NameAndType        #133:#39      // lastBandLength:I\n+  #108 = NameAndType        #40:#41       // favoured:[I\n+  #109 = Utf8               java/lang/Integer\n+  #110 = NameAndType        #52:#58       // decode:(Ljava/io/InputStream;J)I\n+  #111 = Class              #134          // java/lang/Math\n+  #112 = NameAndType        #135:#136     // abs:(I)I\n+  #113 = NameAndType        #137:#67      // BYTE1:Lorg/apache/commons/compress/harmony/pack200/BHSDCodec;\n+  #114 = Utf8               org/apache/commons/compress/harmony/pack200/BHSDCodec\n+  #115 = NameAndType        #42:#138      // \"<init>\":(III)V\n+  #116 = NameAndType        #139:#140     // encodes:(J)Z\n+  #117 = Utf8               java/lang/StringBuilder\n+  #118 = Utf8               Cannot calculate token codec from\n+  #119 = NameAndType        #141:#142     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #120 = NameAndType        #141:#143     // append:(I)Ljava/lang/StringBuilder;\n+  #121 = Utf8                and\n+  #122 = NameAndType        #144:#145     // toString:()Ljava/lang/String;\n+  #123 = NameAndType        #61:#62       // decodeInts:(ILjava/io/InputStream;)[I\n+  #124 = Class              #146          // java/lang/System\n+  #125 = NameAndType        #147:#148     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #126 = NameAndType        #82:#149      // encode:([I)[B\n+  #127 = Utf8               org/apache/commons/compress/harmony/pack200/PopulationCodec\n+  #128 = Utf8               org/apache/commons/compress/harmony/pack200/Codec\n+  #129 = Utf8               java/io/IOException\n+  #130 = Utf8               java/io/InputStream\n+  #131 = Utf8               ()V\n+  #132 = Utf8               (Ljava/lang/String;)V\n+  #133 = Utf8               lastBandLength\n+  #134 = Utf8               java/lang/Math\n+  #135 = Utf8               abs\n+  #136 = Utf8               (I)I\n+  #137 = Utf8               BYTE1\n+  #138 = Utf8               (III)V\n+  #139 = Utf8               encodes\n+  #140 = Utf8               (J)Z\n+  #141 = Utf8               append\n+  #142 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #143 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #144 = Utf8               toString\n+  #145 = Utf8               ()Ljava/lang/String;\n+  #146 = Utf8               java/lang/System\n+  #147 = Utf8               arraycopy\n+  #148 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #149 = Utf8               ([I)[B\n {\n   private final org.apache.commons.compress.harmony.pack200.Codec favouredCodec;\n     descriptor: Lorg/apache/commons/compress/harmony/pack200/Codec;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private org.apache.commons.compress.harmony.pack200.Codec tokenCodec;\n     descriptor: Lorg/apache/commons/compress/harmony/pack200/Codec;\n"}]}
