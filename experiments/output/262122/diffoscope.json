{"diffoscope-json-version": 1, "source1": "first/TriFunction.class", "source2": "second/TriFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,12 +5,12 @@\n import java.util.function.Function;\n \n @FunctionalInterface\n public interface TriFunction<T, U, V, R>\n {\n     R apply(final T p0, final U p1, final V p2);\n     \n-    default <W> TriFunction<T, U, V, W> andThen(final Function<? super R, ? extends W> after) {\n-        Objects.requireNonNull(after);\n-        return (t, u, v) -> after.apply(this.apply(t, u, v));\n+    default <W> TriFunction<T, U, V, W> andThen(final Function<? super R, ? extends W> obj) {\n+        Objects.requireNonNull(obj);\n+        return (o, o2, o3) -> function.apply(this.apply(o, o2, o3));\n     }\n }\n"}]}
