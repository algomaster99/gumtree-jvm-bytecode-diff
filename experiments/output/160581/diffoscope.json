{"diffoscope-json-version": 1, "source1": "first/VersionUtil.class", "source2": "second/VersionUtil.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -29,19 +29,19 @@\n         Version v = null;\n         try {\n             final String versionInfoClassName = String.valueOf(cls.getPackage().getName()) + \".PackageVersion\";\n             final Class<?> vClass = Class.forName(versionInfoClassName, true, cls.getClassLoader());\n             try {\n                 v = ((Versioned)vClass.getDeclaredConstructor((Class<?>[])new Class[0]).newInstance(new Object[0])).version();\n             }\n-            catch (final Exception ex) {\n+            catch (final Exception e) {\n                 throw new IllegalArgumentException(\"Failed to get Versioned out of \" + vClass);\n             }\n         }\n-        catch (final Exception ex2) {}\n+        catch (final Exception ex) {}\n         return (v == null) ? Version.unknownVersion() : v;\n     }\n     \n     @Deprecated\n     public static Version packageVersionFor(final Class<?> cls) {\n         return versionFor(cls);\n     }\n"}]}
