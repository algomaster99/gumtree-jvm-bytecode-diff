{"diffoscope-json-version": 1, "source1": "first/XZUtils.class", "source2": "second/XZUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,134 +1,134 @@\n-  SHA-256 checksum fb1e663a6614fefd33be3750ad0bd9cbc5b7126a11009fbeef12103bf1b94726\n+  SHA-256 checksum 8b47fcce64d90eab8d7cff6612beaaec2b09e9be6c74e8209c22c8d62c6220e8\n   Compiled from \"XZUtils.java\"\n public class org.apache.commons.compress.compressors.xz.XZUtils\n   minor version: 0\n   major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #26                         // org/apache/commons/compress/compressors/xz/XZUtils\n-  super_class: #27                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/compressors/xz/XZUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 3, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Methodref          #27.#79       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #26.#80       // org/apache/commons/compress/compressors/xz/XZUtils.HEADER_MAGIC:[B\n-    #3 = Fieldref           #26.#81       // org/apache/commons/compress/compressors/xz/XZUtils.cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-    #4 = Fieldref           #28.#82       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-    #5 = Fieldref           #28.#83       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-    #6 = Methodref          #26.#84       // org/apache/commons/compress/compressors/xz/XZUtils.internalIsXZCompressionAvailable:()Z\n-    #7 = Methodref          #85.#86       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.matches:([BI)Z\n-    #8 = Class              #87           // java/lang/NoClassDefFoundError\n-    #9 = Fieldref           #26.#88       // org/apache/commons/compress/compressors/xz/XZUtils.fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n-   #10 = Methodref          #22.#89       // org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z\n-   #11 = Methodref          #22.#90       // org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #12 = Methodref          #22.#91       // org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #13 = Fieldref           #28.#92       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #14 = Class              #93           // java/util/HashMap\n-   #15 = Methodref          #14.#79       // java/util/HashMap.\"<init>\":()V\n-   #16 = String             #94           // .txz\n-   #17 = String             #95           // .tar\n-   #18 = InterfaceMethodref #76.#96       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #19 = String             #97           // .xz\n-   #20 = String             #98           //\n-   #21 = String             #99           // -xz\n-   #22 = Class              #100          // org/apache/commons/compress/compressors/FileNameUtil\n-   #23 = Methodref          #22.#101      // org/apache/commons/compress/compressors/FileNameUtil.\"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n-   #24 = Methodref          #102.#103     // org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z\n-   #25 = Methodref          #26.#104      // org/apache/commons/compress/compressors/xz/XZUtils.setCacheXZAvailablity:(Z)V\n-   #26 = Class              #105          // org/apache/commons/compress/compressors/xz/XZUtils\n-   #27 = Class              #106          // java/lang/Object\n-   #28 = Class              #107          // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n-   #29 = Utf8               CachedAvailability\n-   #30 = Utf8               InnerClasses\n-   #31 = Utf8               fileNameUtil\n-   #32 = Utf8               Lorg/apache/commons/compress/compressors/FileNameUtil;\n-   #33 = Utf8               HEADER_MAGIC\n-   #34 = Utf8               [B\n-   #35 = Utf8               cachedXZAvailability\n-   #36 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #37 = Utf8               <init>\n-   #38 = Utf8               ()V\n-   #39 = Utf8               Code\n-   #40 = Utf8               LineNumberTable\n-   #41 = Utf8               LocalVariableTable\n-   #42 = Utf8               this\n-   #43 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZUtils;\n-   #44 = Utf8               matches\n-   #45 = Utf8               ([BI)Z\n-   #46 = Utf8               i\n-   #47 = Utf8               I\n-   #48 = Utf8               signature\n-   #49 = Utf8               length\n-   #50 = Utf8               StackMapTable\n-   #51 = Utf8               isXZCompressionAvailable\n-   #52 = Utf8               ()Z\n-   #53 = Utf8               cachedResult\n-   #54 = Utf8               internalIsXZCompressionAvailable\n-   #55 = Utf8               error\n-   #56 = Utf8               Ljava/lang/NoClassDefFoundError;\n-   #57 = Utf8               isCompressedFilename\n-   #58 = Utf8               (Ljava/lang/String;)Z\n-   #59 = Utf8               fileName\n-   #60 = Utf8               Ljava/lang/String;\n-   #61 = Utf8               getUncompressedFilename\n-   #62 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #63 = Utf8               getCompressedFilename\n-   #64 = Utf8               setCacheXZAvailablity\n-   #65 = Utf8               (Z)V\n-   #66 = Utf8               hasXz\n-   #67 = Utf8               Z\n-   #68 = Utf8               doCache\n-   #69 = Utf8               getCachedXZAvailability\n-   #70 = Utf8               ()Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #71 = Utf8               <clinit>\n-   #72 = Utf8               uncompressSuffix\n-   #73 = Utf8               Ljava/util/Map;\n-   #74 = Utf8               LocalVariableTypeTable\n-   #75 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n-   #76 = Class              #108          // java/util/Map\n-   #77 = Utf8               SourceFile\n-   #78 = Utf8               XZUtils.java\n-   #79 = NameAndType        #37:#38       // \"<init>\":()V\n-   #80 = NameAndType        #33:#34       // HEADER_MAGIC:[B\n-   #81 = NameAndType        #35:#36       // cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #82 = NameAndType        #109:#36      // DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #83 = NameAndType        #110:#36      // CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #84 = NameAndType        #54:#52       // internalIsXZCompressionAvailable:()Z\n-   #85 = Class              #111          // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-   #86 = NameAndType        #44:#45       // matches:([BI)Z\n-   #87 = Utf8               java/lang/NoClassDefFoundError\n-   #88 = NameAndType        #31:#32       // fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n-   #89 = NameAndType        #57:#58       // isCompressedFilename:(Ljava/lang/String;)Z\n-   #90 = NameAndType        #61:#62       // getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #91 = NameAndType        #63:#62       // getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n-   #92 = NameAndType        #112:#36      // CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-   #93 = Utf8               java/util/HashMap\n-   #94 = Utf8               .txz\n-   #95 = Utf8               .tar\n-   #96 = NameAndType        #113:#114     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #97 = Utf8               .xz\n-   #98 = Utf8\n-   #99 = Utf8               -xz\n-  #100 = Utf8               org/apache/commons/compress/compressors/FileNameUtil\n-  #101 = NameAndType        #37:#115      // \"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n-  #102 = Class              #116          // org/apache/commons/compress/utils/OsgiUtils\n-  #103 = NameAndType        #117:#52      // isRunningInOsgiEnvironment:()Z\n-  #104 = NameAndType        #64:#65       // setCacheXZAvailablity:(Z)V\n-  #105 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils\n-  #106 = Utf8               java/lang/Object\n-  #107 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n-  #108 = Utf8               java/util/Map\n-  #109 = Utf8               DONT_CACHE\n-  #110 = Utf8               CACHED_AVAILABLE\n-  #111 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n-  #112 = Utf8               CACHED_UNAVAILABLE\n-  #113 = Utf8               put\n-  #114 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #115 = Utf8               (Ljava/util/Map;Ljava/lang/String;)V\n-  #116 = Utf8               org/apache/commons/compress/utils/OsgiUtils\n-  #117 = Utf8               isRunningInOsgiEnvironment\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/compress/compressors/xz/XZUtils.HEADER_MAGIC:[B\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/xz/XZUtils\n+    #9 = NameAndType        #11:#12       // HEADER_MAGIC:[B\n+   #10 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils\n+   #11 = Utf8               HEADER_MAGIC\n+   #12 = Utf8               [B\n+   #13 = Fieldref           #8.#14        // org/apache/commons/compress/compressors/xz/XZUtils.cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #14 = NameAndType        #15:#16       // cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #15 = Utf8               cachedXZAvailability\n+   #16 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #17 = Fieldref           #18.#19       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #18 = Class              #20           // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n+   #19 = NameAndType        #21:#16       // DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #20 = Utf8               org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability\n+   #21 = Utf8               DONT_CACHE\n+   #22 = Fieldref           #18.#23       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #23 = NameAndType        #24:#16       // CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #24 = Utf8               CACHED_AVAILABLE\n+   #25 = Methodref          #8.#26        // org/apache/commons/compress/compressors/xz/XZUtils.internalIsXZCompressionAvailable:()Z\n+   #26 = NameAndType        #27:#28       // internalIsXZCompressionAvailable:()Z\n+   #27 = Utf8               internalIsXZCompressionAvailable\n+   #28 = Utf8               ()Z\n+   #29 = Methodref          #30.#31       // org/apache/commons/compress/compressors/xz/XZCompressorInputStream.matches:([BI)Z\n+   #30 = Class              #32           // org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+   #31 = NameAndType        #33:#34       // matches:([BI)Z\n+   #32 = Utf8               org/apache/commons/compress/compressors/xz/XZCompressorInputStream\n+   #33 = Utf8               matches\n+   #34 = Utf8               ([BI)Z\n+   #35 = Class              #36           // java/lang/NoClassDefFoundError\n+   #36 = Utf8               java/lang/NoClassDefFoundError\n+   #37 = Fieldref           #8.#38        // org/apache/commons/compress/compressors/xz/XZUtils.fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+   #38 = NameAndType        #39:#40       // fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+   #39 = Utf8               fileNameUtil\n+   #40 = Utf8               Lorg/apache/commons/compress/compressors/FileNameUtil;\n+   #41 = Methodref          #42.#43       // org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z\n+   #42 = Class              #44           // org/apache/commons/compress/compressors/FileNameUtil\n+   #43 = NameAndType        #45:#46       // isCompressedFilename:(Ljava/lang/String;)Z\n+   #44 = Utf8               org/apache/commons/compress/compressors/FileNameUtil\n+   #45 = Utf8               isCompressedFilename\n+   #46 = Utf8               (Ljava/lang/String;)Z\n+   #47 = Methodref          #42.#48       // org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #48 = NameAndType        #49:#50       // getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #49 = Utf8               getUncompressedFilename\n+   #50 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #51 = Methodref          #42.#52       // org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #52 = NameAndType        #53:#50       // getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+   #53 = Utf8               getCompressedFilename\n+   #54 = Fieldref           #18.#55       // org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #55 = NameAndType        #56:#16       // CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+   #56 = Utf8               CACHED_UNAVAILABLE\n+   #57 = Class              #58           // java/util/HashMap\n+   #58 = Utf8               java/util/HashMap\n+   #59 = Methodref          #57.#3        // java/util/HashMap.\"<init>\":()V\n+   #60 = String             #61           // .txz\n+   #61 = Utf8               .txz\n+   #62 = String             #63           // .tar\n+   #63 = Utf8               .tar\n+   #64 = InterfaceMethodref #65.#66       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #65 = Class              #67           // java/util/Map\n+   #66 = NameAndType        #68:#69       // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #67 = Utf8               java/util/Map\n+   #68 = Utf8               put\n+   #69 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #70 = String             #71           // .xz\n+   #71 = Utf8               .xz\n+   #72 = String             #73           //\n+   #73 = Utf8\n+   #74 = String             #75           // -xz\n+   #75 = Utf8               -xz\n+   #76 = Methodref          #42.#77       // org/apache/commons/compress/compressors/FileNameUtil.\"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n+   #77 = NameAndType        #5:#78        // \"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n+   #78 = Utf8               (Ljava/util/Map;Ljava/lang/String;)V\n+   #79 = Methodref          #80.#81       // org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z\n+   #80 = Class              #82           // org/apache/commons/compress/utils/OsgiUtils\n+   #81 = NameAndType        #83:#28       // isRunningInOsgiEnvironment:()Z\n+   #82 = Utf8               org/apache/commons/compress/utils/OsgiUtils\n+   #83 = Utf8               isRunningInOsgiEnvironment\n+   #84 = Methodref          #8.#85        // org/apache/commons/compress/compressors/xz/XZUtils.setCacheXZAvailablity:(Z)V\n+   #85 = NameAndType        #86:#87       // setCacheXZAvailablity:(Z)V\n+   #86 = Utf8               setCacheXZAvailablity\n+   #87 = Utf8               (Z)V\n+   #88 = Utf8               Code\n+   #89 = Utf8               LineNumberTable\n+   #90 = Utf8               LocalVariableTable\n+   #91 = Utf8               this\n+   #92 = Utf8               Lorg/apache/commons/compress/compressors/xz/XZUtils;\n+   #93 = Utf8               i\n+   #94 = Utf8               I\n+   #95 = Utf8               signature\n+   #96 = Utf8               length\n+   #97 = Utf8               StackMapTable\n+   #98 = Utf8               isXZCompressionAvailable\n+   #99 = Utf8               cachedResult\n+  #100 = Utf8               error\n+  #101 = Utf8               Ljava/lang/NoClassDefFoundError;\n+  #102 = Utf8               fileName\n+  #103 = Utf8               Ljava/lang/String;\n+  #104 = Utf8               hasXz\n+  #105 = Utf8               Z\n+  #106 = Utf8               doCache\n+  #107 = Utf8               getCachedXZAvailability\n+  #108 = Utf8               ()Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+  #109 = Utf8               <clinit>\n+  #110 = Utf8               uncompressSuffix\n+  #111 = Utf8               Ljava/util/Map;\n+  #112 = Utf8               LocalVariableTypeTable\n+  #113 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\n+  #114 = Utf8               SourceFile\n+  #115 = Utf8               XZUtils.java\n+  #116 = Utf8               InnerClasses\n+  #117 = Utf8               CachedAvailability\n {\n   private static final org.apache.commons.compress.compressors.FileNameUtil fileNameUtil;\n     descriptor: Lorg/apache/commons/compress/compressors/FileNameUtil;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final byte[] HEADER_MAGIC;\n     descriptor: [B\n@@ -155,29 +155,29 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #2                  // Field HEADER_MAGIC:[B\n+         1: getstatic     #7                  // Field HEADER_MAGIC:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: iconst_0\n         11: istore_2\n         12: iload_2\n-        13: getstatic     #2                  // Field HEADER_MAGIC:[B\n+        13: getstatic     #7                  // Field HEADER_MAGIC:[B\n         16: arraylength\n         17: if_icmpge     39\n         20: aload_0\n         21: iload_2\n         22: baload\n-        23: getstatic     #2                  // Field HEADER_MAGIC:[B\n+        23: getstatic     #7                  // Field HEADER_MAGIC:[B\n         26: iload_2\n         27: baload\n         28: if_icmpeq     33\n         31: iconst_0\n         32: ireturn\n         33: iinc          2, 1\n         36: goto          12\n@@ -206,27 +206,27 @@\n           offset_delta = 5\n \n   public static boolean isXZCompressionAvailable();\n     descriptor: ()Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=0\n-         0: getstatic     #3                  // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+         0: getstatic     #13                 // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n          3: astore_0\n          4: aload_0\n-         5: getstatic     #4                  // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+         5: getstatic     #17                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n          8: if_acmpeq     24\n         11: aload_0\n-        12: getstatic     #5                  // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        12: getstatic     #22                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n         15: if_acmpne     22\n         18: iconst_1\n         19: goto          23\n         22: iconst_0\n         23: ireturn\n-        24: invokestatic  #6                  // Method internalIsXZCompressionAvailable:()Z\n+        24: invokestatic  #25                 // Method internalIsXZCompressionAvailable:()Z\n         27: ireturn\n       LineNumberTable:\n         line 97: 0\n         line 98: 4\n         line 99: 11\n         line 101: 24\n       LocalVariableTable:\n@@ -243,15 +243,15 @@\n   private static boolean internalIsXZCompressionAvailable();\n     descriptor: ()Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=0\n          0: aconst_null\n          1: iconst_0\n-         2: invokestatic  #7                  // Method org/apache/commons/compress/compressors/xz/XZCompressorInputStream.matches:([BI)Z\n+         2: invokestatic  #29                 // Method org/apache/commons/compress/compressors/xz/XZCompressorInputStream.matches:([BI)Z\n          5: pop\n          6: iconst_1\n          7: ireturn\n          8: astore_0\n          9: iconst_0\n         10: ireturn\n       Exception table:\n@@ -270,75 +270,75 @@\n           stack = [ class java/lang/NoClassDefFoundError ]\n \n   public static boolean isCompressedFilename(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+         0: getstatic     #37                 // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n          3: aload_0\n-         4: invokevirtual #10                 // Method org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z\n+         4: invokevirtual #41                 // Method org/apache/commons/compress/compressors/FileNameUtil.isCompressedFilename:(Ljava/lang/String;)Z\n          7: ireturn\n       LineNumberTable:\n         line 121: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 fileName   Ljava/lang/String;\n \n   public static java.lang.String getUncompressedFilename(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+         0: getstatic     #37                 // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n          3: aload_0\n-         4: invokevirtual #11                 // Method org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+         4: invokevirtual #47                 // Method org/apache/commons/compress/compressors/FileNameUtil.getUncompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 138: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 fileName   Ljava/lang/String;\n \n   public static java.lang.String getCompressedFilename(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: getstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+         0: getstatic     #37                 // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n          3: aload_0\n-         4: invokevirtual #12                 // Method org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n+         4: invokevirtual #51                 // Method org/apache/commons/compress/compressors/FileNameUtil.getCompressedFilename:(Ljava/lang/String;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 fileName   Ljava/lang/String;\n \n   public static void setCacheXZAvailablity(boolean);\n     descriptor: (Z)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: iload_0\n          1: ifne          13\n-         4: getstatic     #4                  // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-         7: putstatic     #3                  // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+         4: getstatic     #17                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+         7: putstatic     #13                 // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n         10: goto          42\n-        13: getstatic     #3                  // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-        16: getstatic     #4                  // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        13: getstatic     #13                 // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        16: getstatic     #17                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n         19: if_acmpne     42\n-        22: invokestatic  #6                  // Method internalIsXZCompressionAvailable:()Z\n+        22: invokestatic  #25                 // Method internalIsXZCompressionAvailable:()Z\n         25: istore_1\n         26: iload_1\n         27: ifeq          36\n-        30: getstatic     #5                  // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        30: getstatic     #22                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_AVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n         33: goto          39\n-        36: getstatic     #13                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-        39: putstatic     #3                  // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        36: getstatic     #54                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.CACHED_UNAVAILABLE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        39: putstatic     #13                 // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n         42: return\n       LineNumberTable:\n         line 164: 0\n         line 165: 4\n         line 166: 13\n         line 167: 22\n         line 168: 26\n@@ -359,15 +359,15 @@\n           offset_delta = 2\n \n   static org.apache.commons.compress.compressors.xz.XZUtils$CachedAvailability getCachedXZAvailability();\n     descriptor: ()Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #3                  // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+         0: getstatic     #13                 // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n          3: areturn\n       LineNumberTable:\n         line 175: 0\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n@@ -395,48 +395,48 @@\n         25: iconst_4\n         26: bipush        90\n         28: bastore\n         29: dup\n         30: iconst_5\n         31: iconst_0\n         32: bastore\n-        33: putstatic     #2                  // Field HEADER_MAGIC:[B\n-        36: new           #14                 // class java/util/HashMap\n+        33: putstatic     #7                  // Field HEADER_MAGIC:[B\n+        36: new           #57                 // class java/util/HashMap\n         39: dup\n-        40: invokespecial #15                 // Method java/util/HashMap.\"<init>\":()V\n+        40: invokespecial #59                 // Method java/util/HashMap.\"<init>\":()V\n         43: astore_0\n         44: aload_0\n-        45: ldc           #16                 // String .txz\n-        47: ldc           #17                 // String .tar\n-        49: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        45: ldc           #60                 // String .txz\n+        47: ldc           #62                 // String .tar\n+        49: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         54: pop\n         55: aload_0\n-        56: ldc           #19                 // String .xz\n-        58: ldc           #20                 // String\n-        60: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        56: ldc           #70                 // String .xz\n+        58: ldc           #72                 // String\n+        60: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         65: pop\n         66: aload_0\n-        67: ldc           #21                 // String -xz\n-        69: ldc           #20                 // String\n-        71: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        67: ldc           #74                 // String -xz\n+        69: ldc           #72                 // String\n+        71: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n         76: pop\n-        77: new           #22                 // class org/apache/commons/compress/compressors/FileNameUtil\n+        77: new           #42                 // class org/apache/commons/compress/compressors/FileNameUtil\n         80: dup\n         81: aload_0\n-        82: ldc           #19                 // String .xz\n-        84: invokespecial #23                 // Method org/apache/commons/compress/compressors/FileNameUtil.\"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n-        87: putstatic     #9                  // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n-        90: getstatic     #4                  // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-        93: putstatic     #3                  // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n-        96: invokestatic  #24                 // Method org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z\n+        82: ldc           #70                 // String .xz\n+        84: invokespecial #76                 // Method org/apache/commons/compress/compressors/FileNameUtil.\"<init>\":(Ljava/util/Map;Ljava/lang/String;)V\n+        87: putstatic     #37                 // Field fileNameUtil:Lorg/apache/commons/compress/compressors/FileNameUtil;\n+        90: getstatic     #17                 // Field org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability.DONT_CACHE:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        93: putstatic     #13                 // Field cachedXZAvailability:Lorg/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability;\n+        96: invokestatic  #79                 // Method org/apache/commons/compress/utils/OsgiUtils.isRunningInOsgiEnvironment:()Z\n         99: ifne          106\n        102: iconst_1\n        103: goto          107\n        106: iconst_0\n-       107: invokestatic  #25                 // Method setCacheXZAvailablity:(Z)V\n+       107: invokestatic  #84                 // Method setCacheXZAvailablity:(Z)V\n        110: return\n       LineNumberTable:\n         line 41: 0\n         line 52: 36\n         line 53: 44\n         line 54: 55\n         line 55: 66\n@@ -455,8 +455,8 @@\n           offset_delta = 106\n           locals = [ class java/util/Map ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n }\n SourceFile: \"XZUtils.java\"\n InnerClasses:\n-  static final #29= #28 of #26;           // CachedAvailability=class org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability of class org/apache/commons/compress/compressors/xz/XZUtils\n+  static final #117= #18 of #8;           // CachedAvailability=class org/apache/commons/compress/compressors/xz/XZUtils$CachedAvailability of class org/apache/commons/compress/compressors/xz/XZUtils\n"}]}
