{"diffoscope-json-version": 1, "source1": "first/AttrDefinitionBands.class", "source2": "second/AttrDefinitionBands.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,33 +31,32 @@\n         this.cpUTF8 = segment.getCpBands().getCpUTF8();\n     }\n     \n     public AttributeLayoutMap getAttributeDefinitionMap() {\n         return this.attributeDefinitionMap;\n     }\n     \n-    public void read(final InputStream in) throws IOException, Pack200Exception {\n+    public void read(final InputStream inputStream) throws IOException, Pack200Exception {\n         final int attributeDefinitionCount = this.header.getAttributeDefinitionCount();\n-        this.attributeDefinitionHeader = this.decodeBandInt(\"attr_definition_headers\", in, Codec.BYTE1, attributeDefinitionCount);\n-        this.attributeDefinitionName = this.parseReferences(\"attr_definition_name\", in, Codec.UNSIGNED5, attributeDefinitionCount, this.cpUTF8);\n-        this.attributeDefinitionLayout = this.parseReferences(\"attr_definition_layout\", in, Codec.UNSIGNED5, attributeDefinitionCount, this.cpUTF8);\n+        this.attributeDefinitionHeader = this.decodeBandInt(\"attr_definition_headers\", inputStream, Codec.BYTE1, attributeDefinitionCount);\n+        this.attributeDefinitionName = this.parseReferences(\"attr_definition_name\", inputStream, Codec.UNSIGNED5, attributeDefinitionCount, this.cpUTF8);\n+        this.attributeDefinitionLayout = this.parseReferences(\"attr_definition_layout\", inputStream, Codec.UNSIGNED5, attributeDefinitionCount, this.cpUTF8);\n         this.attributeDefinitionMap = new AttributeLayoutMap();\n-        int overflowIndex = 32;\n+        int n = 32;\n         if (this.segment.getSegmentHeader().getOptions().hasClassFlagsHi()) {\n-            overflowIndex = 63;\n+            n = 63;\n         }\n         for (int i = 0; i < attributeDefinitionCount; ++i) {\n-            final int context = this.attributeDefinitionHeader[i] & 0x3;\n-            int index = (this.attributeDefinitionHeader[i] >> 2) - 1;\n-            if (index == -1) {\n-                index = overflowIndex++;\n+            final int n2 = this.attributeDefinitionHeader[i] & 0x3;\n+            int n3 = (this.attributeDefinitionHeader[i] >> 2) - 1;\n+            if (n3 == -1) {\n+                n3 = n++;\n             }\n-            final AttributeLayout layout = new AttributeLayout(this.attributeDefinitionName[i], context, this.attributeDefinitionLayout[i], index, false);\n-            final NewAttributeBands newBands = new NewAttributeBands(this.segment, layout);\n-            this.attributeDefinitionMap.add(layout, newBands);\n+            final AttributeLayout attributeLayout = new AttributeLayout(this.attributeDefinitionName[i], n2, this.attributeDefinitionLayout[i], n3, false);\n+            this.attributeDefinitionMap.add(attributeLayout, new NewAttributeBands(this.segment, attributeLayout));\n         }\n         this.attributeDefinitionMap.checkMap();\n         this.setupDefaultAttributeNames();\n     }\n     \n     private void setupDefaultAttributeNames() {\n         AnnotationDefaultAttribute.setAttributeName(this.segment.getCpBands().cpUTF8Value(\"AnnotationDefault\"));\n"}]}
