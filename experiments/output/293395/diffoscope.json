{"diffoscope-json-version": 1, "source1": "first/ConstantCP.class", "source2": "second/ConstantCP.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,202 +1,202 @@\n-  SHA-256 checksum 63d1a30e8ada01109db0bb99bdd756ffe7c37db7568fbf8e66690548402900ea\n+  SHA-256 checksum 09be0a0bb2cc85d84eac2fa08afcd12d39877433764ba3b7c6e1b8114c411151\n   Compiled from \"ConstantCP.java\"\n public abstract class org.apache.bcel.classfile.ConstantCP extends org.apache.bcel.classfile.Constant\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #23                         // org/apache/bcel/classfile/ConstantCP\n+  this_class: #2                          // org/apache/bcel/classfile/ConstantCP\n   super_class: #24                        // org/apache/bcel/classfile/Constant\n   interfaces: 0, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-   #1 = Methodref          #23.#53        // org/apache/bcel/classfile/ConstantCP.getTag:()B\n-   #2 = Methodref          #23.#54        // org/apache/bcel/classfile/ConstantCP.getClassIndex:()I\n-   #3 = Methodref          #23.#55        // org/apache/bcel/classfile/ConstantCP.getNameAndTypeIndex:()I\n-   #4 = Methodref          #23.#56        // org/apache/bcel/classfile/ConstantCP.\"<init>\":(BII)V\n-   #5 = InterfaceMethodref #57.#58        // java/io/DataInput.readUnsignedShort:()I\n-   #6 = Methodref          #24.#59        // org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n-   #7 = Fieldref           #23.#60        // org/apache/bcel/classfile/ConstantCP.class_index:I\n-   #8 = Fieldref           #23.#61        // org/apache/bcel/classfile/ConstantCP.name_and_type_index:I\n-   #9 = Methodref          #24.#53        // org/apache/bcel/classfile/Constant.getTag:()B\n-  #10 = Methodref          #62.#63        // java/io/DataOutputStream.writeByte:(I)V\n-  #11 = Methodref          #62.#64        // java/io/DataOutputStream.writeShort:(I)V\n-  #12 = Class              #65            // org/apache/bcel/Const\n-  #13 = Methodref          #66.#67        // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-  #14 = Class              #68            // java/lang/StringBuilder\n-  #15 = Methodref          #14.#69        // java/lang/StringBuilder.\"<init>\":()V\n-  #16 = Methodref          #24.#70        // org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n-  #17 = Methodref          #14.#71        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #18 = String             #72            // (class_index =\n-  #19 = Methodref          #14.#73        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #20 = String             #74            // , name_and_type_index =\n-  #21 = String             #75            // )\n-  #22 = Methodref          #14.#70        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #23 = Class              #76            // org/apache/bcel/classfile/ConstantCP\n-  #24 = Class              #77            // org/apache/bcel/classfile/Constant\n-  #25 = Utf8               class_index\n-  #26 = Utf8               I\n-  #27 = Utf8               Deprecated\n-  #28 = Utf8               RuntimeVisibleAnnotations\n-  #29 = Utf8               Ljava/lang/Deprecated;\n-  #30 = Utf8               name_and_type_index\n-  #31 = Utf8               <init>\n-  #32 = Utf8               (Lorg/apache/bcel/classfile/ConstantCP;)V\n-  #33 = Utf8               Code\n-  #34 = Utf8               LineNumberTable\n-  #35 = Utf8               (BLjava/io/DataInput;)V\n-  #36 = Utf8               Exceptions\n-  #37 = Class              #78            // java/io/IOException\n-  #38 = Utf8               (BII)V\n-  #39 = Utf8               dump\n-  #40 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #41 = Utf8               getClassIndex\n-  #42 = Utf8               ()I\n-  #43 = Utf8               setClassIndex\n-  #44 = Utf8               (I)V\n-  #45 = Utf8               getNameAndTypeIndex\n-  #46 = Utf8               setNameAndTypeIndex\n-  #47 = Utf8               getClass\n-  #48 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-  #49 = Utf8               toString\n-  #50 = Utf8               ()Ljava/lang/String;\n-  #51 = Utf8               SourceFile\n-  #52 = Utf8               ConstantCP.java\n-  #53 = NameAndType        #79:#80        // getTag:()B\n-  #54 = NameAndType        #41:#42        // getClassIndex:()I\n-  #55 = NameAndType        #45:#42        // getNameAndTypeIndex:()I\n-  #56 = NameAndType        #31:#38        // \"<init>\":(BII)V\n-  #57 = Class              #81            // java/io/DataInput\n-  #58 = NameAndType        #82:#42        // readUnsignedShort:()I\n-  #59 = NameAndType        #31:#83        // \"<init>\":(B)V\n-  #60 = NameAndType        #25:#26        // class_index:I\n-  #61 = NameAndType        #30:#26        // name_and_type_index:I\n-  #62 = Class              #84            // java/io/DataOutputStream\n-  #63 = NameAndType        #85:#44        // writeByte:(I)V\n-  #64 = NameAndType        #86:#44        // writeShort:(I)V\n-  #65 = Utf8               org/apache/bcel/Const\n-  #66 = Class              #87            // org/apache/bcel/classfile/ConstantPool\n-  #67 = NameAndType        #88:#89        // constantToString:(IB)Ljava/lang/String;\n-  #68 = Utf8               java/lang/StringBuilder\n-  #69 = NameAndType        #31:#90        // \"<init>\":()V\n-  #70 = NameAndType        #49:#50        // toString:()Ljava/lang/String;\n-  #71 = NameAndType        #91:#92        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #72 = Utf8               (class_index =\n-  #73 = NameAndType        #91:#93        // append:(I)Ljava/lang/StringBuilder;\n-  #74 = Utf8               , name_and_type_index =\n-  #75 = Utf8               )\n-  #76 = Utf8               org/apache/bcel/classfile/ConstantCP\n-  #77 = Utf8               org/apache/bcel/classfile/Constant\n-  #78 = Utf8               java/io/IOException\n-  #79 = Utf8               getTag\n-  #80 = Utf8               ()B\n-  #81 = Utf8               java/io/DataInput\n-  #82 = Utf8               readUnsignedShort\n-  #83 = Utf8               (B)V\n-  #84 = Utf8               java/io/DataOutputStream\n-  #85 = Utf8               writeByte\n-  #86 = Utf8               writeShort\n-  #87 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #88 = Utf8               constantToString\n-  #89 = Utf8               (IB)Ljava/lang/String;\n-  #90 = Utf8               ()V\n-  #91 = Utf8               append\n-  #92 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #93 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #1 = Methodref          #2.#3          // org/apache/bcel/classfile/ConstantCP.getTag:()B\n+   #2 = Class              #4             // org/apache/bcel/classfile/ConstantCP\n+   #3 = NameAndType        #5:#6          // getTag:()B\n+   #4 = Utf8               org/apache/bcel/classfile/ConstantCP\n+   #5 = Utf8               getTag\n+   #6 = Utf8               ()B\n+   #7 = Methodref          #2.#8          // org/apache/bcel/classfile/ConstantCP.getClassIndex:()I\n+   #8 = NameAndType        #9:#10         // getClassIndex:()I\n+   #9 = Utf8               getClassIndex\n+  #10 = Utf8               ()I\n+  #11 = Methodref          #2.#12         // org/apache/bcel/classfile/ConstantCP.getNameAndTypeIndex:()I\n+  #12 = NameAndType        #13:#10        // getNameAndTypeIndex:()I\n+  #13 = Utf8               getNameAndTypeIndex\n+  #14 = Methodref          #2.#15         // org/apache/bcel/classfile/ConstantCP.\"<init>\":(BII)V\n+  #15 = NameAndType        #16:#17        // \"<init>\":(BII)V\n+  #16 = Utf8               <init>\n+  #17 = Utf8               (BII)V\n+  #18 = InterfaceMethodref #19.#20        // java/io/DataInput.readUnsignedShort:()I\n+  #19 = Class              #21            // java/io/DataInput\n+  #20 = NameAndType        #22:#10        // readUnsignedShort:()I\n+  #21 = Utf8               java/io/DataInput\n+  #22 = Utf8               readUnsignedShort\n+  #23 = Methodref          #24.#25        // org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n+  #24 = Class              #26            // org/apache/bcel/classfile/Constant\n+  #25 = NameAndType        #16:#27        // \"<init>\":(B)V\n+  #26 = Utf8               org/apache/bcel/classfile/Constant\n+  #27 = Utf8               (B)V\n+  #28 = Fieldref           #2.#29         // org/apache/bcel/classfile/ConstantCP.class_index:I\n+  #29 = NameAndType        #30:#31        // class_index:I\n+  #30 = Utf8               class_index\n+  #31 = Utf8               I\n+  #32 = Fieldref           #2.#33         // org/apache/bcel/classfile/ConstantCP.name_and_type_index:I\n+  #33 = NameAndType        #34:#31        // name_and_type_index:I\n+  #34 = Utf8               name_and_type_index\n+  #35 = Methodref          #24.#3         // org/apache/bcel/classfile/Constant.getTag:()B\n+  #36 = Methodref          #37.#38        // java/io/DataOutputStream.writeByte:(I)V\n+  #37 = Class              #39            // java/io/DataOutputStream\n+  #38 = NameAndType        #40:#41        // writeByte:(I)V\n+  #39 = Utf8               java/io/DataOutputStream\n+  #40 = Utf8               writeByte\n+  #41 = Utf8               (I)V\n+  #42 = Methodref          #37.#43        // java/io/DataOutputStream.writeShort:(I)V\n+  #43 = NameAndType        #44:#41        // writeShort:(I)V\n+  #44 = Utf8               writeShort\n+  #45 = Class              #46            // org/apache/bcel/Const\n+  #46 = Utf8               org/apache/bcel/Const\n+  #47 = Methodref          #48.#49        // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+  #48 = Class              #50            // org/apache/bcel/classfile/ConstantPool\n+  #49 = NameAndType        #51:#52        // constantToString:(IB)Ljava/lang/String;\n+  #50 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #51 = Utf8               constantToString\n+  #52 = Utf8               (IB)Ljava/lang/String;\n+  #53 = Class              #54            // java/lang/StringBuilder\n+  #54 = Utf8               java/lang/StringBuilder\n+  #55 = Methodref          #53.#56        // java/lang/StringBuilder.\"<init>\":()V\n+  #56 = NameAndType        #16:#57        // \"<init>\":()V\n+  #57 = Utf8               ()V\n+  #58 = Methodref          #24.#59        // org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n+  #59 = NameAndType        #60:#61        // toString:()Ljava/lang/String;\n+  #60 = Utf8               toString\n+  #61 = Utf8               ()Ljava/lang/String;\n+  #62 = Methodref          #53.#63        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #63 = NameAndType        #64:#65        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #64 = Utf8               append\n+  #65 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #66 = String             #67            // (class_index =\n+  #67 = Utf8               (class_index =\n+  #68 = Methodref          #53.#69        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #69 = NameAndType        #64:#70        // append:(I)Ljava/lang/StringBuilder;\n+  #70 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #71 = String             #72            // , name_and_type_index =\n+  #72 = Utf8               , name_and_type_index =\n+  #73 = String             #74            // )\n+  #74 = Utf8               )\n+  #75 = Methodref          #53.#59        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #76 = Utf8               Deprecated\n+  #77 = Utf8               RuntimeVisibleAnnotations\n+  #78 = Utf8               Ljava/lang/Deprecated;\n+  #79 = Utf8               (Lorg/apache/bcel/classfile/ConstantCP;)V\n+  #80 = Utf8               Code\n+  #81 = Utf8               LineNumberTable\n+  #82 = Utf8               (BLjava/io/DataInput;)V\n+  #83 = Utf8               Exceptions\n+  #84 = Class              #85            // java/io/IOException\n+  #85 = Utf8               java/io/IOException\n+  #86 = Utf8               dump\n+  #87 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #88 = Utf8               setClassIndex\n+  #89 = Utf8               setNameAndTypeIndex\n+  #90 = Utf8               getClass\n+  #91 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+  #92 = Utf8               SourceFile\n+  #93 = Utf8               ConstantCP.java\n {\n   protected int class_index;\n     descriptor: I\n     flags: (0x0004) ACC_PROTECTED\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #29()\n+      0: #78()\n         java.lang.Deprecated\n \n   protected int name_and_type_index;\n     descriptor: I\n     flags: (0x0004) ACC_PROTECTED\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #29()\n+      0: #78()\n         java.lang.Deprecated\n \n   public org.apache.bcel.classfile.ConstantCP(org.apache.bcel.classfile.ConstantCP);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantCP;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokevirtual #1                  // Method getTag:()B\n          5: aload_1\n-         6: invokevirtual #2                  // Method getClassIndex:()I\n+         6: invokevirtual #7                  // Method getClassIndex:()I\n          9: aload_1\n-        10: invokevirtual #3                  // Method getNameAndTypeIndex:()I\n-        13: invokespecial #4                  // Method \"<init>\":(BII)V\n+        10: invokevirtual #11                 // Method getNameAndTypeIndex:()I\n+        13: invokespecial #14                 // Method \"<init>\":(BII)V\n         16: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 16\n \n   org.apache.bcel.classfile.ConstantCP(byte, java.io.DataInput) throws java.io.IOException;\n     descriptor: (BLjava/io/DataInput;)V\n     flags: (0x0000)\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: aload_2\n-         3: invokeinterface #5,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+         3: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n          8: aload_2\n-         9: invokeinterface #5,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        14: invokespecial #4                  // Method \"<init>\":(BII)V\n+         9: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        14: invokespecial #14                 // Method \"<init>\":(BII)V\n         17: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 17\n     Exceptions:\n       throws java.io.IOException\n \n   protected org.apache.bcel.classfile.ConstantCP(byte, int, int);\n     descriptor: (BII)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #6                  // Method org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n+         2: invokespecial #23                 // Method org/apache/bcel/classfile/Constant.\"<init>\":(B)V\n          5: aload_0\n          6: iload_2\n-         7: putfield      #7                  // Field class_index:I\n+         7: putfield      #28                 // Field class_index:I\n         10: aload_0\n         11: iload_3\n-        12: putfield      #8                  // Field name_and_type_index:I\n+        12: putfield      #32                 // Field name_and_type_index:I\n         15: return\n       LineNumberTable:\n         line 80: 0\n         line 81: 5\n         line 82: 10\n         line 83: 15\n \n   public final void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokespecial #9                  // Method org/apache/bcel/classfile/Constant.getTag:()B\n-         5: invokevirtual #10                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: invokespecial #35                 // Method org/apache/bcel/classfile/Constant.getTag:()B\n+         5: invokevirtual #36                 // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #7                  // Field class_index:I\n-        13: invokevirtual #11                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #28                 // Field class_index:I\n+        13: invokevirtual #42                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #8                  // Field name_and_type_index:I\n-        21: invokevirtual #11                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #32                 // Field name_and_type_index:I\n+        21: invokevirtual #42                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: return\n       LineNumberTable:\n         line 94: 0\n         line 95: 8\n         line 96: 16\n         line 97: 24\n     Exceptions:\n@@ -204,92 +204,92 @@\n \n   public final int getClassIndex();\n     descriptor: ()I\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field class_index:I\n+         1: getfield      #28                 // Field class_index:I\n          4: ireturn\n       LineNumberTable:\n         line 104: 0\n \n   public final void setClassIndex(int);\n     descriptor: (I)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #7                  // Field class_index:I\n+         2: putfield      #28                 // Field class_index:I\n          5: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 5\n \n   public final int getNameAndTypeIndex();\n     descriptor: ()I\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field name_and_type_index:I\n+         1: getfield      #32                 // Field name_and_type_index:I\n          4: ireturn\n       LineNumberTable:\n         line 120: 0\n \n   public final void setNameAndTypeIndex(int);\n     descriptor: (I)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field name_and_type_index:I\n+         2: putfield      #32                 // Field name_and_type_index:I\n          5: return\n       LineNumberTable:\n         line 128: 0\n         line 129: 5\n \n   public java.lang.String getClass(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #7                  // Field class_index:I\n+         2: getfield      #28                 // Field class_index:I\n          5: bipush        7\n-         7: invokevirtual #13                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+         7: invokevirtual #47                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n         10: areturn\n       LineNumberTable:\n         line 136: 0\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #14                 // class java/lang/StringBuilder\n+         0: new           #53                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #15                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #55                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: aload_0\n-         8: invokespecial #16                 // Method org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n-        11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: ldc           #18                 // String (class_index =\n-        16: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         8: invokespecial #58                 // Method org/apache/bcel/classfile/Constant.toString:()Ljava/lang/String;\n+        11: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: ldc           #66                 // String (class_index =\n+        16: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         19: aload_0\n-        20: getfield      #7                  // Field class_index:I\n-        23: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        26: ldc           #20                 // String , name_and_type_index =\n-        28: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        20: getfield      #28                 // Field class_index:I\n+        23: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        26: ldc           #71                 // String , name_and_type_index =\n+        28: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         31: aload_0\n-        32: getfield      #8                  // Field name_and_type_index:I\n-        35: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        38: ldc           #21                 // String )\n-        40: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        43: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        32: getfield      #32                 // Field name_and_type_index:I\n+        35: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        38: ldc           #73                 // String )\n+        40: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        43: invokevirtual #75                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         46: areturn\n       LineNumberTable:\n         line 147: 0\n }\n SourceFile: \"ConstantCP.java\"\n"}]}
