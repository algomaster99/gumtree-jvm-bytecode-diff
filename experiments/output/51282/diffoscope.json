{"diffoscope-json-version": 1, "source1": "first/Digest.class", "source2": "second/Digest.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -40,15 +40,15 @@\n     }\n     \n     private void println(final String prefix, final byte[] digest) {\n         this.println(prefix, digest, null);\n     }\n     \n     private void println(final String prefix, final byte[] digest, final String fileName) {\n-        System.out.println(prefix + Hex.encodeHexString(digest) + ((fileName != null) ? (\"  \" + fileName) : \"\"));\n+        System.out.println(String.valueOf(prefix) + Hex.encodeHexString(digest) + ((fileName != null) ? (\"  \" + fileName) : \"\"));\n     }\n     \n     private void run() throws IOException {\n         if (this.algorithm.equalsIgnoreCase(\"ALL\") || this.algorithm.equals(\"*\")) {\n             this.run(MessageDigestAlgorithms.values());\n             return;\n         }\n@@ -60,25 +60,27 @@\n             this.run(\"\", DigestUtils.getDigest(this.algorithm.toUpperCase(Locale.ROOT)));\n         }\n     }\n     \n     private void run(final String[] digestAlgorithms) throws IOException {\n         for (final String messageDigestAlgorithm : digestAlgorithms) {\n             if (DigestUtils.isAvailable(messageDigestAlgorithm)) {\n-                this.run(messageDigestAlgorithm + \" \", messageDigestAlgorithm);\n+                this.run(String.valueOf(messageDigestAlgorithm) + \" \", messageDigestAlgorithm);\n             }\n         }\n     }\n     \n     private void run(final String prefix, final MessageDigest messageDigest) throws IOException {\n         if (this.inputs == null) {\n             this.println(prefix, DigestUtils.digest(messageDigest, System.in));\n             return;\n         }\n-        for (final String source : this.inputs) {\n+        String[] inputs;\n+        for (int length = (inputs = this.inputs).length, i = 0; i < length; ++i) {\n+            final String source = inputs[i];\n             final File file = new File(source);\n             if (file.isFile()) {\n                 this.println(prefix, DigestUtils.digest(messageDigest, file), source);\n             }\n             else if (file.isDirectory()) {\n                 final File[] listFiles = file.listFiles();\n                 if (listFiles != null) {\n"}]}
