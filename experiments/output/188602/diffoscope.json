{"diffoscope-json-version": 1, "source1": "first/FramedLZ4CompressorInputStream.class", "source2": "second/FramedLZ4CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,373 +1,373 @@\n-  SHA-256 checksum 5d9c9e2c55b158bc9c324fb3dc9519ae374a3297de394a7cad3c45be8115b105\n+  SHA-256 checksum 9f8e69ca9cadefc7e58a3fe613034d54cc68d4c85f907ce42ee793ae1b8729ca\n   Compiled from \"FramedLZ4CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #40                         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  super_class: #94                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #2                          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+  super_class: #8                         // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 25, methods: 20, attributes: 3\n Constant pool:\n-    #1 = Methodref          #40.#217      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n-    #2 = Methodref          #94.#218      // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #3 = Fieldref           #40.#219      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n-    #4 = InvokeDynamic      #0:#224       // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #5 = Fieldref           #40.#225      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-    #6 = Class              #226          // org/apache/commons/compress/compressors/lz4/XXHash32\n-    #7 = Methodref          #6.#218       // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-    #8 = Fieldref           #40.#227      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-    #9 = Fieldref           #40.#228      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-   #10 = Class              #229          // org/apache/commons/compress/utils/CountingInputStream\n-   #11 = Methodref          #10.#230      // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Fieldref           #40.#231      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #13 = Fieldref           #40.#232      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n-   #14 = Methodref          #40.#233      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n-   #15 = Methodref          #40.#234      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n-   #16 = Fieldref           #40.#235      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n-   #17 = Methodref          #188.#236     // java/io/InputStream.close:()V\n-   #18 = Methodref          #10.#236      // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #19 = Fieldref           #40.#237      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n-   #20 = Methodref          #40.#238      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n-   #21 = Methodref          #40.#239      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n-   #22 = Fieldref           #40.#240      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n-   #23 = Methodref          #40.#241      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n-   #24 = Fieldref           #40.#242      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n-   #25 = Methodref          #6.#243       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n-   #26 = Methodref          #10.#244      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #27 = Methodref          #40.#245      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n-   #28 = Methodref          #40.#246      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n-   #29 = String             #247          // Not a LZ4 frame stream\n-   #30 = String             #248          // LZ4 frame stream followed by garbage\n-   #31 = Methodref          #249.#250     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n-   #32 = Methodref          #40.#251      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n-   #33 = Class              #252          // java/io/IOException\n-   #34 = Methodref          #33.#253      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #35 = Methodref          #40.#254      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n-   #36 = Methodref          #40.#255      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n-   #37 = Methodref          #40.#256      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-   #38 = String             #257          // Premature end of stream while reading frame flags\n-   #39 = Methodref          #6.#258       // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n-   #40 = Class              #259          // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-   #41 = Class              #260          // java/lang/StringBuilder\n-   #42 = Methodref          #41.#218      // java/lang/StringBuilder.\"<init>\":()V\n-   #43 = String             #261          // Unsupported version\n-   #44 = Methodref          #41.#262      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #45 = Methodref          #41.#263      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #46 = Methodref          #41.#264      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #47 = Fieldref           #40.#265      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n-   #48 = Class              #266          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #49 = Integer            65536\n-   #50 = Fieldref           #40.#267      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n-   #51 = Fieldref           #40.#268      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n-   #52 = String             #269          // Premature end of stream while reading frame BD byte\n-   #53 = String             #270          // Premature end of stream while reading content size\n-   #54 = String             #271          // Premature end of stream while reading frame header checksum\n-   #55 = Methodref          #6.#272       // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n-   #56 = Long               255l\n-   #58 = Methodref          #6.#273       // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n-   #59 = String             #274          // Frame header checksum mismatch\n-   #60 = Methodref          #40.#275      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n-   #61 = Methodref          #276.#277     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-   #62 = Long               -2147483648l\n-   #64 = Long               2147483647l\n-   #66 = Methodref          #40.#278      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n-   #67 = Class              #279          // org/apache/commons/compress/utils/BoundedInputStream\n-   #68 = Methodref          #67.#280      // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n-   #69 = Class              #281          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-   #70 = Methodref          #69.#282      // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-   #71 = Fieldref           #40.#283      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n-   #72 = Methodref          #48.#230      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #73 = Methodref          #48.#284      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n-   #74 = String             #285          // block\n-   #75 = Methodref          #40.#286      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-   #76 = String             #287          // content\n-   #77 = String             #288          // Premature end of stream while reading\n-   #78 = String             #289          //  checksum\n-   #79 = Methodref          #276.#290     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n-   #80 = String             #291          //  checksum mismatch.\n-   #81 = Methodref          #10.#292      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #82 = Methodref          #188.#234     // java/io/InputStream.read:([BII)I\n-   #83 = Methodref          #48.#244      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n-   #84 = Methodref          #40.#293      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n-   #85 = Fieldref           #40.#294      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n-   #86 = Methodref          #40.#295      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n-   #87 = String             #296          // Found illegal skippable frame with negative size\n-   #88 = Methodref          #249.#297     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #89 = String             #298          // Premature end of stream while skipping frame\n-   #90 = Methodref          #299.#300     // java/lang/Math.min:(II)I\n-   #91 = Methodref          #301.#302     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #92 = Fieldref           #40.#303      // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n-   #93 = Methodref          #304.#305     // java/util/Arrays.equals:([B[B)Z\n-   #94 = Class              #306          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #95 = Class              #307          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #96 = Utf8               LZ4_SIGNATURE\n-   #97 = Utf8               [B\n-   #98 = Utf8               SKIPPABLE_FRAME_TRAILER\n-   #99 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n-  #100 = Utf8               B\n-  #101 = Utf8               ConstantValue\n-  #102 = Integer            80\n-  #103 = Utf8               VERSION_MASK\n-  #104 = Utf8               I\n-  #105 = Integer            192\n-  #106 = Utf8               SUPPORTED_VERSION\n-  #107 = Integer            64\n-  #108 = Utf8               BLOCK_INDEPENDENCE_MASK\n-  #109 = Integer            32\n-  #110 = Utf8               BLOCK_CHECKSUM_MASK\n-  #111 = Integer            16\n-  #112 = Utf8               CONTENT_SIZE_MASK\n-  #113 = Integer            8\n-  #114 = Utf8               CONTENT_CHECKSUM_MASK\n-  #115 = Integer            4\n-  #116 = Utf8               BLOCK_MAX_SIZE_MASK\n-  #117 = Integer            112\n-  #118 = Utf8               UNCOMPRESSED_FLAG_MASK\n-  #119 = Integer            -2147483648\n-  #120 = Utf8               oneByte\n-  #121 = Utf8               supplier\n-  #122 = Class              #308          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #123 = Utf8               ByteSupplier\n-  #124 = Utf8               InnerClasses\n-  #125 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #126 = Utf8               inputStream\n-  #127 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #128 = Utf8               decompressConcatenated\n-  #129 = Utf8               Z\n-  #130 = Utf8               expectBlockChecksum\n-  #131 = Utf8               expectBlockDependency\n-  #132 = Utf8               expectContentSize\n-  #133 = Utf8               expectContentChecksum\n-  #134 = Utf8               currentBlock\n-  #135 = Utf8               Ljava/io/InputStream;\n-  #136 = Utf8               endReached\n-  #137 = Utf8               inUncompressed\n-  #138 = Utf8               contentHash\n-  #139 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #140 = Utf8               blockHash\n-  #141 = Utf8               blockDependencyBuffer\n-  #142 = Utf8               <init>\n-  #143 = Utf8               (Ljava/io/InputStream;)V\n-  #144 = Utf8               Code\n-  #145 = Utf8               LineNumberTable\n-  #146 = Utf8               LocalVariableTable\n-  #147 = Utf8               this\n-  #148 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n-  #149 = Utf8               in\n-  #150 = Utf8               Exceptions\n-  #151 = Utf8               (Ljava/io/InputStream;Z)V\n-  #152 = Utf8               read\n-  #153 = Utf8               ()I\n-  #154 = Utf8               StackMapTable\n-  #155 = Utf8               close\n-  #156 = Utf8               ()V\n-  #157 = Class              #309          // java/lang/Throwable\n-  #158 = Utf8               ([BII)I\n-  #159 = Utf8               b\n-  #160 = Utf8               off\n-  #161 = Utf8               len\n-  #162 = Utf8               r\n-  #163 = Utf8               getCompressedCount\n-  #164 = Utf8               ()J\n-  #165 = Utf8               init\n-  #166 = Utf8               (Z)V\n-  #167 = Utf8               firstFrame\n-  #168 = Utf8               readSignature\n-  #169 = Utf8               (Z)Z\n-  #170 = Utf8               garbageMessage\n-  #171 = Utf8               Ljava/lang/String;\n-  #172 = Class              #310          // java/lang/String\n-  #173 = Class              #97           // \"[B\"\n-  #174 = Utf8               readFrameDescriptor\n-  #175 = Utf8               contentSize\n-  #176 = Utf8               skipped\n-  #177 = Utf8               flags\n-  #178 = Utf8               bdByte\n-  #179 = Utf8               headerHash\n-  #180 = Utf8               expectedHash\n-  #181 = Utf8               nextBlock\n-  #182 = Utf8               s\n-  #183 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n-  #184 = Utf8               J\n-  #185 = Utf8               uncompressed\n-  #186 = Utf8               realLen\n-  #187 = Utf8               capped\n-  #188 = Class              #311          // java/io/InputStream\n-  #189 = Utf8               maybeFinishCurrentBlock\n-  #190 = Utf8               verifyContentChecksum\n-  #191 = Utf8               verifyChecksum\n-  #192 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #193 = Utf8               hash\n-  #194 = Utf8               kind\n-  #195 = Utf8               checksum\n-  #196 = Utf8               readOneByte\n-  #197 = Utf8               readOnce\n-  #198 = Utf8               cnt\n-  #199 = Utf8               l\n-  #200 = Utf8               before\n-  #201 = Utf8               isSkippableFrameSignature\n-  #202 = Utf8               ([B)Z\n-  #203 = Utf8               i\n-  #204 = Utf8               skipSkippableFrame\n-  #205 = Utf8               ([B)I\n-  #206 = Utf8               appendToBlockDependencyBuffer\n-  #207 = Utf8               ([BII)V\n-  #208 = Utf8               keep\n-  #209 = Utf8               matches\n-  #210 = Utf8               ([BI)Z\n-  #211 = Utf8               signature\n-  #212 = Utf8               length\n-  #213 = Utf8               shortenedSig\n-  #214 = Utf8               <clinit>\n-  #215 = Utf8               SourceFile\n-  #216 = Utf8               FramedLZ4CompressorInputStream.java\n-  #217 = NameAndType        #142:#151     // \"<init>\":(Ljava/io/InputStream;Z)V\n-  #218 = NameAndType        #142:#156     // \"<init>\":()V\n-  #219 = NameAndType        #120:#97      // oneByte:[B\n-  #220 = Utf8               BootstrapMethods\n-  #221 = MethodHandle       6:#312        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #222 = MethodType         #153          //  ()I\n-  #223 = MethodHandle       7:#37         // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-  #224 = NameAndType        #313:#314     // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #225 = NameAndType        #121:#125     // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #226 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n-  #227 = NameAndType        #138:#139     // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #228 = NameAndType        #140:#139     // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-  #229 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #230 = NameAndType        #142:#143     // \"<init>\":(Ljava/io/InputStream;)V\n-  #231 = NameAndType        #126:#127     // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #232 = NameAndType        #128:#129     // decompressConcatenated:Z\n-  #233 = NameAndType        #165:#166     // init:(Z)V\n-  #234 = NameAndType        #152:#158     // read:([BII)I\n-  #235 = NameAndType        #134:#135     // currentBlock:Ljava/io/InputStream;\n-  #236 = NameAndType        #155:#156     // close:()V\n-  #237 = NameAndType        #136:#129     // endReached:Z\n-  #238 = NameAndType        #197:#158     // readOnce:([BII)I\n-  #239 = NameAndType        #181:#156     // nextBlock:()V\n-  #240 = NameAndType        #131:#129     // expectBlockDependency:Z\n-  #241 = NameAndType        #206:#207     // appendToBlockDependencyBuffer:([BII)V\n-  #242 = NameAndType        #133:#129     // expectContentChecksum:Z\n-  #243 = NameAndType        #315:#207     // update:([BII)V\n-  #244 = NameAndType        #316:#164     // getBytesRead:()J\n-  #245 = NameAndType        #168:#169     // readSignature:(Z)Z\n-  #246 = NameAndType        #174:#156     // readFrameDescriptor:()V\n-  #247 = Utf8               Not a LZ4 frame stream\n-  #248 = Utf8               LZ4 frame stream followed by garbage\n-  #249 = Class              #317          // org/apache/commons/compress/utils/IOUtils\n-  #250 = NameAndType        #318:#319     // readFully:(Ljava/io/InputStream;[B)I\n-  #251 = NameAndType        #320:#321     // count:(I)V\n-  #252 = Utf8               java/io/IOException\n-  #253 = NameAndType        #142:#322     // \"<init>\":(Ljava/lang/String;)V\n-  #254 = NameAndType        #204:#205     // skipSkippableFrame:([B)I\n-  #255 = NameAndType        #209:#210     // matches:([BI)Z\n-  #256 = NameAndType        #196:#153     // readOneByte:()I\n-  #257 = Utf8               Premature end of stream while reading frame flags\n-  #258 = NameAndType        #315:#321     // update:(I)V\n-  #259 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n-  #260 = Utf8               java/lang/StringBuilder\n-  #261 = Utf8               Unsupported version\n-  #262 = NameAndType        #323:#324     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #263 = NameAndType        #323:#325     // append:(I)Ljava/lang/StringBuilder;\n-  #264 = NameAndType        #326:#327     // toString:()Ljava/lang/String;\n-  #265 = NameAndType        #141:#97      // blockDependencyBuffer:[B\n-  #266 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #267 = NameAndType        #130:#129     // expectBlockChecksum:Z\n-  #268 = NameAndType        #132:#129     // expectContentSize:Z\n-  #269 = Utf8               Premature end of stream while reading frame BD byte\n-  #270 = Utf8               Premature end of stream while reading content size\n-  #271 = Utf8               Premature end of stream while reading frame header checksum\n-  #272 = NameAndType        #328:#164     // getValue:()J\n-  #273 = NameAndType        #329:#156     // reset:()V\n-  #274 = Utf8               Frame header checksum mismatch\n-  #275 = NameAndType        #189:#156     // maybeFinishCurrentBlock:()V\n-  #276 = Class              #330          // org/apache/commons/compress/utils/ByteUtils\n-  #277 = NameAndType        #331:#332     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #278 = NameAndType        #190:#156     // verifyContentChecksum:()V\n-  #279 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n-  #280 = NameAndType        #142:#333     // \"<init>\":(Ljava/io/InputStream;J)V\n-  #281 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n-  #282 = NameAndType        #142:#334     // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #283 = NameAndType        #137:#129     // inUncompressed:Z\n-  #284 = NameAndType        #335:#336     // prefill:([B)V\n-  #285 = Utf8               block\n-  #286 = NameAndType        #191:#192     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n-  #287 = Utf8               content\n-  #288 = Utf8               Premature end of stream while reading\n-  #289 = Utf8                checksum\n-  #290 = NameAndType        #331:#337     // fromLittleEndian:([B)J\n-  #291 = Utf8                checksum mismatch.\n-  #292 = NameAndType        #152:#153     // read:()I\n-  #293 = NameAndType        #320:#338     // count:(J)V\n-  #294 = NameAndType        #98:#97       // SKIPPABLE_FRAME_TRAILER:[B\n-  #295 = NameAndType        #201:#202     // isSkippableFrameSignature:([B)Z\n-  #296 = Utf8               Found illegal skippable frame with negative size\n-  #297 = NameAndType        #339:#340     // skip:(Ljava/io/InputStream;J)J\n-  #298 = Utf8               Premature end of stream while skipping frame\n-  #299 = Class              #341          // java/lang/Math\n-  #300 = NameAndType        #342:#343     // min:(II)I\n-  #301 = Class              #344          // java/lang/System\n-  #302 = NameAndType        #345:#346     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #303 = NameAndType        #96:#97       // LZ4_SIGNATURE:[B\n-  #304 = Class              #347          // java/util/Arrays\n-  #305 = NameAndType        #348:#349     // equals:([B[B)Z\n-  #306 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #307 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #308 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #309 = Utf8               java/lang/Throwable\n-  #310 = Utf8               java/lang/String\n-  #311 = Utf8               java/io/InputStream\n-  #312 = Methodref          #350.#351     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #313 = Utf8               getAsByte\n-  #314 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-  #315 = Utf8               update\n-  #316 = Utf8               getBytesRead\n-  #317 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #318 = Utf8               readFully\n-  #319 = Utf8               (Ljava/io/InputStream;[B)I\n-  #320 = Utf8               count\n-  #321 = Utf8               (I)V\n-  #322 = Utf8               (Ljava/lang/String;)V\n-  #323 = Utf8               append\n-  #324 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #325 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #326 = Utf8               toString\n-  #327 = Utf8               ()Ljava/lang/String;\n-  #328 = Utf8               getValue\n-  #329 = Utf8               reset\n-  #330 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #331 = Utf8               fromLittleEndian\n-  #332 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n-  #333 = Utf8               (Ljava/io/InputStream;J)V\n-  #334 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n-  #335 = Utf8               prefill\n-  #336 = Utf8               ([B)V\n-  #337 = Utf8               ([B)J\n-  #338 = Utf8               (J)V\n-  #339 = Utf8               skip\n-  #340 = Utf8               (Ljava/io/InputStream;J)J\n-  #341 = Utf8               java/lang/Math\n-  #342 = Utf8               min\n-  #343 = Utf8               (II)I\n-  #344 = Utf8               java/lang/System\n-  #345 = Utf8               arraycopy\n-  #346 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #347 = Utf8               java/util/Arrays\n-  #348 = Utf8               equals\n-  #349 = Utf8               ([B[B)Z\n-  #350 = Class              #352          // java/lang/invoke/LambdaMetafactory\n-  #351 = NameAndType        #353:#356     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #352 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #353 = Utf8               metafactory\n-  #354 = Class              #358          // java/lang/invoke/MethodHandles$Lookup\n-  #355 = Utf8               Lookup\n-  #356 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #357 = Class              #359          // java/lang/invoke/MethodHandles\n-  #358 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #359 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;Z)V\n+    #2 = Class              #4            // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;Z)V\n+    #4 = Utf8               org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;Z)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/CompressorInputStream\n+    #9 = NameAndType        #5:#11        // \"<init>\":()V\n+   #10 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #11 = Utf8               ()V\n+   #12 = Fieldref           #2.#13        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.oneByte:[B\n+   #13 = NameAndType        #14:#15       // oneByte:[B\n+   #14 = Utf8               oneByte\n+   #15 = Utf8               [B\n+   #16 = InvokeDynamic      #0:#17        // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #17 = NameAndType        #18:#19       // getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #18 = Utf8               getAsByte\n+   #19 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #20 = Fieldref           #2.#21        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #21 = NameAndType        #22:#23       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #22 = Utf8               supplier\n+   #23 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #24 = Class              #25           // org/apache/commons/compress/compressors/lz4/XXHash32\n+   #25 = Utf8               org/apache/commons/compress/compressors/lz4/XXHash32\n+   #26 = Methodref          #24.#9        // org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+   #27 = Fieldref           #2.#28        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #28 = NameAndType        #29:#30       // contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #29 = Utf8               contentHash\n+   #30 = Utf8               Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #31 = Fieldref           #2.#32        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #32 = NameAndType        #33:#30       // blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+   #33 = Utf8               blockHash\n+   #34 = Class              #35           // org/apache/commons/compress/utils/CountingInputStream\n+   #35 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #36 = Methodref          #34.#37       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #37 = NameAndType        #5:#38        // \"<init>\":(Ljava/io/InputStream;)V\n+   #38 = Utf8               (Ljava/io/InputStream;)V\n+   #39 = Fieldref           #2.#40        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #40 = NameAndType        #41:#42       // inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #41 = Utf8               inputStream\n+   #42 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #43 = Fieldref           #2.#44        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.decompressConcatenated:Z\n+   #44 = NameAndType        #45:#46       // decompressConcatenated:Z\n+   #45 = Utf8               decompressConcatenated\n+   #46 = Utf8               Z\n+   #47 = Methodref          #2.#48        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.init:(Z)V\n+   #48 = NameAndType        #49:#50       // init:(Z)V\n+   #49 = Utf8               init\n+   #50 = Utf8               (Z)V\n+   #51 = Methodref          #2.#52        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.read:([BII)I\n+   #52 = NameAndType        #53:#54       // read:([BII)I\n+   #53 = Utf8               read\n+   #54 = Utf8               ([BII)I\n+   #55 = Fieldref           #2.#56        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.currentBlock:Ljava/io/InputStream;\n+   #56 = NameAndType        #57:#58       // currentBlock:Ljava/io/InputStream;\n+   #57 = Utf8               currentBlock\n+   #58 = Utf8               Ljava/io/InputStream;\n+   #59 = Methodref          #60.#61       // java/io/InputStream.close:()V\n+   #60 = Class              #62           // java/io/InputStream\n+   #61 = NameAndType        #63:#11       // close:()V\n+   #62 = Utf8               java/io/InputStream\n+   #63 = Utf8               close\n+   #64 = Methodref          #34.#61       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #65 = Fieldref           #2.#66        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.endReached:Z\n+   #66 = NameAndType        #67:#46       // endReached:Z\n+   #67 = Utf8               endReached\n+   #68 = Methodref          #2.#69        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOnce:([BII)I\n+   #69 = NameAndType        #70:#54       // readOnce:([BII)I\n+   #70 = Utf8               readOnce\n+   #71 = Methodref          #2.#72        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.nextBlock:()V\n+   #72 = NameAndType        #73:#11       // nextBlock:()V\n+   #73 = Utf8               nextBlock\n+   #74 = Fieldref           #2.#75        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockDependency:Z\n+   #75 = NameAndType        #76:#46       // expectBlockDependency:Z\n+   #76 = Utf8               expectBlockDependency\n+   #77 = Methodref          #2.#78        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.appendToBlockDependencyBuffer:([BII)V\n+   #78 = NameAndType        #79:#80       // appendToBlockDependencyBuffer:([BII)V\n+   #79 = Utf8               appendToBlockDependencyBuffer\n+   #80 = Utf8               ([BII)V\n+   #81 = Fieldref           #2.#82        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentChecksum:Z\n+   #82 = NameAndType        #83:#46       // expectContentChecksum:Z\n+   #83 = Utf8               expectContentChecksum\n+   #84 = Methodref          #24.#85       // org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+   #85 = NameAndType        #86:#80       // update:([BII)V\n+   #86 = Utf8               update\n+   #87 = Methodref          #34.#88       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #88 = NameAndType        #89:#90       // getBytesRead:()J\n+   #89 = Utf8               getBytesRead\n+   #90 = Utf8               ()J\n+   #91 = Methodref          #2.#92        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readSignature:(Z)Z\n+   #92 = NameAndType        #93:#94       // readSignature:(Z)Z\n+   #93 = Utf8               readSignature\n+   #94 = Utf8               (Z)Z\n+   #95 = Methodref          #2.#96        // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readFrameDescriptor:()V\n+   #96 = NameAndType        #97:#11       // readFrameDescriptor:()V\n+   #97 = Utf8               readFrameDescriptor\n+   #98 = String             #99           // Not a LZ4 frame stream\n+   #99 = Utf8               Not a LZ4 frame stream\n+  #100 = String             #101          // LZ4 frame stream followed by garbage\n+  #101 = Utf8               LZ4 frame stream followed by garbage\n+  #102 = Methodref          #103.#104     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+  #103 = Class              #105          // org/apache/commons/compress/utils/IOUtils\n+  #104 = NameAndType        #106:#107     // readFully:(Ljava/io/InputStream;[B)I\n+  #105 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #106 = Utf8               readFully\n+  #107 = Utf8               (Ljava/io/InputStream;[B)I\n+  #108 = Methodref          #2.#109       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(I)V\n+  #109 = NameAndType        #110:#111     // count:(I)V\n+  #110 = Utf8               count\n+  #111 = Utf8               (I)V\n+  #112 = Class              #113          // java/io/IOException\n+  #113 = Utf8               java/io/IOException\n+  #114 = Methodref          #112.#115     // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #115 = NameAndType        #5:#116       // \"<init>\":(Ljava/lang/String;)V\n+  #116 = Utf8               (Ljava/lang/String;)V\n+  #117 = Methodref          #2.#118       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.skipSkippableFrame:([B)I\n+  #118 = NameAndType        #119:#120     // skipSkippableFrame:([B)I\n+  #119 = Utf8               skipSkippableFrame\n+  #120 = Utf8               ([B)I\n+  #121 = Methodref          #2.#122       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.matches:([BI)Z\n+  #122 = NameAndType        #123:#124     // matches:([BI)Z\n+  #123 = Utf8               matches\n+  #124 = Utf8               ([BI)Z\n+  #125 = Methodref          #2.#126       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #126 = NameAndType        #127:#128     // readOneByte:()I\n+  #127 = Utf8               readOneByte\n+  #128 = Utf8               ()I\n+  #129 = String             #130          // Premature end of stream while reading frame flags\n+  #130 = Utf8               Premature end of stream while reading frame flags\n+  #131 = Methodref          #24.#132      // org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+  #132 = NameAndType        #86:#111      // update:(I)V\n+  #133 = Class              #134          // java/lang/StringBuilder\n+  #134 = Utf8               java/lang/StringBuilder\n+  #135 = Methodref          #133.#9       // java/lang/StringBuilder.\"<init>\":()V\n+  #136 = String             #137          // Unsupported version\n+  #137 = Utf8               Unsupported version\n+  #138 = Methodref          #133.#139     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #139 = NameAndType        #140:#141     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #140 = Utf8               append\n+  #141 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #142 = Methodref          #133.#143     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #143 = NameAndType        #140:#144     // append:(I)Ljava/lang/StringBuilder;\n+  #144 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #145 = Methodref          #133.#146     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #146 = NameAndType        #147:#148     // toString:()Ljava/lang/String;\n+  #147 = Utf8               toString\n+  #148 = Utf8               ()Ljava/lang/String;\n+  #149 = Fieldref           #2.#150       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.blockDependencyBuffer:[B\n+  #150 = NameAndType        #151:#15      // blockDependencyBuffer:[B\n+  #151 = Utf8               blockDependencyBuffer\n+  #152 = Class              #153          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #153 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+  #154 = Integer            65536\n+  #155 = Fieldref           #2.#156       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectBlockChecksum:Z\n+  #156 = NameAndType        #157:#46      // expectBlockChecksum:Z\n+  #157 = Utf8               expectBlockChecksum\n+  #158 = Fieldref           #2.#159       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.expectContentSize:Z\n+  #159 = NameAndType        #160:#46      // expectContentSize:Z\n+  #160 = Utf8               expectContentSize\n+  #161 = String             #162          // Premature end of stream while reading frame BD byte\n+  #162 = Utf8               Premature end of stream while reading frame BD byte\n+  #163 = String             #164          // Premature end of stream while reading content size\n+  #164 = Utf8               Premature end of stream while reading content size\n+  #165 = String             #166          // Premature end of stream while reading frame header checksum\n+  #166 = Utf8               Premature end of stream while reading frame header checksum\n+  #167 = Methodref          #24.#168      // org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+  #168 = NameAndType        #169:#90      // getValue:()J\n+  #169 = Utf8               getValue\n+  #170 = Long               255l\n+  #172 = Methodref          #24.#173      // org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+  #173 = NameAndType        #174:#11      // reset:()V\n+  #174 = Utf8               reset\n+  #175 = String             #176          // Frame header checksum mismatch\n+  #176 = Utf8               Frame header checksum mismatch\n+  #177 = Methodref          #2.#178       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.maybeFinishCurrentBlock:()V\n+  #178 = NameAndType        #179:#11      // maybeFinishCurrentBlock:()V\n+  #179 = Utf8               maybeFinishCurrentBlock\n+  #180 = Methodref          #181.#182     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #181 = Class              #183          // org/apache/commons/compress/utils/ByteUtils\n+  #182 = NameAndType        #184:#185     // fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #183 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #184 = Utf8               fromLittleEndian\n+  #185 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+  #186 = Long               -2147483648l\n+  #188 = Long               2147483647l\n+  #190 = Methodref          #2.#191       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyContentChecksum:()V\n+  #191 = NameAndType        #192:#11      // verifyContentChecksum:()V\n+  #192 = Utf8               verifyContentChecksum\n+  #193 = Class              #194          // org/apache/commons/compress/utils/BoundedInputStream\n+  #194 = Utf8               org/apache/commons/compress/utils/BoundedInputStream\n+  #195 = Methodref          #193.#196     // org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+  #196 = NameAndType        #5:#197       // \"<init>\":(Ljava/io/InputStream;J)V\n+  #197 = Utf8               (Ljava/io/InputStream;J)V\n+  #198 = Class              #199          // org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #199 = Utf8               org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+  #200 = Methodref          #198.#201     // org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #201 = NameAndType        #5:#202       // \"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #202 = Utf8               (Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+  #203 = Fieldref           #2.#204       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.inUncompressed:Z\n+  #204 = NameAndType        #205:#46      // inUncompressed:Z\n+  #205 = Utf8               inUncompressed\n+  #206 = Methodref          #152.#37      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #207 = Methodref          #152.#208     // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+  #208 = NameAndType        #209:#210     // prefill:([B)V\n+  #209 = Utf8               prefill\n+  #210 = Utf8               ([B)V\n+  #211 = String             #212          // block\n+  #212 = Utf8               block\n+  #213 = Methodref          #2.#214       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #214 = NameAndType        #215:#216     // verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #215 = Utf8               verifyChecksum\n+  #216 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+  #217 = String             #218          // content\n+  #218 = Utf8               content\n+  #219 = String             #220          // Premature end of stream while reading\n+  #220 = Utf8               Premature end of stream while reading\n+  #221 = String             #222          //  checksum\n+  #222 = Utf8                checksum\n+  #223 = Methodref          #181.#224     // org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+  #224 = NameAndType        #184:#225     // fromLittleEndian:([B)J\n+  #225 = Utf8               ([B)J\n+  #226 = String             #227          //  checksum mismatch.\n+  #227 = Utf8                checksum mismatch.\n+  #228 = Methodref          #34.#229      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+  #229 = NameAndType        #53:#128      // read:()I\n+  #230 = Methodref          #60.#52       // java/io/InputStream.read:([BII)I\n+  #231 = Methodref          #152.#88      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+  #232 = Methodref          #2.#233       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.count:(J)V\n+  #233 = NameAndType        #110:#234     // count:(J)V\n+  #234 = Utf8               (J)V\n+  #235 = Fieldref           #2.#236       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.SKIPPABLE_FRAME_TRAILER:[B\n+  #236 = NameAndType        #237:#15      // SKIPPABLE_FRAME_TRAILER:[B\n+  #237 = Utf8               SKIPPABLE_FRAME_TRAILER\n+  #238 = Methodref          #2.#239       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.isSkippableFrameSignature:([B)Z\n+  #239 = NameAndType        #240:#241     // isSkippableFrameSignature:([B)Z\n+  #240 = Utf8               isSkippableFrameSignature\n+  #241 = Utf8               ([B)Z\n+  #242 = String             #243          // Found illegal skippable frame with negative size\n+  #243 = Utf8               Found illegal skippable frame with negative size\n+  #244 = Methodref          #103.#245     // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #245 = NameAndType        #246:#247     // skip:(Ljava/io/InputStream;J)J\n+  #246 = Utf8               skip\n+  #247 = Utf8               (Ljava/io/InputStream;J)J\n+  #248 = String             #249          // Premature end of stream while skipping frame\n+  #249 = Utf8               Premature end of stream while skipping frame\n+  #250 = Methodref          #251.#252     // java/lang/Math.min:(II)I\n+  #251 = Class              #253          // java/lang/Math\n+  #252 = NameAndType        #254:#255     // min:(II)I\n+  #253 = Utf8               java/lang/Math\n+  #254 = Utf8               min\n+  #255 = Utf8               (II)I\n+  #256 = Methodref          #257.#258     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #257 = Class              #259          // java/lang/System\n+  #258 = NameAndType        #260:#261     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #259 = Utf8               java/lang/System\n+  #260 = Utf8               arraycopy\n+  #261 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #262 = Fieldref           #2.#263       // org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.LZ4_SIGNATURE:[B\n+  #263 = NameAndType        #264:#15      // LZ4_SIGNATURE:[B\n+  #264 = Utf8               LZ4_SIGNATURE\n+  #265 = Methodref          #266.#267     // java/util/Arrays.equals:([B[B)Z\n+  #266 = Class              #268          // java/util/Arrays\n+  #267 = NameAndType        #269:#270     // equals:([B[B)Z\n+  #268 = Utf8               java/util/Arrays\n+  #269 = Utf8               equals\n+  #270 = Utf8               ([B[B)Z\n+  #271 = Class              #272          // org/apache/commons/compress/utils/InputStreamStatistics\n+  #272 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #273 = Utf8               SKIPPABLE_FRAME_PREFIX_BYTE_MASK\n+  #274 = Utf8               B\n+  #275 = Utf8               ConstantValue\n+  #276 = Integer            80\n+  #277 = Utf8               VERSION_MASK\n+  #278 = Utf8               I\n+  #279 = Integer            192\n+  #280 = Utf8               SUPPORTED_VERSION\n+  #281 = Integer            64\n+  #282 = Utf8               BLOCK_INDEPENDENCE_MASK\n+  #283 = Integer            32\n+  #284 = Utf8               BLOCK_CHECKSUM_MASK\n+  #285 = Integer            16\n+  #286 = Utf8               CONTENT_SIZE_MASK\n+  #287 = Integer            8\n+  #288 = Utf8               CONTENT_CHECKSUM_MASK\n+  #289 = Integer            4\n+  #290 = Utf8               BLOCK_MAX_SIZE_MASK\n+  #291 = Integer            112\n+  #292 = Utf8               UNCOMPRESSED_FLAG_MASK\n+  #293 = Integer            -2147483648\n+  #294 = Utf8               Code\n+  #295 = Utf8               LineNumberTable\n+  #296 = Utf8               LocalVariableTable\n+  #297 = Utf8               this\n+  #298 = Utf8               Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n+  #299 = Utf8               in\n+  #300 = Utf8               Exceptions\n+  #301 = Utf8               StackMapTable\n+  #302 = Class              #303          // java/lang/Throwable\n+  #303 = Utf8               java/lang/Throwable\n+  #304 = Utf8               b\n+  #305 = Utf8               off\n+  #306 = Utf8               len\n+  #307 = Utf8               r\n+  #308 = Utf8               getCompressedCount\n+  #309 = Utf8               firstFrame\n+  #310 = Utf8               garbageMessage\n+  #311 = Utf8               Ljava/lang/String;\n+  #312 = Class              #313          // java/lang/String\n+  #313 = Utf8               java/lang/String\n+  #314 = Class              #15           // \"[B\"\n+  #315 = Utf8               contentSize\n+  #316 = Utf8               skipped\n+  #317 = Utf8               flags\n+  #318 = Utf8               bdByte\n+  #319 = Utf8               headerHash\n+  #320 = Utf8               expectedHash\n+  #321 = Utf8               s\n+  #322 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream;\n+  #323 = Utf8               J\n+  #324 = Utf8               uncompressed\n+  #325 = Utf8               realLen\n+  #326 = Utf8               capped\n+  #327 = Utf8               hash\n+  #328 = Utf8               kind\n+  #329 = Utf8               checksum\n+  #330 = Utf8               cnt\n+  #331 = Utf8               l\n+  #332 = Utf8               before\n+  #333 = Utf8               i\n+  #334 = Utf8               keep\n+  #335 = Utf8               signature\n+  #336 = Utf8               length\n+  #337 = Utf8               shortenedSig\n+  #338 = Utf8               <clinit>\n+  #339 = Utf8               SourceFile\n+  #340 = Utf8               FramedLZ4CompressorInputStream.java\n+  #341 = Utf8               BootstrapMethods\n+  #342 = MethodHandle       6:#343        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #343 = Methodref          #344.#345     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #344 = Class              #346          // java/lang/invoke/LambdaMetafactory\n+  #345 = NameAndType        #347:#348     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #346 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #347 = Utf8               metafactory\n+  #348 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #349 = MethodType         #128          //  ()I\n+  #350 = MethodHandle       7:#125        // REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+  #351 = Utf8               InnerClasses\n+  #352 = Class              #353          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #353 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #354 = Utf8               ByteSupplier\n+  #355 = Class              #356          // java/lang/invoke/MethodHandles$Lookup\n+  #356 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #357 = Class              #358          // java/lang/invoke/MethodHandles\n+  #358 = Utf8               java/lang/invoke/MethodHandles\n+  #359 = Utf8               Lookup\n {\n   static final byte[] LZ4_SIGNATURE;\n     descriptor: [B\n     flags: (0x0018) ACC_STATIC, ACC_FINAL\n \n   private static final byte[] SKIPPABLE_FRAME_TRAILER;\n     descriptor: [B\n@@ -496,45 +496,45 @@\n \n   public org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream(java.io.InputStream, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #2                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #7                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #3                  // Field oneByte:[B\n+         8: putfield      #12                 // Field oneByte:[B\n         11: aload_0\n         12: aload_0\n-        13: invokedynamic #4,  0              // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-        18: putfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        13: invokedynamic #16,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        18: putfield      #20                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         21: aload_0\n-        22: new           #6                  // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        22: new           #24                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         25: dup\n-        26: invokespecial #7                  // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        29: putfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        26: invokespecial #26                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        29: putfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         32: aload_0\n-        33: new           #6                  // class org/apache/commons/compress/compressors/lz4/XXHash32\n+        33: new           #24                 // class org/apache/commons/compress/compressors/lz4/XXHash32\n         36: dup\n-        37: invokespecial #7                  // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n-        40: putfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        37: invokespecial #26                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.\"<init>\":()V\n+        40: putfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         43: aload_0\n-        44: new           #10                 // class org/apache/commons/compress/utils/CountingInputStream\n+        44: new           #34                 // class org/apache/commons/compress/utils/CountingInputStream\n         47: dup\n         48: aload_1\n-        49: invokespecial #11                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        52: putfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        49: invokespecial #36                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        52: putfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         55: aload_0\n         56: iload_2\n-        57: putfield      #13                 // Field decompressConcatenated:Z\n+        57: putfield      #43                 // Field decompressConcatenated:Z\n         60: aload_0\n         61: iconst_1\n-        62: invokespecial #14                 // Method init:(Z)V\n+        62: invokespecial #47                 // Method init:(Z)V\n         65: return\n       LineNumberTable:\n         line 109: 0\n         line 64: 4\n         line 66: 11\n         line 80: 21\n         line 83: 32\n@@ -553,24 +553,24 @@\n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #3                  // Field oneByte:[B\n+         2: getfield      #12                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #15                 // Method read:([BII)I\n+         7: invokevirtual #51                 // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #3                  // Field oneByte:[B\n+        19: getfield      #12                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 118: 0\n@@ -586,30 +586,30 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        19\n          7: aload_0\n-         8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #17                 // Method java/io/InputStream.close:()V\n+         8: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #59                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        23: invokevirtual #18                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        20: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        23: invokevirtual #64                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         26: goto          39\n         29: astore_1\n         30: aload_0\n-        31: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        34: invokevirtual #18                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+        31: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        34: invokevirtual #64                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n         37: aload_1\n         38: athrow\n         39: return\n       Exception table:\n          from    to  target type\n              0    19    29   any\n       LineNumberTable:\n@@ -638,58 +638,58 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #19                 // Field endReached:Z\n+         7: getfield      #65                 // Field endReached:Z\n         10: ifeq          15\n         13: iconst_m1\n         14: ireturn\n         15: aload_0\n         16: aload_1\n         17: iload_2\n         18: iload_3\n-        19: invokespecial #20                 // Method readOnce:([BII)I\n+        19: invokespecial #68                 // Method readOnce:([BII)I\n         22: istore        4\n         24: iload         4\n         26: iconst_m1\n         27: if_icmpne     50\n         30: aload_0\n-        31: invokespecial #21                 // Method nextBlock:()V\n+        31: invokespecial #71                 // Method nextBlock:()V\n         34: aload_0\n-        35: getfield      #19                 // Field endReached:Z\n+        35: getfield      #65                 // Field endReached:Z\n         38: ifne          50\n         41: aload_0\n         42: aload_1\n         43: iload_2\n         44: iload_3\n-        45: invokespecial #20                 // Method readOnce:([BII)I\n+        45: invokespecial #68                 // Method readOnce:([BII)I\n         48: istore        4\n         50: iload         4\n         52: iconst_m1\n         53: if_icmpeq     89\n         56: aload_0\n-        57: getfield      #22                 // Field expectBlockDependency:Z\n+        57: getfield      #74                 // Field expectBlockDependency:Z\n         60: ifeq          71\n         63: aload_0\n         64: aload_1\n         65: iload_2\n         66: iload         4\n-        68: invokespecial #23                 // Method appendToBlockDependencyBuffer:([BII)V\n+        68: invokespecial #77                 // Method appendToBlockDependencyBuffer:([BII)V\n         71: aload_0\n-        72: getfield      #24                 // Field expectContentChecksum:Z\n+        72: getfield      #81                 // Field expectContentChecksum:Z\n         75: ifeq          89\n         78: aload_0\n-        79: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        79: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         82: aload_1\n         83: iload_2\n         84: iload         4\n-        86: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+        86: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n         89: iload         4\n         91: ireturn\n       LineNumberTable:\n         line 137: 0\n         line 138: 4\n         line 140: 6\n         line 141: 13\n@@ -724,36 +724,36 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #26                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #87                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 166: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream;\n \n   private void init(boolean) throws java.io.IOException;\n     descriptor: (Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #27                 // Method readSignature:(Z)Z\n+         2: invokespecial #91                 // Method readSignature:(Z)Z\n          5: ifeq          16\n          8: aload_0\n-         9: invokespecial #28                 // Method readFrameDescriptor:()V\n+         9: invokespecial #95                 // Method readFrameDescriptor:()V\n         12: aload_0\n-        13: invokespecial #21                 // Method nextBlock:()V\n+        13: invokespecial #71                 // Method nextBlock:()V\n         16: return\n       LineNumberTable:\n         line 170: 0\n         line 171: 8\n         line 172: 12\n         line 174: 16\n       LocalVariableTable:\n@@ -768,72 +768,72 @@\n   private boolean readSignature(boolean) throws java.io.IOException;\n     descriptor: (Z)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=5, args_size=2\n          0: iload_1\n          1: ifeq          9\n-         4: ldc           #29                 // String Not a LZ4 frame stream\n+         4: ldc           #98                 // String Not a LZ4 frame stream\n          6: goto          11\n-         9: ldc           #30                 // String LZ4 frame stream followed by garbage\n+         9: ldc           #100                // String LZ4 frame stream followed by garbage\n         11: astore_2\n         12: iconst_4\n         13: newarray       byte\n         15: astore_3\n         16: aload_0\n-        17: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        17: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         20: aload_3\n-        21: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        21: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         24: istore        4\n         26: aload_0\n         27: iload         4\n-        29: invokevirtual #32                 // Method count:(I)V\n+        29: invokevirtual #108                // Method count:(I)V\n         32: iconst_0\n         33: iload         4\n         35: if_icmpne     49\n         38: iload_1\n         39: ifne          49\n         42: aload_0\n         43: iconst_1\n-        44: putfield      #19                 // Field endReached:Z\n+        44: putfield      #65                 // Field endReached:Z\n         47: iconst_0\n         48: ireturn\n         49: iconst_4\n         50: iload         4\n         52: if_icmpeq     64\n-        55: new           #33                 // class java/io/IOException\n+        55: new           #112                // class java/io/IOException\n         58: dup\n         59: aload_2\n-        60: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        60: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         63: athrow\n         64: aload_0\n         65: aload_3\n-        66: invokespecial #35                 // Method skipSkippableFrame:([B)I\n+        66: invokespecial #117                // Method skipSkippableFrame:([B)I\n         69: istore        4\n         71: iconst_0\n         72: iload         4\n         74: if_icmpne     88\n         77: iload_1\n         78: ifne          88\n         81: aload_0\n         82: iconst_1\n-        83: putfield      #19                 // Field endReached:Z\n+        83: putfield      #65                 // Field endReached:Z\n         86: iconst_0\n         87: ireturn\n         88: iconst_4\n         89: iload         4\n         91: if_icmpne     102\n         94: aload_3\n         95: iconst_4\n-        96: invokestatic  #36                 // Method matches:([BI)Z\n+        96: invokestatic  #121                // Method matches:([BI)Z\n         99: ifne          111\n-       102: new           #33                 // class java/io/IOException\n+       102: new           #112                // class java/io/IOException\n        105: dup\n        106: aload_2\n-       107: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       107: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        110: athrow\n        111: iconst_1\n        112: ireturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 12\n         line 179: 16\n@@ -873,171 +873,171 @@\n \n   private void readFrameDescriptor() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=1\n          0: aload_0\n-         1: invokespecial #37                 // Method readOneByte:()I\n+         1: invokespecial #125                // Method readOneByte:()I\n          4: istore_1\n          5: iload_1\n          6: iconst_m1\n          7: if_icmpne     20\n-        10: new           #33                 // class java/io/IOException\n+        10: new           #112                // class java/io/IOException\n         13: dup\n-        14: ldc           #38                 // String Premature end of stream while reading frame flags\n-        16: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #129                // String Premature end of stream while reading frame flags\n+        16: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n-        21: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         24: iload_1\n-        25: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+        25: invokevirtual #131                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n         28: iload_1\n         29: sipush        192\n         32: iand\n         33: bipush        64\n         35: if_icmpeq     68\n-        38: new           #33                 // class java/io/IOException\n+        38: new           #112                // class java/io/IOException\n         41: dup\n-        42: new           #41                 // class java/lang/StringBuilder\n+        42: new           #133                // class java/lang/StringBuilder\n         45: dup\n-        46: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        49: ldc           #43                 // String Unsupported version\n-        51: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokespecial #135                // Method java/lang/StringBuilder.\"<init>\":()V\n+        49: ldc           #136                // String Unsupported version\n+        51: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         54: iload_1\n         55: bipush        6\n         57: ishr\n-        58: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        61: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        64: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        58: invokevirtual #142                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        61: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        64: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         67: athrow\n         68: aload_0\n         69: iload_1\n         70: bipush        32\n         72: iand\n         73: ifne          80\n         76: iconst_1\n         77: goto          81\n         80: iconst_0\n-        81: putfield      #22                 // Field expectBlockDependency:Z\n+        81: putfield      #74                 // Field expectBlockDependency:Z\n         84: aload_0\n-        85: getfield      #22                 // Field expectBlockDependency:Z\n+        85: getfield      #74                 // Field expectBlockDependency:Z\n         88: ifeq          109\n         91: aload_0\n-        92: getfield      #47                 // Field blockDependencyBuffer:[B\n+        92: getfield      #149                // Field blockDependencyBuffer:[B\n         95: ifnonnull     114\n         98: aload_0\n-        99: ldc           #49                 // int 65536\n+        99: ldc           #154                // int 65536\n        101: newarray       byte\n-       103: putfield      #47                 // Field blockDependencyBuffer:[B\n+       103: putfield      #149                // Field blockDependencyBuffer:[B\n        106: goto          114\n        109: aload_0\n        110: aconst_null\n-       111: putfield      #47                 // Field blockDependencyBuffer:[B\n+       111: putfield      #149                // Field blockDependencyBuffer:[B\n        114: aload_0\n        115: iload_1\n        116: bipush        16\n        118: iand\n        119: ifeq          126\n        122: iconst_1\n        123: goto          127\n        126: iconst_0\n-       127: putfield      #50                 // Field expectBlockChecksum:Z\n+       127: putfield      #155                // Field expectBlockChecksum:Z\n        130: aload_0\n        131: iload_1\n        132: bipush        8\n        134: iand\n        135: ifeq          142\n        138: iconst_1\n        139: goto          143\n        142: iconst_0\n-       143: putfield      #51                 // Field expectContentSize:Z\n+       143: putfield      #158                // Field expectContentSize:Z\n        146: aload_0\n        147: iload_1\n        148: iconst_4\n        149: iand\n        150: ifeq          157\n        153: iconst_1\n        154: goto          158\n        157: iconst_0\n-       158: putfield      #24                 // Field expectContentChecksum:Z\n+       158: putfield      #81                 // Field expectContentChecksum:Z\n        161: aload_0\n-       162: invokespecial #37                 // Method readOneByte:()I\n+       162: invokespecial #125                // Method readOneByte:()I\n        165: istore_2\n        166: iload_2\n        167: iconst_m1\n        168: if_icmpne     181\n-       171: new           #33                 // class java/io/IOException\n+       171: new           #112                // class java/io/IOException\n        174: dup\n-       175: ldc           #52                 // String Premature end of stream while reading frame BD byte\n-       177: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       175: ldc           #161                // String Premature end of stream while reading frame BD byte\n+       177: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        180: athrow\n        181: aload_0\n-       182: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       182: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        185: iload_2\n-       186: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n+       186: invokevirtual #131                // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:(I)V\n        189: aload_0\n-       190: getfield      #51                 // Field expectContentSize:Z\n+       190: getfield      #158                // Field expectContentSize:Z\n        193: ifeq          245\n        196: bipush        8\n        198: newarray       byte\n        200: astore_3\n        201: aload_0\n-       202: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+       202: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n        205: aload_3\n-       206: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+       206: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n        209: istore        4\n        211: aload_0\n        212: iload         4\n-       214: invokevirtual #32                 // Method count:(I)V\n+       214: invokevirtual #108                // Method count:(I)V\n        217: bipush        8\n        219: iload         4\n        221: if_icmpeq     234\n-       224: new           #33                 // class java/io/IOException\n+       224: new           #112                // class java/io/IOException\n        227: dup\n-       228: ldc           #53                 // String Premature end of stream while reading content size\n-       230: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       228: ldc           #163                // String Premature end of stream while reading content size\n+       230: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        233: athrow\n        234: aload_0\n-       235: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       235: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n        238: aload_3\n        239: iconst_0\n        240: aload_3\n        241: arraylength\n-       242: invokevirtual #25                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n+       242: invokevirtual #84                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.update:([BII)V\n        245: aload_0\n-       246: invokespecial #37                 // Method readOneByte:()I\n+       246: invokespecial #125                // Method readOneByte:()I\n        249: istore_3\n        250: iload_3\n        251: iconst_m1\n        252: if_icmpne     265\n-       255: new           #33                 // class java/io/IOException\n+       255: new           #112                // class java/io/IOException\n        258: dup\n-       259: ldc           #54                 // String Premature end of stream while reading frame header checksum\n-       261: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       259: ldc           #165                // String Premature end of stream while reading frame header checksum\n+       261: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        264: athrow\n        265: aload_0\n-       266: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       269: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+       266: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       269: invokevirtual #167                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n        272: bipush        8\n        274: lshr\n-       275: ldc2_w        #56                 // long 255l\n+       275: ldc2_w        #170                // long 255l\n        278: land\n        279: l2i\n        280: istore        4\n        282: aload_0\n-       283: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-       286: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+       283: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+       286: invokevirtual #172                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n        289: iload_3\n        290: iload         4\n        292: if_icmpeq     305\n-       295: new           #33                 // class java/io/IOException\n+       295: new           #112                // class java/io/IOException\n        298: dup\n-       299: ldc           #59                 // String Frame header checksum mismatch\n-       301: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       299: ldc           #175                // String Frame header checksum mismatch\n+       301: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        304: athrow\n        305: return\n       LineNumberTable:\n         line 203: 0\n         line 204: 5\n         line 205: 10\n         line 207: 20\n@@ -1129,95 +1129,95 @@\n \n   private void nextBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=7, args_size=1\n          0: aload_0\n-         1: invokespecial #60                 // Method maybeFinishCurrentBlock:()V\n+         1: invokespecial #177                // Method maybeFinishCurrentBlock:()V\n          4: aload_0\n-         5: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+         5: getfield      #20                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n          8: iconst_4\n-         9: invokestatic  #61                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+         9: invokestatic  #180                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         12: lstore_1\n         13: lload_1\n-        14: ldc2_w        #62                 // long -2147483648l\n+        14: ldc2_w        #186                // long -2147483648l\n         17: land\n         18: lconst_0\n         19: lcmp\n         20: ifeq          27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n         28: istore_3\n         29: lload_1\n-        30: ldc2_w        #64                 // long 2147483647l\n+        30: ldc2_w        #188                // long 2147483647l\n         33: land\n         34: l2i\n         35: istore        4\n         37: iload         4\n         39: ifne          67\n         42: aload_0\n-        43: invokespecial #66                 // Method verifyContentChecksum:()V\n+        43: invokespecial #190                // Method verifyContentChecksum:()V\n         46: aload_0\n-        47: getfield      #13                 // Field decompressConcatenated:Z\n+        47: getfield      #43                 // Field decompressConcatenated:Z\n         50: ifne          61\n         53: aload_0\n         54: iconst_1\n-        55: putfield      #19                 // Field endReached:Z\n+        55: putfield      #65                 // Field endReached:Z\n         58: goto          66\n         61: aload_0\n         62: iconst_0\n-        63: invokespecial #14                 // Method init:(Z)V\n+        63: invokespecial #47                 // Method init:(Z)V\n         66: return\n-        67: new           #67                 // class org/apache/commons/compress/utils/BoundedInputStream\n+        67: new           #193                // class org/apache/commons/compress/utils/BoundedInputStream\n         70: dup\n         71: aload_0\n-        72: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        72: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         75: iload         4\n         77: i2l\n-        78: invokespecial #68                 // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n+        78: invokespecial #195                // Method org/apache/commons/compress/utils/BoundedInputStream.\"<init>\":(Ljava/io/InputStream;J)V\n         81: astore        5\n         83: aload_0\n-        84: getfield      #50                 // Field expectBlockChecksum:Z\n+        84: getfield      #155                // Field expectBlockChecksum:Z\n         87: ifeq          105\n-        90: new           #69                 // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n+        90: new           #198                // class org/apache/commons/compress/utils/ChecksumCalculatingInputStream\n         93: dup\n         94: aload_0\n-        95: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        95: getfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n         98: aload         5\n-       100: invokespecial #70                 // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n+       100: invokespecial #200                // Method org/apache/commons/compress/utils/ChecksumCalculatingInputStream.\"<init>\":(Ljava/util/zip/Checksum;Ljava/io/InputStream;)V\n        103: astore        5\n        105: iload_3\n        106: ifeq          123\n        109: aload_0\n        110: iconst_1\n-       111: putfield      #71                 // Field inUncompressed:Z\n+       111: putfield      #203                // Field inUncompressed:Z\n        114: aload_0\n        115: aload         5\n-       117: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+       117: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n        120: goto          161\n        123: aload_0\n        124: iconst_0\n-       125: putfield      #71                 // Field inUncompressed:Z\n-       128: new           #48                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+       125: putfield      #203                // Field inUncompressed:Z\n+       128: new           #152                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n        131: dup\n        132: aload         5\n-       134: invokespecial #72                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+       134: invokespecial #206                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.\"<init>\":(Ljava/io/InputStream;)V\n        137: astore        6\n        139: aload_0\n-       140: getfield      #22                 // Field expectBlockDependency:Z\n+       140: getfield      #74                 // Field expectBlockDependency:Z\n        143: ifeq          155\n        146: aload         6\n        148: aload_0\n-       149: getfield      #47                 // Field blockDependencyBuffer:[B\n-       152: invokevirtual #73                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n+       149: getfield      #149                // Field blockDependencyBuffer:[B\n+       152: invokevirtual #207                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.prefill:([B)V\n        155: aload_0\n        156: aload         6\n-       158: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+       158: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n        161: return\n       LineNumberTable:\n         line 248: 0\n         line 249: 4\n         line 250: 13\n         line 251: 29\n         line 252: 37\n@@ -1271,33 +1271,33 @@\n \n   private void maybeFinishCurrentBlock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+         1: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n          4: ifnull        43\n          7: aload_0\n-         8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        11: invokevirtual #17                 // Method java/io/InputStream.close:()V\n+         8: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n+        11: invokevirtual #59                 // Method java/io/InputStream.close:()V\n         14: aload_0\n         15: aconst_null\n-        16: putfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+        16: putfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         19: aload_0\n-        20: getfield      #50                 // Field expectBlockChecksum:Z\n+        20: getfield      #155                // Field expectBlockChecksum:Z\n         23: ifeq          43\n         26: aload_0\n         27: aload_0\n-        28: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        31: ldc           #74                 // String block\n-        33: invokespecial #75                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+        28: getfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        31: ldc           #211                // String block\n+        33: invokespecial #213                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         36: aload_0\n-        37: getfield      #9                  // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        40: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        37: getfield      #31                 // Field blockHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        40: invokevirtual #172                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         43: return\n       LineNumberTable:\n         line 279: 0\n         line 280: 7\n         line 281: 14\n         line 282: 19\n         line 283: 26\n@@ -1313,24 +1313,24 @@\n \n   private void verifyContentChecksum() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #24                 // Field expectContentChecksum:Z\n+         1: getfield      #81                 // Field expectContentChecksum:Z\n          4: ifeq          17\n          7: aload_0\n          8: aload_0\n-         9: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        12: ldc           #76                 // String content\n-        14: invokespecial #75                 // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n+         9: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        12: ldc           #217                // String content\n+        14: invokespecial #213                // Method verifyChecksum:(Lorg/apache/commons/compress/compressors/lz4/XXHash32;Ljava/lang/String;)V\n         17: aload_0\n-        18: getfield      #8                  // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n-        21: invokevirtual #58                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n+        18: getfield      #27                 // Field contentHash:Lorg/apache/commons/compress/compressors/lz4/XXHash32;\n+        21: invokevirtual #172                // Method org/apache/commons/compress/compressors/lz4/XXHash32.reset:()V\n         24: return\n       LineNumberTable:\n         line 290: 0\n         line 291: 7\n         line 293: 17\n         line 294: 24\n       LocalVariableTable:\n@@ -1346,57 +1346,57 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=7, args_size=3\n          0: iconst_4\n          1: newarray       byte\n          3: astore_3\n          4: aload_0\n-         5: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         5: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n          8: aload_3\n-         9: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+         9: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         12: istore        4\n         14: aload_0\n         15: iload         4\n-        17: invokevirtual #32                 // Method count:(I)V\n+        17: invokevirtual #108                // Method count:(I)V\n         20: iconst_4\n         21: iload         4\n         23: if_icmpeq     58\n-        26: new           #33                 // class java/io/IOException\n+        26: new           #112                // class java/io/IOException\n         29: dup\n-        30: new           #41                 // class java/lang/StringBuilder\n+        30: new           #133                // class java/lang/StringBuilder\n         33: dup\n-        34: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #77                 // String Premature end of stream while reading\n-        39: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokespecial #135                // Method java/lang/StringBuilder.\"<init>\":()V\n+        37: ldc           #219                // String Premature end of stream while reading\n+        39: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         42: aload_2\n-        43: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: ldc           #78                 // String  checksum\n-        48: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        43: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: ldc           #221                // String  checksum\n+        48: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         57: athrow\n         58: aload_1\n-        59: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n+        59: invokevirtual #167                // Method org/apache/commons/compress/compressors/lz4/XXHash32.getValue:()J\n         62: lstore        5\n         64: lload         5\n         66: aload_3\n-        67: invokestatic  #79                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n+        67: invokestatic  #223                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:([B)J\n         70: lcmp\n         71: ifeq          101\n-        74: new           #33                 // class java/io/IOException\n+        74: new           #112                // class java/io/IOException\n         77: dup\n-        78: new           #41                 // class java/lang/StringBuilder\n+        78: new           #133                // class java/lang/StringBuilder\n         81: dup\n-        82: invokespecial #42                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        82: invokespecial #135                // Method java/lang/StringBuilder.\"<init>\":()V\n         85: aload_2\n-        86: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: ldc           #80                 // String  checksum mismatch.\n-        91: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        94: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        97: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        86: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        89: ldc           #226                // String  checksum mismatch.\n+        91: invokevirtual #138                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        94: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        97: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        100: athrow\n        101: return\n       LineNumberTable:\n         line 297: 0\n         line 298: 4\n         line 299: 14\n         line 300: 20\n@@ -1425,23 +1425,23 @@\n \n   private int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #81                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         1: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #228                // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #32                 // Method count:(I)V\n+        15: invokevirtual #108                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1463,48 +1463,48 @@\n \n   private int readOnce(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_0\n-         1: getfield      #71                 // Field inUncompressed:Z\n+         1: getfield      #203                // Field inUncompressed:Z\n          4: ifeq          28\n          7: aload_0\n-         8: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+         8: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #82                 // Method java/io/InputStream.read:([BII)I\n+        14: invokevirtual #230                // Method java/io/InputStream.read:([BII)I\n         17: istore        4\n         19: aload_0\n         20: iload         4\n-        22: invokevirtual #32                 // Method count:(I)V\n+        22: invokevirtual #108                // Method count:(I)V\n         25: iload         4\n         27: ireturn\n         28: aload_0\n-        29: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n-        32: checkcast     #48                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n+        29: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n+        32: checkcast     #152                // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n         35: astore        4\n         37: aload         4\n-        39: invokevirtual #83                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        39: invokevirtual #231                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         42: lstore        5\n         44: aload_0\n-        45: getfield      #16                 // Field currentBlock:Ljava/io/InputStream;\n+        45: getfield      #55                 // Field currentBlock:Ljava/io/InputStream;\n         48: aload_1\n         49: iload_2\n         50: iload_3\n-        51: invokevirtual #82                 // Method java/io/InputStream.read:([BII)I\n+        51: invokevirtual #230                // Method java/io/InputStream.read:([BII)I\n         54: istore        7\n         56: aload_0\n         57: aload         4\n-        59: invokevirtual #83                 // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n+        59: invokevirtual #231                // Method org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream.getBytesRead:()J\n         62: lload         5\n         64: lsub\n-        65: invokevirtual #84                 // Method count:(J)V\n+        65: invokevirtual #232                // Method count:(J)V\n         68: iload         7\n         70: ireturn\n       LineNumberTable:\n         line 319: 0\n         line 320: 7\n         line 321: 19\n         line 322: 25\n@@ -1546,15 +1546,15 @@\n         14: istore_1\n         15: iload_1\n         16: iconst_4\n         17: if_icmpge     41\n         20: aload_0\n         21: iload_1\n         22: baload\n-        23: getstatic     #85                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        23: getstatic     #235                // Field SKIPPABLE_FRAME_TRAILER:[B\n         26: iload_1\n         27: iconst_1\n         28: isub\n         29: baload\n         30: if_icmpeq     35\n         33: iconst_0\n         34: ireturn\n@@ -1590,55 +1590,55 @@\n       stack=4, locals=7, args_size=2\n          0: iconst_4\n          1: istore_2\n          2: iload_2\n          3: iconst_4\n          4: if_icmpne     89\n          7: aload_1\n-         8: invokestatic  #86                 // Method isSkippableFrameSignature:([B)Z\n+         8: invokestatic  #238                // Method isSkippableFrameSignature:([B)Z\n         11: ifeq          89\n         14: aload_0\n-        15: getfield      #5                  // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        15: getfield      #20                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         18: iconst_4\n-        19: invokestatic  #61                 // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n+        19: invokestatic  #180                // Method org/apache/commons/compress/utils/ByteUtils.fromLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;I)J\n         22: lstore_3\n         23: lload_3\n         24: lconst_0\n         25: lcmp\n         26: ifge          39\n-        29: new           #33                 // class java/io/IOException\n+        29: new           #112                // class java/io/IOException\n         32: dup\n-        33: ldc           #87                 // String Found illegal skippable frame with negative size\n-        35: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        33: ldc           #242                // String Found illegal skippable frame with negative size\n+        35: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         38: athrow\n         39: aload_0\n-        40: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        40: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         43: lload_3\n-        44: invokestatic  #88                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+        44: invokestatic  #244                // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n         47: lstore        5\n         49: aload_0\n         50: lload         5\n-        52: invokevirtual #84                 // Method count:(J)V\n+        52: invokevirtual #232                // Method count:(J)V\n         55: lload_3\n         56: lload         5\n         58: lcmp\n         59: ifeq          72\n-        62: new           #33                 // class java/io/IOException\n+        62: new           #112                // class java/io/IOException\n         65: dup\n-        66: ldc           #89                 // String Premature end of stream while skipping frame\n-        68: invokespecial #34                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        66: ldc           #248                // String Premature end of stream while skipping frame\n+        68: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         71: athrow\n         72: aload_0\n-        73: getfield      #12                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        73: getfield      #39                 // Field inputStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         76: aload_1\n-        77: invokestatic  #31                 // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n+        77: invokestatic  #102                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[B)I\n         80: istore_2\n         81: aload_0\n         82: iload_2\n-        83: invokevirtual #32                 // Method count:(I)V\n+        83: invokevirtual #108                // Method count:(I)V\n         86: goto          2\n         89: iload_2\n         90: ireturn\n       LineNumberTable:\n         line 352: 0\n         line 353: 2\n         line 354: 14\n@@ -1677,43 +1677,43 @@\n   private void appendToBlockDependencyBuffer(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: getfield      #47                 // Field blockDependencyBuffer:[B\n+         2: getfield      #149                // Field blockDependencyBuffer:[B\n          5: arraylength\n-         6: invokestatic  #90                 // Method java/lang/Math.min:(II)I\n+         6: invokestatic  #250                // Method java/lang/Math.min:(II)I\n          9: istore_3\n         10: iload_3\n         11: ifle          55\n         14: aload_0\n-        15: getfield      #47                 // Field blockDependencyBuffer:[B\n+        15: getfield      #149                // Field blockDependencyBuffer:[B\n         18: arraylength\n         19: iload_3\n         20: isub\n         21: istore        4\n         23: iload         4\n         25: ifle          43\n         28: aload_0\n-        29: getfield      #47                 // Field blockDependencyBuffer:[B\n+        29: getfield      #149                // Field blockDependencyBuffer:[B\n         32: iload_3\n         33: aload_0\n-        34: getfield      #47                 // Field blockDependencyBuffer:[B\n+        34: getfield      #149                // Field blockDependencyBuffer:[B\n         37: iconst_0\n         38: iload         4\n-        40: invokestatic  #91                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        40: invokestatic  #256                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         43: aload_1\n         44: iload_2\n         45: aload_0\n-        46: getfield      #47                 // Field blockDependencyBuffer:[B\n+        46: getfield      #149                // Field blockDependencyBuffer:[B\n         49: iload         4\n         51: iload_3\n-        52: invokestatic  #91                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        52: invokestatic  #256                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         55: return\n       LineNumberTable:\n         line 370: 0\n         line 371: 10\n         line 372: 14\n         line 373: 23\n         line 375: 28\n@@ -1735,40 +1735,40 @@\n \n   public static boolean matches(byte[], int);\n     descriptor: ([BI)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: iload_1\n-         1: getstatic     #92                 // Field LZ4_SIGNATURE:[B\n+         1: getstatic     #262                // Field LZ4_SIGNATURE:[B\n          4: arraylength\n          5: if_icmpge     10\n          8: iconst_0\n          9: ireturn\n         10: aload_0\n         11: astore_2\n         12: aload_0\n         13: arraylength\n-        14: getstatic     #92                 // Field LZ4_SIGNATURE:[B\n+        14: getstatic     #262                // Field LZ4_SIGNATURE:[B\n         17: arraylength\n         18: if_icmple     39\n-        21: getstatic     #92                 // Field LZ4_SIGNATURE:[B\n+        21: getstatic     #262                // Field LZ4_SIGNATURE:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_2\n         28: aload_0\n         29: iconst_0\n         30: aload_2\n         31: iconst_0\n-        32: getstatic     #92                 // Field LZ4_SIGNATURE:[B\n+        32: getstatic     #262                // Field LZ4_SIGNATURE:[B\n         35: arraylength\n-        36: invokestatic  #91                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        36: invokestatic  #256                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         39: aload_2\n-        40: getstatic     #92                 // Field LZ4_SIGNATURE:[B\n-        43: invokestatic  #93                 // Method java/util/Arrays.equals:([B[B)Z\n+        40: getstatic     #262                // Field LZ4_SIGNATURE:[B\n+        43: invokestatic  #265                // Method java/util/Arrays.equals:([B[B)Z\n         46: ireturn\n       LineNumberTable:\n         line 393: 0\n         line 394: 8\n         line 397: 10\n         line 398: 12\n         line 399: 21\n@@ -1804,38 +1804,38 @@\n         13: iconst_2\n         14: bipush        77\n         16: bastore\n         17: dup\n         18: iconst_3\n         19: bipush        24\n         21: bastore\n-        22: putstatic     #92                 // Field LZ4_SIGNATURE:[B\n+        22: putstatic     #262                // Field LZ4_SIGNATURE:[B\n         25: iconst_3\n         26: newarray       byte\n         28: dup\n         29: iconst_0\n         30: bipush        42\n         32: bastore\n         33: dup\n         34: iconst_1\n         35: bipush        77\n         37: bastore\n         38: dup\n         39: iconst_2\n         40: bipush        24\n         42: bastore\n-        43: putstatic     #85                 // Field SKIPPABLE_FRAME_TRAILER:[B\n+        43: putstatic     #235                // Field SKIPPABLE_FRAME_TRAILER:[B\n         46: return\n       LineNumberTable:\n         line 46: 0\n         line 49: 25\n }\n SourceFile: \"FramedLZ4CompressorInputStream.java\"\n-InnerClasses:\n-  public static #123= #122 of #276;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #355= #354 of #357; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #221 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #342 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #222 ()I\n-      #223 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n-      #222 ()I\n+      #349 ()I\n+      #350 REF_invokeSpecial org/apache/commons/compress/compressors/lz4/FramedLZ4CompressorInputStream.readOneByte:()I\n+      #349 ()I\n+InnerClasses:\n+  public static #354= #352 of #181;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n+  public static final #359= #355 of #357; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
