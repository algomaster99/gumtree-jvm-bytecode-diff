{"diffoscope-json-version": 1, "source1": "first/BootstrapMethod.class", "source2": "second/BootstrapMethod.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum 2a422c88be34253aaf3e595841e7f45b7af1b0c4f87e78b81e9a6c32da8a25a8\n+  SHA-256 checksum 016d86535a28a147a362392a5b637233a5d4b33ee5e955bde2394c2d188d12f1\n   Compiled from \"BootstrapMethod.java\"\n public class org.apache.bcel.classfile.BootstrapMethod implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #28                         // org/apache/bcel/classfile/BootstrapMethod\n   super_class: #30                        // java/lang/Object\n   interfaces: 1, fields: 2, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #28.#89       // org/apache/bcel/classfile/BootstrapMethod.getBootstrapMethodRef:()I\n-    #2 = Methodref          #28.#90       // org/apache/bcel/classfile/BootstrapMethod.getBootstrapArguments:()[I\n-    #3 = Methodref          #28.#91       // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(I[I)V\n-    #4 = InterfaceMethodref #92.#93       // java/io/DataInput.readUnsignedShort:()I\n-    #5 = Methodref          #28.#94       // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(II)V\n-    #6 = Fieldref           #28.#95       // org/apache/bcel/classfile/BootstrapMethod.bootstrapArguments:[I\n-    #7 = Methodref          #30.#96       // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #28.#97       // org/apache/bcel/classfile/BootstrapMethod.bootstrapMethodRef:I\n-    #9 = Class              #98           // java/lang/StringBuilder\n-   #10 = Methodref          #9.#96        // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = String             #99           // BootstrapMethod(\n-   #12 = Methodref          #9.#100       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #9.#101       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #14 = String             #102          // ,\n-   #15 = Methodref          #103.#104     // java/util/Arrays.toString:([I)Ljava/lang/String;\n-   #16 = String             #105          // )\n-   #17 = Methodref          #9.#106       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Class              #107          // org/apache/bcel/Const\n-   #19 = Methodref          #108.#109     // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #20 = Methodref          #110.#111     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #21 = String             #112          // \\nMethod Arguments:\n-   #22 = String             #113          // \\n\n-   #23 = String             #114          // :\n-   #24 = Methodref          #108.#115     // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #25 = Methodref          #108.#116     // org/apache/bcel/classfile/ConstantPool.constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-   #26 = Methodref          #117.#118     // java/io/DataOutputStream.writeShort:(I)V\n-   #27 = Methodref          #30.#119      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #28 = Class              #120          // org/apache/bcel/classfile/BootstrapMethod\n-   #29 = Class              #121          // java/lang/CloneNotSupportedException\n-   #30 = Class              #122          // java/lang/Object\n-   #31 = Class              #123          // java/lang/Cloneable\n+    #1 = Methodref          #28.#86       // org/apache/bcel/classfile/BootstrapMethod.getBootstrapMethodRef:()I\n+    #2 = Methodref          #28.#87       // org/apache/bcel/classfile/BootstrapMethod.getBootstrapArguments:()[I\n+    #3 = Methodref          #28.#88       // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(I[I)V\n+    #4 = InterfaceMethodref #49.#89       // java/io/DataInput.readUnsignedShort:()I\n+    #5 = Methodref          #28.#90       // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(II)V\n+    #6 = Fieldref           #28.#91       // org/apache/bcel/classfile/BootstrapMethod.bootstrapArguments:[I\n+    #7 = Methodref          #30.#92       // java/lang/Object.\"<init>\":()V\n+    #8 = Fieldref           #28.#93       // org/apache/bcel/classfile/BootstrapMethod.bootstrapMethodRef:I\n+    #9 = Class              #94           // java/lang/StringBuilder\n+   #10 = Methodref          #9.#92        // java/lang/StringBuilder.\"<init>\":()V\n+   #11 = String             #95           // BootstrapMethod(\n+   #12 = Methodref          #9.#96        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #13 = Methodref          #9.#97        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #14 = String             #98           // ,\n+   #15 = Methodref          #99.#100      // java/util/Arrays.toString:([I)Ljava/lang/String;\n+   #16 = String             #101          // )\n+   #17 = Methodref          #9.#102       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #18 = Class              #103          // org/apache/bcel/Const\n+   #19 = Methodref          #74.#104      // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+   #20 = Methodref          #105.#106     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #21 = String             #107          // \\nMethod Arguments:\n+   #22 = String             #108          // \\n\n+   #23 = String             #109          // :\n+   #24 = Methodref          #74.#110      // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #25 = Methodref          #74.#111      // org/apache/bcel/classfile/ConstantPool.constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+   #26 = Methodref          #112.#113     // java/io/DataOutputStream.writeShort:(I)V\n+   #27 = Methodref          #30.#114      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #28 = Class              #115          // org/apache/bcel/classfile/BootstrapMethod\n+   #29 = Class              #116          // java/lang/CloneNotSupportedException\n+   #30 = Class              #117          // java/lang/Object\n+   #31 = Class              #118          // java/lang/Cloneable\n    #32 = Utf8               bootstrapMethodRef\n    #33 = Utf8               I\n    #34 = Utf8               bootstrapArguments\n    #35 = Utf8               [I\n    #36 = Utf8               <init>\n    #37 = Utf8               (Lorg/apache/bcel/classfile/BootstrapMethod;)V\n    #38 = Utf8               Code\n@@ -52,112 +52,107 @@\n    #42 = Utf8               Lorg/apache/bcel/classfile/BootstrapMethod;\n    #43 = Utf8               c\n    #44 = Utf8               (Ljava/io/DataInput;)V\n    #45 = Utf8               i\n    #46 = Utf8               input\n    #47 = Utf8               Ljava/io/DataInput;\n    #48 = Utf8               StackMapTable\n-   #49 = Class              #120          // org/apache/bcel/classfile/BootstrapMethod\n-   #50 = Class              #124          // java/io/DataInput\n-   #51 = Utf8               Exceptions\n-   #52 = Class              #125          // java/io/IOException\n-   #53 = Utf8               (II)V\n-   #54 = Utf8               bootstrap_method_ref\n-   #55 = Utf8               num_bootstrap_arguments\n-   #56 = Utf8               (I[I)V\n-   #57 = Utf8               getBootstrapMethodRef\n-   #58 = Utf8               ()I\n-   #59 = Utf8               setBootstrapMethodRef\n-   #60 = Utf8               (I)V\n-   #61 = Utf8               getBootstrapArguments\n-   #62 = Utf8               ()[I\n-   #63 = Utf8               getNumBootstrapArguments\n-   #64 = Utf8               setBootstrapArguments\n-   #65 = Utf8               ([I)V\n-   #66 = Utf8               toString\n-   #67 = Utf8               ()Ljava/lang/String;\n-   #68 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #69 = Utf8               constantPool\n-   #70 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #71 = Utf8               buf\n-   #72 = Utf8               Ljava/lang/StringBuilder;\n-   #73 = Utf8               bootstrap_method_name\n-   #74 = Utf8               Ljava/lang/String;\n-   #75 = Class              #126          // org/apache/bcel/classfile/ConstantPool\n-   #76 = Class              #98           // java/lang/StringBuilder\n-   #77 = Class              #127          // java/lang/String\n-   #78 = Utf8               dump\n-   #79 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #80 = Utf8               bootstrap_argument\n-   #81 = Utf8               file\n-   #82 = Utf8               Ljava/io/DataOutputStream;\n-   #83 = Class              #35           // \"[I\"\n-   #84 = Utf8               copy\n-   #85 = Utf8               ()Lorg/apache/bcel/classfile/BootstrapMethod;\n-   #86 = Class              #121          // java/lang/CloneNotSupportedException\n-   #87 = Utf8               SourceFile\n-   #88 = Utf8               BootstrapMethod.java\n-   #89 = NameAndType        #57:#58       // getBootstrapMethodRef:()I\n-   #90 = NameAndType        #61:#62       // getBootstrapArguments:()[I\n-   #91 = NameAndType        #36:#56       // \"<init>\":(I[I)V\n-   #92 = Class              #124          // java/io/DataInput\n-   #93 = NameAndType        #128:#58      // readUnsignedShort:()I\n-   #94 = NameAndType        #36:#53       // \"<init>\":(II)V\n-   #95 = NameAndType        #34:#35       // bootstrapArguments:[I\n-   #96 = NameAndType        #36:#129      // \"<init>\":()V\n-   #97 = NameAndType        #32:#33       // bootstrapMethodRef:I\n-   #98 = Utf8               java/lang/StringBuilder\n-   #99 = Utf8               BootstrapMethod(\n-  #100 = NameAndType        #130:#131     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #101 = NameAndType        #130:#132     // append:(I)Ljava/lang/StringBuilder;\n-  #102 = Utf8               ,\n-  #103 = Class              #133          // java/util/Arrays\n-  #104 = NameAndType        #66:#134      // toString:([I)Ljava/lang/String;\n-  #105 = Utf8               )\n-  #106 = NameAndType        #66:#67       // toString:()Ljava/lang/String;\n-  #107 = Utf8               org/apache/bcel/Const\n-  #108 = Class              #126          // org/apache/bcel/classfile/ConstantPool\n-  #109 = NameAndType        #135:#136     // constantToString:(IB)Ljava/lang/String;\n-  #110 = Class              #137          // org/apache/bcel/classfile/Utility\n-  #111 = NameAndType        #138:#139     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #112 = Utf8               \\nMethod Arguments:\n-  #113 = Utf8               \\n\n-  #114 = Utf8               :\n-  #115 = NameAndType        #140:#141     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #116 = NameAndType        #135:#142     // constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-  #117 = Class              #143          // java/io/DataOutputStream\n-  #118 = NameAndType        #144:#60      // writeShort:(I)V\n-  #119 = NameAndType        #145:#146     // clone:()Ljava/lang/Object;\n-  #120 = Utf8               org/apache/bcel/classfile/BootstrapMethod\n-  #121 = Utf8               java/lang/CloneNotSupportedException\n-  #122 = Utf8               java/lang/Object\n-  #123 = Utf8               java/lang/Cloneable\n-  #124 = Utf8               java/io/DataInput\n-  #125 = Utf8               java/io/IOException\n-  #126 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #127 = Utf8               java/lang/String\n-  #128 = Utf8               readUnsignedShort\n-  #129 = Utf8               ()V\n-  #130 = Utf8               append\n-  #131 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #132 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #133 = Utf8               java/util/Arrays\n-  #134 = Utf8               ([I)Ljava/lang/String;\n-  #135 = Utf8               constantToString\n-  #136 = Utf8               (IB)Ljava/lang/String;\n-  #137 = Utf8               org/apache/bcel/classfile/Utility\n-  #138 = Utf8               compactClassName\n-  #139 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #140 = Utf8               getConstant\n-  #141 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #142 = Utf8               (Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-  #143 = Utf8               java/io/DataOutputStream\n-  #144 = Utf8               writeShort\n-  #145 = Utf8               clone\n-  #146 = Utf8               ()Ljava/lang/Object;\n+   #49 = Class              #119          // java/io/DataInput\n+   #50 = Utf8               Exceptions\n+   #51 = Class              #120          // java/io/IOException\n+   #52 = Utf8               (II)V\n+   #53 = Utf8               bootstrap_method_ref\n+   #54 = Utf8               num_bootstrap_arguments\n+   #55 = Utf8               (I[I)V\n+   #56 = Utf8               getBootstrapMethodRef\n+   #57 = Utf8               ()I\n+   #58 = Utf8               setBootstrapMethodRef\n+   #59 = Utf8               (I)V\n+   #60 = Utf8               getBootstrapArguments\n+   #61 = Utf8               ()[I\n+   #62 = Utf8               getNumBootstrapArguments\n+   #63 = Utf8               setBootstrapArguments\n+   #64 = Utf8               ([I)V\n+   #65 = Utf8               toString\n+   #66 = Utf8               ()Ljava/lang/String;\n+   #67 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+   #68 = Utf8               constantPool\n+   #69 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+   #70 = Utf8               buf\n+   #71 = Utf8               Ljava/lang/StringBuilder;\n+   #72 = Utf8               bootstrap_method_name\n+   #73 = Utf8               Ljava/lang/String;\n+   #74 = Class              #121          // org/apache/bcel/classfile/ConstantPool\n+   #75 = Class              #122          // java/lang/String\n+   #76 = Utf8               dump\n+   #77 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #78 = Utf8               bootstrap_argument\n+   #79 = Utf8               file\n+   #80 = Utf8               Ljava/io/DataOutputStream;\n+   #81 = Class              #35           // \"[I\"\n+   #82 = Utf8               copy\n+   #83 = Utf8               ()Lorg/apache/bcel/classfile/BootstrapMethod;\n+   #84 = Utf8               SourceFile\n+   #85 = Utf8               BootstrapMethod.java\n+   #86 = NameAndType        #56:#57       // getBootstrapMethodRef:()I\n+   #87 = NameAndType        #60:#61       // getBootstrapArguments:()[I\n+   #88 = NameAndType        #36:#55       // \"<init>\":(I[I)V\n+   #89 = NameAndType        #123:#57      // readUnsignedShort:()I\n+   #90 = NameAndType        #36:#52       // \"<init>\":(II)V\n+   #91 = NameAndType        #34:#35       // bootstrapArguments:[I\n+   #92 = NameAndType        #36:#124      // \"<init>\":()V\n+   #93 = NameAndType        #32:#33       // bootstrapMethodRef:I\n+   #94 = Utf8               java/lang/StringBuilder\n+   #95 = Utf8               BootstrapMethod(\n+   #96 = NameAndType        #125:#126     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = NameAndType        #125:#127     // append:(I)Ljava/lang/StringBuilder;\n+   #98 = Utf8               ,\n+   #99 = Class              #128          // java/util/Arrays\n+  #100 = NameAndType        #65:#129      // toString:([I)Ljava/lang/String;\n+  #101 = Utf8               )\n+  #102 = NameAndType        #65:#66       // toString:()Ljava/lang/String;\n+  #103 = Utf8               org/apache/bcel/Const\n+  #104 = NameAndType        #130:#131     // constantToString:(IB)Ljava/lang/String;\n+  #105 = Class              #132          // org/apache/bcel/classfile/Utility\n+  #106 = NameAndType        #133:#134     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #107 = Utf8               \\nMethod Arguments:\n+  #108 = Utf8               \\n\n+  #109 = Utf8               :\n+  #110 = NameAndType        #135:#136     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #111 = NameAndType        #130:#137     // constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+  #112 = Class              #138          // java/io/DataOutputStream\n+  #113 = NameAndType        #139:#59      // writeShort:(I)V\n+  #114 = NameAndType        #140:#141     // clone:()Ljava/lang/Object;\n+  #115 = Utf8               org/apache/bcel/classfile/BootstrapMethod\n+  #116 = Utf8               java/lang/CloneNotSupportedException\n+  #117 = Utf8               java/lang/Object\n+  #118 = Utf8               java/lang/Cloneable\n+  #119 = Utf8               java/io/DataInput\n+  #120 = Utf8               java/io/IOException\n+  #121 = Utf8               org/apache/bcel/classfile/ConstantPool\n+  #122 = Utf8               java/lang/String\n+  #123 = Utf8               readUnsignedShort\n+  #124 = Utf8               ()V\n+  #125 = Utf8               append\n+  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #127 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #128 = Utf8               java/util/Arrays\n+  #129 = Utf8               ([I)Ljava/lang/String;\n+  #130 = Utf8               constantToString\n+  #131 = Utf8               (IB)Ljava/lang/String;\n+  #132 = Utf8               org/apache/bcel/classfile/Utility\n+  #133 = Utf8               compactClassName\n+  #134 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #135 = Utf8               getConstant\n+  #136 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #137 = Utf8               (Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+  #138 = Utf8               java/io/DataOutputStream\n+  #139 = Utf8               writeShort\n+  #140 = Utf8               clone\n+  #141 = Utf8               ()Ljava/lang/Object;\n {\n   private int bootstrapMethodRef;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int[] bootstrapArguments;\n     descriptor: [I\n"}]}
