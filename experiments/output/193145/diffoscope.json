{"diffoscope-json-version": 1, "source1": "first/ByteArrayOutputStream.class", "source2": "second/ByteArrayOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,209 +1,209 @@\n-  SHA-256 checksum 945b9072997c5df3c4def67722c510a2e004d99ba56f2d0c06f0f7e60e49e4c0\n+  SHA-256 checksum 3074ad10dc42ad1b066530f1c1d86e17db1e9d18932f63e1a59e4e8171aaf4c6\n   Compiled from \"ByteArrayOutputStream.java\"\n public class org.apache.commons.io.output.ByteArrayOutputStream extends org.apache.commons.io.output.AbstractByteArrayOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #22                         // org/apache/commons/io/output/ByteArrayOutputStream\n+  this_class: #4                          // org/apache/commons/io/output/ByteArrayOutputStream\n   super_class: #1                         // org/apache/commons/io/output/AbstractByteArrayOutputStream\n   interfaces: 0, fields: 0, methods: 12, attributes: 3\n Constant pool:\n-    #1 = Class              #73           // org/apache/commons/io/output/AbstractByteArrayOutputStream\n-    #2 = Methodref          #22.#74       // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n-    #3 = Methodref          #1.#75        // org/apache/commons/io/output/AbstractByteArrayOutputStream.\"<init>\":()V\n-    #4 = Class              #76           // java/lang/IllegalArgumentException\n-    #5 = Class              #77           // java/lang/StringBuilder\n-    #6 = Methodref          #5.#75        // java/lang/StringBuilder.\"<init>\":()V\n-    #7 = String             #78           // Negative initial size:\n-    #8 = Methodref          #5.#79        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #9 = Methodref          #5.#80        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #10 = Methodref          #5.#81        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #4.#82        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Methodref          #22.#83       // org/apache/commons/io/output/ByteArrayOutputStream.needNewBuffer:(I)V\n-   #13 = Class              #84           // java/lang/IndexOutOfBoundsException\n-   #14 = Methodref          #13.#75       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #15 = Methodref          #22.#85       // org/apache/commons/io/output/ByteArrayOutputStream.writeImpl:([BII)V\n-   #16 = Methodref          #22.#86       // org/apache/commons/io/output/ByteArrayOutputStream.writeImpl:(I)V\n-   #17 = Methodref          #22.#87       // org/apache/commons/io/output/ByteArrayOutputStream.writeImpl:(Ljava/io/InputStream;)I\n-   #18 = Fieldref           #22.#88       // org/apache/commons/io/output/ByteArrayOutputStream.count:I\n-   #19 = Methodref          #22.#89       // org/apache/commons/io/output/ByteArrayOutputStream.resetImpl:()V\n-   #20 = Methodref          #22.#90       // org/apache/commons/io/output/ByteArrayOutputStream.writeToImpl:(Ljava/io/OutputStream;)V\n-   #21 = Methodref          #22.#91       // org/apache/commons/io/output/ByteArrayOutputStream.toBufferedInputStream:(Ljava/io/InputStream;I)Ljava/io/InputStream;\n-   #22 = Class              #92           // org/apache/commons/io/output/ByteArrayOutputStream\n-   #23 = Methodref          #22.#93       // org/apache/commons/io/output/ByteArrayOutputStream.write:(Ljava/io/InputStream;)I\n-   #24 = Methodref          #22.#94       // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n-   #25 = Methodref          #22.#95       // org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n-   #26 = Class              #96           // java/lang/Throwable\n-   #27 = Methodref          #26.#97       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #28 = InvokeDynamic      #0:#103       // #0:construct:()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n-   #29 = Methodref          #22.#104      // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n-   #30 = Methodref          #22.#105      // org/apache/commons/io/output/ByteArrayOutputStream.toByteArrayImpl:()[B\n-   #31 = Utf8               <init>\n-   #32 = Utf8               ()V\n-   #33 = Utf8               Code\n-   #34 = Utf8               LineNumberTable\n-   #35 = Utf8               LocalVariableTable\n-   #36 = Utf8               this\n-   #37 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n-   #38 = Utf8               (I)V\n-   #39 = Utf8               size\n-   #40 = Utf8               I\n-   #41 = Utf8               StackMapTable\n-   #42 = Class              #106          // java/lang/Object\n-   #43 = Utf8               write\n-   #44 = Utf8               ([BII)V\n-   #45 = Utf8               b\n-   #46 = Utf8               [B\n-   #47 = Utf8               off\n-   #48 = Utf8               len\n-   #49 = Class              #46           // \"[B\"\n-   #50 = Utf8               (Ljava/io/InputStream;)I\n-   #51 = Utf8               in\n-   #52 = Utf8               Ljava/io/InputStream;\n-   #53 = Utf8               Exceptions\n-   #54 = Class              #107          // java/io/IOException\n-   #55 = Utf8               ()I\n-   #56 = Utf8               reset\n-   #57 = Utf8               writeTo\n+    #1 = Class              #2            // org/apache/commons/io/output/AbstractByteArrayOutputStream\n+    #2 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/output/ByteArrayOutputStream.\"<init>\":(I)V\n+    #4 = Class              #6            // org/apache/commons/io/output/ByteArrayOutputStream\n+    #5 = NameAndType        #7:#8         // \"<init>\":(I)V\n+    #6 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (I)V\n+    #9 = Methodref          #1.#10        // org/apache/commons/io/output/AbstractByteArrayOutputStream.\"<init>\":()V\n+   #10 = NameAndType        #7:#11        // \"<init>\":()V\n+   #11 = Utf8               ()V\n+   #12 = Class              #13           // java/lang/IllegalArgumentException\n+   #13 = Utf8               java/lang/IllegalArgumentException\n+   #14 = Class              #15           // java/lang/StringBuilder\n+   #15 = Utf8               java/lang/StringBuilder\n+   #16 = Methodref          #14.#10       // java/lang/StringBuilder.\"<init>\":()V\n+   #17 = String             #18           // Negative initial size:\n+   #18 = Utf8               Negative initial size:\n+   #19 = Methodref          #14.#20       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #20 = NameAndType        #21:#22       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #21 = Utf8               append\n+   #22 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = Methodref          #14.#24       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #24 = NameAndType        #21:#25       // append:(I)Ljava/lang/StringBuilder;\n+   #25 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #26 = Methodref          #14.#27       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #27 = NameAndType        #28:#29       // toString:()Ljava/lang/String;\n+   #28 = Utf8               toString\n+   #29 = Utf8               ()Ljava/lang/String;\n+   #30 = Methodref          #12.#31       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #31 = NameAndType        #7:#32        // \"<init>\":(Ljava/lang/String;)V\n+   #32 = Utf8               (Ljava/lang/String;)V\n+   #33 = Methodref          #4.#34        // org/apache/commons/io/output/ByteArrayOutputStream.needNewBuffer:(I)V\n+   #34 = NameAndType        #35:#8        // needNewBuffer:(I)V\n+   #35 = Utf8               needNewBuffer\n+   #36 = Class              #37           // java/lang/IndexOutOfBoundsException\n+   #37 = Utf8               java/lang/IndexOutOfBoundsException\n+   #38 = Methodref          #36.#10       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #39 = Methodref          #4.#40        // org/apache/commons/io/output/ByteArrayOutputStream.writeImpl:([BII)V\n+   #40 = NameAndType        #41:#42       // writeImpl:([BII)V\n+   #41 = Utf8               writeImpl\n+   #42 = Utf8               ([BII)V\n+   #43 = Methodref          #4.#44        // org/apache/commons/io/output/ByteArrayOutputStream.writeImpl:(I)V\n+   #44 = NameAndType        #41:#8        // writeImpl:(I)V\n+   #45 = Methodref          #4.#46        // org/apache/commons/io/output/ByteArrayOutputStream.writeImpl:(Ljava/io/InputStream;)I\n+   #46 = NameAndType        #41:#47       // writeImpl:(Ljava/io/InputStream;)I\n+   #47 = Utf8               (Ljava/io/InputStream;)I\n+   #48 = Fieldref           #4.#49        // org/apache/commons/io/output/ByteArrayOutputStream.count:I\n+   #49 = NameAndType        #50:#51       // count:I\n+   #50 = Utf8               count\n+   #51 = Utf8               I\n+   #52 = Methodref          #4.#53        // org/apache/commons/io/output/ByteArrayOutputStream.resetImpl:()V\n+   #53 = NameAndType        #54:#11       // resetImpl:()V\n+   #54 = Utf8               resetImpl\n+   #55 = Methodref          #4.#56        // org/apache/commons/io/output/ByteArrayOutputStream.writeToImpl:(Ljava/io/OutputStream;)V\n+   #56 = NameAndType        #57:#58       // writeToImpl:(Ljava/io/OutputStream;)V\n+   #57 = Utf8               writeToImpl\n    #58 = Utf8               (Ljava/io/OutputStream;)V\n-   #59 = Utf8               out\n-   #60 = Utf8               Ljava/io/OutputStream;\n+   #59 = Methodref          #4.#60        // org/apache/commons/io/output/ByteArrayOutputStream.toBufferedInputStream:(Ljava/io/InputStream;I)Ljava/io/InputStream;\n+   #60 = NameAndType        #61:#62       // toBufferedInputStream:(Ljava/io/InputStream;I)Ljava/io/InputStream;\n    #61 = Utf8               toBufferedInputStream\n-   #62 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n-   #63 = Utf8               input\n-   #64 = Utf8               (Ljava/io/InputStream;I)Ljava/io/InputStream;\n-   #65 = Utf8               output\n-   #66 = Class              #108          // java/io/InputStream\n-   #67 = Utf8               toInputStream\n-   #68 = Utf8               ()Ljava/io/InputStream;\n-   #69 = Utf8               toByteArray\n-   #70 = Utf8               ()[B\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               ByteArrayOutputStream.java\n-   #73 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream\n-   #74 = NameAndType        #31:#38       // \"<init>\":(I)V\n-   #75 = NameAndType        #31:#32       // \"<init>\":()V\n-   #76 = Utf8               java/lang/IllegalArgumentException\n-   #77 = Utf8               java/lang/StringBuilder\n-   #78 = Utf8               Negative initial size:\n-   #79 = NameAndType        #109:#110     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #80 = NameAndType        #109:#111     // append:(I)Ljava/lang/StringBuilder;\n-   #81 = NameAndType        #112:#113     // toString:()Ljava/lang/String;\n-   #82 = NameAndType        #31:#114      // \"<init>\":(Ljava/lang/String;)V\n-   #83 = NameAndType        #115:#38      // needNewBuffer:(I)V\n-   #84 = Utf8               java/lang/IndexOutOfBoundsException\n-   #85 = NameAndType        #116:#44      // writeImpl:([BII)V\n-   #86 = NameAndType        #116:#38      // writeImpl:(I)V\n-   #87 = NameAndType        #116:#50      // writeImpl:(Ljava/io/InputStream;)I\n-   #88 = NameAndType        #117:#40      // count:I\n-   #89 = NameAndType        #118:#32      // resetImpl:()V\n-   #90 = NameAndType        #119:#58      // writeToImpl:(Ljava/io/OutputStream;)V\n-   #91 = NameAndType        #61:#64       // toBufferedInputStream:(Ljava/io/InputStream;I)Ljava/io/InputStream;\n-   #92 = Utf8               org/apache/commons/io/output/ByteArrayOutputStream\n-   #93 = NameAndType        #43:#50       // write:(Ljava/io/InputStream;)I\n-   #94 = NameAndType        #67:#68       // toInputStream:()Ljava/io/InputStream;\n-   #95 = NameAndType        #120:#32      // close:()V\n-   #96 = Utf8               java/lang/Throwable\n-   #97 = NameAndType        #121:#122     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #98 = Utf8               BootstrapMethods\n-   #99 = MethodHandle       6:#123        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #100 = MethodType         #124          //  ([BII)Ljava/io/InputStream;\n-  #101 = MethodHandle       8:#125        // REF_newInvokeSpecial java/io/ByteArrayInputStream.\"<init>\":([BII)V\n-  #102 = MethodType         #126          //  ([BII)Ljava/io/ByteArrayInputStream;\n-  #103 = NameAndType        #127:#131     // construct:()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n-  #104 = NameAndType        #67:#132      // toInputStream:(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n-  #105 = NameAndType        #133:#70      // toByteArrayImpl:()[B\n-  #106 = Utf8               java/lang/Object\n-  #107 = Utf8               java/io/IOException\n-  #108 = Utf8               java/io/InputStream\n-  #109 = Utf8               append\n-  #110 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #111 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #112 = Utf8               toString\n-  #113 = Utf8               ()Ljava/lang/String;\n-  #114 = Utf8               (Ljava/lang/String;)V\n-  #115 = Utf8               needNewBuffer\n-  #116 = Utf8               writeImpl\n-  #117 = Utf8               count\n-  #118 = Utf8               resetImpl\n-  #119 = Utf8               writeToImpl\n-  #120 = Utf8               close\n-  #121 = Utf8               addSuppressed\n-  #122 = Utf8               (Ljava/lang/Throwable;)V\n-  #123 = Methodref          #134.#135     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #124 = Utf8               ([BII)Ljava/io/InputStream;\n-  #125 = Methodref          #136.#137     // java/io/ByteArrayInputStream.\"<init>\":([BII)V\n-  #126 = Utf8               ([BII)Ljava/io/ByteArrayInputStream;\n-  #127 = Utf8               construct\n-  #128 = Class              #138          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-  #129 = Utf8               InputStreamConstructor\n-  #130 = Utf8               InnerClasses\n-  #131 = Utf8               ()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n-  #132 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n-  #133 = Utf8               toByteArrayImpl\n-  #134 = Class              #139          // java/lang/invoke/LambdaMetafactory\n-  #135 = NameAndType        #140:#143     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #136 = Class              #144          // java/io/ByteArrayInputStream\n-  #137 = NameAndType        #31:#44       // \"<init>\":([BII)V\n-  #138 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n-  #139 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #140 = Utf8               metafactory\n-  #141 = Class              #146          // java/lang/invoke/MethodHandles$Lookup\n-  #142 = Utf8               Lookup\n-  #143 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #144 = Utf8               java/io/ByteArrayInputStream\n-  #145 = Class              #147          // java/lang/invoke/MethodHandles\n-  #146 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #147 = Utf8               java/lang/invoke/MethodHandles\n+   #62 = Utf8               (Ljava/io/InputStream;I)Ljava/io/InputStream;\n+   #63 = Methodref          #4.#64        // org/apache/commons/io/output/ByteArrayOutputStream.write:(Ljava/io/InputStream;)I\n+   #64 = NameAndType        #65:#47       // write:(Ljava/io/InputStream;)I\n+   #65 = Utf8               write\n+   #66 = Methodref          #4.#67        // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:()Ljava/io/InputStream;\n+   #67 = NameAndType        #68:#69       // toInputStream:()Ljava/io/InputStream;\n+   #68 = Utf8               toInputStream\n+   #69 = Utf8               ()Ljava/io/InputStream;\n+   #70 = Methodref          #4.#71        // org/apache/commons/io/output/ByteArrayOutputStream.close:()V\n+   #71 = NameAndType        #72:#11       // close:()V\n+   #72 = Utf8               close\n+   #73 = Class              #74           // java/lang/Throwable\n+   #74 = Utf8               java/lang/Throwable\n+   #75 = Methodref          #73.#76       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #76 = NameAndType        #77:#78       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #77 = Utf8               addSuppressed\n+   #78 = Utf8               (Ljava/lang/Throwable;)V\n+   #79 = InvokeDynamic      #0:#80        // #0:construct:()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n+   #80 = NameAndType        #81:#82       // construct:()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n+   #81 = Utf8               construct\n+   #82 = Utf8               ()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n+   #83 = Methodref          #4.#84        // org/apache/commons/io/output/ByteArrayOutputStream.toInputStream:(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n+   #84 = NameAndType        #68:#85       // toInputStream:(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n+   #85 = Utf8               (Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n+   #86 = Methodref          #4.#87        // org/apache/commons/io/output/ByteArrayOutputStream.toByteArrayImpl:()[B\n+   #87 = NameAndType        #88:#89       // toByteArrayImpl:()[B\n+   #88 = Utf8               toByteArrayImpl\n+   #89 = Utf8               ()[B\n+   #90 = Utf8               Code\n+   #91 = Utf8               LineNumberTable\n+   #92 = Utf8               LocalVariableTable\n+   #93 = Utf8               this\n+   #94 = Utf8               Lorg/apache/commons/io/output/ByteArrayOutputStream;\n+   #95 = Utf8               size\n+   #96 = Utf8               StackMapTable\n+   #97 = Class              #98           // java/lang/Object\n+   #98 = Utf8               java/lang/Object\n+   #99 = Utf8               b\n+  #100 = Utf8               [B\n+  #101 = Utf8               off\n+  #102 = Utf8               len\n+  #103 = Class              #100          // \"[B\"\n+  #104 = Utf8               in\n+  #105 = Utf8               Ljava/io/InputStream;\n+  #106 = Utf8               Exceptions\n+  #107 = Class              #108          // java/io/IOException\n+  #108 = Utf8               java/io/IOException\n+  #109 = Utf8               ()I\n+  #110 = Utf8               reset\n+  #111 = Utf8               writeTo\n+  #112 = Utf8               out\n+  #113 = Utf8               Ljava/io/OutputStream;\n+  #114 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n+  #115 = Utf8               input\n+  #116 = Utf8               output\n+  #117 = Class              #118          // java/io/InputStream\n+  #118 = Utf8               java/io/InputStream\n+  #119 = Utf8               toByteArray\n+  #120 = Utf8               SourceFile\n+  #121 = Utf8               ByteArrayOutputStream.java\n+  #122 = Utf8               BootstrapMethods\n+  #123 = MethodHandle       6:#124        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #124 = Methodref          #125.#126     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #125 = Class              #127          // java/lang/invoke/LambdaMetafactory\n+  #126 = NameAndType        #128:#129     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #127 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #128 = Utf8               metafactory\n+  #129 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #130 = MethodType         #131          //  ([BII)Ljava/io/InputStream;\n+  #131 = Utf8               ([BII)Ljava/io/InputStream;\n+  #132 = MethodHandle       8:#133        // REF_newInvokeSpecial java/io/ByteArrayInputStream.\"<init>\":([BII)V\n+  #133 = Methodref          #134.#135     // java/io/ByteArrayInputStream.\"<init>\":([BII)V\n+  #134 = Class              #136          // java/io/ByteArrayInputStream\n+  #135 = NameAndType        #7:#42        // \"<init>\":([BII)V\n+  #136 = Utf8               java/io/ByteArrayInputStream\n+  #137 = MethodType         #138          //  ([BII)Ljava/io/ByteArrayInputStream;\n+  #138 = Utf8               ([BII)Ljava/io/ByteArrayInputStream;\n+  #139 = Utf8               InnerClasses\n+  #140 = Class              #141          // org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #141 = Utf8               org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor\n+  #142 = Utf8               InputStreamConstructor\n+  #143 = Class              #144          // java/lang/invoke/MethodHandles$Lookup\n+  #144 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #145 = Class              #146          // java/lang/invoke/MethodHandles\n+  #146 = Utf8               java/lang/invoke/MethodHandles\n+  #147 = Utf8               Lookup\n {\n   public org.apache.commons.io.output.ByteArrayOutputStream();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: sipush        1024\n-         4: invokespecial #2                  // Method \"<init>\":(I)V\n+         4: invokespecial #3                  // Method \"<init>\":(I)V\n          7: return\n       LineNumberTable:\n         line 34: 0\n         line 35: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n \n   public org.apache.commons.io.output.ByteArrayOutputStream(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method org/apache/commons/io/output/AbstractByteArrayOutputStream.\"<init>\":()V\n+         1: invokespecial #9                  // Method org/apache/commons/io/output/AbstractByteArrayOutputStream.\"<init>\":()V\n          4: iload_1\n          5: ifge          35\n-         8: new           #4                  // class java/lang/IllegalArgumentException\n+         8: new           #12                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: new           #5                  // class java/lang/StringBuilder\n+        12: new           #14                 // class java/lang/StringBuilder\n         15: dup\n-        16: invokespecial #6                  // Method java/lang/StringBuilder.\"<init>\":()V\n-        19: ldc           #7                  // String Negative initial size:\n-        21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokespecial #16                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        19: ldc           #17                 // String Negative initial size:\n+        21: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: iload_1\n-        25: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        28: invokevirtual #10                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        31: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        25: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        28: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        31: invokespecial #30                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: dup\n         37: astore_2\n         38: monitorenter\n         39: aload_0\n         40: iload_1\n-        41: invokevirtual #12                 // Method needNewBuffer:(I)V\n+        41: invokevirtual #33                 // Method needNewBuffer:(I)V\n         44: aload_2\n         45: monitorexit\n         46: goto          54\n         49: astore_3\n         50: aload_2\n         51: monitorexit\n         52: aload_3\n@@ -256,30 +256,30 @@\n         17: aload_1\n         18: arraylength\n         19: if_icmpgt     28\n         22: iload_2\n         23: iload_3\n         24: iadd\n         25: ifge          36\n-        28: new           #13                 // class java/lang/IndexOutOfBoundsException\n+        28: new           #36                 // class java/lang/IndexOutOfBoundsException\n         31: dup\n-        32: invokespecial #14                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        32: invokespecial #38                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         35: athrow\n         36: iload_3\n         37: ifne          41\n         40: return\n         41: aload_0\n         42: dup\n         43: astore        4\n         45: monitorenter\n         46: aload_0\n         47: aload_1\n         48: iload_2\n         49: iload_3\n-        50: invokevirtual #15                 // Method writeImpl:([BII)V\n+        50: invokevirtual #39                 // Method writeImpl:([BII)V\n         53: aload         4\n         55: monitorexit\n         56: goto          67\n         59: astore        5\n         61: aload         4\n         63: monitorexit\n         64: aload         5\n@@ -318,15 +318,15 @@\n   public synchronized void write(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #16                 // Method writeImpl:(I)V\n+         2: invokevirtual #43                 // Method writeImpl:(I)V\n          5: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n@@ -335,15 +335,15 @@\n   public synchronized int write(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)I\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #17                 // Method writeImpl:(Ljava/io/InputStream;)I\n+         2: invokevirtual #45                 // Method writeImpl:(Ljava/io/InputStream;)I\n          5: ireturn\n       LineNumberTable:\n         line 78: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n             0       6     1    in   Ljava/io/InputStream;\n@@ -352,29 +352,29 @@\n \n   public synchronized int size();\n     descriptor: ()I\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field count:I\n+         1: getfield      #48                 // Field count:I\n          4: ireturn\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n \n   public synchronized void reset();\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #19                 // Method resetImpl:()V\n+         1: invokevirtual #52                 // Method resetImpl:()V\n          4: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n@@ -382,15 +382,15 @@\n   public synchronized void writeTo(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #20                 // Method writeToImpl:(Ljava/io/OutputStream;)V\n+         2: invokevirtual #55                 // Method writeToImpl:(Ljava/io/OutputStream;)V\n          5: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n@@ -401,53 +401,53 @@\n   public static java.io.InputStream toBufferedInputStream(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)Ljava/io/InputStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: sipush        1024\n-         4: invokestatic  #21                 // Method toBufferedInputStream:(Ljava/io/InputStream;I)Ljava/io/InputStream;\n+         4: invokestatic  #59                 // Method toBufferedInputStream:(Ljava/io/InputStream;I)Ljava/io/InputStream;\n          7: areturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 input   Ljava/io/InputStream;\n     Exceptions:\n       throws java.io.IOException\n \n   public static java.io.InputStream toBufferedInputStream(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)Ljava/io/InputStream;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=2\n-         0: new           #22                 // class org/apache/commons/io/output/ByteArrayOutputStream\n+         0: new           #4                  // class org/apache/commons/io/output/ByteArrayOutputStream\n          3: dup\n          4: iload_1\n-         5: invokespecial #2                  // Method \"<init>\":(I)V\n+         5: invokespecial #3                  // Method \"<init>\":(I)V\n          8: astore_2\n          9: aload_2\n         10: aload_0\n-        11: invokevirtual #23                 // Method write:(Ljava/io/InputStream;)I\n+        11: invokevirtual #63                 // Method write:(Ljava/io/InputStream;)I\n         14: pop\n         15: aload_2\n-        16: invokevirtual #24                 // Method toInputStream:()Ljava/io/InputStream;\n+        16: invokevirtual #66                 // Method toInputStream:()Ljava/io/InputStream;\n         19: astore_3\n         20: aload_2\n-        21: invokevirtual #25                 // Method close:()V\n+        21: invokevirtual #70                 // Method close:()V\n         24: aload_3\n         25: areturn\n         26: astore_3\n         27: aload_2\n-        28: invokevirtual #25                 // Method close:()V\n+        28: invokevirtual #70                 // Method close:()V\n         31: goto          42\n         34: astore        4\n         36: aload_3\n         37: aload         4\n-        39: invokevirtual #27                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        39: invokevirtual #75                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n         42: aload_3\n         43: athrow\n       Exception table:\n          from    to  target type\n              9    20    26   Class java/lang/Throwable\n             27    31    34   Class java/lang/Throwable\n       LineNumberTable:\n@@ -477,40 +477,40 @@\n \n   public synchronized java.io.InputStream toInputStream();\n     descriptor: ()Ljava/io/InputStream;\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokedynamic #28,  0             // InvokeDynamic #0:construct:()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n-         6: invokevirtual #29                 // Method toInputStream:(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n+         1: invokedynamic #79,  0             // InvokeDynamic #0:construct:()Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;\n+         6: invokevirtual #83                 // Method toInputStream:(Lorg/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor;)Ljava/io/InputStream;\n          9: areturn\n       LineNumberTable:\n         line 159: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n \n   public synchronized byte[] toByteArray();\n     descriptor: ()[B\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #30                 // Method toByteArrayImpl:()[B\n+         1: invokevirtual #86                 // Method toByteArrayImpl:()[B\n          4: areturn\n       LineNumberTable:\n         line 164: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/ByteArrayOutputStream;\n }\n SourceFile: \"ByteArrayOutputStream.java\"\n-InnerClasses:\n-  protected static #129= #128 of #1;      // InputStreamConstructor=class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor of class org/apache/commons/io/output/AbstractByteArrayOutputStream\n-  public static final #142= #141 of #145; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #99 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #123 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #100 ([BII)Ljava/io/InputStream;\n-      #101 REF_newInvokeSpecial java/io/ByteArrayInputStream.\"<init>\":([BII)V\n-      #102 ([BII)Ljava/io/ByteArrayInputStream;\n+      #130 ([BII)Ljava/io/InputStream;\n+      #132 REF_newInvokeSpecial java/io/ByteArrayInputStream.\"<init>\":([BII)V\n+      #137 ([BII)Ljava/io/ByteArrayInputStream;\n+InnerClasses:\n+  protected static #142= #140 of #1;      // InputStreamConstructor=class org/apache/commons/io/output/AbstractByteArrayOutputStream$InputStreamConstructor of class org/apache/commons/io/output/AbstractByteArrayOutputStream\n+  public static final #147= #143 of #145; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
