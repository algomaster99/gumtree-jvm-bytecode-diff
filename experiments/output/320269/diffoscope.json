{"diffoscope-json-version": 1, "source1": "first/ModifiedControlVariableCheck.class", "source2": "second/ModifiedControlVariableCheck.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -48,16 +48,16 @@\n         return this.getRequiredTokens();\n     }\n     \n     public void beginTree(final DetailAST detailAST) {\n         this.variableStack.clear();\n     }\n     \n-    public void visitToken(final DetailAST detailAST) {\n-        switch (detailAST.getType()) {\n+    public void visitToken(final DetailAST obj) {\n+        switch (obj.getType()) {\n             case 6: {\n                 this.enterBlock();\n                 break;\n             }\n             case 37:\n             case 91:\n             case 156: {\n@@ -75,38 +75,38 @@\n             case 104:\n             case 105:\n             case 106:\n             case 107:\n             case 108:\n             case 129:\n             case 130: {\n-                this.checkIdent(detailAST);\n+                this.checkIdent(obj);\n                 break;\n             }\n             default: {\n-                throw new IllegalStateException(\"Illegal type of token: \" + detailAST);\n+                throw new IllegalStateException(\"Illegal type of token: \" + String.valueOf((Object)obj));\n             }\n         }\n     }\n     \n-    public void leaveToken(final DetailAST detailAST) {\n-        switch (detailAST.getType()) {\n+    public void leaveToken(final DetailAST obj) {\n+        switch (obj.getType()) {\n             case 37: {\n-                this.leaveForIter(detailAST.getParent());\n+                this.leaveForIter(obj.getParent());\n                 break;\n             }\n             case 156: {\n                 if (!this.skipEnhancedForLoopVariable) {\n-                    this.leaveForEach(detailAST.findFirstToken(10));\n+                    this.leaveForEach(obj.findFirstToken(10));\n                     break;\n                 }\n                 break;\n             }\n             case 91: {\n-                this.leaveForDef(detailAST);\n+                this.leaveForDef(obj);\n                 break;\n             }\n             case 6: {\n                 this.exitBlock();\n                 break;\n             }\n             case 25:\n@@ -124,15 +124,15 @@\n             case 107:\n             case 108:\n             case 129:\n             case 130: {\n                 break;\n             }\n             default: {\n-                throw new IllegalStateException(\"Illegal type of token: \" + detailAST);\n+                throw new IllegalStateException(\"Illegal type of token: \" + String.valueOf((Object)obj));\n             }\n         }\n     }\n     \n     private void enterBlock() {\n         this.variableStack.push(new ArrayDeque<String>());\n     }\n"}]}
