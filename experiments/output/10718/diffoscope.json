{"diffoscope-json-version": 1, "source1": "first/OperandStack.class", "source2": "second/OperandStack.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,249 +1,249 @@\n-  SHA-256 checksum be6a6b77b6db438e7269af66a07ece1cf45dac45181b00d48f9b391eed7c82b8\n+  SHA-256 checksum a9419a3ba4a1a223f7faa76179e41042426f2962290f5722f4d7ace5cbe0a863\n   Compiled from \"OperandStack.java\"\n public class org.apache.bcel.verifier.structurals.OperandStack implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/bcel/verifier/structurals/OperandStack\n-  super_class: #62                        // java/lang/Object\n+  this_class: #11                         // org/apache/bcel/verifier/structurals/OperandStack\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 2, methods: 19, attributes: 1\n Constant pool:\n-    #1 = Methodref          #62.#125      // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #126          // java/util/ArrayList\n-    #3 = Methodref          #2.#125       // java/util/ArrayList.\"<init>\":()V\n-    #4 = Fieldref           #7.#127       // org/apache/bcel/verifier/structurals/OperandStack.stack:Ljava/util/ArrayList;\n-    #5 = Fieldref           #7.#128       // org/apache/bcel/verifier/structurals/OperandStack.maxStack:I\n-    #6 = Methodref          #7.#129       // org/apache/bcel/verifier/structurals/OperandStack.push:(Lorg/apache/bcel/generic/Type;)V\n-    #7 = Class              #130          // org/apache/bcel/verifier/structurals/OperandStack\n-    #8 = Methodref          #7.#131       // org/apache/bcel/verifier/structurals/OperandStack.\"<init>\":(I)V\n-    #9 = Methodref          #2.#132       // java/util/ArrayList.clone:()Ljava/lang/Object;\n-   #10 = Methodref          #2.#133       // java/util/ArrayList.hashCode:()I\n-   #11 = Methodref          #2.#134       // java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n-   #12 = Methodref          #7.#132       // org/apache/bcel/verifier/structurals/OperandStack.clone:()Ljava/lang/Object;\n-   #13 = Methodref          #2.#135       // java/util/ArrayList.isEmpty:()Z\n-   #14 = Methodref          #7.#136       // org/apache/bcel/verifier/structurals/OperandStack.peek:(I)Lorg/apache/bcel/generic/Type;\n-   #15 = Methodref          #7.#137       // org/apache/bcel/verifier/structurals/OperandStack.size:()I\n-   #16 = Methodref          #2.#138       // java/util/ArrayList.get:(I)Ljava/lang/Object;\n-   #17 = Class              #139          // org/apache/bcel/generic/Type\n-   #18 = Methodref          #2.#140       // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-   #19 = Methodref          #7.#141       // org/apache/bcel/verifier/structurals/OperandStack.pop:()Lorg/apache/bcel/generic/Type;\n-   #20 = Class              #142          // org/apache/bcel/verifier/exc/AssertionViolatedException\n-   #21 = String             #143          // Cannot push NULL onto OperandStack.\n-   #22 = Methodref          #20.#144      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n-   #23 = Fieldref           #17.#145      // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-   #24 = Fieldref           #17.#146      // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n-   #25 = Fieldref           #17.#147      // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n-   #26 = Fieldref           #17.#148      // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n-   #27 = Class              #149          // java/lang/StringBuilder\n-   #28 = Methodref          #27.#125      // java/lang/StringBuilder.\"<init>\":()V\n-   #29 = String             #150          // The OperandStack does not know about \\'\n-   #30 = Methodref          #27.#151      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #31 = Methodref          #27.#152      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #32 = String             #153          // \\'; use Type.INT instead.\n-   #33 = Methodref          #27.#154      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #7.#155       // org/apache/bcel/verifier/structurals/OperandStack.slotsUsed:()I\n-   #35 = String             #156          // OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-   #36 = Methodref          #2.#157       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #37 = Methodref          #2.#137       // java/util/ArrayList.size:()I\n-   #38 = Methodref          #17.#158      // org/apache/bcel/generic/Type.getSize:()I\n-   #39 = String             #159          // Slots used:\n-   #40 = Methodref          #27.#160      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #41 = String             #161          //  MaxStack:\n-   #42 = String             #162          // .\\n\n-   #43 = String             #163          //  (Size:\n-   #44 = Methodref          #164.#165     // java/lang/String.valueOf:(I)Ljava/lang/String;\n-   #45 = String             #166          // )\\n\n-   #46 = Class              #167          // org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-   #47 = String             #168          // Cannot merge stacks of different size:\\nOperandStack A:\\n\n-   #48 = String             #169          // \\nOperandStack B:\\n\n-   #49 = Methodref          #46.#144      // org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n-   #50 = Class              #170          // org/apache/bcel/verifier/structurals/UninitializedObjectType\n-   #51 = String             #171          // Backwards branch with an uninitialized object on the stack detected.\n-   #52 = Methodref          #17.#134      // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n-   #53 = Methodref          #50.#172      // org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-   #54 = Methodref          #2.#173       // java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n-   #55 = Class              #174          // org/apache/bcel/generic/ReferenceType\n-   #56 = Methodref          #55.#175      // org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-   #57 = String             #176          // Cannot merge stacks of different types:\\nStack A:\\n\n-   #58 = String             #177          // \\nStack B:\\n\n-   #59 = Class              #178          // java/lang/ClassNotFoundException\n-   #60 = String             #179          // Missing class:\n-   #61 = Methodref          #20.#180      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #62 = Class              #181          // java/lang/Object\n-   #63 = Class              #182          // java/lang/Cloneable\n-   #64 = Utf8               stack\n-   #65 = Utf8               Ljava/util/ArrayList;\n-   #66 = Utf8               Signature\n-   #67 = Utf8               Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n-   #68 = Utf8               maxStack\n-   #69 = Utf8               I\n-   #70 = Utf8               <init>\n-   #71 = Utf8               (I)V\n-   #72 = Utf8               Code\n-   #73 = Utf8               LineNumberTable\n-   #74 = Utf8               LocalVariableTable\n-   #75 = Utf8               this\n-   #76 = Utf8               Lorg/apache/bcel/verifier/structurals/OperandStack;\n-   #77 = Utf8               (ILorg/apache/bcel/generic/ObjectType;)V\n-   #78 = Utf8               obj\n-   #79 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n-   #80 = Utf8               clone\n-   #81 = Utf8               ()Ljava/lang/Object;\n-   #82 = Utf8               newstack\n-   #83 = Utf8               LocalVariableTypeTable\n-   #84 = Utf8               clear\n-   #85 = Utf8               ()V\n-   #86 = Utf8               hashCode\n-   #87 = Utf8               ()I\n-   #88 = Utf8               equals\n-   #89 = Utf8               (Ljava/lang/Object;)Z\n-   #90 = Utf8               o\n-   #91 = Utf8               Ljava/lang/Object;\n-   #92 = Utf8               s\n-   #93 = Utf8               StackMapTable\n-   #94 = Utf8               getClone\n-   #95 = Utf8               ()Lorg/apache/bcel/verifier/structurals/OperandStack;\n-   #96 = Utf8               isEmpty\n-   #97 = Utf8               ()Z\n-   #98 = Utf8               peek\n-   #99 = Utf8               ()Lorg/apache/bcel/generic/Type;\n-  #100 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n-  #101 = Utf8               i\n-  #102 = Utf8               pop\n-  #103 = Utf8               e\n-  #104 = Utf8               Lorg/apache/bcel/generic/Type;\n-  #105 = Utf8               j\n-  #106 = Utf8               push\n-  #107 = Utf8               (Lorg/apache/bcel/generic/Type;)V\n-  #108 = Utf8               type\n-  #109 = Utf8               size\n-  #110 = Utf8               slotsUsed\n-  #111 = Utf8               slots\n-  #112 = Utf8               toString\n-  #113 = Utf8               ()Ljava/lang/String;\n-  #114 = Utf8               sb\n-  #115 = Utf8               Ljava/lang/StringBuilder;\n-  #116 = Utf8               merge\n-  #117 = Utf8               (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n-  #118 = Utf8               Ljava/lang/ClassNotFoundException;\n-  #119 = Utf8               initializeObject\n-  #120 = Utf8               (Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;)V\n-  #121 = Utf8               u\n-  #122 = Utf8               Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;\n-  #123 = Utf8               SourceFile\n-  #124 = Utf8               OperandStack.java\n-  #125 = NameAndType        #70:#85       // \"<init>\":()V\n-  #126 = Utf8               java/util/ArrayList\n-  #127 = NameAndType        #64:#65       // stack:Ljava/util/ArrayList;\n-  #128 = NameAndType        #68:#69       // maxStack:I\n-  #129 = NameAndType        #106:#107     // push:(Lorg/apache/bcel/generic/Type;)V\n-  #130 = Utf8               org/apache/bcel/verifier/structurals/OperandStack\n-  #131 = NameAndType        #70:#71       // \"<init>\":(I)V\n-  #132 = NameAndType        #80:#81       // clone:()Ljava/lang/Object;\n-  #133 = NameAndType        #86:#87       // hashCode:()I\n-  #134 = NameAndType        #88:#89       // equals:(Ljava/lang/Object;)Z\n-  #135 = NameAndType        #96:#97       // isEmpty:()Z\n-  #136 = NameAndType        #98:#100      // peek:(I)Lorg/apache/bcel/generic/Type;\n-  #137 = NameAndType        #109:#87      // size:()I\n-  #138 = NameAndType        #183:#184     // get:(I)Ljava/lang/Object;\n-  #139 = Utf8               org/apache/bcel/generic/Type\n-  #140 = NameAndType        #185:#184     // remove:(I)Ljava/lang/Object;\n-  #141 = NameAndType        #102:#99      // pop:()Lorg/apache/bcel/generic/Type;\n-  #142 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n-  #143 = Utf8               Cannot push NULL onto OperandStack.\n-  #144 = NameAndType        #70:#186      // \"<init>\":(Ljava/lang/String;)V\n-  #145 = NameAndType        #187:#188     // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n-  #146 = NameAndType        #189:#188     // CHAR:Lorg/apache/bcel/generic/BasicType;\n-  #147 = NameAndType        #190:#188     // BYTE:Lorg/apache/bcel/generic/BasicType;\n-  #148 = NameAndType        #191:#188     // SHORT:Lorg/apache/bcel/generic/BasicType;\n-  #149 = Utf8               java/lang/StringBuilder\n-  #150 = Utf8               The OperandStack does not know about \\'\n-  #151 = NameAndType        #192:#193     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #152 = NameAndType        #192:#194     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #153 = Utf8               \\'; use Type.INT instead.\n-  #154 = NameAndType        #112:#113     // toString:()Ljava/lang/String;\n-  #155 = NameAndType        #110:#87      // slotsUsed:()I\n-  #156 = Utf8               OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-  #157 = NameAndType        #195:#89      // add:(Ljava/lang/Object;)Z\n-  #158 = NameAndType        #196:#87      // getSize:()I\n-  #159 = Utf8               Slots used:\n-  #160 = NameAndType        #192:#197     // append:(I)Ljava/lang/StringBuilder;\n-  #161 = Utf8                MaxStack:\n-  #162 = Utf8               .\\n\n-  #163 = Utf8                (Size:\n-  #164 = Class              #198          // java/lang/String\n-  #165 = NameAndType        #199:#200     // valueOf:(I)Ljava/lang/String;\n-  #166 = Utf8               )\\n\n-  #167 = Utf8               org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n-  #168 = Utf8               Cannot merge stacks of different size:\\nOperandStack A:\\n\n-  #169 = Utf8               \\nOperandStack B:\\n\n-  #170 = Utf8               org/apache/bcel/verifier/structurals/UninitializedObjectType\n-  #171 = Utf8               Backwards branch with an uninitialized object on the stack detected.\n-  #172 = NameAndType        #201:#202     // getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-  #173 = NameAndType        #203:#204     // set:(ILjava/lang/Object;)Ljava/lang/Object;\n-  #174 = Utf8               org/apache/bcel/generic/ReferenceType\n-  #175 = NameAndType        #205:#206     // getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #176 = Utf8               Cannot merge stacks of different types:\\nStack A:\\n\n-  #177 = Utf8               \\nStack B:\\n\n-  #178 = Utf8               java/lang/ClassNotFoundException\n-  #179 = Utf8               Missing class:\n-  #180 = NameAndType        #70:#207      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #181 = Utf8               java/lang/Object\n-  #182 = Utf8               java/lang/Cloneable\n-  #183 = Utf8               get\n-  #184 = Utf8               (I)Ljava/lang/Object;\n-  #185 = Utf8               remove\n-  #186 = Utf8               (Ljava/lang/String;)V\n-  #187 = Utf8               BOOLEAN\n-  #188 = Utf8               Lorg/apache/bcel/generic/BasicType;\n-  #189 = Utf8               CHAR\n-  #190 = Utf8               BYTE\n-  #191 = Utf8               SHORT\n-  #192 = Utf8               append\n-  #193 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #194 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #195 = Utf8               add\n-  #196 = Utf8               getSize\n-  #197 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #198 = Utf8               java/lang/String\n-  #199 = Utf8               valueOf\n-  #200 = Utf8               (I)Ljava/lang/String;\n-  #201 = Utf8               getInitialized\n-  #202 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n-  #203 = Utf8               set\n-  #204 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;\n-  #205 = Utf8               getFirstCommonSuperclass\n-  #206 = Utf8               (Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-  #207 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // java/util/ArrayList\n+    #8 = Utf8               java/util/ArrayList\n+    #9 = Methodref          #7.#3         // java/util/ArrayList.\"<init>\":()V\n+   #10 = Fieldref           #11.#12       // org/apache/bcel/verifier/structurals/OperandStack.stack:Ljava/util/ArrayList;\n+   #11 = Class              #13           // org/apache/bcel/verifier/structurals/OperandStack\n+   #12 = NameAndType        #14:#15       // stack:Ljava/util/ArrayList;\n+   #13 = Utf8               org/apache/bcel/verifier/structurals/OperandStack\n+   #14 = Utf8               stack\n+   #15 = Utf8               Ljava/util/ArrayList;\n+   #16 = Fieldref           #11.#17       // org/apache/bcel/verifier/structurals/OperandStack.maxStack:I\n+   #17 = NameAndType        #18:#19       // maxStack:I\n+   #18 = Utf8               maxStack\n+   #19 = Utf8               I\n+   #20 = Methodref          #11.#21       // org/apache/bcel/verifier/structurals/OperandStack.push:(Lorg/apache/bcel/generic/Type;)V\n+   #21 = NameAndType        #22:#23       // push:(Lorg/apache/bcel/generic/Type;)V\n+   #22 = Utf8               push\n+   #23 = Utf8               (Lorg/apache/bcel/generic/Type;)V\n+   #24 = Methodref          #11.#25       // org/apache/bcel/verifier/structurals/OperandStack.\"<init>\":(I)V\n+   #25 = NameAndType        #5:#26        // \"<init>\":(I)V\n+   #26 = Utf8               (I)V\n+   #27 = Methodref          #7.#28        // java/util/ArrayList.clone:()Ljava/lang/Object;\n+   #28 = NameAndType        #29:#30       // clone:()Ljava/lang/Object;\n+   #29 = Utf8               clone\n+   #30 = Utf8               ()Ljava/lang/Object;\n+   #31 = Methodref          #7.#32        // java/util/ArrayList.hashCode:()I\n+   #32 = NameAndType        #33:#34       // hashCode:()I\n+   #33 = Utf8               hashCode\n+   #34 = Utf8               ()I\n+   #35 = Methodref          #7.#36        // java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n+   #36 = NameAndType        #37:#38       // equals:(Ljava/lang/Object;)Z\n+   #37 = Utf8               equals\n+   #38 = Utf8               (Ljava/lang/Object;)Z\n+   #39 = Methodref          #11.#28       // org/apache/bcel/verifier/structurals/OperandStack.clone:()Ljava/lang/Object;\n+   #40 = Methodref          #7.#41        // java/util/ArrayList.isEmpty:()Z\n+   #41 = NameAndType        #42:#43       // isEmpty:()Z\n+   #42 = Utf8               isEmpty\n+   #43 = Utf8               ()Z\n+   #44 = Methodref          #11.#45       // org/apache/bcel/verifier/structurals/OperandStack.peek:(I)Lorg/apache/bcel/generic/Type;\n+   #45 = NameAndType        #46:#47       // peek:(I)Lorg/apache/bcel/generic/Type;\n+   #46 = Utf8               peek\n+   #47 = Utf8               (I)Lorg/apache/bcel/generic/Type;\n+   #48 = Methodref          #11.#49       // org/apache/bcel/verifier/structurals/OperandStack.size:()I\n+   #49 = NameAndType        #50:#34       // size:()I\n+   #50 = Utf8               size\n+   #51 = Methodref          #7.#52        // java/util/ArrayList.get:(I)Ljava/lang/Object;\n+   #52 = NameAndType        #53:#54       // get:(I)Ljava/lang/Object;\n+   #53 = Utf8               get\n+   #54 = Utf8               (I)Ljava/lang/Object;\n+   #55 = Class              #56           // org/apache/bcel/generic/Type\n+   #56 = Utf8               org/apache/bcel/generic/Type\n+   #57 = Methodref          #7.#58        // java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+   #58 = NameAndType        #59:#54       // remove:(I)Ljava/lang/Object;\n+   #59 = Utf8               remove\n+   #60 = Methodref          #11.#61       // org/apache/bcel/verifier/structurals/OperandStack.pop:()Lorg/apache/bcel/generic/Type;\n+   #61 = NameAndType        #62:#63       // pop:()Lorg/apache/bcel/generic/Type;\n+   #62 = Utf8               pop\n+   #63 = Utf8               ()Lorg/apache/bcel/generic/Type;\n+   #64 = Class              #65           // org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #65 = Utf8               org/apache/bcel/verifier/exc/AssertionViolatedException\n+   #66 = String             #67           // Cannot push NULL onto OperandStack.\n+   #67 = Utf8               Cannot push NULL onto OperandStack.\n+   #68 = Methodref          #64.#69       // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+   #69 = NameAndType        #5:#70        // \"<init>\":(Ljava/lang/String;)V\n+   #70 = Utf8               (Ljava/lang/String;)V\n+   #71 = Fieldref           #55.#72       // org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+   #72 = NameAndType        #73:#74       // BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+   #73 = Utf8               BOOLEAN\n+   #74 = Utf8               Lorg/apache/bcel/generic/BasicType;\n+   #75 = Fieldref           #55.#76       // org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+   #76 = NameAndType        #77:#74       // CHAR:Lorg/apache/bcel/generic/BasicType;\n+   #77 = Utf8               CHAR\n+   #78 = Fieldref           #55.#79       // org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+   #79 = NameAndType        #80:#74       // BYTE:Lorg/apache/bcel/generic/BasicType;\n+   #80 = Utf8               BYTE\n+   #81 = Fieldref           #55.#82       // org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+   #82 = NameAndType        #83:#74       // SHORT:Lorg/apache/bcel/generic/BasicType;\n+   #83 = Utf8               SHORT\n+   #84 = Class              #85           // java/lang/StringBuilder\n+   #85 = Utf8               java/lang/StringBuilder\n+   #86 = Methodref          #84.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #87 = String             #88           // The OperandStack does not know about \\'\n+   #88 = Utf8               The OperandStack does not know about \\'\n+   #89 = Methodref          #84.#90       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #90 = NameAndType        #91:#92       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #91 = Utf8               append\n+   #92 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #93 = Methodref          #84.#94       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #94 = NameAndType        #91:#95       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #95 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #96 = String             #97           // \\'; use Type.INT instead.\n+   #97 = Utf8               \\'; use Type.INT instead.\n+   #98 = Methodref          #84.#99       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #99 = NameAndType        #100:#101     // toString:()Ljava/lang/String;\n+  #100 = Utf8               toString\n+  #101 = Utf8               ()Ljava/lang/String;\n+  #102 = Methodref          #11.#103      // org/apache/bcel/verifier/structurals/OperandStack.slotsUsed:()I\n+  #103 = NameAndType        #104:#34      // slotsUsed:()I\n+  #104 = Utf8               slotsUsed\n+  #105 = String             #106          // OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+  #106 = Utf8               OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+  #107 = Methodref          #7.#108       // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #108 = NameAndType        #109:#38      // add:(Ljava/lang/Object;)Z\n+  #109 = Utf8               add\n+  #110 = Methodref          #7.#49        // java/util/ArrayList.size:()I\n+  #111 = Methodref          #55.#112      // org/apache/bcel/generic/Type.getSize:()I\n+  #112 = NameAndType        #113:#34      // getSize:()I\n+  #113 = Utf8               getSize\n+  #114 = String             #115          // Slots used:\n+  #115 = Utf8               Slots used:\n+  #116 = Methodref          #84.#117      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #117 = NameAndType        #91:#118      // append:(I)Ljava/lang/StringBuilder;\n+  #118 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #119 = String             #120          //  MaxStack:\n+  #120 = Utf8                MaxStack:\n+  #121 = String             #122          // .\\n\n+  #122 = Utf8               .\\n\n+  #123 = String             #124          //  (Size:\n+  #124 = Utf8                (Size:\n+  #125 = Methodref          #126.#127     // java/lang/String.valueOf:(I)Ljava/lang/String;\n+  #126 = Class              #128          // java/lang/String\n+  #127 = NameAndType        #129:#130     // valueOf:(I)Ljava/lang/String;\n+  #128 = Utf8               java/lang/String\n+  #129 = Utf8               valueOf\n+  #130 = Utf8               (I)Ljava/lang/String;\n+  #131 = String             #132          // )\\n\n+  #132 = Utf8               )\\n\n+  #133 = Class              #134          // org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+  #134 = Utf8               org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+  #135 = String             #136          // Cannot merge stacks of different size:\\nOperandStack A:\\n\n+  #136 = Utf8               Cannot merge stacks of different size:\\nOperandStack A:\\n\n+  #137 = String             #138          // \\nOperandStack B:\\n\n+  #138 = Utf8               \\nOperandStack B:\\n\n+  #139 = Methodref          #133.#69      // org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+  #140 = Class              #141          // org/apache/bcel/verifier/structurals/UninitializedObjectType\n+  #141 = Utf8               org/apache/bcel/verifier/structurals/UninitializedObjectType\n+  #142 = String             #143          // Backwards branch with an uninitialized object on the stack detected.\n+  #143 = Utf8               Backwards branch with an uninitialized object on the stack detected.\n+  #144 = Methodref          #55.#36       // org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+  #145 = Methodref          #140.#146     // org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+  #146 = NameAndType        #147:#148     // getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+  #147 = Utf8               getInitialized\n+  #148 = Utf8               ()Lorg/apache/bcel/generic/ObjectType;\n+  #149 = Methodref          #7.#150       // java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+  #150 = NameAndType        #151:#152     // set:(ILjava/lang/Object;)Ljava/lang/Object;\n+  #151 = Utf8               set\n+  #152 = Utf8               (ILjava/lang/Object;)Ljava/lang/Object;\n+  #153 = Class              #154          // org/apache/bcel/generic/ReferenceType\n+  #154 = Utf8               org/apache/bcel/generic/ReferenceType\n+  #155 = Methodref          #153.#156     // org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #156 = NameAndType        #157:#158     // getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #157 = Utf8               getFirstCommonSuperclass\n+  #158 = Utf8               (Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+  #159 = String             #160          // Cannot merge stacks of different types:\\nStack A:\\n\n+  #160 = Utf8               Cannot merge stacks of different types:\\nStack A:\\n\n+  #161 = String             #162          // \\nStack B:\\n\n+  #162 = Utf8               \\nStack B:\\n\n+  #163 = Class              #164          // java/lang/ClassNotFoundException\n+  #164 = Utf8               java/lang/ClassNotFoundException\n+  #165 = String             #166          // Missing class:\n+  #166 = Utf8               Missing class:\n+  #167 = Methodref          #64.#168      // org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #168 = NameAndType        #5:#169       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #169 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #170 = Class              #171          // java/lang/Cloneable\n+  #171 = Utf8               java/lang/Cloneable\n+  #172 = Utf8               Signature\n+  #173 = Utf8               Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n+  #174 = Utf8               Code\n+  #175 = Utf8               LineNumberTable\n+  #176 = Utf8               LocalVariableTable\n+  #177 = Utf8               this\n+  #178 = Utf8               Lorg/apache/bcel/verifier/structurals/OperandStack;\n+  #179 = Utf8               (ILorg/apache/bcel/generic/ObjectType;)V\n+  #180 = Utf8               obj\n+  #181 = Utf8               Lorg/apache/bcel/generic/ObjectType;\n+  #182 = Utf8               newstack\n+  #183 = Utf8               LocalVariableTypeTable\n+  #184 = Utf8               clear\n+  #185 = Utf8               o\n+  #186 = Utf8               Ljava/lang/Object;\n+  #187 = Utf8               s\n+  #188 = Utf8               StackMapTable\n+  #189 = Utf8               getClone\n+  #190 = Utf8               ()Lorg/apache/bcel/verifier/structurals/OperandStack;\n+  #191 = Utf8               i\n+  #192 = Utf8               e\n+  #193 = Utf8               Lorg/apache/bcel/generic/Type;\n+  #194 = Utf8               j\n+  #195 = Utf8               type\n+  #196 = Utf8               slots\n+  #197 = Utf8               sb\n+  #198 = Utf8               Ljava/lang/StringBuilder;\n+  #199 = Utf8               merge\n+  #200 = Utf8               (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n+  #201 = Utf8               Ljava/lang/ClassNotFoundException;\n+  #202 = Utf8               initializeObject\n+  #203 = Utf8               (Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;)V\n+  #204 = Utf8               u\n+  #205 = Utf8               Lorg/apache/bcel/verifier/structurals/UninitializedObjectType;\n+  #206 = Utf8               SourceFile\n+  #207 = Utf8               OperandStack.java\n {\n   private java.util.ArrayList<org.apache.bcel.generic.Type> stack;\n     descriptor: Ljava/util/ArrayList;\n     flags: (0x0002) ACC_PRIVATE\n-    Signature: #67                          // Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n+    Signature: #173                         // Ljava/util/ArrayList<Lorg/apache/bcel/generic/Type;>;\n \n   private final int maxStack;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.bcel.verifier.structurals.OperandStack(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/ArrayList\n+         5: new           #7                  // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #3                  // Method java/util/ArrayList.\"<init>\":()V\n-        12: putfield      #4                  // Field stack:Ljava/util/ArrayList;\n+         9: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n+        12: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n         15: aload_0\n         16: iload_1\n-        17: putfield      #5                  // Field maxStack:I\n+        17: putfield      #16                 // Field maxStack:I\n         20: return\n       LineNumberTable:\n         line 46: 0\n         line 38: 4\n         line 47: 15\n         line 48: 20\n       LocalVariableTable:\n@@ -255,24 +255,24 @@\n     descriptor: (ILorg/apache/bcel/generic/ObjectType;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class java/util/ArrayList\n+         5: new           #7                  // class java/util/ArrayList\n          8: dup\n-         9: invokespecial #3                  // Method java/util/ArrayList.\"<init>\":()V\n-        12: putfield      #4                  // Field stack:Ljava/util/ArrayList;\n+         9: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n+        12: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n         15: aload_0\n         16: iload_1\n-        17: putfield      #5                  // Field maxStack:I\n+        17: putfield      #16                 // Field maxStack:I\n         20: aload_0\n         21: aload_2\n-        22: invokevirtual #6                  // Method push:(Lorg/apache/bcel/generic/Type;)V\n+        22: invokevirtual #20                 // Method push:(Lorg/apache/bcel/generic/Type;)V\n         25: return\n       LineNumberTable:\n         line 54: 0\n         line 38: 4\n         line 55: 15\n         line 56: 20\n         line 57: 25\n@@ -283,28 +283,28 @@\n             0      26     2   obj   Lorg/apache/bcel/generic/ObjectType;\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #7                  // class org/apache/bcel/verifier/structurals/OperandStack\n+         0: new           #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n          3: dup\n          4: aload_0\n-         5: getfield      #5                  // Field maxStack:I\n-         8: invokespecial #8                  // Method \"<init>\":(I)V\n+         5: getfield      #16                 // Field maxStack:I\n+         8: invokespecial #24                 // Method \"<init>\":(I)V\n         11: astore_1\n         12: aload_0\n-        13: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-        16: invokevirtual #9                  // Method java/util/ArrayList.clone:()Ljava/lang/Object;\n-        19: checkcast     #2                  // class java/util/ArrayList\n+        13: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+        16: invokevirtual #27                 // Method java/util/ArrayList.clone:()Ljava/lang/Object;\n+        19: checkcast     #7                  // class java/util/ArrayList\n         22: astore_2\n         23: aload_1\n         24: aload_2\n-        25: putfield      #4                  // Field stack:Ljava/util/ArrayList;\n+        25: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n         28: aload_1\n         29: areturn\n       LineNumberTable:\n         line 65: 0\n         line 67: 12\n         line 68: 23\n         line 69: 28\n@@ -319,59 +319,59 @@\n \n   public void clear();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: new           #2                  // class java/util/ArrayList\n+         1: new           #7                  // class java/util/ArrayList\n          4: dup\n-         5: invokespecial #3                  // Method java/util/ArrayList.\"<init>\":()V\n-         8: putfield      #4                  // Field stack:Ljava/util/ArrayList;\n+         5: invokespecial #9                  // Method java/util/ArrayList.\"<init>\":()V\n+         8: putfield      #10                 // Field stack:Ljava/util/ArrayList;\n         11: return\n       LineNumberTable:\n         line 76: 0\n         line 77: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-         4: invokevirtual #10                 // Method java/util/ArrayList.hashCode:()I\n+         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         4: invokevirtual #31                 // Method java/util/ArrayList.hashCode:()I\n          7: ireturn\n       LineNumberTable:\n         line 82: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: instanceof    #7                  // class org/apache/bcel/verifier/structurals/OperandStack\n+         1: instanceof    #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n          4: ifne          9\n          7: iconst_0\n          8: ireturn\n          9: aload_1\n-        10: checkcast     #7                  // class org/apache/bcel/verifier/structurals/OperandStack\n+        10: checkcast     #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n         13: astore_2\n         14: aload_0\n-        15: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+        15: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n         18: aload_2\n-        19: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-        22: invokevirtual #11                 // Method java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n+        19: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+        22: invokevirtual #35                 // Method java/util/ArrayList.equals:(Ljava/lang/Object;)Z\n         25: ireturn\n       LineNumberTable:\n         line 91: 0\n         line 92: 7\n         line 94: 9\n         line 95: 14\n       LocalVariableTable:\n@@ -384,103 +384,103 @@\n \n   public org.apache.bcel.verifier.structurals.OperandStack getClone();\n     descriptor: ()Lorg/apache/bcel/verifier/structurals/OperandStack;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #12                 // Method clone:()Ljava/lang/Object;\n-         4: checkcast     #7                  // class org/apache/bcel/verifier/structurals/OperandStack\n+         1: invokevirtual #39                 // Method clone:()Ljava/lang/Object;\n+         4: checkcast     #11                 // class org/apache/bcel/verifier/structurals/OperandStack\n          7: areturn\n       LineNumberTable:\n         line 104: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public boolean isEmpty();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-         4: invokevirtual #13                 // Method java/util/ArrayList.isEmpty:()Z\n+         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         4: invokevirtual #40                 // Method java/util/ArrayList.isEmpty:()Z\n          7: ireturn\n       LineNumberTable:\n         line 111: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public int maxStack();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field maxStack:I\n+         1: getfield      #16                 // Field maxStack:I\n          4: ireturn\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public org.apache.bcel.generic.Type peek();\n     descriptor: ()Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #14                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+         2: invokevirtual #44                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n          5: areturn\n       LineNumberTable:\n         line 125: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n   public org.apache.bcel.generic.Type peek(int);\n     descriptor: (I)Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n          4: aload_0\n-         5: invokevirtual #15                 // Method size:()I\n+         5: invokevirtual #48                 // Method size:()I\n          8: iload_1\n          9: isub\n         10: iconst_1\n         11: isub\n-        12: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        15: checkcast     #17                 // class org/apache/bcel/generic/Type\n+        12: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        15: checkcast     #55                 // class org/apache/bcel/generic/Type\n         18: areturn\n       LineNumberTable:\n         line 133: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n             0      19     1     i   I\n \n   public org.apache.bcel.generic.Type pop();\n     descriptor: ()Lorg/apache/bcel/generic/Type;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n          4: aload_0\n-         5: invokevirtual #15                 // Method size:()I\n+         5: invokevirtual #48                 // Method size:()I\n          8: iconst_1\n          9: isub\n-        10: invokevirtual #18                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;\n-        13: checkcast     #17                 // class org/apache/bcel/generic/Type\n+        10: invokevirtual #57                 // Method java/util/ArrayList.remove:(I)Ljava/lang/Object;\n+        13: checkcast     #55                 // class org/apache/bcel/generic/Type\n         16: astore_1\n         17: aload_1\n         18: areturn\n       LineNumberTable:\n         line 140: 0\n         line 141: 17\n       LocalVariableTable:\n@@ -495,15 +495,15 @@\n       stack=2, locals=3, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: iload_2\n          3: iload_1\n          4: if_icmpge     18\n          7: aload_0\n-         8: invokevirtual #19                 // Method pop:()Lorg/apache/bcel/generic/Type;\n+         8: invokevirtual #60                 // Method pop:()Lorg/apache/bcel/generic/Type;\n         11: pop\n         12: iinc          2, 1\n         15: goto          2\n         18: aconst_null\n         19: areturn\n       LineNumberTable:\n         line 148: 0\n@@ -525,66 +525,66 @@\n   public void push(org.apache.bcel.generic.Type);\n     descriptor: (Lorg/apache/bcel/generic/Type;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     14\n-         4: new           #20                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+         4: new           #64                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n          7: dup\n-         8: ldc           #21                 // String Cannot push NULL onto OperandStack.\n-        10: invokespecial #22                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #66                 // String Cannot push NULL onto OperandStack.\n+        10: invokespecial #68                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n         14: aload_1\n-        15: getstatic     #23                 // Field org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n+        15: getstatic     #71                 // Field org/apache/bcel/generic/Type.BOOLEAN:Lorg/apache/bcel/generic/BasicType;\n         18: if_acmpeq     42\n         21: aload_1\n-        22: getstatic     #24                 // Field org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n+        22: getstatic     #75                 // Field org/apache/bcel/generic/Type.CHAR:Lorg/apache/bcel/generic/BasicType;\n         25: if_acmpeq     42\n         28: aload_1\n-        29: getstatic     #25                 // Field org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n+        29: getstatic     #78                 // Field org/apache/bcel/generic/Type.BYTE:Lorg/apache/bcel/generic/BasicType;\n         32: if_acmpeq     42\n         35: aload_1\n-        36: getstatic     #26                 // Field org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n+        36: getstatic     #81                 // Field org/apache/bcel/generic/Type.SHORT:Lorg/apache/bcel/generic/BasicType;\n         39: if_acmpne     74\n-        42: new           #20                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+        42: new           #64                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n         45: dup\n-        46: new           #27                 // class java/lang/StringBuilder\n+        46: new           #84                 // class java/lang/StringBuilder\n         49: dup\n-        50: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        53: ldc           #29                 // String The OperandStack does not know about \\'\n-        55: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        53: ldc           #87                 // String The OperandStack does not know about \\'\n+        55: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: aload_1\n-        59: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        62: ldc           #32                 // String \\'; use Type.INT instead.\n-        64: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        70: invokespecial #22                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+        59: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        62: ldc           #96                 // String \\'; use Type.INT instead.\n+        64: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        70: invokespecial #68                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n         73: athrow\n         74: aload_0\n-        75: invokevirtual #34                 // Method slotsUsed:()I\n+        75: invokevirtual #102                // Method slotsUsed:()I\n         78: aload_0\n-        79: getfield      #5                  // Field maxStack:I\n+        79: getfield      #16                 // Field maxStack:I\n         82: if_icmplt     112\n-        85: new           #20                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+        85: new           #64                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n         88: dup\n-        89: new           #27                 // class java/lang/StringBuilder\n+        89: new           #84                 // class java/lang/StringBuilder\n         92: dup\n-        93: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        96: ldc           #35                 // String OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n-        98: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        93: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        96: ldc           #105                // String OperandStack too small, should have thrown proper Exception elsewhere. Stack:\n+        98: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        101: aload_0\n-       102: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       105: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       108: invokespecial #22                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n+       102: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       105: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       108: invokespecial #68                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;)V\n        111: athrow\n        112: aload_0\n-       113: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       113: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        116: aload_1\n-       117: invokevirtual #36                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       117: invokevirtual #107                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        120: pop\n        121: return\n       LineNumberTable:\n         line 158: 0\n         line 159: 4\n         line 161: 14\n         line 162: 42\n@@ -604,16 +604,16 @@\n \n   public int size();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-         4: invokevirtual #37                 // Method java/util/ArrayList.size:()I\n+         1: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         4: invokevirtual #110                // Method java/util/ArrayList.size:()I\n          7: ireturn\n       LineNumberTable:\n         line 175: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/verifier/structurals/OperandStack;\n \n@@ -624,22 +624,22 @@\n       stack=3, locals=3, args_size=1\n          0: iconst_0\n          1: istore_1\n          2: iconst_0\n          3: istore_2\n          4: iload_2\n          5: aload_0\n-         6: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-         9: invokevirtual #37                 // Method java/util/ArrayList.size:()I\n+         6: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         9: invokevirtual #110                // Method java/util/ArrayList.size:()I\n         12: if_icmpge     32\n         15: iload_1\n         16: aload_0\n         17: iload_2\n-        18: invokevirtual #14                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n-        21: invokevirtual #38                 // Method org/apache/bcel/generic/Type.getSize:()I\n+        18: invokevirtual #44                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+        21: invokevirtual #111                // Method org/apache/bcel/generic/Type.getSize:()I\n         24: iadd\n         25: istore_1\n         26: iinc          2, 1\n         29: goto          4\n         32: iload_1\n         33: ireturn\n       LineNumberTable:\n@@ -661,72 +661,72 @@\n           offset_delta = 27\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=1\n-         0: new           #27                 // class java/lang/StringBuilder\n+         0: new           #84                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_1\n          8: aload_1\n-         9: ldc           #39                 // String Slots used:\n-        11: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         9: ldc           #114                // String Slots used:\n+        11: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         14: pop\n         15: aload_1\n         16: aload_0\n-        17: invokevirtual #34                 // Method slotsUsed:()I\n-        20: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        17: invokevirtual #102                // Method slotsUsed:()I\n+        20: invokevirtual #116                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n         23: pop\n         24: aload_1\n-        25: ldc           #41                 // String  MaxStack:\n-        27: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: ldc           #119                // String  MaxStack:\n+        27: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         30: pop\n         31: aload_1\n         32: aload_0\n-        33: getfield      #5                  // Field maxStack:I\n-        36: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        33: getfield      #16                 // Field maxStack:I\n+        36: invokevirtual #116                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n         39: pop\n         40: aload_1\n-        41: ldc           #42                 // String .\\n\n-        43: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: ldc           #121                // String .\\n\n+        43: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         46: pop\n         47: iconst_0\n         48: istore_2\n         49: iload_2\n         50: aload_0\n-        51: invokevirtual #15                 // Method size:()I\n+        51: invokevirtual #48                 // Method size:()I\n         54: if_icmpge     103\n         57: aload_1\n         58: aload_0\n         59: iload_2\n-        60: invokevirtual #14                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n-        63: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        60: invokevirtual #44                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+        63: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n         66: pop\n         67: aload_1\n-        68: ldc           #43                 // String  (Size:\n-        70: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        68: ldc           #123                // String  (Size:\n+        70: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         73: pop\n         74: aload_1\n         75: aload_0\n         76: iload_2\n-        77: invokevirtual #14                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n-        80: invokevirtual #38                 // Method org/apache/bcel/generic/Type.getSize:()I\n-        83: invokestatic  #44                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n-        86: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        77: invokevirtual #44                 // Method peek:(I)Lorg/apache/bcel/generic/Type;\n+        80: invokevirtual #111                // Method org/apache/bcel/generic/Type.getSize:()I\n+        83: invokestatic  #125                // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+        86: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         89: pop\n         90: aload_1\n-        91: ldc           #45                 // String )\\n\n-        93: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        91: ldc           #131                // String )\\n\n+        93: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         96: pop\n         97: iinc          2, 1\n        100: goto          49\n        103: aload_1\n-       104: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       104: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        107: areturn\n       LineNumberTable:\n         line 199: 0\n         line 200: 8\n         line 201: 15\n         line 202: 24\n         line 203: 31\n@@ -752,185 +752,185 @@\n \n   public void merge(org.apache.bcel.verifier.structurals.OperandStack);\n     descriptor: (Lorg/apache/bcel/verifier/structurals/OperandStack;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: invokevirtual #34                 // Method slotsUsed:()I\n+         1: invokevirtual #102                // Method slotsUsed:()I\n          4: aload_1\n-         5: invokevirtual #34                 // Method slotsUsed:()I\n+         5: invokevirtual #102                // Method slotsUsed:()I\n          8: if_icmpne     22\n         11: aload_0\n-        12: invokevirtual #15                 // Method size:()I\n+        12: invokevirtual #48                 // Method size:()I\n         15: aload_1\n-        16: invokevirtual #15                 // Method size:()I\n+        16: invokevirtual #48                 // Method size:()I\n         19: if_icmpeq     58\n-        22: new           #46                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+        22: new           #133                // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n         25: dup\n-        26: new           #27                 // class java/lang/StringBuilder\n+        26: new           #84                 // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #47                 // String Cannot merge stacks of different size:\\nOperandStack A:\\n\n-        35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #135                // String Cannot merge stacks of different size:\\nOperandStack A:\\n\n+        35: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         38: aload_0\n-        39: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        42: ldc           #48                 // String \\nOperandStack B:\\n\n-        44: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        39: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        42: ldc           #137                // String \\nOperandStack B:\\n\n+        44: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         47: aload_1\n-        48: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        51: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        54: invokespecial #49                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+        48: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: invokespecial #139                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n         57: athrow\n         58: iconst_0\n         59: istore_2\n         60: iload_2\n         61: aload_0\n-        62: invokevirtual #15                 // Method size:()I\n+        62: invokevirtual #48                 // Method size:()I\n         65: if_icmpge     352\n         68: aload_0\n-        69: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+        69: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n         72: iload_2\n-        73: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        76: instanceof    #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+        73: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        76: instanceof    #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n         79: ifne          106\n         82: aload_1\n-        83: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+        83: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n         86: iload_2\n-        87: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-        90: instanceof    #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+        87: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        90: instanceof    #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n         93: ifeq          106\n-        96: new           #46                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+        96: new           #133                // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n         99: dup\n-       100: ldc           #51                 // String Backwards branch with an uninitialized object on the stack detected.\n-       102: invokespecial #49                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+       100: ldc           #142                // String Backwards branch with an uninitialized object on the stack detected.\n+       102: invokespecial #139                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n        105: athrow\n        106: aload_0\n-       107: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       107: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        110: iload_2\n-       111: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       114: checkcast     #17                 // class org/apache/bcel/generic/Type\n+       111: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       114: checkcast     #55                 // class org/apache/bcel/generic/Type\n        117: aload_1\n-       118: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       118: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        121: iload_2\n-       122: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       125: invokevirtual #52                 // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+       122: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       125: invokevirtual #144                // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n        128: ifne          169\n        131: aload_0\n-       132: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       132: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        135: iload_2\n-       136: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       139: instanceof    #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       136: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       139: instanceof    #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n        142: ifeq          169\n        145: aload_1\n-       146: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       146: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        149: iload_2\n-       150: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       153: instanceof    #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       150: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       153: instanceof    #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n        156: ifne          169\n-       159: new           #46                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+       159: new           #133                // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n        162: dup\n-       163: ldc           #51                 // String Backwards branch with an uninitialized object on the stack detected.\n-       165: invokespecial #49                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+       163: ldc           #142                // String Backwards branch with an uninitialized object on the stack detected.\n+       165: invokespecial #139                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n        168: athrow\n        169: aload_0\n-       170: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       170: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        173: iload_2\n-       174: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       177: instanceof    #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       174: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       177: instanceof    #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n        180: ifeq          220\n        183: aload_1\n-       184: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       184: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        187: iload_2\n-       188: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       191: instanceof    #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       188: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       191: instanceof    #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n        194: ifne          220\n        197: aload_0\n-       198: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       198: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        201: iload_2\n        202: aload_0\n-       203: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       203: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        206: iload_2\n-       207: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       210: checkcast     #50                 // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n-       213: invokevirtual #53                 // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-       216: invokevirtual #54                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+       207: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       210: checkcast     #140                // class org/apache/bcel/verifier/structurals/UninitializedObjectType\n+       213: invokevirtual #145                // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+       216: invokevirtual #149                // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n        219: pop\n        220: aload_0\n-       221: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       221: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        224: iload_2\n-       225: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       228: checkcast     #17                 // class org/apache/bcel/generic/Type\n+       225: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       228: checkcast     #55                 // class org/apache/bcel/generic/Type\n        231: aload_1\n-       232: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       232: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        235: iload_2\n-       236: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       239: invokevirtual #52                 // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n+       236: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       239: invokevirtual #144                // Method org/apache/bcel/generic/Type.equals:(Ljava/lang/Object;)Z\n        242: ifne          346\n        245: aload_0\n-       246: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       246: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        249: iload_2\n-       250: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       253: instanceof    #55                 // class org/apache/bcel/generic/ReferenceType\n+       250: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       253: instanceof    #153                // class org/apache/bcel/generic/ReferenceType\n        256: ifeq          310\n        259: aload_1\n-       260: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       260: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        263: iload_2\n-       264: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       267: instanceof    #55                 // class org/apache/bcel/generic/ReferenceType\n+       264: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       267: instanceof    #153                // class org/apache/bcel/generic/ReferenceType\n        270: ifeq          310\n        273: aload_0\n-       274: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       274: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        277: iload_2\n        278: aload_0\n-       279: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       279: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        282: iload_2\n-       283: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       286: checkcast     #55                 // class org/apache/bcel/generic/ReferenceType\n+       283: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       286: checkcast     #153                // class org/apache/bcel/generic/ReferenceType\n        289: aload_1\n-       290: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+       290: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n        293: iload_2\n-       294: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n-       297: checkcast     #55                 // class org/apache/bcel/generic/ReferenceType\n-       300: invokevirtual #56                 // Method org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n-       303: invokevirtual #54                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+       294: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+       297: checkcast     #153                // class org/apache/bcel/generic/ReferenceType\n+       300: invokevirtual #155                // Method org/apache/bcel/generic/ReferenceType.getFirstCommonSuperclass:(Lorg/apache/bcel/generic/ReferenceType;)Lorg/apache/bcel/generic/ReferenceType;\n+       303: invokevirtual #149                // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n        306: pop\n        307: goto          346\n-       310: new           #46                 // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n+       310: new           #133                // class org/apache/bcel/verifier/exc/StructuralCodeConstraintException\n        313: dup\n-       314: new           #27                 // class java/lang/StringBuilder\n+       314: new           #84                 // class java/lang/StringBuilder\n        317: dup\n-       318: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       321: ldc           #57                 // String Cannot merge stacks of different types:\\nStack A:\\n\n-       323: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       318: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       321: ldc           #159                // String Cannot merge stacks of different types:\\nStack A:\\n\n+       323: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        326: aload_0\n-       327: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       330: ldc           #58                 // String \\nStack B:\\n\n-       332: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       327: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       330: ldc           #161                // String \\nStack B:\\n\n+       332: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        335: aload_1\n-       336: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       339: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       342: invokespecial #49                 // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n+       336: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       339: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       342: invokespecial #139                // Method org/apache/bcel/verifier/exc/StructuralCodeConstraintException.\"<init>\":(Ljava/lang/String;)V\n        345: athrow\n        346: iinc          2, 1\n        349: goto          60\n        352: goto          384\n        355: astore_2\n-       356: new           #20                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n+       356: new           #64                 // class org/apache/bcel/verifier/exc/AssertionViolatedException\n        359: dup\n-       360: new           #27                 // class java/lang/StringBuilder\n+       360: new           #84                 // class java/lang/StringBuilder\n        363: dup\n-       364: invokespecial #28                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       367: ldc           #60                 // String Missing class:\n-       369: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       364: invokespecial #86                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       367: ldc           #165                // String Missing class:\n+       369: invokevirtual #89                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        372: aload_2\n-       373: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       376: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       373: invokevirtual #93                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       376: invokevirtual #98                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        379: aload_2\n-       380: invokespecial #61                 // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       380: invokespecial #167                // Method org/apache/bcel/verifier/exc/AssertionViolatedException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n        383: athrow\n        384: return\n       Exception table:\n          from    to  target type\n              0   352   355   Class java/lang/ClassNotFoundException\n       LineNumberTable:\n         line 221: 0\n@@ -983,29 +983,29 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: iconst_0\n          1: istore_2\n          2: iload_2\n          3: aload_0\n-         4: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n-         7: invokevirtual #37                 // Method java/util/ArrayList.size:()I\n+         4: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n+         7: invokevirtual #110                // Method java/util/ArrayList.size:()I\n         10: if_icmpge     44\n         13: aload_0\n-        14: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+        14: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n         17: iload_2\n-        18: invokevirtual #16                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n+        18: invokevirtual #51                 // Method java/util/ArrayList.get:(I)Ljava/lang/Object;\n         21: aload_1\n         22: if_acmpne     38\n         25: aload_0\n-        26: getfield      #4                  // Field stack:Ljava/util/ArrayList;\n+        26: getfield      #10                 // Field stack:Ljava/util/ArrayList;\n         29: iload_2\n         30: aload_1\n-        31: invokevirtual #53                 // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n-        34: invokevirtual #54                 // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n+        31: invokevirtual #145                // Method org/apache/bcel/verifier/structurals/UninitializedObjectType.getInitialized:()Lorg/apache/bcel/generic/ObjectType;\n+        34: invokevirtual #149                // Method java/util/ArrayList.set:(ILjava/lang/Object;)Ljava/lang/Object;\n         37: pop\n         38: iinc          2, 1\n         41: goto          2\n         44: return\n       LineNumberTable:\n         line 266: 0\n         line 267: 13\n"}]}
