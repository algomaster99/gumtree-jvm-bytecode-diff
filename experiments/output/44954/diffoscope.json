{"diffoscope-json-version": 1, "source1": "first/UnsynchronizedByteArrayInputStream.class", "source2": "second/UnsynchronizedByteArrayInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,112 +1,111 @@\n-  SHA-256 checksum 7e8dca76774aa7d18a54958f88e4301f33fbe2b66e8b679dbf9f84cbeab44852\n+  SHA-256 checksum dedde644057976f14b0c74413c34ac968cce266da4a3ef90bbae1b0c263c731d\n   Compiled from \"UnsynchronizedByteArrayInputStream.java\"\n public class org.apache.commons.io.input.UnsynchronizedByteArrayInputStream extends java.io.InputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #14                         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  super_class: #21                        // java/io/InputStream\n+  this_class: #1                          // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+  super_class: #3                         // java/io/InputStream\n   interfaces: 0, fields: 5, methods: 11, attributes: 1\n Constant pool:\n-   #1 = Methodref          #21.#66        // java/io/InputStream.\"<init>\":()V\n-   #2 = String             #26            // data\n-   #3 = Methodref          #67.#68        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #4 = Class              #27            // \"[B\"\n-   #5 = Fieldref           #14.#69        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B\n-   #6 = Fieldref           #14.#70        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I\n-   #7 = Fieldref           #14.#71        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I\n-   #8 = Fieldref           #14.#72        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I\n-   #9 = Class              #73            // java/lang/IllegalArgumentException\n-  #10 = String             #74            // offset cannot be negative\n-  #11 = Methodref          #9.#75         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = Methodref          #76.#77        // java/lang/Math.min:(II)I\n-  #13 = String             #78            // length cannot be negative\n-  #14 = Class              #79            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #15 = String             #47            // dest\n-  #16 = Methodref          #14.#80        // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I\n-  #17 = Class              #81            // java/lang/IndexOutOfBoundsException\n-  #18 = Methodref          #17.#66        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-  #19 = Methodref          #82.#83        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #20 = String             #84            // Skipping backward is not supported\n-  #21 = Class              #85            // java/io/InputStream\n-  #22 = Utf8               END_OF_STREAM\n-  #23 = Utf8               I\n-  #24 = Utf8               ConstantValue\n-  #25 = Integer            -1\n-  #26 = Utf8               data\n-  #27 = Utf8               [B\n-  #28 = Utf8               eod\n-  #29 = Utf8               offset\n-  #30 = Utf8               markedOffset\n-  #31 = Utf8               <init>\n-  #32 = Utf8               ([B)V\n-  #33 = Utf8               Code\n-  #34 = Utf8               LineNumberTable\n-  #35 = Utf8               LocalVariableTable\n-  #36 = Utf8               this\n-  #37 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n-  #38 = Utf8               ([BI)V\n-  #39 = Utf8               StackMapTable\n-  #40 = Class              #79            // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #41 = Utf8               ([BII)V\n-  #42 = Utf8               length\n-  #43 = Utf8               available\n-  #44 = Utf8               ()I\n-  #45 = Utf8               read\n-  #46 = Utf8               ([B)I\n-  #47 = Utf8               dest\n-  #48 = Utf8               ([BII)I\n-  #49 = Utf8               off\n-  #50 = Utf8               len\n-  #51 = Utf8               actualLen\n-  #52 = Utf8               skip\n-  #53 = Utf8               (J)J\n-  #54 = Utf8               n\n-  #55 = Utf8               J\n-  #56 = Utf8               actualSkip\n-  #57 = Utf8               markSupported\n-  #58 = Utf8               ()Z\n-  #59 = Utf8               mark\n-  #60 = Utf8               (I)V\n-  #61 = Utf8               readlimit\n-  #62 = Utf8               reset\n-  #63 = Utf8               ()V\n-  #64 = Utf8               SourceFile\n-  #65 = Utf8               UnsynchronizedByteArrayInputStream.java\n-  #66 = NameAndType        #31:#63        // \"<init>\":()V\n-  #67 = Class              #86            // java/util/Objects\n-  #68 = NameAndType        #87:#88        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #69 = NameAndType        #26:#27        // data:[B\n-  #70 = NameAndType        #29:#23        // offset:I\n-  #71 = NameAndType        #28:#23        // eod:I\n-  #72 = NameAndType        #30:#23        // markedOffset:I\n-  #73 = Utf8               java/lang/IllegalArgumentException\n-  #74 = Utf8               offset cannot be negative\n-  #75 = NameAndType        #31:#89        // \"<init>\":(Ljava/lang/String;)V\n-  #76 = Class              #90            // java/lang/Math\n-  #77 = NameAndType        #91:#92        // min:(II)I\n-  #78 = Utf8               length cannot be negative\n-  #79 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n-  #80 = NameAndType        #45:#48        // read:([BII)I\n-  #81 = Utf8               java/lang/IndexOutOfBoundsException\n-  #82 = Class              #93            // java/lang/System\n-  #83 = NameAndType        #94:#95        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #84 = Utf8               Skipping backward is not supported\n-  #85 = Utf8               java/io/InputStream\n-  #86 = Utf8               java/util/Objects\n-  #87 = Utf8               requireNonNull\n-  #88 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #89 = Utf8               (Ljava/lang/String;)V\n-  #90 = Utf8               java/lang/Math\n-  #91 = Utf8               min\n-  #92 = Utf8               (II)I\n-  #93 = Utf8               java/lang/System\n-  #94 = Utf8               arraycopy\n-  #95 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #1 = Class              #2             // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+   #2 = Utf8               org/apache/commons/io/input/UnsynchronizedByteArrayInputStream\n+   #3 = Class              #4             // java/io/InputStream\n+   #4 = Utf8               java/io/InputStream\n+   #5 = Utf8               END_OF_STREAM\n+   #6 = Utf8               I\n+   #7 = Utf8               ConstantValue\n+   #8 = Integer            -1\n+   #9 = Utf8               data\n+  #10 = Utf8               [B\n+  #11 = Utf8               eod\n+  #12 = Utf8               offset\n+  #13 = Utf8               markedOffset\n+  #14 = Utf8               <init>\n+  #15 = Utf8               ([B)V\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // java/io/InputStream.\"<init>\":()V\n+  #18 = NameAndType        #14:#19        // \"<init>\":()V\n+  #19 = Utf8               ()V\n+  #20 = String             #9             // data\n+  #21 = Methodref          #22.#24        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #22 = Class              #23            // java/util/Objects\n+  #23 = Utf8               java/util/Objects\n+  #24 = NameAndType        #25:#26        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #25 = Utf8               requireNonNull\n+  #26 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #27 = Class              #10            // \"[B\"\n+  #28 = Fieldref           #1.#29         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.data:[B\n+  #29 = NameAndType        #9:#10         // data:[B\n+  #30 = Fieldref           #1.#31         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.offset:I\n+  #31 = NameAndType        #12:#6         // offset:I\n+  #32 = Fieldref           #1.#33         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.eod:I\n+  #33 = NameAndType        #11:#6         // eod:I\n+  #34 = Fieldref           #1.#35         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.markedOffset:I\n+  #35 = NameAndType        #13:#6         // markedOffset:I\n+  #36 = Utf8               LineNumberTable\n+  #37 = Utf8               LocalVariableTable\n+  #38 = Utf8               this\n+  #39 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n+  #40 = Utf8               ([BI)V\n+  #41 = Class              #42            // java/lang/IllegalArgumentException\n+  #42 = Utf8               java/lang/IllegalArgumentException\n+  #43 = String             #44            // offset cannot be negative\n+  #44 = Utf8               offset cannot be negative\n+  #45 = Methodref          #41.#46        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #46 = NameAndType        #14:#47        // \"<init>\":(Ljava/lang/String;)V\n+  #47 = Utf8               (Ljava/lang/String;)V\n+  #48 = Methodref          #49.#51        // java/lang/Math.min:(II)I\n+  #49 = Class              #50            // java/lang/Math\n+  #50 = Utf8               java/lang/Math\n+  #51 = NameAndType        #52:#53        // min:(II)I\n+  #52 = Utf8               min\n+  #53 = Utf8               (II)I\n+  #54 = Utf8               StackMapTable\n+  #55 = Utf8               ([BII)V\n+  #56 = String             #57            // length cannot be negative\n+  #57 = Utf8               length cannot be negative\n+  #58 = Utf8               length\n+  #59 = Utf8               available\n+  #60 = Utf8               ()I\n+  #61 = Utf8               read\n+  #62 = Utf8               ([B)I\n+  #63 = String             #64            // dest\n+  #64 = Utf8               dest\n+  #65 = Methodref          #1.#66         // org/apache/commons/io/input/UnsynchronizedByteArrayInputStream.read:([BII)I\n+  #66 = NameAndType        #61:#67        // read:([BII)I\n+  #67 = Utf8               ([BII)I\n+  #68 = Class              #69            // java/lang/IndexOutOfBoundsException\n+  #69 = Utf8               java/lang/IndexOutOfBoundsException\n+  #70 = Methodref          #68.#18        // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+  #71 = Methodref          #72.#74        // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #72 = Class              #73            // java/lang/System\n+  #73 = Utf8               java/lang/System\n+  #74 = NameAndType        #75:#76        // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #75 = Utf8               arraycopy\n+  #76 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #77 = Utf8               off\n+  #78 = Utf8               len\n+  #79 = Utf8               actualLen\n+  #80 = Utf8               skip\n+  #81 = Utf8               (J)J\n+  #82 = String             #83            // Skipping backward is not supported\n+  #83 = Utf8               Skipping backward is not supported\n+  #84 = Utf8               n\n+  #85 = Utf8               J\n+  #86 = Utf8               actualSkip\n+  #87 = Utf8               markSupported\n+  #88 = Utf8               ()Z\n+  #89 = Utf8               mark\n+  #90 = Utf8               (I)V\n+  #91 = Utf8               readlimit\n+  #92 = Utf8               reset\n+  #93 = Utf8               SourceFile\n+  #94 = Utf8               UnsynchronizedByteArrayInputStream.java\n {\n   public static final int END_OF_STREAM = -1;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private final byte[] data;\n@@ -127,32 +126,32 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #2                  // String data\n-         8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #4                  // class \"[B\"\n-        14: putfield      #5                  // Field data:[B\n+         6: ldc           #20                 // String data\n+         8: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #27                 // class \"[B\"\n+        14: putfield      #28                 // Field data:[B\n         17: aload_0\n         18: iconst_0\n-        19: putfield      #6                  // Field offset:I\n+        19: putfield      #30                 // Field offset:I\n         22: aload_0\n         23: aload_1\n         24: arraylength\n-        25: putfield      #7                  // Field eod:I\n+        25: putfield      #32                 // Field eod:I\n         28: aload_0\n         29: aload_0\n-        30: getfield      #6                  // Field offset:I\n-        33: putfield      #8                  // Field markedOffset:I\n+        30: getfield      #30                 // Field offset:I\n+        33: putfield      #34                 // Field markedOffset:I\n         36: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 4\n         line 69: 17\n         line 70: 22\n         line 71: 28\n@@ -164,48 +163,48 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int);\n     descriptor: ([BI)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/InputStream.\"<init>\":()V\n          4: aload_1\n-         5: ldc           #2                  // String data\n-         7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         5: ldc           #20                 // String data\n+         7: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         10: pop\n         11: iload_2\n         12: ifge          25\n-        15: new           #9                  // class java/lang/IllegalArgumentException\n+        15: new           #41                 // class java/lang/IllegalArgumentException\n         18: dup\n-        19: ldc           #10                 // String offset cannot be negative\n-        21: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        19: ldc           #43                 // String offset cannot be negative\n+        21: invokespecial #45                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         24: athrow\n         25: aload_0\n         26: aload_1\n-        27: putfield      #5                  // Field data:[B\n+        27: putfield      #28                 // Field data:[B\n         30: aload_0\n         31: iload_2\n         32: aload_1\n         33: arraylength\n         34: ifle          42\n         37: aload_1\n         38: arraylength\n         39: goto          43\n         42: iload_2\n-        43: invokestatic  #12                 // Method java/lang/Math.min:(II)I\n-        46: putfield      #6                  // Field offset:I\n+        43: invokestatic  #48                 // Method java/lang/Math.min:(II)I\n+        46: putfield      #30                 // Field offset:I\n         49: aload_0\n         50: aload_1\n         51: arraylength\n-        52: putfield      #7                  // Field eod:I\n+        52: putfield      #32                 // Field eod:I\n         55: aload_0\n         56: aload_0\n-        57: getfield      #6                  // Field offset:I\n-        60: putfield      #8                  // Field markedOffset:I\n+        57: getfield      #30                 // Field offset:I\n+        60: putfield      #34                 // Field markedOffset:I\n         63: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 4\n         line 84: 11\n         line 85: 15\n         line 87: 25\n@@ -234,59 +233,59 @@\n \n   public org.apache.commons.io.input.UnsynchronizedByteArrayInputStream(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n-         1: invokespecial #1                  // Method java/io/InputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/io/InputStream.\"<init>\":()V\n          4: iload_2\n          5: ifge          18\n-         8: new           #9                  // class java/lang/IllegalArgumentException\n+         8: new           #41                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #10                 // String offset cannot be negative\n-        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #43                 // String offset cannot be negative\n+        14: invokespecial #45                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: iload_3\n         19: ifge          32\n-        22: new           #9                  // class java/lang/IllegalArgumentException\n+        22: new           #41                 // class java/lang/IllegalArgumentException\n         25: dup\n-        26: ldc           #13                 // String length cannot be negative\n-        28: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        26: ldc           #56                 // String length cannot be negative\n+        28: invokespecial #45                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         31: athrow\n         32: aload_0\n         33: aload_1\n-        34: ldc           #2                  // String data\n-        36: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        39: checkcast     #4                  // class \"[B\"\n-        42: putfield      #5                  // Field data:[B\n+        34: ldc           #20                 // String data\n+        36: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        39: checkcast     #27                 // class \"[B\"\n+        42: putfield      #28                 // Field data:[B\n         45: aload_0\n         46: iload_2\n         47: aload_1\n         48: arraylength\n         49: ifle          57\n         52: aload_1\n         53: arraylength\n         54: goto          58\n         57: iload_2\n-        58: invokestatic  #12                 // Method java/lang/Math.min:(II)I\n-        61: putfield      #6                  // Field offset:I\n+        58: invokestatic  #48                 // Method java/lang/Math.min:(II)I\n+        61: putfield      #30                 // Field offset:I\n         64: aload_0\n         65: aload_0\n-        66: getfield      #6                  // Field offset:I\n+        66: getfield      #30                 // Field offset:I\n         69: iload_3\n         70: iadd\n         71: aload_1\n         72: arraylength\n-        73: invokestatic  #12                 // Method java/lang/Math.min:(II)I\n-        76: putfield      #7                  // Field eod:I\n+        73: invokestatic  #48                 // Method java/lang/Math.min:(II)I\n+        76: putfield      #32                 // Field eod:I\n         79: aload_0\n         80: aload_0\n-        81: getfield      #6                  // Field offset:I\n-        84: putfield      #8                  // Field markedOffset:I\n+        81: getfield      #30                 // Field offset:I\n+        84: putfield      #34                 // Field markedOffset:I\n         87: return\n       LineNumberTable:\n         line 103: 0\n         line 104: 4\n         line 105: 8\n         line 107: 18\n         line 108: 22\n@@ -318,22 +317,22 @@\n \n   public int available();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field offset:I\n+         1: getfield      #30                 // Field offset:I\n          4: aload_0\n-         5: getfield      #7                  // Field eod:I\n+         5: getfield      #32                 // Field eod:I\n          8: if_icmpge     23\n         11: aload_0\n-        12: getfield      #7                  // Field eod:I\n+        12: getfield      #32                 // Field eod:I\n         15: aload_0\n-        16: getfield      #6                  // Field offset:I\n+        16: getfield      #30                 // Field offset:I\n         19: isub\n         20: goto          24\n         23: iconst_0\n         24: ireturn\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n@@ -346,27 +345,27 @@\n \n   public int read();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field offset:I\n+         1: getfield      #30                 // Field offset:I\n          4: aload_0\n-         5: getfield      #7                  // Field eod:I\n+         5: getfield      #32                 // Field eod:I\n          8: if_icmpge     34\n         11: aload_0\n-        12: getfield      #5                  // Field data:[B\n+        12: getfield      #28                 // Field data:[B\n         15: aload_0\n         16: dup\n-        17: getfield      #6                  // Field offset:I\n+        17: getfield      #30                 // Field offset:I\n         20: dup_x1\n         21: iconst_1\n         22: iadd\n-        23: putfield      #6                  // Field offset:I\n+        23: putfield      #30                 // Field offset:I\n         26: baload\n         27: sipush        255\n         30: iand\n         31: goto          35\n         34: iconst_m1\n         35: ireturn\n       LineNumberTable:\n@@ -381,23 +380,23 @@\n \n   public int read(byte[]);\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #15                 // String dest\n-         3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #63                 // String dest\n+         3: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: aload_1\n          9: iconst_0\n         10: aload_1\n         11: arraylength\n-        12: invokevirtual #16                 // Method read:([BII)I\n+        12: invokevirtual #65                 // Method read:([BII)I\n         15: ireturn\n       LineNumberTable:\n         line 128: 0\n         line 129: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n@@ -405,67 +404,67 @@\n \n   public int read(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_1\n-         1: ldc           #15                 // String dest\n-         3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #63                 // String dest\n+         3: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: iload_2\n          8: iflt          23\n         11: iload_3\n         12: iflt          23\n         15: iload_2\n         16: iload_3\n         17: iadd\n         18: aload_1\n         19: arraylength\n         20: if_icmple     31\n-        23: new           #17                 // class java/lang/IndexOutOfBoundsException\n+        23: new           #68                 // class java/lang/IndexOutOfBoundsException\n         26: dup\n-        27: invokespecial #18                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        27: invokespecial #70                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         30: athrow\n         31: aload_0\n-        32: getfield      #6                  // Field offset:I\n+        32: getfield      #30                 // Field offset:I\n         35: aload_0\n-        36: getfield      #7                  // Field eod:I\n+        36: getfield      #32                 // Field eod:I\n         39: if_icmplt     44\n         42: iconst_m1\n         43: ireturn\n         44: aload_0\n-        45: getfield      #7                  // Field eod:I\n+        45: getfield      #32                 // Field eod:I\n         48: aload_0\n-        49: getfield      #6                  // Field offset:I\n+        49: getfield      #30                 // Field offset:I\n         52: isub\n         53: istore        4\n         55: iload_3\n         56: iload         4\n         58: if_icmpge     64\n         61: iload_3\n         62: istore        4\n         64: iload         4\n         66: ifgt          71\n         69: iconst_0\n         70: ireturn\n         71: aload_0\n-        72: getfield      #5                  // Field data:[B\n+        72: getfield      #28                 // Field data:[B\n         75: aload_0\n-        76: getfield      #6                  // Field offset:I\n+        76: getfield      #30                 // Field offset:I\n         79: aload_1\n         80: iload_2\n         81: iload         4\n-        83: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        83: invokestatic  #71                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         86: aload_0\n         87: dup\n-        88: getfield      #6                  // Field offset:I\n+        88: getfield      #30                 // Field offset:I\n         91: iload         4\n         93: iadd\n-        94: putfield      #6                  // Field offset:I\n+        94: putfield      #30                 // Field offset:I\n         97: iload         4\n         99: ireturn\n       LineNumberTable:\n         line 134: 0\n         line 135: 7\n         line 136: 23\n         line 139: 31\n@@ -499,40 +498,40 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifge          16\n-         6: new           #9                  // class java/lang/IllegalArgumentException\n+         6: new           #41                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #20                 // String Skipping backward is not supported\n-        12: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        10: ldc           #82                 // String Skipping backward is not supported\n+        12: invokespecial #45                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         15: athrow\n         16: aload_0\n-        17: getfield      #7                  // Field eod:I\n+        17: getfield      #32                 // Field eod:I\n         20: aload_0\n-        21: getfield      #6                  // Field offset:I\n+        21: getfield      #30                 // Field offset:I\n         24: isub\n         25: i2l\n         26: lstore_3\n         27: lload_1\n         28: lload_3\n         29: lcmp\n         30: ifge          35\n         33: lload_1\n         34: lstore_3\n         35: aload_0\n         36: dup\n-        37: getfield      #6                  // Field offset:I\n+        37: getfield      #30                 // Field offset:I\n         40: i2l\n         41: lload_3\n         42: ladd\n         43: l2i\n-        44: putfield      #6                  // Field offset:I\n+        44: putfield      #30                 // Field offset:I\n         47: lload_3\n         48: lreturn\n       LineNumberTable:\n         line 157: 0\n         line 158: 6\n         line 161: 16\n         line 162: 27\n@@ -566,16 +565,16 @@\n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_0\n-         2: getfield      #6                  // Field offset:I\n-         5: putfield      #8                  // Field markedOffset:I\n+         2: getfield      #30                 // Field offset:I\n+         5: putfield      #34                 // Field markedOffset:I\n          8: return\n       LineNumberTable:\n         line 178: 0\n         line 179: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n@@ -584,16 +583,16 @@\n   public void reset();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #8                  // Field markedOffset:I\n-         5: putfield      #6                  // Field offset:I\n+         2: getfield      #34                 // Field markedOffset:I\n+         5: putfield      #30                 // Field offset:I\n          8: return\n       LineNumberTable:\n         line 184: 0\n         line 185: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/input/UnsynchronizedByteArrayInputStream;\n"}]}
