{"diffoscope-json-version": 1, "source1": "first/PhoneticEngine$RulesApplication.class", "source2": "second/PhoneticEngine$RulesApplication.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,31 +31,30 @@\n     \n     public PhoneticEngine.PhonemeBuilder getPhonemeBuilder() {\n         return this.phonemeBuilder;\n     }\n     \n     public RulesApplication invoke() {\n         this.found = false;\n-        int patternLength = 1;\n-        final List<Rule> rules = (List<Rule>)this.finalRules.get(this.input.subSequence(this.i, this.i + patternLength));\n-        if (rules != null) {\n-            for (final Rule rule : rules) {\n-                final String pattern = rule.getPattern();\n-                patternLength = pattern.length();\n+        int length = 1;\n+        final List list = (List)this.finalRules.get(this.input.subSequence(this.i, this.i + length));\n+        if (list != null) {\n+            for (final Rule rule : list) {\n+                length = rule.getPattern().length();\n                 if (rule.patternAndContextMatches(this.input, this.i)) {\n                     this.phonemeBuilder.apply(rule.getPhoneme(), this.maxPhonemes);\n                     this.found = true;\n                     break;\n                 }\n             }\n         }\n         if (!this.found) {\n-            patternLength = 1;\n+            length = 1;\n         }\n-        this.i += patternLength;\n+        this.i += length;\n         return this;\n     }\n     \n     public boolean isFound() {\n         return this.found;\n     }\n }\n"}]}
