{"diffoscope-json-version": 1, "source1": "first/JsonGenerator.class", "source2": "second/JsonGenerator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,181 +1,181 @@\n-  SHA-256 checksum 8250e18bfdc7afba775206b76222edf6c9915e43ba8fcaf2d8b44356bfc38dae\n+  SHA-256 checksum 83def02fdfdec721ced600634757502b9a276fbdf4439cb6b1a15671029a28c4\n   Compiled from \"JsonGenerator.java\"\n public abstract class com.fasterxml.jackson.core.JsonGenerator implements java.io.Closeable,java.io.Flushable,com.fasterxml.jackson.core.Versioned\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #158                        // com/fasterxml/jackson/core/JsonGenerator\n   super_class: #16                        // java/lang/Object\n   interfaces: 3, fields: 4, methods: 127, attributes: 2\n Constant pool:\n-    #1 = Class              #425          // com/fasterxml/jackson/core/JsonTokenId\n-    #2 = Methodref          #16.#426      // java/lang/Object.\"<init>\":()V\n-    #3 = Methodref          #158.#427     // com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;\n-    #4 = Methodref          #158.#428     // com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V\n-    #5 = Methodref          #158.#429     // com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-    #6 = Methodref          #430.#427     // com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n-    #7 = Methodref          #430.#428     // com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n-    #8 = Methodref          #158.#431     // com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-    #9 = Methodref          #158.#432     // com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #10 = Methodref          #433.#434     // com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-   #11 = Methodref          #158.#435     // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-   #12 = Methodref          #158.#436     // com/fasterxml/jackson/core/JsonGenerator.getFeatureMask:()I\n-   #13 = Methodref          #158.#437     // com/fasterxml/jackson/core/JsonGenerator.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-   #14 = Class              #438          // java/lang/UnsupportedOperationException\n-   #15 = String             #439          // Generator of type %s does not support schema of type \\'%s\\'\n-   #16 = Class              #440          // java/lang/Object\n-   #17 = Methodref          #16.#441      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #18 = Methodref          #442.#443     // java/lang/Class.getName:()Ljava/lang/String;\n-   #19 = InterfaceMethodref #444.#445     // com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n-   #20 = Methodref          #48.#446      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #21 = Methodref          #14.#447      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n-   #22 = Fieldref           #158.#448     // com/fasterxml/jackson/core/JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-   #23 = Methodref          #14.#426      // java/lang/UnsupportedOperationException.\"<init>\":()V\n-   #24 = Fieldref           #158.#449     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-   #25 = Methodref          #158.#450     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V\n-   #26 = Methodref          #158.#451     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V\n-   #27 = Methodref          #158.#452     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V\n-   #28 = Methodref          #158.#453     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n-   #29 = Methodref          #133.#454     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #30 = Methodref          #158.#455     // com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V\n-   #31 = Class              #456          // java/lang/IllegalArgumentException\n-   #32 = String             #457          // null array\n-   #33 = Methodref          #31.#447      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Methodref          #158.#458     // com/fasterxml/jackson/core/JsonGenerator._verifyOffsets:(III)V\n-   #35 = Methodref          #158.#459     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V\n-   #36 = Methodref          #158.#460     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V\n-   #37 = Methodref          #158.#461     // com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V\n-   #38 = Methodref          #158.#462     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V\n-   #39 = Methodref          #158.#463     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V\n-   #40 = Methodref          #158.#464     // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V\n-   #41 = Methodref          #158.#465     // com/fasterxml/jackson/core/JsonGenerator._reportUnsupportedOperation:()V\n-   #42 = InterfaceMethodref #466.#467     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n-   #43 = Methodref          #158.#468     // com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V\n-   #44 = Methodref          #158.#469     // com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V\n-   #45 = Methodref          #470.#471     // com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n-   #46 = Methodref          #158.#472     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-   #47 = Methodref          #158.#473     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-   #48 = Class              #474          // java/lang/String\n-   #49 = Methodref          #48.#475      // java/lang/String.\"<init>\":([CII)V\n-   #50 = Methodref          #158.#476     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V\n-   #51 = Methodref          #158.#477     // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V\n-   #52 = Class              #318          // \"[B\"\n-   #53 = Methodref          #158.#478     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:([B)V\n-   #54 = Class              #479          // com/fasterxml/jackson/core/JsonGenerationException\n-   #55 = Class              #480          // java/lang/StringBuilder\n-   #56 = Methodref          #55.#426      // java/lang/StringBuilder.\"<init>\":()V\n-   #57 = String             #481          // No native support for writing embedded objects of type\n-   #58 = Methodref          #55.#482      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #59 = Methodref          #55.#483      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #60 = Methodref          #54.#484      // com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-   #61 = String             #485          // No native support for writing Object Ids\n-   #62 = String             #486          // No native support for writing Type Ids\n-   #63 = Fieldref           #487.#488     // com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n-   #64 = Fieldref           #487.#489     // com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n-   #65 = Methodref          #158.#490     // com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z\n-   #66 = Fieldref           #487.#491     // com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n-   #67 = Methodref          #158.#492     // com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V\n-   #68 = Methodref          #48.#493      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-   #69 = Fieldref           #487.#494     // com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-   #70 = Fieldref           #495.#496     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-   #71 = Methodref          #347.#497     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n-   #72 = Fieldref           #347.#498     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-   #73 = Fieldref           #162.#499     // com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n-   #74 = Methodref          #347.#500     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n-   #75 = Fieldref           #487.#501     // com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n-   #76 = Fieldref           #487.#502     // com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n-   #77 = Methodref          #158.#503     // com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n-   #78 = Fieldref           #495.#504     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-   #79 = Methodref          #158.#505     // com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V\n-   #80 = Methodref          #158.#506     // com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V\n-   #81 = Methodref          #158.#507     // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V\n-   #82 = Methodref          #158.#508     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(S)V\n-   #83 = Methodref          #158.#509     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V\n-   #84 = Methodref          #158.#510     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V\n-   #85 = Methodref          #158.#511     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V\n-   #86 = Methodref          #158.#512     // com/fasterxml/jackson/core/JsonGenerator.writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n-   #87 = Methodref          #513.#514     // com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-   #88 = Methodref          #495.#515     // com/fasterxml/jackson/core/JsonToken.id:()I\n-   #89 = String             #516          // No current event to copy\n-   #90 = Methodref          #158.#517     // com/fasterxml/jackson/core/JsonGenerator._reportError:(Ljava/lang/String;)V\n-   #91 = Methodref          #513.#518     // com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n-   #92 = Methodref          #158.#519     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-   #93 = Methodref          #158.#520     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-   #94 = Methodref          #158.#521     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-   #95 = Methodref          #513.#522     // com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n-   #96 = Class              #523          // java/lang/IllegalStateException\n-   #97 = String             #524          // Internal error: unknown current token,\n-   #98 = Methodref          #55.#525      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #99 = Methodref          #96.#447      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #100 = Methodref          #158.#526     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #101 = Methodref          #513.#527     // com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #102 = Methodref          #158.#528     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #103 = Methodref          #158.#529     // com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #104 = Methodref          #513.#530     // com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #105 = Fieldref           #401.#531     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #106 = Methodref          #513.#532     // com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n-  #107 = Fieldref           #401.#533     // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #108 = Methodref          #513.#534     // com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n-  #109 = Methodref          #513.#535     // com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n-  #110 = Methodref          #513.#536     // com/fasterxml/jackson/core/JsonParser.getNumberValueExact:()Ljava/lang/Number;\n-  #111 = Class              #537          // java/math/BigDecimal\n-  #112 = Class              #538          // java/lang/Double\n-  #113 = Methodref          #130.#539     // java/lang/Number.doubleValue:()D\n-  #114 = Methodref          #130.#540     // java/lang/Number.floatValue:()F\n-  #115 = Fieldref           #401.#541     // com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #116 = Methodref          #513.#542     // com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n-  #117 = Fieldref           #401.#543     // com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #118 = Methodref          #513.#544     // com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n-  #119 = Methodref          #513.#545     // com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n-  #120 = Methodref          #513.#546     // com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n-  #121 = Methodref          #513.#547     // com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n-  #122 = Methodref          #513.#548     // com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n-  #123 = Methodref          #513.#549     // com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n-  #124 = Methodref          #158.#550     // com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V\n-  #125 = Methodref          #513.#551     // com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n-  #126 = Methodref          #552.#553     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n-  #127 = String             #554          // Operation not supported by generator of type\n-  #128 = String             #555          // invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-  #129 = Methodref          #131.#556     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-  #130 = Class              #557          // java/lang/Number\n-  #131 = Class              #558          // java/lang/Integer\n-  #132 = Methodref          #130.#559     // java/lang/Number.intValue:()I\n-  #133 = Class              #560          // java/lang/Long\n-  #134 = Methodref          #130.#561     // java/lang/Number.longValue:()J\n-  #135 = Class              #562          // java/lang/Float\n-  #136 = Class              #563          // java/lang/Short\n-  #137 = Methodref          #130.#564     // java/lang/Number.shortValue:()S\n-  #138 = Class              #565          // java/lang/Byte\n-  #139 = Methodref          #130.#566     // java/lang/Number.byteValue:()B\n-  #140 = Class              #567          // java/math/BigInteger\n-  #141 = Class              #568          // java/util/concurrent/atomic/AtomicInteger\n-  #142 = Methodref          #141.#569     // java/util/concurrent/atomic/AtomicInteger.get:()I\n-  #143 = Class              #570          // java/util/concurrent/atomic/AtomicLong\n-  #144 = Methodref          #143.#571     // java/util/concurrent/atomic/AtomicLong.get:()J\n-  #145 = Class              #572          // java/lang/Boolean\n-  #146 = Methodref          #145.#573     // java/lang/Boolean.booleanValue:()Z\n-  #147 = Class              #574          // java/util/concurrent/atomic/AtomicBoolean\n-  #148 = Methodref          #147.#575     // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-  #149 = String             #576          // No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-  #150 = String             #577          // )\n-  #151 = Methodref          #578.#579     // com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #152 = Methodref          #580.#581     // com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #153 = Fieldref           #578.#582     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #154 = Methodref          #580.#583     // com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #155 = Fieldref           #158.#584     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #156 = Fieldref           #578.#585     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #157 = Fieldref           #158.#586     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #158 = Class              #587          // com/fasterxml/jackson/core/JsonGenerator\n-  #159 = Class              #588          // java/io/Closeable\n-  #160 = Class              #589          // java/io/Flushable\n-  #161 = Class              #590          // com/fasterxml/jackson/core/Versioned\n-  #162 = Class              #591          // com/fasterxml/jackson/core/JsonGenerator$1\n+    #1 = Class              #420          // com/fasterxml/jackson/core/JsonTokenId\n+    #2 = Methodref          #16.#421      // java/lang/Object.\"<init>\":()V\n+    #3 = Methodref          #158.#422     // com/fasterxml/jackson/core/JsonGenerator.getCurrentValue:()Ljava/lang/Object;\n+    #4 = Methodref          #158.#423     // com/fasterxml/jackson/core/JsonGenerator.setCurrentValue:(Ljava/lang/Object;)V\n+    #5 = Methodref          #158.#424     // com/fasterxml/jackson/core/JsonGenerator.getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+    #6 = Methodref          #200.#422     // com/fasterxml/jackson/core/JsonStreamContext.getCurrentValue:()Ljava/lang/Object;\n+    #7 = Methodref          #200.#423     // com/fasterxml/jackson/core/JsonStreamContext.setCurrentValue:(Ljava/lang/Object;)V\n+    #8 = Methodref          #158.#425     // com/fasterxml/jackson/core/JsonGenerator.enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+    #9 = Methodref          #158.#426     // com/fasterxml/jackson/core/JsonGenerator.disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #10 = Methodref          #427.#428     // com/fasterxml/jackson/core/StreamWriteFeature.mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+   #11 = Methodref          #158.#429     // com/fasterxml/jackson/core/JsonGenerator.isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+   #12 = Methodref          #158.#430     // com/fasterxml/jackson/core/JsonGenerator.getFeatureMask:()I\n+   #13 = Methodref          #158.#431     // com/fasterxml/jackson/core/JsonGenerator.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+   #14 = Class              #432          // java/lang/UnsupportedOperationException\n+   #15 = String             #433          // Generator of type %s does not support schema of type \\'%s\\'\n+   #16 = Class              #434          // java/lang/Object\n+   #17 = Methodref          #16.#435      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #18 = Methodref          #436.#437     // java/lang/Class.getName:()Ljava/lang/String;\n+   #19 = InterfaceMethodref #438.#439     // com/fasterxml/jackson/core/FormatSchema.getSchemaType:()Ljava/lang/String;\n+   #20 = Methodref          #48.#440      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #21 = Methodref          #14.#441      // java/lang/UnsupportedOperationException.\"<init>\":(Ljava/lang/String;)V\n+   #22 = Fieldref           #158.#442     // com/fasterxml/jackson/core/JsonGenerator._cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+   #23 = Methodref          #14.#421      // java/lang/UnsupportedOperationException.\"<init>\":()V\n+   #24 = Fieldref           #158.#443     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+   #25 = Methodref          #158.#444     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:()V\n+   #26 = Methodref          #158.#445     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(I)V\n+   #27 = Methodref          #158.#446     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:()V\n+   #28 = Methodref          #158.#447     // com/fasterxml/jackson/core/JsonGenerator.writeStartObject:(Ljava/lang/Object;)V\n+   #29 = Methodref          #133.#448     // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #30 = Methodref          #158.#449     // com/fasterxml/jackson/core/JsonGenerator.writeFieldName:(Ljava/lang/String;)V\n+   #31 = Class              #450          // java/lang/IllegalArgumentException\n+   #32 = String             #451          // null array\n+   #33 = Methodref          #31.#441      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #34 = Methodref          #158.#452     // com/fasterxml/jackson/core/JsonGenerator._verifyOffsets:(III)V\n+   #35 = Methodref          #158.#453     // com/fasterxml/jackson/core/JsonGenerator.writeStartArray:(Ljava/lang/Object;I)V\n+   #36 = Methodref          #158.#454     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(I)V\n+   #37 = Methodref          #158.#455     // com/fasterxml/jackson/core/JsonGenerator.writeEndArray:()V\n+   #38 = Methodref          #158.#456     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(J)V\n+   #39 = Methodref          #158.#457     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(D)V\n+   #40 = Methodref          #158.#458     // com/fasterxml/jackson/core/JsonGenerator.writeString:(Ljava/lang/String;)V\n+   #41 = Methodref          #158.#459     // com/fasterxml/jackson/core/JsonGenerator._reportUnsupportedOperation:()V\n+   #42 = InterfaceMethodref #460.#461     // com/fasterxml/jackson/core/SerializableString.getValue:()Ljava/lang/String;\n+   #43 = Methodref          #158.#462     // com/fasterxml/jackson/core/JsonGenerator.writeRaw:(Ljava/lang/String;)V\n+   #44 = Methodref          #158.#463     // com/fasterxml/jackson/core/JsonGenerator.writeRawValue:(Ljava/lang/String;)V\n+   #45 = Methodref          #464.#465     // com/fasterxml/jackson/core/Base64Variants.getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+   #46 = Methodref          #158.#466     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+   #47 = Methodref          #158.#467     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+   #48 = Class              #468          // java/lang/String\n+   #49 = Methodref          #48.#469      // java/lang/String.\"<init>\":([CII)V\n+   #50 = Methodref          #158.#470     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/lang/String;)V\n+   #51 = Methodref          #158.#471     // com/fasterxml/jackson/core/JsonGenerator.writeNull:()V\n+   #52 = Class              #317          // \"[B\"\n+   #53 = Methodref          #158.#472     // com/fasterxml/jackson/core/JsonGenerator.writeBinary:([B)V\n+   #54 = Class              #473          // com/fasterxml/jackson/core/JsonGenerationException\n+   #55 = Class              #474          // java/lang/StringBuilder\n+   #56 = Methodref          #55.#421      // java/lang/StringBuilder.\"<init>\":()V\n+   #57 = String             #475          // No native support for writing embedded objects of type\n+   #58 = Methodref          #55.#476      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #59 = Methodref          #55.#477      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #60 = Methodref          #54.#478      // com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+   #61 = String             #479          // No native support for writing Object Ids\n+   #62 = String             #480          // No native support for writing Type Ids\n+   #63 = Fieldref           #481.#482     // com/fasterxml/jackson/core/type/WritableTypeId.id:Ljava/lang/Object;\n+   #64 = Fieldref           #481.#483     // com/fasterxml/jackson/core/type/WritableTypeId.valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+   #65 = Methodref          #158.#484     // com/fasterxml/jackson/core/JsonGenerator.canWriteTypeId:()Z\n+   #66 = Fieldref           #481.#485     // com/fasterxml/jackson/core/type/WritableTypeId.wrapperWritten:Z\n+   #67 = Methodref          #158.#486     // com/fasterxml/jackson/core/JsonGenerator.writeTypeId:(Ljava/lang/Object;)V\n+   #68 = Methodref          #48.#487      // java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+   #69 = Fieldref           #481.#488     // com/fasterxml/jackson/core/type/WritableTypeId.include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+   #70 = Fieldref           #353.#489     // com/fasterxml/jackson/core/JsonToken.START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+   #71 = Methodref          #346.#490     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.requiresObjectContext:()Z\n+   #72 = Fieldref           #346.#491     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+   #73 = Fieldref           #162.#492     // com/fasterxml/jackson/core/JsonGenerator$1.$SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+   #74 = Methodref          #346.#493     // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion.ordinal:()I\n+   #75 = Fieldref           #481.#494     // com/fasterxml/jackson/core/type/WritableTypeId.forValue:Ljava/lang/Object;\n+   #76 = Fieldref           #481.#495     // com/fasterxml/jackson/core/type/WritableTypeId.asProperty:Ljava/lang/String;\n+   #77 = Methodref          #158.#496     // com/fasterxml/jackson/core/JsonGenerator.writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+   #78 = Fieldref           #353.#497     // com/fasterxml/jackson/core/JsonToken.START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+   #79 = Methodref          #158.#498     // com/fasterxml/jackson/core/JsonGenerator.writeEndObject:()V\n+   #80 = Methodref          #158.#499     // com/fasterxml/jackson/core/JsonGenerator.writeObject:(Ljava/lang/Object;)V\n+   #81 = Methodref          #158.#500     // com/fasterxml/jackson/core/JsonGenerator.writeBoolean:(Z)V\n+   #82 = Methodref          #158.#501     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(S)V\n+   #83 = Methodref          #158.#502     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigInteger;)V\n+   #84 = Methodref          #158.#503     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(F)V\n+   #85 = Methodref          #158.#504     // com/fasterxml/jackson/core/JsonGenerator.writeNumber:(Ljava/math/BigDecimal;)V\n+   #86 = Methodref          #158.#505     // com/fasterxml/jackson/core/JsonGenerator.writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+   #87 = Methodref          #506.#507     // com/fasterxml/jackson/core/JsonParser.currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+   #88 = Methodref          #353.#508     // com/fasterxml/jackson/core/JsonToken.id:()I\n+   #89 = String             #509          // No current event to copy\n+   #90 = Methodref          #158.#510     // com/fasterxml/jackson/core/JsonGenerator._reportError:(Ljava/lang/String;)V\n+   #91 = Methodref          #506.#511     // com/fasterxml/jackson/core/JsonParser.getCurrentName:()Ljava/lang/String;\n+   #92 = Methodref          #158.#512     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+   #93 = Methodref          #158.#513     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+   #94 = Methodref          #158.#514     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+   #95 = Methodref          #506.#515     // com/fasterxml/jackson/core/JsonParser.getEmbeddedObject:()Ljava/lang/Object;\n+   #96 = Class              #516          // java/lang/IllegalStateException\n+   #97 = String             #517          // Internal error: unknown current token,\n+   #98 = Methodref          #55.#518      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #99 = Methodref          #96.#441      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #100 = Methodref          #158.#519     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #101 = Methodref          #506.#520     // com/fasterxml/jackson/core/JsonParser.nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #102 = Methodref          #158.#521     // com/fasterxml/jackson/core/JsonGenerator._copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #103 = Methodref          #158.#522     // com/fasterxml/jackson/core/JsonGenerator.copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #104 = Methodref          #506.#523     // com/fasterxml/jackson/core/JsonParser.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #105 = Fieldref           #398.#524     // com/fasterxml/jackson/core/JsonParser$NumberType.BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #106 = Methodref          #506.#525     // com/fasterxml/jackson/core/JsonParser.getDecimalValue:()Ljava/math/BigDecimal;\n+  #107 = Fieldref           #398.#526     // com/fasterxml/jackson/core/JsonParser$NumberType.FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #108 = Methodref          #506.#527     // com/fasterxml/jackson/core/JsonParser.getFloatValue:()F\n+  #109 = Methodref          #506.#528     // com/fasterxml/jackson/core/JsonParser.getDoubleValue:()D\n+  #110 = Methodref          #506.#529     // com/fasterxml/jackson/core/JsonParser.getNumberValueExact:()Ljava/lang/Number;\n+  #111 = Class              #530          // java/math/BigDecimal\n+  #112 = Class              #531          // java/lang/Double\n+  #113 = Methodref          #130.#532     // java/lang/Number.doubleValue:()D\n+  #114 = Methodref          #130.#533     // java/lang/Number.floatValue:()F\n+  #115 = Fieldref           #398.#534     // com/fasterxml/jackson/core/JsonParser$NumberType.INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #116 = Methodref          #506.#535     // com/fasterxml/jackson/core/JsonParser.getIntValue:()I\n+  #117 = Fieldref           #398.#536     // com/fasterxml/jackson/core/JsonParser$NumberType.LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #118 = Methodref          #506.#537     // com/fasterxml/jackson/core/JsonParser.getLongValue:()J\n+  #119 = Methodref          #506.#538     // com/fasterxml/jackson/core/JsonParser.getBigIntegerValue:()Ljava/math/BigInteger;\n+  #120 = Methodref          #506.#539     // com/fasterxml/jackson/core/JsonParser.hasTextCharacters:()Z\n+  #121 = Methodref          #506.#540     // com/fasterxml/jackson/core/JsonParser.getTextCharacters:()[C\n+  #122 = Methodref          #506.#541     // com/fasterxml/jackson/core/JsonParser.getTextOffset:()I\n+  #123 = Methodref          #506.#542     // com/fasterxml/jackson/core/JsonParser.getTextLength:()I\n+  #124 = Methodref          #158.#543     // com/fasterxml/jackson/core/JsonGenerator.writeString:([CII)V\n+  #125 = Methodref          #506.#544     // com/fasterxml/jackson/core/JsonParser.getText:()Ljava/lang/String;\n+  #126 = Methodref          #545.#546     // com/fasterxml/jackson/core/util/VersionUtil.throwInternal:()V\n+  #127 = String             #547          // Operation not supported by generator of type\n+  #128 = String             #548          // invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+  #129 = Methodref          #131.#549     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #130 = Class              #550          // java/lang/Number\n+  #131 = Class              #551          // java/lang/Integer\n+  #132 = Methodref          #130.#552     // java/lang/Number.intValue:()I\n+  #133 = Class              #553          // java/lang/Long\n+  #134 = Methodref          #130.#554     // java/lang/Number.longValue:()J\n+  #135 = Class              #555          // java/lang/Float\n+  #136 = Class              #556          // java/lang/Short\n+  #137 = Methodref          #130.#557     // java/lang/Number.shortValue:()S\n+  #138 = Class              #558          // java/lang/Byte\n+  #139 = Methodref          #130.#559     // java/lang/Number.byteValue:()B\n+  #140 = Class              #560          // java/math/BigInteger\n+  #141 = Class              #561          // java/util/concurrent/atomic/AtomicInteger\n+  #142 = Methodref          #141.#562     // java/util/concurrent/atomic/AtomicInteger.get:()I\n+  #143 = Class              #563          // java/util/concurrent/atomic/AtomicLong\n+  #144 = Methodref          #143.#564     // java/util/concurrent/atomic/AtomicLong.get:()J\n+  #145 = Class              #565          // java/lang/Boolean\n+  #146 = Methodref          #145.#566     // java/lang/Boolean.booleanValue:()Z\n+  #147 = Class              #567          // java/util/concurrent/atomic/AtomicBoolean\n+  #148 = Methodref          #147.#568     // java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+  #149 = String             #569          // No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+  #150 = String             #570          // )\n+  #151 = Methodref          #571.#572     // com/fasterxml/jackson/core/StreamWriteCapability.values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #152 = Methodref          #573.#574     // com/fasterxml/jackson/core/util/JacksonFeatureSet.fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #153 = Fieldref           #571.#575     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #154 = Methodref          #573.#576     // com/fasterxml/jackson/core/util/JacksonFeatureSet.with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #155 = Fieldref           #158.#577     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #156 = Fieldref           #571.#578     // com/fasterxml/jackson/core/StreamWriteCapability.CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #157 = Fieldref           #158.#579     // com/fasterxml/jackson/core/JsonGenerator.DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #158 = Class              #580          // com/fasterxml/jackson/core/JsonGenerator\n+  #159 = Class              #581          // java/io/Closeable\n+  #160 = Class              #582          // java/io/Flushable\n+  #161 = Class              #583          // com/fasterxml/jackson/core/Versioned\n+  #162 = Class              #584          // com/fasterxml/jackson/core/JsonGenerator$1\n   #163 = Utf8               InnerClasses\n-  #164 = Class              #592          // com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #164 = Class              #585          // com/fasterxml/jackson/core/JsonGenerator$Feature\n   #165 = Utf8               Feature\n   #166 = Utf8               DEFAULT_WRITE_CAPABILITIES\n   #167 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n   #168 = Utf8               Signature\n   #169 = Utf8               Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n   #170 = Utf8               DEFAULT_TEXTUAL_WRITE_CAPABILITIES\n   #171 = Utf8               DEFAULT_BINARY_WRITE_CAPABILITIES\n@@ -203,501 +203,494 @@\n   #193 = Utf8               (Ljava/lang/Object;)V\n   #194 = Utf8               v\n   #195 = Utf8               Ljava/lang/Object;\n   #196 = Utf8               getCurrentValue\n   #197 = Utf8               ctxt\n   #198 = Utf8               Lcom/fasterxml/jackson/core/JsonStreamContext;\n   #199 = Utf8               StackMapTable\n-  #200 = Class              #593          // com/fasterxml/jackson/core/JsonStreamContext\n-  #201 = Class              #440          // java/lang/Object\n-  #202 = Utf8               setCurrentValue\n-  #203 = Utf8               enable\n-  #204 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #205 = Utf8               disable\n-  #206 = Utf8               configure\n-  #207 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;Z)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #208 = Utf8               f\n-  #209 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #210 = Utf8               state\n-  #211 = Utf8               Z\n-  #212 = Utf8               isEnabled\n-  #213 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #214 = Utf8               (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n-  #215 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteFeature;\n-  #216 = Utf8               getFeatureMask\n-  #217 = Utf8               ()I\n-  #218 = Utf8               setFeatureMask\n-  #219 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #220 = Utf8               Deprecated\n-  #221 = Utf8               RuntimeVisibleAnnotations\n-  #222 = Utf8               Ljava/lang/Deprecated;\n-  #223 = Utf8               overrideStdFeatures\n-  #224 = Utf8               (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #225 = Utf8               values\n-  #226 = Utf8               I\n-  #227 = Utf8               mask\n-  #228 = Utf8               oldState\n-  #229 = Utf8               newState\n-  #230 = Utf8               getFormatFeatures\n-  #231 = Utf8               overrideFormatFeatures\n-  #232 = Utf8               setSchema\n-  #233 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)V\n-  #234 = Utf8               schema\n-  #235 = Utf8               Lcom/fasterxml/jackson/core/FormatSchema;\n-  #236 = Utf8               getSchema\n-  #237 = Utf8               ()Lcom/fasterxml/jackson/core/FormatSchema;\n-  #238 = Utf8               setPrettyPrinter\n-  #239 = Utf8               (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #240 = Utf8               pp\n-  #241 = Utf8               getPrettyPrinter\n-  #242 = Utf8               ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #243 = Utf8               useDefaultPrettyPrinter\n-  #244 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #245 = Utf8               setHighestNonEscapedChar\n-  #246 = Utf8               charCode\n-  #247 = Utf8               getHighestEscapedChar\n-  #248 = Utf8               getCharacterEscapes\n-  #249 = Utf8               ()Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #250 = Utf8               setCharacterEscapes\n-  #251 = Utf8               (Lcom/fasterxml/jackson/core/io/CharacterEscapes;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #252 = Utf8               esc\n-  #253 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n-  #254 = Utf8               setRootValueSeparator\n-  #255 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #256 = Utf8               sep\n-  #257 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n-  #258 = Utf8               getOutputBuffered\n-  #259 = Utf8               canUseSchema\n-  #260 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n-  #261 = Utf8               canWriteObjectId\n-  #262 = Utf8               ()Z\n-  #263 = Utf8               canWriteTypeId\n-  #264 = Utf8               canWriteBinaryNatively\n-  #265 = Utf8               canOmitFields\n-  #266 = Utf8               canWriteFormattedNumbers\n-  #267 = Utf8               getWriteCapabilities\n-  #268 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #269 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n-  #270 = Utf8               writeStartArray\n-  #271 = Utf8               Exceptions\n-  #272 = Class              #594          // java/io/IOException\n-  #273 = Utf8               (I)V\n-  #274 = Utf8               size\n-  #275 = Utf8               forValue\n-  #276 = Utf8               (Ljava/lang/Object;I)V\n-  #277 = Utf8               writeEndArray\n-  #278 = Utf8               writeStartObject\n-  #279 = Utf8               writeEndObject\n-  #280 = Utf8               writeFieldName\n-  #281 = Utf8               (Ljava/lang/String;)V\n-  #282 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n-  #283 = Utf8               writeFieldId\n-  #284 = Utf8               (J)V\n-  #285 = Utf8               id\n-  #286 = Utf8               J\n-  #287 = Utf8               writeArray\n-  #288 = Utf8               ([III)V\n-  #289 = Utf8               i\n-  #290 = Utf8               end\n-  #291 = Utf8               array\n-  #292 = Utf8               [I\n-  #293 = Utf8               offset\n-  #294 = Utf8               length\n-  #295 = Utf8               ([JII)V\n-  #296 = Utf8               [J\n-  #297 = Utf8               ([DII)V\n-  #298 = Utf8               [D\n-  #299 = Utf8               ([Ljava/lang/String;II)V\n-  #300 = Utf8               [Ljava/lang/String;\n-  #301 = Utf8               writeString\n-  #302 = Utf8               (Ljava/io/Reader;I)V\n-  #303 = Utf8               reader\n-  #304 = Utf8               Ljava/io/Reader;\n-  #305 = Utf8               len\n-  #306 = Utf8               ([CII)V\n-  #307 = Utf8               writeRawUTF8String\n-  #308 = Utf8               ([BII)V\n-  #309 = Utf8               writeUTF8String\n-  #310 = Utf8               writeRaw\n-  #311 = Utf8               (Ljava/lang/String;II)V\n-  #312 = Utf8               (C)V\n-  #313 = Utf8               raw\n-  #314 = Utf8               writeRawValue\n-  #315 = Utf8               writeBinary\n-  #316 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #317 = Utf8               data\n-  #318 = Utf8               [B\n-  #319 = Utf8               ([B)V\n-  #320 = Utf8               (Ljava/io/InputStream;I)I\n-  #321 = Utf8               Ljava/io/InputStream;\n-  #322 = Utf8               dataLength\n-  #323 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #324 = Utf8               writeNumber\n-  #325 = Utf8               (S)V\n-  #326 = Utf8               S\n-  #327 = Utf8               (Ljava/math/BigInteger;)V\n-  #328 = Utf8               (D)V\n-  #329 = Utf8               (F)V\n-  #330 = Utf8               (Ljava/math/BigDecimal;)V\n-  #331 = Utf8               encodedValueBuffer\n-  #332 = Utf8               [C\n-  #333 = Utf8               writeBoolean\n-  #334 = Utf8               (Z)V\n-  #335 = Utf8               writeNull\n-  #336 = Utf8               writeEmbeddedObject\n-  #337 = Utf8               object\n-  #338 = Utf8               writeObjectId\n-  #339 = Utf8               writeObjectRef\n-  #340 = Utf8               referenced\n-  #341 = Utf8               writeTypeId\n-  #342 = Utf8               writeTypePrefix\n-  #343 = Utf8               (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n-  #344 = Utf8               idStr\n-  #345 = Utf8               Ljava/lang/String;\n-  #346 = Utf8               incl\n-  #347 = Class              #595          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #348 = Utf8               Inclusion\n-  #349 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #350 = Utf8               typeIdDef\n-  #351 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;\n-  #352 = Utf8               valueShape\n-  #353 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n-  #354 = Class              #596          // com/fasterxml/jackson/core/JsonToken\n-  #355 = Class              #474          // java/lang/String\n-  #356 = Class              #595          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #357 = Utf8               writeTypeSuffix\n-  #358 = Utf8               writePOJO\n-  #359 = Utf8               pojo\n-  #360 = Utf8               writeObject\n-  #361 = Utf8               writeTree\n-  #362 = Utf8               (Lcom/fasterxml/jackson/core/TreeNode;)V\n-  #363 = Utf8               writeBinaryField\n-  #364 = Utf8               (Ljava/lang/String;[B)V\n-  #365 = Utf8               fieldName\n-  #366 = Utf8               writeBooleanField\n-  #367 = Utf8               (Ljava/lang/String;Z)V\n-  #368 = Utf8               value\n-  #369 = Utf8               writeNullField\n-  #370 = Utf8               writeStringField\n-  #371 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #372 = Utf8               writeNumberField\n-  #373 = Utf8               (Ljava/lang/String;S)V\n-  #374 = Utf8               (Ljava/lang/String;I)V\n-  #375 = Utf8               (Ljava/lang/String;J)V\n-  #376 = Utf8               (Ljava/lang/String;Ljava/math/BigInteger;)V\n-  #377 = Utf8               Ljava/math/BigInteger;\n-  #378 = Utf8               (Ljava/lang/String;F)V\n-  #379 = Utf8               F\n-  #380 = Utf8               (Ljava/lang/String;D)V\n-  #381 = Utf8               D\n-  #382 = Utf8               (Ljava/lang/String;Ljava/math/BigDecimal;)V\n-  #383 = Utf8               Ljava/math/BigDecimal;\n-  #384 = Utf8               writeArrayFieldStart\n-  #385 = Utf8               writeObjectFieldStart\n-  #386 = Utf8               writePOJOField\n-  #387 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n-  #388 = Utf8               writeObjectField\n-  #389 = Utf8               writeOmittedField\n-  #390 = Utf8               copyCurrentEvent\n-  #391 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #392 = Utf8               p\n-  #393 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;\n-  #394 = Utf8               t\n-  #395 = Utf8               token\n-  #396 = Utf8               copyCurrentEventExact\n-  #397 = Utf8               copyCurrentStructure\n-  #398 = Utf8               _copyCurrentContents\n-  #399 = Utf8               depth\n-  #400 = Utf8               _copyCurrentFloatValue\n-  #401 = Class              #597          // com/fasterxml/jackson/core/JsonParser$NumberType\n-  #402 = Utf8               NumberType\n-  #403 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #404 = Class              #597          // com/fasterxml/jackson/core/JsonParser$NumberType\n-  #405 = Utf8               _copyCurrentFloatValueExact\n-  #406 = Utf8               n\n-  #407 = Utf8               Ljava/lang/Number;\n-  #408 = Class              #557          // java/lang/Number\n-  #409 = Utf8               _copyCurrentIntValue\n-  #410 = Utf8               _copyCurrentStringValue\n-  #411 = Utf8               flush\n-  #412 = Utf8               isClosed\n-  #413 = Utf8               close\n-  #414 = Utf8               _reportError\n-  #415 = Utf8               msg\n-  #416 = Utf8               _throwInternal\n-  #417 = Utf8               _reportUnsupportedOperation\n-  #418 = Utf8               _verifyOffsets\n-  #419 = Utf8               (III)V\n-  #420 = Utf8               arrayLength\n-  #421 = Utf8               _writeSimpleObject\n-  #422 = Utf8               <clinit>\n-  #423 = Utf8               SourceFile\n-  #424 = Utf8               JsonGenerator.java\n-  #425 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n-  #426 = NameAndType        #174:#175     // \"<init>\":()V\n-  #427 = NameAndType        #196:#190     // getCurrentValue:()Ljava/lang/Object;\n-  #428 = NameAndType        #202:#193     // setCurrentValue:(Ljava/lang/Object;)V\n-  #429 = NameAndType        #187:#188     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n-  #430 = Class              #593          // com/fasterxml/jackson/core/JsonStreamContext\n-  #431 = NameAndType        #203:#204     // enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #432 = NameAndType        #205:#204     // disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #433 = Class              #598          // com/fasterxml/jackson/core/StreamWriteFeature\n-  #434 = NameAndType        #599:#600     // mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #435 = NameAndType        #212:#213     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n-  #436 = NameAndType        #216:#217     // getFeatureMask:()I\n-  #437 = NameAndType        #218:#219     // setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n-  #438 = Utf8               java/lang/UnsupportedOperationException\n-  #439 = Utf8               Generator of type %s does not support schema of type \\'%s\\'\n-  #440 = Utf8               java/lang/Object\n-  #441 = NameAndType        #601:#602     // getClass:()Ljava/lang/Class;\n-  #442 = Class              #603          // java/lang/Class\n-  #443 = NameAndType        #604:#605     // getName:()Ljava/lang/String;\n-  #444 = Class              #606          // com/fasterxml/jackson/core/FormatSchema\n-  #445 = NameAndType        #607:#605     // getSchemaType:()Ljava/lang/String;\n-  #446 = NameAndType        #608:#609     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #447 = NameAndType        #174:#281     // \"<init>\":(Ljava/lang/String;)V\n-  #448 = NameAndType        #172:#173     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n-  #449 = NameAndType        #166:#167     // DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #450 = NameAndType        #270:#175     // writeStartArray:()V\n-  #451 = NameAndType        #270:#273     // writeStartArray:(I)V\n-  #452 = NameAndType        #278:#175     // writeStartObject:()V\n-  #453 = NameAndType        #278:#193     // writeStartObject:(Ljava/lang/Object;)V\n-  #454 = NameAndType        #610:#611     // toString:(J)Ljava/lang/String;\n-  #455 = NameAndType        #280:#281     // writeFieldName:(Ljava/lang/String;)V\n-  #456 = Utf8               java/lang/IllegalArgumentException\n-  #457 = Utf8               null array\n-  #458 = NameAndType        #418:#419     // _verifyOffsets:(III)V\n-  #459 = NameAndType        #270:#276     // writeStartArray:(Ljava/lang/Object;I)V\n-  #460 = NameAndType        #324:#273     // writeNumber:(I)V\n-  #461 = NameAndType        #277:#175     // writeEndArray:()V\n-  #462 = NameAndType        #324:#284     // writeNumber:(J)V\n-  #463 = NameAndType        #324:#328     // writeNumber:(D)V\n-  #464 = NameAndType        #301:#281     // writeString:(Ljava/lang/String;)V\n-  #465 = NameAndType        #417:#175     // _reportUnsupportedOperation:()V\n-  #466 = Class              #612          // com/fasterxml/jackson/core/SerializableString\n-  #467 = NameAndType        #613:#605     // getValue:()Ljava/lang/String;\n-  #468 = NameAndType        #310:#281     // writeRaw:(Ljava/lang/String;)V\n-  #469 = NameAndType        #314:#281     // writeRawValue:(Ljava/lang/String;)V\n-  #470 = Class              #614          // com/fasterxml/jackson/core/Base64Variants\n-  #471 = NameAndType        #615:#616     // getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #472 = NameAndType        #315:#316     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n-  #473 = NameAndType        #315:#323     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n-  #474 = Utf8               java/lang/String\n-  #475 = NameAndType        #174:#306     // \"<init>\":([CII)V\n-  #476 = NameAndType        #324:#281     // writeNumber:(Ljava/lang/String;)V\n-  #477 = NameAndType        #335:#175     // writeNull:()V\n-  #478 = NameAndType        #315:#319     // writeBinary:([B)V\n-  #479 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n-  #480 = Utf8               java/lang/StringBuilder\n-  #481 = Utf8               No native support for writing embedded objects of type\n-  #482 = NameAndType        #617:#618     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #483 = NameAndType        #610:#605     // toString:()Ljava/lang/String;\n-  #484 = NameAndType        #174:#619     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #485 = Utf8               No native support for writing Object Ids\n-  #486 = Utf8               No native support for writing Type Ids\n-  #487 = Class              #620          // com/fasterxml/jackson/core/type/WritableTypeId\n-  #488 = NameAndType        #285:#195     // id:Ljava/lang/Object;\n-  #489 = NameAndType        #352:#353     // valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n-  #490 = NameAndType        #263:#262     // canWriteTypeId:()Z\n-  #491 = NameAndType        #621:#211     // wrapperWritten:Z\n-  #492 = NameAndType        #341:#193     // writeTypeId:(Ljava/lang/Object;)V\n-  #493 = NameAndType        #622:#623     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n-  #494 = NameAndType        #624:#349     // include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #495 = Class              #596          // com/fasterxml/jackson/core/JsonToken\n-  #496 = NameAndType        #625:#353     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n-  #497 = NameAndType        #626:#262     // requiresObjectContext:()Z\n-  #498 = NameAndType        #627:#349     // WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n-  #499 = NameAndType        #628:#292     // $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n-  #500 = NameAndType        #629:#217     // ordinal:()I\n-  #501 = NameAndType        #275:#195     // forValue:Ljava/lang/Object;\n-  #502 = NameAndType        #630:#345     // asProperty:Ljava/lang/String;\n-  #503 = NameAndType        #370:#371     // writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n-  #504 = NameAndType        #631:#353     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n-  #505 = NameAndType        #279:#175     // writeEndObject:()V\n-  #506 = NameAndType        #360:#193     // writeObject:(Ljava/lang/Object;)V\n-  #507 = NameAndType        #333:#334     // writeBoolean:(Z)V\n-  #508 = NameAndType        #324:#325     // writeNumber:(S)V\n-  #509 = NameAndType        #324:#327     // writeNumber:(Ljava/math/BigInteger;)V\n-  #510 = NameAndType        #324:#329     // writeNumber:(F)V\n-  #511 = NameAndType        #324:#330     // writeNumber:(Ljava/math/BigDecimal;)V\n-  #512 = NameAndType        #388:#387     // writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n-  #513 = Class              #632          // com/fasterxml/jackson/core/JsonParser\n-  #514 = NameAndType        #633:#634     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #515 = NameAndType        #285:#217     // id:()I\n-  #516 = Utf8               No current event to copy\n-  #517 = NameAndType        #414:#281     // _reportError:(Ljava/lang/String;)V\n-  #518 = NameAndType        #635:#605     // getCurrentName:()Ljava/lang/String;\n-  #519 = NameAndType        #410:#391     // _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #520 = NameAndType        #409:#391     // _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #521 = NameAndType        #400:#391     // _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #522 = NameAndType        #636:#190     // getEmbeddedObject:()Ljava/lang/Object;\n-  #523 = Utf8               java/lang/IllegalStateException\n-  #524 = Utf8               Internal error: unknown current token,\n-  #525 = NameAndType        #617:#637     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #526 = NameAndType        #405:#391     // _copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #527 = NameAndType        #638:#634     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n-  #528 = NameAndType        #398:#391     // _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #529 = NameAndType        #390:#391     // copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n-  #530 = NameAndType        #639:#640     // getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #531 = NameAndType        #641:#403     // BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #532 = NameAndType        #642:#643     // getDecimalValue:()Ljava/math/BigDecimal;\n-  #533 = NameAndType        #644:#403     // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #534 = NameAndType        #645:#646     // getFloatValue:()F\n-  #535 = NameAndType        #647:#648     // getDoubleValue:()D\n-  #536 = NameAndType        #649:#650     // getNumberValueExact:()Ljava/lang/Number;\n-  #537 = Utf8               java/math/BigDecimal\n-  #538 = Utf8               java/lang/Double\n-  #539 = NameAndType        #651:#648     // doubleValue:()D\n-  #540 = NameAndType        #652:#646     // floatValue:()F\n-  #541 = NameAndType        #653:#403     // INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #542 = NameAndType        #654:#217     // getIntValue:()I\n-  #543 = NameAndType        #655:#403     // LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #544 = NameAndType        #656:#657     // getLongValue:()J\n-  #545 = NameAndType        #658:#659     // getBigIntegerValue:()Ljava/math/BigInteger;\n-  #546 = NameAndType        #660:#262     // hasTextCharacters:()Z\n-  #547 = NameAndType        #661:#662     // getTextCharacters:()[C\n-  #548 = NameAndType        #663:#217     // getTextOffset:()I\n-  #549 = NameAndType        #664:#217     // getTextLength:()I\n-  #550 = NameAndType        #301:#306     // writeString:([CII)V\n-  #551 = NameAndType        #665:#605     // getText:()Ljava/lang/String;\n-  #552 = Class              #666          // com/fasterxml/jackson/core/util/VersionUtil\n-  #553 = NameAndType        #667:#175     // throwInternal:()V\n-  #554 = Utf8               Operation not supported by generator of type\n-  #555 = Utf8               invalid argument(s) (offset=%d, length=%d) for input array of %d element\n-  #556 = NameAndType        #622:#668     // valueOf:(I)Ljava/lang/Integer;\n-  #557 = Utf8               java/lang/Number\n-  #558 = Utf8               java/lang/Integer\n-  #559 = NameAndType        #669:#217     // intValue:()I\n-  #560 = Utf8               java/lang/Long\n-  #561 = NameAndType        #670:#657     // longValue:()J\n-  #562 = Utf8               java/lang/Float\n-  #563 = Utf8               java/lang/Short\n-  #564 = NameAndType        #671:#672     // shortValue:()S\n-  #565 = Utf8               java/lang/Byte\n-  #566 = NameAndType        #673:#674     // byteValue:()B\n-  #567 = Utf8               java/math/BigInteger\n-  #568 = Utf8               java/util/concurrent/atomic/AtomicInteger\n-  #569 = NameAndType        #675:#217     // get:()I\n-  #570 = Utf8               java/util/concurrent/atomic/AtomicLong\n-  #571 = NameAndType        #675:#657     // get:()J\n-  #572 = Utf8               java/lang/Boolean\n-  #573 = NameAndType        #676:#262     // booleanValue:()Z\n-  #574 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n-  #575 = NameAndType        #675:#262     // get:()Z\n-  #576 = Utf8               No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-  #577 = Utf8               )\n-  #578 = Class              #677          // com/fasterxml/jackson/core/StreamWriteCapability\n-  #579 = NameAndType        #225:#678     // values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #580 = Class              #679          // com/fasterxml/jackson/core/util/JacksonFeatureSet\n-  #581 = NameAndType        #680:#681     // fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #582 = NameAndType        #682:#683     // CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #583 = NameAndType        #684:#685     // with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #584 = NameAndType        #170:#167     // DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #585 = NameAndType        #686:#683     // CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #586 = NameAndType        #171:#167     // DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #587 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n-  #588 = Utf8               java/io/Closeable\n-  #589 = Utf8               java/io/Flushable\n-  #590 = Utf8               com/fasterxml/jackson/core/Versioned\n-  #591 = Utf8               com/fasterxml/jackson/core/JsonGenerator$1\n-  #592 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n-  #593 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n-  #594 = Utf8               java/io/IOException\n-  #595 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n-  #596 = Utf8               com/fasterxml/jackson/core/JsonToken\n-  #597 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType\n-  #598 = Utf8               com/fasterxml/jackson/core/StreamWriteFeature\n-  #599 = Utf8               mappedFeature\n-  #600 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n-  #601 = Utf8               getClass\n-  #602 = Utf8               ()Ljava/lang/Class;\n-  #603 = Utf8               java/lang/Class\n-  #604 = Utf8               getName\n-  #605 = Utf8               ()Ljava/lang/String;\n-  #606 = Utf8               com/fasterxml/jackson/core/FormatSchema\n-  #607 = Utf8               getSchemaType\n-  #608 = Utf8               format\n-  #609 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #610 = Utf8               toString\n-  #611 = Utf8               (J)Ljava/lang/String;\n-  #612 = Utf8               com/fasterxml/jackson/core/SerializableString\n-  #613 = Utf8               getValue\n-  #614 = Utf8               com/fasterxml/jackson/core/Base64Variants\n-  #615 = Utf8               getDefaultVariant\n-  #616 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n-  #617 = Utf8               append\n-  #618 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #619 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-  #620 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId\n-  #621 = Utf8               wrapperWritten\n-  #622 = Utf8               valueOf\n-  #623 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n-  #624 = Utf8               include\n-  #625 = Utf8               START_OBJECT\n-  #626 = Utf8               requiresObjectContext\n-  #627 = Utf8               WRAPPER_ARRAY\n-  #628 = Utf8               $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion\n-  #629 = Utf8               ordinal\n-  #630 = Utf8               asProperty\n-  #631 = Utf8               START_ARRAY\n-  #632 = Utf8               com/fasterxml/jackson/core/JsonParser\n-  #633 = Utf8               currentToken\n-  #634 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n-  #635 = Utf8               getCurrentName\n-  #636 = Utf8               getEmbeddedObject\n-  #637 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #638 = Utf8               nextToken\n-  #639 = Utf8               getNumberType\n-  #640 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n-  #641 = Utf8               BIG_DECIMAL\n-  #642 = Utf8               getDecimalValue\n-  #643 = Utf8               ()Ljava/math/BigDecimal;\n-  #644 = Utf8               FLOAT\n-  #645 = Utf8               getFloatValue\n-  #646 = Utf8               ()F\n-  #647 = Utf8               getDoubleValue\n-  #648 = Utf8               ()D\n-  #649 = Utf8               getNumberValueExact\n-  #650 = Utf8               ()Ljava/lang/Number;\n-  #651 = Utf8               doubleValue\n-  #652 = Utf8               floatValue\n-  #653 = Utf8               INT\n-  #654 = Utf8               getIntValue\n-  #655 = Utf8               LONG\n-  #656 = Utf8               getLongValue\n-  #657 = Utf8               ()J\n-  #658 = Utf8               getBigIntegerValue\n-  #659 = Utf8               ()Ljava/math/BigInteger;\n-  #660 = Utf8               hasTextCharacters\n-  #661 = Utf8               getTextCharacters\n-  #662 = Utf8               ()[C\n-  #663 = Utf8               getTextOffset\n-  #664 = Utf8               getTextLength\n-  #665 = Utf8               getText\n-  #666 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n-  #667 = Utf8               throwInternal\n-  #668 = Utf8               (I)Ljava/lang/Integer;\n-  #669 = Utf8               intValue\n-  #670 = Utf8               longValue\n-  #671 = Utf8               shortValue\n-  #672 = Utf8               ()S\n-  #673 = Utf8               byteValue\n-  #674 = Utf8               ()B\n-  #675 = Utf8               get\n-  #676 = Utf8               booleanValue\n-  #677 = Utf8               com/fasterxml/jackson/core/StreamWriteCapability\n-  #678 = Utf8               ()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #679 = Utf8               com/fasterxml/jackson/core/util/JacksonFeatureSet\n-  #680 = Utf8               fromDefaults\n-  #681 = Utf8               ([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #682 = Utf8               CAN_WRITE_FORMATTED_NUMBERS\n-  #683 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteCapability;\n-  #684 = Utf8               with\n-  #685 = Utf8               (Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n-  #686 = Utf8               CAN_WRITE_BINARY_NATIVELY\n+  #200 = Class              #586          // com/fasterxml/jackson/core/JsonStreamContext\n+  #201 = Utf8               setCurrentValue\n+  #202 = Utf8               enable\n+  #203 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #204 = Utf8               disable\n+  #205 = Utf8               configure\n+  #206 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;Z)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #207 = Utf8               f\n+  #208 = Utf8               Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #209 = Utf8               state\n+  #210 = Utf8               Z\n+  #211 = Utf8               isEnabled\n+  #212 = Utf8               (Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #213 = Utf8               (Lcom/fasterxml/jackson/core/StreamWriteFeature;)Z\n+  #214 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteFeature;\n+  #215 = Utf8               getFeatureMask\n+  #216 = Utf8               ()I\n+  #217 = Utf8               setFeatureMask\n+  #218 = Utf8               (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #219 = Utf8               Deprecated\n+  #220 = Utf8               RuntimeVisibleAnnotations\n+  #221 = Utf8               Ljava/lang/Deprecated;\n+  #222 = Utf8               overrideStdFeatures\n+  #223 = Utf8               (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #224 = Utf8               values\n+  #225 = Utf8               I\n+  #226 = Utf8               mask\n+  #227 = Utf8               oldState\n+  #228 = Utf8               newState\n+  #229 = Utf8               getFormatFeatures\n+  #230 = Utf8               overrideFormatFeatures\n+  #231 = Utf8               setSchema\n+  #232 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)V\n+  #233 = Utf8               schema\n+  #234 = Utf8               Lcom/fasterxml/jackson/core/FormatSchema;\n+  #235 = Utf8               getSchema\n+  #236 = Utf8               ()Lcom/fasterxml/jackson/core/FormatSchema;\n+  #237 = Utf8               setPrettyPrinter\n+  #238 = Utf8               (Lcom/fasterxml/jackson/core/PrettyPrinter;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #239 = Utf8               pp\n+  #240 = Utf8               getPrettyPrinter\n+  #241 = Utf8               ()Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #242 = Utf8               useDefaultPrettyPrinter\n+  #243 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #244 = Utf8               setHighestNonEscapedChar\n+  #245 = Utf8               charCode\n+  #246 = Utf8               getHighestEscapedChar\n+  #247 = Utf8               getCharacterEscapes\n+  #248 = Utf8               ()Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #249 = Utf8               setCharacterEscapes\n+  #250 = Utf8               (Lcom/fasterxml/jackson/core/io/CharacterEscapes;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #251 = Utf8               esc\n+  #252 = Utf8               Lcom/fasterxml/jackson/core/io/CharacterEscapes;\n+  #253 = Utf8               setRootValueSeparator\n+  #254 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #255 = Utf8               sep\n+  #256 = Utf8               Lcom/fasterxml/jackson/core/SerializableString;\n+  #257 = Utf8               getOutputBuffered\n+  #258 = Utf8               canUseSchema\n+  #259 = Utf8               (Lcom/fasterxml/jackson/core/FormatSchema;)Z\n+  #260 = Utf8               canWriteObjectId\n+  #261 = Utf8               ()Z\n+  #262 = Utf8               canWriteTypeId\n+  #263 = Utf8               canWriteBinaryNatively\n+  #264 = Utf8               canOmitFields\n+  #265 = Utf8               canWriteFormattedNumbers\n+  #266 = Utf8               getWriteCapabilities\n+  #267 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #268 = Utf8               ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+  #269 = Utf8               writeStartArray\n+  #270 = Utf8               Exceptions\n+  #271 = Class              #587          // java/io/IOException\n+  #272 = Utf8               (I)V\n+  #273 = Utf8               size\n+  #274 = Utf8               forValue\n+  #275 = Utf8               (Ljava/lang/Object;I)V\n+  #276 = Utf8               writeEndArray\n+  #277 = Utf8               writeStartObject\n+  #278 = Utf8               writeEndObject\n+  #279 = Utf8               writeFieldName\n+  #280 = Utf8               (Ljava/lang/String;)V\n+  #281 = Utf8               (Lcom/fasterxml/jackson/core/SerializableString;)V\n+  #282 = Utf8               writeFieldId\n+  #283 = Utf8               (J)V\n+  #284 = Utf8               id\n+  #285 = Utf8               J\n+  #286 = Utf8               writeArray\n+  #287 = Utf8               ([III)V\n+  #288 = Utf8               i\n+  #289 = Utf8               end\n+  #290 = Utf8               array\n+  #291 = Utf8               [I\n+  #292 = Utf8               offset\n+  #293 = Utf8               length\n+  #294 = Utf8               ([JII)V\n+  #295 = Utf8               [J\n+  #296 = Utf8               ([DII)V\n+  #297 = Utf8               [D\n+  #298 = Utf8               ([Ljava/lang/String;II)V\n+  #299 = Utf8               [Ljava/lang/String;\n+  #300 = Utf8               writeString\n+  #301 = Utf8               (Ljava/io/Reader;I)V\n+  #302 = Utf8               reader\n+  #303 = Utf8               Ljava/io/Reader;\n+  #304 = Utf8               len\n+  #305 = Utf8               ([CII)V\n+  #306 = Utf8               writeRawUTF8String\n+  #307 = Utf8               ([BII)V\n+  #308 = Utf8               writeUTF8String\n+  #309 = Utf8               writeRaw\n+  #310 = Utf8               (Ljava/lang/String;II)V\n+  #311 = Utf8               (C)V\n+  #312 = Utf8               raw\n+  #313 = Utf8               writeRawValue\n+  #314 = Utf8               writeBinary\n+  #315 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #316 = Utf8               data\n+  #317 = Utf8               [B\n+  #318 = Utf8               ([B)V\n+  #319 = Utf8               (Ljava/io/InputStream;I)I\n+  #320 = Utf8               Ljava/io/InputStream;\n+  #321 = Utf8               dataLength\n+  #322 = Utf8               (Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #323 = Utf8               writeNumber\n+  #324 = Utf8               (S)V\n+  #325 = Utf8               S\n+  #326 = Utf8               (Ljava/math/BigInteger;)V\n+  #327 = Utf8               (D)V\n+  #328 = Utf8               (F)V\n+  #329 = Utf8               (Ljava/math/BigDecimal;)V\n+  #330 = Utf8               encodedValueBuffer\n+  #331 = Utf8               [C\n+  #332 = Utf8               writeBoolean\n+  #333 = Utf8               (Z)V\n+  #334 = Utf8               writeNull\n+  #335 = Utf8               writeEmbeddedObject\n+  #336 = Utf8               object\n+  #337 = Utf8               writeObjectId\n+  #338 = Utf8               writeObjectRef\n+  #339 = Utf8               referenced\n+  #340 = Utf8               writeTypeId\n+  #341 = Utf8               writeTypePrefix\n+  #342 = Utf8               (Lcom/fasterxml/jackson/core/type/WritableTypeId;)Lcom/fasterxml/jackson/core/type/WritableTypeId;\n+  #343 = Utf8               idStr\n+  #344 = Utf8               Ljava/lang/String;\n+  #345 = Utf8               incl\n+  #346 = Class              #588          // com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n+  #347 = Utf8               Inclusion\n+  #348 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #349 = Utf8               typeIdDef\n+  #350 = Utf8               Lcom/fasterxml/jackson/core/type/WritableTypeId;\n+  #351 = Utf8               valueShape\n+  #352 = Utf8               Lcom/fasterxml/jackson/core/JsonToken;\n+  #353 = Class              #589          // com/fasterxml/jackson/core/JsonToken\n+  #354 = Utf8               writeTypeSuffix\n+  #355 = Utf8               writePOJO\n+  #356 = Utf8               pojo\n+  #357 = Utf8               writeObject\n+  #358 = Utf8               writeTree\n+  #359 = Utf8               (Lcom/fasterxml/jackson/core/TreeNode;)V\n+  #360 = Utf8               writeBinaryField\n+  #361 = Utf8               (Ljava/lang/String;[B)V\n+  #362 = Utf8               fieldName\n+  #363 = Utf8               writeBooleanField\n+  #364 = Utf8               (Ljava/lang/String;Z)V\n+  #365 = Utf8               value\n+  #366 = Utf8               writeNullField\n+  #367 = Utf8               writeStringField\n+  #368 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #369 = Utf8               writeNumberField\n+  #370 = Utf8               (Ljava/lang/String;S)V\n+  #371 = Utf8               (Ljava/lang/String;I)V\n+  #372 = Utf8               (Ljava/lang/String;J)V\n+  #373 = Utf8               (Ljava/lang/String;Ljava/math/BigInteger;)V\n+  #374 = Utf8               Ljava/math/BigInteger;\n+  #375 = Utf8               (Ljava/lang/String;F)V\n+  #376 = Utf8               F\n+  #377 = Utf8               (Ljava/lang/String;D)V\n+  #378 = Utf8               D\n+  #379 = Utf8               (Ljava/lang/String;Ljava/math/BigDecimal;)V\n+  #380 = Utf8               Ljava/math/BigDecimal;\n+  #381 = Utf8               writeArrayFieldStart\n+  #382 = Utf8               writeObjectFieldStart\n+  #383 = Utf8               writePOJOField\n+  #384 = Utf8               (Ljava/lang/String;Ljava/lang/Object;)V\n+  #385 = Utf8               writeObjectField\n+  #386 = Utf8               writeOmittedField\n+  #387 = Utf8               copyCurrentEvent\n+  #388 = Utf8               (Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #389 = Utf8               p\n+  #390 = Utf8               Lcom/fasterxml/jackson/core/JsonParser;\n+  #391 = Utf8               t\n+  #392 = Utf8               token\n+  #393 = Utf8               copyCurrentEventExact\n+  #394 = Utf8               copyCurrentStructure\n+  #395 = Utf8               _copyCurrentContents\n+  #396 = Utf8               depth\n+  #397 = Utf8               _copyCurrentFloatValue\n+  #398 = Class              #590          // com/fasterxml/jackson/core/JsonParser$NumberType\n+  #399 = Utf8               NumberType\n+  #400 = Utf8               Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #401 = Utf8               _copyCurrentFloatValueExact\n+  #402 = Utf8               n\n+  #403 = Utf8               Ljava/lang/Number;\n+  #404 = Utf8               _copyCurrentIntValue\n+  #405 = Utf8               _copyCurrentStringValue\n+  #406 = Utf8               flush\n+  #407 = Utf8               isClosed\n+  #408 = Utf8               close\n+  #409 = Utf8               _reportError\n+  #410 = Utf8               msg\n+  #411 = Utf8               _throwInternal\n+  #412 = Utf8               _reportUnsupportedOperation\n+  #413 = Utf8               _verifyOffsets\n+  #414 = Utf8               (III)V\n+  #415 = Utf8               arrayLength\n+  #416 = Utf8               _writeSimpleObject\n+  #417 = Utf8               <clinit>\n+  #418 = Utf8               SourceFile\n+  #419 = Utf8               JsonGenerator.java\n+  #420 = Utf8               com/fasterxml/jackson/core/JsonTokenId\n+  #421 = NameAndType        #174:#175     // \"<init>\":()V\n+  #422 = NameAndType        #196:#190     // getCurrentValue:()Ljava/lang/Object;\n+  #423 = NameAndType        #201:#193     // setCurrentValue:(Ljava/lang/Object;)V\n+  #424 = NameAndType        #187:#188     // getOutputContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;\n+  #425 = NameAndType        #202:#203     // enable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #426 = NameAndType        #204:#203     // disable:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #427 = Class              #591          // com/fasterxml/jackson/core/StreamWriteFeature\n+  #428 = NameAndType        #592:#593     // mappedFeature:()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #429 = NameAndType        #211:#212     // isEnabled:(Lcom/fasterxml/jackson/core/JsonGenerator$Feature;)Z\n+  #430 = NameAndType        #215:#216     // getFeatureMask:()I\n+  #431 = NameAndType        #217:#218     // setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonGenerator;\n+  #432 = Utf8               java/lang/UnsupportedOperationException\n+  #433 = Utf8               Generator of type %s does not support schema of type \\'%s\\'\n+  #434 = Utf8               java/lang/Object\n+  #435 = NameAndType        #594:#595     // getClass:()Ljava/lang/Class;\n+  #436 = Class              #596          // java/lang/Class\n+  #437 = NameAndType        #597:#598     // getName:()Ljava/lang/String;\n+  #438 = Class              #599          // com/fasterxml/jackson/core/FormatSchema\n+  #439 = NameAndType        #600:#598     // getSchemaType:()Ljava/lang/String;\n+  #440 = NameAndType        #601:#602     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #441 = NameAndType        #174:#280     // \"<init>\":(Ljava/lang/String;)V\n+  #442 = NameAndType        #172:#173     // _cfgPrettyPrinter:Lcom/fasterxml/jackson/core/PrettyPrinter;\n+  #443 = NameAndType        #166:#167     // DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #444 = NameAndType        #269:#175     // writeStartArray:()V\n+  #445 = NameAndType        #269:#272     // writeStartArray:(I)V\n+  #446 = NameAndType        #277:#175     // writeStartObject:()V\n+  #447 = NameAndType        #277:#193     // writeStartObject:(Ljava/lang/Object;)V\n+  #448 = NameAndType        #603:#604     // toString:(J)Ljava/lang/String;\n+  #449 = NameAndType        #279:#280     // writeFieldName:(Ljava/lang/String;)V\n+  #450 = Utf8               java/lang/IllegalArgumentException\n+  #451 = Utf8               null array\n+  #452 = NameAndType        #413:#414     // _verifyOffsets:(III)V\n+  #453 = NameAndType        #269:#275     // writeStartArray:(Ljava/lang/Object;I)V\n+  #454 = NameAndType        #323:#272     // writeNumber:(I)V\n+  #455 = NameAndType        #276:#175     // writeEndArray:()V\n+  #456 = NameAndType        #323:#283     // writeNumber:(J)V\n+  #457 = NameAndType        #323:#327     // writeNumber:(D)V\n+  #458 = NameAndType        #300:#280     // writeString:(Ljava/lang/String;)V\n+  #459 = NameAndType        #412:#175     // _reportUnsupportedOperation:()V\n+  #460 = Class              #605          // com/fasterxml/jackson/core/SerializableString\n+  #461 = NameAndType        #606:#598     // getValue:()Ljava/lang/String;\n+  #462 = NameAndType        #309:#280     // writeRaw:(Ljava/lang/String;)V\n+  #463 = NameAndType        #313:#280     // writeRawValue:(Ljava/lang/String;)V\n+  #464 = Class              #607          // com/fasterxml/jackson/core/Base64Variants\n+  #465 = NameAndType        #608:#609     // getDefaultVariant:()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #466 = NameAndType        #314:#315     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;[BII)V\n+  #467 = NameAndType        #314:#322     // writeBinary:(Lcom/fasterxml/jackson/core/Base64Variant;Ljava/io/InputStream;I)I\n+  #468 = Utf8               java/lang/String\n+  #469 = NameAndType        #174:#305     // \"<init>\":([CII)V\n+  #470 = NameAndType        #323:#280     // writeNumber:(Ljava/lang/String;)V\n+  #471 = NameAndType        #334:#175     // writeNull:()V\n+  #472 = NameAndType        #314:#318     // writeBinary:([B)V\n+  #473 = Utf8               com/fasterxml/jackson/core/JsonGenerationException\n+  #474 = Utf8               java/lang/StringBuilder\n+  #475 = Utf8               No native support for writing embedded objects of type\n+  #476 = NameAndType        #610:#611     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #477 = NameAndType        #603:#598     // toString:()Ljava/lang/String;\n+  #478 = NameAndType        #174:#612     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #479 = Utf8               No native support for writing Object Ids\n+  #480 = Utf8               No native support for writing Type Ids\n+  #481 = Class              #613          // com/fasterxml/jackson/core/type/WritableTypeId\n+  #482 = NameAndType        #284:#195     // id:Ljava/lang/Object;\n+  #483 = NameAndType        #351:#352     // valueShape:Lcom/fasterxml/jackson/core/JsonToken;\n+  #484 = NameAndType        #262:#261     // canWriteTypeId:()Z\n+  #485 = NameAndType        #614:#210     // wrapperWritten:Z\n+  #486 = NameAndType        #340:#193     // writeTypeId:(Ljava/lang/Object;)V\n+  #487 = NameAndType        #615:#616     // valueOf:(Ljava/lang/Object;)Ljava/lang/String;\n+  #488 = NameAndType        #617:#348     // include:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #489 = NameAndType        #618:#352     // START_OBJECT:Lcom/fasterxml/jackson/core/JsonToken;\n+  #490 = NameAndType        #619:#261     // requiresObjectContext:()Z\n+  #491 = NameAndType        #620:#348     // WRAPPER_ARRAY:Lcom/fasterxml/jackson/core/type/WritableTypeId$Inclusion;\n+  #492 = NameAndType        #621:#291     // $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion:[I\n+  #493 = NameAndType        #622:#216     // ordinal:()I\n+  #494 = NameAndType        #274:#195     // forValue:Ljava/lang/Object;\n+  #495 = NameAndType        #623:#344     // asProperty:Ljava/lang/String;\n+  #496 = NameAndType        #367:#368     // writeStringField:(Ljava/lang/String;Ljava/lang/String;)V\n+  #497 = NameAndType        #624:#352     // START_ARRAY:Lcom/fasterxml/jackson/core/JsonToken;\n+  #498 = NameAndType        #278:#175     // writeEndObject:()V\n+  #499 = NameAndType        #357:#193     // writeObject:(Ljava/lang/Object;)V\n+  #500 = NameAndType        #332:#333     // writeBoolean:(Z)V\n+  #501 = NameAndType        #323:#324     // writeNumber:(S)V\n+  #502 = NameAndType        #323:#326     // writeNumber:(Ljava/math/BigInteger;)V\n+  #503 = NameAndType        #323:#328     // writeNumber:(F)V\n+  #504 = NameAndType        #323:#329     // writeNumber:(Ljava/math/BigDecimal;)V\n+  #505 = NameAndType        #385:#384     // writeObjectField:(Ljava/lang/String;Ljava/lang/Object;)V\n+  #506 = Class              #625          // com/fasterxml/jackson/core/JsonParser\n+  #507 = NameAndType        #626:#627     // currentToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #508 = NameAndType        #284:#216     // id:()I\n+  #509 = Utf8               No current event to copy\n+  #510 = NameAndType        #409:#280     // _reportError:(Ljava/lang/String;)V\n+  #511 = NameAndType        #628:#598     // getCurrentName:()Ljava/lang/String;\n+  #512 = NameAndType        #405:#388     // _copyCurrentStringValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #513 = NameAndType        #404:#388     // _copyCurrentIntValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #514 = NameAndType        #397:#388     // _copyCurrentFloatValue:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #515 = NameAndType        #629:#190     // getEmbeddedObject:()Ljava/lang/Object;\n+  #516 = Utf8               java/lang/IllegalStateException\n+  #517 = Utf8               Internal error: unknown current token,\n+  #518 = NameAndType        #610:#630     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #519 = NameAndType        #401:#388     // _copyCurrentFloatValueExact:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #520 = NameAndType        #631:#627     // nextToken:()Lcom/fasterxml/jackson/core/JsonToken;\n+  #521 = NameAndType        #395:#388     // _copyCurrentContents:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #522 = NameAndType        #387:#388     // copyCurrentEvent:(Lcom/fasterxml/jackson/core/JsonParser;)V\n+  #523 = NameAndType        #632:#633     // getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #524 = NameAndType        #634:#400     // BIG_DECIMAL:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #525 = NameAndType        #635:#636     // getDecimalValue:()Ljava/math/BigDecimal;\n+  #526 = NameAndType        #637:#400     // FLOAT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #527 = NameAndType        #638:#639     // getFloatValue:()F\n+  #528 = NameAndType        #640:#641     // getDoubleValue:()D\n+  #529 = NameAndType        #642:#643     // getNumberValueExact:()Ljava/lang/Number;\n+  #530 = Utf8               java/math/BigDecimal\n+  #531 = Utf8               java/lang/Double\n+  #532 = NameAndType        #644:#641     // doubleValue:()D\n+  #533 = NameAndType        #645:#639     // floatValue:()F\n+  #534 = NameAndType        #646:#400     // INT:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #535 = NameAndType        #647:#216     // getIntValue:()I\n+  #536 = NameAndType        #648:#400     // LONG:Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #537 = NameAndType        #649:#650     // getLongValue:()J\n+  #538 = NameAndType        #651:#652     // getBigIntegerValue:()Ljava/math/BigInteger;\n+  #539 = NameAndType        #653:#261     // hasTextCharacters:()Z\n+  #540 = NameAndType        #654:#655     // getTextCharacters:()[C\n+  #541 = NameAndType        #656:#216     // getTextOffset:()I\n+  #542 = NameAndType        #657:#216     // getTextLength:()I\n+  #543 = NameAndType        #300:#305     // writeString:([CII)V\n+  #544 = NameAndType        #658:#598     // getText:()Ljava/lang/String;\n+  #545 = Class              #659          // com/fasterxml/jackson/core/util/VersionUtil\n+  #546 = NameAndType        #660:#175     // throwInternal:()V\n+  #547 = Utf8               Operation not supported by generator of type\n+  #548 = Utf8               invalid argument(s) (offset=%d, length=%d) for input array of %d element\n+  #549 = NameAndType        #615:#661     // valueOf:(I)Ljava/lang/Integer;\n+  #550 = Utf8               java/lang/Number\n+  #551 = Utf8               java/lang/Integer\n+  #552 = NameAndType        #662:#216     // intValue:()I\n+  #553 = Utf8               java/lang/Long\n+  #554 = NameAndType        #663:#650     // longValue:()J\n+  #555 = Utf8               java/lang/Float\n+  #556 = Utf8               java/lang/Short\n+  #557 = NameAndType        #664:#665     // shortValue:()S\n+  #558 = Utf8               java/lang/Byte\n+  #559 = NameAndType        #666:#667     // byteValue:()B\n+  #560 = Utf8               java/math/BigInteger\n+  #561 = Utf8               java/util/concurrent/atomic/AtomicInteger\n+  #562 = NameAndType        #668:#216     // get:()I\n+  #563 = Utf8               java/util/concurrent/atomic/AtomicLong\n+  #564 = NameAndType        #668:#650     // get:()J\n+  #565 = Utf8               java/lang/Boolean\n+  #566 = NameAndType        #669:#261     // booleanValue:()Z\n+  #567 = Utf8               java/util/concurrent/atomic/AtomicBoolean\n+  #568 = NameAndType        #668:#261     // get:()Z\n+  #569 = Utf8               No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+  #570 = Utf8               )\n+  #571 = Class              #670          // com/fasterxml/jackson/core/StreamWriteCapability\n+  #572 = NameAndType        #224:#671     // values:()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #573 = Class              #672          // com/fasterxml/jackson/core/util/JacksonFeatureSet\n+  #574 = NameAndType        #673:#674     // fromDefaults:([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #575 = NameAndType        #675:#676     // CAN_WRITE_FORMATTED_NUMBERS:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #576 = NameAndType        #677:#678     // with:(Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #577 = NameAndType        #170:#167     // DEFAULT_TEXTUAL_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #578 = NameAndType        #679:#676     // CAN_WRITE_BINARY_NATIVELY:Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #579 = NameAndType        #171:#167     // DEFAULT_BINARY_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #580 = Utf8               com/fasterxml/jackson/core/JsonGenerator\n+  #581 = Utf8               java/io/Closeable\n+  #582 = Utf8               java/io/Flushable\n+  #583 = Utf8               com/fasterxml/jackson/core/Versioned\n+  #584 = Utf8               com/fasterxml/jackson/core/JsonGenerator$1\n+  #585 = Utf8               com/fasterxml/jackson/core/JsonGenerator$Feature\n+  #586 = Utf8               com/fasterxml/jackson/core/JsonStreamContext\n+  #587 = Utf8               java/io/IOException\n+  #588 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId$Inclusion\n+  #589 = Utf8               com/fasterxml/jackson/core/JsonToken\n+  #590 = Utf8               com/fasterxml/jackson/core/JsonParser$NumberType\n+  #591 = Utf8               com/fasterxml/jackson/core/StreamWriteFeature\n+  #592 = Utf8               mappedFeature\n+  #593 = Utf8               ()Lcom/fasterxml/jackson/core/JsonGenerator$Feature;\n+  #594 = Utf8               getClass\n+  #595 = Utf8               ()Ljava/lang/Class;\n+  #596 = Utf8               java/lang/Class\n+  #597 = Utf8               getName\n+  #598 = Utf8               ()Ljava/lang/String;\n+  #599 = Utf8               com/fasterxml/jackson/core/FormatSchema\n+  #600 = Utf8               getSchemaType\n+  #601 = Utf8               format\n+  #602 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #603 = Utf8               toString\n+  #604 = Utf8               (J)Ljava/lang/String;\n+  #605 = Utf8               com/fasterxml/jackson/core/SerializableString\n+  #606 = Utf8               getValue\n+  #607 = Utf8               com/fasterxml/jackson/core/Base64Variants\n+  #608 = Utf8               getDefaultVariant\n+  #609 = Utf8               ()Lcom/fasterxml/jackson/core/Base64Variant;\n+  #610 = Utf8               append\n+  #611 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #612 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+  #613 = Utf8               com/fasterxml/jackson/core/type/WritableTypeId\n+  #614 = Utf8               wrapperWritten\n+  #615 = Utf8               valueOf\n+  #616 = Utf8               (Ljava/lang/Object;)Ljava/lang/String;\n+  #617 = Utf8               include\n+  #618 = Utf8               START_OBJECT\n+  #619 = Utf8               requiresObjectContext\n+  #620 = Utf8               WRAPPER_ARRAY\n+  #621 = Utf8               $SwitchMap$com$fasterxml$jackson$core$type$WritableTypeId$Inclusion\n+  #622 = Utf8               ordinal\n+  #623 = Utf8               asProperty\n+  #624 = Utf8               START_ARRAY\n+  #625 = Utf8               com/fasterxml/jackson/core/JsonParser\n+  #626 = Utf8               currentToken\n+  #627 = Utf8               ()Lcom/fasterxml/jackson/core/JsonToken;\n+  #628 = Utf8               getCurrentName\n+  #629 = Utf8               getEmbeddedObject\n+  #630 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #631 = Utf8               nextToken\n+  #632 = Utf8               getNumberType\n+  #633 = Utf8               ()Lcom/fasterxml/jackson/core/JsonParser$NumberType;\n+  #634 = Utf8               BIG_DECIMAL\n+  #635 = Utf8               getDecimalValue\n+  #636 = Utf8               ()Ljava/math/BigDecimal;\n+  #637 = Utf8               FLOAT\n+  #638 = Utf8               getFloatValue\n+  #639 = Utf8               ()F\n+  #640 = Utf8               getDoubleValue\n+  #641 = Utf8               ()D\n+  #642 = Utf8               getNumberValueExact\n+  #643 = Utf8               ()Ljava/lang/Number;\n+  #644 = Utf8               doubleValue\n+  #645 = Utf8               floatValue\n+  #646 = Utf8               INT\n+  #647 = Utf8               getIntValue\n+  #648 = Utf8               LONG\n+  #649 = Utf8               getLongValue\n+  #650 = Utf8               ()J\n+  #651 = Utf8               getBigIntegerValue\n+  #652 = Utf8               ()Ljava/math/BigInteger;\n+  #653 = Utf8               hasTextCharacters\n+  #654 = Utf8               getTextCharacters\n+  #655 = Utf8               ()[C\n+  #656 = Utf8               getTextOffset\n+  #657 = Utf8               getTextLength\n+  #658 = Utf8               getText\n+  #659 = Utf8               com/fasterxml/jackson/core/util/VersionUtil\n+  #660 = Utf8               throwInternal\n+  #661 = Utf8               (I)Ljava/lang/Integer;\n+  #662 = Utf8               intValue\n+  #663 = Utf8               longValue\n+  #664 = Utf8               shortValue\n+  #665 = Utf8               ()S\n+  #666 = Utf8               byteValue\n+  #667 = Utf8               ()B\n+  #668 = Utf8               get\n+  #669 = Utf8               booleanValue\n+  #670 = Utf8               com/fasterxml/jackson/core/StreamWriteCapability\n+  #671 = Utf8               ()[Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #672 = Utf8               com/fasterxml/jackson/core/util/JacksonFeatureSet\n+  #673 = Utf8               fromDefaults\n+  #674 = Utf8               ([Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #675 = Utf8               CAN_WRITE_FORMATTED_NUMBERS\n+  #676 = Utf8               Lcom/fasterxml/jackson/core/StreamWriteCapability;\n+  #677 = Utf8               with\n+  #678 = Utf8               (Lcom/fasterxml/jackson/core/util/JacksonFeature;)Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n+  #679 = Utf8               CAN_WRITE_BINARY_NATIVELY\n {\n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_WRITE_CAPABILITIES;\n     descriptor: Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n     Signature: #169                         // Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   protected static final com.fasterxml.jackson.core.util.JacksonFeatureSet<com.fasterxml.jackson.core.StreamWriteCapability> DEFAULT_TEXTUAL_WRITE_CAPABILITIES;\n@@ -910,15 +903,15 @@\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   public abstract com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int);\n     descriptor: (I)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #222()\n+      0: #221()\n         java.lang.Deprecated\n \n   public com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int);\n     descriptor: (II)Lcom/fasterxml/jackson/core/JsonGenerator;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=3\n@@ -1231,15 +1224,15 @@\n          0: getstatic     #24                 // Field DEFAULT_WRITE_CAPABILITIES:Lcom/fasterxml/jackson/core/util/JacksonFeatureSet;\n          3: areturn\n       LineNumberTable:\n         line 889: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       4     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-    Signature: #269                         // ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n+    Signature: #268                         // ()Lcom/fasterxml/jackson/core/util/JacksonFeatureSet<Lcom/fasterxml/jackson/core/StreamWriteCapability;>;\n \n   public abstract void writeStartArray() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n \n@@ -1258,15 +1251,15 @@\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n             0       5     1  size   I\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #222()\n+      0: #221()\n         java.lang.Deprecated\n \n   public void writeStartArray(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n@@ -1996,52 +1989,51 @@\n          0: aload_1\n          1: ifnonnull     9\n          4: aload_0\n          5: invokevirtual #51                 // Method writeNull:()V\n          8: return\n          9: aload_1\n         10: instanceof    #52                 // class \"[B\"\n-        13: ifeq          28\n+        13: ifeq          25\n         16: aload_0\n         17: aload_1\n         18: checkcast     #52                 // class \"[B\"\n-        21: checkcast     #52                 // class \"[B\"\n-        24: invokevirtual #53                 // Method writeBinary:([B)V\n-        27: return\n-        28: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n-        31: dup\n-        32: new           #55                 // class java/lang/StringBuilder\n-        35: dup\n-        36: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        39: ldc           #57                 // String No native support for writing embedded objects of type\n-        41: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        44: aload_1\n-        45: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        48: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        51: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        54: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        57: aload_0\n-        58: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n-        61: athrow\n+        21: invokevirtual #53                 // Method writeBinary:([B)V\n+        24: return\n+        25: new           #54                 // class com/fasterxml/jackson/core/JsonGenerationException\n+        28: dup\n+        29: new           #55                 // class java/lang/StringBuilder\n+        32: dup\n+        33: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        36: ldc           #57                 // String No native support for writing embedded objects of type\n+        38: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: aload_1\n+        42: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        45: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        48: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        51: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        54: aload_0\n+        55: invokespecial #60                 // Method com/fasterxml/jackson/core/JsonGenerationException.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonGenerator;)V\n+        58: athrow\n       LineNumberTable:\n         line 1832: 0\n         line 1833: 4\n         line 1834: 8\n         line 1836: 9\n         line 1837: 16\n-        line 1838: 27\n-        line 1840: 28\n-        line 1841: 45\n+        line 1838: 24\n+        line 1840: 25\n+        line 1841: 42\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      62     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0      62     1 object   Ljava/lang/Object;\n+            0      59     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0      59     1 object   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 9 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   public void writeObjectId(java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n@@ -3747,58 +3739,57 @@\n        189: ifeq          204\n        192: aload_0\n        193: aload_2\n        194: checkcast     #143                // class java/util/concurrent/atomic/AtomicLong\n        197: invokevirtual #144                // Method java/util/concurrent/atomic/AtomicLong.get:()J\n        200: invokevirtual #38                 // Method writeNumber:(J)V\n        203: return\n-       204: goto          264\n+       204: goto          261\n        207: aload_1\n        208: instanceof    #52                 // class \"[B\"\n-       211: ifeq          226\n+       211: ifeq          223\n        214: aload_0\n        215: aload_1\n        216: checkcast     #52                 // class \"[B\"\n-       219: checkcast     #52                 // class \"[B\"\n-       222: invokevirtual #53                 // Method writeBinary:([B)V\n-       225: return\n-       226: aload_1\n-       227: instanceof    #145                // class java/lang/Boolean\n-       230: ifeq          245\n-       233: aload_0\n-       234: aload_1\n-       235: checkcast     #145                // class java/lang/Boolean\n-       238: invokevirtual #146                // Method java/lang/Boolean.booleanValue:()Z\n-       241: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       244: return\n-       245: aload_1\n-       246: instanceof    #147                // class java/util/concurrent/atomic/AtomicBoolean\n-       249: ifeq          264\n-       252: aload_0\n-       253: aload_1\n-       254: checkcast     #147                // class java/util/concurrent/atomic/AtomicBoolean\n-       257: invokevirtual #148                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n-       260: invokevirtual #81                 // Method writeBoolean:(Z)V\n-       263: return\n-       264: new           #96                 // class java/lang/IllegalStateException\n-       267: dup\n-       268: new           #55                 // class java/lang/StringBuilder\n-       271: dup\n-       272: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       275: ldc           #149                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n-       277: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       280: aload_1\n-       281: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-       284: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-       287: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       290: ldc           #150                // String )\n-       292: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       295: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       298: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-       301: athrow\n+       219: invokevirtual #53                 // Method writeBinary:([B)V\n+       222: return\n+       223: aload_1\n+       224: instanceof    #145                // class java/lang/Boolean\n+       227: ifeq          242\n+       230: aload_0\n+       231: aload_1\n+       232: checkcast     #145                // class java/lang/Boolean\n+       235: invokevirtual #146                // Method java/lang/Boolean.booleanValue:()Z\n+       238: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       241: return\n+       242: aload_1\n+       243: instanceof    #147                // class java/util/concurrent/atomic/AtomicBoolean\n+       246: ifeq          261\n+       249: aload_0\n+       250: aload_1\n+       251: checkcast     #147                // class java/util/concurrent/atomic/AtomicBoolean\n+       254: invokevirtual #148                // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z\n+       257: invokevirtual #81                 // Method writeBoolean:(Z)V\n+       260: return\n+       261: new           #96                 // class java/lang/IllegalStateException\n+       264: dup\n+       265: new           #55                 // class java/lang/StringBuilder\n+       268: dup\n+       269: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       272: ldc           #149                // String No ObjectCodec defined for the generator, can only serialize simple wrapper types (type passed\n+       274: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       277: aload_1\n+       278: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+       281: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+       284: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       287: ldc           #150                // String )\n+       289: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       292: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       295: invokespecial #99                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       298: athrow\n       LineNumberTable:\n         line 2883: 0\n         line 2884: 4\n         line 2885: 8\n         line 2887: 9\n         line 2888: 16\n         line 2889: 24\n@@ -3832,28 +3823,28 @@\n         line 2920: 173\n         line 2921: 184\n         line 2922: 185\n         line 2923: 192\n         line 2924: 203\n         line 2926: 204\n         line 2927: 214\n-        line 2928: 225\n-        line 2929: 226\n-        line 2930: 233\n-        line 2931: 244\n-        line 2932: 245\n-        line 2933: 252\n-        line 2934: 263\n-        line 2936: 264\n-        line 2937: 281\n+        line 2928: 222\n+        line 2929: 223\n+        line 2930: 230\n+        line 2931: 241\n+        line 2932: 242\n+        line 2933: 249\n+        line 2934: 260\n+        line 2936: 261\n+        line 2937: 278\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n            37     167     2     n   Ljava/lang/Number;\n-            0     302     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n-            0     302     1 value   Ljava/lang/Object;\n+            0     299     0  this   Lcom/fasterxml/jackson/core/JsonGenerator;\n+            0     299     1 value   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 16\n         frame_type = 9 /* same */\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 27\n           locals = [ class java/lang/Number ]\n         frame_type = 15 /* same */\n@@ -3863,15 +3854,15 @@\n         frame_type = 16 /* same */\n         frame_type = 15 /* same */\n         frame_type = 15 /* same */\n         frame_type = 18 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 18\n         frame_type = 2 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n         frame_type = 18 /* same */\n         frame_type = 18 /* same */\n     Exceptions:\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n@@ -3898,9 +3889,9 @@\n         line 60: 27\n         line 59: 33\n }\n SourceFile: \"JsonGenerator.java\"\n InnerClasses:\n   static #162;                            // class com/fasterxml/jackson/core/JsonGenerator$1\n   public static final #165= #164 of #158; // Feature=class com/fasterxml/jackson/core/JsonGenerator$Feature of class com/fasterxml/jackson/core/JsonGenerator\n-  public static final #348= #347 of #487; // Inclusion=class com/fasterxml/jackson/core/type/WritableTypeId$Inclusion of class com/fasterxml/jackson/core/type/WritableTypeId\n-  public static final #402= #401 of #513; // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser\n+  public static final #347= #346 of #481; // Inclusion=class com/fasterxml/jackson/core/type/WritableTypeId$Inclusion of class com/fasterxml/jackson/core/type/WritableTypeId\n+  public static final #399= #398 of #506; // NumberType=class com/fasterxml/jackson/core/JsonParser$NumberType of class com/fasterxml/jackson/core/JsonParser\n"}]}
