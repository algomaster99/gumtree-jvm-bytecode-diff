{"diffoscope-json-version": 1, "source1": "first/ByteQuadsCanonicalizer.class", "source2": "second/ByteQuadsCanonicalizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,130 +1,130 @@\n-  SHA-256 checksum 8e10b8c03dfcec95ae0697b90b998618d0b42ab3e566358c60bd2c5686b0349c\n+  SHA-256 checksum 069943c1f0a34c507effb941cec0bd2cb73a08b54069e40f776d592026f89b02\n   Compiled from \"ByteQuadsCanonicalizer.java\"\n public final class com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #8                          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n   super_class: #50                        // java/lang/Object\n   interfaces: 0, fields: 22, methods: 49, attributes: 2\n Constant pool:\n-    #1 = Methodref          #50.#281      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #8.#282       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-    #3 = Fieldref           #8.#283       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._count:I\n-    #4 = Fieldref           #8.#284       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashShared:Z\n-    #5 = Fieldref           #8.#285       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._seed:I\n-    #6 = Fieldref           #8.#286       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._intern:Z\n-    #7 = Fieldref           #8.#287       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._failOnDoS:Z\n-    #8 = Class              #288          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-    #9 = Class              #289          // java/util/concurrent/atomic/AtomicReference\n-   #10 = Methodref          #32.#290      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-   #11 = Methodref          #9.#291       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n-   #12 = Fieldref           #8.#292       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n-   #13 = Fieldref           #32.#293      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.count:I\n-   #14 = Fieldref           #32.#294      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.size:I\n-   #15 = Fieldref           #8.#295       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashSize:I\n-   #16 = Fieldref           #8.#296       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._secondaryStart:I\n-   #17 = Fieldref           #8.#297       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryStart:I\n-   #18 = Fieldref           #32.#298      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.tertiaryShift:I\n-   #19 = Fieldref           #8.#299       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryShift:I\n-   #20 = Fieldref           #32.#300      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.mainHash:[I\n-   #21 = Fieldref           #8.#301       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashArea:[I\n-   #22 = Fieldref           #32.#302      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.names:[Ljava/lang/String;\n-   #23 = Fieldref           #8.#303       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._names:[Ljava/lang/String;\n-   #24 = Fieldref           #32.#304      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.spilloverEnd:I\n-   #25 = Fieldref           #8.#305       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverEnd:I\n-   #26 = Fieldref           #32.#306      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.longNameOffset:I\n-   #27 = Fieldref           #8.#307       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._longNameOffset:I\n-   #28 = Methodref          #308.#309     // java/lang/System.currentTimeMillis:()J\n-   #29 = Methodref          #8.#310       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-   #30 = Methodref          #8.#311       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(II)V\n-   #31 = Methodref          #9.#312       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n-   #32 = Class              #313          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n-   #33 = Fieldref           #314.#315     // com/fasterxml/jackson/core/JsonFactory$Feature.INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #34 = Methodref          #314.#316     // com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn:(I)Z\n-   #35 = Fieldref           #314.#317     // com/fasterxml/jackson/core/JsonFactory$Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #36 = Methodref          #8.#318       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n-   #37 = Fieldref           #314.#319     // com/fasterxml/jackson/core/JsonFactory$Feature.CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #38 = Methodref          #8.#320       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-   #39 = Methodref          #8.#321       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.maybeDirty:()Z\n-   #40 = Methodref          #32.#322      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-   #41 = Methodref          #8.#323       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-   #42 = Methodref          #9.#324       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #43 = Methodref          #8.#325       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverStart:()I\n-   #44 = Methodref          #8.#326       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.primaryCount:()I\n-   #45 = Methodref          #8.#327       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.secondaryCount:()I\n-   #46 = Methodref          #8.#328       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.tertiaryCount:()I\n-   #47 = Methodref          #8.#329       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.spilloverCount:()I\n-   #48 = Methodref          #8.#330       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.totalCount:()I\n-   #49 = String             #331          // [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n-   #50 = Class              #332          // java/lang/Object\n-   #51 = Methodref          #50.#333      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #52 = Methodref          #334.#335     // java/lang/Class.getName:()Ljava/lang/String;\n-   #53 = Methodref          #336.#337     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #54 = Methodref          #98.#338      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #55 = Methodref          #8.#339       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(I)I\n-   #56 = Methodref          #8.#340       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcOffset:(I)I\n-   #57 = Methodref          #8.#341       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II)Ljava/lang/String;\n-   #58 = Methodref          #8.#342       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(II)I\n-   #59 = Methodref          #8.#343       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(III)Ljava/lang/String;\n-   #60 = Methodref          #8.#344       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(III)I\n-   #61 = Methodref          #8.#345       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(IIII)Ljava/lang/String;\n-   #62 = Methodref          #8.#346       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n-   #63 = Methodref          #8.#347       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n-   #64 = Methodref          #8.#348       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n-   #65 = String             #349          //\n-   #66 = Methodref          #8.#350       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:([II)I\n-   #67 = Methodref          #8.#351       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName:([III)Z\n-   #68 = Methodref          #8.#352       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II[II)Ljava/lang/String;\n-   #69 = Methodref          #8.#353       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName2:([III)Z\n-   #70 = Methodref          #8.#354       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifySharing:()V\n-   #71 = Fieldref           #355.#356     // com/fasterxml/jackson/core/util/InternCache.instance:Lcom/fasterxml/jackson/core/util/InternCache;\n-   #72 = Methodref          #355.#357     // com/fasterxml/jackson/core/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;\n-   #73 = Methodref          #8.#358       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findOffsetForAdd:(I)I\n-   #74 = Methodref          #8.#359       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._appendLongName:([II)I\n-   #75 = Class              #360          // java/lang/IllegalStateException\n-   #76 = String             #361          // Internal error: Cannot add names to Root symbol table\n-   #77 = Methodref          #75.#362      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #78 = String             #363          // Internal error: Cannot add names to Placeholder symbol table\n-   #79 = Methodref          #364.#365     // java/util/Arrays.copyOf:([II)[I\n-   #80 = Methodref          #364.#366     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n+    #1 = Methodref          #50.#278      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #8.#279       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+    #3 = Fieldref           #8.#280       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._count:I\n+    #4 = Fieldref           #8.#281       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashShared:Z\n+    #5 = Fieldref           #8.#282       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._seed:I\n+    #6 = Fieldref           #8.#283       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._intern:Z\n+    #7 = Fieldref           #8.#284       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._failOnDoS:Z\n+    #8 = Class              #285          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+    #9 = Class              #286          // java/util/concurrent/atomic/AtomicReference\n+   #10 = Methodref          #32.#287      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+   #11 = Methodref          #9.#288       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n+   #12 = Fieldref           #8.#289       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n+   #13 = Fieldref           #32.#290      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.count:I\n+   #14 = Fieldref           #32.#291      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.size:I\n+   #15 = Fieldref           #8.#292       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashSize:I\n+   #16 = Fieldref           #8.#293       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._secondaryStart:I\n+   #17 = Fieldref           #8.#294       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryStart:I\n+   #18 = Fieldref           #32.#295      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.tertiaryShift:I\n+   #19 = Fieldref           #8.#296       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._tertiaryShift:I\n+   #20 = Fieldref           #32.#297      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.mainHash:[I\n+   #21 = Fieldref           #8.#298       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._hashArea:[I\n+   #22 = Fieldref           #32.#299      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.names:[Ljava/lang/String;\n+   #23 = Fieldref           #8.#300       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._names:[Ljava/lang/String;\n+   #24 = Fieldref           #32.#301      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.spilloverEnd:I\n+   #25 = Fieldref           #8.#302       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverEnd:I\n+   #26 = Fieldref           #32.#303      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.longNameOffset:I\n+   #27 = Fieldref           #8.#304       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._longNameOffset:I\n+   #28 = Methodref          #305.#306     // java/lang/System.currentTimeMillis:()J\n+   #29 = Methodref          #8.#307       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+   #30 = Methodref          #8.#308       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(II)V\n+   #31 = Methodref          #9.#309       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n+   #32 = Class              #310          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n+   #33 = Fieldref           #311.#312     // com/fasterxml/jackson/core/JsonFactory$Feature.INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #34 = Methodref          #311.#313     // com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn:(I)Z\n+   #35 = Fieldref           #311.#314     // com/fasterxml/jackson/core/JsonFactory$Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #36 = Methodref          #8.#315       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n+   #37 = Fieldref           #311.#316     // com/fasterxml/jackson/core/JsonFactory$Feature.CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #38 = Methodref          #8.#317       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+   #39 = Methodref          #8.#318       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.maybeDirty:()Z\n+   #40 = Methodref          #32.#319      // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo.\"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+   #41 = Methodref          #8.#320       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+   #42 = Methodref          #9.#321       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #43 = Methodref          #8.#322       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._spilloverStart:()I\n+   #44 = Methodref          #8.#323       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.primaryCount:()I\n+   #45 = Methodref          #8.#324       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.secondaryCount:()I\n+   #46 = Methodref          #8.#325       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.tertiaryCount:()I\n+   #47 = Methodref          #8.#326       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.spilloverCount:()I\n+   #48 = Methodref          #8.#327       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.totalCount:()I\n+   #49 = String             #328          // [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n+   #50 = Class              #329          // java/lang/Object\n+   #51 = Methodref          #50.#330      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #52 = Methodref          #331.#332     // java/lang/Class.getName:()Ljava/lang/String;\n+   #53 = Methodref          #333.#334     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #54 = Methodref          #98.#335      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #55 = Methodref          #8.#336       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(I)I\n+   #56 = Methodref          #8.#337       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcOffset:(I)I\n+   #57 = Methodref          #8.#338       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II)Ljava/lang/String;\n+   #58 = Methodref          #8.#339       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(II)I\n+   #59 = Methodref          #8.#340       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(III)Ljava/lang/String;\n+   #60 = Methodref          #8.#341       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:(III)I\n+   #61 = Methodref          #8.#342       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(IIII)Ljava/lang/String;\n+   #62 = Methodref          #8.#343       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(III)Ljava/lang/String;\n+   #63 = Methodref          #8.#344       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(II)Ljava/lang/String;\n+   #64 = Methodref          #8.#345       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.findName:(I)Ljava/lang/String;\n+   #65 = String             #346          //\n+   #66 = Methodref          #8.#347       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.calcHash:([II)I\n+   #67 = Methodref          #8.#348       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName:([III)Z\n+   #68 = Methodref          #8.#349       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findSecondary:(II[II)Ljava/lang/String;\n+   #69 = Methodref          #8.#350       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifyLongName2:([III)Z\n+   #70 = Methodref          #8.#351       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._verifySharing:()V\n+   #71 = Fieldref           #352.#353     // com/fasterxml/jackson/core/util/InternCache.instance:Lcom/fasterxml/jackson/core/util/InternCache;\n+   #72 = Methodref          #352.#354     // com/fasterxml/jackson/core/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;\n+   #73 = Methodref          #8.#355       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._findOffsetForAdd:(I)I\n+   #74 = Methodref          #8.#356       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._appendLongName:([II)I\n+   #75 = Class              #357          // java/lang/IllegalStateException\n+   #76 = String             #358          // Internal error: Cannot add names to Root symbol table\n+   #77 = Methodref          #75.#359      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #78 = String             #360          // Internal error: Cannot add names to Placeholder symbol table\n+   #79 = Methodref          #361.#362     // java/util/Arrays.copyOf:([II)[I\n+   #80 = Methodref          #361.#363     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n    #81 = Class              #144          // \"[Ljava/lang/String;\"\n-   #82 = Methodref          #8.#367       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._checkNeedForRehash:()Z\n-   #83 = Methodref          #8.#368       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._resizeAndFindOffsetForAdd:(I)I\n-   #84 = Methodref          #8.#369       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._reportTooManyCollisions:()V\n-   #85 = Methodref          #8.#370       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.rehash:()V\n+   #82 = Methodref          #8.#364       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._checkNeedForRehash:()Z\n+   #83 = Methodref          #8.#365       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._resizeAndFindOffsetForAdd:(I)I\n+   #84 = Methodref          #8.#366       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._reportTooManyCollisions:()V\n+   #85 = Methodref          #8.#367       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.rehash:()V\n    #86 = Double             0.8d\n-   #88 = Methodref          #371.#372     // java/lang/Math.min:(II)I\n-   #89 = Methodref          #371.#373     // java/lang/Math.max:(II)I\n-   #90 = Methodref          #308.#374     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #91 = Class              #375          // java/lang/IllegalArgumentException\n-   #92 = String             #376          // qlen is too short, needs to be at least 4\n-   #93 = Methodref          #91.#362      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #88 = Methodref          #368.#369     // java/lang/Math.min:(II)I\n+   #89 = Methodref          #368.#370     // java/lang/Math.max:(II)I\n+   #90 = Methodref          #305.#371     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #91 = Class              #372          // java/lang/IllegalArgumentException\n+   #92 = String             #373          // qlen is too short, needs to be at least 4\n+   #93 = Methodref          #91.#359      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n    #94 = Integer            65599\n    #95 = Integer            65536\n-   #96 = Methodref          #8.#377       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.nukeSymbols:(Z)V\n-   #97 = Methodref          #8.#378       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcTertiaryShift:(I)I\n-   #98 = Class              #379          // java/lang/String\n-   #99 = Methodref          #8.#380       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-  #100 = Class              #381          // java/lang/StringBuilder\n-  #101 = Methodref          #100.#281     // java/lang/StringBuilder.\"<init>\":()V\n-  #102 = String             #382          // Internal error: Failed rehash(), old count=\n-  #103 = Methodref          #100.#383     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #104 = Methodref          #100.#384     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-  #105 = String             #385          // , copyCount=\n-  #106 = Methodref          #100.#386     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #107 = Methodref          #364.#387     // java/util/Arrays.fill:([II)V\n-  #108 = Methodref          #364.#388     // java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n-  #109 = Class              #389          // com/fasterxml/jackson/core/exc/StreamConstraintsException\n-  #110 = String             #390          // Spill-over slots in symbol table with\n-  #111 = String             #391          //  entries, hash area of\n-  #112 = String             #392          //  slots is now full (all\n-  #113 = String             #393          //  slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n-  #114 = Methodref          #109.#362     // com/fasterxml/jackson/core/exc/StreamConstraintsException.\"<init>\":(Ljava/lang/String;)V\n+   #96 = Methodref          #8.#374       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.nukeSymbols:(Z)V\n+   #97 = Methodref          #8.#375       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer._calcTertiaryShift:(I)I\n+   #98 = Class              #376          // java/lang/String\n+   #99 = Methodref          #8.#377       // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer.addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+  #100 = Class              #378          // java/lang/StringBuilder\n+  #101 = Methodref          #100.#278     // java/lang/StringBuilder.\"<init>\":()V\n+  #102 = String             #379          // Internal error: Failed rehash(), old count=\n+  #103 = Methodref          #100.#380     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #104 = Methodref          #100.#381     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #105 = String             #382          // , copyCount=\n+  #106 = Methodref          #100.#383     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #107 = Methodref          #361.#384     // java/util/Arrays.fill:([II)V\n+  #108 = Methodref          #361.#385     // java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n+  #109 = Class              #386          // com/fasterxml/jackson/core/exc/StreamConstraintsException\n+  #110 = String             #387          // Spill-over slots in symbol table with\n+  #111 = String             #388          //  entries, hash area of\n+  #112 = String             #389          //  slots is now full (all\n+  #113 = String             #390          //  slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n+  #114 = Methodref          #109.#359     // com/fasterxml/jackson/core/exc/StreamConstraintsException.\"<init>\":(Ljava/lang/String;)V\n   #115 = Utf8               TableInfo\n   #116 = Utf8               InnerClasses\n   #117 = Utf8               DEFAULT_T_SIZE\n   #118 = Utf8               I\n   #119 = Utf8               ConstantValue\n   #120 = Integer            64\n   #121 = Utf8               MAX_T_SIZE\n@@ -165,299 +165,296 @@\n   #156 = Utf8               LineNumberTable\n   #157 = Utf8               LocalVariableTable\n   #158 = Utf8               curr\n   #159 = Utf8               this\n   #160 = Utf8               sz\n   #161 = Utf8               seed\n   #162 = Utf8               StackMapTable\n-  #163 = Class              #288          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #164 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n-  #165 = Utf8               parent\n-  #166 = Utf8               state\n-  #167 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-  #168 = Utf8               intern\n-  #169 = Utf8               failOnDoS\n-  #170 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-  #171 = Utf8               end\n-  #172 = Utf8               createRoot\n-  #173 = Utf8               ()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #174 = Utf8               now\n-  #175 = Utf8               J\n-  #176 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #177 = Utf8               makeChild\n-  #178 = Utf8               flags\n-  #179 = Utf8               makeChildOrPlaceholder\n-  #180 = Utf8               release\n-  #181 = Utf8               ()V\n-  #182 = Utf8               mergeChild\n-  #183 = Utf8               childState\n-  #184 = Utf8               childCount\n-  #185 = Utf8               currState\n-  #186 = Class              #313          // com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n-  #187 = Utf8               size\n-  #188 = Utf8               ()I\n-  #189 = Utf8               bucketCount\n-  #190 = Utf8               maybeDirty\n-  #191 = Utf8               ()Z\n-  #192 = Utf8               hashSeed\n-  #193 = Utf8               isCanonicalizing\n-  #194 = Utf8               primaryCount\n-  #195 = Utf8               offset\n-  #196 = Utf8               count\n-  #197 = Utf8               secondaryCount\n-  #198 = Utf8               tertiaryCount\n-  #199 = Utf8               spilloverCount\n-  #200 = Utf8               totalCount\n-  #201 = Utf8               toString\n-  #202 = Utf8               ()Ljava/lang/String;\n-  #203 = Utf8               pri\n-  #204 = Utf8               sec\n-  #205 = Utf8               tert\n-  #206 = Utf8               spill\n-  #207 = Utf8               total\n-  #208 = Utf8               findName\n-  #209 = Utf8               (I)Ljava/lang/String;\n-  #210 = Utf8               q1\n-  #211 = Utf8               hashArea\n-  #212 = Utf8               len\n-  #213 = Utf8               offset2\n-  #214 = Class              #137          // \"[I\"\n-  #215 = Utf8               (II)Ljava/lang/String;\n-  #216 = Utf8               q2\n-  #217 = Utf8               (III)Ljava/lang/String;\n-  #218 = Utf8               q3\n-  #219 = Utf8               ([II)Ljava/lang/String;\n-  #220 = Utf8               q\n-  #221 = Utf8               qlen\n-  #222 = Utf8               hash\n-  #223 = Utf8               len2\n-  #224 = Utf8               _calcOffset\n-  #225 = Utf8               (I)I\n-  #226 = Utf8               ix\n-  #227 = Utf8               _findSecondary\n-  #228 = Utf8               origOffset\n-  #229 = Utf8               bucketSize\n-  #230 = Utf8               (IIII)Ljava/lang/String;\n-  #231 = Utf8               (II[II)Ljava/lang/String;\n-  #232 = Utf8               _verifyLongName\n-  #233 = Utf8               ([III)Z\n-  #234 = Utf8               spillOffset\n-  #235 = Utf8               _verifyLongName2\n-  #236 = Utf8               addName\n-  #237 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #238 = Utf8               name\n-  #239 = Utf8               Ljava/lang/String;\n-  #240 = Utf8               Exceptions\n-  #241 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;\n-  #242 = Utf8               (Ljava/lang/String;III)Ljava/lang/String;\n-  #243 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n-  #244 = Utf8               longStart\n-  #245 = Utf8               _verifySharing\n-  #246 = Utf8               _findOffsetForAdd\n-  #247 = Utf8               _resizeAndFindOffsetForAdd\n-  #248 = Utf8               _checkNeedForRehash\n-  #249 = Utf8               spillCount\n-  #250 = Utf8               _appendLongName\n-  #251 = Utf8               ([II)I\n-  #252 = Utf8               toAdd\n-  #253 = Utf8               minAdd\n-  #254 = Utf8               newSize\n-  #255 = Utf8               quads\n-  #256 = Utf8               start\n-  #257 = Utf8               calcHash\n-  #258 = Utf8               (II)I\n-  #259 = Utf8               (III)I\n-  #260 = Utf8               next\n-  #261 = Utf8               i\n-  #262 = Utf8               rehash\n-  #263 = Utf8               qoff\n-  #264 = Utf8               oldHashArea\n-  #265 = Utf8               oldNames\n-  #266 = Utf8               oldSize\n-  #267 = Utf8               oldCount\n-  #268 = Utf8               oldEnd\n-  #269 = Utf8               copyCount\n-  #270 = Class              #379          // java/lang/String\n-  #271 = Utf8               nukeSymbols\n-  #272 = Utf8               (Z)V\n-  #273 = Utf8               fill\n-  #274 = Utf8               _spilloverStart\n-  #275 = Utf8               _reportTooManyCollisions\n-  #276 = Utf8               _calcTertiaryShift\n-  #277 = Utf8               primarySlots\n-  #278 = Utf8               tertSlots\n-  #279 = Utf8               SourceFile\n-  #280 = Utf8               ByteQuadsCanonicalizer.java\n-  #281 = NameAndType        #153:#181     // \"<init>\":()V\n-  #282 = NameAndType        #126:#127     // _parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #283 = NameAndType        #142:#118     // _count:I\n-  #284 = NameAndType        #147:#134     // _hashShared:Z\n-  #285 = NameAndType        #132:#118     // _seed:I\n-  #286 = NameAndType        #133:#134     // _intern:Z\n-  #287 = NameAndType        #135:#134     // _failOnDoS:Z\n-  #288 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  #289 = Utf8               java/util/concurrent/atomic/AtomicReference\n-  #290 = NameAndType        #394:#395     // createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-  #291 = NameAndType        #153:#396     // \"<init>\":(Ljava/lang/Object;)V\n-  #292 = NameAndType        #128:#129     // _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n-  #293 = NameAndType        #196:#118     // count:I\n-  #294 = NameAndType        #187:#118     // size:I\n-  #295 = NameAndType        #138:#118     // _hashSize:I\n-  #296 = NameAndType        #139:#118     // _secondaryStart:I\n-  #297 = NameAndType        #140:#118     // _tertiaryStart:I\n-  #298 = NameAndType        #397:#118     // tertiaryShift:I\n-  #299 = NameAndType        #141:#118     // _tertiaryShift:I\n-  #300 = NameAndType        #398:#137     // mainHash:[I\n-  #301 = NameAndType        #136:#137     // _hashArea:[I\n-  #302 = NameAndType        #399:#144     // names:[Ljava/lang/String;\n-  #303 = NameAndType        #143:#144     // _names:[Ljava/lang/String;\n-  #304 = NameAndType        #400:#118     // spilloverEnd:I\n-  #305 = NameAndType        #145:#118     // _spilloverEnd:I\n-  #306 = NameAndType        #401:#118     // longNameOffset:I\n-  #307 = NameAndType        #146:#118     // _longNameOffset:I\n-  #308 = Class              #402          // java/lang/System\n-  #309 = NameAndType        #403:#404     // currentTimeMillis:()J\n-  #310 = NameAndType        #172:#176     // createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n-  #311 = NameAndType        #153:#154     // \"<init>\":(II)V\n-  #312 = NameAndType        #405:#406     // get:()Ljava/lang/Object;\n-  #313 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n-  #314 = Class              #408          // com/fasterxml/jackson/core/JsonFactory$Feature\n-  #315 = NameAndType        #410:#411     // INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #316 = NameAndType        #412:#413     // enabledIn:(I)Z\n-  #317 = NameAndType        #414:#411     // FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #318 = NameAndType        #153:#164     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n-  #319 = NameAndType        #415:#411     // CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #320 = NameAndType        #153:#170     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-  #321 = NameAndType        #190:#191     // maybeDirty:()Z\n-  #322 = NameAndType        #153:#416     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-  #323 = NameAndType        #182:#170     // mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n-  #324 = NameAndType        #417:#418     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #325 = NameAndType        #274:#188     // _spilloverStart:()I\n-  #326 = NameAndType        #194:#188     // primaryCount:()I\n-  #327 = NameAndType        #197:#188     // secondaryCount:()I\n-  #328 = NameAndType        #198:#188     // tertiaryCount:()I\n-  #329 = NameAndType        #199:#188     // spilloverCount:()I\n-  #330 = NameAndType        #200:#188     // totalCount:()I\n-  #331 = Utf8               [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n-  #332 = Utf8               java/lang/Object\n-  #333 = NameAndType        #419:#420     // getClass:()Ljava/lang/Class;\n-  #334 = Class              #421          // java/lang/Class\n-  #335 = NameAndType        #422:#202     // getName:()Ljava/lang/String;\n-  #336 = Class              #423          // java/lang/Integer\n-  #337 = NameAndType        #424:#425     // valueOf:(I)Ljava/lang/Integer;\n-  #338 = NameAndType        #426:#427     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #339 = NameAndType        #257:#225     // calcHash:(I)I\n-  #340 = NameAndType        #224:#225     // _calcOffset:(I)I\n-  #341 = NameAndType        #227:#215     // _findSecondary:(II)Ljava/lang/String;\n-  #342 = NameAndType        #257:#258     // calcHash:(II)I\n-  #343 = NameAndType        #227:#217     // _findSecondary:(III)Ljava/lang/String;\n-  #344 = NameAndType        #257:#259     // calcHash:(III)I\n-  #345 = NameAndType        #227:#230     // _findSecondary:(IIII)Ljava/lang/String;\n-  #346 = NameAndType        #208:#217     // findName:(III)Ljava/lang/String;\n-  #347 = NameAndType        #208:#215     // findName:(II)Ljava/lang/String;\n-  #348 = NameAndType        #208:#209     // findName:(I)Ljava/lang/String;\n-  #349 = Utf8\n-  #350 = NameAndType        #257:#251     // calcHash:([II)I\n-  #351 = NameAndType        #232:#233     // _verifyLongName:([III)Z\n-  #352 = NameAndType        #227:#231     // _findSecondary:(II[II)Ljava/lang/String;\n-  #353 = NameAndType        #235:#233     // _verifyLongName2:([III)Z\n-  #354 = NameAndType        #245:#181     // _verifySharing:()V\n-  #355 = Class              #428          // com/fasterxml/jackson/core/util/InternCache\n-  #356 = NameAndType        #429:#430     // instance:Lcom/fasterxml/jackson/core/util/InternCache;\n-  #357 = NameAndType        #168:#431     // intern:(Ljava/lang/String;)Ljava/lang/String;\n-  #358 = NameAndType        #246:#225     // _findOffsetForAdd:(I)I\n-  #359 = NameAndType        #250:#251     // _appendLongName:([II)I\n-  #360 = Utf8               java/lang/IllegalStateException\n-  #361 = Utf8               Internal error: Cannot add names to Root symbol table\n-  #362 = NameAndType        #153:#432     // \"<init>\":(Ljava/lang/String;)V\n-  #363 = Utf8               Internal error: Cannot add names to Placeholder symbol table\n-  #364 = Class              #433          // java/util/Arrays\n-  #365 = NameAndType        #434:#435     // copyOf:([II)[I\n-  #366 = NameAndType        #434:#436     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #367 = NameAndType        #248:#191     // _checkNeedForRehash:()Z\n-  #368 = NameAndType        #247:#225     // _resizeAndFindOffsetForAdd:(I)I\n-  #369 = NameAndType        #275:#181     // _reportTooManyCollisions:()V\n-  #370 = NameAndType        #262:#181     // rehash:()V\n-  #371 = Class              #437          // java/lang/Math\n-  #372 = NameAndType        #438:#258     // min:(II)I\n-  #373 = NameAndType        #439:#258     // max:(II)I\n-  #374 = NameAndType        #440:#441     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #375 = Utf8               java/lang/IllegalArgumentException\n-  #376 = Utf8               qlen is too short, needs to be at least 4\n-  #377 = NameAndType        #271:#272     // nukeSymbols:(Z)V\n-  #378 = NameAndType        #276:#225     // _calcTertiaryShift:(I)I\n-  #379 = Utf8               java/lang/String\n-  #380 = NameAndType        #236:#243     // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n-  #381 = Utf8               java/lang/StringBuilder\n-  #382 = Utf8               Internal error: Failed rehash(), old count=\n-  #383 = NameAndType        #442:#443     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #384 = NameAndType        #442:#444     // append:(I)Ljava/lang/StringBuilder;\n-  #385 = Utf8               , copyCount=\n-  #386 = NameAndType        #201:#202     // toString:()Ljava/lang/String;\n-  #387 = NameAndType        #273:#445     // fill:([II)V\n-  #388 = NameAndType        #273:#446     // fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n-  #389 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n-  #390 = Utf8               Spill-over slots in symbol table with\n-  #391 = Utf8                entries, hash area of\n-  #392 = Utf8                slots is now full (all\n-  #393 = Utf8                slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n-  #394 = Utf8               createInitial\n-  #395 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n-  #396 = Utf8               (Ljava/lang/Object;)V\n-  #397 = Utf8               tertiaryShift\n-  #398 = Utf8               mainHash\n-  #399 = Utf8               names\n-  #400 = Utf8               spilloverEnd\n-  #401 = Utf8               longNameOffset\n-  #402 = Utf8               java/lang/System\n-  #403 = Utf8               currentTimeMillis\n-  #404 = Utf8               ()J\n-  #405 = Utf8               get\n-  #406 = Utf8               ()Ljava/lang/Object;\n-  #407 = Class              #447          // com/fasterxml/jackson/core/JsonFactory\n-  #408 = Utf8               com/fasterxml/jackson/core/JsonFactory$Feature\n-  #409 = Utf8               Feature\n-  #410 = Utf8               INTERN_FIELD_NAMES\n-  #411 = Utf8               Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #412 = Utf8               enabledIn\n-  #413 = Utf8               (I)Z\n-  #414 = Utf8               FAIL_ON_SYMBOL_HASH_OVERFLOW\n-  #415 = Utf8               CANONICALIZE_FIELD_NAMES\n-  #416 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n-  #417 = Utf8               compareAndSet\n-  #418 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #419 = Utf8               getClass\n-  #420 = Utf8               ()Ljava/lang/Class;\n-  #421 = Utf8               java/lang/Class\n-  #422 = Utf8               getName\n-  #423 = Utf8               java/lang/Integer\n-  #424 = Utf8               valueOf\n-  #425 = Utf8               (I)Ljava/lang/Integer;\n-  #426 = Utf8               format\n-  #427 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #428 = Utf8               com/fasterxml/jackson/core/util/InternCache\n-  #429 = Utf8               instance\n-  #430 = Utf8               Lcom/fasterxml/jackson/core/util/InternCache;\n-  #431 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #432 = Utf8               (Ljava/lang/String;)V\n-  #433 = Utf8               java/util/Arrays\n-  #434 = Utf8               copyOf\n-  #435 = Utf8               ([II)[I\n-  #436 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #437 = Utf8               java/lang/Math\n-  #438 = Utf8               min\n-  #439 = Utf8               max\n-  #440 = Utf8               arraycopy\n-  #441 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #442 = Utf8               append\n-  #443 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #444 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #445 = Utf8               ([II)V\n-  #446 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)V\n-  #447 = Utf8               com/fasterxml/jackson/core/JsonFactory\n+  #163 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n+  #164 = Utf8               parent\n+  #165 = Utf8               state\n+  #166 = Utf8               Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+  #167 = Utf8               intern\n+  #168 = Utf8               failOnDoS\n+  #169 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+  #170 = Utf8               end\n+  #171 = Utf8               createRoot\n+  #172 = Utf8               ()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #173 = Utf8               now\n+  #174 = Utf8               J\n+  #175 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #176 = Utf8               makeChild\n+  #177 = Utf8               flags\n+  #178 = Utf8               makeChildOrPlaceholder\n+  #179 = Utf8               release\n+  #180 = Utf8               ()V\n+  #181 = Utf8               mergeChild\n+  #182 = Utf8               childState\n+  #183 = Utf8               childCount\n+  #184 = Utf8               currState\n+  #185 = Utf8               size\n+  #186 = Utf8               ()I\n+  #187 = Utf8               bucketCount\n+  #188 = Utf8               maybeDirty\n+  #189 = Utf8               ()Z\n+  #190 = Utf8               hashSeed\n+  #191 = Utf8               isCanonicalizing\n+  #192 = Utf8               primaryCount\n+  #193 = Utf8               offset\n+  #194 = Utf8               count\n+  #195 = Utf8               secondaryCount\n+  #196 = Utf8               tertiaryCount\n+  #197 = Utf8               spilloverCount\n+  #198 = Utf8               totalCount\n+  #199 = Utf8               toString\n+  #200 = Utf8               ()Ljava/lang/String;\n+  #201 = Utf8               pri\n+  #202 = Utf8               sec\n+  #203 = Utf8               tert\n+  #204 = Utf8               spill\n+  #205 = Utf8               total\n+  #206 = Utf8               findName\n+  #207 = Utf8               (I)Ljava/lang/String;\n+  #208 = Utf8               q1\n+  #209 = Utf8               hashArea\n+  #210 = Utf8               len\n+  #211 = Utf8               offset2\n+  #212 = Class              #137          // \"[I\"\n+  #213 = Utf8               (II)Ljava/lang/String;\n+  #214 = Utf8               q2\n+  #215 = Utf8               (III)Ljava/lang/String;\n+  #216 = Utf8               q3\n+  #217 = Utf8               ([II)Ljava/lang/String;\n+  #218 = Utf8               q\n+  #219 = Utf8               qlen\n+  #220 = Utf8               hash\n+  #221 = Utf8               len2\n+  #222 = Utf8               _calcOffset\n+  #223 = Utf8               (I)I\n+  #224 = Utf8               ix\n+  #225 = Utf8               _findSecondary\n+  #226 = Utf8               origOffset\n+  #227 = Utf8               bucketSize\n+  #228 = Utf8               (IIII)Ljava/lang/String;\n+  #229 = Utf8               (II[II)Ljava/lang/String;\n+  #230 = Utf8               _verifyLongName\n+  #231 = Utf8               ([III)Z\n+  #232 = Utf8               spillOffset\n+  #233 = Utf8               _verifyLongName2\n+  #234 = Utf8               addName\n+  #235 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #236 = Utf8               name\n+  #237 = Utf8               Ljava/lang/String;\n+  #238 = Utf8               Exceptions\n+  #239 = Utf8               (Ljava/lang/String;II)Ljava/lang/String;\n+  #240 = Utf8               (Ljava/lang/String;III)Ljava/lang/String;\n+  #241 = Utf8               (Ljava/lang/String;[II)Ljava/lang/String;\n+  #242 = Utf8               longStart\n+  #243 = Utf8               _verifySharing\n+  #244 = Utf8               _findOffsetForAdd\n+  #245 = Utf8               _resizeAndFindOffsetForAdd\n+  #246 = Utf8               _checkNeedForRehash\n+  #247 = Utf8               spillCount\n+  #248 = Utf8               _appendLongName\n+  #249 = Utf8               ([II)I\n+  #250 = Utf8               toAdd\n+  #251 = Utf8               minAdd\n+  #252 = Utf8               newSize\n+  #253 = Utf8               quads\n+  #254 = Utf8               start\n+  #255 = Utf8               calcHash\n+  #256 = Utf8               (II)I\n+  #257 = Utf8               (III)I\n+  #258 = Utf8               next\n+  #259 = Utf8               i\n+  #260 = Utf8               rehash\n+  #261 = Utf8               qoff\n+  #262 = Utf8               oldHashArea\n+  #263 = Utf8               oldNames\n+  #264 = Utf8               oldSize\n+  #265 = Utf8               oldCount\n+  #266 = Utf8               oldEnd\n+  #267 = Utf8               copyCount\n+  #268 = Utf8               nukeSymbols\n+  #269 = Utf8               (Z)V\n+  #270 = Utf8               fill\n+  #271 = Utf8               _spilloverStart\n+  #272 = Utf8               _reportTooManyCollisions\n+  #273 = Utf8               _calcTertiaryShift\n+  #274 = Utf8               primarySlots\n+  #275 = Utf8               tertSlots\n+  #276 = Utf8               SourceFile\n+  #277 = Utf8               ByteQuadsCanonicalizer.java\n+  #278 = NameAndType        #153:#180     // \"<init>\":()V\n+  #279 = NameAndType        #126:#127     // _parent:Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #280 = NameAndType        #142:#118     // _count:I\n+  #281 = NameAndType        #147:#134     // _hashShared:Z\n+  #282 = NameAndType        #132:#118     // _seed:I\n+  #283 = NameAndType        #133:#134     // _intern:Z\n+  #284 = NameAndType        #135:#134     // _failOnDoS:Z\n+  #285 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n+  #286 = Utf8               java/util/concurrent/atomic/AtomicReference\n+  #287 = NameAndType        #391:#392     // createInitial:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+  #288 = NameAndType        #153:#393     // \"<init>\":(Ljava/lang/Object;)V\n+  #289 = NameAndType        #128:#129     // _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n+  #290 = NameAndType        #194:#118     // count:I\n+  #291 = NameAndType        #185:#118     // size:I\n+  #292 = NameAndType        #138:#118     // _hashSize:I\n+  #293 = NameAndType        #139:#118     // _secondaryStart:I\n+  #294 = NameAndType        #140:#118     // _tertiaryStart:I\n+  #295 = NameAndType        #394:#118     // tertiaryShift:I\n+  #296 = NameAndType        #141:#118     // _tertiaryShift:I\n+  #297 = NameAndType        #395:#137     // mainHash:[I\n+  #298 = NameAndType        #136:#137     // _hashArea:[I\n+  #299 = NameAndType        #396:#144     // names:[Ljava/lang/String;\n+  #300 = NameAndType        #143:#144     // _names:[Ljava/lang/String;\n+  #301 = NameAndType        #397:#118     // spilloverEnd:I\n+  #302 = NameAndType        #145:#118     // _spilloverEnd:I\n+  #303 = NameAndType        #398:#118     // longNameOffset:I\n+  #304 = NameAndType        #146:#118     // _longNameOffset:I\n+  #305 = Class              #399          // java/lang/System\n+  #306 = NameAndType        #400:#401     // currentTimeMillis:()J\n+  #307 = NameAndType        #171:#175     // createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;\n+  #308 = NameAndType        #153:#154     // \"<init>\":(II)V\n+  #309 = NameAndType        #402:#403     // get:()Ljava/lang/Object;\n+  #310 = Utf8               com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo\n+  #311 = Class              #405          // com/fasterxml/jackson/core/JsonFactory$Feature\n+  #312 = NameAndType        #407:#408     // INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #313 = NameAndType        #409:#410     // enabledIn:(I)Z\n+  #314 = NameAndType        #411:#408     // FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #315 = NameAndType        #153:#163     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;ILcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;ZZ)V\n+  #316 = NameAndType        #412:#408     // CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #317 = NameAndType        #153:#169     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+  #318 = NameAndType        #188:#189     // maybeDirty:()Z\n+  #319 = NameAndType        #153:#413     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+  #320 = NameAndType        #181:#169     // mergeChild:(Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;)V\n+  #321 = NameAndType        #414:#415     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #322 = NameAndType        #271:#186     // _spilloverStart:()I\n+  #323 = NameAndType        #192:#186     // primaryCount:()I\n+  #324 = NameAndType        #195:#186     // secondaryCount:()I\n+  #325 = NameAndType        #196:#186     // tertiaryCount:()I\n+  #326 = NameAndType        #197:#186     // spilloverCount:()I\n+  #327 = NameAndType        #198:#186     // totalCount:()I\n+  #328 = Utf8               [%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]\n+  #329 = Utf8               java/lang/Object\n+  #330 = NameAndType        #416:#417     // getClass:()Ljava/lang/Class;\n+  #331 = Class              #418          // java/lang/Class\n+  #332 = NameAndType        #419:#200     // getName:()Ljava/lang/String;\n+  #333 = Class              #420          // java/lang/Integer\n+  #334 = NameAndType        #421:#422     // valueOf:(I)Ljava/lang/Integer;\n+  #335 = NameAndType        #423:#424     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #336 = NameAndType        #255:#223     // calcHash:(I)I\n+  #337 = NameAndType        #222:#223     // _calcOffset:(I)I\n+  #338 = NameAndType        #225:#213     // _findSecondary:(II)Ljava/lang/String;\n+  #339 = NameAndType        #255:#256     // calcHash:(II)I\n+  #340 = NameAndType        #225:#215     // _findSecondary:(III)Ljava/lang/String;\n+  #341 = NameAndType        #255:#257     // calcHash:(III)I\n+  #342 = NameAndType        #225:#228     // _findSecondary:(IIII)Ljava/lang/String;\n+  #343 = NameAndType        #206:#215     // findName:(III)Ljava/lang/String;\n+  #344 = NameAndType        #206:#213     // findName:(II)Ljava/lang/String;\n+  #345 = NameAndType        #206:#207     // findName:(I)Ljava/lang/String;\n+  #346 = Utf8\n+  #347 = NameAndType        #255:#249     // calcHash:([II)I\n+  #348 = NameAndType        #230:#231     // _verifyLongName:([III)Z\n+  #349 = NameAndType        #225:#229     // _findSecondary:(II[II)Ljava/lang/String;\n+  #350 = NameAndType        #233:#231     // _verifyLongName2:([III)Z\n+  #351 = NameAndType        #243:#180     // _verifySharing:()V\n+  #352 = Class              #425          // com/fasterxml/jackson/core/util/InternCache\n+  #353 = NameAndType        #426:#427     // instance:Lcom/fasterxml/jackson/core/util/InternCache;\n+  #354 = NameAndType        #167:#428     // intern:(Ljava/lang/String;)Ljava/lang/String;\n+  #355 = NameAndType        #244:#223     // _findOffsetForAdd:(I)I\n+  #356 = NameAndType        #248:#249     // _appendLongName:([II)I\n+  #357 = Utf8               java/lang/IllegalStateException\n+  #358 = Utf8               Internal error: Cannot add names to Root symbol table\n+  #359 = NameAndType        #153:#429     // \"<init>\":(Ljava/lang/String;)V\n+  #360 = Utf8               Internal error: Cannot add names to Placeholder symbol table\n+  #361 = Class              #430          // java/util/Arrays\n+  #362 = NameAndType        #431:#432     // copyOf:([II)[I\n+  #363 = NameAndType        #431:#433     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #364 = NameAndType        #246:#189     // _checkNeedForRehash:()Z\n+  #365 = NameAndType        #245:#223     // _resizeAndFindOffsetForAdd:(I)I\n+  #366 = NameAndType        #272:#180     // _reportTooManyCollisions:()V\n+  #367 = NameAndType        #260:#180     // rehash:()V\n+  #368 = Class              #434          // java/lang/Math\n+  #369 = NameAndType        #435:#256     // min:(II)I\n+  #370 = NameAndType        #436:#256     // max:(II)I\n+  #371 = NameAndType        #437:#438     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #372 = Utf8               java/lang/IllegalArgumentException\n+  #373 = Utf8               qlen is too short, needs to be at least 4\n+  #374 = NameAndType        #268:#269     // nukeSymbols:(Z)V\n+  #375 = NameAndType        #273:#223     // _calcTertiaryShift:(I)I\n+  #376 = Utf8               java/lang/String\n+  #377 = NameAndType        #234:#241     // addName:(Ljava/lang/String;[II)Ljava/lang/String;\n+  #378 = Utf8               java/lang/StringBuilder\n+  #379 = Utf8               Internal error: Failed rehash(), old count=\n+  #380 = NameAndType        #439:#440     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #381 = NameAndType        #439:#441     // append:(I)Ljava/lang/StringBuilder;\n+  #382 = Utf8               , copyCount=\n+  #383 = NameAndType        #199:#200     // toString:()Ljava/lang/String;\n+  #384 = NameAndType        #270:#442     // fill:([II)V\n+  #385 = NameAndType        #270:#443     // fill:([Ljava/lang/Object;Ljava/lang/Object;)V\n+  #386 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n+  #387 = Utf8               Spill-over slots in symbol table with\n+  #388 = Utf8                entries, hash area of\n+  #389 = Utf8                slots is now full (all\n+  #390 = Utf8                slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`\n+  #391 = Utf8               createInitial\n+  #392 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo;\n+  #393 = Utf8               (Ljava/lang/Object;)V\n+  #394 = Utf8               tertiaryShift\n+  #395 = Utf8               mainHash\n+  #396 = Utf8               names\n+  #397 = Utf8               spilloverEnd\n+  #398 = Utf8               longNameOffset\n+  #399 = Utf8               java/lang/System\n+  #400 = Utf8               currentTimeMillis\n+  #401 = Utf8               ()J\n+  #402 = Utf8               get\n+  #403 = Utf8               ()Ljava/lang/Object;\n+  #404 = Class              #444          // com/fasterxml/jackson/core/JsonFactory\n+  #405 = Utf8               com/fasterxml/jackson/core/JsonFactory$Feature\n+  #406 = Utf8               Feature\n+  #407 = Utf8               INTERN_FIELD_NAMES\n+  #408 = Utf8               Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #409 = Utf8               enabledIn\n+  #410 = Utf8               (I)Z\n+  #411 = Utf8               FAIL_ON_SYMBOL_HASH_OVERFLOW\n+  #412 = Utf8               CANONICALIZE_FIELD_NAMES\n+  #413 = Utf8               (Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;)V\n+  #414 = Utf8               compareAndSet\n+  #415 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #416 = Utf8               getClass\n+  #417 = Utf8               ()Ljava/lang/Class;\n+  #418 = Utf8               java/lang/Class\n+  #419 = Utf8               getName\n+  #420 = Utf8               java/lang/Integer\n+  #421 = Utf8               valueOf\n+  #422 = Utf8               (I)Ljava/lang/Integer;\n+  #423 = Utf8               format\n+  #424 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #425 = Utf8               com/fasterxml/jackson/core/util/InternCache\n+  #426 = Utf8               instance\n+  #427 = Utf8               Lcom/fasterxml/jackson/core/util/InternCache;\n+  #428 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #429 = Utf8               (Ljava/lang/String;)V\n+  #430 = Utf8               java/util/Arrays\n+  #431 = Utf8               copyOf\n+  #432 = Utf8               ([II)[I\n+  #433 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #434 = Utf8               java/lang/Math\n+  #435 = Utf8               min\n+  #436 = Utf8               max\n+  #437 = Utf8               arraycopy\n+  #438 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #439 = Utf8               append\n+  #440 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #441 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #442 = Utf8               ([II)V\n+  #443 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)V\n+  #444 = Utf8               com/fasterxml/jackson/core/JsonFactory\n {\n   private static final int DEFAULT_T_SIZE = 64;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 64\n \n   private static final int MAX_T_SIZE = 65536;\n@@ -4586,8 +4583,8 @@\n           locals = [ int ]\n         frame_type = 8 /* same */\n         frame_type = 9 /* same */\n }\n SourceFile: \"ByteQuadsCanonicalizer.java\"\n InnerClasses:\n   private static final #115= #32 of #8;   // TableInfo=class com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer$TableInfo of class com/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer\n-  public static final #409= #314 of #407; // Feature=class com/fasterxml/jackson/core/JsonFactory$Feature of class com/fasterxml/jackson/core/JsonFactory\n+  public static final #406= #311 of #404; // Feature=class com/fasterxml/jackson/core/JsonFactory$Feature of class com/fasterxml/jackson/core/JsonFactory\n"}]}
