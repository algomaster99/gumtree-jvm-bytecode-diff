{"diffoscope-json-version": 1, "source1": "first/QCodec.class", "source2": "second/QCodec.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,128 +31,128 @@\n         this(Charset.forName(charsetName));\n     }\n     \n     protected String getEncoding() {\n         return \"Q\";\n     }\n     \n-    protected byte[] doEncoding(final byte[] bytes) {\n-        if (bytes == null) {\n+    protected byte[] doEncoding(final byte[] array) {\n+        if (array == null) {\n             return null;\n         }\n-        final byte[] data = QuotedPrintableCodec.encodeQuotedPrintable(QCodec.PRINTABLE_CHARS, bytes);\n+        final byte[] encodeQuotedPrintable = QuotedPrintableCodec.encodeQuotedPrintable(QCodec.PRINTABLE_CHARS, array);\n         if (this.encodeBlanks) {\n-            for (int i = 0; i < data.length; ++i) {\n-                if (data[i] == 32) {\n-                    data[i] = 95;\n+            for (int i = 0; i < encodeQuotedPrintable.length; ++i) {\n+                if (encodeQuotedPrintable[i] == 32) {\n+                    encodeQuotedPrintable[i] = 95;\n                 }\n             }\n         }\n-        return data;\n+        return encodeQuotedPrintable;\n     }\n     \n-    protected byte[] doDecoding(final byte[] bytes) throws DecoderException {\n-        if (bytes == null) {\n+    protected byte[] doDecoding(final byte[] array) throws DecoderException {\n+        if (array == null) {\n             return null;\n         }\n-        boolean hasUnderscores = false;\n-        for (final byte b : bytes) {\n-            if (b == 95) {\n-                hasUnderscores = true;\n+        boolean b = false;\n+        for (int length = array.length, i = 0; i < length; ++i) {\n+            if (array[i] == 95) {\n+                b = true;\n                 break;\n             }\n         }\n-        if (hasUnderscores) {\n-            final byte[] tmp = new byte[bytes.length];\n-            for (int i = 0; i < bytes.length; ++i) {\n-                final byte b2 = bytes[i];\n+        if (b) {\n+            final byte[] array2 = new byte[array.length];\n+            for (int j = 0; j < array.length; ++j) {\n+                final byte b2 = array[j];\n                 if (b2 != 95) {\n-                    tmp[i] = b2;\n+                    array2[j] = b2;\n                 }\n                 else {\n-                    tmp[i] = 32;\n+                    array2[j] = 32;\n                 }\n             }\n-            return QuotedPrintableCodec.decodeQuotedPrintable(tmp);\n+            return QuotedPrintableCodec.decodeQuotedPrintable(array2);\n         }\n-        return QuotedPrintableCodec.decodeQuotedPrintable(bytes);\n+        return QuotedPrintableCodec.decodeQuotedPrintable(array);\n     }\n     \n-    public String encode(final String str, final Charset charset) throws EncoderException {\n-        if (str == null) {\n+    public String encode(final String s, final Charset charset) throws EncoderException {\n+        if (s == null) {\n             return null;\n         }\n-        return this.encodeText(str, charset);\n+        return this.encodeText(s, charset);\n     }\n     \n-    public String encode(final String str, final String charset) throws EncoderException {\n-        if (str == null) {\n+    public String encode(final String s, final String s2) throws EncoderException {\n+        if (s == null) {\n             return null;\n         }\n         try {\n-            return this.encodeText(str, charset);\n+            return this.encodeText(s, s2);\n         }\n-        catch (final UnsupportedEncodingException e) {\n-            throw new EncoderException(e.getMessage(), (Throwable)e);\n+        catch (final UnsupportedEncodingException ex) {\n+            throw new EncoderException(ex.getMessage(), (Throwable)ex);\n         }\n     }\n     \n-    public String encode(final String str) throws EncoderException {\n-        if (str == null) {\n+    public String encode(final String s) throws EncoderException {\n+        if (s == null) {\n             return null;\n         }\n-        return this.encode(str, this.getCharset());\n+        return this.encode(s, this.getCharset());\n     }\n     \n-    public String decode(final String str) throws DecoderException {\n-        if (str == null) {\n+    public String decode(final String s) throws DecoderException {\n+        if (s == null) {\n             return null;\n         }\n         try {\n-            return this.decodeText(str);\n+            return this.decodeText(s);\n         }\n-        catch (final UnsupportedEncodingException e) {\n-            throw new DecoderException(e.getMessage(), (Throwable)e);\n+        catch (final UnsupportedEncodingException ex) {\n+            throw new DecoderException(ex.getMessage(), (Throwable)ex);\n         }\n     }\n     \n-    public Object encode(final Object obj) throws EncoderException {\n-        if (obj == null) {\n+    public Object encode(final Object o) throws EncoderException {\n+        if (o == null) {\n             return null;\n         }\n-        if (obj instanceof String) {\n-            return this.encode((String)obj);\n+        if (o instanceof String) {\n+            return this.encode((String)o);\n         }\n-        throw new EncoderException(\"Objects of type \" + obj.getClass().getName() + \" cannot be encoded using Q codec\");\n+        throw new EncoderException(\"Objects of type \" + o.getClass().getName() + \" cannot be encoded using Q codec\");\n     }\n     \n-    public Object decode(final Object obj) throws DecoderException {\n-        if (obj == null) {\n+    public Object decode(final Object o) throws DecoderException {\n+        if (o == null) {\n             return null;\n         }\n-        if (obj instanceof String) {\n-            return this.decode((String)obj);\n+        if (o instanceof String) {\n+            return this.decode((String)o);\n         }\n-        throw new DecoderException(\"Objects of type \" + obj.getClass().getName() + \" cannot be decoded using Q codec\");\n+        throw new DecoderException(\"Objects of type \" + o.getClass().getName() + \" cannot be decoded using Q codec\");\n     }\n     \n     public Charset getCharset() {\n         return this.charset;\n     }\n     \n     public String getDefaultCharset() {\n         return this.charset.name();\n     }\n     \n     public boolean isEncodeBlanks() {\n         return this.encodeBlanks;\n     }\n     \n-    public void setEncodeBlanks(final boolean b) {\n-        this.encodeBlanks = b;\n+    public void setEncodeBlanks(final boolean encodeBlanks) {\n+        this.encodeBlanks = encodeBlanks;\n     }\n     \n     static {\n         (PRINTABLE_CHARS = new BitSet(256)).set(32);\n         QCodec.PRINTABLE_CHARS.set(33);\n         QCodec.PRINTABLE_CHARS.set(34);\n         QCodec.PRINTABLE_CHARS.set(35);\n@@ -172,24 +172,24 @@\n             QCodec.PRINTABLE_CHARS.set(i);\n         }\n         QCodec.PRINTABLE_CHARS.set(58);\n         QCodec.PRINTABLE_CHARS.set(59);\n         QCodec.PRINTABLE_CHARS.set(60);\n         QCodec.PRINTABLE_CHARS.set(62);\n         QCodec.PRINTABLE_CHARS.set(64);\n-        for (int i = 65; i <= 90; ++i) {\n-            QCodec.PRINTABLE_CHARS.set(i);\n+        for (int j = 65; j <= 90; ++j) {\n+            QCodec.PRINTABLE_CHARS.set(j);\n         }\n         QCodec.PRINTABLE_CHARS.set(91);\n         QCodec.PRINTABLE_CHARS.set(92);\n         QCodec.PRINTABLE_CHARS.set(93);\n         QCodec.PRINTABLE_CHARS.set(94);\n         QCodec.PRINTABLE_CHARS.set(96);\n-        for (int i = 97; i <= 122; ++i) {\n-            QCodec.PRINTABLE_CHARS.set(i);\n+        for (int k = 97; k <= 122; ++k) {\n+            QCodec.PRINTABLE_CHARS.set(k);\n         }\n         QCodec.PRINTABLE_CHARS.set(123);\n         QCodec.PRINTABLE_CHARS.set(124);\n         QCodec.PRINTABLE_CHARS.set(125);\n         QCodec.PRINTABLE_CHARS.set(126);\n     }\n }\n"}]}
