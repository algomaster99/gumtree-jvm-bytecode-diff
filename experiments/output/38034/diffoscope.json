{"diffoscope-json-version": 1, "source1": "first/MurmurHash3$IncrementalHash32.class", "source2": "second/MurmurHash3$IncrementalHash32.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,23 +31,23 @@\n         }\n         int offset2 = 0;\n         if (this.tailLen > 0) {\n             offset2 = 4 - this.tailLen;\n             int k = -1;\n             switch (this.tailLen) {\n                 case 1: {\n-                    k = MurmurHash3.access$000(this.tail[0], data[offset], data[offset + 1], data[offset + 2]);\n+                    k = MurmurHash3.access$0(this.tail[0], data[offset], data[offset + 1], data[offset + 2]);\n                     break;\n                 }\n                 case 2: {\n-                    k = MurmurHash3.access$000(this.tail[0], this.tail[1], data[offset], data[offset + 1]);\n+                    k = MurmurHash3.access$0(this.tail[0], this.tail[1], data[offset], data[offset + 1]);\n                     break;\n                 }\n                 case 3: {\n-                    k = MurmurHash3.access$000(this.tail[0], this.tail[1], this.tail[2], data[offset]);\n+                    k = MurmurHash3.access$0(this.tail[0], this.tail[1], this.tail[2], data[offset]);\n                     break;\n                 }\n                 default: {\n                     throw new AssertionError(this.tailLen);\n                 }\n             }\n             k *= -862048943;\n@@ -57,15 +57,15 @@\n             this.hash = Integer.rotateLeft(this.hash, 13) * 5 - 430675100;\n         }\n         final int length2 = length - offset2;\n         offset += offset2;\n         final int nblocks = length2 >> 2;\n         for (int i = 0; i < nblocks; ++i) {\n             final int i_4 = (i << 2) + offset;\n-            int j = MurmurHash3.access$000(data[i_4], data[i_4 + 1], data[i_4 + 2], data[i_4 + 3]);\n+            int j = MurmurHash3.access$0(data[i_4], data[i_4 + 1], data[i_4 + 2], data[i_4 + 3]);\n             j *= -862048943;\n             j = Integer.rotateLeft(j, 15);\n             j *= 461845907;\n             this.hash ^= j;\n             this.hash = Integer.rotateLeft(this.hash, 13) * 5 - 430675100;\n         }\n         final int consumed = nblocks << 2;\n"}]}
