{"diffoscope-json-version": 1, "source1": "first/Codec.class", "source2": "second/Codec.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -21,48 +21,48 @@\n     \n     public abstract byte[] encode(final int p0, final int p1) throws Pack200Exception;\n     \n     public abstract byte[] encode(final int p0) throws Pack200Exception;\n     \n     public abstract int decode(final InputStream p0, final long p1) throws IOException, Pack200Exception;\n     \n-    public int[] decodeInts(final int n, final InputStream in) throws IOException, Pack200Exception {\n+    public int[] decodeInts(final int n, final InputStream inputStream) throws IOException, Pack200Exception {\n         this.lastBandLength = 0;\n-        final int[] result = new int[n];\n-        int last = 0;\n+        final int[] array = new int[n];\n+        int n2 = 0;\n         for (int i = 0; i < n; ++i) {\n-            last = (result[i] = this.decode(in, last));\n+            n2 = (array[i] = this.decode(inputStream, n2));\n         }\n-        return result;\n+        return array;\n     }\n     \n-    public int[] decodeInts(final int n, final InputStream in, final int firstValue) throws IOException, Pack200Exception {\n-        final int[] result = new int[n + 1];\n-        result[0] = firstValue;\n-        int last = firstValue;\n+    public int[] decodeInts(final int n, final InputStream inputStream, final int n2) throws IOException, Pack200Exception {\n+        final int[] array = new int[n + 1];\n+        array[0] = n2;\n+        int n3 = n2;\n         for (int i = 1; i < n + 1; ++i) {\n-            last = (result[i] = this.decode(in, last));\n+            n3 = (array[i] = this.decode(inputStream, n3));\n         }\n-        return result;\n+        return array;\n     }\n     \n-    public byte[] encode(final int[] ints) throws Pack200Exception {\n-        int total = 0;\n-        final byte[][] bytes = new byte[ints.length][];\n-        for (int i = 0; i < ints.length; ++i) {\n-            bytes[i] = this.encode(ints[i], (i > 0) ? ints[i - 1] : 0);\n-            total += bytes[i].length;\n+    public byte[] encode(final int[] array) throws Pack200Exception {\n+        int n = 0;\n+        final byte[][] array2 = new byte[array.length][];\n+        for (int i = 0; i < array.length; ++i) {\n+            array2[i] = this.encode(array[i], (i > 0) ? array[i - 1] : 0);\n+            n += array2[i].length;\n         }\n-        final byte[] encoded = new byte[total];\n-        int index = 0;\n-        for (final byte[] element : bytes) {\n-            System.arraycopy(element, 0, encoded, index, element.length);\n-            index += element.length;\n+        final byte[] array3 = new byte[n];\n+        int n2 = 0;\n+        for (final byte[] array5 : array2) {\n+            System.arraycopy(array5, 0, array3, n2, array5.length);\n+            n2 += array5.length;\n         }\n-        return encoded;\n+        return array3;\n     }\n     \n     static {\n         BCI5 = new BHSDCodec(5, 4);\n         BRANCH5 = new BHSDCodec(5, 4, 2);\n         BYTE1 = new BHSDCodec(1, 256);\n         CHAR3 = new BHSDCodec(3, 128);\n"}]}
