{"diffoscope-json-version": 1, "source1": "first/Base16OutputStream.class", "source2": "second/Base16OutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,69 +1,69 @@\n-  SHA-256 checksum e97bf8b876a8d1377048bdc1918bfdf203b3634c42cd1ae187aaebeea7194d60\n+  SHA-256 checksum 4cb510d7e628cdd13a485bffb9810e5e9ef58dc92b131c795631bf795f5fa781\n   Compiled from \"Base16OutputStream.java\"\n public class org.apache.commons.codec.binary.Base16OutputStream extends org.apache.commons.codec.binary.BaseNCodecOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/codec/binary/Base16OutputStream\n-  super_class: #9                         // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+  this_class: #1                          // org/apache/commons/codec/binary/Base16OutputStream\n+  super_class: #3                         // org/apache/commons/codec/binary/BaseNCodecOutputStream\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#29         // org/apache/commons/codec/binary/Base16OutputStream.\"<init>\":(Ljava/io/OutputStream;Z)V\n-   #2 = Methodref          #8.#30         // org/apache/commons/codec/binary/Base16OutputStream.\"<init>\":(Ljava/io/OutputStream;ZZ)V\n-   #3 = Fieldref           #31.#32        // org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n-   #4 = Methodref          #8.#33         // org/apache/commons/codec/binary/Base16OutputStream.\"<init>\":(Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n-   #5 = Class              #34            // org/apache/commons/codec/binary/Base16\n-   #6 = Methodref          #5.#35         // org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n-   #7 = Methodref          #9.#36         // org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-   #8 = Class              #37            // org/apache/commons/codec/binary/Base16OutputStream\n-   #9 = Class              #38            // org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  #10 = Utf8               <init>\n-  #11 = Utf8               (Ljava/io/OutputStream;)V\n-  #12 = Utf8               Code\n-  #13 = Utf8               LineNumberTable\n-  #14 = Utf8               LocalVariableTable\n-  #15 = Utf8               this\n-  #16 = Utf8               Lorg/apache/commons/codec/binary/Base16OutputStream;\n-  #17 = Utf8               out\n-  #18 = Utf8               Ljava/io/OutputStream;\n-  #19 = Utf8               (Ljava/io/OutputStream;Z)V\n+   #1 = Class              #2             // org/apache/commons/codec/binary/Base16OutputStream\n+   #2 = Utf8               org/apache/commons/codec/binary/Base16OutputStream\n+   #3 = Class              #4             // org/apache/commons/codec/binary/BaseNCodecOutputStream\n+   #4 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/OutputStream;)V\n+   #7 = Utf8               Code\n+   #8 = Methodref          #1.#9          // org/apache/commons/codec/binary/Base16OutputStream.\"<init>\":(Ljava/io/OutputStream;Z)V\n+   #9 = NameAndType        #5:#10         // \"<init>\":(Ljava/io/OutputStream;Z)V\n+  #10 = Utf8               (Ljava/io/OutputStream;Z)V\n+  #11 = Utf8               LineNumberTable\n+  #12 = Utf8               LocalVariableTable\n+  #13 = Utf8               this\n+  #14 = Utf8               Lorg/apache/commons/codec/binary/Base16OutputStream;\n+  #15 = Utf8               out\n+  #16 = Utf8               Ljava/io/OutputStream;\n+  #17 = Methodref          #1.#18         // org/apache/commons/codec/binary/Base16OutputStream.\"<init>\":(Ljava/io/OutputStream;ZZ)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(Ljava/io/OutputStream;ZZ)V\n+  #19 = Utf8               (Ljava/io/OutputStream;ZZ)V\n   #20 = Utf8               doEncode\n   #21 = Utf8               Z\n-  #22 = Utf8               (Ljava/io/OutputStream;ZZ)V\n-  #23 = Utf8               lowerCase\n-  #24 = Utf8               (Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n-  #25 = Utf8               decodingPolicy\n-  #26 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n-  #27 = Utf8               SourceFile\n-  #28 = Utf8               Base16OutputStream.java\n-  #29 = NameAndType        #10:#19        // \"<init>\":(Ljava/io/OutputStream;Z)V\n-  #30 = NameAndType        #10:#22        // \"<init>\":(Ljava/io/OutputStream;ZZ)V\n-  #31 = Class              #39            // org/apache/commons/codec/CodecPolicy\n-  #32 = NameAndType        #40:#26        // LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n-  #33 = NameAndType        #10:#24        // \"<init>\":(Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n-  #34 = Utf8               org/apache/commons/codec/binary/Base16\n-  #35 = NameAndType        #10:#41        // \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n-  #36 = NameAndType        #10:#42        // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n-  #37 = Utf8               org/apache/commons/codec/binary/Base16OutputStream\n-  #38 = Utf8               org/apache/commons/codec/binary/BaseNCodecOutputStream\n-  #39 = Utf8               org/apache/commons/codec/CodecPolicy\n-  #40 = Utf8               LENIENT\n-  #41 = Utf8               (ZLorg/apache/commons/codec/CodecPolicy;)V\n-  #42 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #22 = Fieldref           #23.#25        // org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n+  #23 = Class              #24            // org/apache/commons/codec/CodecPolicy\n+  #24 = Utf8               org/apache/commons/codec/CodecPolicy\n+  #25 = NameAndType        #26:#27        // LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n+  #26 = Utf8               LENIENT\n+  #27 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n+  #28 = Methodref          #1.#29         // org/apache/commons/codec/binary/Base16OutputStream.\"<init>\":(Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n+  #29 = NameAndType        #5:#30         // \"<init>\":(Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n+  #30 = Utf8               (Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n+  #31 = Utf8               lowerCase\n+  #32 = Class              #33            // org/apache/commons/codec/binary/Base16\n+  #33 = Utf8               org/apache/commons/codec/binary/Base16\n+  #34 = Methodref          #32.#35        // org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+  #35 = NameAndType        #5:#36         // \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+  #36 = Utf8               (ZLorg/apache/commons/codec/CodecPolicy;)V\n+  #37 = Methodref          #3.#38         // org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #38 = NameAndType        #5:#39         // \"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #39 = Utf8               (Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+  #40 = Utf8               decodingPolicy\n+  #41 = Utf8               SourceFile\n+  #42 = Utf8               Base16OutputStream.java\n {\n   public org.apache.commons.codec.binary.Base16OutputStream(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #1                  // Method \"<init>\":(Ljava/io/OutputStream;Z)V\n+         3: invokespecial #8                  // Method \"<init>\":(Ljava/io/OutputStream;Z)V\n          6: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/codec/binary/Base16OutputStream;\n@@ -74,15 +74,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n-         4: invokespecial #2                  // Method \"<init>\":(Ljava/io/OutputStream;ZZ)V\n+         4: invokespecial #17                 // Method \"<init>\":(Ljava/io/OutputStream;ZZ)V\n          7: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/codec/binary/Base16OutputStream;\n@@ -94,16 +94,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: getstatic     #3                  // Field org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n-         7: invokespecial #4                  // Method \"<init>\":(Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n+         4: getstatic     #22                 // Field org/apache/commons/codec/CodecPolicy.LENIENT:Lorg/apache/commons/codec/CodecPolicy;\n+         7: invokespecial #28                 // Method \"<init>\":(Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n         10: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/codec/binary/Base16OutputStream;\n@@ -114,21 +114,21 @@\n   public org.apache.commons.codec.binary.Base16OutputStream(java.io.OutputStream, boolean, boolean, org.apache.commons.codec.CodecPolicy);\n     descriptor: (Ljava/io/OutputStream;ZZLorg/apache/commons/codec/CodecPolicy;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n-         2: new           #5                  // class org/apache/commons/codec/binary/Base16\n+         2: new           #32                 // class org/apache/commons/codec/binary/Base16\n          5: dup\n          6: iload_3\n          7: aload         4\n-         9: invokespecial #6                  // Method org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+         9: invokespecial #34                 // Method org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n         12: iload_2\n-        13: invokespecial #7                  // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n+        13: invokespecial #37                 // Method org/apache/commons/codec/binary/BaseNCodecOutputStream.\"<init>\":(Ljava/io/OutputStream;Lorg/apache/commons/codec/binary/BaseNCodec;Z)V\n         16: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/codec/binary/Base16OutputStream;\n"}]}
