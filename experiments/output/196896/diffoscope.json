{"diffoscope-json-version": 1, "source1": "first/FastDoubleSwar.class", "source2": "second/FastDoubleSwar.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,116 +1,116 @@\n-  SHA-256 checksum 54b0eb11fe65662cdee6aa3b02a347e8d3af5c0fcd0521c6575a24b7b653cd2a\n+  SHA-256 checksum c31e6c72ec28622ea4d0c8b4c91e0000c3b628561f3e268653f114e2449ea6e6\n   Compiled from \"FastDoubleSwar.java\"\n class com.fasterxml.jackson.core.io.doubleparser.FastDoubleSwar\n   minor version: 0\n   major version: 52\n   flags: (0x0020) ACC_SUPER\n-  this_class: #63                         // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  super_class: #64                        // java/lang/Object\n+  this_class: #8                          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Methodref          #64.#117      // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #63.#118      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n-    #3 = Long               13511005043687472l\n-    #5 = Long               19703549022044230l\n-    #7 = Long               -35747867511423104l\n-    #9 = Long               281475406208040961l\n-   #11 = Methodref          #63.#119      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.readLongFromByteArrayLittleEndian:([BI)J\n-   #12 = Methodref          #63.#120      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf8:(J)I\n-   #13 = Long               3472328296227680304l\n-   #15 = Long               5063812098665367110l\n-   #17 = Long               -9187201950435737472l\n-   #19 = Long               2561l\n-   #21 = Long               1095216660735l\n-   #23 = Long               4294967296000100l\n-   #25 = Long               42949672960001l\n-   #27 = Methodref          #63.#121      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightHexDigitsUtf16:(JJ)J\n-   #28 = Methodref          #63.#122      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseFourHexDigitsUtf16:(J)J\n-   #29 = Methodref          #63.#123      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.readLongFromByteArrayBigEndian:([BI)J\n-   #30 = Methodref          #63.#124      // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightHexDigitsUtf8:(J)J\n-   #31 = Long               8536140394893047414l\n-   #33 = Long               5714873654208057167l\n-   #35 = Long               3978709506094217015l\n-   #37 = Long               9187201950435737471l\n-   #39 = Long               -1l\n-   #41 = Long               255l\n-   #43 = Long               2821266740684990247l\n-   #45 = Long               71777214294589695l\n-   #47 = Long               4294901760l\n-   #49 = Long               65535l\n-   #51 = Long               9220697983773212662l\n-   #53 = Long               -9223231297218904064l\n-   #55 = Long               9209720292175216591l\n-   #57 = Long               15481359945891895l\n-   #59 = Long               9223231297218904063l\n-   #61 = Long               10977691597996071l\n-   #63 = Class              #125          // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-   #64 = Class              #126          // java/lang/Object\n-   #65 = Utf8               <init>\n-   #66 = Utf8               ()V\n-   #67 = Utf8               Code\n-   #68 = Utf8               LineNumberTable\n-   #69 = Utf8               LocalVariableTable\n-   #70 = Utf8               this\n-   #71 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar;\n-   #72 = Utf8               tryToParseEightDigitsUtf16\n-   #73 = Utf8               ([CI)I\n-   #74 = Utf8               a\n-   #75 = Utf8               [C\n-   #76 = Utf8               offset\n-   #77 = Utf8               I\n-   #78 = Utf8               first\n-   #79 = Utf8               J\n-   #80 = Utf8               second\n-   #81 = Utf8               (JJ)I\n-   #82 = Utf8               fval\n-   #83 = Utf8               sval\n-   #84 = Utf8               fpre\n-   #85 = Utf8               spre\n-   #86 = Utf8               StackMapTable\n-   #87 = Utf8               tryToParseEightDigitsUtf8\n-   #88 = Utf8               ([BI)I\n-   #89 = Utf8               [B\n-   #90 = Utf8               (J)I\n-   #91 = Utf8               chunk\n-   #92 = Utf8               val\n-   #93 = Utf8               predicate\n-   #94 = Utf8               tryToParseEightHexDigitsUtf16\n-   #95 = Utf8               ([CI)J\n-   #96 = Utf8               (JJ)J\n-   #97 = Utf8               lfirst\n-   #98 = Utf8               lsecond\n-   #99 = Utf8               tryToParseEightHexDigitsUtf8\n-  #100 = Utf8               ([BI)J\n-  #101 = Utf8               (J)J\n-  #102 = Utf8               vec\n-  #103 = Utf8               gt_09\n-  #104 = Utf8               ge_30\n-  #105 = Utf8               le_37\n-  #106 = Utf8               gt_09mask\n-  #107 = Utf8               v\n-  #108 = Utf8               v2\n-  #109 = Utf8               v3\n-  #110 = Utf8               v4\n-  #111 = Utf8               v5\n-  #112 = Utf8               tryToParseFourHexDigitsUtf16\n-  #113 = Utf8               readLongFromByteArrayLittleEndian\n-  #114 = Utf8               readLongFromByteArrayBigEndian\n-  #115 = Utf8               SourceFile\n-  #116 = Utf8               FastDoubleSwar.java\n-  #117 = NameAndType        #65:#66       // \"<init>\":()V\n-  #118 = NameAndType        #72:#81       // tryToParseEightDigitsUtf16:(JJ)I\n-  #119 = NameAndType        #113:#100     // readLongFromByteArrayLittleEndian:([BI)J\n-  #120 = NameAndType        #87:#90       // tryToParseEightDigitsUtf8:(J)I\n-  #121 = NameAndType        #94:#96       // tryToParseEightHexDigitsUtf16:(JJ)J\n-  #122 = NameAndType        #112:#101     // tryToParseFourHexDigitsUtf16:(J)J\n-  #123 = NameAndType        #114:#100     // readLongFromByteArrayBigEndian:([BI)J\n-  #124 = NameAndType        #99:#101      // tryToParseEightHexDigitsUtf8:(J)J\n-  #125 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n-  #126 = Utf8               java/lang/Object\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf16:(JJ)I\n+    #8 = Class              #10           // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+    #9 = NameAndType        #11:#12       // tryToParseEightDigitsUtf16:(JJ)I\n+   #10 = Utf8               com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar\n+   #11 = Utf8               tryToParseEightDigitsUtf16\n+   #12 = Utf8               (JJ)I\n+   #13 = Long               13511005043687472l\n+   #15 = Long               19703549022044230l\n+   #17 = Long               -35747867511423104l\n+   #19 = Long               281475406208040961l\n+   #21 = Methodref          #8.#22        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.readLongFromByteArrayLittleEndian:([BI)J\n+   #22 = NameAndType        #23:#24       // readLongFromByteArrayLittleEndian:([BI)J\n+   #23 = Utf8               readLongFromByteArrayLittleEndian\n+   #24 = Utf8               ([BI)J\n+   #25 = Methodref          #8.#26        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightDigitsUtf8:(J)I\n+   #26 = NameAndType        #27:#28       // tryToParseEightDigitsUtf8:(J)I\n+   #27 = Utf8               tryToParseEightDigitsUtf8\n+   #28 = Utf8               (J)I\n+   #29 = Long               3472328296227680304l\n+   #31 = Long               5063812098665367110l\n+   #33 = Long               -9187201950435737472l\n+   #35 = Long               2561l\n+   #37 = Long               1095216660735l\n+   #39 = Long               4294967296000100l\n+   #41 = Long               42949672960001l\n+   #43 = Methodref          #8.#44        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightHexDigitsUtf16:(JJ)J\n+   #44 = NameAndType        #45:#46       // tryToParseEightHexDigitsUtf16:(JJ)J\n+   #45 = Utf8               tryToParseEightHexDigitsUtf16\n+   #46 = Utf8               (JJ)J\n+   #47 = Methodref          #8.#48        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseFourHexDigitsUtf16:(J)J\n+   #48 = NameAndType        #49:#50       // tryToParseFourHexDigitsUtf16:(J)J\n+   #49 = Utf8               tryToParseFourHexDigitsUtf16\n+   #50 = Utf8               (J)J\n+   #51 = Methodref          #8.#52        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.readLongFromByteArrayBigEndian:([BI)J\n+   #52 = NameAndType        #53:#24       // readLongFromByteArrayBigEndian:([BI)J\n+   #53 = Utf8               readLongFromByteArrayBigEndian\n+   #54 = Methodref          #8.#55        // com/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar.tryToParseEightHexDigitsUtf8:(J)J\n+   #55 = NameAndType        #56:#50       // tryToParseEightHexDigitsUtf8:(J)J\n+   #56 = Utf8               tryToParseEightHexDigitsUtf8\n+   #57 = Long               8536140394893047414l\n+   #59 = Long               5714873654208057167l\n+   #61 = Long               3978709506094217015l\n+   #63 = Long               9187201950435737471l\n+   #65 = Long               -1l\n+   #67 = Long               255l\n+   #69 = Long               2821266740684990247l\n+   #71 = Long               71777214294589695l\n+   #73 = Long               4294901760l\n+   #75 = Long               65535l\n+   #77 = Long               9220697983773212662l\n+   #79 = Long               -9223231297218904064l\n+   #81 = Long               9209720292175216591l\n+   #83 = Long               15481359945891895l\n+   #85 = Long               9223231297218904063l\n+   #87 = Long               10977691597996071l\n+   #89 = Utf8               Code\n+   #90 = Utf8               LineNumberTable\n+   #91 = Utf8               LocalVariableTable\n+   #92 = Utf8               this\n+   #93 = Utf8               Lcom/fasterxml/jackson/core/io/doubleparser/FastDoubleSwar;\n+   #94 = Utf8               ([CI)I\n+   #95 = Utf8               a\n+   #96 = Utf8               [C\n+   #97 = Utf8               offset\n+   #98 = Utf8               I\n+   #99 = Utf8               first\n+  #100 = Utf8               J\n+  #101 = Utf8               second\n+  #102 = Utf8               fval\n+  #103 = Utf8               sval\n+  #104 = Utf8               fpre\n+  #105 = Utf8               spre\n+  #106 = Utf8               StackMapTable\n+  #107 = Utf8               ([BI)I\n+  #108 = Utf8               [B\n+  #109 = Utf8               chunk\n+  #110 = Utf8               val\n+  #111 = Utf8               predicate\n+  #112 = Utf8               ([CI)J\n+  #113 = Utf8               lfirst\n+  #114 = Utf8               lsecond\n+  #115 = Utf8               vec\n+  #116 = Utf8               gt_09\n+  #117 = Utf8               ge_30\n+  #118 = Utf8               le_37\n+  #119 = Utf8               gt_09mask\n+  #120 = Utf8               v\n+  #121 = Utf8               v2\n+  #122 = Utf8               v3\n+  #123 = Utf8               v4\n+  #124 = Utf8               v5\n+  #125 = Utf8               SourceFile\n+  #126 = Utf8               FastDoubleSwar.java\n {\n   com.fasterxml.jackson.core.io.doubleparser.FastDoubleSwar();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -191,15 +191,15 @@\n         68: i2l\n         69: bipush        48\n         71: lshl\n         72: lor\n         73: lstore        4\n         75: lload_2\n         76: lload         4\n-        78: invokestatic  #2                  // Method tryToParseEightDigitsUtf16:(JJ)I\n+        78: invokestatic  #7                  // Method tryToParseEightDigitsUtf16:(JJ)I\n         81: ireturn\n       LineNumberTable:\n         line 48: 0\n         line 52: 35\n         line 57: 75\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -210,51 +210,51 @@\n \n   public static int tryToParseEightDigitsUtf16(long, long);\n     descriptor: (JJ)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=5, locals=12, args_size=2\n          0: lload_0\n-         1: ldc2_w        #3                  // long 13511005043687472l\n+         1: ldc2_w        #13                 // long 13511005043687472l\n          4: lsub\n          5: lstore        4\n          7: lload_2\n-         8: ldc2_w        #3                  // long 13511005043687472l\n+         8: ldc2_w        #13                 // long 13511005043687472l\n         11: lsub\n         12: lstore        6\n         14: lload_0\n-        15: ldc2_w        #5                  // long 19703549022044230l\n+        15: ldc2_w        #15                 // long 19703549022044230l\n         18: ladd\n         19: lload         4\n         21: lor\n         22: lstore        8\n         24: lload_2\n-        25: ldc2_w        #5                  // long 19703549022044230l\n+        25: ldc2_w        #15                 // long 19703549022044230l\n         28: ladd\n         29: lload         6\n         31: lor\n         32: lstore        10\n         34: lload         8\n         36: lload         10\n         38: lor\n-        39: ldc2_w        #7                  // long -35747867511423104l\n+        39: ldc2_w        #17                 // long -35747867511423104l\n         42: land\n         43: lconst_0\n         44: lcmp\n         45: ifeq          50\n         48: iconst_m1\n         49: ireturn\n         50: lload         6\n-        52: ldc2_w        #9                  // long 281475406208040961l\n+        52: ldc2_w        #19                 // long 281475406208040961l\n         55: lmul\n         56: bipush        48\n         58: lushr\n         59: l2i\n         60: lload         4\n-        62: ldc2_w        #9                  // long 281475406208040961l\n+        62: ldc2_w        #19                 // long 281475406208040961l\n         65: lmul\n         66: bipush        48\n         68: lushr\n         69: l2i\n         70: sipush        10000\n         73: imul\n         74: iadd\n@@ -284,64 +284,64 @@\n   public static int tryToParseEightDigitsUtf8(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #11                 // Method readLongFromByteArrayLittleEndian:([BI)J\n-         5: invokestatic  #12                 // Method tryToParseEightDigitsUtf8:(J)I\n+         2: invokestatic  #21                 // Method readLongFromByteArrayLittleEndian:([BI)J\n+         5: invokestatic  #25                 // Method tryToParseEightDigitsUtf8:(J)I\n          8: ireturn\n       LineNumberTable:\n         line 102: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0     a   [B\n             0       9     1 offset   I\n \n   public static int tryToParseEightDigitsUtf8(long);\n     descriptor: (J)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=6, args_size=1\n          0: lload_0\n-         1: ldc2_w        #13                 // long 3472328296227680304l\n+         1: ldc2_w        #29                 // long 3472328296227680304l\n          4: lsub\n          5: lstore_2\n          6: lload_0\n-         7: ldc2_w        #15                 // long 5063812098665367110l\n+         7: ldc2_w        #31                 // long 5063812098665367110l\n         10: ladd\n         11: lload_2\n         12: lor\n-        13: ldc2_w        #17                 // long -9187201950435737472l\n+        13: ldc2_w        #33                 // long -9187201950435737472l\n         16: land\n         17: lstore        4\n         19: lload         4\n         21: lconst_0\n         22: lcmp\n         23: ifeq          28\n         26: iconst_m1\n         27: ireturn\n         28: lload_2\n-        29: ldc2_w        #19                 // long 2561l\n+        29: ldc2_w        #35                 // long 2561l\n         32: lmul\n         33: bipush        8\n         35: lushr\n         36: lstore_2\n         37: lload_2\n-        38: ldc2_w        #21                 // long 1095216660735l\n+        38: ldc2_w        #37                 // long 1095216660735l\n         41: land\n-        42: ldc2_w        #23                 // long 4294967296000100l\n+        42: ldc2_w        #39                 // long 4294967296000100l\n         45: lmul\n         46: lload_2\n         47: bipush        16\n         49: lushr\n-        50: ldc2_w        #21                 // long 1095216660735l\n+        50: ldc2_w        #37                 // long 1095216660735l\n         53: land\n-        54: ldc2_w        #25                 // long 42949672960001l\n+        54: ldc2_w        #41                 // long 42949672960001l\n         57: lmul\n         58: ladd\n         59: bipush        32\n         61: lushr\n         62: lstore_2\n         63: lload_2\n         64: l2i\n@@ -433,15 +433,15 @@\n         69: iadd\n         70: caload\n         71: i2l\n         72: lor\n         73: lstore        4\n         75: lload_2\n         76: lload         4\n-        78: invokestatic  #27                 // Method tryToParseEightHexDigitsUtf16:(JJ)J\n+        78: invokestatic  #43                 // Method tryToParseEightHexDigitsUtf16:(JJ)J\n         81: lreturn\n       LineNumberTable:\n         line 153: 0\n         line 158: 35\n         line 163: 75\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -452,18 +452,18 @@\n \n   public static long tryToParseEightHexDigitsUtf16(long, long);\n     descriptor: (JJ)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=8, args_size=2\n          0: lload_0\n-         1: invokestatic  #28                 // Method tryToParseFourHexDigitsUtf16:(J)J\n+         1: invokestatic  #47                 // Method tryToParseFourHexDigitsUtf16:(J)J\n          4: lstore        4\n          6: lload_2\n-         7: invokestatic  #28                 // Method tryToParseFourHexDigitsUtf16:(J)J\n+         7: invokestatic  #47                 // Method tryToParseFourHexDigitsUtf16:(J)J\n         10: lstore        6\n         12: lload         4\n         14: bipush        16\n         16: lshl\n         17: lload         6\n         19: lor\n         20: lreturn\n@@ -481,104 +481,104 @@\n   public static long tryToParseEightHexDigitsUtf8(byte[], int);\n     descriptor: ([BI)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokestatic  #29                 // Method readLongFromByteArrayBigEndian:([BI)J\n-         5: invokestatic  #30                 // Method tryToParseEightHexDigitsUtf8:(J)J\n+         2: invokestatic  #51                 // Method readLongFromByteArrayBigEndian:([BI)J\n+         5: invokestatic  #54                 // Method tryToParseEightHexDigitsUtf8:(J)J\n          8: lreturn\n       LineNumberTable:\n         line 203: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0     a   [B\n             0       9     1 offset   I\n \n   public static long tryToParseEightHexDigitsUtf8(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=22, args_size=1\n          0: lload_0\n-         1: ldc2_w        #13                 // long 3472328296227680304l\n+         1: ldc2_w        #29                 // long 3472328296227680304l\n          4: lsub\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #31                 // long 8536140394893047414l\n+         7: ldc2_w        #57                 // long 8536140394893047414l\n         10: ladd\n         11: lstore        4\n         13: lload         4\n-        15: ldc2_w        #17                 // long -9187201950435737472l\n+        15: ldc2_w        #33                 // long -9187201950435737472l\n         18: land\n         19: lstore        4\n         21: lload_2\n-        22: ldc2_w        #33                 // long 5714873654208057167l\n+        22: ldc2_w        #59                 // long 5714873654208057167l\n         25: ladd\n         26: lstore        6\n         28: lload         6\n-        30: ldc2_w        #17                 // long -9187201950435737472l\n+        30: ldc2_w        #33                 // long -9187201950435737472l\n         33: land\n         34: lstore        6\n-        36: ldc2_w        #35                 // long 3978709506094217015l\n+        36: ldc2_w        #61                 // long 3978709506094217015l\n         39: lload_2\n-        40: ldc2_w        #37                 // long 9187201950435737471l\n+        40: ldc2_w        #63                 // long 9187201950435737471l\n         43: lxor\n         44: ladd\n         45: lstore        8\n         47: lload         4\n         49: lload         6\n         51: lload         8\n         53: land\n         54: lcmp\n         55: ifeq          62\n-        58: ldc2_w        #39                 // long -1l\n+        58: ldc2_w        #65                 // long -1l\n         61: lreturn\n         62: lload         4\n         64: bipush        7\n         66: lushr\n-        67: ldc2_w        #41                 // long 255l\n+        67: ldc2_w        #67                 // long 255l\n         70: lmul\n         71: lstore        10\n         73: lload_2\n         74: lload         10\n-        76: ldc2_w        #39                 // long -1l\n+        76: ldc2_w        #65                 // long -1l\n         79: lxor\n         80: land\n         81: lload_2\n-        82: ldc2_w        #43                 // long 2821266740684990247l\n+        82: ldc2_w        #69                 // long 2821266740684990247l\n         85: lload         10\n         87: land\n         88: lsub\n         89: lor\n         90: lstore        12\n         92: lload         12\n         94: lload         12\n         96: iconst_4\n         97: lushr\n         98: lor\n         99: lstore        14\n        101: lload         14\n-       103: ldc2_w        #45                 // long 71777214294589695l\n+       103: ldc2_w        #71                 // long 71777214294589695l\n        106: land\n        107: lstore        16\n        109: lload         16\n        111: lload         16\n        113: bipush        8\n        115: lushr\n        116: lor\n        117: lstore        18\n        119: lload         18\n        121: bipush        16\n        123: lushr\n-       124: ldc2_w        #47                 // long 4294901760l\n+       124: ldc2_w        #73                 // long 4294901760l\n        127: land\n        128: lload         18\n-       130: ldc2_w        #49                 // long 65535l\n+       130: ldc2_w        #75                 // long 65535l\n        133: land\n        134: lor\n        135: lstore        20\n        137: lload         20\n        139: lreturn\n       LineNumberTable:\n         line 220: 0\n@@ -617,60 +617,60 @@\n \n   public static long tryToParseFourHexDigitsUtf16(long);\n     descriptor: (J)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=8, locals=18, args_size=1\n          0: lload_0\n-         1: ldc2_w        #3                  // long 13511005043687472l\n+         1: ldc2_w        #13                 // long 13511005043687472l\n          4: lsub\n          5: lstore_2\n          6: lload_2\n-         7: ldc2_w        #51                 // long 9220697983773212662l\n+         7: ldc2_w        #77                 // long 9220697983773212662l\n         10: ladd\n         11: lstore        4\n         13: lload         4\n-        15: ldc2_w        #53                 // long -9223231297218904064l\n+        15: ldc2_w        #79                 // long -9223231297218904064l\n         18: land\n         19: lstore        4\n         21: lload_2\n-        22: ldc2_w        #55                 // long 9209720292175216591l\n+        22: ldc2_w        #81                 // long 9209720292175216591l\n         25: ladd\n         26: lstore        6\n         28: lload         6\n-        30: ldc2_w        #53                 // long -9223231297218904064l\n+        30: ldc2_w        #79                 // long -9223231297218904064l\n         33: land\n         34: lstore        6\n-        36: ldc2_w        #57                 // long 15481359945891895l\n+        36: ldc2_w        #83                 // long 15481359945891895l\n         39: lload_2\n-        40: ldc2_w        #59                 // long 9223231297218904063l\n+        40: ldc2_w        #85                 // long 9223231297218904063l\n         43: lxor\n         44: ladd\n         45: lstore        8\n         47: lload         4\n         49: lload         6\n         51: lload         8\n         53: land\n         54: lcmp\n         55: ifeq          62\n-        58: ldc2_w        #39                 // long -1l\n+        58: ldc2_w        #65                 // long -1l\n         61: lreturn\n         62: lload         4\n         64: bipush        15\n         66: lushr\n-        67: ldc2_w        #49                 // long 65535l\n+        67: ldc2_w        #75                 // long 65535l\n         70: lmul\n         71: lstore        10\n         73: lload_2\n         74: lload         10\n-        76: ldc2_w        #39                 // long -1l\n+        76: ldc2_w        #65                 // long -1l\n         79: lxor\n         80: land\n         81: lload_2\n-        82: ldc2_w        #61                 // long 10977691597996071l\n+        82: ldc2_w        #87                 // long 10977691597996071l\n         85: lload         10\n         87: land\n         88: lsub\n         89: lor\n         90: lstore        12\n         92: lload         12\n         94: lload         12\n@@ -679,15 +679,15 @@\n         99: lor\n        100: lstore        14\n        102: lload         14\n        104: lload         14\n        106: bipush        24\n        108: lushr\n        109: lor\n-       110: ldc2_w        #49                 // long 65535l\n+       110: ldc2_w        #75                 // long 65535l\n        113: land\n        114: lstore        16\n        116: lload         16\n        118: lreturn\n       LineNumberTable:\n         line 272: 0\n         line 276: 6\n@@ -726,89 +726,89 @@\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: bipush        7\n          4: iadd\n          5: baload\n          6: i2l\n-         7: ldc2_w        #41                 // long 255l\n+         7: ldc2_w        #67                 // long 255l\n         10: land\n         11: bipush        56\n         13: lshl\n         14: aload_0\n         15: iload_1\n         16: bipush        6\n         18: iadd\n         19: baload\n         20: i2l\n-        21: ldc2_w        #41                 // long 255l\n+        21: ldc2_w        #67                 // long 255l\n         24: land\n         25: bipush        48\n         27: lshl\n         28: lor\n         29: aload_0\n         30: iload_1\n         31: iconst_5\n         32: iadd\n         33: baload\n         34: i2l\n-        35: ldc2_w        #41                 // long 255l\n+        35: ldc2_w        #67                 // long 255l\n         38: land\n         39: bipush        40\n         41: lshl\n         42: lor\n         43: aload_0\n         44: iload_1\n         45: iconst_4\n         46: iadd\n         47: baload\n         48: i2l\n-        49: ldc2_w        #41                 // long 255l\n+        49: ldc2_w        #67                 // long 255l\n         52: land\n         53: bipush        32\n         55: lshl\n         56: lor\n         57: aload_0\n         58: iload_1\n         59: iconst_3\n         60: iadd\n         61: baload\n         62: i2l\n-        63: ldc2_w        #41                 // long 255l\n+        63: ldc2_w        #67                 // long 255l\n         66: land\n         67: bipush        24\n         69: lshl\n         70: lor\n         71: aload_0\n         72: iload_1\n         73: iconst_2\n         74: iadd\n         75: baload\n         76: i2l\n-        77: ldc2_w        #41                 // long 255l\n+        77: ldc2_w        #67                 // long 255l\n         80: land\n         81: bipush        16\n         83: lshl\n         84: lor\n         85: aload_0\n         86: iload_1\n         87: iconst_1\n         88: iadd\n         89: baload\n         90: i2l\n-        91: ldc2_w        #41                 // long 255l\n+        91: ldc2_w        #67                 // long 255l\n         94: land\n         95: bipush        8\n         97: lshl\n         98: lor\n         99: aload_0\n        100: iload_1\n        101: baload\n        102: i2l\n-       103: ldc2_w        #41                 // long 255l\n+       103: ldc2_w        #67                 // long 255l\n        106: land\n        107: lor\n        108: lreturn\n       LineNumberTable:\n         line 309: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -820,91 +820,91 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: baload\n          3: i2l\n-         4: ldc2_w        #41                 // long 255l\n+         4: ldc2_w        #67                 // long 255l\n          7: land\n          8: bipush        56\n         10: lshl\n         11: aload_0\n         12: iload_1\n         13: iconst_1\n         14: iadd\n         15: baload\n         16: i2l\n-        17: ldc2_w        #41                 // long 255l\n+        17: ldc2_w        #67                 // long 255l\n         20: land\n         21: bipush        48\n         23: lshl\n         24: lor\n         25: aload_0\n         26: iload_1\n         27: iconst_2\n         28: iadd\n         29: baload\n         30: i2l\n-        31: ldc2_w        #41                 // long 255l\n+        31: ldc2_w        #67                 // long 255l\n         34: land\n         35: bipush        40\n         37: lshl\n         38: lor\n         39: aload_0\n         40: iload_1\n         41: iconst_3\n         42: iadd\n         43: baload\n         44: i2l\n-        45: ldc2_w        #41                 // long 255l\n+        45: ldc2_w        #67                 // long 255l\n         48: land\n         49: bipush        32\n         51: lshl\n         52: lor\n         53: aload_0\n         54: iload_1\n         55: iconst_4\n         56: iadd\n         57: baload\n         58: i2l\n-        59: ldc2_w        #41                 // long 255l\n+        59: ldc2_w        #67                 // long 255l\n         62: land\n         63: bipush        24\n         65: lshl\n         66: lor\n         67: aload_0\n         68: iload_1\n         69: iconst_5\n         70: iadd\n         71: baload\n         72: i2l\n-        73: ldc2_w        #41                 // long 255l\n+        73: ldc2_w        #67                 // long 255l\n         76: land\n         77: bipush        16\n         79: lshl\n         80: lor\n         81: aload_0\n         82: iload_1\n         83: bipush        6\n         85: iadd\n         86: baload\n         87: i2l\n-        88: ldc2_w        #41                 // long 255l\n+        88: ldc2_w        #67                 // long 255l\n         91: land\n         92: bipush        8\n         94: lshl\n         95: lor\n         96: aload_0\n         97: iload_1\n         98: bipush        7\n        100: iadd\n        101: baload\n        102: i2l\n-       103: ldc2_w        #41                 // long 255l\n+       103: ldc2_w        #67                 // long 255l\n        106: land\n        107: lor\n        108: lreturn\n       LineNumberTable:\n         line 320: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n"}]}
