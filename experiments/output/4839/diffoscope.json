{"diffoscope-json-version": 1, "source1": "first/DelegateFileFilter.class", "source2": "second/DelegateFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,39 +1,39 @@\n-  SHA-256 checksum f22affede08cd1651ab218d6cd0a185bcf1ffd5c4c67ac09b236f5a17f630678\n+  SHA-256 checksum b019d0c786346f25681a3f8f4a216108b949131d51540867b5ddad5193e4a85c\n   Compiled from \"DelegateFileFilter.java\"\n public class org.apache.commons.io.filefilter.DelegateFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #20                         // org/apache/commons/io/filefilter/DelegateFileFilter\n   super_class: #21                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #21.#59        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #60            // java/lang/IllegalArgumentException\n-   #3 = String             #61            // The FilenameFilter must not be null\n-   #4 = Methodref          #2.#62         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #5 = Fieldref           #20.#63        // org/apache/commons/io/filefilter/DelegateFileFilter.filenameFilter:Ljava/io/FilenameFilter;\n-   #6 = Fieldref           #20.#64        // org/apache/commons/io/filefilter/DelegateFileFilter.fileFilter:Ljava/io/FileFilter;\n-   #7 = String             #65            // The FileFilter must not be null\n-   #8 = InterfaceMethodref #66.#67        // java/io/FileFilter.accept:(Ljava/io/File;)Z\n-   #9 = Methodref          #21.#67        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n-  #10 = InterfaceMethodref #68.#69        // java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #11 = Methodref          #21.#69        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #12 = Methodref          #70.#71        // java/lang/Object.toString:()Ljava/lang/String;\n-  #13 = Class              #72            // java/lang/StringBuilder\n-  #14 = Methodref          #13.#59        // java/lang/StringBuilder.\"<init>\":()V\n-  #15 = Methodref          #21.#71        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-  #16 = Methodref          #13.#73        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #17 = String             #74            // (\n-  #18 = String             #75            // )\n-  #19 = Methodref          #13.#71        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #20 = Class              #76            // org/apache/commons/io/filefilter/DelegateFileFilter\n-  #21 = Class              #77            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #22 = Class              #78            // java/io/Serializable\n+   #1 = Methodref          #21.#58        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #59            // java/lang/IllegalArgumentException\n+   #3 = String             #60            // The FilenameFilter must not be null\n+   #4 = Methodref          #2.#61         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #5 = Fieldref           #20.#62        // org/apache/commons/io/filefilter/DelegateFileFilter.filenameFilter:Ljava/io/FilenameFilter;\n+   #6 = Fieldref           #20.#63        // org/apache/commons/io/filefilter/DelegateFileFilter.fileFilter:Ljava/io/FileFilter;\n+   #7 = String             #64            // The FileFilter must not be null\n+   #8 = InterfaceMethodref #43.#65        // java/io/FileFilter.accept:(Ljava/io/File;)Z\n+   #9 = Methodref          #21.#65        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;)Z\n+  #10 = InterfaceMethodref #41.#66        // java/io/FilenameFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #11 = Methodref          #21.#66        // org/apache/commons/io/filefilter/AbstractFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #12 = Methodref          #67.#68        // java/lang/Object.toString:()Ljava/lang/String;\n+  #13 = Class              #69            // java/lang/StringBuilder\n+  #14 = Methodref          #13.#58        // java/lang/StringBuilder.\"<init>\":()V\n+  #15 = Methodref          #21.#68        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+  #16 = Methodref          #13.#70        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #17 = String             #71            // (\n+  #18 = String             #72            // )\n+  #19 = Methodref          #13.#68        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #20 = Class              #73            // org/apache/commons/io/filefilter/DelegateFileFilter\n+  #21 = Class              #74            // org/apache/commons/io/filefilter/AbstractFileFilter\n+  #22 = Class              #75            // java/io/Serializable\n   #23 = Utf8               serialVersionUID\n   #24 = Utf8               J\n   #25 = Utf8               ConstantValue\n   #26 = Long               -8723373124984771318l\n   #28 = Utf8               filenameFilter\n   #29 = Utf8               Ljava/io/FilenameFilter;\n   #30 = Utf8               fileFilter\n@@ -43,60 +43,57 @@\n   #34 = Utf8               Code\n   #35 = Utf8               LineNumberTable\n   #36 = Utf8               LocalVariableTable\n   #37 = Utf8               this\n   #38 = Utf8               Lorg/apache/commons/io/filefilter/DelegateFileFilter;\n   #39 = Utf8               filter\n   #40 = Utf8               StackMapTable\n-  #41 = Class              #76            // org/apache/commons/io/filefilter/DelegateFileFilter\n-  #42 = Class              #79            // java/io/FilenameFilter\n-  #43 = Utf8               (Ljava/io/FileFilter;)V\n-  #44 = Class              #80            // java/io/FileFilter\n-  #45 = Utf8               accept\n-  #46 = Utf8               (Ljava/io/File;)Z\n-  #47 = Utf8               file\n-  #48 = Utf8               Ljava/io/File;\n-  #49 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #50 = Utf8               dir\n-  #51 = Utf8               name\n-  #52 = Utf8               Ljava/lang/String;\n-  #53 = Utf8               toString\n-  #54 = Utf8               ()Ljava/lang/String;\n-  #55 = Utf8               delegate\n-  #56 = Class              #81            // java/lang/String\n-  #57 = Utf8               SourceFile\n-  #58 = Utf8               DelegateFileFilter.java\n-  #59 = NameAndType        #32:#82        // \"<init>\":()V\n-  #60 = Utf8               java/lang/IllegalArgumentException\n-  #61 = Utf8               The FilenameFilter must not be null\n-  #62 = NameAndType        #32:#83        // \"<init>\":(Ljava/lang/String;)V\n-  #63 = NameAndType        #28:#29        // filenameFilter:Ljava/io/FilenameFilter;\n-  #64 = NameAndType        #30:#31        // fileFilter:Ljava/io/FileFilter;\n-  #65 = Utf8               The FileFilter must not be null\n-  #66 = Class              #80            // java/io/FileFilter\n-  #67 = NameAndType        #45:#46        // accept:(Ljava/io/File;)Z\n-  #68 = Class              #79            // java/io/FilenameFilter\n-  #69 = NameAndType        #45:#49        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #70 = Class              #84            // java/lang/Object\n-  #71 = NameAndType        #53:#54        // toString:()Ljava/lang/String;\n-  #72 = Utf8               java/lang/StringBuilder\n-  #73 = NameAndType        #85:#86        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #74 = Utf8               (\n-  #75 = Utf8               )\n-  #76 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n-  #77 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #78 = Utf8               java/io/Serializable\n-  #79 = Utf8               java/io/FilenameFilter\n-  #80 = Utf8               java/io/FileFilter\n-  #81 = Utf8               java/lang/String\n-  #82 = Utf8               ()V\n-  #83 = Utf8               (Ljava/lang/String;)V\n-  #84 = Utf8               java/lang/Object\n-  #85 = Utf8               append\n-  #86 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #41 = Class              #76            // java/io/FilenameFilter\n+  #42 = Utf8               (Ljava/io/FileFilter;)V\n+  #43 = Class              #77            // java/io/FileFilter\n+  #44 = Utf8               accept\n+  #45 = Utf8               (Ljava/io/File;)Z\n+  #46 = Utf8               file\n+  #47 = Utf8               Ljava/io/File;\n+  #48 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #49 = Utf8               dir\n+  #50 = Utf8               name\n+  #51 = Utf8               Ljava/lang/String;\n+  #52 = Utf8               toString\n+  #53 = Utf8               ()Ljava/lang/String;\n+  #54 = Utf8               delegate\n+  #55 = Class              #78            // java/lang/String\n+  #56 = Utf8               SourceFile\n+  #57 = Utf8               DelegateFileFilter.java\n+  #58 = NameAndType        #32:#79        // \"<init>\":()V\n+  #59 = Utf8               java/lang/IllegalArgumentException\n+  #60 = Utf8               The FilenameFilter must not be null\n+  #61 = NameAndType        #32:#80        // \"<init>\":(Ljava/lang/String;)V\n+  #62 = NameAndType        #28:#29        // filenameFilter:Ljava/io/FilenameFilter;\n+  #63 = NameAndType        #30:#31        // fileFilter:Ljava/io/FileFilter;\n+  #64 = Utf8               The FileFilter must not be null\n+  #65 = NameAndType        #44:#45        // accept:(Ljava/io/File;)Z\n+  #66 = NameAndType        #44:#48        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #67 = Class              #81            // java/lang/Object\n+  #68 = NameAndType        #52:#53        // toString:()Ljava/lang/String;\n+  #69 = Utf8               java/lang/StringBuilder\n+  #70 = NameAndType        #82:#83        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #71 = Utf8               (\n+  #72 = Utf8               )\n+  #73 = Utf8               org/apache/commons/io/filefilter/DelegateFileFilter\n+  #74 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #75 = Utf8               java/io/Serializable\n+  #76 = Utf8               java/io/FilenameFilter\n+  #77 = Utf8               java/io/FileFilter\n+  #78 = Utf8               java/lang/String\n+  #79 = Utf8               ()V\n+  #80 = Utf8               (Ljava/lang/String;)V\n+  #81 = Utf8               java/lang/Object\n+  #82 = Utf8               append\n+  #83 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n {\n   private static final long serialVersionUID = -8723373124984771318l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long -8723373124984771318l\n \n   private final java.io.FilenameFilter filenameFilter;\n"}]}
