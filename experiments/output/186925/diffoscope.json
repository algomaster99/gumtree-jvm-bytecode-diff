{"diffoscope-json-version": 1, "source1": "first/DaitchMokotoffSoundex.class", "source2": "second/DaitchMokotoffSoundex.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,461 +1,461 @@\n-  SHA-256 checksum 86c777ba7c403710a9be5ffbadbfcc6f3000deecde40f36fdc5fa76aec053f8c\n+  SHA-256 checksum 6e3a428b168a9f54e013f77d35537e86e3301f86f90f6ecad4753ea022547e1c\n   Compiled from \"DaitchMokotoffSoundex.java\"\n public class org.apache.commons.codec.language.DaitchMokotoffSoundex implements org.apache.commons.codec.StringEncoder\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  super_class: #105                       // java/lang/Object\n+  this_class: #11                         // org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  super_class: #150                       // java/lang/Object\n   interfaces: 1, fields: 9, methods: 13, attributes: 3\n Constant pool:\n-    #1 = Methodref          #93.#224      // java/util/Scanner.hasNextLine:()Z\n-    #2 = Methodref          #93.#225      // java/util/Scanner.nextLine:()Ljava/lang/String;\n-    #3 = Class              #226          // org/apache/commons/codec/language/DaitchMokotoffSoundex\n-    #4 = String             #227          // */\n-    #5 = Methodref          #58.#228      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-    #6 = String             #229          // /*\n-    #7 = Methodref          #58.#230      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-    #8 = String             #231          // //\n-    #9 = Methodref          #58.#232      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #10 = Methodref          #58.#233      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #11 = Methodref          #58.#234      // java/lang/String.trim:()Ljava/lang/String;\n-   #12 = Methodref          #58.#235      // java/lang/String.isEmpty:()Z\n-   #13 = String             #236          // =\n-   #14 = Methodref          #58.#237      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #15 = Methodref          #58.#238      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-   #16 = Class              #239          // java/lang/IllegalArgumentException\n-   #17 = Class              #240          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#241      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = String             #242          // Malformed folding statement split into\n-   #20 = Methodref          #17.#243      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #21 = Methodref          #17.#244      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #22 = String             #245          //  parts:\n-   #23 = String             #246          //  in\n-   #24 = Methodref          #17.#247      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #16.#248      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #26 = Methodref          #58.#249      // java/lang/String.length:()I\n-   #27 = String             #250          // Malformed folding statement - patterns are not single characters:\n-   #28 = Methodref          #58.#251      // java/lang/String.charAt:(I)C\n-   #29 = Methodref          #55.#252      // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #30 = InterfaceMethodref #164.#253     // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #31 = String             #254          // \\\\s+\n-   #32 = String             #255          // Malformed rule statement split into\n-   #33 = Methodref          #3.#256       // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-   #34 = Class              #257          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-   #35 = Methodref          #34.#258      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-   #36 = Methodref          #34.#259      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-   #37 = InvokeDynamic      #0:#265       // #0:apply:()Ljava/util/function/Function;\n-   #38 = InterfaceMethodref #164.#266     // java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-   #39 = Class              #267          // java/util/List\n-   #40 = InterfaceMethodref #39.#268      // java/util/List.add:(Ljava/lang/Object;)Z\n-   #41 = Class              #269          // java/lang/IllegalStateException\n-   #42 = String             #270          // Problem parsing line \\'\n-   #43 = String             #271          // \\' in\n-   #44 = Methodref          #41.#272      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #45 = String             #273          // \\\"\n-   #46 = Methodref          #58.#274      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #47 = Methodref          #3.#275       // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n-   #48 = Methodref          #105.#241     // java/lang/Object.\"<init>\":()V\n-   #49 = Fieldref           #3.#276       // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n-   #50 = Methodref          #58.#277      // java/lang/String.toCharArray:()[C\n-   #51 = Methodref          #55.#278      // java/lang/Character.isWhitespace:(C)Z\n-   #52 = Methodref          #55.#279      // java/lang/Character.toLowerCase:(C)C\n-   #53 = Fieldref           #3.#280       // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n-   #54 = InterfaceMethodref #164.#281     // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #55 = Class              #282          // java/lang/Character\n-   #56 = Methodref          #55.#283      // java/lang/Character.charValue:()C\n-   #57 = Methodref          #17.#284      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #58 = Class              #285          // java/lang/String\n-   #59 = Class              #286          // org/apache/commons/codec/EncoderException\n-   #60 = String             #287          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-   #61 = Methodref          #59.#248      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #62 = Methodref          #3.#288       // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #63 = Methodref          #3.#289       // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #64 = Methodref          #3.#290       // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-   #65 = Class              #291          // java/util/LinkedHashSet\n-   #66 = Methodref          #65.#241      // java/util/LinkedHashSet.\"<init>\":()V\n-   #67 = Class              #292          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-   #68 = Methodref          #67.#293      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-   #69 = InterfaceMethodref #209.#268     // java/util/Set.add:(Ljava/lang/Object;)Z\n-   #70 = Fieldref           #3.#294       // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n-   #71 = Class              #295          // java/util/ArrayList\n-   #72 = Methodref          #71.#241      // java/util/ArrayList.\"<init>\":()V\n-   #73 = Methodref          #296.#297     // java/util/Collections.emptyList:()Ljava/util/List;\n-   #74 = InterfaceMethodref #39.#298      // java/util/List.iterator:()Ljava/util/Iterator;\n-   #75 = InterfaceMethodref #210.#299     // java/util/Iterator.hasNext:()Z\n-   #76 = InterfaceMethodref #210.#300     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #77 = Methodref          #34.#301      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n-   #78 = InterfaceMethodref #39.#302      // java/util/List.clear:()V\n-   #79 = Methodref          #34.#303      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-   #80 = InterfaceMethodref #209.#298     // java/util/Set.iterator:()Ljava/util/Iterator;\n-   #81 = Methodref          #67.#304      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-   #82 = Methodref          #67.#305      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n-   #83 = InterfaceMethodref #209.#302     // java/util/Set.clear:()V\n-   #84 = InterfaceMethodref #209.#306     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n-   #85 = Methodref          #34.#307      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n-   #86 = InterfaceMethodref #209.#308     // java/util/Set.size:()I\n-   #87 = Methodref          #67.#309      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n-   #88 = Methodref          #67.#247      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n-   #89 = InvokeDynamic      #1:#313       // #1:compare:()Ljava/util/Comparator;\n-   #90 = InterfaceMethodref #39.#314      // java/util/List.sort:(Ljava/util/Comparator;)V\n-   #91 = Class              #315          // java/util/HashMap\n-   #92 = Methodref          #91.#241      // java/util/HashMap.\"<init>\":()V\n-   #93 = Class              #316          // java/util/Scanner\n-   #94 = String             #317          // org/apache/commons/codec/language/dmrules.txt\n-   #95 = Methodref          #318.#319     // org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-   #96 = Class              #320          // org/apache/commons/codec/CharEncoding\n-   #97 = String             #321          // UTF-8\n-   #98 = Methodref          #93.#322      // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #99 = Methodref          #3.#323       // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #100 = Methodref          #93.#324      // java/util/Scanner.close:()V\n-  #101 = Class              #325          // java/lang/Throwable\n-  #102 = Methodref          #101.#326     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-  #103 = InvokeDynamic      #2:#330       // #2:accept:()Ljava/util/function/BiConsumer;\n-  #104 = InterfaceMethodref #164.#331     // java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V\n-  #105 = Class              #332          // java/lang/Object\n-  #106 = Class              #333          // org/apache/commons/codec/StringEncoder\n-  #107 = Class              #334          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #108 = Utf8               InnerClasses\n-  #109 = Utf8               Rule\n-  #110 = Utf8               Branch\n-  #111 = Utf8               COMMENT\n-  #112 = Utf8               Ljava/lang/String;\n-  #113 = Utf8               ConstantValue\n-  #114 = Utf8               DOUBLE_QUOTE\n-  #115 = Utf8               MULTILINE_COMMENT_END\n-  #116 = Utf8               MULTILINE_COMMENT_START\n-  #117 = Utf8               RESOURCE_FILE\n-  #118 = Utf8               MAX_LENGTH\n-  #119 = Utf8               I\n-  #120 = Integer            6\n-  #121 = Utf8               RULES\n-  #122 = Utf8               Ljava/util/Map;\n-  #123 = Utf8               Signature\n-  #124 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n-  #125 = Utf8               FOLDINGS\n-  #126 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n-  #127 = Utf8               folding\n-  #128 = Utf8               Z\n-  #129 = Utf8               parseRules\n-  #130 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #131 = Utf8               Code\n-  #132 = Utf8               LineNumberTable\n-  #133 = Utf8               LocalVariableTable\n-  #134 = Utf8               parts\n-  #135 = Utf8               [Ljava/lang/String;\n-  #136 = Utf8               leftCharacter\n-  #137 = Utf8               rightCharacter\n-  #138 = Utf8               pattern\n-  #139 = Utf8               replacement1\n-  #140 = Utf8               replacement2\n-  #141 = Utf8               replacement3\n-  #142 = Utf8               r\n-  #143 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;\n-  #144 = Utf8               patternKey\n-  #145 = Utf8               C\n-  #146 = Utf8               rules\n-  #147 = Utf8               Ljava/util/List;\n-  #148 = Utf8               e\n-  #149 = Utf8               Ljava/lang/IllegalArgumentException;\n-  #150 = Utf8               cmtI\n-  #151 = Utf8               rawLine\n-  #152 = Utf8               line\n-  #153 = Utf8               scanner\n-  #154 = Utf8               Ljava/util/Scanner;\n-  #155 = Utf8               location\n-  #156 = Utf8               ruleMapping\n-  #157 = Utf8               asciiFoldings\n-  #158 = Utf8               currentLine\n-  #159 = Utf8               inMultilineComment\n-  #160 = Utf8               LocalVariableTypeTable\n-  #161 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n-  #162 = Utf8               StackMapTable\n-  #163 = Class              #135          // \"[Ljava/lang/String;\"\n-  #164 = Class              #335          // java/util/Map\n-  #165 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n-  #166 = Utf8               stripQuotes\n-  #167 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #168 = Utf8               str\n-  #169 = Utf8               <init>\n-  #170 = Utf8               ()V\n-  #171 = Utf8               this\n-  #172 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n-  #173 = Utf8               (Z)V\n-  #174 = Utf8               cleanup\n-  #175 = Utf8               character\n-  #176 = Utf8               Ljava/lang/Character;\n-  #177 = Utf8               ch\n-  #178 = Utf8               input\n-  #179 = Utf8               sb\n-  #180 = Utf8               Ljava/lang/StringBuilder;\n-  #181 = Class              #336          // \"[C\"\n-  #182 = Utf8               encode\n-  #183 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #184 = Utf8               obj\n-  #185 = Utf8               Ljava/lang/Object;\n-  #186 = Utf8               Exceptions\n-  #187 = Utf8               source\n-  #188 = Utf8               soundex\n-  #189 = Utf8               branch\n-  #190 = Utf8               branches\n-  #191 = Utf8               index\n-  #192 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n-  #193 = Utf8               nextBranch\n-  #194 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #195 = Utf8               force\n-  #196 = Utf8               nextReplacement\n-  #197 = Utf8               replacements\n-  #198 = Utf8               branchingRequired\n-  #199 = Utf8               rule\n-  #200 = Utf8               inputContext\n-  #201 = Utf8               nextBranches\n-  #202 = Utf8               branching\n-  #203 = Utf8               currentBranches\n-  #204 = Utf8               Ljava/util/Set;\n-  #205 = Utf8               lastChar\n-  #206 = Utf8               result\n-  #207 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n-  #208 = Utf8               Ljava/util/Set<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n-  #209 = Class              #337          // java/util/Set\n-  #210 = Class              #338          // java/util/Iterator\n-  #211 = Utf8               lambda$parseRules$2\n-  #212 = Utf8               (Ljava/lang/Character;)Ljava/util/List;\n-  #213 = Utf8               k\n-  #214 = Utf8               lambda$static$1\n-  #215 = Utf8               (Ljava/lang/Character;Ljava/util/List;)V\n-  #216 = Utf8               v\n-  #217 = Utf8               lambda$static$0\n-  #218 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-  #219 = Utf8               rule1\n-  #220 = Utf8               rule2\n-  #221 = Utf8               <clinit>\n-  #222 = Utf8               SourceFile\n-  #223 = Utf8               DaitchMokotoffSoundex.java\n-  #224 = NameAndType        #339:#340     // hasNextLine:()Z\n-  #225 = NameAndType        #341:#342     // nextLine:()Ljava/lang/String;\n-  #226 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  #227 = Utf8               */\n-  #228 = NameAndType        #343:#344     // endsWith:(Ljava/lang/String;)Z\n-  #229 = Utf8               /*\n-  #230 = NameAndType        #345:#344     // startsWith:(Ljava/lang/String;)Z\n-  #231 = Utf8               //\n-  #232 = NameAndType        #346:#347     // indexOf:(Ljava/lang/String;)I\n-  #233 = NameAndType        #348:#349     // substring:(II)Ljava/lang/String;\n-  #234 = NameAndType        #350:#342     // trim:()Ljava/lang/String;\n-  #235 = NameAndType        #351:#340     // isEmpty:()Z\n-  #236 = Utf8               =\n-  #237 = NameAndType        #352:#353     // contains:(Ljava/lang/CharSequence;)Z\n-  #238 = NameAndType        #354:#355     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #239 = Utf8               java/lang/IllegalArgumentException\n-  #240 = Utf8               java/lang/StringBuilder\n-  #241 = NameAndType        #169:#170     // \"<init>\":()V\n-  #242 = Utf8               Malformed folding statement split into\n-  #243 = NameAndType        #356:#357     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #244 = NameAndType        #356:#358     // append:(I)Ljava/lang/StringBuilder;\n-  #245 = Utf8                parts:\n-  #246 = Utf8                in\n-  #247 = NameAndType        #359:#342     // toString:()Ljava/lang/String;\n-  #248 = NameAndType        #169:#360     // \"<init>\":(Ljava/lang/String;)V\n-  #249 = NameAndType        #361:#362     // length:()I\n-  #250 = Utf8               Malformed folding statement - patterns are not single characters:\n-  #251 = NameAndType        #363:#364     // charAt:(I)C\n-  #252 = NameAndType        #365:#366     // valueOf:(C)Ljava/lang/Character;\n-  #253 = NameAndType        #367:#368     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #254 = Utf8               \\\\s+\n-  #255 = Utf8               Malformed rule statement split into\n-  #256 = NameAndType        #166:#167     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n-  #257 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n-  #258 = NameAndType        #169:#369     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #259 = NameAndType        #370:#371     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #260 = Utf8               BootstrapMethods\n-  #261 = MethodHandle       6:#372        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #262 = MethodType         #183          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #263 = MethodHandle       6:#373        // REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n-  #264 = MethodType         #212          //  (Ljava/lang/Character;)Ljava/util/List;\n-  #265 = NameAndType        #374:#375     // apply:()Ljava/util/function/Function;\n-  #266 = NameAndType        #376:#377     // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-  #267 = Utf8               java/util/List\n-  #268 = NameAndType        #378:#379     // add:(Ljava/lang/Object;)Z\n-  #269 = Utf8               java/lang/IllegalStateException\n-  #270 = Utf8               Problem parsing line \\'\n-  #271 = Utf8               \\' in\n-  #272 = NameAndType        #169:#380     // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #273 = Utf8               \\\"\n-  #274 = NameAndType        #348:#381     // substring:(I)Ljava/lang/String;\n-  #275 = NameAndType        #169:#173     // \"<init>\":(Z)V\n-  #276 = NameAndType        #127:#128     // folding:Z\n-  #277 = NameAndType        #382:#383     // toCharArray:()[C\n-  #278 = NameAndType        #384:#385     // isWhitespace:(C)Z\n-  #279 = NameAndType        #386:#387     // toLowerCase:(C)C\n-  #280 = NameAndType        #125:#122     // FOLDINGS:Ljava/util/Map;\n-  #281 = NameAndType        #388:#183     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #282 = Utf8               java/lang/Character\n-  #283 = NameAndType        #389:#390     // charValue:()C\n-  #284 = NameAndType        #356:#391     // append:(C)Ljava/lang/StringBuilder;\n-  #285 = Utf8               java/lang/String\n-  #286 = Utf8               org/apache/commons/codec/EncoderException\n-  #287 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-  #288 = NameAndType        #182:#167     // encode:(Ljava/lang/String;)Ljava/lang/String;\n-  #289 = NameAndType        #188:#192     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #290 = NameAndType        #174:#167     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n-  #291 = Utf8               java/util/LinkedHashSet\n-  #292 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n-  #293 = NameAndType        #169:#392     // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #294 = NameAndType        #121:#122     // RULES:Ljava/util/Map;\n-  #295 = Utf8               java/util/ArrayList\n-  #296 = Class              #393          // java/util/Collections\n-  #297 = NameAndType        #394:#395     // emptyList:()Ljava/util/List;\n-  #298 = NameAndType        #396:#397     // iterator:()Ljava/util/Iterator;\n-  #299 = NameAndType        #398:#340     // hasNext:()Z\n-  #300 = NameAndType        #399:#400     // next:()Ljava/lang/Object;\n-  #301 = NameAndType        #401:#344     // matches:(Ljava/lang/String;)Z\n-  #302 = NameAndType        #402:#170     // clear:()V\n-  #303 = NameAndType        #403:#192     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n-  #304 = NameAndType        #404:#405     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #305 = NameAndType        #406:#407     // processNextReplacement:(Ljava/lang/String;Z)V\n-  #306 = NameAndType        #408:#409     // addAll:(Ljava/util/Collection;)Z\n-  #307 = NameAndType        #410:#362     // getPatternLength:()I\n-  #308 = NameAndType        #411:#362     // size:()I\n-  #309 = NameAndType        #412:#170     // finish:()V\n-  #310 = MethodType         #413          //  (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #311 = MethodHandle       6:#414        // REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-  #312 = MethodType         #218          //  (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-  #313 = NameAndType        #415:#416     // compare:()Ljava/util/Comparator;\n-  #314 = NameAndType        #417:#418     // sort:(Ljava/util/Comparator;)V\n-  #315 = Utf8               java/util/HashMap\n-  #316 = Utf8               java/util/Scanner\n-  #317 = Utf8               org/apache/commons/codec/language/dmrules.txt\n-  #318 = Class              #419          // org/apache/commons/codec/Resources\n-  #319 = NameAndType        #420:#421     // getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-  #320 = Utf8               org/apache/commons/codec/CharEncoding\n-  #321 = Utf8               UTF-8\n-  #322 = NameAndType        #169:#422     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #323 = NameAndType        #129:#130     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-  #324 = NameAndType        #423:#170     // close:()V\n-  #325 = Utf8               java/lang/Throwable\n-  #326 = NameAndType        #424:#425     // addSuppressed:(Ljava/lang/Throwable;)V\n-  #327 = MethodType         #426          //  (Ljava/lang/Object;Ljava/lang/Object;)V\n-  #328 = MethodHandle       6:#427        // REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n-  #329 = MethodType         #215          //  (Ljava/lang/Character;Ljava/util/List;)V\n-  #330 = NameAndType        #428:#429     // accept:()Ljava/util/function/BiConsumer;\n-  #331 = NameAndType        #430:#431     // forEach:(Ljava/util/function/BiConsumer;)V\n-  #332 = Utf8               java/lang/Object\n-  #333 = Utf8               org/apache/commons/codec/StringEncoder\n-  #334 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  #335 = Utf8               java/util/Map\n-  #336 = Utf8               [C\n-  #337 = Utf8               java/util/Set\n-  #338 = Utf8               java/util/Iterator\n-  #339 = Utf8               hasNextLine\n-  #340 = Utf8               ()Z\n-  #341 = Utf8               nextLine\n-  #342 = Utf8               ()Ljava/lang/String;\n-  #343 = Utf8               endsWith\n-  #344 = Utf8               (Ljava/lang/String;)Z\n-  #345 = Utf8               startsWith\n-  #346 = Utf8               indexOf\n-  #347 = Utf8               (Ljava/lang/String;)I\n-  #348 = Utf8               substring\n-  #349 = Utf8               (II)Ljava/lang/String;\n-  #350 = Utf8               trim\n-  #351 = Utf8               isEmpty\n-  #352 = Utf8               contains\n-  #353 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #354 = Utf8               split\n-  #355 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #356 = Utf8               append\n-  #357 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #358 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #359 = Utf8               toString\n-  #360 = Utf8               (Ljava/lang/String;)V\n-  #361 = Utf8               length\n-  #362 = Utf8               ()I\n-  #363 = Utf8               charAt\n-  #364 = Utf8               (I)C\n-  #365 = Utf8               valueOf\n-  #366 = Utf8               (C)Ljava/lang/Character;\n-  #367 = Utf8               put\n-  #368 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #369 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n-  #370 = Utf8               access$000\n-  #371 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n-  #372 = Methodref          #432.#433     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #373 = Methodref          #3.#434       // org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n-  #374 = Utf8               apply\n-  #375 = Utf8               ()Ljava/util/function/Function;\n-  #376 = Utf8               computeIfAbsent\n-  #377 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-  #378 = Utf8               add\n-  #379 = Utf8               (Ljava/lang/Object;)Z\n-  #380 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #381 = Utf8               (I)Ljava/lang/String;\n-  #382 = Utf8               toCharArray\n-  #383 = Utf8               ()[C\n-  #384 = Utf8               isWhitespace\n-  #385 = Utf8               (C)Z\n-  #386 = Utf8               toLowerCase\n-  #387 = Utf8               (C)C\n-  #388 = Utf8               get\n-  #389 = Utf8               charValue\n-  #390 = Utf8               ()C\n-  #391 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #392 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-  #393 = Utf8               java/util/Collections\n-  #394 = Utf8               emptyList\n-  #395 = Utf8               ()Ljava/util/List;\n-  #396 = Utf8               iterator\n-  #397 = Utf8               ()Ljava/util/Iterator;\n-  #398 = Utf8               hasNext\n-  #399 = Utf8               next\n-  #400 = Utf8               ()Ljava/lang/Object;\n-  #401 = Utf8               matches\n-  #402 = Utf8               clear\n-  #403 = Utf8               getReplacements\n-  #404 = Utf8               createBranch\n-  #405 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n-  #406 = Utf8               processNextReplacement\n-  #407 = Utf8               (Ljava/lang/String;Z)V\n-  #408 = Utf8               addAll\n-  #409 = Utf8               (Ljava/util/Collection;)Z\n-  #410 = Utf8               getPatternLength\n-  #411 = Utf8               size\n-  #412 = Utf8               finish\n-  #413 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n-  #414 = Methodref          #3.#435       // org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-  #415 = Utf8               compare\n-  #416 = Utf8               ()Ljava/util/Comparator;\n-  #417 = Utf8               sort\n-  #418 = Utf8               (Ljava/util/Comparator;)V\n-  #419 = Utf8               org/apache/commons/codec/Resources\n-  #420 = Utf8               getInputStream\n-  #421 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n-  #422 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #423 = Utf8               close\n-  #424 = Utf8               addSuppressed\n-  #425 = Utf8               (Ljava/lang/Throwable;)V\n-  #426 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n-  #427 = Methodref          #3.#436       // org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n-  #428 = Utf8               accept\n-  #429 = Utf8               ()Ljava/util/function/BiConsumer;\n-  #430 = Utf8               forEach\n-  #431 = Utf8               (Ljava/util/function/BiConsumer;)V\n-  #432 = Class              #437          // java/lang/invoke/LambdaMetafactory\n-  #433 = NameAndType        #438:#441     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #434 = NameAndType        #211:#212     // lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n-  #435 = NameAndType        #217:#218     // lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-  #436 = NameAndType        #214:#215     // lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n-  #437 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #438 = Utf8               metafactory\n-  #439 = Class              #443          // java/lang/invoke/MethodHandles$Lookup\n-  #440 = Utf8               Lookup\n-  #441 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #442 = Class              #444          // java/lang/invoke/MethodHandles\n-  #443 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #444 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Methodref          #2.#3         // java/util/Scanner.hasNextLine:()Z\n+    #2 = Class              #4            // java/util/Scanner\n+    #3 = NameAndType        #5:#6         // hasNextLine:()Z\n+    #4 = Utf8               java/util/Scanner\n+    #5 = Utf8               hasNextLine\n+    #6 = Utf8               ()Z\n+    #7 = Methodref          #2.#8         // java/util/Scanner.nextLine:()Ljava/lang/String;\n+    #8 = NameAndType        #9:#10        // nextLine:()Ljava/lang/String;\n+    #9 = Utf8               nextLine\n+   #10 = Utf8               ()Ljava/lang/String;\n+   #11 = Class              #12           // org/apache/commons/codec/language/DaitchMokotoffSoundex\n+   #12 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex\n+   #13 = String             #14           // */\n+   #14 = Utf8               */\n+   #15 = Methodref          #16.#17       // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+   #16 = Class              #18           // java/lang/String\n+   #17 = NameAndType        #19:#20       // endsWith:(Ljava/lang/String;)Z\n+   #18 = Utf8               java/lang/String\n+   #19 = Utf8               endsWith\n+   #20 = Utf8               (Ljava/lang/String;)Z\n+   #21 = String             #22           // /*\n+   #22 = Utf8               /*\n+   #23 = Methodref          #16.#24       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #24 = NameAndType        #25:#20       // startsWith:(Ljava/lang/String;)Z\n+   #25 = Utf8               startsWith\n+   #26 = String             #27           // //\n+   #27 = Utf8               //\n+   #28 = Methodref          #16.#29       // java/lang/String.indexOf:(Ljava/lang/String;)I\n+   #29 = NameAndType        #30:#31       // indexOf:(Ljava/lang/String;)I\n+   #30 = Utf8               indexOf\n+   #31 = Utf8               (Ljava/lang/String;)I\n+   #32 = Methodref          #16.#33       // java/lang/String.substring:(II)Ljava/lang/String;\n+   #33 = NameAndType        #34:#35       // substring:(II)Ljava/lang/String;\n+   #34 = Utf8               substring\n+   #35 = Utf8               (II)Ljava/lang/String;\n+   #36 = Methodref          #16.#37       // java/lang/String.trim:()Ljava/lang/String;\n+   #37 = NameAndType        #38:#10       // trim:()Ljava/lang/String;\n+   #38 = Utf8               trim\n+   #39 = Methodref          #16.#40       // java/lang/String.isEmpty:()Z\n+   #40 = NameAndType        #41:#6        // isEmpty:()Z\n+   #41 = Utf8               isEmpty\n+   #42 = String             #43           // =\n+   #43 = Utf8               =\n+   #44 = Methodref          #16.#45       // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+   #45 = NameAndType        #46:#47       // contains:(Ljava/lang/CharSequence;)Z\n+   #46 = Utf8               contains\n+   #47 = Utf8               (Ljava/lang/CharSequence;)Z\n+   #48 = Methodref          #16.#49       // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #49 = NameAndType        #50:#51       // split:(Ljava/lang/String;)[Ljava/lang/String;\n+   #50 = Utf8               split\n+   #51 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+   #52 = Class              #53           // java/lang/IllegalArgumentException\n+   #53 = Utf8               java/lang/IllegalArgumentException\n+   #54 = Class              #55           // java/lang/StringBuilder\n+   #55 = Utf8               java/lang/StringBuilder\n+   #56 = Methodref          #54.#57       // java/lang/StringBuilder.\"<init>\":()V\n+   #57 = NameAndType        #58:#59       // \"<init>\":()V\n+   #58 = Utf8               <init>\n+   #59 = Utf8               ()V\n+   #60 = String             #61           // Malformed folding statement split into\n+   #61 = Utf8               Malformed folding statement split into\n+   #62 = Methodref          #54.#63       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #63 = NameAndType        #64:#65       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #64 = Utf8               append\n+   #65 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #66 = Methodref          #54.#67       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #67 = NameAndType        #64:#68       // append:(I)Ljava/lang/StringBuilder;\n+   #68 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #69 = String             #70           //  parts:\n+   #70 = Utf8                parts:\n+   #71 = String             #72           //  in\n+   #72 = Utf8                in\n+   #73 = Methodref          #54.#74       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #74 = NameAndType        #75:#10       // toString:()Ljava/lang/String;\n+   #75 = Utf8               toString\n+   #76 = Methodref          #52.#77       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #77 = NameAndType        #58:#78       // \"<init>\":(Ljava/lang/String;)V\n+   #78 = Utf8               (Ljava/lang/String;)V\n+   #79 = Methodref          #16.#80       // java/lang/String.length:()I\n+   #80 = NameAndType        #81:#82       // length:()I\n+   #81 = Utf8               length\n+   #82 = Utf8               ()I\n+   #83 = String             #84           // Malformed folding statement - patterns are not single characters:\n+   #84 = Utf8               Malformed folding statement - patterns are not single characters:\n+   #85 = Methodref          #16.#86       // java/lang/String.charAt:(I)C\n+   #86 = NameAndType        #87:#88       // charAt:(I)C\n+   #87 = Utf8               charAt\n+   #88 = Utf8               (I)C\n+   #89 = Methodref          #90.#91       // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #90 = Class              #92           // java/lang/Character\n+   #91 = NameAndType        #93:#94       // valueOf:(C)Ljava/lang/Character;\n+   #92 = Utf8               java/lang/Character\n+   #93 = Utf8               valueOf\n+   #94 = Utf8               (C)Ljava/lang/Character;\n+   #95 = InterfaceMethodref #96.#97       // java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #96 = Class              #98           // java/util/Map\n+   #97 = NameAndType        #99:#100      // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #98 = Utf8               java/util/Map\n+   #99 = Utf8               put\n+  #100 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #101 = String             #102          // \\\\s+\n+  #102 = Utf8               \\\\s+\n+  #103 = String             #104          // Malformed rule statement split into\n+  #104 = Utf8               Malformed rule statement split into\n+  #105 = Methodref          #11.#106      // org/apache/commons/codec/language/DaitchMokotoffSoundex.stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #106 = NameAndType        #107:#108     // stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+  #107 = Utf8               stripQuotes\n+  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #109 = Class              #110          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+  #110 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+  #111 = Methodref          #109.#112     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #112 = NameAndType        #58:#113      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #113 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+  #114 = Methodref          #109.#115     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #115 = NameAndType        #116:#117     // access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #116 = Utf8               access$000\n+  #117 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+  #118 = InvokeDynamic      #0:#119       // #0:apply:()Ljava/util/function/Function;\n+  #119 = NameAndType        #120:#121     // apply:()Ljava/util/function/Function;\n+  #120 = Utf8               apply\n+  #121 = Utf8               ()Ljava/util/function/Function;\n+  #122 = InterfaceMethodref #96.#123      // java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+  #123 = NameAndType        #124:#125     // computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+  #124 = Utf8               computeIfAbsent\n+  #125 = Utf8               (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+  #126 = Class              #127          // java/util/List\n+  #127 = Utf8               java/util/List\n+  #128 = InterfaceMethodref #126.#129     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #129 = NameAndType        #130:#131     // add:(Ljava/lang/Object;)Z\n+  #130 = Utf8               add\n+  #131 = Utf8               (Ljava/lang/Object;)Z\n+  #132 = Class              #133          // java/lang/IllegalStateException\n+  #133 = Utf8               java/lang/IllegalStateException\n+  #134 = String             #135          // Problem parsing line \\'\n+  #135 = Utf8               Problem parsing line \\'\n+  #136 = String             #137          // \\' in\n+  #137 = Utf8               \\' in\n+  #138 = Methodref          #132.#139     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #139 = NameAndType        #58:#140      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #140 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #141 = String             #142          // \\\"\n+  #142 = Utf8               \\\"\n+  #143 = Methodref          #16.#144      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #144 = NameAndType        #34:#145      // substring:(I)Ljava/lang/String;\n+  #145 = Utf8               (I)Ljava/lang/String;\n+  #146 = Methodref          #11.#147      // org/apache/commons/codec/language/DaitchMokotoffSoundex.\"<init>\":(Z)V\n+  #147 = NameAndType        #58:#148      // \"<init>\":(Z)V\n+  #148 = Utf8               (Z)V\n+  #149 = Methodref          #150.#57      // java/lang/Object.\"<init>\":()V\n+  #150 = Class              #151          // java/lang/Object\n+  #151 = Utf8               java/lang/Object\n+  #152 = Fieldref           #11.#153      // org/apache/commons/codec/language/DaitchMokotoffSoundex.folding:Z\n+  #153 = NameAndType        #154:#155     // folding:Z\n+  #154 = Utf8               folding\n+  #155 = Utf8               Z\n+  #156 = Methodref          #16.#157      // java/lang/String.toCharArray:()[C\n+  #157 = NameAndType        #158:#159     // toCharArray:()[C\n+  #158 = Utf8               toCharArray\n+  #159 = Utf8               ()[C\n+  #160 = Methodref          #90.#161      // java/lang/Character.isWhitespace:(C)Z\n+  #161 = NameAndType        #162:#163     // isWhitespace:(C)Z\n+  #162 = Utf8               isWhitespace\n+  #163 = Utf8               (C)Z\n+  #164 = Methodref          #90.#165      // java/lang/Character.toLowerCase:(C)C\n+  #165 = NameAndType        #166:#167     // toLowerCase:(C)C\n+  #166 = Utf8               toLowerCase\n+  #167 = Utf8               (C)C\n+  #168 = Fieldref           #11.#169      // org/apache/commons/codec/language/DaitchMokotoffSoundex.FOLDINGS:Ljava/util/Map;\n+  #169 = NameAndType        #170:#171     // FOLDINGS:Ljava/util/Map;\n+  #170 = Utf8               FOLDINGS\n+  #171 = Utf8               Ljava/util/Map;\n+  #172 = InterfaceMethodref #96.#173      // java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #173 = NameAndType        #174:#175     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #174 = Utf8               get\n+  #175 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #176 = Methodref          #90.#177      // java/lang/Character.charValue:()C\n+  #177 = NameAndType        #178:#179     // charValue:()C\n+  #178 = Utf8               charValue\n+  #179 = Utf8               ()C\n+  #180 = Methodref          #54.#181      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+  #181 = NameAndType        #64:#182      // append:(C)Ljava/lang/StringBuilder;\n+  #182 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #183 = Class              #184          // org/apache/commons/codec/EncoderException\n+  #184 = Utf8               org/apache/commons/codec/EncoderException\n+  #185 = String             #186          // Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+  #186 = Utf8               Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+  #187 = Methodref          #183.#77      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #188 = Methodref          #11.#189      // org/apache/commons/codec/language/DaitchMokotoffSoundex.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #189 = NameAndType        #190:#108     // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #190 = Utf8               encode\n+  #191 = Methodref          #11.#192      // org/apache/commons/codec/language/DaitchMokotoffSoundex.soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #192 = NameAndType        #193:#194     // soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #193 = Utf8               soundex\n+  #194 = Utf8               (Ljava/lang/String;Z)[Ljava/lang/String;\n+  #195 = Methodref          #11.#196      // org/apache/commons/codec/language/DaitchMokotoffSoundex.cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+  #196 = NameAndType        #197:#108     // cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+  #197 = Utf8               cleanup\n+  #198 = Class              #199          // java/util/LinkedHashSet\n+  #199 = Utf8               java/util/LinkedHashSet\n+  #200 = Methodref          #198.#57      // java/util/LinkedHashSet.\"<init>\":()V\n+  #201 = Class              #202          // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+  #202 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+  #203 = Methodref          #201.#204     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #204 = NameAndType        #58:#205      // \"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #205 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+  #206 = InterfaceMethodref #207.#129     // java/util/Set.add:(Ljava/lang/Object;)Z\n+  #207 = Class              #208          // java/util/Set\n+  #208 = Utf8               java/util/Set\n+  #209 = Fieldref           #11.#210      // org/apache/commons/codec/language/DaitchMokotoffSoundex.RULES:Ljava/util/Map;\n+  #210 = NameAndType        #211:#171     // RULES:Ljava/util/Map;\n+  #211 = Utf8               RULES\n+  #212 = Class              #213          // java/util/ArrayList\n+  #213 = Utf8               java/util/ArrayList\n+  #214 = Methodref          #212.#57      // java/util/ArrayList.\"<init>\":()V\n+  #215 = Methodref          #216.#217     // java/util/Collections.emptyList:()Ljava/util/List;\n+  #216 = Class              #218          // java/util/Collections\n+  #217 = NameAndType        #219:#220     // emptyList:()Ljava/util/List;\n+  #218 = Utf8               java/util/Collections\n+  #219 = Utf8               emptyList\n+  #220 = Utf8               ()Ljava/util/List;\n+  #221 = InterfaceMethodref #126.#222     // java/util/List.iterator:()Ljava/util/Iterator;\n+  #222 = NameAndType        #223:#224     // iterator:()Ljava/util/Iterator;\n+  #223 = Utf8               iterator\n+  #224 = Utf8               ()Ljava/util/Iterator;\n+  #225 = InterfaceMethodref #226.#227     // java/util/Iterator.hasNext:()Z\n+  #226 = Class              #228          // java/util/Iterator\n+  #227 = NameAndType        #229:#6       // hasNext:()Z\n+  #228 = Utf8               java/util/Iterator\n+  #229 = Utf8               hasNext\n+  #230 = InterfaceMethodref #226.#231     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #231 = NameAndType        #232:#233     // next:()Ljava/lang/Object;\n+  #232 = Utf8               next\n+  #233 = Utf8               ()Ljava/lang/Object;\n+  #234 = Methodref          #109.#235     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n+  #235 = NameAndType        #236:#20      // matches:(Ljava/lang/String;)Z\n+  #236 = Utf8               matches\n+  #237 = InterfaceMethodref #126.#238     // java/util/List.clear:()V\n+  #238 = NameAndType        #239:#59      // clear:()V\n+  #239 = Utf8               clear\n+  #240 = Methodref          #109.#241     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #241 = NameAndType        #242:#194     // getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+  #242 = Utf8               getReplacements\n+  #243 = InterfaceMethodref #207.#222     // java/util/Set.iterator:()Ljava/util/Iterator;\n+  #244 = Methodref          #201.#245     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #245 = NameAndType        #246:#247     // createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #246 = Utf8               createBranch\n+  #247 = Utf8               ()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #248 = Methodref          #201.#249     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n+  #249 = NameAndType        #250:#251     // processNextReplacement:(Ljava/lang/String;Z)V\n+  #250 = Utf8               processNextReplacement\n+  #251 = Utf8               (Ljava/lang/String;Z)V\n+  #252 = InterfaceMethodref #207.#238     // java/util/Set.clear:()V\n+  #253 = InterfaceMethodref #207.#254     // java/util/Set.addAll:(Ljava/util/Collection;)Z\n+  #254 = NameAndType        #255:#256     // addAll:(Ljava/util/Collection;)Z\n+  #255 = Utf8               addAll\n+  #256 = Utf8               (Ljava/util/Collection;)Z\n+  #257 = Methodref          #109.#258     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+  #258 = NameAndType        #259:#82      // getPatternLength:()I\n+  #259 = Utf8               getPatternLength\n+  #260 = InterfaceMethodref #207.#261     // java/util/Set.size:()I\n+  #261 = NameAndType        #262:#82      // size:()I\n+  #262 = Utf8               size\n+  #263 = Methodref          #201.#264     // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n+  #264 = NameAndType        #265:#59      // finish:()V\n+  #265 = Utf8               finish\n+  #266 = Methodref          #201.#74      // org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n+  #267 = InvokeDynamic      #1:#268       // #1:compare:()Ljava/util/Comparator;\n+  #268 = NameAndType        #269:#270     // compare:()Ljava/util/Comparator;\n+  #269 = Utf8               compare\n+  #270 = Utf8               ()Ljava/util/Comparator;\n+  #271 = InterfaceMethodref #126.#272     // java/util/List.sort:(Ljava/util/Comparator;)V\n+  #272 = NameAndType        #273:#274     // sort:(Ljava/util/Comparator;)V\n+  #273 = Utf8               sort\n+  #274 = Utf8               (Ljava/util/Comparator;)V\n+  #275 = Class              #276          // java/util/HashMap\n+  #276 = Utf8               java/util/HashMap\n+  #277 = Methodref          #275.#57      // java/util/HashMap.\"<init>\":()V\n+  #278 = String             #279          // org/apache/commons/codec/language/dmrules.txt\n+  #279 = Utf8               org/apache/commons/codec/language/dmrules.txt\n+  #280 = Methodref          #281.#282     // org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #281 = Class              #283          // org/apache/commons/codec/Resources\n+  #282 = NameAndType        #284:#285     // getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+  #283 = Utf8               org/apache/commons/codec/Resources\n+  #284 = Utf8               getInputStream\n+  #285 = Utf8               (Ljava/lang/String;)Ljava/io/InputStream;\n+  #286 = Class              #287          // org/apache/commons/codec/CharEncoding\n+  #287 = Utf8               org/apache/commons/codec/CharEncoding\n+  #288 = String             #289          // UTF-8\n+  #289 = Utf8               UTF-8\n+  #290 = Methodref          #2.#291       // java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #291 = NameAndType        #58:#292      // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #292 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #293 = Methodref          #11.#294      // org/apache/commons/codec/language/DaitchMokotoffSoundex.parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #294 = NameAndType        #295:#296     // parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #295 = Utf8               parseRules\n+  #296 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+  #297 = Methodref          #2.#298       // java/util/Scanner.close:()V\n+  #298 = NameAndType        #299:#59      // close:()V\n+  #299 = Utf8               close\n+  #300 = Class              #301          // java/lang/Throwable\n+  #301 = Utf8               java/lang/Throwable\n+  #302 = Methodref          #300.#303     // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+  #303 = NameAndType        #304:#305     // addSuppressed:(Ljava/lang/Throwable;)V\n+  #304 = Utf8               addSuppressed\n+  #305 = Utf8               (Ljava/lang/Throwable;)V\n+  #306 = InvokeDynamic      #2:#307       // #2:accept:()Ljava/util/function/BiConsumer;\n+  #307 = NameAndType        #308:#309     // accept:()Ljava/util/function/BiConsumer;\n+  #308 = Utf8               accept\n+  #309 = Utf8               ()Ljava/util/function/BiConsumer;\n+  #310 = InterfaceMethodref #96.#311      // java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V\n+  #311 = NameAndType        #312:#313     // forEach:(Ljava/util/function/BiConsumer;)V\n+  #312 = Utf8               forEach\n+  #313 = Utf8               (Ljava/util/function/BiConsumer;)V\n+  #314 = Class              #315          // org/apache/commons/codec/StringEncoder\n+  #315 = Utf8               org/apache/commons/codec/StringEncoder\n+  #316 = Utf8               COMMENT\n+  #317 = Utf8               Ljava/lang/String;\n+  #318 = Utf8               ConstantValue\n+  #319 = Utf8               DOUBLE_QUOTE\n+  #320 = Utf8               MULTILINE_COMMENT_END\n+  #321 = Utf8               MULTILINE_COMMENT_START\n+  #322 = Utf8               RESOURCE_FILE\n+  #323 = Utf8               MAX_LENGTH\n+  #324 = Utf8               I\n+  #325 = Integer            6\n+  #326 = Utf8               Signature\n+  #327 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+  #328 = Utf8               Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n+  #329 = Utf8               Code\n+  #330 = Utf8               LineNumberTable\n+  #331 = Utf8               LocalVariableTable\n+  #332 = Utf8               parts\n+  #333 = Utf8               [Ljava/lang/String;\n+  #334 = Utf8               leftCharacter\n+  #335 = Utf8               rightCharacter\n+  #336 = Utf8               pattern\n+  #337 = Utf8               replacement1\n+  #338 = Utf8               replacement2\n+  #339 = Utf8               replacement3\n+  #340 = Utf8               r\n+  #341 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;\n+  #342 = Utf8               patternKey\n+  #343 = Utf8               C\n+  #344 = Utf8               rules\n+  #345 = Utf8               Ljava/util/List;\n+  #346 = Utf8               e\n+  #347 = Utf8               Ljava/lang/IllegalArgumentException;\n+  #348 = Utf8               cmtI\n+  #349 = Utf8               rawLine\n+  #350 = Utf8               line\n+  #351 = Utf8               scanner\n+  #352 = Utf8               Ljava/util/Scanner;\n+  #353 = Utf8               location\n+  #354 = Utf8               ruleMapping\n+  #355 = Utf8               asciiFoldings\n+  #356 = Utf8               currentLine\n+  #357 = Utf8               inMultilineComment\n+  #358 = Utf8               LocalVariableTypeTable\n+  #359 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;\n+  #360 = Utf8               StackMapTable\n+  #361 = Class              #333          // \"[Ljava/lang/String;\"\n+  #362 = Utf8               (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+  #363 = Utf8               str\n+  #364 = Utf8               this\n+  #365 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n+  #366 = Utf8               character\n+  #367 = Utf8               Ljava/lang/Character;\n+  #368 = Utf8               ch\n+  #369 = Utf8               input\n+  #370 = Utf8               sb\n+  #371 = Utf8               Ljava/lang/StringBuilder;\n+  #372 = Class              #373          // \"[C\"\n+  #373 = Utf8               [C\n+  #374 = Utf8               obj\n+  #375 = Utf8               Ljava/lang/Object;\n+  #376 = Utf8               Exceptions\n+  #377 = Utf8               source\n+  #378 = Utf8               branch\n+  #379 = Utf8               branches\n+  #380 = Utf8               index\n+  #381 = Utf8               nextBranch\n+  #382 = Utf8               Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+  #383 = Utf8               force\n+  #384 = Utf8               nextReplacement\n+  #385 = Utf8               replacements\n+  #386 = Utf8               branchingRequired\n+  #387 = Utf8               rule\n+  #388 = Utf8               inputContext\n+  #389 = Utf8               nextBranches\n+  #390 = Utf8               branching\n+  #391 = Utf8               currentBranches\n+  #392 = Utf8               Ljava/util/Set;\n+  #393 = Utf8               lastChar\n+  #394 = Utf8               result\n+  #395 = Utf8               Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n+  #396 = Utf8               Ljava/util/Set<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;>;\n+  #397 = Utf8               lambda$parseRules$2\n+  #398 = Utf8               (Ljava/lang/Character;)Ljava/util/List;\n+  #399 = Utf8               k\n+  #400 = Utf8               lambda$static$1\n+  #401 = Utf8               (Ljava/lang/Character;Ljava/util/List;)V\n+  #402 = Utf8               v\n+  #403 = Utf8               lambda$static$0\n+  #404 = Utf8               (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+  #405 = Utf8               rule1\n+  #406 = Utf8               rule2\n+  #407 = Utf8               <clinit>\n+  #408 = Utf8               SourceFile\n+  #409 = Utf8               DaitchMokotoffSoundex.java\n+  #410 = Utf8               BootstrapMethods\n+  #411 = MethodHandle       6:#412        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #412 = Methodref          #413.#414     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #413 = Class              #415          // java/lang/invoke/LambdaMetafactory\n+  #414 = NameAndType        #416:#417     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #415 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #416 = Utf8               metafactory\n+  #417 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #418 = MethodType         #175          //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #419 = MethodHandle       6:#420        // REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n+  #420 = Methodref          #11.#421      // org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n+  #421 = NameAndType        #397:#398     // lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n+  #422 = MethodType         #398          //  (Ljava/lang/Character;)Ljava/util/List;\n+  #423 = MethodType         #424          //  (Ljava/lang/Object;Ljava/lang/Object;)I\n+  #424 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)I\n+  #425 = MethodHandle       6:#426        // REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+  #426 = Methodref          #11.#427      // org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+  #427 = NameAndType        #403:#404     // lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+  #428 = MethodType         #404          //  (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+  #429 = MethodType         #430          //  (Ljava/lang/Object;Ljava/lang/Object;)V\n+  #430 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V\n+  #431 = MethodHandle       6:#432        // REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n+  #432 = Methodref          #11.#433      // org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n+  #433 = NameAndType        #400:#401     // lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n+  #434 = MethodType         #401          //  (Ljava/lang/Character;Ljava/util/List;)V\n+  #435 = Utf8               InnerClasses\n+  #436 = Utf8               Rule\n+  #437 = Utf8               Branch\n+  #438 = Class              #439          // org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #439 = Utf8               org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  #440 = Class              #441          // java/lang/invoke/MethodHandles$Lookup\n+  #441 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #442 = Class              #443          // java/lang/invoke/MethodHandles\n+  #443 = Utf8               java/lang/invoke/MethodHandles\n+  #444 = Utf8               Lookup\n {\n   private static final java.lang.String COMMENT = \"//\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String //\n \n   private static final java.lang.String DOUBLE_QUOTE = \"\\\"\";\n@@ -482,20 +482,20 @@\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 6\n \n   private static final java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule>> RULES;\n     descriptor: Ljava/util/Map;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #124                         // Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n+    Signature: #327                         // Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;\n \n   private static final java.util.Map<java.lang.Character, java.lang.Character> FOLDINGS;\n     descriptor: Ljava/util/Map;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n-    Signature: #126                         // Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n+    Signature: #328                         // Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;\n \n   private final boolean folding;\n     descriptor: Z\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private static void parseRules(java.util.Scanner, java.lang.String, java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule>>, java.util.Map<java.lang.Character, java.lang.Character>);\n     descriptor: (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n@@ -507,220 +507,220 @@\n          3: iconst_0\n          4: istore        5\n          6: aload_0\n          7: invokevirtual #1                  // Method java/util/Scanner.hasNextLine:()Z\n         10: ifeq          480\n         13: iinc          4, 1\n         16: aload_0\n-        17: invokevirtual #2                  // Method java/util/Scanner.nextLine:()Ljava/lang/String;\n+        17: invokevirtual #7                  // Method java/util/Scanner.nextLine:()Ljava/lang/String;\n         20: astore        6\n         22: aload         6\n         24: astore        7\n         26: iload         5\n         28: ifeq          47\n         31: aload         7\n-        33: ldc           #4                  // String */\n-        35: invokevirtual #5                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        33: ldc           #13                 // String */\n+        35: invokevirtual #15                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         38: ifeq          6\n         41: iconst_0\n         42: istore        5\n         44: goto          6\n         47: aload         7\n-        49: ldc           #6                  // String /*\n-        51: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        49: ldc           #21                 // String /*\n+        51: invokevirtual #23                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         54: ifeq          63\n         57: iconst_1\n         58: istore        5\n         60: goto          477\n         63: aload         7\n-        65: ldc           #8                  // String //\n-        67: invokevirtual #9                  // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        65: ldc           #26                 // String //\n+        67: invokevirtual #28                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n         70: istore        8\n         72: iload         8\n         74: iflt          87\n         77: aload         7\n         79: iconst_0\n         80: iload         8\n-        82: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        82: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         85: astore        7\n         87: aload         7\n-        89: invokevirtual #11                 // Method java/lang/String.trim:()Ljava/lang/String;\n+        89: invokevirtual #36                 // Method java/lang/String.trim:()Ljava/lang/String;\n         92: astore        7\n         94: aload         7\n-        96: invokevirtual #12                 // Method java/lang/String.isEmpty:()Z\n+        96: invokevirtual #39                 // Method java/lang/String.isEmpty:()Z\n         99: ifeq          105\n        102: goto          6\n        105: aload         7\n-       107: ldc           #13                 // String =\n-       109: invokevirtual #14                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+       107: ldc           #42                 // String =\n+       109: invokevirtual #44                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n        112: ifeq          274\n        115: aload         7\n-       117: ldc           #13                 // String =\n-       119: invokevirtual #15                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+       117: ldc           #42                 // String =\n+       119: invokevirtual #48                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n        122: astore        9\n        124: aload         9\n        126: arraylength\n        127: iconst_2\n        128: if_icmpeq     179\n-       131: new           #16                 // class java/lang/IllegalArgumentException\n+       131: new           #52                 // class java/lang/IllegalArgumentException\n        134: dup\n-       135: new           #17                 // class java/lang/StringBuilder\n+       135: new           #54                 // class java/lang/StringBuilder\n        138: dup\n-       139: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       142: ldc           #19                 // String Malformed folding statement split into\n-       144: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       139: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       142: ldc           #60                 // String Malformed folding statement split into\n+       144: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        147: aload         9\n        149: arraylength\n-       150: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       153: ldc           #22                 // String  parts:\n-       155: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       150: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       153: ldc           #69                 // String  parts:\n+       155: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        158: aload         6\n-       160: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       163: ldc           #23                 // String  in\n-       165: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       160: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       163: ldc           #71                 // String  in\n+       165: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        168: aload_1\n-       169: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       172: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       175: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       169: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       172: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       175: invokespecial #76                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        178: athrow\n        179: aload         9\n        181: iconst_0\n        182: aaload\n        183: astore        10\n        185: aload         9\n        187: iconst_1\n        188: aaload\n        189: astore        11\n        191: aload         10\n-       193: invokevirtual #26                 // Method java/lang/String.length:()I\n+       193: invokevirtual #79                 // Method java/lang/String.length:()I\n        196: iconst_1\n        197: if_icmpne     209\n        200: aload         11\n-       202: invokevirtual #26                 // Method java/lang/String.length:()I\n+       202: invokevirtual #79                 // Method java/lang/String.length:()I\n        205: iconst_1\n        206: if_icmpeq     246\n-       209: new           #16                 // class java/lang/IllegalArgumentException\n+       209: new           #52                 // class java/lang/IllegalArgumentException\n        212: dup\n-       213: new           #17                 // class java/lang/StringBuilder\n+       213: new           #54                 // class java/lang/StringBuilder\n        216: dup\n-       217: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       220: ldc           #27                 // String Malformed folding statement - patterns are not single characters:\n-       222: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       217: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       220: ldc           #83                 // String Malformed folding statement - patterns are not single characters:\n+       222: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        225: aload         6\n-       227: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       230: ldc           #23                 // String  in\n-       232: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       227: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       230: ldc           #71                 // String  in\n+       232: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        235: aload_1\n-       236: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       239: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       242: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       236: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       239: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       242: invokespecial #76                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        245: athrow\n        246: aload_3\n        247: aload         10\n        249: iconst_0\n-       250: invokevirtual #28                 // Method java/lang/String.charAt:(I)C\n-       253: invokestatic  #29                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       250: invokevirtual #85                 // Method java/lang/String.charAt:(I)C\n+       253: invokestatic  #89                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n        256: aload         11\n        258: iconst_0\n-       259: invokevirtual #28                 // Method java/lang/String.charAt:(I)C\n-       262: invokestatic  #29                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-       265: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+       259: invokevirtual #85                 // Method java/lang/String.charAt:(I)C\n+       262: invokestatic  #89                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       265: invokeinterface #95,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n        270: pop\n        271: goto          477\n        274: aload         7\n-       276: ldc           #31                 // String \\\\s+\n-       278: invokevirtual #15                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+       276: ldc           #101                // String \\\\s+\n+       278: invokevirtual #48                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n        281: astore        9\n        283: aload         9\n        285: arraylength\n        286: iconst_4\n        287: if_icmpeq     338\n-       290: new           #16                 // class java/lang/IllegalArgumentException\n+       290: new           #52                 // class java/lang/IllegalArgumentException\n        293: dup\n-       294: new           #17                 // class java/lang/StringBuilder\n+       294: new           #54                 // class java/lang/StringBuilder\n        297: dup\n-       298: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       301: ldc           #32                 // String Malformed rule statement split into\n-       303: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       298: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       301: ldc           #103                // String Malformed rule statement split into\n+       303: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        306: aload         9\n        308: arraylength\n-       309: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       312: ldc           #22                 // String  parts:\n-       314: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       309: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       312: ldc           #69                 // String  parts:\n+       314: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        317: aload         6\n-       319: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       322: ldc           #23                 // String  in\n-       324: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       319: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       322: ldc           #71                 // String  in\n+       324: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        327: aload_1\n-       328: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       331: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       334: invokespecial #25                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       328: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       331: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       334: invokespecial #76                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        337: athrow\n        338: aload         9\n        340: iconst_0\n        341: aaload\n-       342: invokestatic  #33                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       342: invokestatic  #105                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        345: astore        10\n        347: aload         9\n        349: iconst_1\n        350: aaload\n-       351: invokestatic  #33                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       351: invokestatic  #105                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        354: astore        11\n        356: aload         9\n        358: iconst_2\n        359: aaload\n-       360: invokestatic  #33                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       360: invokestatic  #105                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        363: astore        12\n        365: aload         9\n        367: iconst_3\n        368: aaload\n-       369: invokestatic  #33                 // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n+       369: invokestatic  #105                // Method stripQuotes:(Ljava/lang/String;)Ljava/lang/String;\n        372: astore        13\n-       374: new           #34                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+       374: new           #109                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n        377: dup\n        378: aload         10\n        380: aload         11\n        382: aload         12\n        384: aload         13\n-       386: invokespecial #35                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n+       386: invokespecial #111                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.\"<init>\":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V\n        389: astore        14\n        391: aload         14\n-       393: invokestatic  #36                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n+       393: invokestatic  #114                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.access$000:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)Ljava/lang/String;\n        396: iconst_0\n-       397: invokevirtual #28                 // Method java/lang/String.charAt:(I)C\n+       397: invokevirtual #85                 // Method java/lang/String.charAt:(I)C\n        400: istore        15\n        402: aload_2\n        403: iload         15\n-       405: invokestatic  #29                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-       408: invokedynamic #37,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n-       413: invokeinterface #38,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n-       418: checkcast     #39                 // class java/util/List\n+       405: invokestatic  #89                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+       408: invokedynamic #118,  0            // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n+       413: invokeinterface #122,  3          // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;\n+       418: checkcast     #126                // class java/util/List\n        421: astore        16\n        423: aload         16\n        425: aload         14\n-       427: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       427: invokeinterface #128,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        432: pop\n        433: goto          477\n        436: astore        10\n-       438: new           #41                 // class java/lang/IllegalStateException\n+       438: new           #132                // class java/lang/IllegalStateException\n        441: dup\n-       442: new           #17                 // class java/lang/StringBuilder\n+       442: new           #54                 // class java/lang/StringBuilder\n        445: dup\n-       446: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       449: ldc           #42                 // String Problem parsing line \\'\n-       451: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       446: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       449: ldc           #134                // String Problem parsing line \\'\n+       451: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        454: iload         4\n-       456: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       459: ldc           #43                 // String \\' in\n-       461: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       456: invokevirtual #66                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       459: ldc           #136                // String \\' in\n+       461: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        464: aload_1\n-       465: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       468: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       465: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       468: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        471: aload         10\n-       473: invokespecial #44                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       473: invokespecial #138                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n        476: athrow\n        477: goto          6\n        480: return\n       Exception table:\n          from    to  target type\n            338   433   436   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n@@ -823,40 +823,40 @@\n           offset_delta = 97\n           stack = [ class java/lang/IllegalArgumentException ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 40\n           locals = [ class java/util/Scanner, class java/lang/String, class java/util/Map, class java/util/Map, int, int ]\n           stack = []\n         frame_type = 2 /* same */\n-    Signature: #165                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n+    Signature: #362                         // (Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map<Ljava/lang/Character;Ljava/util/List<Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;>;>;Ljava/util/Map<Ljava/lang/Character;Ljava/lang/Character;>;)V\n \n   private static java.lang.String stripQuotes(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: ldc           #45                 // String \\\"\n-         3: invokevirtual #7                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+         1: ldc           #141                // String \\\"\n+         3: invokevirtual #23                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n          6: ifeq          15\n          9: aload_0\n         10: iconst_1\n-        11: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        11: invokevirtual #143                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         14: astore_0\n         15: aload_0\n-        16: ldc           #45                 // String \\\"\n-        18: invokevirtual #5                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        16: ldc           #141                // String \\\"\n+        18: invokevirtual #15                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n         21: ifeq          36\n         24: aload_0\n         25: iconst_0\n         26: aload_0\n-        27: invokevirtual #26                 // Method java/lang/String.length:()I\n+        27: invokevirtual #79                 // Method java/lang/String.length:()I\n         30: iconst_1\n         31: isub\n-        32: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        32: invokevirtual #32                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n         35: astore_0\n         36: aload_0\n         37: areturn\n       LineNumberTable:\n         line 315: 0\n         line 316: 9\n         line 319: 15\n@@ -872,33 +872,33 @@\n   public org.apache.commons.codec.language.DaitchMokotoffSoundex();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokespecial #47                 // Method \"<init>\":(Z)V\n+         2: invokespecial #146                // Method \"<init>\":(Z)V\n          5: return\n       LineNumberTable:\n         line 330: 0\n         line 331: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/codec/language/DaitchMokotoffSoundex;\n \n   public org.apache.commons.codec.language.DaitchMokotoffSoundex(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #48                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #149                // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #49                 // Field folding:Z\n+         6: putfield      #152                // Field folding:Z\n          9: return\n       LineNumberTable:\n         line 343: 0\n         line 344: 4\n         line 345: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -906,62 +906,62 @@\n             0      10     1 folding   Z\n \n   private java.lang.String cleanup(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=8, args_size=2\n-         0: new           #17                 // class java/lang/StringBuilder\n+         0: new           #54                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_2\n          8: aload_1\n-         9: invokevirtual #50                 // Method java/lang/String.toCharArray:()[C\n+         9: invokevirtual #156                // Method java/lang/String.toCharArray:()[C\n         12: astore_3\n         13: aload_3\n         14: arraylength\n         15: istore        4\n         17: iconst_0\n         18: istore        5\n         20: iload         5\n         22: iload         4\n         24: if_icmpge     101\n         27: aload_3\n         28: iload         5\n         30: caload\n         31: istore        6\n         33: iload         6\n-        35: invokestatic  #51                 // Method java/lang/Character.isWhitespace:(C)Z\n+        35: invokestatic  #160                // Method java/lang/Character.isWhitespace:(C)Z\n         38: ifeq          44\n         41: goto          95\n         44: iload         6\n-        46: invokestatic  #52                 // Method java/lang/Character.toLowerCase:(C)C\n+        46: invokestatic  #164                // Method java/lang/Character.toLowerCase:(C)C\n         49: istore        6\n-        51: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n+        51: getstatic     #168                // Field FOLDINGS:Ljava/util/Map;\n         54: iload         6\n-        56: invokestatic  #29                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-        59: invokeinterface #54,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        64: checkcast     #55                 // class java/lang/Character\n+        56: invokestatic  #89                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        59: invokeinterface #172,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        64: checkcast     #90                 // class java/lang/Character\n         67: astore        7\n         69: aload_0\n-        70: getfield      #49                 // Field folding:Z\n+        70: getfield      #152                // Field folding:Z\n         73: ifeq          88\n         76: aload         7\n         78: ifnull        88\n         81: aload         7\n-        83: invokevirtual #56                 // Method java/lang/Character.charValue:()C\n+        83: invokevirtual #176                // Method java/lang/Character.charValue:()C\n         86: istore        6\n         88: aload_2\n         89: iload         6\n-        91: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        91: invokevirtual #180                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         94: pop\n         95: iinc          5, 1\n         98: goto          20\n        101: aload_2\n-       102: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       102: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        105: areturn\n       LineNumberTable:\n         line 358: 0\n         line 359: 8\n         line 360: 33\n         line 361: 41\n         line 364: 44\n@@ -996,25 +996,25 @@\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #58                 // class java/lang/String\n+         1: instanceof    #16                 // class java/lang/String\n          4: ifne          17\n-         7: new           #59                 // class org/apache/commons/codec/EncoderException\n+         7: new           #183                // class org/apache/commons/codec/EncoderException\n         10: dup\n-        11: ldc           #60                 // String Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n-        13: invokespecial #61                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #185                // String Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\n+        13: invokespecial #187                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: checkcast     #58                 // class java/lang/String\n-        22: invokevirtual #62                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        19: checkcast     #16                 // class java/lang/String\n+        22: invokevirtual #188                // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n         25: areturn\n       LineNumberTable:\n         line 394: 0\n         line 395: 7\n         line 398: 17\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1033,15 +1033,15 @@\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: iconst_0\n-         9: invokespecial #63                 // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+         9: invokespecial #191                // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n         12: iconst_0\n         13: aaload\n         14: areturn\n       LineNumberTable:\n         line 414: 0\n         line 415: 4\n         line 417: 6\n@@ -1056,19 +1056,19 @@\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=9, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: invokespecial #63                 // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n+         3: invokespecial #191                // Method soundex:(Ljava/lang/String;Z)[Ljava/lang/String;\n          6: astore_2\n-         7: new           #17                 // class java/lang/StringBuilder\n+         7: new           #54                 // class java/lang/StringBuilder\n         10: dup\n-        11: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        11: invokespecial #56                 // Method java/lang/StringBuilder.\"<init>\":()V\n         14: astore_3\n         15: iconst_0\n         16: istore        4\n         18: aload_2\n         19: astore        5\n         21: aload         5\n         23: arraylength\n@@ -1080,29 +1080,29 @@\n         33: if_icmpge     73\n         36: aload         5\n         38: iload         7\n         40: aaload\n         41: astore        8\n         43: aload_3\n         44: aload         8\n-        46: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         49: pop\n         50: iinc          4, 1\n         53: iload         4\n         55: aload_2\n         56: arraylength\n         57: if_icmpge     67\n         60: aload_3\n         61: bipush        124\n-        63: invokevirtual #57                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: invokevirtual #180                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         66: pop\n         67: iinc          7, 1\n         70: goto          29\n         73: aload_3\n-        74: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        74: invokevirtual #73                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         77: areturn\n       LineNumberTable:\n         line 444: 0\n         line 445: 7\n         line 446: 15\n         line 447: 18\n         line 448: 43\n@@ -1134,110 +1134,110 @@\n       stack=4, locals=23, args_size=3\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokespecial #64                 // Method cleanup:(Ljava/lang/String;)Ljava/lang/String;\n+         8: invokespecial #195                // Method cleanup:(Ljava/lang/String;)Ljava/lang/String;\n         11: astore_3\n-        12: new           #65                 // class java/util/LinkedHashSet\n+        12: new           #198                // class java/util/LinkedHashSet\n         15: dup\n-        16: invokespecial #66                 // Method java/util/LinkedHashSet.\"<init>\":()V\n+        16: invokespecial #200                // Method java/util/LinkedHashSet.\"<init>\":()V\n         19: astore        4\n         21: aload         4\n-        23: new           #67                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+        23: new           #201                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n         26: dup\n         27: aconst_null\n-        28: invokespecial #68                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n-        31: invokeinterface #69,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n+        28: invokespecial #203                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.\"<init>\":(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$1;)V\n+        31: invokeinterface #206,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z\n         36: pop\n         37: iconst_0\n         38: istore        5\n         40: iconst_0\n         41: istore        6\n         43: iload         6\n         45: aload_3\n-        46: invokevirtual #26                 // Method java/lang/String.length:()I\n+        46: invokevirtual #79                 // Method java/lang/String.length:()I\n         49: if_icmpge     406\n         52: aload_3\n         53: iload         6\n-        55: invokevirtual #28                 // Method java/lang/String.charAt:(I)C\n+        55: invokevirtual #85                 // Method java/lang/String.charAt:(I)C\n         58: istore        7\n         60: iload         7\n-        62: invokestatic  #51                 // Method java/lang/Character.isWhitespace:(C)Z\n+        62: invokestatic  #160                // Method java/lang/Character.isWhitespace:(C)Z\n         65: ifeq          71\n         68: goto          400\n         71: aload_3\n         72: iload         6\n-        74: invokevirtual #46                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        74: invokevirtual #143                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         77: astore        8\n-        79: getstatic     #70                 // Field RULES:Ljava/util/Map;\n+        79: getstatic     #209                // Field RULES:Ljava/util/Map;\n         82: iload         7\n-        84: invokestatic  #29                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-        87: invokeinterface #54,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-        92: checkcast     #39                 // class java/util/List\n+        84: invokestatic  #89                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        87: invokeinterface #172,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+        92: checkcast     #126                // class java/util/List\n         95: astore        9\n         97: aload         9\n         99: ifnonnull     105\n        102: goto          400\n        105: iload_2\n        106: ifeq          119\n-       109: new           #71                 // class java/util/ArrayList\n+       109: new           #212                // class java/util/ArrayList\n        112: dup\n-       113: invokespecial #72                 // Method java/util/ArrayList.\"<init>\":()V\n+       113: invokespecial #214                // Method java/util/ArrayList.\"<init>\":()V\n        116: goto          122\n-       119: invokestatic  #73                 // Method java/util/Collections.emptyList:()Ljava/util/List;\n+       119: invokestatic  #215                // Method java/util/Collections.emptyList:()Ljava/util/List;\n        122: astore        10\n        124: aload         9\n-       126: invokeinterface #74,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n+       126: invokeinterface #221,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;\n        131: astore        11\n        133: aload         11\n-       135: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       135: invokeinterface #225,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        140: ifeq          396\n        143: aload         11\n-       145: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       150: checkcast     #34                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n+       145: invokeinterface #230,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       150: checkcast     #109                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule\n        153: astore        12\n        155: aload         12\n        157: aload         8\n-       159: invokevirtual #77                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n+       159: invokevirtual #234                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.matches:(Ljava/lang/String;)Z\n        162: ifeq          393\n        165: iload_2\n        166: ifeq          176\n        169: aload         10\n-       171: invokeinterface #78,  1           // InterfaceMethod java/util/List.clear:()V\n+       171: invokeinterface #237,  1          // InterfaceMethod java/util/List.clear:()V\n        176: aload         12\n        178: aload         8\n        180: iload         5\n        182: ifne          189\n        185: iconst_1\n        186: goto          190\n        189: iconst_0\n-       190: invokevirtual #79                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n+       190: invokevirtual #240                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getReplacements:(Ljava/lang/String;Z)[Ljava/lang/String;\n        193: astore        13\n        195: aload         13\n        197: arraylength\n        198: iconst_1\n        199: if_icmple     210\n        202: iload_2\n        203: ifeq          210\n        206: iconst_1\n        207: goto          211\n        210: iconst_0\n        211: istore        14\n        213: aload         4\n-       215: invokeinterface #80,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       215: invokeinterface #243,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n        220: astore        15\n        222: aload         15\n-       224: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       224: invokeinterface #225,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        229: ifeq          357\n        232: aload         15\n-       234: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       239: checkcast     #67                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+       234: invokeinterface #230,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       239: checkcast     #201                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n        242: astore        16\n        244: aload         13\n        246: astore        17\n        248: aload         17\n        250: arraylength\n        251: istore        18\n        253: iconst_0\n@@ -1248,15 +1248,15 @@\n        263: aload         17\n        265: iload         19\n        267: aaload\n        268: astore        20\n        270: iload         14\n        272: ifeq          283\n        275: aload         16\n-       277: invokevirtual #81                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n+       277: invokevirtual #244                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.createBranch:()Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Branch;\n        280: goto          285\n        283: aload         16\n        285: astore        21\n        287: iload         5\n        289: bipush        109\n        291: if_icmpne     301\n        294: iload         7\n@@ -1271,69 +1271,69 @@\n        315: iconst_1\n        316: goto          320\n        319: iconst_0\n        320: istore        22\n        322: aload         21\n        324: aload         20\n        326: iload         22\n-       328: invokevirtual #82                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n+       328: invokevirtual #248                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.processNextReplacement:(Ljava/lang/String;Z)V\n        331: iload_2\n        332: ifne          338\n        335: goto          354\n        338: aload         10\n        340: aload         21\n-       342: invokeinterface #40,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       342: invokeinterface #128,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        347: pop\n        348: iinc          19, 1\n        351: goto          256\n        354: goto          222\n        357: iload_2\n        358: ifeq          378\n        361: aload         4\n-       363: invokeinterface #83,  1           // InterfaceMethod java/util/Set.clear:()V\n+       363: invokeinterface #252,  1          // InterfaceMethod java/util/Set.clear:()V\n        368: aload         4\n        370: aload         10\n-       372: invokeinterface #84,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n+       372: invokeinterface #253,  2          // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z\n        377: pop\n        378: iload         6\n        380: aload         12\n-       382: invokevirtual #85                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+       382: invokevirtual #257                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n        385: iconst_1\n        386: isub\n        387: iadd\n        388: istore        6\n        390: goto          396\n        393: goto          133\n        396: iload         7\n        398: istore        5\n        400: iinc          6, 1\n        403: goto          43\n        406: aload         4\n-       408: invokeinterface #86,  1           // InterfaceMethod java/util/Set.size:()I\n-       413: anewarray     #58                 // class java/lang/String\n+       408: invokeinterface #260,  1          // InterfaceMethod java/util/Set.size:()I\n+       413: anewarray     #16                 // class java/lang/String\n        416: astore        6\n        418: iconst_0\n        419: istore        7\n        421: aload         4\n-       423: invokeinterface #80,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n+       423: invokeinterface #243,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;\n        428: astore        8\n        430: aload         8\n-       432: invokeinterface #75,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+       432: invokeinterface #225,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n        437: ifeq          473\n        440: aload         8\n-       442: invokeinterface #76,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-       447: checkcast     #67                 // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n+       442: invokeinterface #230,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+       447: checkcast     #201                // class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch\n        450: astore        9\n        452: aload         9\n-       454: invokevirtual #87                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n+       454: invokevirtual #263                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.finish:()V\n        457: aload         6\n        459: iload         7\n        461: iinc          7, 1\n        464: aload         9\n-       466: invokevirtual #88                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n+       466: invokevirtual #266                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch.toString:()Ljava/lang/String;\n        469: aastore\n        470: goto          430\n        473: aload         6\n        475: areturn\n       LineNumberTable:\n         line 467: 0\n         line 468: 4\n@@ -1489,144 +1489,144 @@\n           offset_delta = 42\n \n   private static java.util.List lambda$parseRules$2(java.lang.Character);\n     descriptor: (Ljava/lang/Character;)Ljava/util/List;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #71                 // class java/util/ArrayList\n+         0: new           #212                // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #72                 // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #214                // Method java/util/ArrayList.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 303: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0     k   Ljava/lang/Character;\n \n   private static void lambda$static$1(java.lang.Character, java.util.List);\n     descriptor: (Ljava/lang/Character;Ljava/util/List;)V\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokedynamic #89,  0             // InvokeDynamic #1:compare:()Ljava/util/Comparator;\n-         6: invokeinterface #90,  2           // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V\n+         1: invokedynamic #267,  0            // InvokeDynamic #1:compare:()Ljava/util/Comparator;\n+         6: invokeinterface #271,  2          // InterfaceMethod java/util/List.sort:(Ljava/util/Comparator;)V\n         11: return\n       LineNumberTable:\n         line 236: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     k   Ljava/lang/Character;\n             0      12     1     v   Ljava/util/List;\n \n   private static int lambda$static$0(org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule, org.apache.commons.codec.language.DaitchMokotoffSoundex$Rule);\n     descriptor: (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #85                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+         1: invokevirtual #257                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n          4: aload_0\n-         5: invokevirtual #85                 // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n+         5: invokevirtual #257                // Method org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule.getPatternLength:()I\n          8: isub\n          9: ireturn\n       LineNumberTable:\n         line 236: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 rule1   Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;\n             0      10     1 rule2   Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=0\n-         0: new           #91                 // class java/util/HashMap\n+         0: new           #275                // class java/util/HashMap\n          3: dup\n-         4: invokespecial #92                 // Method java/util/HashMap.\"<init>\":()V\n-         7: putstatic     #70                 // Field RULES:Ljava/util/Map;\n-        10: new           #91                 // class java/util/HashMap\n+         4: invokespecial #277                // Method java/util/HashMap.\"<init>\":()V\n+         7: putstatic     #209                // Field RULES:Ljava/util/Map;\n+        10: new           #275                // class java/util/HashMap\n         13: dup\n-        14: invokespecial #92                 // Method java/util/HashMap.\"<init>\":()V\n-        17: putstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n-        20: new           #93                 // class java/util/Scanner\n+        14: invokespecial #277                // Method java/util/HashMap.\"<init>\":()V\n+        17: putstatic     #168                // Field FOLDINGS:Ljava/util/Map;\n+        20: new           #2                  // class java/util/Scanner\n         23: dup\n-        24: ldc           #94                 // String org/apache/commons/codec/language/dmrules.txt\n-        26: invokestatic  #95                 // Method org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n-        29: ldc           #97                 // String UTF-8\n-        31: invokespecial #98                 // Method java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-        34: astore_0\n-        35: aload_0\n-        36: ldc           #94                 // String org/apache/commons/codec/language/dmrules.txt\n-        38: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-        41: getstatic     #53                 // Field FOLDINGS:Ljava/util/Map;\n-        44: invokestatic  #99                 // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n-        47: aload_0\n-        48: invokevirtual #100                // Method java/util/Scanner.close:()V\n-        51: goto          70\n-        54: astore_1\n-        55: aload_0\n-        56: invokevirtual #100                // Method java/util/Scanner.close:()V\n-        59: goto          68\n-        62: astore_2\n-        63: aload_1\n-        64: aload_2\n-        65: invokevirtual #102                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-        68: aload_1\n-        69: athrow\n-        70: getstatic     #70                 // Field RULES:Ljava/util/Map;\n-        73: invokedynamic #103,  0            // InvokeDynamic #2:accept:()Ljava/util/function/BiConsumer;\n-        78: invokeinterface #104,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V\n-        83: return\n+        24: ldc_w         #278                // String org/apache/commons/codec/language/dmrules.txt\n+        27: invokestatic  #280                // Method org/apache/commons/codec/Resources.getInputStream:(Ljava/lang/String;)Ljava/io/InputStream;\n+        30: ldc_w         #288                // String UTF-8\n+        33: invokespecial #290                // Method java/util/Scanner.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+        36: astore_0\n+        37: aload_0\n+        38: ldc_w         #278                // String org/apache/commons/codec/language/dmrules.txt\n+        41: getstatic     #209                // Field RULES:Ljava/util/Map;\n+        44: getstatic     #168                // Field FOLDINGS:Ljava/util/Map;\n+        47: invokestatic  #293                // Method parseRules:(Ljava/util/Scanner;Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V\n+        50: aload_0\n+        51: invokevirtual #297                // Method java/util/Scanner.close:()V\n+        54: goto          73\n+        57: astore_1\n+        58: aload_0\n+        59: invokevirtual #297                // Method java/util/Scanner.close:()V\n+        62: goto          71\n+        65: astore_2\n+        66: aload_1\n+        67: aload_2\n+        68: invokevirtual #302                // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+        71: aload_1\n+        72: athrow\n+        73: getstatic     #209                // Field RULES:Ljava/util/Map;\n+        76: invokedynamic #306,  0            // InvokeDynamic #2:accept:()Ljava/util/function/BiConsumer;\n+        81: invokeinterface #310,  2          // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V\n+        86: return\n       Exception table:\n          from    to  target type\n-            35    47    54   Class java/lang/Throwable\n-            55    59    62   Class java/lang/Throwable\n+            37    50    57   Class java/lang/Throwable\n+            58    62    65   Class java/lang/Throwable\n       LineNumberTable:\n         line 87: 0\n         line 90: 10\n         line 231: 20\n-        line 232: 35\n-        line 233: 47\n-        line 231: 54\n-        line 236: 70\n-        line 237: 83\n+        line 232: 37\n+        line 233: 50\n+        line 231: 57\n+        line 236: 73\n+        line 237: 86\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           35      35     0 scanner   Ljava/util/Scanner;\n+           37      36     0 scanner   Ljava/util/Scanner;\n       StackMapTable: number_of_entries = 4\n         frame_type = 255 /* full_frame */\n-          offset_delta = 54\n+          offset_delta = 57\n           locals = [ class java/util/Scanner ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 7\n           locals = [ class java/util/Scanner, class java/lang/Throwable ]\n           stack = [ class java/lang/Throwable ]\n         frame_type = 5 /* same */\n         frame_type = 249 /* chop */\n           offset_delta = 1\n }\n SourceFile: \"DaitchMokotoffSoundex.java\"\n-InnerClasses:\n-  static #107;                            // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n-  private static final #109= #34 of #3;   // Rule=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  private static final #110= #67 of #3;   // Branch=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n-  public static final #440= #439 of #442; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #261 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #411 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #262 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #263 REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n-      #264 (Ljava/lang/Character;)Ljava/util/List;\n-  1: #261 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #418 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #419 REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$parseRules$2:(Ljava/lang/Character;)Ljava/util/List;\n+      #422 (Ljava/lang/Character;)Ljava/util/List;\n+  1: #411 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #310 (Ljava/lang/Object;Ljava/lang/Object;)I\n-      #311 REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-      #312 (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n-  2: #261 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #423 (Ljava/lang/Object;Ljava/lang/Object;)I\n+      #425 REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$0:(Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+      #428 (Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;Lorg/apache/commons/codec/language/DaitchMokotoffSoundex$Rule;)I\n+  2: #411 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #327 (Ljava/lang/Object;Ljava/lang/Object;)V\n-      #328 REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n-      #329 (Ljava/lang/Character;Ljava/util/List;)V\n+      #429 (Ljava/lang/Object;Ljava/lang/Object;)V\n+      #431 REF_invokeStatic org/apache/commons/codec/language/DaitchMokotoffSoundex.lambda$static$1:(Ljava/lang/Character;Ljava/util/List;)V\n+      #434 (Ljava/lang/Character;Ljava/util/List;)V\n+InnerClasses:\n+  private static final #436= #109 of #11; // Rule=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Rule of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  private static final #437= #201 of #11; // Branch=class org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch of class org/apache/commons/codec/language/DaitchMokotoffSoundex\n+  static #438;                            // class org/apache/commons/codec/language/DaitchMokotoffSoundex$1\n+  public static final #444= #440 of #442; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
