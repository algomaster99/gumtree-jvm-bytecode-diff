{"diffoscope-json-version": 1, "source1": "first/NotFileFilter.class", "source2": "second/NotFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,76 +1,76 @@\n-  SHA-256 checksum 8c40e93d49e14d9d107b1b58866006e60d675e280b4840ebac658f37540e2b90\n+  SHA-256 checksum b03f8e0fd251cf13a033540a06a5b34ac44c0ec8272ea85712d77b58d047b5ff\n   Compiled from \"NotFileFilter.java\"\n public class org.apache.commons.io.filefilter.NotFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #16                         // org/apache/commons/io/filefilter/NotFileFilter\n-  super_class: #17                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #15                         // org/apache/commons/io/filefilter/NotFileFilter\n+  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 2, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #17.#39        // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #40            // java/lang/IllegalArgumentException\n-   #3 = String             #41            // The filter must not be null\n-   #4 = Methodref          #2.#42         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #5 = Fieldref           #16.#43        // org/apache/commons/io/filefilter/NotFileFilter.filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-   #6 = InterfaceMethodref #31.#44        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n-   #7 = InterfaceMethodref #31.#45        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n-   #8 = Class              #46            // java/lang/StringBuilder\n-   #9 = Methodref          #8.#39         // java/lang/StringBuilder.\"<init>\":()V\n-  #10 = Methodref          #17.#47        // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-  #11 = Methodref          #8.#48         // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #12 = String             #49            // (\n-  #13 = Methodref          #50.#47        // java/lang/Object.toString:()Ljava/lang/String;\n-  #14 = String             #51            // )\n-  #15 = Methodref          #8.#47         // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #16 = Class              #52            // org/apache/commons/io/filefilter/NotFileFilter\n-  #17 = Class              #53            // org/apache/commons/io/filefilter/AbstractFileFilter\n-  #18 = Class              #54            // java/io/Serializable\n-  #19 = Utf8               serialVersionUID\n-  #20 = Utf8               J\n-  #21 = Utf8               ConstantValue\n-  #22 = Long               6131563330944994230l\n-  #24 = Utf8               filter\n-  #25 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #26 = Utf8               <init>\n-  #27 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n-  #28 = Utf8               Code\n-  #29 = Utf8               LineNumberTable\n-  #30 = Utf8               StackMapTable\n-  #31 = Class              #55            // org/apache/commons/io/filefilter/IOFileFilter\n-  #32 = Utf8               accept\n-  #33 = Utf8               (Ljava/io/File;)Z\n-  #34 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-  #35 = Utf8               toString\n-  #36 = Utf8               ()Ljava/lang/String;\n-  #37 = Utf8               SourceFile\n-  #38 = Utf8               NotFileFilter.java\n-  #39 = NameAndType        #26:#56        // \"<init>\":()V\n-  #40 = Utf8               java/lang/IllegalArgumentException\n-  #41 = Utf8               The filter must not be null\n-  #42 = NameAndType        #26:#57        // \"<init>\":(Ljava/lang/String;)V\n-  #43 = NameAndType        #24:#25        // filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-  #44 = NameAndType        #32:#33        // accept:(Ljava/io/File;)Z\n-  #45 = NameAndType        #32:#34        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n-  #46 = Utf8               java/lang/StringBuilder\n-  #47 = NameAndType        #35:#36        // toString:()Ljava/lang/String;\n-  #48 = NameAndType        #58:#59        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #49 = Utf8               (\n-  #50 = Class              #60            // java/lang/Object\n-  #51 = Utf8               )\n-  #52 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n-  #53 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #54 = Utf8               java/io/Serializable\n-  #55 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n-  #56 = Utf8               ()V\n-  #57 = Utf8               (Ljava/lang/String;)V\n-  #58 = Utf8               append\n-  #59 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #60 = Utf8               java/lang/Object\n+   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Class              #8             // java/lang/IllegalArgumentException\n+   #8 = Utf8               java/lang/IllegalArgumentException\n+   #9 = String             #10            // The filter must not be null\n+  #10 = Utf8               The filter must not be null\n+  #11 = Methodref          #7.#12         // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #12 = NameAndType        #5:#13         // \"<init>\":(Ljava/lang/String;)V\n+  #13 = Utf8               (Ljava/lang/String;)V\n+  #14 = Fieldref           #15.#16        // org/apache/commons/io/filefilter/NotFileFilter.filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #15 = Class              #17            // org/apache/commons/io/filefilter/NotFileFilter\n+  #16 = NameAndType        #18:#19        // filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #17 = Utf8               org/apache/commons/io/filefilter/NotFileFilter\n+  #18 = Utf8               filter\n+  #19 = Utf8               Lorg/apache/commons/io/filefilter/IOFileFilter;\n+  #20 = InterfaceMethodref #21.#22        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+  #21 = Class              #23            // org/apache/commons/io/filefilter/IOFileFilter\n+  #22 = NameAndType        #24:#25        // accept:(Ljava/io/File;)Z\n+  #23 = Utf8               org/apache/commons/io/filefilter/IOFileFilter\n+  #24 = Utf8               accept\n+  #25 = Utf8               (Ljava/io/File;)Z\n+  #26 = InterfaceMethodref #21.#27        // org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #27 = NameAndType        #24:#28        // accept:(Ljava/io/File;Ljava/lang/String;)Z\n+  #28 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #29 = Class              #30            // java/lang/StringBuilder\n+  #30 = Utf8               java/lang/StringBuilder\n+  #31 = Methodref          #29.#3         // java/lang/StringBuilder.\"<init>\":()V\n+  #32 = Methodref          #2.#33         // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+  #33 = NameAndType        #34:#35        // toString:()Ljava/lang/String;\n+  #34 = Utf8               toString\n+  #35 = Utf8               ()Ljava/lang/String;\n+  #36 = Methodref          #29.#37        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #37 = NameAndType        #38:#39        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #38 = Utf8               append\n+  #39 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #40 = String             #41            // (\n+  #41 = Utf8               (\n+  #42 = Methodref          #43.#33        // java/lang/Object.toString:()Ljava/lang/String;\n+  #43 = Class              #44            // java/lang/Object\n+  #44 = Utf8               java/lang/Object\n+  #45 = String             #46            // )\n+  #46 = Utf8               )\n+  #47 = Methodref          #29.#33        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #48 = Class              #49            // java/io/Serializable\n+  #49 = Utf8               java/io/Serializable\n+  #50 = Utf8               serialVersionUID\n+  #51 = Utf8               J\n+  #52 = Utf8               ConstantValue\n+  #53 = Long               6131563330944994230l\n+  #55 = Utf8               (Lorg/apache/commons/io/filefilter/IOFileFilter;)V\n+  #56 = Utf8               Code\n+  #57 = Utf8               LineNumberTable\n+  #58 = Utf8               StackMapTable\n+  #59 = Utf8               SourceFile\n+  #60 = Utf8               NotFileFilter.java\n {\n   private static final long serialVersionUID = 6131563330944994230l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 6131563330944994230l\n \n   private final org.apache.commons.io.filefilter.IOFileFilter filter;\n@@ -82,22 +82,22 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ifnonnull     18\n-         8: new           #2                  // class java/lang/IllegalArgumentException\n+         8: new           #7                  // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #3                  // String The filter must not be null\n-        14: invokespecial #4                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #9                  // String The filter must not be null\n+        14: invokespecial #11                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: aload_0\n         19: aload_1\n-        20: putfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        20: putfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n         23: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 4\n         line 43: 8\n         line 45: 18\n         line 46: 23\n@@ -109,17 +109,17 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         1: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          4: aload_1\n-         5: invokeinterface #6,  2            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n+         5: invokeinterface #20,  2           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;)Z\n         10: ifne          17\n         13: iconst_1\n         14: goto          18\n         17: iconst_0\n         18: ireturn\n       LineNumberTable:\n         line 56: 0\n@@ -130,18 +130,18 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+         1: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #7,  3            // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n+         6: invokeinterface #26,  3           // InterfaceMethod org/apache/commons/io/filefilter/IOFileFilter.accept:(Ljava/io/File;Ljava/lang/String;)Z\n         11: ifne          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 68: 0\n@@ -151,27 +151,27 @@\n           stack = [ int ]\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #8                  // class java/lang/StringBuilder\n+         0: new           #29                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #9                  // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #31                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: aload_0\n-         8: invokespecial #10                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-        11: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        14: ldc           #12                 // String (\n-        16: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         8: invokespecial #32                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+        11: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        14: ldc           #40                 // String (\n+        16: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         19: aload_0\n-        20: getfield      #5                  // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n-        23: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;\n-        26: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: ldc           #14                 // String )\n-        31: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        20: getfield      #14                 // Field filter:Lorg/apache/commons/io/filefilter/IOFileFilter;\n+        23: invokevirtual #42                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+        26: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: ldc           #45                 // String )\n+        31: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #47                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         37: areturn\n       LineNumberTable:\n         line 78: 0\n }\n SourceFile: \"NotFileFilter.java\"\n"}]}
