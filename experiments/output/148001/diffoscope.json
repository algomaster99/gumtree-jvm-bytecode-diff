{"diffoscope-json-version": 1, "source1": "first/TreeTable.class", "source2": "second/TreeTable.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,26 +1,24 @@\n \n package com.puppycrawl.tools.checkstyle.gui;\n \n import java.util.ArrayList;\n import javax.swing.JComponent;\n import javax.swing.LookAndFeel;\n import java.util.Iterator;\n-import java.util.stream.Stream;\n import net.sf.saxon.trans.XPathException;\n import java.util.stream.Collector;\n import java.util.stream.Collectors;\n import java.util.ArrayDeque;\n import java.util.function.Function;\n-import java.util.Deque;\n-import java.util.Objects;\n import com.puppycrawl.tools.checkstyle.xpath.ElementNode;\n import com.puppycrawl.tools.checkstyle.xpath.AbstractNode;\n import com.puppycrawl.tools.checkstyle.utils.XpathUtil;\n import com.puppycrawl.tools.checkstyle.xpath.RootNode;\n+import java.util.Deque;\n import java.awt.FontMetrics;\n import com.puppycrawl.tools.checkstyle.xpath.XpathQueryGenerator;\n import com.puppycrawl.tools.checkstyle.api.DetailAST;\n import java.util.Collection;\n import javax.swing.tree.TreePath;\n import javax.swing.Action;\n import java.awt.event.MouseListener;\n@@ -111,22 +109,19 @@\n     }\n     \n     public void selectNodeByXpath() {\n         final DetailAST rootAST = (DetailAST)this.tree.getModel().getRoot();\n         if (rootAST.hasChildren()) {\n             final String xpath = this.xpathEditor.getText();\n             try {\n-                final Stream stream = XpathUtil.getXpathItems(xpath, (AbstractNode)new RootNode(rootAST)).stream();\n-                final Class<ElementNode> obj = ElementNode.class;\n-                Objects.requireNonNull(obj);\n-                final Deque<DetailAST> nodes = (Deque)stream.map(obj::cast).map(ElementNode::getUnderlyingNode).collect(Collectors.toCollection(ArrayDeque::new));\n+                final Deque<DetailAST> nodes = (Deque)XpathUtil.getXpathItems(xpath, (AbstractNode)new RootNode(rootAST)).stream().map(ElementNode.class::cast).map(ElementNode::getUnderlyingNode).collect(Collectors.toCollection(ArrayDeque::new));\n                 this.updateTreeTable(xpath, nodes);\n             }\n             catch (final XPathException exception) {\n-                this.xpathEditor.setText(this.xpathEditor.getText() + \"\\n\" + exception.getMessage());\n+                this.xpathEditor.setText(String.valueOf(this.xpathEditor.getText()) + \"\\n\" + exception.getMessage());\n             }\n         }\n         else {\n             this.xpathEditor.setText(\"No file Opened\");\n         }\n     }\n     \n"}]}
