{"diffoscope-json-version": 1, "source1": "first/DeletingPathVisitor.class", "source2": "second/DeletingPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,208 +1,207 @@\n-  SHA-256 checksum 28898a31619b58b4da9c7ecca459dbcbad748a2a3196c8904fd86e9ef970c099\n+  SHA-256 checksum aed6dd157ecee7a472632a870b321a9290393eb9fb432e00936d70c8aa9f61e4\n   Compiled from \"DeletingPathVisitor.java\"\n public class org.apache.commons.io.file.DeletingPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/DeletingPathVisitor\n-  super_class: #29                        // org/apache/commons/io/file/CountingPathVisitor\n-  interfaces: 0, fields: 1, methods: 10, attributes: 2\n+  super_class: #3                         // org/apache/commons/io/file/CountingPathVisitor\n+  interfaces: 0, fields: 1, methods: 8, attributes: 2\n Constant pool:\n-    #1 = Class              #71           // org/apache/commons/io/file/DeletingPathVisitor\n-    #2 = Methodref          #72.#73       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Class              #74           // java/lang/String\n-    #4 = Methodref          #1.#75        // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-    #5 = Methodref          #72.#76       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #29.#77       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #7 = Methodref          #78.#79       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-    #8 = Class              #31           // \"[Ljava/lang/String;\"\n-    #9 = Fieldref           #1.#80        // org/apache/commons/io/file/DeletingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #10 = Methodref          #81.#82       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n-   #11 = Fieldref           #1.#83        // org/apache/commons/io/file/DeletingPathVisitor.skip:[Ljava/lang/String;\n-   #12 = InterfaceMethodref #25.#84       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #13 = Methodref          #85.#86       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #14 = Methodref          #81.#87       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #15 = Methodref          #88.#89       // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-   #16 = Methodref          #90.#91       // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #17 = Methodref          #29.#92       // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #18 = Methodref          #29.#93       // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #19 = Methodref          #1.#94        // org/apache/commons/io/file/DeletingPathVisitor.accept:(Ljava/nio/file/Path;)Z\n-   #20 = Fieldref           #64.#95       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #21 = Fieldref           #64.#96       // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #22 = Class              #97           // java/nio/file/LinkOption\n-   #23 = Methodref          #90.#98       // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #24 = Methodref          #1.#99        // org/apache/commons/io/file/DeletingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #25 = Class              #100          // java/nio/file/Path\n-   #26 = Methodref          #1.#92        // org/apache/commons/io/file/DeletingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #27 = Methodref          #1.#101       // org/apache/commons/io/file/DeletingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #28 = Methodref          #1.#102       // org/apache/commons/io/file/DeletingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #29 = Class              #103          // org/apache/commons/io/file/CountingPathVisitor\n-   #30 = Utf8               skip\n-   #31 = Utf8               [Ljava/lang/String;\n-   #32 = Utf8               withBigIntegerCounters\n-   #33 = Utf8               ()Lorg/apache/commons/io/file/DeletingPathVisitor;\n-   #34 = Utf8               Code\n-   #35 = Utf8               LineNumberTable\n-   #36 = Utf8               withLongCounters\n-   #37 = Utf8               <init>\n-   #38 = Class              #104          // org/apache/commons/io/file/Counters$PathCounters\n-   #39 = Utf8               PathCounters\n-   #40 = Utf8               InnerClasses\n-   #41 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #42 = Utf8               LocalVariableTable\n-   #43 = Utf8               this\n-   #44 = Utf8               Lorg/apache/commons/io/file/DeletingPathVisitor;\n-   #45 = Utf8               pathCounter\n-   #46 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #47 = Utf8               temp\n-   #48 = Utf8               StackMapTable\n-   #49 = Utf8               accept\n-   #50 = Utf8               (Ljava/nio/file/Path;)Z\n-   #51 = Utf8               path\n-   #52 = Utf8               Ljava/nio/file/Path;\n-   #53 = Utf8               postVisitDirectory\n-   #54 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #55 = Utf8               dir\n-   #56 = Utf8               exc\n-   #57 = Utf8               Ljava/io/IOException;\n-   #58 = Utf8               Exceptions\n-   #59 = Class              #105          // java/io/IOException\n-   #60 = Utf8               preVisitDirectory\n-   #61 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #62 = Utf8               attrs\n-   #63 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #64 = Class              #106          // java/nio/file/FileVisitResult\n-   #65 = Utf8               visitFile\n-   #66 = Utf8               file\n-   #67 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #68 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #69 = Utf8               SourceFile\n-   #70 = Utf8               DeletingPathVisitor.java\n-   #71 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n-   #72 = Class              #107          // org/apache/commons/io/file/Counters\n-   #73 = NameAndType        #108:#109     // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #74 = Utf8               java/lang/String\n-   #75 = NameAndType        #37:#41       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #76 = NameAndType        #110:#109     // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #77 = NameAndType        #37:#111      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #78 = Class              #31           // \"[Ljava/lang/String;\"\n-   #79 = NameAndType        #112:#113     // clone:()Ljava/lang/Object;\n-   #80 = NameAndType        #114:#31      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #81 = Class              #115          // java/util/Arrays\n-   #82 = NameAndType        #116:#117     // sort:([Ljava/lang/Object;)V\n-   #83 = NameAndType        #30:#31       // skip:[Ljava/lang/String;\n-   #84 = NameAndType        #118:#119     // getFileName:()Ljava/nio/file/Path;\n-   #85 = Class              #120          // java/util/Objects\n-   #86 = NameAndType        #121:#122     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #87 = NameAndType        #123:#124     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #88 = Class              #125          // org/apache/commons/io/file/PathUtils\n-   #89 = NameAndType        #126:#50      // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-   #90 = Class              #127          // java/nio/file/Files\n-   #91 = NameAndType        #128:#50      // deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #92 = NameAndType        #53:#54       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #93 = NameAndType        #60:#68       // preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #94 = NameAndType        #49:#50       // accept:(Ljava/nio/file/Path;)Z\n-   #95 = NameAndType        #129:#130     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #96 = NameAndType        #131:#130     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #97 = Utf8               java/nio/file/LinkOption\n-   #98 = NameAndType        #132:#133     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #99 = NameAndType        #134:#135     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-  #100 = Utf8               java/nio/file/Path\n-  #101 = NameAndType        #65:#61       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #102 = NameAndType        #60:#61       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-  #103 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-  #104 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-  #105 = Utf8               java/io/IOException\n-  #106 = Utf8               java/nio/file/FileVisitResult\n-  #107 = Utf8               org/apache/commons/io/file/Counters\n-  #108 = Utf8               bigIntegerPathCounters\n-  #109 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-  #110 = Utf8               longPathCounters\n-  #111 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #112 = Utf8               clone\n-  #113 = Utf8               ()Ljava/lang/Object;\n-  #114 = Utf8               EMPTY_STRING_ARRAY\n-  #115 = Utf8               java/util/Arrays\n-  #116 = Utf8               sort\n-  #117 = Utf8               ([Ljava/lang/Object;)V\n-  #118 = Utf8               getFileName\n-  #119 = Utf8               ()Ljava/nio/file/Path;\n-  #120 = Utf8               java/util/Objects\n-  #121 = Utf8               toString\n-  #122 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #123 = Utf8               binarySearch\n-  #124 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #125 = Utf8               org/apache/commons/io/file/PathUtils\n-  #126 = Utf8               isEmptyDirectory\n-  #127 = Utf8               java/nio/file/Files\n-  #128 = Utf8               deleteIfExists\n-  #129 = Utf8               CONTINUE\n-  #130 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #131 = Utf8               SKIP_SUBTREE\n-  #132 = Utf8               exists\n-  #133 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #134 = Utf8               updateFileCounters\n-  #135 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+    #1 = Class              #2            // org/apache/commons/io/file/DeletingPathVisitor\n+    #2 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n+    #3 = Class              #4            // org/apache/commons/io/file/CountingPathVisitor\n+    #4 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+    #5 = Utf8               skip\n+    #6 = Utf8               [Ljava/lang/String;\n+    #7 = Utf8               withBigIntegerCounters\n+    #8 = Utf8               ()Lorg/apache/commons/io/file/DeletingPathVisitor;\n+    #9 = Utf8               Code\n+   #10 = Methodref          #11.#13       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #11 = Class              #12           // org/apache/commons/io/file/Counters\n+   #12 = Utf8               org/apache/commons/io/file/Counters\n+   #13 = NameAndType        #14:#15       // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #14 = Utf8               bigIntegerPathCounters\n+   #15 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #16 = Class              #17           // java/lang/String\n+   #17 = Utf8               java/lang/String\n+   #18 = Methodref          #1.#19        // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #19 = NameAndType        #20:#21       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #20 = Utf8               <init>\n+   #21 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #22 = Utf8               LineNumberTable\n+   #23 = Utf8               LocalVariableTable\n+   #24 = Utf8               withLongCounters\n+   #25 = Methodref          #11.#26       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #26 = NameAndType        #27:#15       // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #27 = Utf8               longPathCounters\n+   #28 = Methodref          #3.#29        // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #29 = NameAndType        #20:#30       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #30 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #31 = Methodref          #32.#33       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+   #32 = Class              #6            // \"[Ljava/lang/String;\"\n+   #33 = NameAndType        #34:#35       // clone:()Ljava/lang/Object;\n+   #34 = Utf8               clone\n+   #35 = Utf8               ()Ljava/lang/Object;\n+   #36 = Fieldref           #1.#37        // org/apache/commons/io/file/DeletingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #37 = NameAndType        #38:#6        // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #38 = Utf8               EMPTY_STRING_ARRAY\n+   #39 = Methodref          #40.#42       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n+   #40 = Class              #41           // java/util/Arrays\n+   #41 = Utf8               java/util/Arrays\n+   #42 = NameAndType        #43:#44       // sort:([Ljava/lang/Object;)V\n+   #43 = Utf8               sort\n+   #44 = Utf8               ([Ljava/lang/Object;)V\n+   #45 = Fieldref           #1.#46        // org/apache/commons/io/file/DeletingPathVisitor.skip:[Ljava/lang/String;\n+   #46 = NameAndType        #5:#6         // skip:[Ljava/lang/String;\n+   #47 = Utf8               this\n+   #48 = Utf8               Lorg/apache/commons/io/file/DeletingPathVisitor;\n+   #49 = Utf8               pathCounter\n+   #50 = Utf8               Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #51 = Utf8               temp\n+   #52 = Utf8               StackMapTable\n+   #53 = Class              #54           // org/apache/commons/io/file/Counters$PathCounters\n+   #54 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+   #55 = Utf8               accept\n+   #56 = Utf8               (Ljava/nio/file/Path;)Z\n+   #57 = InterfaceMethodref #58.#60       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #58 = Class              #59           // java/nio/file/Path\n+   #59 = Utf8               java/nio/file/Path\n+   #60 = NameAndType        #61:#62       // getFileName:()Ljava/nio/file/Path;\n+   #61 = Utf8               getFileName\n+   #62 = Utf8               ()Ljava/nio/file/Path;\n+   #63 = Methodref          #64.#66       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #64 = Class              #65           // java/util/Objects\n+   #65 = Utf8               java/util/Objects\n+   #66 = NameAndType        #67:#68       // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #67 = Utf8               toString\n+   #68 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #69 = Methodref          #40.#70       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #70 = NameAndType        #71:#72       // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #71 = Utf8               binarySearch\n+   #72 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #73 = Utf8               path\n+   #74 = Utf8               Ljava/nio/file/Path;\n+   #75 = Utf8               postVisitDirectory\n+   #76 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #77 = Utf8               Exceptions\n+   #78 = Class              #79           // java/io/IOException\n+   #79 = Utf8               java/io/IOException\n+   #80 = Methodref          #81.#83       // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+   #81 = Class              #82           // org/apache/commons/io/file/PathUtils\n+   #82 = Utf8               org/apache/commons/io/file/PathUtils\n+   #83 = NameAndType        #84:#56       // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+   #84 = Utf8               isEmptyDirectory\n+   #85 = Methodref          #86.#88       // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #86 = Class              #87           // java/nio/file/Files\n+   #87 = Utf8               java/nio/file/Files\n+   #88 = NameAndType        #89:#56       // deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #89 = Utf8               deleteIfExists\n+   #90 = Methodref          #3.#91        // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #91 = NameAndType        #75:#76       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #92 = Utf8               dir\n+   #93 = Utf8               exc\n+   #94 = Utf8               Ljava/io/IOException;\n+   #95 = Utf8               preVisitDirectory\n+   #96 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #97 = Methodref          #3.#98        // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #98 = NameAndType        #95:#99       // preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #99 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #100 = Methodref          #1.#101       // org/apache/commons/io/file/DeletingPathVisitor.accept:(Ljava/nio/file/Path;)Z\n+  #101 = NameAndType        #55:#56       // accept:(Ljava/nio/file/Path;)Z\n+  #102 = Fieldref           #103.#105     // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #103 = Class              #104          // java/nio/file/FileVisitResult\n+  #104 = Utf8               java/nio/file/FileVisitResult\n+  #105 = NameAndType        #106:#107     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+  #106 = Utf8               CONTINUE\n+  #107 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #108 = Fieldref           #103.#109     // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #109 = NameAndType        #110:#107     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+  #110 = Utf8               SKIP_SUBTREE\n+  #111 = Utf8               attrs\n+  #112 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #113 = Utf8               visitFile\n+  #114 = Class              #115          // java/nio/file/LinkOption\n+  #115 = Utf8               java/nio/file/LinkOption\n+  #116 = Methodref          #86.#117      // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #117 = NameAndType        #118:#119     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #118 = Utf8               exists\n+  #119 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #120 = Methodref          #1.#121       // org/apache/commons/io/file/DeletingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #121 = NameAndType        #122:#123     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #122 = Utf8               updateFileCounters\n+  #123 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+  #124 = Utf8               file\n+  #125 = Methodref          #1.#126       // org/apache/commons/io/file/DeletingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #126 = NameAndType        #95:#96       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               DeletingPathVisitor.java\n+  #129 = Utf8               InnerClasses\n+  #130 = Utf8               PathCounters\n {\n   private final java.lang.String[] skip;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public static org.apache.commons.io.file.DeletingPathVisitor withBigIntegerCounters();\n     descriptor: ()Lorg/apache/commons/io/file/DeletingPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/DeletingPathVisitor\n          3: dup\n-         4: invokestatic  #2                  // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #10                 // Method org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: iconst_0\n-         8: anewarray     #3                  // class java/lang/String\n-        11: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+         8: anewarray     #16                 // class java/lang/String\n+        11: invokespecial #18                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n         14: areturn\n       LineNumberTable:\n         line 44: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public static org.apache.commons.io.file.DeletingPathVisitor withLongCounters();\n     descriptor: ()Lorg/apache/commons/io/file/DeletingPathVisitor;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: new           #1                  // class org/apache/commons/io/file/DeletingPathVisitor\n          3: dup\n-         4: invokestatic  #5                  // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+         4: invokestatic  #25                 // Method org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n          7: iconst_0\n-         8: anewarray     #3                  // class java/lang/String\n-        11: invokespecial #4                  // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+         8: anewarray     #16                 // class java/lang/String\n+        11: invokespecial #18                 // Method \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n         14: areturn\n       LineNumberTable:\n         line 53: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public org.apache.commons.io.file.DeletingPathVisitor(org.apache.commons.io.file.Counters$PathCounters, java.lang.String...);\n     descriptor: (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n     flags: (0x0081) ACC_PUBLIC, ACC_VARARGS\n     Code:\n       stack=2, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #6                  // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+         2: invokespecial #28                 // Method org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n          5: aload_2\n          6: ifnull        19\n          9: aload_2\n-        10: invokevirtual #7                  // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-        13: checkcast     #8                  // class \"[Ljava/lang/String;\"\n+        10: invokevirtual #31                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+        13: checkcast     #32                 // class \"[Ljava/lang/String;\"\n         16: goto          22\n-        19: getstatic     #9                  // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+        19: getstatic     #36                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n         22: astore_3\n         23: aload_3\n-        24: invokestatic  #10                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V\n+        24: invokestatic  #39                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V\n         27: aload_0\n         28: aload_3\n-        29: putfield      #11                 // Field skip:[Ljava/lang/String;\n+        29: putfield      #45                 // Field skip:[Ljava/lang/String;\n         32: return\n       LineNumberTable:\n         line 66: 0\n         line 67: 5\n         line 68: 23\n         line 69: 27\n         line 70: 32\n@@ -222,190 +221,149 @@\n \n   private boolean accept(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #11                 // Field skip:[Ljava/lang/String;\n+         1: getfield      #45                 // Field skip:[Ljava/lang/String;\n          4: aload_1\n-         5: invokeinterface #12,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         5: invokeinterface #57,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n         10: aconst_null\n-        11: invokestatic  #13                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-        14: invokestatic  #14                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-        17: ifge          24\n+        11: invokestatic  #63                 // Method java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+        14: invokestatic  #69                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+        17: ifge          22\n         20: iconst_1\n-        21: goto          25\n-        24: iconst_0\n-        25: ireturn\n+        21: ireturn\n+        22: iconst_0\n+        23: ireturn\n       LineNumberTable:\n         line 79: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      26     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n-            0      26     1  path   Ljava/nio/file/Path;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 24 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      24     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n+            0      24     1  path   Ljava/nio/file/Path;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 22 /* same */\n \n   public java.nio.file.FileVisitResult postVisitDirectory(java.nio.file.Path, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n-         1: invokestatic  #15                 // Method org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+         1: invokestatic  #80                 // Method org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n          4: ifeq          12\n          7: aload_1\n-         8: invokestatic  #16                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+         8: invokestatic  #85                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n         11: pop\n         12: aload_0\n         13: aload_1\n         14: aload_2\n-        15: invokespecial #17                 // Method org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+        15: invokespecial #90                 // Method org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n         18: areturn\n       LineNumberTable:\n         line 84: 0\n         line 85: 7\n         line 87: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n             0      19     1   dir   Ljava/nio/file/Path;\n             0      19     2   exc   Ljava/io/IOException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.nio.file.FileVisitResult preVisitDirectory(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #18                 // Method org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         3: invokespecial #97                 // Method org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          6: pop\n          7: aload_0\n          8: aload_1\n-         9: invokespecial #19                 // Method accept:(Ljava/nio/file/Path;)Z\n+         9: invokespecial #100                // Method accept:(Ljava/nio/file/Path;)Z\n         12: ifeq          21\n-        15: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        15: getstatic     #102                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         18: goto          24\n-        21: getstatic     #21                 // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+        21: getstatic     #108                // Field java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n         24: areturn\n       LineNumberTable:\n         line 92: 0\n         line 93: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      25     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n             0      25     1   dir   Ljava/nio/file/Path;\n             0      25     2 attrs   Ljava/nio/file/attribute/BasicFileAttributes;\n       StackMapTable: number_of_entries = 2\n         frame_type = 21 /* same */\n         frame_type = 66 /* same_locals_1_stack_item */\n           stack = [ class java/nio/file/FileVisitResult ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.nio.file.FileVisitResult visitFile(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #19                 // Method accept:(Ljava/nio/file/Path;)Z\n+         2: invokespecial #100                // Method accept:(Ljava/nio/file/Path;)Z\n          5: ifeq          24\n          8: aload_1\n          9: iconst_0\n-        10: anewarray     #22                 // class java/nio/file/LinkOption\n-        13: invokestatic  #23                 // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+        10: anewarray     #114                // class java/nio/file/LinkOption\n+        13: invokestatic  #116                // Method java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n         16: ifeq          24\n         19: aload_1\n-        20: invokestatic  #16                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+        20: invokestatic  #85                 // Method java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n         23: pop\n         24: aload_0\n         25: aload_1\n         26: aload_2\n-        27: invokevirtual #24                 // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-        30: getstatic     #20                 // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+        27: invokevirtual #120                // Method updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+        30: getstatic     #102                // Field java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n         33: areturn\n       LineNumberTable:\n         line 98: 0\n         line 99: 19\n         line 101: 24\n         line 102: 30\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      34     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n             0      34     1  file   Ljava/nio/file/Path;\n             0      34     2 attrs   Ljava/nio/file/attribute/BasicFileAttributes;\n       StackMapTable: number_of_entries = 1\n         frame_type = 24 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n-\n-  public java.nio.file.FileVisitResult postVisitDirectory(java.lang.Object, java.io.IOException) throws java.io.IOException;\n-    descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=3, locals=3, args_size=3\n-         0: aload_0\n-         1: aload_1\n-         2: checkcast     #25                 // class java/nio/file/Path\n-         5: aload_2\n-         6: invokevirtual #26                 // Method postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-         9: areturn\n-      LineNumberTable:\n-        line 35: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n-    Exceptions:\n-      throws java.io.IOException\n \n-  public java.nio.file.FileVisitResult visitFile(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n+  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n-    Code:\n-      stack=3, locals=3, args_size=3\n-         0: aload_0\n-         1: aload_1\n-         2: checkcast     #25                 // class java/nio/file/Path\n-         5: aload_2\n-         6: invokevirtual #27                 // Method visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-         9: areturn\n-      LineNumberTable:\n-        line 35: 0\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n     Exceptions:\n       throws java.io.IOException\n-\n-  public java.nio.file.FileVisitResult preVisitDirectory(java.lang.Object, java.nio.file.attribute.BasicFileAttributes) throws java.io.IOException;\n-    descriptor: (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #25                 // class java/nio/file/Path\n+         2: checkcast     #58                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #28                 // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #125                // Method preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n-        line 35: 0\n+        line 1: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      10     0  this   Lorg/apache/commons/io/file/DeletingPathVisitor;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"DeletingPathVisitor.java\"\n InnerClasses:\n-  public static #39= #38 of #72;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #130= #53 of #11;         // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
