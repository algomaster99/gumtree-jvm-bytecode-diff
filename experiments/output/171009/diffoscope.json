{"diffoscope-json-version": 1, "source1": "first/SimpleElementValueGen.class", "source2": "second/SimpleElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,253 +1,253 @@\n-  SHA-256 checksum 28f068263aa7a6876703bcbe1f15a10a14f74e0353e9f1f0bf8af6be586fd558\n+  SHA-256 checksum 2e6589f84e7da2377319268cfad5a7a95c70f26ec464fbcdd9f7cfee36493771\n   Compiled from \"SimpleElementValueGen.java\"\n public class org.apache.bcel.generic.SimpleElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #57                         // org/apache/bcel/generic/SimpleElementValueGen\n-  super_class: #32                        // org/apache/bcel/generic/ElementValueGen\n+  this_class: #8                          // org/apache/bcel/generic/SimpleElementValueGen\n+  super_class: #2                         // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 1, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #32.#124      // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #2 = Fieldref           #57.#125      // org/apache/bcel/generic/SimpleElementValueGen.idx:I\n-    #3 = Methodref          #57.#126      // org/apache/bcel/generic/SimpleElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-    #4 = Methodref          #87.#127      // org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-    #5 = Methodref          #87.#128      // org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n-    #6 = Methodref          #87.#129      // org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n-    #7 = Methodref          #87.#130      // org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n-    #8 = Methodref          #87.#131      // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-    #9 = Methodref          #29.#132      // org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n-   #10 = Methodref          #29.#133      // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n-   #11 = Methodref          #29.#134      // org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n-   #12 = Methodref          #29.#135      // org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n-   #13 = Methodref          #29.#136      // org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n-   #14 = Methodref          #29.#137      // org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n-   #15 = Methodref          #29.#138      // org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n-   #16 = Methodref          #29.#139      // org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n-   #17 = Methodref          #29.#140      // org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n-   #18 = Methodref          #29.#141      // org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n-   #19 = Methodref          #29.#142      // org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n-   #20 = Class              #143          // java/lang/IllegalArgumentException\n-   #21 = Class              #144          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#145      // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #146          // SimpleElementValueGen class does not know how to copy this type\n-   #24 = Methodref          #21.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #32.#132      // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #26 = Methodref          #21.#148      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #21.#149      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = Methodref          #20.#150      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Class              #151          // org/apache/bcel/classfile/SimpleElementValue\n-   #30 = Methodref          #87.#152      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #31 = Methodref          #29.#153      // org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n-   #32 = Class              #154          // org/apache/bcel/generic/ElementValueGen\n-   #33 = Class              #155          // java/lang/IllegalStateException\n-   #34 = String             #156          // Dont call getValueString() on a non STRING ElementValue\n-   #35 = Methodref          #33.#150      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #36 = Methodref          #87.#157      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #37 = Class              #158          // org/apache/bcel/classfile/ConstantUtf8\n-   #38 = Methodref          #37.#159      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #39 = Class              #160          // org/apache/bcel/classfile/ConstantInteger\n-   #40 = Methodref          #39.#161      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-   #41 = Methodref          #162.#163     // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #42 = Class              #164          // org/apache/bcel/classfile/ConstantLong\n-   #43 = Methodref          #42.#165      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n-   #44 = Methodref          #166.#167     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #45 = Class              #168          // org/apache/bcel/classfile/ConstantDouble\n-   #46 = Methodref          #45.#169      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n-   #47 = Methodref          #170.#171     // java/lang/Double.toString:(D)Ljava/lang/String;\n-   #48 = Class              #172          // org/apache/bcel/classfile/ConstantFloat\n-   #49 = Methodref          #48.#173      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n-   #50 = Methodref          #174.#175     // java/lang/Float.toString:(F)Ljava/lang/String;\n-   #51 = String             #176          // false\n-   #52 = String             #177          // true\n-   #53 = String             #178          // SimpleElementValueGen class does not know how to stringify type\n-   #54 = Methodref          #179.#180     // java/io/DataOutputStream.writeByte:(I)V\n-   #55 = Methodref          #179.#181     // java/io/DataOutputStream.writeShort:(I)V\n-   #56 = String             #182          // SimpleElementValueGen doesnt know how to write out type\n-   #57 = Class              #183          // org/apache/bcel/generic/SimpleElementValueGen\n-   #58 = Utf8               idx\n-   #59 = Utf8               I\n-   #60 = Utf8               <init>\n-   #61 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #62 = Utf8               Code\n-   #63 = Utf8               LineNumberTable\n-   #64 = Utf8               LocalVariableTable\n-   #65 = Utf8               this\n-   #66 = Utf8               Lorg/apache/bcel/generic/SimpleElementValueGen;\n-   #67 = Utf8               type\n-   #68 = Utf8               cpGen\n-   #69 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #70 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;I)V\n-   #71 = Utf8               value\n-   #72 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;J)V\n-   #73 = Utf8               J\n-   #74 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;D)V\n-   #75 = Utf8               D\n-   #76 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;F)V\n-   #77 = Utf8               F\n-   #78 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;S)V\n-   #79 = Utf8               S\n-   #80 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;B)V\n-   #81 = Utf8               B\n-   #82 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;C)V\n-   #83 = Utf8               C\n-   #84 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #85 = Utf8               Z\n-   #86 = Utf8               StackMapTable\n-   #87 = Class              #184          // org/apache/bcel/generic/ConstantPoolGen\n-   #88 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Ljava/lang/String;)V\n-   #89 = Utf8               Ljava/lang/String;\n-   #90 = Utf8               (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #91 = Utf8               Lorg/apache/bcel/classfile/SimpleElementValue;\n-   #92 = Utf8               cpool\n-   #93 = Utf8               copyPoolEntries\n-   #94 = Utf8               getElementValue\n-   #95 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #96 = Utf8               getIndex\n-   #97 = Utf8               ()I\n-   #98 = Utf8               getValueString\n-   #99 = Utf8               ()Ljava/lang/String;\n-  #100 = Utf8               c\n-  #101 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #102 = Utf8               getValueInt\n-  #103 = Utf8               Lorg/apache/bcel/classfile/ConstantInteger;\n-  #104 = Utf8               stringifyValue\n-  #105 = Utf8               j\n-  #106 = Utf8               Lorg/apache/bcel/classfile/ConstantLong;\n-  #107 = Utf8               d\n-  #108 = Utf8               Lorg/apache/bcel/classfile/ConstantDouble;\n-  #109 = Utf8               f\n-  #110 = Utf8               Lorg/apache/bcel/classfile/ConstantFloat;\n-  #111 = Utf8               s\n-  #112 = Utf8               b\n-  #113 = Utf8               ch\n-  #114 = Utf8               bo\n-  #115 = Utf8               cu8\n-  #116 = Utf8               dump\n-  #117 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #118 = Utf8               dos\n-  #119 = Utf8               Ljava/io/DataOutputStream;\n-  #120 = Utf8               Exceptions\n-  #121 = Class              #185          // java/io/IOException\n-  #122 = Utf8               SourceFile\n-  #123 = Utf8               SimpleElementValueGen.java\n-  #124 = NameAndType        #60:#186      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #125 = NameAndType        #58:#59       // idx:I\n-  #126 = NameAndType        #187:#188     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #127 = NameAndType        #189:#190     // addInteger:(I)I\n-  #128 = NameAndType        #191:#192     // addLong:(J)I\n-  #129 = NameAndType        #193:#194     // addDouble:(D)I\n-  #130 = NameAndType        #195:#196     // addFloat:(F)I\n-  #131 = NameAndType        #197:#198     // addUtf8:(Ljava/lang/String;)I\n-  #132 = NameAndType        #199:#97      // getElementValueType:()I\n-  #133 = NameAndType        #96:#97       // getIndex:()I\n-  #134 = NameAndType        #98:#99       // getValueString:()Ljava/lang/String;\n-  #135 = NameAndType        #102:#97      // getValueInt:()I\n-  #136 = NameAndType        #200:#201     // getValueByte:()B\n-  #137 = NameAndType        #202:#203     // getValueChar:()C\n-  #138 = NameAndType        #204:#205     // getValueLong:()J\n-  #139 = NameAndType        #206:#207     // getValueFloat:()F\n-  #140 = NameAndType        #208:#209     // getValueDouble:()D\n-  #141 = NameAndType        #210:#211     // getValueBoolean:()Z\n-  #142 = NameAndType        #212:#213     // getValueShort:()S\n-  #143 = Utf8               java/lang/IllegalArgumentException\n-  #144 = Utf8               java/lang/StringBuilder\n-  #145 = NameAndType        #60:#214      // \"<init>\":()V\n-  #146 = Utf8               SimpleElementValueGen class does not know how to copy this type\n-  #147 = NameAndType        #215:#216     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #148 = NameAndType        #215:#217     // append:(I)Ljava/lang/StringBuilder;\n-  #149 = NameAndType        #218:#99      // toString:()Ljava/lang/String;\n-  #150 = NameAndType        #60:#219      // \"<init>\":(Ljava/lang/String;)V\n-  #151 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n-  #152 = NameAndType        #187:#220     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #153 = NameAndType        #60:#221      // \"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n-  #154 = Utf8               org/apache/bcel/generic/ElementValueGen\n-  #155 = Utf8               java/lang/IllegalStateException\n-  #156 = Utf8               Dont call getValueString() on a non STRING ElementValue\n-  #157 = NameAndType        #222:#223     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #158 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #159 = NameAndType        #224:#99      // getBytes:()Ljava/lang/String;\n-  #160 = Utf8               org/apache/bcel/classfile/ConstantInteger\n-  #161 = NameAndType        #224:#97      // getBytes:()I\n-  #162 = Class              #225          // java/lang/Integer\n-  #163 = NameAndType        #218:#226     // toString:(I)Ljava/lang/String;\n-  #164 = Utf8               org/apache/bcel/classfile/ConstantLong\n-  #165 = NameAndType        #224:#205     // getBytes:()J\n-  #166 = Class              #227          // java/lang/Long\n-  #167 = NameAndType        #218:#228     // toString:(J)Ljava/lang/String;\n-  #168 = Utf8               org/apache/bcel/classfile/ConstantDouble\n-  #169 = NameAndType        #224:#209     // getBytes:()D\n-  #170 = Class              #229          // java/lang/Double\n-  #171 = NameAndType        #218:#230     // toString:(D)Ljava/lang/String;\n-  #172 = Utf8               org/apache/bcel/classfile/ConstantFloat\n-  #173 = NameAndType        #224:#207     // getBytes:()F\n-  #174 = Class              #231          // java/lang/Float\n-  #175 = NameAndType        #218:#232     // toString:(F)Ljava/lang/String;\n-  #176 = Utf8               false\n-  #177 = Utf8               true\n-  #178 = Utf8               SimpleElementValueGen class does not know how to stringify type\n-  #179 = Class              #233          // java/io/DataOutputStream\n-  #180 = NameAndType        #234:#235     // writeByte:(I)V\n-  #181 = NameAndType        #236:#235     // writeShort:(I)V\n-  #182 = Utf8               SimpleElementValueGen doesnt know how to write out type\n-  #183 = Utf8               org/apache/bcel/generic/SimpleElementValueGen\n-  #184 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #185 = Utf8               java/io/IOException\n-  #186 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #187 = Utf8               getConstantPool\n-  #188 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #189 = Utf8               addInteger\n-  #190 = Utf8               (I)I\n-  #191 = Utf8               addLong\n-  #192 = Utf8               (J)I\n-  #193 = Utf8               addDouble\n-  #194 = Utf8               (D)I\n-  #195 = Utf8               addFloat\n-  #196 = Utf8               (F)I\n-  #197 = Utf8               addUtf8\n-  #198 = Utf8               (Ljava/lang/String;)I\n-  #199 = Utf8               getElementValueType\n-  #200 = Utf8               getValueByte\n-  #201 = Utf8               ()B\n-  #202 = Utf8               getValueChar\n-  #203 = Utf8               ()C\n-  #204 = Utf8               getValueLong\n-  #205 = Utf8               ()J\n-  #206 = Utf8               getValueFloat\n-  #207 = Utf8               ()F\n-  #208 = Utf8               getValueDouble\n-  #209 = Utf8               ()D\n-  #210 = Utf8               getValueBoolean\n-  #211 = Utf8               ()Z\n-  #212 = Utf8               getValueShort\n-  #213 = Utf8               ()S\n-  #214 = Utf8               ()V\n-  #215 = Utf8               append\n-  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #217 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #218 = Utf8               toString\n-  #219 = Utf8               (Ljava/lang/String;)V\n-  #220 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #221 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n-  #222 = Utf8               getConstant\n-  #223 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #224 = Utf8               getBytes\n-  #225 = Utf8               java/lang/Integer\n-  #226 = Utf8               (I)Ljava/lang/String;\n-  #227 = Utf8               java/lang/Long\n-  #228 = Utf8               (J)Ljava/lang/String;\n-  #229 = Utf8               java/lang/Double\n-  #230 = Utf8               (D)Ljava/lang/String;\n-  #231 = Utf8               java/lang/Float\n-  #232 = Utf8               (F)Ljava/lang/String;\n-  #233 = Utf8               java/io/DataOutputStream\n-  #234 = Utf8               writeByte\n-  #235 = Utf8               (I)V\n-  #236 = Utf8               writeShort\n+    #1 = Methodref          #2.#3         // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #2 = Class              #4            // org/apache/bcel/generic/ElementValueGen\n+    #3 = NameAndType        #5:#6         // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #4 = Utf8               org/apache/bcel/generic/ElementValueGen\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #7 = Fieldref           #8.#9         // org/apache/bcel/generic/SimpleElementValueGen.idx:I\n+    #8 = Class              #10           // org/apache/bcel/generic/SimpleElementValueGen\n+    #9 = NameAndType        #11:#12       // idx:I\n+   #10 = Utf8               org/apache/bcel/generic/SimpleElementValueGen\n+   #11 = Utf8               idx\n+   #12 = Utf8               I\n+   #13 = Methodref          #8.#14        // org/apache/bcel/generic/SimpleElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #14 = NameAndType        #15:#16       // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #15 = Utf8               getConstantPool\n+   #16 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #17 = Methodref          #18.#19       // org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+   #18 = Class              #20           // org/apache/bcel/generic/ConstantPoolGen\n+   #19 = NameAndType        #21:#22       // addInteger:(I)I\n+   #20 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+   #21 = Utf8               addInteger\n+   #22 = Utf8               (I)I\n+   #23 = Methodref          #18.#24       // org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n+   #24 = NameAndType        #25:#26       // addLong:(J)I\n+   #25 = Utf8               addLong\n+   #26 = Utf8               (J)I\n+   #27 = Methodref          #18.#28       // org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n+   #28 = NameAndType        #29:#30       // addDouble:(D)I\n+   #29 = Utf8               addDouble\n+   #30 = Utf8               (D)I\n+   #31 = Methodref          #18.#32       // org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n+   #32 = NameAndType        #33:#34       // addFloat:(F)I\n+   #33 = Utf8               addFloat\n+   #34 = Utf8               (F)I\n+   #35 = Methodref          #18.#36       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+   #36 = NameAndType        #37:#38       // addUtf8:(Ljava/lang/String;)I\n+   #37 = Utf8               addUtf8\n+   #38 = Utf8               (Ljava/lang/String;)I\n+   #39 = Methodref          #40.#41       // org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n+   #40 = Class              #42           // org/apache/bcel/classfile/SimpleElementValue\n+   #41 = NameAndType        #43:#44       // getElementValueType:()I\n+   #42 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n+   #43 = Utf8               getElementValueType\n+   #44 = Utf8               ()I\n+   #45 = Methodref          #40.#46       // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n+   #46 = NameAndType        #47:#44       // getIndex:()I\n+   #47 = Utf8               getIndex\n+   #48 = Methodref          #40.#49       // org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n+   #49 = NameAndType        #50:#51       // getValueString:()Ljava/lang/String;\n+   #50 = Utf8               getValueString\n+   #51 = Utf8               ()Ljava/lang/String;\n+   #52 = Methodref          #40.#53       // org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n+   #53 = NameAndType        #54:#44       // getValueInt:()I\n+   #54 = Utf8               getValueInt\n+   #55 = Methodref          #40.#56       // org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n+   #56 = NameAndType        #57:#58       // getValueByte:()B\n+   #57 = Utf8               getValueByte\n+   #58 = Utf8               ()B\n+   #59 = Methodref          #40.#60       // org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n+   #60 = NameAndType        #61:#62       // getValueChar:()C\n+   #61 = Utf8               getValueChar\n+   #62 = Utf8               ()C\n+   #63 = Methodref          #40.#64       // org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n+   #64 = NameAndType        #65:#66       // getValueLong:()J\n+   #65 = Utf8               getValueLong\n+   #66 = Utf8               ()J\n+   #67 = Methodref          #40.#68       // org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n+   #68 = NameAndType        #69:#70       // getValueFloat:()F\n+   #69 = Utf8               getValueFloat\n+   #70 = Utf8               ()F\n+   #71 = Methodref          #40.#72       // org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n+   #72 = NameAndType        #73:#74       // getValueDouble:()D\n+   #73 = Utf8               getValueDouble\n+   #74 = Utf8               ()D\n+   #75 = Methodref          #40.#76       // org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n+   #76 = NameAndType        #77:#78       // getValueBoolean:()Z\n+   #77 = Utf8               getValueBoolean\n+   #78 = Utf8               ()Z\n+   #79 = Methodref          #40.#80       // org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n+   #80 = NameAndType        #81:#82       // getValueShort:()S\n+   #81 = Utf8               getValueShort\n+   #82 = Utf8               ()S\n+   #83 = Class              #84           // java/lang/IllegalArgumentException\n+   #84 = Utf8               java/lang/IllegalArgumentException\n+   #85 = Class              #86           // java/lang/StringBuilder\n+   #86 = Utf8               java/lang/StringBuilder\n+   #87 = Methodref          #85.#88       // java/lang/StringBuilder.\"<init>\":()V\n+   #88 = NameAndType        #5:#89        // \"<init>\":()V\n+   #89 = Utf8               ()V\n+   #90 = String             #91           // SimpleElementValueGen class does not know how to copy this type\n+   #91 = Utf8               SimpleElementValueGen class does not know how to copy this type\n+   #92 = Methodref          #85.#93       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #93 = NameAndType        #94:#95       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #94 = Utf8               append\n+   #95 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = Methodref          #2.#41        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #97 = Methodref          #85.#98       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #98 = NameAndType        #94:#99       // append:(I)Ljava/lang/StringBuilder;\n+   #99 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #100 = Methodref          #85.#101      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #101 = NameAndType        #102:#51      // toString:()Ljava/lang/String;\n+  #102 = Utf8               toString\n+  #103 = Methodref          #83.#104      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #104 = NameAndType        #5:#105       // \"<init>\":(Ljava/lang/String;)V\n+  #105 = Utf8               (Ljava/lang/String;)V\n+  #106 = Methodref          #18.#107      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #107 = NameAndType        #15:#108      // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #108 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #109 = Methodref          #40.#110      // org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #110 = NameAndType        #5:#111       // \"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #111 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #112 = Class              #113          // java/lang/IllegalStateException\n+  #113 = Utf8               java/lang/IllegalStateException\n+  #114 = String             #115          // Dont call getValueString() on a non STRING ElementValue\n+  #115 = Utf8               Dont call getValueString() on a non STRING ElementValue\n+  #116 = Methodref          #112.#104     // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #117 = Methodref          #18.#118      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #118 = NameAndType        #119:#120     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #119 = Utf8               getConstant\n+  #120 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #121 = Class              #122          // org/apache/bcel/classfile/ConstantUtf8\n+  #122 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #123 = Methodref          #121.#124     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+  #124 = NameAndType        #125:#51      // getBytes:()Ljava/lang/String;\n+  #125 = Utf8               getBytes\n+  #126 = Class              #127          // org/apache/bcel/classfile/ConstantInteger\n+  #127 = Utf8               org/apache/bcel/classfile/ConstantInteger\n+  #128 = Methodref          #126.#129     // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+  #129 = NameAndType        #125:#44      // getBytes:()I\n+  #130 = Methodref          #131.#132     // java/lang/Integer.toString:(I)Ljava/lang/String;\n+  #131 = Class              #133          // java/lang/Integer\n+  #132 = NameAndType        #102:#134     // toString:(I)Ljava/lang/String;\n+  #133 = Utf8               java/lang/Integer\n+  #134 = Utf8               (I)Ljava/lang/String;\n+  #135 = Class              #136          // org/apache/bcel/classfile/ConstantLong\n+  #136 = Utf8               org/apache/bcel/classfile/ConstantLong\n+  #137 = Methodref          #135.#138     // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n+  #138 = NameAndType        #125:#66      // getBytes:()J\n+  #139 = Methodref          #140.#141     // java/lang/Long.toString:(J)Ljava/lang/String;\n+  #140 = Class              #142          // java/lang/Long\n+  #141 = NameAndType        #102:#143     // toString:(J)Ljava/lang/String;\n+  #142 = Utf8               java/lang/Long\n+  #143 = Utf8               (J)Ljava/lang/String;\n+  #144 = Class              #145          // org/apache/bcel/classfile/ConstantDouble\n+  #145 = Utf8               org/apache/bcel/classfile/ConstantDouble\n+  #146 = Methodref          #144.#147     // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n+  #147 = NameAndType        #125:#74      // getBytes:()D\n+  #148 = Methodref          #149.#150     // java/lang/Double.toString:(D)Ljava/lang/String;\n+  #149 = Class              #151          // java/lang/Double\n+  #150 = NameAndType        #102:#152     // toString:(D)Ljava/lang/String;\n+  #151 = Utf8               java/lang/Double\n+  #152 = Utf8               (D)Ljava/lang/String;\n+  #153 = Class              #154          // org/apache/bcel/classfile/ConstantFloat\n+  #154 = Utf8               org/apache/bcel/classfile/ConstantFloat\n+  #155 = Methodref          #153.#156     // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n+  #156 = NameAndType        #125:#70      // getBytes:()F\n+  #157 = Methodref          #158.#159     // java/lang/Float.toString:(F)Ljava/lang/String;\n+  #158 = Class              #160          // java/lang/Float\n+  #159 = NameAndType        #102:#161     // toString:(F)Ljava/lang/String;\n+  #160 = Utf8               java/lang/Float\n+  #161 = Utf8               (F)Ljava/lang/String;\n+  #162 = String             #163          // false\n+  #163 = Utf8               false\n+  #164 = String             #165          // true\n+  #165 = Utf8               true\n+  #166 = String             #167          // SimpleElementValueGen class does not know how to stringify type\n+  #167 = Utf8               SimpleElementValueGen class does not know how to stringify type\n+  #168 = Methodref          #169.#170     // java/io/DataOutputStream.writeByte:(I)V\n+  #169 = Class              #171          // java/io/DataOutputStream\n+  #170 = NameAndType        #172:#173     // writeByte:(I)V\n+  #171 = Utf8               java/io/DataOutputStream\n+  #172 = Utf8               writeByte\n+  #173 = Utf8               (I)V\n+  #174 = Methodref          #169.#175     // java/io/DataOutputStream.writeShort:(I)V\n+  #175 = NameAndType        #176:#173     // writeShort:(I)V\n+  #176 = Utf8               writeShort\n+  #177 = String             #178          // SimpleElementValueGen doesnt know how to write out type\n+  #178 = Utf8               SimpleElementValueGen doesnt know how to write out type\n+  #179 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #180 = Utf8               Code\n+  #181 = Utf8               LineNumberTable\n+  #182 = Utf8               LocalVariableTable\n+  #183 = Utf8               this\n+  #184 = Utf8               Lorg/apache/bcel/generic/SimpleElementValueGen;\n+  #185 = Utf8               type\n+  #186 = Utf8               cpGen\n+  #187 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #188 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;I)V\n+  #189 = Utf8               value\n+  #190 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;J)V\n+  #191 = Utf8               J\n+  #192 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;D)V\n+  #193 = Utf8               D\n+  #194 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;F)V\n+  #195 = Utf8               F\n+  #196 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;S)V\n+  #197 = Utf8               S\n+  #198 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;B)V\n+  #199 = Utf8               B\n+  #200 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;C)V\n+  #201 = Utf8               C\n+  #202 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+  #203 = Utf8               Z\n+  #204 = Utf8               StackMapTable\n+  #205 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Ljava/lang/String;)V\n+  #206 = Utf8               Ljava/lang/String;\n+  #207 = Utf8               (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+  #208 = Utf8               Lorg/apache/bcel/classfile/SimpleElementValue;\n+  #209 = Utf8               cpool\n+  #210 = Utf8               copyPoolEntries\n+  #211 = Utf8               getElementValue\n+  #212 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+  #213 = Utf8               c\n+  #214 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #215 = Utf8               Lorg/apache/bcel/classfile/ConstantInteger;\n+  #216 = Utf8               stringifyValue\n+  #217 = Utf8               j\n+  #218 = Utf8               Lorg/apache/bcel/classfile/ConstantLong;\n+  #219 = Utf8               d\n+  #220 = Utf8               Lorg/apache/bcel/classfile/ConstantDouble;\n+  #221 = Utf8               f\n+  #222 = Utf8               Lorg/apache/bcel/classfile/ConstantFloat;\n+  #223 = Utf8               s\n+  #224 = Utf8               b\n+  #225 = Utf8               ch\n+  #226 = Utf8               bo\n+  #227 = Utf8               cu8\n+  #228 = Utf8               dump\n+  #229 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #230 = Utf8               dos\n+  #231 = Utf8               Ljava/io/DataOutputStream;\n+  #232 = Utf8               Exceptions\n+  #233 = Class              #234          // java/io/IOException\n+  #234 = Utf8               java/io/IOException\n+  #235 = Utf8               SourceFile\n+  #236 = Utf8               SimpleElementValueGen.java\n {\n   private int idx;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   protected org.apache.bcel.generic.SimpleElementValueGen(int, int, org.apache.bcel.generic.ConstantPoolGen);\n     descriptor: (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n@@ -256,15 +256,15 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_3\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: iload_2\n-         8: putfield      #2                  // Field idx:I\n+         8: putfield      #7                  // Field idx:I\n         11: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 6\n         line 51: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -280,18 +280,18 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: iload_3\n-        12: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 6\n         line 57: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -307,18 +307,18 @@\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: lload_3\n-        12: invokevirtual #5                  // Method org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #23                 // Method org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 61: 0\n         line 62: 6\n         line 63: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -334,18 +334,18 @@\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: dload_3\n-        12: invokevirtual #6                  // Method org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #27                 // Method org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 6\n         line 69: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -361,18 +361,18 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: fload_3\n-        12: invokevirtual #7                  // Method org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #31                 // Method org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 6\n         line 75: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -388,18 +388,18 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: iload_3\n-        12: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 79: 0\n         line 80: 6\n         line 81: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -415,18 +415,18 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: iload_3\n-        12: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 6\n         line 87: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -442,18 +442,18 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: iload_3\n-        12: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 6\n         line 93: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -471,25 +471,25 @@\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: iload_3\n          7: ifeq          25\n         10: aload_0\n         11: aload_0\n-        12: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        12: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         15: iconst_1\n-        16: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-        19: putfield      #2                  // Field idx:I\n+        16: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+        19: putfield      #7                  // Field idx:I\n         22: goto          37\n         25: aload_0\n         26: aload_0\n-        27: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        27: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         30: iconst_0\n-        31: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-        34: putfield      #2                  // Field idx:I\n+        31: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+        34: putfield      #7                  // Field idx:I\n         37: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 6\n         line 99: 10\n         line 101: 25\n         line 103: 37\n@@ -513,18 +513,18 @@\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: iload_1\n          2: aload_2\n          3: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          6: aload_0\n          7: aload_0\n-         8: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         8: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         11: aload_3\n-        12: invokevirtual #8                  // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-        15: putfield      #2                  // Field idx:I\n+        12: invokevirtual #35                 // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+        15: putfield      #7                  // Field idx:I\n         18: return\n       LineNumberTable:\n         line 107: 0\n         line 108: 6\n         line 109: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -536,26 +536,26 @@\n   public org.apache.bcel.generic.SimpleElementValueGen(org.apache.bcel.classfile.SimpleElementValue, org.apache.bcel.generic.ConstantPoolGen, boolean);\n     descriptor: (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #9                  // Method org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n+         2: invokevirtual #39                 // Method org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n          5: aload_2\n          6: invokespecial #1                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          9: iload_3\n         10: ifne          24\n         13: aload_0\n         14: aload_1\n-        15: invokevirtual #10                 // Method org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n-        18: putfield      #2                  // Field idx:I\n+        15: invokevirtual #45                 // Method org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n+        18: putfield      #7                  // Field idx:I\n         21: goto          293\n         24: aload_1\n-        25: invokevirtual #9                  // Method org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n+        25: invokevirtual #39                 // Method org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n         28: lookupswitch  { // 9\n                       66: 142\n                       67: 157\n                       68: 202\n                       70: 187\n                       73: 127\n                       74: 172\n@@ -563,94 +563,94 @@\n                       90: 217\n                      115: 112\n                  default: 263\n             }\n        112: aload_0\n        113: aload_2\n        114: aload_1\n-       115: invokevirtual #11                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n-       118: invokevirtual #8                  // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-       121: putfield      #2                  // Field idx:I\n+       115: invokevirtual #48                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n+       118: invokevirtual #35                 // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+       121: putfield      #7                  // Field idx:I\n        124: goto          293\n        127: aload_0\n        128: aload_2\n        129: aload_1\n-       130: invokevirtual #12                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n-       133: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-       136: putfield      #2                  // Field idx:I\n+       130: invokevirtual #52                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n+       133: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+       136: putfield      #7                  // Field idx:I\n        139: goto          293\n        142: aload_0\n        143: aload_2\n        144: aload_1\n-       145: invokevirtual #13                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n-       148: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-       151: putfield      #2                  // Field idx:I\n+       145: invokevirtual #55                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n+       148: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+       151: putfield      #7                  // Field idx:I\n        154: goto          293\n        157: aload_0\n        158: aload_2\n        159: aload_1\n-       160: invokevirtual #14                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n-       163: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-       166: putfield      #2                  // Field idx:I\n+       160: invokevirtual #59                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n+       163: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+       166: putfield      #7                  // Field idx:I\n        169: goto          293\n        172: aload_0\n        173: aload_2\n        174: aload_1\n-       175: invokevirtual #15                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n-       178: invokevirtual #5                  // Method org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n-       181: putfield      #2                  // Field idx:I\n+       175: invokevirtual #63                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n+       178: invokevirtual #23                 // Method org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n+       181: putfield      #7                  // Field idx:I\n        184: goto          293\n        187: aload_0\n        188: aload_2\n        189: aload_1\n-       190: invokevirtual #16                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n-       193: invokevirtual #7                  // Method org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n-       196: putfield      #2                  // Field idx:I\n+       190: invokevirtual #67                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n+       193: invokevirtual #31                 // Method org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n+       196: putfield      #7                  // Field idx:I\n        199: goto          293\n        202: aload_0\n        203: aload_2\n        204: aload_1\n-       205: invokevirtual #17                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n-       208: invokevirtual #6                  // Method org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n-       211: putfield      #2                  // Field idx:I\n+       205: invokevirtual #71                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n+       208: invokevirtual #27                 // Method org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n+       211: putfield      #7                  // Field idx:I\n        214: goto          293\n        217: aload_1\n-       218: invokevirtual #18                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n+       218: invokevirtual #75                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n        221: ifeq          236\n        224: aload_0\n        225: aload_2\n        226: iconst_1\n-       227: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-       230: putfield      #2                  // Field idx:I\n+       227: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+       230: putfield      #7                  // Field idx:I\n        233: goto          293\n        236: aload_0\n        237: aload_2\n        238: iconst_0\n-       239: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-       242: putfield      #2                  // Field idx:I\n+       239: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+       242: putfield      #7                  // Field idx:I\n        245: goto          293\n        248: aload_0\n        249: aload_2\n        250: aload_1\n-       251: invokevirtual #19                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n-       254: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-       257: putfield      #2                  // Field idx:I\n+       251: invokevirtual #79                 // Method org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n+       254: invokevirtual #17                 // Method org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+       257: putfield      #7                  // Field idx:I\n        260: goto          293\n-       263: new           #20                 // class java/lang/IllegalArgumentException\n+       263: new           #83                 // class java/lang/IllegalArgumentException\n        266: dup\n-       267: new           #21                 // class java/lang/StringBuilder\n+       267: new           #85                 // class java/lang/StringBuilder\n        270: dup\n-       271: invokespecial #22                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       274: ldc           #23                 // String SimpleElementValueGen class does not know how to copy this type\n-       276: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       271: invokespecial #87                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       274: ldc           #90                 // String SimpleElementValueGen class does not know how to copy this type\n+       276: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        279: aload_0\n-       280: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-       283: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       286: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       289: invokespecial #28                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       280: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+       283: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       286: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       289: invokespecial #103                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        292: athrow\n        293: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 9\n         line 124: 13\n         line 128: 24\n@@ -703,68 +703,68 @@\n         frame_type = 29 /* same */\n \n   public org.apache.bcel.classfile.ElementValue getElementValue();\n     descriptor: ()Lorg/apache/bcel/classfile/ElementValue;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n-         0: new           #29                 // class org/apache/bcel/classfile/SimpleElementValue\n+         0: new           #40                 // class org/apache/bcel/classfile/SimpleElementValue\n          3: dup\n          4: aload_0\n-         5: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         5: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n          8: aload_0\n-         9: getfield      #2                  // Field idx:I\n+         9: getfield      #7                  // Field idx:I\n         12: aload_0\n-        13: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-        16: invokevirtual #30                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-        19: invokespecial #31                 // Method org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+        13: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        16: invokevirtual #106                // Method org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+        19: invokespecial #109                // Method org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n         22: areturn\n       LineNumberTable:\n         line 177: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      23     0  this   Lorg/apache/bcel/generic/SimpleElementValueGen;\n \n   public int getIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field idx:I\n+         1: getfield      #7                  // Field idx:I\n          4: ireturn\n       LineNumberTable:\n         line 182: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/generic/SimpleElementValueGen;\n \n   public java.lang.String getValueString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         1: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n          4: bipush        115\n          6: if_icmpeq     19\n-         9: new           #33                 // class java/lang/IllegalStateException\n+         9: new           #112                // class java/lang/IllegalStateException\n         12: dup\n-        13: ldc           #34                 // String Dont call getValueString() on a non STRING ElementValue\n-        15: invokespecial #35                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #114                // String Dont call getValueString() on a non STRING ElementValue\n+        15: invokespecial #116                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_0\n-        20: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        20: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         23: aload_0\n-        24: getfield      #2                  // Field idx:I\n-        27: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        30: checkcast     #37                 // class org/apache/bcel/classfile/ConstantUtf8\n+        24: getfield      #7                  // Field idx:I\n+        27: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        30: checkcast     #121                // class org/apache/bcel/classfile/ConstantUtf8\n         33: astore_1\n         34: aload_1\n-        35: invokevirtual #38                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+        35: invokevirtual #123                // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n         38: areturn\n       LineNumberTable:\n         line 187: 0\n         line 188: 9\n         line 191: 19\n         line 192: 34\n       LocalVariableTable:\n@@ -776,31 +776,31 @@\n \n   public int getValueInt();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         1: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n          4: bipush        73\n          6: if_icmpeq     19\n-         9: new           #33                 // class java/lang/IllegalStateException\n+         9: new           #112                // class java/lang/IllegalStateException\n         12: dup\n-        13: ldc           #34                 // String Dont call getValueString() on a non STRING ElementValue\n-        15: invokespecial #35                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        13: ldc           #114                // String Dont call getValueString() on a non STRING ElementValue\n+        15: invokespecial #116                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         18: athrow\n         19: aload_0\n-        20: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        20: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         23: aload_0\n-        24: getfield      #2                  // Field idx:I\n-        27: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        30: checkcast     #39                 // class org/apache/bcel/classfile/ConstantInteger\n+        24: getfield      #7                  // Field idx:I\n+        27: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        30: checkcast     #126                // class org/apache/bcel/classfile/ConstantInteger\n         33: astore_1\n         34: aload_1\n-        35: invokevirtual #40                 // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+        35: invokevirtual #128                // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n         38: ireturn\n       LineNumberTable:\n         line 197: 0\n         line 198: 9\n         line 201: 19\n         line 202: 34\n       LocalVariableTable:\n@@ -812,140 +812,140 @@\n \n   public java.lang.String stringifyValue();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=10, args_size=1\n          0: aload_0\n-         1: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         1: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n          4: lookupswitch  { // 9\n                       66: 207\n                       67: 232\n                       68: 134\n                       70: 157\n                       73: 88\n                       74: 111\n                       83: 182\n                       90: 257\n                      115: 287\n                  default: 309\n             }\n         88: aload_0\n-        89: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        89: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n         92: aload_0\n-        93: getfield      #2                  // Field idx:I\n-        96: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        99: checkcast     #39                 // class org/apache/bcel/classfile/ConstantInteger\n+        93: getfield      #7                  // Field idx:I\n+        96: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        99: checkcast     #126                // class org/apache/bcel/classfile/ConstantInteger\n        102: astore_1\n        103: aload_1\n-       104: invokevirtual #40                 // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-       107: invokestatic  #41                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+       104: invokevirtual #128                // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+       107: invokestatic  #130                // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n        110: areturn\n        111: aload_0\n-       112: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       112: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        115: aload_0\n-       116: getfield      #2                  // Field idx:I\n-       119: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       122: checkcast     #42                 // class org/apache/bcel/classfile/ConstantLong\n+       116: getfield      #7                  // Field idx:I\n+       119: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       122: checkcast     #135                // class org/apache/bcel/classfile/ConstantLong\n        125: astore_2\n        126: aload_2\n-       127: invokevirtual #43                 // Method org/apache/bcel/classfile/ConstantLong.getBytes:()J\n-       130: invokestatic  #44                 // Method java/lang/Long.toString:(J)Ljava/lang/String;\n+       127: invokevirtual #137                // Method org/apache/bcel/classfile/ConstantLong.getBytes:()J\n+       130: invokestatic  #139                // Method java/lang/Long.toString:(J)Ljava/lang/String;\n        133: areturn\n        134: aload_0\n-       135: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       135: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        138: aload_0\n-       139: getfield      #2                  // Field idx:I\n-       142: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       145: checkcast     #45                 // class org/apache/bcel/classfile/ConstantDouble\n+       139: getfield      #7                  // Field idx:I\n+       142: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       145: checkcast     #144                // class org/apache/bcel/classfile/ConstantDouble\n        148: astore_3\n        149: aload_3\n-       150: invokevirtual #46                 // Method org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n-       153: invokestatic  #47                 // Method java/lang/Double.toString:(D)Ljava/lang/String;\n+       150: invokevirtual #146                // Method org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n+       153: invokestatic  #148                // Method java/lang/Double.toString:(D)Ljava/lang/String;\n        156: areturn\n        157: aload_0\n-       158: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       158: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        161: aload_0\n-       162: getfield      #2                  // Field idx:I\n-       165: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       168: checkcast     #48                 // class org/apache/bcel/classfile/ConstantFloat\n+       162: getfield      #7                  // Field idx:I\n+       165: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       168: checkcast     #153                // class org/apache/bcel/classfile/ConstantFloat\n        171: astore        4\n        173: aload         4\n-       175: invokevirtual #49                 // Method org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n-       178: invokestatic  #50                 // Method java/lang/Float.toString:(F)Ljava/lang/String;\n+       175: invokevirtual #155                // Method org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n+       178: invokestatic  #157                // Method java/lang/Float.toString:(F)Ljava/lang/String;\n        181: areturn\n        182: aload_0\n-       183: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       183: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        186: aload_0\n-       187: getfield      #2                  // Field idx:I\n-       190: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       193: checkcast     #39                 // class org/apache/bcel/classfile/ConstantInteger\n+       187: getfield      #7                  // Field idx:I\n+       190: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       193: checkcast     #126                // class org/apache/bcel/classfile/ConstantInteger\n        196: astore        5\n        198: aload         5\n-       200: invokevirtual #40                 // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-       203: invokestatic  #41                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+       200: invokevirtual #128                // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+       203: invokestatic  #130                // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n        206: areturn\n        207: aload_0\n-       208: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       208: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        211: aload_0\n-       212: getfield      #2                  // Field idx:I\n-       215: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       218: checkcast     #39                 // class org/apache/bcel/classfile/ConstantInteger\n+       212: getfield      #7                  // Field idx:I\n+       215: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       218: checkcast     #126                // class org/apache/bcel/classfile/ConstantInteger\n        221: astore        6\n        223: aload         6\n-       225: invokevirtual #40                 // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-       228: invokestatic  #41                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+       225: invokevirtual #128                // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+       228: invokestatic  #130                // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n        231: areturn\n        232: aload_0\n-       233: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       233: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        236: aload_0\n-       237: getfield      #2                  // Field idx:I\n-       240: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       243: checkcast     #39                 // class org/apache/bcel/classfile/ConstantInteger\n+       237: getfield      #7                  // Field idx:I\n+       240: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       243: checkcast     #126                // class org/apache/bcel/classfile/ConstantInteger\n        246: astore        7\n        248: aload         7\n-       250: invokevirtual #40                 // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-       253: invokestatic  #41                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n+       250: invokevirtual #128                // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+       253: invokestatic  #130                // Method java/lang/Integer.toString:(I)Ljava/lang/String;\n        256: areturn\n        257: aload_0\n-       258: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       258: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        261: aload_0\n-       262: getfield      #2                  // Field idx:I\n-       265: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       268: checkcast     #39                 // class org/apache/bcel/classfile/ConstantInteger\n+       262: getfield      #7                  // Field idx:I\n+       265: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       268: checkcast     #126                // class org/apache/bcel/classfile/ConstantInteger\n        271: astore        8\n        273: aload         8\n-       275: invokevirtual #40                 // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+       275: invokevirtual #128                // Method org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n        278: ifne          284\n-       281: ldc           #51                 // String false\n+       281: ldc           #162                // String false\n        283: areturn\n-       284: ldc           #52                 // String true\n+       284: ldc           #164                // String true\n        286: areturn\n        287: aload_0\n-       288: invokevirtual #3                  // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+       288: invokevirtual #13                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n        291: aload_0\n-       292: getfield      #2                  // Field idx:I\n-       295: invokevirtual #36                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-       298: checkcast     #37                 // class org/apache/bcel/classfile/ConstantUtf8\n+       292: getfield      #7                  // Field idx:I\n+       295: invokevirtual #117                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+       298: checkcast     #121                // class org/apache/bcel/classfile/ConstantUtf8\n        301: astore        9\n        303: aload         9\n-       305: invokevirtual #38                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+       305: invokevirtual #123                // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n        308: areturn\n-       309: new           #33                 // class java/lang/IllegalStateException\n+       309: new           #112                // class java/lang/IllegalStateException\n        312: dup\n-       313: new           #21                 // class java/lang/StringBuilder\n+       313: new           #85                 // class java/lang/StringBuilder\n        316: dup\n-       317: invokespecial #22                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       320: ldc           #53                 // String SimpleElementValueGen class does not know how to stringify type\n-       322: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       317: invokespecial #87                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       320: ldc           #166                // String SimpleElementValueGen class does not know how to stringify type\n+       322: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        325: aload_0\n-       326: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-       329: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       332: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       335: invokespecial #35                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       326: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+       329: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       332: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       335: invokespecial #116                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        338: athrow\n       LineNumberTable:\n         line 209: 0\n         line 212: 88\n         line 213: 103\n         line 215: 111\n         line 216: 126\n@@ -1002,47 +1002,47 @@\n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-         5: invokevirtual #54                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         5: invokevirtual #168                // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_0\n-         9: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         9: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n         12: lookupswitch  { // 9\n                       66: 96\n                       67: 96\n                       68: 96\n                       70: 96\n                       73: 96\n                       74: 96\n                       83: 96\n                       90: 96\n                      115: 96\n                  default: 107\n             }\n         96: aload_1\n         97: aload_0\n-        98: getfield      #2                  // Field idx:I\n-       101: invokevirtual #55                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        98: getfield      #7                  // Field idx:I\n+       101: invokevirtual #174                // Method java/io/DataOutputStream.writeShort:(I)V\n        104: goto          137\n-       107: new           #33                 // class java/lang/IllegalStateException\n+       107: new           #112                // class java/lang/IllegalStateException\n        110: dup\n-       111: new           #21                 // class java/lang/StringBuilder\n+       111: new           #85                 // class java/lang/StringBuilder\n        114: dup\n-       115: invokespecial #22                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       118: ldc           #56                 // String SimpleElementValueGen doesnt know how to write out type\n-       120: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       115: invokespecial #87                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       118: ldc           #177                // String SimpleElementValueGen doesnt know how to write out type\n+       120: invokevirtual #92                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        123: aload_0\n-       124: invokespecial #25                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-       127: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       130: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       133: invokespecial #35                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+       124: invokespecial #96                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+       127: invokevirtual #97                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+       130: invokevirtual #100                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       133: invokespecial #116                // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n        136: athrow\n        137: return\n       LineNumberTable:\n         line 250: 0\n         line 251: 8\n         line 262: 96\n         line 263: 104\n"}]}
