{"diffoscope-json-version": 1, "source1": "first/FTPSClient.class", "source2": "second/FTPSClient.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,140 @@\n-  SHA-256 checksum 2df565412e297bf547fd33ff72c7b49c99b80a38749adfbf292d59e889f65714\n+  SHA-256 checksum 09ff66d731842f8760f734125ae180f3b032afd1ba6c0c9647c3fc834a23403c\n   Compiled from \"FTPSClient.java\"\n public class org.apache.commons.net.ftp.FTPSClient extends org.apache.commons.net.ftp.FTPClient\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/net/ftp/FTPSClient\n   super_class: #124                       // org/apache/commons/net/ftp/FTPClient\n   interfaces: 0, fields: 32, methods: 51, attributes: 1\n Constant pool:\n-    #1 = Class              #257          // org/apache/commons/net/ftp/FTPSClient\n-    #2 = String             #258          // TLS\n-    #3 = Methodref          #1.#259       // org/apache/commons/net/ftp/FTPSClient.\"<init>\":(Ljava/lang/String;Z)V\n-    #4 = Methodref          #124.#260     // org/apache/commons/net/ftp/FTPClient.\"<init>\":()V\n-    #5 = Fieldref           #1.#261       // org/apache/commons/net/ftp/FTPSClient.auth:Ljava/lang/String;\n-    #6 = Fieldref           #1.#262       // org/apache/commons/net/ftp/FTPSClient.isCreation:Z\n-    #7 = Fieldref           #1.#263       // org/apache/commons/net/ftp/FTPSClient.isClientMode:Z\n-    #8 = Fieldref           #1.#264       // org/apache/commons/net/ftp/FTPSClient.isNeedClientAuth:Z\n-    #9 = Fieldref           #1.#265       // org/apache/commons/net/ftp/FTPSClient.isWantClientAuth:Z\n-   #10 = Fieldref           #1.#266       // org/apache/commons/net/ftp/FTPSClient.suites:[Ljava/lang/String;\n-   #11 = Fieldref           #1.#267       // org/apache/commons/net/ftp/FTPSClient.protocols:[Ljava/lang/String;\n-   #12 = Methodref          #268.#269     // org/apache/commons/net/util/TrustManagerUtils.getValidateServerCertificateTrustManager:()Ljavax/net/ssl/X509TrustManager;\n-   #13 = Fieldref           #1.#270       // org/apache/commons/net/ftp/FTPSClient.trustManager:Ljavax/net/ssl/TrustManager;\n-   #14 = Fieldref           #1.#271       // org/apache/commons/net/ftp/FTPSClient.keyManager:Ljavax/net/ssl/KeyManager;\n-   #15 = Fieldref           #1.#272       // org/apache/commons/net/ftp/FTPSClient.hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;\n-   #16 = Fieldref           #1.#273       // org/apache/commons/net/ftp/FTPSClient.protocol:Ljava/lang/String;\n-   #17 = Fieldref           #1.#274       // org/apache/commons/net/ftp/FTPSClient.isImplicit:Z\n-   #18 = Methodref          #1.#275       // org/apache/commons/net/ftp/FTPSClient.setDefaultPort:(I)V\n-   #19 = Fieldref           #1.#276       // org/apache/commons/net/ftp/FTPSClient.context:Ljavax/net/ssl/SSLContext;\n-   #20 = Methodref          #1.#277       // org/apache/commons/net/ftp/FTPSClient.\"<init>\":(ZLjavax/net/ssl/SSLContext;)V\n-   #21 = Methodref          #1.#278       // org/apache/commons/net/ftp/FTPSClient.sslNegotiation:()V\n-   #22 = Methodref          #124.#279     // org/apache/commons/net/ftp/FTPClient._connectAction_:()V\n-   #23 = Methodref          #1.#280       // org/apache/commons/net/ftp/FTPSClient.execAUTH:()V\n-   #24 = String             #281          // AUTH\n-   #25 = Methodref          #1.#282       // org/apache/commons/net/ftp/FTPSClient.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-   #26 = Class              #283          // org/apache/commons/net/ftp/FTPReply\n-   #27 = Class              #284          // javax/net/ssl/SSLException\n-   #28 = Methodref          #1.#285       // org/apache/commons/net/ftp/FTPSClient.getReplyString:()Ljava/lang/String;\n-   #29 = Methodref          #27.#286      // javax/net/ssl/SSLException.\"<init>\":(Ljava/lang/String;)V\n-   #30 = Methodref          #1.#287       // org/apache/commons/net/ftp/FTPSClient.getKeyManager:()Ljavax/net/ssl/KeyManager;\n-   #31 = Methodref          #1.#288       // org/apache/commons/net/ftp/FTPSClient.getTrustManager:()Ljavax/net/ssl/TrustManager;\n-   #32 = Methodref          #289.#290     // org/apache/commons/net/util/SSLContextUtils.createSSLContext:(Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;\n-   #33 = Fieldref           #1.#291       // org/apache/commons/net/ftp/FTPSClient._socket_:Ljava/net/Socket;\n-   #34 = Fieldref           #1.#292       // org/apache/commons/net/ftp/FTPSClient.plainSocket:Ljava/net/Socket;\n-   #35 = Methodref          #1.#293       // org/apache/commons/net/ftp/FTPSClient.initSslContext:()V\n-   #36 = Methodref          #1.#294       // org/apache/commons/net/ftp/FTPSClient.createSSLSocket:(Ljava/net/Socket;)Ljava/net/Socket;\n-   #37 = Class              #295          // javax/net/ssl/SSLSocket\n-   #38 = Methodref          #37.#296      // javax/net/ssl/SSLSocket.setEnableSessionCreation:(Z)V\n-   #39 = Methodref          #37.#297      // javax/net/ssl/SSLSocket.setUseClientMode:(Z)V\n-   #40 = Fieldref           #1.#298       // org/apache/commons/net/ftp/FTPSClient.tlsEndpointChecking:Z\n-   #41 = Methodref          #299.#300     // org/apache/commons/net/util/SSLSocketUtils.enableEndpointNameVerification:(Ljavax/net/ssl/SSLSocket;)Z\n-   #42 = Methodref          #37.#301      // javax/net/ssl/SSLSocket.setNeedClientAuth:(Z)V\n-   #43 = Methodref          #37.#302      // javax/net/ssl/SSLSocket.setWantClientAuth:(Z)V\n-   #44 = Methodref          #37.#303      // javax/net/ssl/SSLSocket.setEnabledProtocols:([Ljava/lang/String;)V\n-   #45 = Methodref          #37.#304      // javax/net/ssl/SSLSocket.setEnabledCipherSuites:([Ljava/lang/String;)V\n-   #46 = Methodref          #37.#305      // javax/net/ssl/SSLSocket.startHandshake:()V\n-   #47 = Class              #306          // java/io/BufferedReader\n-   #48 = Class              #307          // java/io/InputStreamReader\n-   #49 = Methodref          #37.#308      // javax/net/ssl/SSLSocket.getInputStream:()Ljava/io/InputStream;\n-   #50 = Methodref          #1.#309       // org/apache/commons/net/ftp/FTPSClient.getControlEncoding:()Ljava/lang/String;\n-   #51 = Methodref          #48.#310      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-   #52 = Methodref          #47.#311      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n-   #53 = Fieldref           #1.#312       // org/apache/commons/net/ftp/FTPSClient._controlInput_:Ljava/io/BufferedReader;\n-   #54 = Class              #313          // java/io/BufferedWriter\n-   #55 = Class              #314          // java/io/OutputStreamWriter\n-   #56 = Methodref          #37.#315      // javax/net/ssl/SSLSocket.getOutputStream:()Ljava/io/OutputStream;\n-   #57 = Methodref          #55.#316      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #58 = Methodref          #54.#317      // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n-   #59 = Fieldref           #1.#318       // org/apache/commons/net/ftp/FTPSClient._controlOutput_:Ljava/io/BufferedWriter;\n-   #60 = Fieldref           #1.#319       // org/apache/commons/net/ftp/FTPSClient._hostname_:Ljava/lang/String;\n-   #61 = Methodref          #37.#320      // javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;\n-   #62 = InterfaceMethodref #321.#322     // javax/net/ssl/HostnameVerifier.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\n-   #63 = Class              #323          // javax/net/ssl/SSLHandshakeException\n-   #64 = String             #324          // Hostname doesn\\'t match certificate\n-   #65 = Methodref          #63.#286      // javax/net/ssl/SSLHandshakeException.\"<init>\":(Ljava/lang/String;)V\n-   #66 = Methodref          #37.#325      // javax/net/ssl/SSLSocket.getEnableSessionCreation:()Z\n-   #67 = Methodref          #37.#326      // javax/net/ssl/SSLSocket.getNeedClientAuth:()Z\n-   #68 = Methodref          #37.#327      // javax/net/ssl/SSLSocket.getWantClientAuth:()Z\n-   #69 = Methodref          #37.#328      // javax/net/ssl/SSLSocket.getUseClientMode:()Z\n-   #70 = Class              #329          // java/lang/String\n-   #71 = Methodref          #330.#331     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #72 = Methodref          #37.#332      // javax/net/ssl/SSLSocket.getEnabledCipherSuites:()[Ljava/lang/String;\n-   #73 = Methodref          #37.#333      // javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;\n+    #1 = Class              #254          // org/apache/commons/net/ftp/FTPSClient\n+    #2 = String             #255          // TLS\n+    #3 = Methodref          #1.#256       // org/apache/commons/net/ftp/FTPSClient.\"<init>\":(Ljava/lang/String;Z)V\n+    #4 = Methodref          #124.#257     // org/apache/commons/net/ftp/FTPClient.\"<init>\":()V\n+    #5 = Fieldref           #1.#258       // org/apache/commons/net/ftp/FTPSClient.auth:Ljava/lang/String;\n+    #6 = Fieldref           #1.#259       // org/apache/commons/net/ftp/FTPSClient.isCreation:Z\n+    #7 = Fieldref           #1.#260       // org/apache/commons/net/ftp/FTPSClient.isClientMode:Z\n+    #8 = Fieldref           #1.#261       // org/apache/commons/net/ftp/FTPSClient.isNeedClientAuth:Z\n+    #9 = Fieldref           #1.#262       // org/apache/commons/net/ftp/FTPSClient.isWantClientAuth:Z\n+   #10 = Fieldref           #1.#263       // org/apache/commons/net/ftp/FTPSClient.suites:[Ljava/lang/String;\n+   #11 = Fieldref           #1.#264       // org/apache/commons/net/ftp/FTPSClient.protocols:[Ljava/lang/String;\n+   #12 = Methodref          #265.#266     // org/apache/commons/net/util/TrustManagerUtils.getValidateServerCertificateTrustManager:()Ljavax/net/ssl/X509TrustManager;\n+   #13 = Fieldref           #1.#267       // org/apache/commons/net/ftp/FTPSClient.trustManager:Ljavax/net/ssl/TrustManager;\n+   #14 = Fieldref           #1.#268       // org/apache/commons/net/ftp/FTPSClient.keyManager:Ljavax/net/ssl/KeyManager;\n+   #15 = Fieldref           #1.#269       // org/apache/commons/net/ftp/FTPSClient.hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;\n+   #16 = Fieldref           #1.#270       // org/apache/commons/net/ftp/FTPSClient.protocol:Ljava/lang/String;\n+   #17 = Fieldref           #1.#271       // org/apache/commons/net/ftp/FTPSClient.isImplicit:Z\n+   #18 = Methodref          #1.#272       // org/apache/commons/net/ftp/FTPSClient.setDefaultPort:(I)V\n+   #19 = Fieldref           #1.#273       // org/apache/commons/net/ftp/FTPSClient.context:Ljavax/net/ssl/SSLContext;\n+   #20 = Methodref          #1.#274       // org/apache/commons/net/ftp/FTPSClient.\"<init>\":(ZLjavax/net/ssl/SSLContext;)V\n+   #21 = Methodref          #1.#275       // org/apache/commons/net/ftp/FTPSClient.sslNegotiation:()V\n+   #22 = Methodref          #124.#276     // org/apache/commons/net/ftp/FTPClient._connectAction_:()V\n+   #23 = Methodref          #1.#277       // org/apache/commons/net/ftp/FTPSClient.execAUTH:()V\n+   #24 = String             #278          // AUTH\n+   #25 = Methodref          #1.#279       // org/apache/commons/net/ftp/FTPSClient.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+   #26 = Class              #280          // org/apache/commons/net/ftp/FTPReply\n+   #27 = Class              #281          // javax/net/ssl/SSLException\n+   #28 = Methodref          #1.#282       // org/apache/commons/net/ftp/FTPSClient.getReplyString:()Ljava/lang/String;\n+   #29 = Methodref          #27.#283      // javax/net/ssl/SSLException.\"<init>\":(Ljava/lang/String;)V\n+   #30 = Methodref          #1.#284       // org/apache/commons/net/ftp/FTPSClient.getKeyManager:()Ljavax/net/ssl/KeyManager;\n+   #31 = Methodref          #1.#285       // org/apache/commons/net/ftp/FTPSClient.getTrustManager:()Ljavax/net/ssl/TrustManager;\n+   #32 = Methodref          #286.#287     // org/apache/commons/net/util/SSLContextUtils.createSSLContext:(Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;\n+   #33 = Fieldref           #1.#288       // org/apache/commons/net/ftp/FTPSClient._socket_:Ljava/net/Socket;\n+   #34 = Fieldref           #1.#289       // org/apache/commons/net/ftp/FTPSClient.plainSocket:Ljava/net/Socket;\n+   #35 = Methodref          #1.#290       // org/apache/commons/net/ftp/FTPSClient.initSslContext:()V\n+   #36 = Methodref          #1.#291       // org/apache/commons/net/ftp/FTPSClient.createSSLSocket:(Ljava/net/Socket;)Ljava/net/Socket;\n+   #37 = Class              #292          // javax/net/ssl/SSLSocket\n+   #38 = Methodref          #37.#293      // javax/net/ssl/SSLSocket.setEnableSessionCreation:(Z)V\n+   #39 = Methodref          #37.#294      // javax/net/ssl/SSLSocket.setUseClientMode:(Z)V\n+   #40 = Fieldref           #1.#295       // org/apache/commons/net/ftp/FTPSClient.tlsEndpointChecking:Z\n+   #41 = Methodref          #296.#297     // org/apache/commons/net/util/SSLSocketUtils.enableEndpointNameVerification:(Ljavax/net/ssl/SSLSocket;)Z\n+   #42 = Methodref          #37.#298      // javax/net/ssl/SSLSocket.setNeedClientAuth:(Z)V\n+   #43 = Methodref          #37.#299      // javax/net/ssl/SSLSocket.setWantClientAuth:(Z)V\n+   #44 = Methodref          #37.#300      // javax/net/ssl/SSLSocket.setEnabledProtocols:([Ljava/lang/String;)V\n+   #45 = Methodref          #37.#301      // javax/net/ssl/SSLSocket.setEnabledCipherSuites:([Ljava/lang/String;)V\n+   #46 = Methodref          #37.#302      // javax/net/ssl/SSLSocket.startHandshake:()V\n+   #47 = Class              #303          // java/io/BufferedReader\n+   #48 = Class              #304          // java/io/InputStreamReader\n+   #49 = Methodref          #37.#305      // javax/net/ssl/SSLSocket.getInputStream:()Ljava/io/InputStream;\n+   #50 = Methodref          #1.#306       // org/apache/commons/net/ftp/FTPSClient.getControlEncoding:()Ljava/lang/String;\n+   #51 = Methodref          #48.#307      // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+   #52 = Methodref          #47.#308      // java/io/BufferedReader.\"<init>\":(Ljava/io/Reader;)V\n+   #53 = Fieldref           #1.#309       // org/apache/commons/net/ftp/FTPSClient._controlInput_:Ljava/io/BufferedReader;\n+   #54 = Class              #310          // java/io/BufferedWriter\n+   #55 = Class              #311          // java/io/OutputStreamWriter\n+   #56 = Methodref          #37.#312      // javax/net/ssl/SSLSocket.getOutputStream:()Ljava/io/OutputStream;\n+   #57 = Methodref          #55.#313      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #58 = Methodref          #54.#314      // java/io/BufferedWriter.\"<init>\":(Ljava/io/Writer;)V\n+   #59 = Fieldref           #1.#315       // org/apache/commons/net/ftp/FTPSClient._controlOutput_:Ljava/io/BufferedWriter;\n+   #60 = Fieldref           #1.#316       // org/apache/commons/net/ftp/FTPSClient._hostname_:Ljava/lang/String;\n+   #61 = Methodref          #37.#317      // javax/net/ssl/SSLSocket.getSession:()Ljavax/net/ssl/SSLSession;\n+   #62 = InterfaceMethodref #318.#319     // javax/net/ssl/HostnameVerifier.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\n+   #63 = Class              #320          // javax/net/ssl/SSLHandshakeException\n+   #64 = String             #321          // Hostname doesn\\'t match certificate\n+   #65 = Methodref          #63.#283      // javax/net/ssl/SSLHandshakeException.\"<init>\":(Ljava/lang/String;)V\n+   #66 = Methodref          #37.#322      // javax/net/ssl/SSLSocket.getEnableSessionCreation:()Z\n+   #67 = Methodref          #37.#323      // javax/net/ssl/SSLSocket.getNeedClientAuth:()Z\n+   #68 = Methodref          #37.#324      // javax/net/ssl/SSLSocket.getWantClientAuth:()Z\n+   #69 = Methodref          #37.#325      // javax/net/ssl/SSLSocket.getUseClientMode:()Z\n+   #70 = Class              #326          // java/lang/String\n+   #71 = Methodref          #327.#328     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #72 = Methodref          #37.#329      // javax/net/ssl/SSLSocket.getEnabledCipherSuites:()[Ljava/lang/String;\n+   #73 = Methodref          #37.#330      // javax/net/ssl/SSLSocket.getEnabledProtocols:()[Ljava/lang/String;\n    #74 = Long               4294967295l\n-   #76 = Class              #334          // java/lang/IllegalArgumentException\n-   #77 = Methodref          #76.#260      // java/lang/IllegalArgumentException.\"<init>\":()V\n-   #78 = String             #335          // PBSZ\n-   #79 = Methodref          #70.#336      // java/lang/String.valueOf:(J)Ljava/lang/String;\n-   #80 = Methodref          #1.#337       // org/apache/commons/net/ftp/FTPSClient.execPBSZ:(J)V\n-   #81 = String             #338          // PBSZ=\n-   #82 = Methodref          #1.#339       // org/apache/commons/net/ftp/FTPSClient.extractPrefixedData:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #83 = Methodref          #340.#341     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n-   #84 = String             #342          // C\n-   #85 = Methodref          #1.#343       // org/apache/commons/net/ftp/FTPSClient.checkPROTValue:(Ljava/lang/String;)Z\n-   #86 = String             #344          // PROT\n-   #87 = Methodref          #70.#345      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #88 = Methodref          #1.#346       // org/apache/commons/net/ftp/FTPSClient.setSocketFactory:(Ljavax/net/SocketFactory;)V\n-   #89 = Methodref          #1.#347       // org/apache/commons/net/ftp/FTPSClient.setServerSocketFactory:(Ljavax/net/ServerSocketFactory;)V\n-   #90 = Class              #348          // org/apache/commons/net/ftp/FTPSSocketFactory\n-   #91 = Methodref          #90.#349      // org/apache/commons/net/ftp/FTPSSocketFactory.\"<init>\":(Ljavax/net/ssl/SSLContext;)V\n-   #92 = Class              #350          // org/apache/commons/net/ftp/FTPSServerSocketFactory\n-   #93 = Methodref          #92.#349      // org/apache/commons/net/ftp/FTPSServerSocketFactory.\"<init>\":(Ljavax/net/ssl/SSLContext;)V\n-   #94 = Fieldref           #1.#351       // org/apache/commons/net/ftp/FTPSClient.PROT_COMMAND_VALUE:[Ljava/lang/String;\n-   #95 = Methodref          #124.#282     // org/apache/commons/net/ftp/FTPClient.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-   #96 = String             #352          // CCC\n-   #97 = Methodref          #353.#354     // java/net/Socket.close:()V\n-   #98 = Methodref          #353.#308     // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n-   #99 = Methodref          #353.#315     // java/net/Socket.getOutputStream:()Ljava/io/OutputStream;\n-  #100 = Methodref          #355.#356     // org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;\n-  #101 = Methodref          #1.#357       // org/apache/commons/net/ftp/FTPSClient._openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n-  #102 = Methodref          #124.#357     // org/apache/commons/net/ftp/FTPClient._openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n-  #103 = Methodref          #1.#358       // org/apache/commons/net/ftp/FTPSClient._prepareDataSocket_:(Ljava/net/Socket;)V\n-  #104 = Methodref          #124.#359     // org/apache/commons/net/ftp/FTPClient.disconnect:()V\n-  #105 = String             #360          // ADAT\n-  #106 = Methodref          #361.#362     // org/apache/commons/net/util/Base64.encodeBase64StringUnChunked:([B)Ljava/lang/String;\n-  #107 = Methodref          #1.#363       // org/apache/commons/net/ftp/FTPSClient.sendCommand:(Ljava/lang/String;)I\n-  #108 = String             #364          // MIC\n-  #109 = String             #365          //\n-  #110 = String             #366          // CONF\n-  #111 = String             #367          // ENC\n-  #112 = String             #368          // ADAT=\n-  #113 = Methodref          #361.#369     // org/apache/commons/net/util/Base64.decodeBase64:(Ljava/lang/String;)[B\n-  #114 = Methodref          #70.#370      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-  #115 = Methodref          #70.#371      // java/lang/String.length:()I\n-  #116 = Methodref          #70.#372      // java/lang/String.substring:(I)Ljava/lang/String;\n-  #117 = Methodref          #70.#373      // java/lang/String.trim:()Ljava/lang/String;\n-  #118 = Methodref          #374.#375     // javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;\n-  #119 = Methodref          #353.#376     // java/net/Socket.getPort:()I\n-  #120 = Methodref          #377.#378     // javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;\n-  #121 = String             #379          // E\n-  #122 = String             #380          // S\n-  #123 = String             #381          // P\n-  #124 = Class              #382          // org/apache/commons/net/ftp/FTPClient\n+   #76 = Class              #331          // java/lang/IllegalArgumentException\n+   #77 = Methodref          #76.#257      // java/lang/IllegalArgumentException.\"<init>\":()V\n+   #78 = String             #332          // PBSZ\n+   #79 = Methodref          #70.#333      // java/lang/String.valueOf:(J)Ljava/lang/String;\n+   #80 = Methodref          #1.#334       // org/apache/commons/net/ftp/FTPSClient.execPBSZ:(J)V\n+   #81 = String             #335          // PBSZ=\n+   #82 = Methodref          #1.#336       // org/apache/commons/net/ftp/FTPSClient.extractPrefixedData:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #83 = Methodref          #337.#338     // java/lang/Long.parseLong:(Ljava/lang/String;)J\n+   #84 = String             #339          // C\n+   #85 = Methodref          #1.#340       // org/apache/commons/net/ftp/FTPSClient.checkPROTValue:(Ljava/lang/String;)Z\n+   #86 = String             #341          // PROT\n+   #87 = Methodref          #70.#342      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #88 = Methodref          #1.#343       // org/apache/commons/net/ftp/FTPSClient.setSocketFactory:(Ljavax/net/SocketFactory;)V\n+   #89 = Methodref          #1.#344       // org/apache/commons/net/ftp/FTPSClient.setServerSocketFactory:(Ljavax/net/ServerSocketFactory;)V\n+   #90 = Class              #345          // org/apache/commons/net/ftp/FTPSSocketFactory\n+   #91 = Methodref          #90.#346      // org/apache/commons/net/ftp/FTPSSocketFactory.\"<init>\":(Ljavax/net/ssl/SSLContext;)V\n+   #92 = Class              #347          // org/apache/commons/net/ftp/FTPSServerSocketFactory\n+   #93 = Methodref          #92.#346      // org/apache/commons/net/ftp/FTPSServerSocketFactory.\"<init>\":(Ljavax/net/ssl/SSLContext;)V\n+   #94 = Fieldref           #1.#348       // org/apache/commons/net/ftp/FTPSClient.PROT_COMMAND_VALUE:[Ljava/lang/String;\n+   #95 = Methodref          #124.#279     // org/apache/commons/net/ftp/FTPClient.sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+   #96 = String             #349          // CCC\n+   #97 = Methodref          #223.#350     // java/net/Socket.close:()V\n+   #98 = Methodref          #223.#305     // java/net/Socket.getInputStream:()Ljava/io/InputStream;\n+   #99 = Methodref          #223.#312     // java/net/Socket.getOutputStream:()Ljava/io/OutputStream;\n+  #100 = Methodref          #351.#352     // org/apache/commons/net/ftp/FTPCommand.getCommand:(I)Ljava/lang/String;\n+  #101 = Methodref          #1.#353       // org/apache/commons/net/ftp/FTPSClient._openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n+  #102 = Methodref          #124.#353     // org/apache/commons/net/ftp/FTPClient._openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n+  #103 = Methodref          #1.#354       // org/apache/commons/net/ftp/FTPSClient._prepareDataSocket_:(Ljava/net/Socket;)V\n+  #104 = Methodref          #124.#355     // org/apache/commons/net/ftp/FTPClient.disconnect:()V\n+  #105 = String             #356          // ADAT\n+  #106 = Methodref          #357.#358     // org/apache/commons/net/util/Base64.encodeBase64StringUnChunked:([B)Ljava/lang/String;\n+  #107 = Methodref          #1.#359       // org/apache/commons/net/ftp/FTPSClient.sendCommand:(Ljava/lang/String;)I\n+  #108 = String             #360          // MIC\n+  #109 = String             #361          //\n+  #110 = String             #362          // CONF\n+  #111 = String             #363          // ENC\n+  #112 = String             #364          // ADAT=\n+  #113 = Methodref          #357.#365     // org/apache/commons/net/util/Base64.decodeBase64:(Ljava/lang/String;)[B\n+  #114 = Methodref          #70.#366      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+  #115 = Methodref          #70.#367      // java/lang/String.length:()I\n+  #116 = Methodref          #70.#368      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #117 = Methodref          #70.#369      // java/lang/String.trim:()Ljava/lang/String;\n+  #118 = Methodref          #370.#371     // javax/net/ssl/SSLContext.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;\n+  #119 = Methodref          #223.#372     // java/net/Socket.getPort:()I\n+  #120 = Methodref          #373.#374     // javax/net/ssl/SSLSocketFactory.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;\n+  #121 = String             #375          // E\n+  #122 = String             #376          // S\n+  #123 = String             #377          // P\n+  #124 = Class              #378          // org/apache/commons/net/ftp/FTPClient\n   #125 = Utf8               DEFAULT_FTPS_DATA_PORT\n   #126 = Utf8               I\n   #127 = Utf8               ConstantValue\n   #128 = Integer            989\n   #129 = Utf8               DEFAULT_FTPS_PORT\n   #130 = Integer            990\n   #131 = Utf8               PROT_COMMAND_VALUE\n@@ -182,286 +182,282 @@\n   #173 = Utf8               ()V\n   #174 = Utf8               Code\n   #175 = Utf8               LineNumberTable\n   #176 = Utf8               (Z)V\n   #177 = Utf8               (Ljava/lang/String;)V\n   #178 = Utf8               (Ljava/lang/String;Z)V\n   #179 = Utf8               StackMapTable\n-  #180 = Class              #257          // org/apache/commons/net/ftp/FTPSClient\n-  #181 = Class              #329          // java/lang/String\n-  #182 = Utf8               (ZLjavax/net/ssl/SSLContext;)V\n-  #183 = Utf8               (Ljavax/net/ssl/SSLContext;)V\n-  #184 = Utf8               setAuthValue\n-  #185 = Utf8               getAuthValue\n-  #186 = Utf8               ()Ljava/lang/String;\n-  #187 = Utf8               _connectAction_\n-  #188 = Utf8               Exceptions\n-  #189 = Class              #383          // java/io/IOException\n-  #190 = Utf8               execAUTH\n-  #191 = Utf8               initSslContext\n-  #192 = Utf8               sslNegotiation\n-  #193 = Class              #295          // javax/net/ssl/SSLSocket\n-  #194 = Utf8               getKeyManager\n-  #195 = Utf8               ()Ljavax/net/ssl/KeyManager;\n-  #196 = Utf8               setKeyManager\n-  #197 = Utf8               (Ljavax/net/ssl/KeyManager;)V\n-  #198 = Utf8               setEnabledSessionCreation\n-  #199 = Utf8               getEnableSessionCreation\n-  #200 = Utf8               ()Z\n-  #201 = Utf8               setNeedClientAuth\n-  #202 = Utf8               getNeedClientAuth\n-  #203 = Utf8               setWantClientAuth\n-  #204 = Utf8               getWantClientAuth\n-  #205 = Utf8               setUseClientMode\n-  #206 = Utf8               getUseClientMode\n-  #207 = Utf8               setEnabledCipherSuites\n-  #208 = Utf8               ([Ljava/lang/String;)V\n-  #209 = Utf8               getEnabledCipherSuites\n-  #210 = Utf8               ()[Ljava/lang/String;\n-  #211 = Utf8               setEnabledProtocols\n-  #212 = Utf8               getEnabledProtocols\n-  #213 = Utf8               execPBSZ\n-  #214 = Utf8               (J)V\n-  #215 = Utf8               parsePBSZ\n-  #216 = Utf8               (J)J\n-  #217 = Utf8               execPROT\n-  #218 = Utf8               checkPROTValue\n-  #219 = Utf8               (Ljava/lang/String;)Z\n-  #220 = Class              #132          // \"[Ljava/lang/String;\"\n-  #221 = Utf8               sendCommand\n-  #222 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n-  #223 = Utf8               _openDataConnection_\n-  #224 = Utf8               (ILjava/lang/String;)Ljava/net/Socket;\n-  #225 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n-  #226 = Class              #384          // java/net/Socket\n-  #227 = Utf8               _prepareDataSocket_\n-  #228 = Utf8               (Ljava/net/Socket;)V\n-  #229 = Utf8               getTrustManager\n-  #230 = Utf8               ()Ljavax/net/ssl/TrustManager;\n-  #231 = Utf8               setTrustManager\n-  #232 = Utf8               (Ljavax/net/ssl/TrustManager;)V\n-  #233 = Utf8               getHostnameVerifier\n-  #234 = Utf8               ()Ljavax/net/ssl/HostnameVerifier;\n-  #235 = Utf8               setHostnameVerifier\n-  #236 = Utf8               (Ljavax/net/ssl/HostnameVerifier;)V\n-  #237 = Utf8               isEndpointCheckingEnabled\n-  #238 = Utf8               setEndpointCheckingEnabled\n-  #239 = Utf8               disconnect\n-  #240 = Utf8               (Ljava/lang/String;)I\n-  #241 = Utf8               execADAT\n-  #242 = Utf8               ([B)I\n-  #243 = Utf8               execCCC\n-  #244 = Utf8               ()I\n-  #245 = Utf8               execMIC\n-  #246 = Utf8               execCONF\n-  #247 = Utf8               execENC\n-  #248 = Utf8               parseADATReply\n-  #249 = Utf8               (Ljava/lang/String;)[B\n-  #250 = Utf8               extractPrefixedData\n-  #251 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #252 = Utf8               createSSLSocket\n-  #253 = Utf8               (Ljava/net/Socket;)Ljava/net/Socket;\n-  #254 = Utf8               <clinit>\n-  #255 = Utf8               SourceFile\n-  #256 = Utf8               FTPSClient.java\n-  #257 = Utf8               org/apache/commons/net/ftp/FTPSClient\n-  #258 = Utf8               TLS\n-  #259 = NameAndType        #172:#178     // \"<init>\":(Ljava/lang/String;Z)V\n-  #260 = NameAndType        #172:#173     // \"<init>\":()V\n-  #261 = NameAndType        #147:#134     // auth:Ljava/lang/String;\n-  #262 = NameAndType        #152:#145     // isCreation:Z\n-  #263 = NameAndType        #153:#145     // isClientMode:Z\n-  #264 = NameAndType        #154:#145     // isNeedClientAuth:Z\n-  #265 = NameAndType        #155:#145     // isWantClientAuth:Z\n-  #266 = NameAndType        #156:#132     // suites:[Ljava/lang/String;\n-  #267 = NameAndType        #157:#132     // protocols:[Ljava/lang/String;\n-  #268 = Class              #385          // org/apache/commons/net/util/TrustManagerUtils\n-  #269 = NameAndType        #386:#387     // getValidateServerCertificateTrustManager:()Ljavax/net/ssl/X509TrustManager;\n-  #270 = NameAndType        #158:#159     // trustManager:Ljavax/net/ssl/TrustManager;\n-  #271 = NameAndType        #160:#161     // keyManager:Ljavax/net/ssl/KeyManager;\n-  #272 = NameAndType        #162:#163     // hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;\n-  #273 = NameAndType        #146:#134     // protocol:Ljava/lang/String;\n-  #274 = NameAndType        #144:#145     // isImplicit:Z\n-  #275 = NameAndType        #388:#389     // setDefaultPort:(I)V\n-  #276 = NameAndType        #148:#149     // context:Ljavax/net/ssl/SSLContext;\n-  #277 = NameAndType        #172:#182     // \"<init>\":(ZLjavax/net/ssl/SSLContext;)V\n-  #278 = NameAndType        #192:#173     // sslNegotiation:()V\n-  #279 = NameAndType        #187:#173     // _connectAction_:()V\n-  #280 = NameAndType        #190:#173     // execAUTH:()V\n-  #281 = Utf8               AUTH\n-  #282 = NameAndType        #221:#222     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n-  #283 = Utf8               org/apache/commons/net/ftp/FTPReply\n-  #284 = Utf8               javax/net/ssl/SSLException\n-  #285 = NameAndType        #390:#186     // getReplyString:()Ljava/lang/String;\n-  #286 = NameAndType        #172:#177     // \"<init>\":(Ljava/lang/String;)V\n-  #287 = NameAndType        #194:#195     // getKeyManager:()Ljavax/net/ssl/KeyManager;\n-  #288 = NameAndType        #229:#230     // getTrustManager:()Ljavax/net/ssl/TrustManager;\n-  #289 = Class              #391          // org/apache/commons/net/util/SSLContextUtils\n-  #290 = NameAndType        #392:#393     // createSSLContext:(Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;\n-  #291 = NameAndType        #394:#151     // _socket_:Ljava/net/Socket;\n-  #292 = NameAndType        #150:#151     // plainSocket:Ljava/net/Socket;\n-  #293 = NameAndType        #191:#173     // initSslContext:()V\n-  #294 = NameAndType        #252:#253     // createSSLSocket:(Ljava/net/Socket;)Ljava/net/Socket;\n-  #295 = Utf8               javax/net/ssl/SSLSocket\n-  #296 = NameAndType        #395:#176     // setEnableSessionCreation:(Z)V\n-  #297 = NameAndType        #205:#176     // setUseClientMode:(Z)V\n-  #298 = NameAndType        #164:#145     // tlsEndpointChecking:Z\n-  #299 = Class              #396          // org/apache/commons/net/util/SSLSocketUtils\n-  #300 = NameAndType        #397:#398     // enableEndpointNameVerification:(Ljavax/net/ssl/SSLSocket;)Z\n-  #301 = NameAndType        #201:#176     // setNeedClientAuth:(Z)V\n-  #302 = NameAndType        #203:#176     // setWantClientAuth:(Z)V\n-  #303 = NameAndType        #211:#208     // setEnabledProtocols:([Ljava/lang/String;)V\n-  #304 = NameAndType        #207:#208     // setEnabledCipherSuites:([Ljava/lang/String;)V\n-  #305 = NameAndType        #399:#173     // startHandshake:()V\n-  #306 = Utf8               java/io/BufferedReader\n-  #307 = Utf8               java/io/InputStreamReader\n-  #308 = NameAndType        #400:#401     // getInputStream:()Ljava/io/InputStream;\n-  #309 = NameAndType        #402:#186     // getControlEncoding:()Ljava/lang/String;\n-  #310 = NameAndType        #172:#403     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n-  #311 = NameAndType        #172:#404     // \"<init>\":(Ljava/io/Reader;)V\n-  #312 = NameAndType        #405:#406     // _controlInput_:Ljava/io/BufferedReader;\n-  #313 = Utf8               java/io/BufferedWriter\n-  #314 = Utf8               java/io/OutputStreamWriter\n-  #315 = NameAndType        #407:#408     // getOutputStream:()Ljava/io/OutputStream;\n-  #316 = NameAndType        #172:#409     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #317 = NameAndType        #172:#410     // \"<init>\":(Ljava/io/Writer;)V\n-  #318 = NameAndType        #411:#412     // _controlOutput_:Ljava/io/BufferedWriter;\n-  #319 = NameAndType        #413:#134     // _hostname_:Ljava/lang/String;\n-  #320 = NameAndType        #414:#415     // getSession:()Ljavax/net/ssl/SSLSession;\n-  #321 = Class              #416          // javax/net/ssl/HostnameVerifier\n-  #322 = NameAndType        #417:#418     // verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\n-  #323 = Utf8               javax/net/ssl/SSLHandshakeException\n-  #324 = Utf8               Hostname doesn\\'t match certificate\n-  #325 = NameAndType        #199:#200     // getEnableSessionCreation:()Z\n-  #326 = NameAndType        #202:#200     // getNeedClientAuth:()Z\n-  #327 = NameAndType        #204:#200     // getWantClientAuth:()Z\n-  #328 = NameAndType        #206:#200     // getUseClientMode:()Z\n-  #329 = Utf8               java/lang/String\n-  #330 = Class              #419          // java/lang/System\n-  #331 = NameAndType        #420:#421     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #332 = NameAndType        #209:#210     // getEnabledCipherSuites:()[Ljava/lang/String;\n-  #333 = NameAndType        #212:#210     // getEnabledProtocols:()[Ljava/lang/String;\n-  #334 = Utf8               java/lang/IllegalArgumentException\n-  #335 = Utf8               PBSZ\n-  #336 = NameAndType        #422:#423     // valueOf:(J)Ljava/lang/String;\n-  #337 = NameAndType        #213:#214     // execPBSZ:(J)V\n-  #338 = Utf8               PBSZ=\n-  #339 = NameAndType        #250:#251     // extractPrefixedData:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #340 = Class              #424          // java/lang/Long\n-  #341 = NameAndType        #425:#426     // parseLong:(Ljava/lang/String;)J\n-  #342 = Utf8               C\n-  #343 = NameAndType        #218:#219     // checkPROTValue:(Ljava/lang/String;)Z\n-  #344 = Utf8               PROT\n-  #345 = NameAndType        #427:#428     // equals:(Ljava/lang/Object;)Z\n-  #346 = NameAndType        #429:#430     // setSocketFactory:(Ljavax/net/SocketFactory;)V\n-  #347 = NameAndType        #431:#432     // setServerSocketFactory:(Ljavax/net/ServerSocketFactory;)V\n-  #348 = Utf8               org/apache/commons/net/ftp/FTPSSocketFactory\n-  #349 = NameAndType        #172:#183     // \"<init>\":(Ljavax/net/ssl/SSLContext;)V\n-  #350 = Utf8               org/apache/commons/net/ftp/FTPSServerSocketFactory\n-  #351 = NameAndType        #131:#132     // PROT_COMMAND_VALUE:[Ljava/lang/String;\n-  #352 = Utf8               CCC\n-  #353 = Class              #384          // java/net/Socket\n-  #354 = NameAndType        #433:#173     // close:()V\n-  #355 = Class              #434          // org/apache/commons/net/ftp/FTPCommand\n-  #356 = NameAndType        #435:#436     // getCommand:(I)Ljava/lang/String;\n-  #357 = NameAndType        #223:#225     // _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n-  #358 = NameAndType        #227:#228     // _prepareDataSocket_:(Ljava/net/Socket;)V\n-  #359 = NameAndType        #239:#173     // disconnect:()V\n-  #360 = Utf8               ADAT\n-  #361 = Class              #437          // org/apache/commons/net/util/Base64\n-  #362 = NameAndType        #438:#439     // encodeBase64StringUnChunked:([B)Ljava/lang/String;\n-  #363 = NameAndType        #221:#240     // sendCommand:(Ljava/lang/String;)I\n-  #364 = Utf8               MIC\n-  #365 = Utf8\n-  #366 = Utf8               CONF\n-  #367 = Utf8               ENC\n-  #368 = Utf8               ADAT=\n-  #369 = NameAndType        #440:#249     // decodeBase64:(Ljava/lang/String;)[B\n-  #370 = NameAndType        #441:#240     // indexOf:(Ljava/lang/String;)I\n-  #371 = NameAndType        #442:#244     // length:()I\n-  #372 = NameAndType        #443:#436     // substring:(I)Ljava/lang/String;\n-  #373 = NameAndType        #444:#186     // trim:()Ljava/lang/String;\n-  #374 = Class              #445          // javax/net/ssl/SSLContext\n-  #375 = NameAndType        #446:#447     // getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;\n-  #376 = NameAndType        #448:#244     // getPort:()I\n-  #377 = Class              #449          // javax/net/ssl/SSLSocketFactory\n-  #378 = NameAndType        #450:#451     // createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;\n-  #379 = Utf8               E\n-  #380 = Utf8               S\n-  #381 = Utf8               P\n-  #382 = Utf8               org/apache/commons/net/ftp/FTPClient\n-  #383 = Utf8               java/io/IOException\n-  #384 = Utf8               java/net/Socket\n-  #385 = Utf8               org/apache/commons/net/util/TrustManagerUtils\n-  #386 = Utf8               getValidateServerCertificateTrustManager\n-  #387 = Utf8               ()Ljavax/net/ssl/X509TrustManager;\n-  #388 = Utf8               setDefaultPort\n-  #389 = Utf8               (I)V\n-  #390 = Utf8               getReplyString\n-  #391 = Utf8               org/apache/commons/net/util/SSLContextUtils\n-  #392 = Utf8               createSSLContext\n-  #393 = Utf8               (Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;\n-  #394 = Utf8               _socket_\n-  #395 = Utf8               setEnableSessionCreation\n-  #396 = Utf8               org/apache/commons/net/util/SSLSocketUtils\n-  #397 = Utf8               enableEndpointNameVerification\n-  #398 = Utf8               (Ljavax/net/ssl/SSLSocket;)Z\n-  #399 = Utf8               startHandshake\n-  #400 = Utf8               getInputStream\n-  #401 = Utf8               ()Ljava/io/InputStream;\n-  #402 = Utf8               getControlEncoding\n-  #403 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n-  #404 = Utf8               (Ljava/io/Reader;)V\n-  #405 = Utf8               _controlInput_\n-  #406 = Utf8               Ljava/io/BufferedReader;\n-  #407 = Utf8               getOutputStream\n-  #408 = Utf8               ()Ljava/io/OutputStream;\n-  #409 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #410 = Utf8               (Ljava/io/Writer;)V\n-  #411 = Utf8               _controlOutput_\n-  #412 = Utf8               Ljava/io/BufferedWriter;\n-  #413 = Utf8               _hostname_\n-  #414 = Utf8               getSession\n-  #415 = Utf8               ()Ljavax/net/ssl/SSLSession;\n-  #416 = Utf8               javax/net/ssl/HostnameVerifier\n-  #417 = Utf8               verify\n-  #418 = Utf8               (Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\n-  #419 = Utf8               java/lang/System\n-  #420 = Utf8               arraycopy\n-  #421 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #422 = Utf8               valueOf\n-  #423 = Utf8               (J)Ljava/lang/String;\n-  #424 = Utf8               java/lang/Long\n-  #425 = Utf8               parseLong\n-  #426 = Utf8               (Ljava/lang/String;)J\n-  #427 = Utf8               equals\n-  #428 = Utf8               (Ljava/lang/Object;)Z\n-  #429 = Utf8               setSocketFactory\n-  #430 = Utf8               (Ljavax/net/SocketFactory;)V\n-  #431 = Utf8               setServerSocketFactory\n-  #432 = Utf8               (Ljavax/net/ServerSocketFactory;)V\n-  #433 = Utf8               close\n-  #434 = Utf8               org/apache/commons/net/ftp/FTPCommand\n-  #435 = Utf8               getCommand\n-  #436 = Utf8               (I)Ljava/lang/String;\n-  #437 = Utf8               org/apache/commons/net/util/Base64\n-  #438 = Utf8               encodeBase64StringUnChunked\n-  #439 = Utf8               ([B)Ljava/lang/String;\n-  #440 = Utf8               decodeBase64\n-  #441 = Utf8               indexOf\n-  #442 = Utf8               length\n-  #443 = Utf8               substring\n-  #444 = Utf8               trim\n-  #445 = Utf8               javax/net/ssl/SSLContext\n-  #446 = Utf8               getSocketFactory\n-  #447 = Utf8               ()Ljavax/net/ssl/SSLSocketFactory;\n-  #448 = Utf8               getPort\n-  #449 = Utf8               javax/net/ssl/SSLSocketFactory\n-  #450 = Utf8               createSocket\n-  #451 = Utf8               (Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;\n+  #180 = Utf8               (ZLjavax/net/ssl/SSLContext;)V\n+  #181 = Utf8               (Ljavax/net/ssl/SSLContext;)V\n+  #182 = Utf8               setAuthValue\n+  #183 = Utf8               getAuthValue\n+  #184 = Utf8               ()Ljava/lang/String;\n+  #185 = Utf8               _connectAction_\n+  #186 = Utf8               Exceptions\n+  #187 = Class              #379          // java/io/IOException\n+  #188 = Utf8               execAUTH\n+  #189 = Utf8               initSslContext\n+  #190 = Utf8               sslNegotiation\n+  #191 = Utf8               getKeyManager\n+  #192 = Utf8               ()Ljavax/net/ssl/KeyManager;\n+  #193 = Utf8               setKeyManager\n+  #194 = Utf8               (Ljavax/net/ssl/KeyManager;)V\n+  #195 = Utf8               setEnabledSessionCreation\n+  #196 = Utf8               getEnableSessionCreation\n+  #197 = Utf8               ()Z\n+  #198 = Utf8               setNeedClientAuth\n+  #199 = Utf8               getNeedClientAuth\n+  #200 = Utf8               setWantClientAuth\n+  #201 = Utf8               getWantClientAuth\n+  #202 = Utf8               setUseClientMode\n+  #203 = Utf8               getUseClientMode\n+  #204 = Utf8               setEnabledCipherSuites\n+  #205 = Utf8               ([Ljava/lang/String;)V\n+  #206 = Utf8               getEnabledCipherSuites\n+  #207 = Utf8               ()[Ljava/lang/String;\n+  #208 = Utf8               setEnabledProtocols\n+  #209 = Utf8               getEnabledProtocols\n+  #210 = Utf8               execPBSZ\n+  #211 = Utf8               (J)V\n+  #212 = Utf8               parsePBSZ\n+  #213 = Utf8               (J)J\n+  #214 = Utf8               execPROT\n+  #215 = Utf8               checkPROTValue\n+  #216 = Utf8               (Ljava/lang/String;)Z\n+  #217 = Class              #132          // \"[Ljava/lang/String;\"\n+  #218 = Utf8               sendCommand\n+  #219 = Utf8               (Ljava/lang/String;Ljava/lang/String;)I\n+  #220 = Utf8               _openDataConnection_\n+  #221 = Utf8               (ILjava/lang/String;)Ljava/net/Socket;\n+  #222 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n+  #223 = Class              #380          // java/net/Socket\n+  #224 = Utf8               _prepareDataSocket_\n+  #225 = Utf8               (Ljava/net/Socket;)V\n+  #226 = Utf8               getTrustManager\n+  #227 = Utf8               ()Ljavax/net/ssl/TrustManager;\n+  #228 = Utf8               setTrustManager\n+  #229 = Utf8               (Ljavax/net/ssl/TrustManager;)V\n+  #230 = Utf8               getHostnameVerifier\n+  #231 = Utf8               ()Ljavax/net/ssl/HostnameVerifier;\n+  #232 = Utf8               setHostnameVerifier\n+  #233 = Utf8               (Ljavax/net/ssl/HostnameVerifier;)V\n+  #234 = Utf8               isEndpointCheckingEnabled\n+  #235 = Utf8               setEndpointCheckingEnabled\n+  #236 = Utf8               disconnect\n+  #237 = Utf8               (Ljava/lang/String;)I\n+  #238 = Utf8               execADAT\n+  #239 = Utf8               ([B)I\n+  #240 = Utf8               execCCC\n+  #241 = Utf8               ()I\n+  #242 = Utf8               execMIC\n+  #243 = Utf8               execCONF\n+  #244 = Utf8               execENC\n+  #245 = Utf8               parseADATReply\n+  #246 = Utf8               (Ljava/lang/String;)[B\n+  #247 = Utf8               extractPrefixedData\n+  #248 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #249 = Utf8               createSSLSocket\n+  #250 = Utf8               (Ljava/net/Socket;)Ljava/net/Socket;\n+  #251 = Utf8               <clinit>\n+  #252 = Utf8               SourceFile\n+  #253 = Utf8               FTPSClient.java\n+  #254 = Utf8               org/apache/commons/net/ftp/FTPSClient\n+  #255 = Utf8               TLS\n+  #256 = NameAndType        #172:#178     // \"<init>\":(Ljava/lang/String;Z)V\n+  #257 = NameAndType        #172:#173     // \"<init>\":()V\n+  #258 = NameAndType        #147:#134     // auth:Ljava/lang/String;\n+  #259 = NameAndType        #152:#145     // isCreation:Z\n+  #260 = NameAndType        #153:#145     // isClientMode:Z\n+  #261 = NameAndType        #154:#145     // isNeedClientAuth:Z\n+  #262 = NameAndType        #155:#145     // isWantClientAuth:Z\n+  #263 = NameAndType        #156:#132     // suites:[Ljava/lang/String;\n+  #264 = NameAndType        #157:#132     // protocols:[Ljava/lang/String;\n+  #265 = Class              #381          // org/apache/commons/net/util/TrustManagerUtils\n+  #266 = NameAndType        #382:#383     // getValidateServerCertificateTrustManager:()Ljavax/net/ssl/X509TrustManager;\n+  #267 = NameAndType        #158:#159     // trustManager:Ljavax/net/ssl/TrustManager;\n+  #268 = NameAndType        #160:#161     // keyManager:Ljavax/net/ssl/KeyManager;\n+  #269 = NameAndType        #162:#163     // hostnameVerifier:Ljavax/net/ssl/HostnameVerifier;\n+  #270 = NameAndType        #146:#134     // protocol:Ljava/lang/String;\n+  #271 = NameAndType        #144:#145     // isImplicit:Z\n+  #272 = NameAndType        #384:#385     // setDefaultPort:(I)V\n+  #273 = NameAndType        #148:#149     // context:Ljavax/net/ssl/SSLContext;\n+  #274 = NameAndType        #172:#180     // \"<init>\":(ZLjavax/net/ssl/SSLContext;)V\n+  #275 = NameAndType        #190:#173     // sslNegotiation:()V\n+  #276 = NameAndType        #185:#173     // _connectAction_:()V\n+  #277 = NameAndType        #188:#173     // execAUTH:()V\n+  #278 = Utf8               AUTH\n+  #279 = NameAndType        #218:#219     // sendCommand:(Ljava/lang/String;Ljava/lang/String;)I\n+  #280 = Utf8               org/apache/commons/net/ftp/FTPReply\n+  #281 = Utf8               javax/net/ssl/SSLException\n+  #282 = NameAndType        #386:#184     // getReplyString:()Ljava/lang/String;\n+  #283 = NameAndType        #172:#177     // \"<init>\":(Ljava/lang/String;)V\n+  #284 = NameAndType        #191:#192     // getKeyManager:()Ljavax/net/ssl/KeyManager;\n+  #285 = NameAndType        #226:#227     // getTrustManager:()Ljavax/net/ssl/TrustManager;\n+  #286 = Class              #387          // org/apache/commons/net/util/SSLContextUtils\n+  #287 = NameAndType        #388:#389     // createSSLContext:(Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;\n+  #288 = NameAndType        #390:#151     // _socket_:Ljava/net/Socket;\n+  #289 = NameAndType        #150:#151     // plainSocket:Ljava/net/Socket;\n+  #290 = NameAndType        #189:#173     // initSslContext:()V\n+  #291 = NameAndType        #249:#250     // createSSLSocket:(Ljava/net/Socket;)Ljava/net/Socket;\n+  #292 = Utf8               javax/net/ssl/SSLSocket\n+  #293 = NameAndType        #391:#176     // setEnableSessionCreation:(Z)V\n+  #294 = NameAndType        #202:#176     // setUseClientMode:(Z)V\n+  #295 = NameAndType        #164:#145     // tlsEndpointChecking:Z\n+  #296 = Class              #392          // org/apache/commons/net/util/SSLSocketUtils\n+  #297 = NameAndType        #393:#394     // enableEndpointNameVerification:(Ljavax/net/ssl/SSLSocket;)Z\n+  #298 = NameAndType        #198:#176     // setNeedClientAuth:(Z)V\n+  #299 = NameAndType        #200:#176     // setWantClientAuth:(Z)V\n+  #300 = NameAndType        #208:#205     // setEnabledProtocols:([Ljava/lang/String;)V\n+  #301 = NameAndType        #204:#205     // setEnabledCipherSuites:([Ljava/lang/String;)V\n+  #302 = NameAndType        #395:#173     // startHandshake:()V\n+  #303 = Utf8               java/io/BufferedReader\n+  #304 = Utf8               java/io/InputStreamReader\n+  #305 = NameAndType        #396:#397     // getInputStream:()Ljava/io/InputStream;\n+  #306 = NameAndType        #398:#184     // getControlEncoding:()Ljava/lang/String;\n+  #307 = NameAndType        #172:#399     // \"<init>\":(Ljava/io/InputStream;Ljava/lang/String;)V\n+  #308 = NameAndType        #172:#400     // \"<init>\":(Ljava/io/Reader;)V\n+  #309 = NameAndType        #401:#402     // _controlInput_:Ljava/io/BufferedReader;\n+  #310 = Utf8               java/io/BufferedWriter\n+  #311 = Utf8               java/io/OutputStreamWriter\n+  #312 = NameAndType        #403:#404     // getOutputStream:()Ljava/io/OutputStream;\n+  #313 = NameAndType        #172:#405     // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #314 = NameAndType        #172:#406     // \"<init>\":(Ljava/io/Writer;)V\n+  #315 = NameAndType        #407:#408     // _controlOutput_:Ljava/io/BufferedWriter;\n+  #316 = NameAndType        #409:#134     // _hostname_:Ljava/lang/String;\n+  #317 = NameAndType        #410:#411     // getSession:()Ljavax/net/ssl/SSLSession;\n+  #318 = Class              #412          // javax/net/ssl/HostnameVerifier\n+  #319 = NameAndType        #413:#414     // verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\n+  #320 = Utf8               javax/net/ssl/SSLHandshakeException\n+  #321 = Utf8               Hostname doesn\\'t match certificate\n+  #322 = NameAndType        #196:#197     // getEnableSessionCreation:()Z\n+  #323 = NameAndType        #199:#197     // getNeedClientAuth:()Z\n+  #324 = NameAndType        #201:#197     // getWantClientAuth:()Z\n+  #325 = NameAndType        #203:#197     // getUseClientMode:()Z\n+  #326 = Utf8               java/lang/String\n+  #327 = Class              #415          // java/lang/System\n+  #328 = NameAndType        #416:#417     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #329 = NameAndType        #206:#207     // getEnabledCipherSuites:()[Ljava/lang/String;\n+  #330 = NameAndType        #209:#207     // getEnabledProtocols:()[Ljava/lang/String;\n+  #331 = Utf8               java/lang/IllegalArgumentException\n+  #332 = Utf8               PBSZ\n+  #333 = NameAndType        #418:#419     // valueOf:(J)Ljava/lang/String;\n+  #334 = NameAndType        #210:#211     // execPBSZ:(J)V\n+  #335 = Utf8               PBSZ=\n+  #336 = NameAndType        #247:#248     // extractPrefixedData:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #337 = Class              #420          // java/lang/Long\n+  #338 = NameAndType        #421:#422     // parseLong:(Ljava/lang/String;)J\n+  #339 = Utf8               C\n+  #340 = NameAndType        #215:#216     // checkPROTValue:(Ljava/lang/String;)Z\n+  #341 = Utf8               PROT\n+  #342 = NameAndType        #423:#424     // equals:(Ljava/lang/Object;)Z\n+  #343 = NameAndType        #425:#426     // setSocketFactory:(Ljavax/net/SocketFactory;)V\n+  #344 = NameAndType        #427:#428     // setServerSocketFactory:(Ljavax/net/ServerSocketFactory;)V\n+  #345 = Utf8               org/apache/commons/net/ftp/FTPSSocketFactory\n+  #346 = NameAndType        #172:#181     // \"<init>\":(Ljavax/net/ssl/SSLContext;)V\n+  #347 = Utf8               org/apache/commons/net/ftp/FTPSServerSocketFactory\n+  #348 = NameAndType        #131:#132     // PROT_COMMAND_VALUE:[Ljava/lang/String;\n+  #349 = Utf8               CCC\n+  #350 = NameAndType        #429:#173     // close:()V\n+  #351 = Class              #430          // org/apache/commons/net/ftp/FTPCommand\n+  #352 = NameAndType        #431:#432     // getCommand:(I)Ljava/lang/String;\n+  #353 = NameAndType        #220:#222     // _openDataConnection_:(Ljava/lang/String;Ljava/lang/String;)Ljava/net/Socket;\n+  #354 = NameAndType        #224:#225     // _prepareDataSocket_:(Ljava/net/Socket;)V\n+  #355 = NameAndType        #236:#173     // disconnect:()V\n+  #356 = Utf8               ADAT\n+  #357 = Class              #433          // org/apache/commons/net/util/Base64\n+  #358 = NameAndType        #434:#435     // encodeBase64StringUnChunked:([B)Ljava/lang/String;\n+  #359 = NameAndType        #218:#237     // sendCommand:(Ljava/lang/String;)I\n+  #360 = Utf8               MIC\n+  #361 = Utf8\n+  #362 = Utf8               CONF\n+  #363 = Utf8               ENC\n+  #364 = Utf8               ADAT=\n+  #365 = NameAndType        #436:#246     // decodeBase64:(Ljava/lang/String;)[B\n+  #366 = NameAndType        #437:#237     // indexOf:(Ljava/lang/String;)I\n+  #367 = NameAndType        #438:#241     // length:()I\n+  #368 = NameAndType        #439:#432     // substring:(I)Ljava/lang/String;\n+  #369 = NameAndType        #440:#184     // trim:()Ljava/lang/String;\n+  #370 = Class              #441          // javax/net/ssl/SSLContext\n+  #371 = NameAndType        #442:#443     // getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;\n+  #372 = NameAndType        #444:#241     // getPort:()I\n+  #373 = Class              #445          // javax/net/ssl/SSLSocketFactory\n+  #374 = NameAndType        #446:#447     // createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;\n+  #375 = Utf8               E\n+  #376 = Utf8               S\n+  #377 = Utf8               P\n+  #378 = Utf8               org/apache/commons/net/ftp/FTPClient\n+  #379 = Utf8               java/io/IOException\n+  #380 = Utf8               java/net/Socket\n+  #381 = Utf8               org/apache/commons/net/util/TrustManagerUtils\n+  #382 = Utf8               getValidateServerCertificateTrustManager\n+  #383 = Utf8               ()Ljavax/net/ssl/X509TrustManager;\n+  #384 = Utf8               setDefaultPort\n+  #385 = Utf8               (I)V\n+  #386 = Utf8               getReplyString\n+  #387 = Utf8               org/apache/commons/net/util/SSLContextUtils\n+  #388 = Utf8               createSSLContext\n+  #389 = Utf8               (Ljava/lang/String;Ljavax/net/ssl/KeyManager;Ljavax/net/ssl/TrustManager;)Ljavax/net/ssl/SSLContext;\n+  #390 = Utf8               _socket_\n+  #391 = Utf8               setEnableSessionCreation\n+  #392 = Utf8               org/apache/commons/net/util/SSLSocketUtils\n+  #393 = Utf8               enableEndpointNameVerification\n+  #394 = Utf8               (Ljavax/net/ssl/SSLSocket;)Z\n+  #395 = Utf8               startHandshake\n+  #396 = Utf8               getInputStream\n+  #397 = Utf8               ()Ljava/io/InputStream;\n+  #398 = Utf8               getControlEncoding\n+  #399 = Utf8               (Ljava/io/InputStream;Ljava/lang/String;)V\n+  #400 = Utf8               (Ljava/io/Reader;)V\n+  #401 = Utf8               _controlInput_\n+  #402 = Utf8               Ljava/io/BufferedReader;\n+  #403 = Utf8               getOutputStream\n+  #404 = Utf8               ()Ljava/io/OutputStream;\n+  #405 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+  #406 = Utf8               (Ljava/io/Writer;)V\n+  #407 = Utf8               _controlOutput_\n+  #408 = Utf8               Ljava/io/BufferedWriter;\n+  #409 = Utf8               _hostname_\n+  #410 = Utf8               getSession\n+  #411 = Utf8               ()Ljavax/net/ssl/SSLSession;\n+  #412 = Utf8               javax/net/ssl/HostnameVerifier\n+  #413 = Utf8               verify\n+  #414 = Utf8               (Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z\n+  #415 = Utf8               java/lang/System\n+  #416 = Utf8               arraycopy\n+  #417 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #418 = Utf8               valueOf\n+  #419 = Utf8               (J)Ljava/lang/String;\n+  #420 = Utf8               java/lang/Long\n+  #421 = Utf8               parseLong\n+  #422 = Utf8               (Ljava/lang/String;)J\n+  #423 = Utf8               equals\n+  #424 = Utf8               (Ljava/lang/Object;)Z\n+  #425 = Utf8               setSocketFactory\n+  #426 = Utf8               (Ljavax/net/SocketFactory;)V\n+  #427 = Utf8               setServerSocketFactory\n+  #428 = Utf8               (Ljavax/net/ServerSocketFactory;)V\n+  #429 = Utf8               close\n+  #430 = Utf8               org/apache/commons/net/ftp/FTPCommand\n+  #431 = Utf8               getCommand\n+  #432 = Utf8               (I)Ljava/lang/String;\n+  #433 = Utf8               org/apache/commons/net/util/Base64\n+  #434 = Utf8               encodeBase64StringUnChunked\n+  #435 = Utf8               ([B)Ljava/lang/String;\n+  #436 = Utf8               decodeBase64\n+  #437 = Utf8               indexOf\n+  #438 = Utf8               length\n+  #439 = Utf8               substring\n+  #440 = Utf8               trim\n+  #441 = Utf8               javax/net/ssl/SSLContext\n+  #442 = Utf8               getSocketFactory\n+  #443 = Utf8               ()Ljavax/net/ssl/SSLSocketFactory;\n+  #444 = Utf8               getPort\n+  #445 = Utf8               javax/net/ssl/SSLSocketFactory\n+  #446 = Utf8               createSocket\n+  #447 = Utf8               (Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;\n {\n   public static final int DEFAULT_FTPS_DATA_PORT = 989;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 989\n \n   public static final int DEFAULT_FTPS_PORT = 990;\n"}]}
