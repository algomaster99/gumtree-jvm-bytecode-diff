{"diffoscope-json-version": 1, "source1": "first/MurmurHash2.class", "source2": "second/MurmurHash2.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,91 +1,91 @@\n-  SHA-256 checksum d7e8f2056097a9e4c0b48875b1771ab8c64dc3758cf88b5e403502546c5ee25b\n+  SHA-256 checksum dca4ec3e3ce382cabc8c39bab5f812eb939ae649c463cd120681ba123192664a\n   Compiled from \"MurmurHash2.java\"\n public final class org.apache.commons.codec.digest.MurmurHash2\n   minor version: 0\n   major version: 51\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #19                         // org/apache/commons/codec/digest/MurmurHash2\n-  super_class: #20                        // java/lang/Object\n+  this_class: #10                         // org/apache/commons/codec/digest/MurmurHash2\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 9, attributes: 1\n Constant pool:\n-   #1 = Methodref          #20.#61        // java/lang/Object.\"<init>\":()V\n-   #2 = Integer            1540483477\n-   #3 = Integer            -1756908916\n-   #4 = Methodref          #19.#62        // org/apache/commons/codec/digest/MurmurHash2.hash32:([BII)I\n-   #5 = Methodref          #63.#64        // java/lang/String.getBytes:()[B\n-   #6 = Methodref          #19.#65        // org/apache/commons/codec/digest/MurmurHash2.hash32:([BI)I\n-   #7 = Methodref          #63.#66        // java/lang/String.substring:(II)Ljava/lang/String;\n-   #8 = Methodref          #19.#67        // org/apache/commons/codec/digest/MurmurHash2.hash32:(Ljava/lang/String;)I\n-   #9 = Long               -4132994306676758123l\n-  #11 = Long               4294967295l\n-  #13 = Long               255l\n-  #15 = Integer            -512093083\n-  #16 = Methodref          #19.#68        // org/apache/commons/codec/digest/MurmurHash2.hash64:([BII)J\n-  #17 = Methodref          #19.#69        // org/apache/commons/codec/digest/MurmurHash2.hash64:([BI)J\n-  #18 = Methodref          #19.#70        // org/apache/commons/codec/digest/MurmurHash2.hash64:(Ljava/lang/String;)J\n-  #19 = Class              #71            // org/apache/commons/codec/digest/MurmurHash2\n-  #20 = Class              #72            // java/lang/Object\n-  #21 = Utf8               <init>\n-  #22 = Utf8               ()V\n-  #23 = Utf8               Code\n-  #24 = Utf8               LineNumberTable\n-  #25 = Utf8               LocalVariableTable\n-  #26 = Utf8               this\n-  #27 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash2;\n-  #28 = Utf8               hash32\n-  #29 = Utf8               ([BII)I\n-  #30 = Utf8               i4\n-  #31 = Utf8               I\n-  #32 = Utf8               k\n-  #33 = Utf8               i\n-  #34 = Utf8               data\n-  #35 = Utf8               [B\n-  #36 = Utf8               length\n-  #37 = Utf8               seed\n-  #38 = Utf8               m\n-  #39 = Utf8               r\n-  #40 = Utf8               h\n-  #41 = Utf8               length4\n-  #42 = Utf8               StackMapTable\n-  #43 = Class              #35            // \"[B\"\n-  #44 = Utf8               ([BI)I\n-  #45 = Utf8               (Ljava/lang/String;)I\n-  #46 = Utf8               text\n-  #47 = Utf8               Ljava/lang/String;\n-  #48 = Utf8               bytes\n-  #49 = Utf8               (Ljava/lang/String;II)I\n-  #50 = Utf8               from\n-  #51 = Utf8               hash64\n-  #52 = Utf8               ([BII)J\n-  #53 = Utf8               i8\n-  #54 = Utf8               J\n-  #55 = Utf8               length8\n-  #56 = Utf8               ([BI)J\n-  #57 = Utf8               (Ljava/lang/String;)J\n-  #58 = Utf8               (Ljava/lang/String;II)J\n-  #59 = Utf8               SourceFile\n-  #60 = Utf8               MurmurHash2.java\n-  #61 = NameAndType        #21:#22        // \"<init>\":()V\n-  #62 = NameAndType        #28:#29        // hash32:([BII)I\n-  #63 = Class              #73            // java/lang/String\n-  #64 = NameAndType        #74:#75        // getBytes:()[B\n-  #65 = NameAndType        #28:#44        // hash32:([BI)I\n-  #66 = NameAndType        #76:#77        // substring:(II)Ljava/lang/String;\n-  #67 = NameAndType        #28:#45        // hash32:(Ljava/lang/String;)I\n-  #68 = NameAndType        #51:#52        // hash64:([BII)J\n-  #69 = NameAndType        #51:#56        // hash64:([BI)J\n-  #70 = NameAndType        #51:#57        // hash64:(Ljava/lang/String;)J\n-  #71 = Utf8               org/apache/commons/codec/digest/MurmurHash2\n-  #72 = Utf8               java/lang/Object\n-  #73 = Utf8               java/lang/String\n-  #74 = Utf8               getBytes\n-  #75 = Utf8               ()[B\n-  #76 = Utf8               substring\n-  #77 = Utf8               (II)Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Integer            1540483477\n+   #8 = Integer            -1756908916\n+   #9 = Methodref          #10.#11        // org/apache/commons/codec/digest/MurmurHash2.hash32:([BII)I\n+  #10 = Class              #12            // org/apache/commons/codec/digest/MurmurHash2\n+  #11 = NameAndType        #13:#14        // hash32:([BII)I\n+  #12 = Utf8               org/apache/commons/codec/digest/MurmurHash2\n+  #13 = Utf8               hash32\n+  #14 = Utf8               ([BII)I\n+  #15 = Methodref          #16.#17        // java/lang/String.getBytes:()[B\n+  #16 = Class              #18            // java/lang/String\n+  #17 = NameAndType        #19:#20        // getBytes:()[B\n+  #18 = Utf8               java/lang/String\n+  #19 = Utf8               getBytes\n+  #20 = Utf8               ()[B\n+  #21 = Methodref          #10.#22        // org/apache/commons/codec/digest/MurmurHash2.hash32:([BI)I\n+  #22 = NameAndType        #13:#23        // hash32:([BI)I\n+  #23 = Utf8               ([BI)I\n+  #24 = Methodref          #16.#25        // java/lang/String.substring:(II)Ljava/lang/String;\n+  #25 = NameAndType        #26:#27        // substring:(II)Ljava/lang/String;\n+  #26 = Utf8               substring\n+  #27 = Utf8               (II)Ljava/lang/String;\n+  #28 = Methodref          #10.#29        // org/apache/commons/codec/digest/MurmurHash2.hash32:(Ljava/lang/String;)I\n+  #29 = NameAndType        #13:#30        // hash32:(Ljava/lang/String;)I\n+  #30 = Utf8               (Ljava/lang/String;)I\n+  #31 = Long               -4132994306676758123l\n+  #33 = Long               4294967295l\n+  #35 = Long               255l\n+  #37 = Integer            -512093083\n+  #38 = Methodref          #10.#39        // org/apache/commons/codec/digest/MurmurHash2.hash64:([BII)J\n+  #39 = NameAndType        #40:#41        // hash64:([BII)J\n+  #40 = Utf8               hash64\n+  #41 = Utf8               ([BII)J\n+  #42 = Methodref          #10.#43        // org/apache/commons/codec/digest/MurmurHash2.hash64:([BI)J\n+  #43 = NameAndType        #40:#44        // hash64:([BI)J\n+  #44 = Utf8               ([BI)J\n+  #45 = Methodref          #10.#46        // org/apache/commons/codec/digest/MurmurHash2.hash64:(Ljava/lang/String;)J\n+  #46 = NameAndType        #40:#47        // hash64:(Ljava/lang/String;)J\n+  #47 = Utf8               (Ljava/lang/String;)J\n+  #48 = Utf8               Code\n+  #49 = Utf8               LineNumberTable\n+  #50 = Utf8               LocalVariableTable\n+  #51 = Utf8               this\n+  #52 = Utf8               Lorg/apache/commons/codec/digest/MurmurHash2;\n+  #53 = Utf8               i4\n+  #54 = Utf8               I\n+  #55 = Utf8               k\n+  #56 = Utf8               i\n+  #57 = Utf8               data\n+  #58 = Utf8               [B\n+  #59 = Utf8               length\n+  #60 = Utf8               seed\n+  #61 = Utf8               m\n+  #62 = Utf8               r\n+  #63 = Utf8               h\n+  #64 = Utf8               length4\n+  #65 = Utf8               StackMapTable\n+  #66 = Class              #58            // \"[B\"\n+  #67 = Utf8               text\n+  #68 = Utf8               Ljava/lang/String;\n+  #69 = Utf8               bytes\n+  #70 = Utf8               (Ljava/lang/String;II)I\n+  #71 = Utf8               from\n+  #72 = Utf8               i8\n+  #73 = Utf8               J\n+  #74 = Utf8               length8\n+  #75 = Utf8               (Ljava/lang/String;II)J\n+  #76 = Utf8               SourceFile\n+  #77 = Utf8               MurmurHash2.java\n {\n   private org.apache.commons.codec.digest.MurmurHash2();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -99,15 +99,15 @@\n             0       5     0  this   Lorg/apache/commons/codec/digest/MurmurHash2;\n \n   public static int hash32(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=10, args_size=3\n-         0: ldc           #2                  // int 1540483477\n+         0: ldc           #7                  // int 1540483477\n          2: istore_3\n          3: bipush        24\n          5: istore        4\n          7: iload_2\n          8: iload_1\n          9: ixor\n         10: istore        5\n@@ -159,29 +159,29 @@\n         77: sipush        255\n         80: iand\n         81: bipush        24\n         83: ishl\n         84: iadd\n         85: istore        9\n         87: iload         9\n-        89: ldc           #2                  // int 1540483477\n+        89: ldc           #7                  // int 1540483477\n         91: imul\n         92: istore        9\n         94: iload         9\n         96: iload         9\n         98: bipush        24\n        100: iushr\n        101: ixor\n        102: istore        9\n        104: iload         9\n-       106: ldc           #2                  // int 1540483477\n+       106: ldc           #7                  // int 1540483477\n        108: imul\n        109: istore        9\n        111: iload         5\n-       113: ldc           #2                  // int 1540483477\n+       113: ldc           #7                  // int 1540483477\n        115: imul\n        116: istore        5\n        118: iload         5\n        120: iload         9\n        122: ixor\n        123: istore        5\n        125: iinc          7, 1\n@@ -230,25 +230,25 @@\n        206: iand\n        207: baload\n        208: sipush        255\n        211: iand\n        212: ixor\n        213: istore        5\n        215: iload         5\n-       217: ldc           #2                  // int 1540483477\n+       217: ldc           #7                  // int 1540483477\n        219: imul\n        220: istore        5\n        222: iload         5\n        224: iload         5\n        226: bipush        13\n        228: iushr\n        229: ixor\n        230: istore        5\n        232: iload         5\n-       234: ldc           #2                  // int 1540483477\n+       234: ldc           #7                  // int 1540483477\n        236: imul\n        237: istore        5\n        239: iload         5\n        241: iload         5\n        243: bipush        15\n        245: iushr\n        246: ixor\n@@ -305,36 +305,36 @@\n   public static int hash32(byte[], int);\n     descriptor: ([BI)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #3                  // int -1756908916\n-         4: invokestatic  #4                  // Method hash32:([BII)I\n+         2: ldc           #8                  // int -1756908916\n+         4: invokestatic  #9                  // Method hash32:([BII)I\n          7: ireturn\n       LineNumberTable:\n         line 98: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n \n   public static int hash32(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method java/lang/String.getBytes:()[B\n+         1: invokevirtual #15                 // Method java/lang/String.getBytes:()[B\n          4: astore_1\n          5: aload_1\n          6: aload_1\n          7: arraylength\n-         8: invokestatic  #6                  // Method hash32:([BI)I\n+         8: invokestatic  #21                 // Method hash32:([BI)I\n         11: ireturn\n       LineNumberTable:\n         line 108: 0\n         line 109: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n@@ -346,41 +346,41 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_1\n          3: iload_2\n          4: iadd\n-         5: invokevirtual #7                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n-         8: invokestatic  #8                  // Method hash32:(Ljava/lang/String;)I\n+         5: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+         8: invokestatic  #28                 // Method hash32:(Ljava/lang/String;)I\n         11: ireturn\n       LineNumberTable:\n         line 121: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n             0      12     1  from   I\n             0      12     2 length   I\n \n   public static long hash64(byte[], int, int);\n     descriptor: ([BII)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=6, locals=13, args_size=3\n-         0: ldc2_w        #9                  // long -4132994306676758123l\n+         0: ldc2_w        #31                 // long -4132994306676758123l\n          3: lstore_3\n          4: bipush        47\n          6: istore        5\n          8: iload_2\n          9: i2l\n-        10: ldc2_w        #11                 // long 4294967295l\n+        10: ldc2_w        #33                 // long 4294967295l\n         13: land\n         14: iload_1\n         15: i2l\n-        16: ldc2_w        #9                  // long -4132994306676758123l\n+        16: ldc2_w        #31                 // long -4132994306676758123l\n         19: lmul\n         20: lxor\n         21: lstore        6\n         23: iload_1\n         24: bipush        8\n         26: idiv\n         27: istore        8\n@@ -395,114 +395,114 @@\n         44: istore        10\n         46: aload_0\n         47: iload         10\n         49: iconst_0\n         50: iadd\n         51: baload\n         52: i2l\n-        53: ldc2_w        #13                 // long 255l\n+        53: ldc2_w        #35                 // long 255l\n         56: land\n         57: aload_0\n         58: iload         10\n         60: iconst_1\n         61: iadd\n         62: baload\n         63: i2l\n-        64: ldc2_w        #13                 // long 255l\n+        64: ldc2_w        #35                 // long 255l\n         67: land\n         68: bipush        8\n         70: lshl\n         71: ladd\n         72: aload_0\n         73: iload         10\n         75: iconst_2\n         76: iadd\n         77: baload\n         78: i2l\n-        79: ldc2_w        #13                 // long 255l\n+        79: ldc2_w        #35                 // long 255l\n         82: land\n         83: bipush        16\n         85: lshl\n         86: ladd\n         87: aload_0\n         88: iload         10\n         90: iconst_3\n         91: iadd\n         92: baload\n         93: i2l\n-        94: ldc2_w        #13                 // long 255l\n+        94: ldc2_w        #35                 // long 255l\n         97: land\n         98: bipush        24\n        100: lshl\n        101: ladd\n        102: aload_0\n        103: iload         10\n        105: iconst_4\n        106: iadd\n        107: baload\n        108: i2l\n-       109: ldc2_w        #13                 // long 255l\n+       109: ldc2_w        #35                 // long 255l\n        112: land\n        113: bipush        32\n        115: lshl\n        116: ladd\n        117: aload_0\n        118: iload         10\n        120: iconst_5\n        121: iadd\n        122: baload\n        123: i2l\n-       124: ldc2_w        #13                 // long 255l\n+       124: ldc2_w        #35                 // long 255l\n        127: land\n        128: bipush        40\n        130: lshl\n        131: ladd\n        132: aload_0\n        133: iload         10\n        135: bipush        6\n        137: iadd\n        138: baload\n        139: i2l\n-       140: ldc2_w        #13                 // long 255l\n+       140: ldc2_w        #35                 // long 255l\n        143: land\n        144: bipush        48\n        146: lshl\n        147: ladd\n        148: aload_0\n        149: iload         10\n        151: bipush        7\n        153: iadd\n        154: baload\n        155: i2l\n-       156: ldc2_w        #13                 // long 255l\n+       156: ldc2_w        #35                 // long 255l\n        159: land\n        160: bipush        56\n        162: lshl\n        163: ladd\n        164: lstore        11\n        166: lload         11\n-       168: ldc2_w        #9                  // long -4132994306676758123l\n+       168: ldc2_w        #31                 // long -4132994306676758123l\n        171: lmul\n        172: lstore        11\n        174: lload         11\n        176: lload         11\n        178: bipush        47\n        180: lushr\n        181: lxor\n        182: lstore        11\n        184: lload         11\n-       186: ldc2_w        #9                  // long -4132994306676758123l\n+       186: ldc2_w        #31                 // long -4132994306676758123l\n        189: lmul\n        190: lstore        11\n        192: lload         6\n        194: lload         11\n        196: lxor\n        197: lstore        6\n        199: lload         6\n-       201: ldc2_w        #9                  // long -4132994306676758123l\n+       201: ldc2_w        #31                 // long -4132994306676758123l\n        204: lmul\n        205: lstore        6\n        207: iinc          9, 1\n        210: goto          32\n        213: iload_1\n        214: bipush        8\n        216: irem\n@@ -614,25 +614,25 @@\n        394: baload\n        395: sipush        255\n        398: iand\n        399: i2l\n        400: lxor\n        401: lstore        6\n        403: lload         6\n-       405: ldc2_w        #9                  // long -4132994306676758123l\n+       405: ldc2_w        #31                 // long -4132994306676758123l\n        408: lmul\n        409: lstore        6\n        411: lload         6\n        413: lload         6\n        415: bipush        47\n        417: lushr\n        418: lxor\n        419: lstore        6\n        421: lload         6\n-       423: ldc2_w        #9                  // long -4132994306676758123l\n+       423: ldc2_w        #31                 // long -4132994306676758123l\n        426: lmul\n        427: lstore        6\n        429: lload         6\n        431: lload         6\n        433: bipush        47\n        435: lushr\n        436: lxor\n@@ -697,36 +697,36 @@\n   public static long hash64(byte[], int);\n     descriptor: ([BI)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: ldc           #15                 // int -512093083\n-         4: invokestatic  #16                 // Method hash64:([BII)J\n+         2: ldc           #37                 // int -512093083\n+         4: invokestatic  #38                 // Method hash64:([BII)J\n          7: lreturn\n       LineNumberTable:\n         line 188: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  data   [B\n             0       8     1 length   I\n \n   public static long hash64(java.lang.String);\n     descriptor: (Ljava/lang/String;)J\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method java/lang/String.getBytes:()[B\n+         1: invokevirtual #15                 // Method java/lang/String.getBytes:()[B\n          4: astore_1\n          5: aload_1\n          6: aload_1\n          7: arraylength\n-         8: invokestatic  #17                 // Method hash64:([BI)J\n+         8: invokestatic  #42                 // Method hash64:([BI)J\n         11: lreturn\n       LineNumberTable:\n         line 198: 0\n         line 199: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n@@ -738,16 +738,16 @@\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_1\n          3: iload_2\n          4: iadd\n-         5: invokevirtual #7                  // Method java/lang/String.substring:(II)Ljava/lang/String;\n-         8: invokestatic  #18                 // Method hash64:(Ljava/lang/String;)J\n+         5: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+         8: invokestatic  #45                 // Method hash64:(Ljava/lang/String;)J\n         11: lreturn\n       LineNumberTable:\n         line 211: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  text   Ljava/lang/String;\n             0      12     1  from   I\n"}]}
