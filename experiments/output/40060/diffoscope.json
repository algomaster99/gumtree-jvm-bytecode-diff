{"diffoscope-json-version": 1, "source1": "first/BlockLZ4CompressorOutputStream$Pair.class", "source2": "second/BlockLZ4CompressorOutputStream$Pair.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,218 +1,213 @@\n-  SHA-256 checksum 211a31f7e7871f1d46d5b4b86cf66ee3d01099ab29652dda2fc6786c8163cd6e\n+  SHA-256 checksum 8a65e2f9aa81546f9db86018ea52781ce37c765f843e156117206a3e45a57981\n   Compiled from \"BlockLZ4CompressorOutputStream.java\"\n final class org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair\n   minor version: 0\n   major version: 52\n   flags: (0x0030) ACC_FINAL, ACC_SUPER\n-  this_class: #37                         // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n-  super_class: #40                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 20, attributes: 2\n Constant pool:\n-    #1 = Class              #126          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n-    #2 = Methodref          #37.#127      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.prependTo:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n-    #3 = Methodref          #37.#128      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.splitWithNewBackReferenceLengthOf:(I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-    #4 = Methodref          #37.#129      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.backReferenceLength:()I\n-    #5 = Methodref          #37.#130      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.prependLiteral:([B)V\n-    #6 = Methodref          #37.#131      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.hasBeenWritten:()Z\n-    #7 = Methodref          #40.#132      // java/lang/Object.\"<init>\":()V\n-    #8 = Class              #133          // java/util/LinkedList\n-    #9 = Methodref          #8.#132       // java/util/LinkedList.\"<init>\":()V\n-   #10 = Fieldref           #37.#134      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.literals:Ljava/util/Deque;\n-   #11 = InterfaceMethodref #135.#136     // java/util/Deque.addFirst:(Ljava/lang/Object;)V\n-   #12 = Methodref          #64.#137      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n-   #13 = Methodref          #64.#138      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n-   #14 = Methodref          #64.#139      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n-   #15 = Methodref          #140.#141     // java/util/Arrays.copyOfRange:([BII)[B\n-   #16 = InterfaceMethodref #135.#142     // java/util/Deque.add:(Ljava/lang/Object;)Z\n-   #17 = Methodref          #37.#143      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.hasBackReference:()Z\n-   #18 = Class              #144          // java/lang/IllegalStateException\n-   #19 = Methodref          #18.#132      // java/lang/IllegalStateException.\"<init>\":()V\n-   #20 = Methodref          #71.#138      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n-   #21 = Fieldref           #37.#145      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.brOffset:I\n-   #22 = Methodref          #71.#139      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n-   #23 = Fieldref           #37.#146      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.brLength:I\n-   #24 = Methodref          #37.#147      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.literalLength:()I\n-   #25 = Fieldref           #37.#148      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.written:Z\n-   #26 = Methodref          #37.#149      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.lengths:(II)I\n-   #27 = Methodref          #150.#151     // java/io/OutputStream.write:(I)V\n-   #28 = Class              #152          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-   #29 = Methodref          #37.#153      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.writeLength:(ILjava/io/OutputStream;)V\n-   #30 = InterfaceMethodref #135.#154     // java/util/Deque.iterator:()Ljava/util/Iterator;\n-   #31 = InterfaceMethodref #155.#156     // java/util/Iterator.hasNext:()Z\n-   #32 = InterfaceMethodref #155.#157     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #33 = Class              #62           // \"[B\"\n-   #34 = Methodref          #150.#158     // java/io/OutputStream.write:([B)V\n-   #35 = Methodref          #159.#160     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Ljava/io/OutputStream;JI)V\n-   #36 = InterfaceMethodref #135.#161     // java/util/Deque.descendingIterator:()Ljava/util/Iterator;\n-   #37 = Class              #162          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n-   #38 = Methodref          #37.#132      // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.\"<init>\":()V\n-   #39 = InterfaceMethodref #135.#163     // java/util/Deque.addAll:(Ljava/util/Collection;)Z\n-   #40 = Class              #164          // java/lang/Object\n-   #41 = Utf8               literals\n-   #42 = Utf8               Ljava/util/Deque;\n-   #43 = Utf8               Signature\n-   #44 = Utf8               Ljava/util/Deque<[B>;\n-   #45 = Utf8               brOffset\n-   #46 = Utf8               I\n-   #47 = Utf8               brLength\n-   #48 = Utf8               written\n-   #49 = Utf8               Z\n-   #50 = Utf8               <init>\n-   #51 = Utf8               ()V\n-   #52 = Utf8               Code\n-   #53 = Utf8               LineNumberTable\n-   #54 = Utf8               LocalVariableTable\n-   #55 = Utf8               this\n-   #56 = Utf8               Pair\n-   #57 = Utf8               InnerClasses\n-   #58 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-   #59 = Utf8               prependLiteral\n-   #60 = Utf8               ([B)V\n-   #61 = Utf8               data\n-   #62 = Utf8               [B\n-   #63 = Utf8               addLiteral\n-   #64 = Class              #166          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-   #65 = Utf8               LiteralBlock\n-   #66 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)[B\n-   #67 = Utf8               block\n-   #68 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n-   #69 = Utf8               copy\n-   #70 = Utf8               setBackReference\n-   #71 = Class              #167          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-   #72 = Utf8               BackReference\n-   #73 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-   #74 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n-   #75 = Utf8               StackMapTable\n-   #76 = Utf8               hasBackReference\n-   #77 = Utf8               ()Z\n-   #78 = Utf8               canBeWritten\n-   #79 = Utf8               (I)Z\n-   #80 = Utf8               lengthOfBlocksAfterThisPair\n-   #81 = Utf8               length\n-   #82 = Utf8               ()I\n-   #83 = Utf8               hasBeenWritten\n-   #84 = Utf8               writeTo\n-   #85 = Utf8               (Ljava/io/OutputStream;)V\n-   #86 = Utf8               b\n-   #87 = Utf8               out\n-   #88 = Utf8               Ljava/io/OutputStream;\n-   #89 = Utf8               litLength\n-   #90 = Class              #168          // java/util/Iterator\n-   #91 = Utf8               Exceptions\n-   #92 = Class              #169          // java/io/IOException\n-   #93 = Utf8               literalLength\n-   #94 = Utf8               lengths\n-   #95 = Utf8               (II)I\n-   #96 = Utf8               l\n-   #97 = Utf8               br\n-   #98 = Utf8               writeLength\n-   #99 = Utf8               (ILjava/io/OutputStream;)V\n-  #100 = Utf8               backReferenceLength\n-  #101 = Utf8               prependTo\n-  #102 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n-  #103 = Utf8               other\n-  #104 = Utf8               listBackwards\n-  #105 = Utf8               Ljava/util/Iterator;\n-  #106 = Utf8               LocalVariableTypeTable\n-  #107 = Utf8               Ljava/util/Iterator<[B>;\n-  #108 = Utf8               splitWithNewBackReferenceLengthOf\n-  #109 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-  #110 = Utf8               newBackReferenceLength\n-  #111 = Utf8               p\n-  #112 = Utf8               access$000\n-  #113 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)Z\n-  #114 = Utf8               x0\n-  #115 = Utf8               access$100\n-  #116 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;[B)V\n-  #117 = Utf8               x1\n-  #118 = Utf8               access$200\n-  #119 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)I\n-  #120 = Utf8               access$300\n-  #121 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-  #122 = Utf8               access$400\n-  #123 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n-  #124 = Utf8               SourceFile\n-  #125 = Utf8               BlockLZ4CompressorOutputStream.java\n-  #126 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n-  #127 = NameAndType        #101:#102     // prependTo:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n-  #128 = NameAndType        #108:#109     // splitWithNewBackReferenceLengthOf:(I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-  #129 = NameAndType        #100:#82      // backReferenceLength:()I\n-  #130 = NameAndType        #59:#60       // prependLiteral:([B)V\n-  #131 = NameAndType        #83:#77       // hasBeenWritten:()Z\n-  #132 = NameAndType        #50:#51       // \"<init>\":()V\n-  #133 = Utf8               java/util/LinkedList\n-  #134 = NameAndType        #41:#42       // literals:Ljava/util/Deque;\n-  #135 = Class              #170          // java/util/Deque\n-  #136 = NameAndType        #171:#172     // addFirst:(Ljava/lang/Object;)V\n-  #137 = NameAndType        #173:#174     // getData:()[B\n-  #138 = NameAndType        #175:#82      // getOffset:()I\n-  #139 = NameAndType        #176:#82      // getLength:()I\n-  #140 = Class              #177          // java/util/Arrays\n-  #141 = NameAndType        #178:#179     // copyOfRange:([BII)[B\n-  #142 = NameAndType        #180:#181     // add:(Ljava/lang/Object;)Z\n-  #143 = NameAndType        #76:#77       // hasBackReference:()Z\n-  #144 = Utf8               java/lang/IllegalStateException\n-  #145 = NameAndType        #45:#46       // brOffset:I\n-  #146 = NameAndType        #47:#46       // brLength:I\n-  #147 = NameAndType        #93:#82       // literalLength:()I\n-  #148 = NameAndType        #48:#49       // written:Z\n-  #149 = NameAndType        #94:#95       // lengths:(II)I\n-  #150 = Class              #182          // java/io/OutputStream\n-  #151 = NameAndType        #183:#184     // write:(I)V\n-  #152 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorInputStream\n-  #153 = NameAndType        #98:#99       // writeLength:(ILjava/io/OutputStream;)V\n-  #154 = NameAndType        #185:#186     // iterator:()Ljava/util/Iterator;\n-  #155 = Class              #168          // java/util/Iterator\n-  #156 = NameAndType        #187:#77      // hasNext:()Z\n-  #157 = NameAndType        #188:#189     // next:()Ljava/lang/Object;\n-  #158 = NameAndType        #183:#60      // write:([B)V\n-  #159 = Class              #190          // org/apache/commons/compress/utils/ByteUtils\n-  #160 = NameAndType        #191:#192     // toLittleEndian:(Ljava/io/OutputStream;JI)V\n-  #161 = NameAndType        #193:#186     // descendingIterator:()Ljava/util/Iterator;\n-  #162 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n-  #163 = NameAndType        #194:#195     // addAll:(Ljava/util/Collection;)Z\n-  #164 = Utf8               java/lang/Object\n-  #165 = Class              #196          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #166 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-  #167 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-  #168 = Utf8               java/util/Iterator\n-  #169 = Utf8               java/io/IOException\n-  #170 = Utf8               java/util/Deque\n-  #171 = Utf8               addFirst\n-  #172 = Utf8               (Ljava/lang/Object;)V\n-  #173 = Utf8               getData\n-  #174 = Utf8               ()[B\n-  #175 = Utf8               getOffset\n-  #176 = Utf8               getLength\n-  #177 = Utf8               java/util/Arrays\n-  #178 = Utf8               copyOfRange\n-  #179 = Utf8               ([BII)[B\n-  #180 = Utf8               add\n-  #181 = Utf8               (Ljava/lang/Object;)Z\n-  #182 = Utf8               java/io/OutputStream\n-  #183 = Utf8               write\n-  #184 = Utf8               (I)V\n-  #185 = Utf8               iterator\n-  #186 = Utf8               ()Ljava/util/Iterator;\n-  #187 = Utf8               hasNext\n-  #188 = Utf8               next\n-  #189 = Utf8               ()Ljava/lang/Object;\n-  #190 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #191 = Utf8               toLittleEndian\n-  #192 = Utf8               (Ljava/io/OutputStream;JI)V\n-  #193 = Utf8               descendingIterator\n-  #194 = Utf8               addAll\n-  #195 = Utf8               (Ljava/util/Collection;)Z\n-  #196 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n+    #2 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               literals\n+    #6 = Utf8               Ljava/util/Deque;\n+    #7 = Utf8               Signature\n+    #8 = Utf8               Ljava/util/Deque<[B>;\n+    #9 = Utf8               brOffset\n+   #10 = Utf8               I\n+   #11 = Utf8               brLength\n+   #12 = Utf8               written\n+   #13 = Utf8               Z\n+   #14 = Utf8               <init>\n+   #15 = Utf8               ()V\n+   #16 = Utf8               Code\n+   #17 = Methodref          #3.#18        // java/lang/Object.\"<init>\":()V\n+   #18 = NameAndType        #14:#15       // \"<init>\":()V\n+   #19 = Class              #20           // java/util/LinkedList\n+   #20 = Utf8               java/util/LinkedList\n+   #21 = Methodref          #19.#18       // java/util/LinkedList.\"<init>\":()V\n+   #22 = Fieldref           #1.#23        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.literals:Ljava/util/Deque;\n+   #23 = NameAndType        #5:#6         // literals:Ljava/util/Deque;\n+   #24 = Utf8               LineNumberTable\n+   #25 = Utf8               LocalVariableTable\n+   #26 = Utf8               this\n+   #27 = Utf8               Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+   #28 = Utf8               prependLiteral\n+   #29 = Utf8               ([B)V\n+   #30 = InterfaceMethodref #31.#33       // java/util/Deque.addFirst:(Ljava/lang/Object;)V\n+   #31 = Class              #32           // java/util/Deque\n+   #32 = Utf8               java/util/Deque\n+   #33 = NameAndType        #34:#35       // addFirst:(Ljava/lang/Object;)V\n+   #34 = Utf8               addFirst\n+   #35 = Utf8               (Ljava/lang/Object;)V\n+   #36 = Utf8               data\n+   #37 = Utf8               [B\n+   #38 = Utf8               addLiteral\n+   #39 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)[B\n+   #40 = Methodref          #41.#43       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n+   #41 = Class              #42           // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+   #42 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+   #43 = NameAndType        #44:#45       // getData:()[B\n+   #44 = Utf8               getData\n+   #45 = Utf8               ()[B\n+   #46 = Methodref          #41.#47       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+   #47 = NameAndType        #48:#49       // getOffset:()I\n+   #48 = Utf8               getOffset\n+   #49 = Utf8               ()I\n+   #50 = Methodref          #41.#51       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n+   #51 = NameAndType        #52:#49       // getLength:()I\n+   #52 = Utf8               getLength\n+   #53 = Methodref          #54.#56       // java/util/Arrays.copyOfRange:([BII)[B\n+   #54 = Class              #55           // java/util/Arrays\n+   #55 = Utf8               java/util/Arrays\n+   #56 = NameAndType        #57:#58       // copyOfRange:([BII)[B\n+   #57 = Utf8               copyOfRange\n+   #58 = Utf8               ([BII)[B\n+   #59 = InterfaceMethodref #31.#60       // java/util/Deque.add:(Ljava/lang/Object;)Z\n+   #60 = NameAndType        #61:#62       // add:(Ljava/lang/Object;)Z\n+   #61 = Utf8               add\n+   #62 = Utf8               (Ljava/lang/Object;)Z\n+   #63 = Utf8               block\n+   #64 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n+   #65 = Utf8               copy\n+   #66 = Utf8               setBackReference\n+   #67 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+   #68 = Methodref          #1.#69        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.hasBackReference:()Z\n+   #69 = NameAndType        #70:#71       // hasBackReference:()Z\n+   #70 = Utf8               hasBackReference\n+   #71 = Utf8               ()Z\n+   #72 = Class              #73           // java/lang/IllegalStateException\n+   #73 = Utf8               java/lang/IllegalStateException\n+   #74 = Methodref          #72.#18       // java/lang/IllegalStateException.\"<init>\":()V\n+   #75 = Methodref          #76.#47       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n+   #76 = Class              #77           // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+   #77 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+   #78 = Fieldref           #1.#79        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.brOffset:I\n+   #79 = NameAndType        #9:#10        // brOffset:I\n+   #80 = Methodref          #76.#51       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n+   #81 = Fieldref           #1.#82        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.brLength:I\n+   #82 = NameAndType        #11:#10       // brLength:I\n+   #83 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n+   #84 = Utf8               StackMapTable\n+   #85 = Utf8               canBeWritten\n+   #86 = Utf8               (I)Z\n+   #87 = Utf8               lengthOfBlocksAfterThisPair\n+   #88 = Utf8               length\n+   #89 = Methodref          #1.#90        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.literalLength:()I\n+   #90 = NameAndType        #91:#49       // literalLength:()I\n+   #91 = Utf8               literalLength\n+   #92 = Utf8               hasBeenWritten\n+   #93 = Fieldref           #1.#94        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.written:Z\n+   #94 = NameAndType        #12:#13       // written:Z\n+   #95 = Utf8               writeTo\n+   #96 = Utf8               (Ljava/io/OutputStream;)V\n+   #97 = Utf8               Exceptions\n+   #98 = Class              #99           // java/io/IOException\n+   #99 = Utf8               java/io/IOException\n+  #100 = Methodref          #1.#101       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.lengths:(II)I\n+  #101 = NameAndType        #102:#103     // lengths:(II)I\n+  #102 = Utf8               lengths\n+  #103 = Utf8               (II)I\n+  #104 = Methodref          #105.#107     // java/io/OutputStream.write:(I)V\n+  #105 = Class              #106          // java/io/OutputStream\n+  #106 = Utf8               java/io/OutputStream\n+  #107 = NameAndType        #108:#109     // write:(I)V\n+  #108 = Utf8               write\n+  #109 = Utf8               (I)V\n+  #110 = Methodref          #1.#111       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.writeLength:(ILjava/io/OutputStream;)V\n+  #111 = NameAndType        #112:#113     // writeLength:(ILjava/io/OutputStream;)V\n+  #112 = Utf8               writeLength\n+  #113 = Utf8               (ILjava/io/OutputStream;)V\n+  #114 = InterfaceMethodref #31.#115      // java/util/Deque.iterator:()Ljava/util/Iterator;\n+  #115 = NameAndType        #116:#117     // iterator:()Ljava/util/Iterator;\n+  #116 = Utf8               iterator\n+  #117 = Utf8               ()Ljava/util/Iterator;\n+  #118 = InterfaceMethodref #119.#121     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #119 = Class              #120          // java/util/Iterator\n+  #120 = Utf8               java/util/Iterator\n+  #121 = NameAndType        #122:#123     // next:()Ljava/lang/Object;\n+  #122 = Utf8               next\n+  #123 = Utf8               ()Ljava/lang/Object;\n+  #124 = Class              #37           // \"[B\"\n+  #125 = Methodref          #105.#126     // java/io/OutputStream.write:([B)V\n+  #126 = NameAndType        #108:#29      // write:([B)V\n+  #127 = InterfaceMethodref #119.#128     // java/util/Iterator.hasNext:()Z\n+  #128 = NameAndType        #129:#71      // hasNext:()Z\n+  #129 = Utf8               hasNext\n+  #130 = Methodref          #131.#133     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Ljava/io/OutputStream;JI)V\n+  #131 = Class              #132          // org/apache/commons/compress/utils/ByteUtils\n+  #132 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #133 = NameAndType        #134:#135     // toLittleEndian:(Ljava/io/OutputStream;JI)V\n+  #134 = Utf8               toLittleEndian\n+  #135 = Utf8               (Ljava/io/OutputStream;JI)V\n+  #136 = Utf8               out\n+  #137 = Utf8               Ljava/io/OutputStream;\n+  #138 = Utf8               litLength\n+  #139 = Utf8               b\n+  #140 = Utf8               l\n+  #141 = Utf8               br\n+  #142 = Utf8               backReferenceLength\n+  #143 = Utf8               prependTo\n+  #144 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n+  #145 = InterfaceMethodref #31.#146      // java/util/Deque.descendingIterator:()Ljava/util/Iterator;\n+  #146 = NameAndType        #147:#117     // descendingIterator:()Ljava/util/Iterator;\n+  #147 = Utf8               descendingIterator\n+  #148 = Methodref          #1.#149       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.prependLiteral:([B)V\n+  #149 = NameAndType        #28:#29       // prependLiteral:([B)V\n+  #150 = Utf8               other\n+  #151 = Utf8               listBackwards\n+  #152 = Utf8               Ljava/util/Iterator;\n+  #153 = Utf8               LocalVariableTypeTable\n+  #154 = Utf8               Ljava/util/Iterator<[B>;\n+  #155 = Utf8               splitWithNewBackReferenceLengthOf\n+  #156 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+  #157 = Methodref          #1.#18        // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.\"<init>\":()V\n+  #158 = InterfaceMethodref #31.#159      // java/util/Deque.addAll:(Ljava/util/Collection;)Z\n+  #159 = NameAndType        #160:#161     // addAll:(Ljava/util/Collection;)Z\n+  #160 = Utf8               addAll\n+  #161 = Utf8               (Ljava/util/Collection;)Z\n+  #162 = Utf8               newBackReferenceLength\n+  #163 = Utf8               p\n+  #164 = Utf8               access$0\n+  #165 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)Z\n+  #166 = Methodref          #1.#167       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.hasBeenWritten:()Z\n+  #167 = NameAndType        #92:#71       // hasBeenWritten:()Z\n+  #168 = Utf8               access$1\n+  #169 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;[B)V\n+  #170 = Utf8               access$2\n+  #171 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)I\n+  #172 = Methodref          #1.#173       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.backReferenceLength:()I\n+  #173 = NameAndType        #142:#49      // backReferenceLength:()I\n+  #174 = Utf8               access$3\n+  #175 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+  #176 = Methodref          #1.#177       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.splitWithNewBackReferenceLengthOf:(I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+  #177 = NameAndType        #155:#156     // splitWithNewBackReferenceLengthOf:(I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+  #178 = Utf8               access$4\n+  #179 = Utf8               (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n+  #180 = Methodref          #1.#181       // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair.prependTo:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n+  #181 = NameAndType        #143:#144     // prependTo:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n+  #182 = Utf8               SourceFile\n+  #183 = Utf8               BlockLZ4CompressorOutputStream.java\n+  #184 = Utf8               InnerClasses\n+  #185 = Class              #186          // org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n+  #186 = Utf8               org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n+  #187 = Utf8               Pair\n+  #188 = Class              #189          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  #189 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  #190 = Utf8               BackReference\n+  #191 = Utf8               LiteralBlock\n {\n   private final java.util.Deque<byte[]> literals;\n     descriptor: Ljava/util/Deque;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #44                          // Ljava/util/Deque<[B>;\n+    Signature: #8                           // Ljava/util/Deque<[B>;\n \n   private int brOffset;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int brLength;\n     descriptor: I\n@@ -224,37 +219,38 @@\n \n   org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #17                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #8                  // class java/util/LinkedList\n+         5: new           #19                 // class java/util/LinkedList\n          8: dup\n-         9: invokespecial #9                  // Method java/util/LinkedList.\"<init>\":()V\n-        12: putfield      #10                 // Field literals:Ljava/util/Deque;\n+         9: invokespecial #21                 // Method java/util/LinkedList.\"<init>\":()V\n+        12: putfield      #22                 // Field literals:Ljava/util/Deque;\n         15: return\n       LineNumberTable:\n         line 416: 0\n         line 417: 4\n+        line 416: 15\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n   private void prependLiteral(byte[]);\n     descriptor: ([B)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field literals:Ljava/util/Deque;\n+         1: getfield      #22                 // Field literals:Ljava/util/Deque;\n          4: aload_1\n-         5: invokeinterface #11,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V\n+         5: invokeinterface #30,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V\n         10: return\n       LineNumberTable:\n         line 422: 0\n         line 423: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n@@ -262,34 +258,34 @@\n \n   byte[] addLiteral(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)[B\n     flags: (0x0000)\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #12                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n+         1: invokevirtual #40                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n          4: aload_1\n-         5: invokevirtual #13                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+         5: invokevirtual #46                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n          8: aload_1\n-         9: invokevirtual #13                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+         9: invokevirtual #46                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n         12: aload_1\n-        13: invokevirtual #14                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n+        13: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n         16: iadd\n-        17: invokestatic  #15                 // Method java/util/Arrays.copyOfRange:([BII)[B\n+        17: invokestatic  #53                 // Method java/util/Arrays.copyOfRange:([BII)[B\n         20: astore_2\n         21: aload_0\n-        22: getfield      #10                 // Field literals:Ljava/util/Deque;\n+        22: getfield      #22                 // Field literals:Ljava/util/Deque;\n         25: aload_2\n-        26: invokeinterface #16,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z\n+        26: invokeinterface #59,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z\n         31: pop\n         32: aload_2\n         33: areturn\n       LineNumberTable:\n         line 425: 0\n-        line 426: 9\n+        line 426: 8\n         line 425: 17\n         line 427: 21\n         line 428: 32\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      34     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n             0      34     1 block   Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n@@ -297,28 +293,28 @@\n \n   void setBackReference(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$BackReference);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #17                 // Method hasBackReference:()Z\n+         1: invokevirtual #68                 // Method hasBackReference:()Z\n          4: ifeq          15\n-         7: new           #18                 // class java/lang/IllegalStateException\n+         7: new           #72                 // class java/lang/IllegalStateException\n         10: dup\n-        11: invokespecial #19                 // Method java/lang/IllegalStateException.\"<init>\":()V\n+        11: invokespecial #74                 // Method java/lang/IllegalStateException.\"<init>\":()V\n         14: athrow\n         15: aload_0\n         16: aload_1\n-        17: invokevirtual #20                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n-        20: putfield      #21                 // Field brOffset:I\n+        17: invokevirtual #75                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n+        20: putfield      #78                 // Field brOffset:I\n         23: aload_0\n         24: aload_1\n-        25: invokevirtual #22                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n-        28: putfield      #23                 // Field brLength:I\n+        25: invokevirtual #80                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n+        28: putfield      #81                 // Field brLength:I\n         31: return\n       LineNumberTable:\n         line 431: 0\n         line 432: 7\n         line 434: 15\n         line 435: 23\n         line 436: 31\n@@ -331,227 +327,232 @@\n \n   boolean hasBackReference();\n     descriptor: ()Z\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field brOffset:I\n-         4: ifle          11\n+         1: getfield      #78                 // Field brOffset:I\n+         4: ifle          9\n          7: iconst_1\n-         8: goto          12\n-        11: iconst_0\n-        12: ireturn\n+         8: ireturn\n+         9: iconst_0\n+        10: ireturn\n       LineNumberTable:\n         line 438: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      13     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 11 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      11     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 9 /* same */\n \n   boolean canBeWritten(int);\n     descriptor: (I)Z\n     flags: (0x0000)\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokevirtual #17                 // Method hasBackReference:()Z\n-         4: ifeq          17\n+         1: invokevirtual #68                 // Method hasBackReference:()Z\n+         4: ifeq          15\n          7: iload_1\n          8: bipush        16\n-        10: if_icmplt     17\n+        10: if_icmplt     15\n         13: iconst_1\n-        14: goto          18\n-        17: iconst_0\n-        18: ireturn\n+        14: ireturn\n+        15: iconst_0\n+        16: ireturn\n       LineNumberTable:\n         line 441: 0\n+        line 442: 7\n+        line 441: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      19     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-            0      19     1 lengthOfBlocksAfterThisPair   I\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 17 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      17     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+            0      17     1 lengthOfBlocksAfterThisPair   I\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 15 /* same */\n \n   int length();\n     descriptor: ()I\n     flags: (0x0000)\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #24                 // Method literalLength:()I\n+         1: invokespecial #89                 // Method literalLength:()I\n          4: aload_0\n-         5: getfield      #23                 // Field brLength:I\n+         5: getfield      #81                 // Field brLength:I\n          8: iadd\n          9: ireturn\n       LineNumberTable:\n         line 445: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n   private boolean hasBeenWritten();\n     descriptor: ()Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #25                 // Field written:Z\n+         1: getfield      #93                 // Field written:Z\n          4: ireturn\n       LineNumberTable:\n         line 448: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n   void writeTo(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=2\n          0: aload_0\n-         1: invokespecial #24                 // Method literalLength:()I\n+         1: invokespecial #89                 // Method literalLength:()I\n          4: istore_2\n          5: aload_1\n          6: iload_2\n          7: aload_0\n-         8: getfield      #23                 // Field brLength:I\n-        11: invokestatic  #26                 // Method lengths:(II)I\n-        14: invokevirtual #27                 // Method java/io/OutputStream.write:(I)V\n+         8: getfield      #81                 // Field brLength:I\n+        11: invokestatic  #100                // Method lengths:(II)I\n+        14: invokevirtual #104                // Method java/io/OutputStream.write:(I)V\n         17: iload_2\n         18: bipush        15\n         20: if_icmplt     31\n         23: iload_2\n         24: bipush        15\n         26: isub\n         27: aload_1\n-        28: invokestatic  #29                 // Method writeLength:(ILjava/io/OutputStream;)V\n+        28: invokestatic  #110                // Method writeLength:(ILjava/io/OutputStream;)V\n         31: aload_0\n-        32: getfield      #10                 // Field literals:Ljava/util/Deque;\n-        35: invokeinterface #30,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n-        40: astore_3\n-        41: aload_3\n-        42: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        47: ifeq          70\n-        50: aload_3\n-        51: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        56: checkcast     #33                 // class \"[B\"\n-        59: astore        4\n-        61: aload_1\n-        62: aload         4\n-        64: invokevirtual #34                 // Method java/io/OutputStream.write:([B)V\n-        67: goto          41\n-        70: aload_0\n-        71: invokevirtual #17                 // Method hasBackReference:()Z\n-        74: ifeq          111\n-        77: aload_1\n-        78: aload_0\n-        79: getfield      #21                 // Field brOffset:I\n-        82: i2l\n-        83: iconst_2\n-        84: invokestatic  #35                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Ljava/io/OutputStream;JI)V\n-        87: aload_0\n-        88: getfield      #23                 // Field brLength:I\n-        91: iconst_4\n-        92: isub\n-        93: bipush        15\n-        95: if_icmplt     111\n-        98: aload_0\n-        99: getfield      #23                 // Field brLength:I\n-       102: iconst_4\n-       103: isub\n-       104: bipush        15\n-       106: isub\n-       107: aload_1\n-       108: invokestatic  #29                 // Method writeLength:(ILjava/io/OutputStream;)V\n-       111: aload_0\n-       112: iconst_1\n-       113: putfield      #25                 // Field written:Z\n-       116: return\n+        32: getfield      #22                 // Field literals:Ljava/util/Deque;\n+        35: invokeinterface #114,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n+        40: astore        4\n+        42: goto          61\n+        45: aload         4\n+        47: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        52: checkcast     #124                // class \"[B\"\n+        55: astore_3\n+        56: aload_1\n+        57: aload_3\n+        58: invokevirtual #125                // Method java/io/OutputStream.write:([B)V\n+        61: aload         4\n+        63: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        68: ifne          45\n+        71: aload_0\n+        72: invokevirtual #68                 // Method hasBackReference:()Z\n+        75: ifeq          112\n+        78: aload_1\n+        79: aload_0\n+        80: getfield      #78                 // Field brOffset:I\n+        83: i2l\n+        84: iconst_2\n+        85: invokestatic  #130                // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Ljava/io/OutputStream;JI)V\n+        88: aload_0\n+        89: getfield      #81                 // Field brLength:I\n+        92: iconst_4\n+        93: isub\n+        94: bipush        15\n+        96: if_icmplt     112\n+        99: aload_0\n+       100: getfield      #81                 // Field brLength:I\n+       103: iconst_4\n+       104: isub\n+       105: bipush        15\n+       107: isub\n+       108: aload_1\n+       109: invokestatic  #110                // Method writeLength:(ILjava/io/OutputStream;)V\n+       112: aload_0\n+       113: iconst_1\n+       114: putfield      #93                 // Field written:Z\n+       117: return\n       LineNumberTable:\n         line 451: 0\n         line 452: 5\n         line 453: 17\n         line 454: 23\n         line 456: 31\n-        line 457: 61\n-        line 458: 67\n-        line 459: 70\n-        line 460: 77\n-        line 461: 87\n-        line 462: 98\n-        line 466: 111\n-        line 467: 116\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           61       6     4     b   [B\n-            0     117     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-            0     117     1   out   Ljava/io/OutputStream;\n-            5     112     2 litLength   I\n+        line 457: 56\n+        line 456: 61\n+        line 459: 71\n+        line 460: 78\n+        line 461: 88\n+        line 462: 99\n+        line 463: 105\n+        line 462: 107\n+        line 463: 108\n+        line 462: 109\n+        line 466: 112\n+        line 467: 117\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+            0     118     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+            0     118     1   out   Ljava/io/OutputStream;\n+            5     113     2 litLength   I\n+           56       5     3     b   [B\n       StackMapTable: number_of_entries = 4\n         frame_type = 252 /* append */\n           offset_delta = 31\n           locals = [ int ]\n-        frame_type = 252 /* append */\n-          offset_delta = 9\n-          locals = [ class java/util/Iterator ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 28\n-        frame_type = 40 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 13\n+          locals = [ class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair, class java/io/OutputStream, int, top, class java/util/Iterator ]\n+          stack = []\n+        frame_type = 15 /* same */\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 50\n+          locals = [ class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair, class java/io/OutputStream, int ]\n+          stack = []\n \n   private int literalLength();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=4, args_size=1\n          0: iconst_0\n          1: istore_1\n          2: aload_0\n-         3: getfield      #10                 // Field literals:Ljava/util/Deque;\n-         6: invokeinterface #30,  1           // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n-        11: astore_2\n-        12: aload_2\n-        13: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        18: ifeq          39\n-        21: aload_2\n-        22: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        27: checkcast     #33                 // class \"[B\"\n-        30: astore_3\n-        31: iload_1\n-        32: aload_3\n-        33: arraylength\n-        34: iadd\n-        35: istore_1\n-        36: goto          12\n+         3: getfield      #22                 // Field literals:Ljava/util/Deque;\n+         6: invokeinterface #114,  1          // InterfaceMethod java/util/Deque.iterator:()Ljava/util/Iterator;\n+        11: astore_3\n+        12: goto          30\n+        15: aload_3\n+        16: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        21: checkcast     #124                // class \"[B\"\n+        24: astore_2\n+        25: iload_1\n+        26: aload_2\n+        27: arraylength\n+        28: iadd\n+        29: istore_1\n+        30: aload_3\n+        31: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        36: ifne          15\n         39: iload_1\n         40: ireturn\n       LineNumberTable:\n         line 469: 0\n         line 470: 2\n-        line 471: 31\n-        line 472: 36\n+        line 471: 25\n+        line 470: 30\n         line 473: 39\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           31       5     3     b   [B\n             0      41     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n             2      39     1 length   I\n+           25       5     2     b   [B\n       StackMapTable: number_of_entries = 2\n-        frame_type = 253 /* append */\n-          offset_delta = 12\n-          locals = [ int, class java/util/Iterator ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 26\n+        frame_type = 255 /* full_frame */\n+          offset_delta = 15\n+          locals = [ class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair, int, top, class java/util/Iterator ]\n+          stack = []\n+        frame_type = 14 /* same */\n \n   private static int lengths(int, int);\n     descriptor: (II)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=4, args_size=2\n          0: iload_0\n@@ -601,206 +602,200 @@\n         frame_type = 11 /* same */\n         frame_type = 65 /* same_locals_1_stack_item */\n           stack = [ int ]\n \n   private static void writeLength(int, java.io.OutputStream) throws java.io.IOException;\n     descriptor: (ILjava/io/OutputStream;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: iload_0\n-         1: sipush        255\n-         4: if_icmplt     23\n-         7: aload_1\n-         8: sipush        255\n-        11: invokevirtual #27                 // Method java/io/OutputStream.write:(I)V\n-        14: iinc_w        0, -255\n-        20: goto          0\n+         0: goto          16\n+         3: aload_1\n+         4: sipush        255\n+         7: invokevirtual #104                // Method java/io/OutputStream.write:(I)V\n+        10: iinc_w        0, -255\n+        16: iload_0\n+        17: sipush        255\n+        20: if_icmpge     3\n         23: aload_1\n         24: iload_0\n-        25: invokevirtual #27                 // Method java/io/OutputStream.write:(I)V\n+        25: invokevirtual #104                // Method java/io/OutputStream.write:(I)V\n         28: return\n       LineNumberTable:\n         line 481: 0\n-        line 482: 7\n-        line 483: 14\n+        line 482: 3\n+        line 483: 10\n+        line 481: 16\n         line 485: 23\n         line 486: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0 length   I\n             0      29     1   out   Ljava/io/OutputStream;\n       StackMapTable: number_of_entries = 2\n-        frame_type = 0 /* same */\n-        frame_type = 22 /* same */\n-    Exceptions:\n-      throws java.io.IOException\n+        frame_type = 3 /* same */\n+        frame_type = 12 /* same */\n \n   private int backReferenceLength();\n     descriptor: ()I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #23                 // Field brLength:I\n+         1: getfield      #81                 // Field brLength:I\n          4: ireturn\n       LineNumberTable:\n         line 488: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n   private void prependTo(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #10                 // Field literals:Ljava/util/Deque;\n-         4: invokeinterface #36,  1           // InterfaceMethod java/util/Deque.descendingIterator:()Ljava/util/Iterator;\n+         1: getfield      #22                 // Field literals:Ljava/util/Deque;\n+         4: invokeinterface #145,  1          // InterfaceMethod java/util/Deque.descendingIterator:()Ljava/util/Iterator;\n          9: astore_2\n-        10: aload_2\n-        11: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n-        16: ifeq          35\n-        19: aload_1\n-        20: aload_2\n-        21: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        26: checkcast     #33                 // class \"[B\"\n-        29: invokespecial #5                  // Method prependLiteral:([B)V\n-        32: goto          10\n+        10: goto          26\n+        13: aload_1\n+        14: aload_2\n+        15: invokeinterface #118,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        20: checkcast     #124                // class \"[B\"\n+        23: invokespecial #148                // Method prependLiteral:([B)V\n+        26: aload_2\n+        27: invokeinterface #127,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        32: ifne          13\n         35: return\n       LineNumberTable:\n         line 491: 0\n         line 492: 10\n-        line 493: 19\n+        line 493: 13\n+        line 492: 26\n         line 495: 35\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      36     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n             0      36     1 other   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n            10      26     2 listBackwards   Ljava/util/Iterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n            10      26     2 listBackwards   Ljava/util/Iterator<[B>;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 10\n+          offset_delta = 13\n           locals = [ class java/util/Iterator ]\n-        frame_type = 24 /* same */\n+        frame_type = 12 /* same */\n \n   private org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair splitWithNewBackReferenceLengthOf(int);\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n-         0: new           #37                 // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n+         0: new           #1                  // class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair\n          3: dup\n-         4: invokespecial #38                 // Method \"<init>\":()V\n+         4: invokespecial #157                // Method \"<init>\":()V\n          7: astore_2\n          8: aload_2\n-         9: getfield      #10                 // Field literals:Ljava/util/Deque;\n+         9: getfield      #22                 // Field literals:Ljava/util/Deque;\n         12: aload_0\n-        13: getfield      #10                 // Field literals:Ljava/util/Deque;\n-        16: invokeinterface #39,  2           // InterfaceMethod java/util/Deque.addAll:(Ljava/util/Collection;)Z\n+        13: getfield      #22                 // Field literals:Ljava/util/Deque;\n+        16: invokeinterface #158,  2          // InterfaceMethod java/util/Deque.addAll:(Ljava/util/Collection;)Z\n         21: pop\n         22: aload_2\n         23: aload_0\n-        24: getfield      #21                 // Field brOffset:I\n-        27: putfield      #21                 // Field brOffset:I\n+        24: getfield      #78                 // Field brOffset:I\n+        27: putfield      #78                 // Field brOffset:I\n         30: aload_2\n         31: iload_1\n-        32: putfield      #23                 // Field brLength:I\n+        32: putfield      #81                 // Field brLength:I\n         35: aload_2\n         36: areturn\n       LineNumberTable:\n         line 497: 0\n         line 498: 8\n         line 499: 22\n         line 500: 30\n         line 501: 35\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      37     0  this   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n             0      37     1 newBackReferenceLength   I\n             8      29     2     p   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n-  static boolean access$000(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n+  static boolean access$0(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)Z\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #6                  // Method hasBeenWritten:()Z\n+         1: invokespecial #166                // Method hasBeenWritten:()Z\n          4: ireturn\n       LineNumberTable:\n-        line 416: 0\n+        line 447: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n-  static void access$100(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, byte[]);\n+  static void access$1(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, byte[]);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;[B)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #5                  // Method prependLiteral:([B)V\n+         2: invokespecial #148                // Method prependLiteral:([B)V\n          5: return\n       LineNumberTable:\n-        line 416: 0\n+        line 421: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-            0       6     1    x1   [B\n \n-  static int access$200(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n+  static int access$2(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #4                  // Method backReferenceLength:()I\n+         1: invokespecial #172                // Method backReferenceLength:()I\n          4: ireturn\n       LineNumberTable:\n-        line 416: 0\n+        line 487: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0    x0   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n \n-  static org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair access$300(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, int);\n+  static org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair access$3(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, int);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokespecial #3                  // Method splitWithNewBackReferenceLengthOf:(I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n+         2: invokespecial #176                // Method splitWithNewBackReferenceLengthOf:(I)Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n          5: areturn\n       LineNumberTable:\n-        line 416: 0\n+        line 496: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-            0       6     1    x1   I\n \n-  static void access$400(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n+  static void access$4(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair, org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStream$Pair);\n     descriptor: (Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method prependTo:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n+         2: invokespecial #180                // Method prependTo:(Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;)V\n          5: return\n       LineNumberTable:\n-        line 416: 0\n+        line 490: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       6     0    x0   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n-            0       6     1    x1   Lorg/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair;\n }\n SourceFile: \"BlockLZ4CompressorOutputStream.java\"\n InnerClasses:\n-  static final #56= #37 of #1;            // Pair=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n-  public static final #65= #64 of #165;   // LiteralBlock=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static final #72= #71 of #165;   // BackReference=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  static final #187= #1 of #185;          // Pair=class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream$Pair of class org/apache/commons/compress/compressors/lz4/BlockLZ4CompressorOutputStream\n+  public static final #190= #76 of #188;  // BackReference=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static final #191= #41 of #188;  // LiteralBlock=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n"}]}
