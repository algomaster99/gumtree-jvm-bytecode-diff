{"diffoscope-json-version": 1, "source1": "first/IOSpliterator.class", "source2": "second/IOSpliterator.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,163 +1,163 @@\n-  SHA-256 checksum 68f2b5d09877cf51299344fc63bc13499585d512e20ed6571072844c9decc39b\n+  SHA-256 checksum 38f4f5ce91a2a16ca17237957fa70b1641d1fcf3389387146c911ef44060dcec\n   Compiled from \"IOSpliterator.java\"\n public interface org.apache.commons.io.function.IOSpliterator<T extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #14                         // org/apache/commons/io/function/IOSpliterator\n-  super_class: #69                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/function/IOSpliterator\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 11, attributes: 2\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n-    #2 = Class              #4            // org/apache/commons/io/function/IOSpliteratorAdapter\n-    #3 = NameAndType        #5:#6         // adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n-    #4 = Utf8               org/apache/commons/io/function/IOSpliteratorAdapter\n+    #1 = Class              #2            // org/apache/commons/io/function/IOSpliterator\n+    #2 = Utf8               org/apache/commons/io/function/IOSpliterator\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n     #5 = Utf8               adapt\n-    #6 = Utf8               (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n-    #7 = Class              #8            // org/apache/commons/io/function/UncheckedIOSpliterator\n-    #8 = Utf8               org/apache/commons/io/function/UncheckedIOSpliterator\n-    #9 = Methodref          #7.#10        // org/apache/commons/io/function/UncheckedIOSpliterator.\"<init>\":(Lorg/apache/commons/io/function/IOSpliterator;)V\n-   #10 = NameAndType        #11:#12       // \"<init>\":(Lorg/apache/commons/io/function/IOSpliterator;)V\n-   #11 = Utf8               <init>\n-   #12 = Utf8               (Lorg/apache/commons/io/function/IOSpliterator;)V\n-   #13 = InterfaceMethodref #14.#15       // org/apache/commons/io/function/IOSpliterator.unwrap:()Ljava/util/Spliterator;\n-   #14 = Class              #16           // org/apache/commons/io/function/IOSpliterator\n-   #15 = NameAndType        #17:#18       // unwrap:()Ljava/util/Spliterator;\n-   #16 = Utf8               org/apache/commons/io/function/IOSpliterator\n-   #17 = Utf8               unwrap\n-   #18 = Utf8               ()Ljava/util/Spliterator;\n-   #19 = InterfaceMethodref #20.#21       // java/util/Spliterator.characteristics:()I\n-   #20 = Class              #22           // java/util/Spliterator\n-   #21 = NameAndType        #23:#24       // characteristics:()I\n-   #22 = Utf8               java/util/Spliterator\n-   #23 = Utf8               characteristics\n-   #24 = Utf8               ()I\n-   #25 = InterfaceMethodref #20.#26       // java/util/Spliterator.estimateSize:()J\n-   #26 = NameAndType        #27:#28       // estimateSize:()J\n-   #27 = Utf8               estimateSize\n-   #28 = Utf8               ()J\n-   #29 = InterfaceMethodref #14.#30       // org/apache/commons/io/function/IOSpliterator.tryAdvance:(Lorg/apache/commons/io/function/IOConsumer;)Z\n-   #30 = NameAndType        #31:#32       // tryAdvance:(Lorg/apache/commons/io/function/IOConsumer;)Z\n-   #31 = Utf8               tryAdvance\n-   #32 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Z\n-   #33 = InterfaceMethodref #20.#34       // java/util/Spliterator.getComparator:()Ljava/util/Comparator;\n-   #34 = NameAndType        #35:#36       // getComparator:()Ljava/util/Comparator;\n-   #35 = Utf8               getComparator\n-   #36 = Utf8               ()Ljava/util/Comparator;\n-   #37 = Class              #38           // org/apache/commons/io/function/IOComparator\n-   #38 = Utf8               org/apache/commons/io/function/IOComparator\n-   #39 = InterfaceMethodref #20.#40       // java/util/Spliterator.getExactSizeIfKnown:()J\n-   #40 = NameAndType        #41:#28       // getExactSizeIfKnown:()J\n-   #41 = Utf8               getExactSizeIfKnown\n-   #42 = InterfaceMethodref #20.#43       // java/util/Spliterator.hasCharacteristics:(I)Z\n-   #43 = NameAndType        #44:#45       // hasCharacteristics:(I)Z\n-   #44 = Utf8               hasCharacteristics\n-   #45 = Utf8               (I)Z\n-   #46 = String             #47           // action\n-   #47 = Utf8               action\n-   #48 = Methodref          #49.#50       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #49 = Class              #51           // java/util/Objects\n-   #50 = NameAndType        #52:#53       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #51 = Utf8               java/util/Objects\n-   #52 = Utf8               requireNonNull\n-   #53 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #54 = Class              #55           // org/apache/commons/io/function/IOConsumer\n-   #55 = Utf8               org/apache/commons/io/function/IOConsumer\n-   #56 = InterfaceMethodref #54.#57       // org/apache/commons/io/function/IOConsumer.asConsumer:()Ljava/util/function/Consumer;\n-   #57 = NameAndType        #58:#59       // asConsumer:()Ljava/util/function/Consumer;\n-   #58 = Utf8               asConsumer\n-   #59 = Utf8               ()Ljava/util/function/Consumer;\n-   #60 = InterfaceMethodref #20.#61       // java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z\n-   #61 = NameAndType        #31:#62       // tryAdvance:(Ljava/util/function/Consumer;)Z\n-   #62 = Utf8               (Ljava/util/function/Consumer;)Z\n-   #63 = InterfaceMethodref #20.#64       // java/util/Spliterator.trySplit:()Ljava/util/Spliterator;\n-   #64 = NameAndType        #65:#18       // trySplit:()Ljava/util/Spliterator;\n-   #65 = Utf8               trySplit\n-   #66 = InterfaceMethodref #14.#67       // org/apache/commons/io/function/IOSpliterator.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n-   #67 = NameAndType        #5:#68        // adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n-   #68 = Utf8               (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n-   #69 = Class              #70           // java/lang/Object\n-   #70 = Utf8               java/lang/Object\n-   #71 = Utf8               Code\n-   #72 = Utf8               LineNumberTable\n-   #73 = Utf8               LocalVariableTable\n-   #74 = Utf8               iterator\n-   #75 = Utf8               Ljava/util/Spliterator;\n-   #76 = Utf8               LocalVariableTypeTable\n-   #77 = Utf8               Ljava/util/Spliterator<TE;>;\n-   #78 = Utf8               Signature\n-   #79 = Utf8               <E:Ljava/lang/Object;>(Ljava/util/Spliterator<TE;>;)Lorg/apache/commons/io/function/IOSpliterator<TE;>;\n-   #80 = Utf8               asSpliterator\n-   #81 = Utf8               this\n-   #82 = Utf8               Lorg/apache/commons/io/function/IOSpliterator;\n-   #83 = Utf8               Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-   #84 = Utf8               ()Ljava/util/Spliterator<TT;>;\n-   #85 = Utf8               forEachRemaining\n-   #86 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)V\n-   #87 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n-   #88 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-   #89 = Utf8               StackMapTable\n-   #90 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)V\n-   #91 = Utf8               ()Lorg/apache/commons/io/function/IOComparator;\n-   #92 = Utf8               ()Lorg/apache/commons/io/function/IOComparator<-TT;>;\n-   #93 = Utf8               I\n-   #94 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Z\n-   #95 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator;\n-   #96 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-   #97 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n-   #98 = Utf8               SourceFile\n-   #99 = Utf8               IOSpliterator.java\n+    #6 = Utf8               (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n+    #7 = Utf8               Signature\n+    #8 = Utf8               <E:Ljava/lang/Object;>(Ljava/util/Spliterator<TE;>;)Lorg/apache/commons/io/function/IOSpliterator<TE;>;\n+    #9 = Utf8               Code\n+   #10 = Methodref          #11.#13       // org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+   #11 = Class              #12           // org/apache/commons/io/function/IOSpliteratorAdapter\n+   #12 = Utf8               org/apache/commons/io/function/IOSpliteratorAdapter\n+   #13 = NameAndType        #5:#14        // adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+   #14 = Utf8               (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+   #15 = Utf8               LineNumberTable\n+   #16 = Utf8               LocalVariableTable\n+   #17 = Utf8               iterator\n+   #18 = Utf8               Ljava/util/Spliterator;\n+   #19 = Utf8               LocalVariableTypeTable\n+   #20 = Utf8               Ljava/util/Spliterator<TE;>;\n+   #21 = Utf8               asSpliterator\n+   #22 = Utf8               ()Ljava/util/Spliterator;\n+   #23 = Utf8               ()Ljava/util/Spliterator<TT;>;\n+   #24 = Class              #25           // org/apache/commons/io/function/UncheckedIOSpliterator\n+   #25 = Utf8               org/apache/commons/io/function/UncheckedIOSpliterator\n+   #26 = Methodref          #24.#27       // org/apache/commons/io/function/UncheckedIOSpliterator.\"<init>\":(Lorg/apache/commons/io/function/IOSpliterator;)V\n+   #27 = NameAndType        #28:#29       // \"<init>\":(Lorg/apache/commons/io/function/IOSpliterator;)V\n+   #28 = Utf8               <init>\n+   #29 = Utf8               (Lorg/apache/commons/io/function/IOSpliterator;)V\n+   #30 = Utf8               this\n+   #31 = Utf8               Lorg/apache/commons/io/function/IOSpliterator;\n+   #32 = Utf8               Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n+   #33 = Utf8               characteristics\n+   #34 = Utf8               ()I\n+   #35 = InterfaceMethodref #1.#36        // org/apache/commons/io/function/IOSpliterator.unwrap:()Ljava/util/Spliterator;\n+   #36 = NameAndType        #37:#22       // unwrap:()Ljava/util/Spliterator;\n+   #37 = Utf8               unwrap\n+   #38 = InterfaceMethodref #39.#41       // java/util/Spliterator.characteristics:()I\n+   #39 = Class              #40           // java/util/Spliterator\n+   #40 = Utf8               java/util/Spliterator\n+   #41 = NameAndType        #33:#34       // characteristics:()I\n+   #42 = Utf8               estimateSize\n+   #43 = Utf8               ()J\n+   #44 = InterfaceMethodref #39.#45       // java/util/Spliterator.estimateSize:()J\n+   #45 = NameAndType        #42:#43       // estimateSize:()J\n+   #46 = Utf8               forEachRemaining\n+   #47 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)V\n+   #48 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)V\n+   #49 = InterfaceMethodref #1.#50        // org/apache/commons/io/function/IOSpliterator.tryAdvance:(Lorg/apache/commons/io/function/IOConsumer;)Z\n+   #50 = NameAndType        #51:#52       // tryAdvance:(Lorg/apache/commons/io/function/IOConsumer;)Z\n+   #51 = Utf8               tryAdvance\n+   #52 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Z\n+   #53 = Utf8               action\n+   #54 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n+   #55 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n+   #56 = Utf8               StackMapTable\n+   #57 = Utf8               getComparator\n+   #58 = Utf8               ()Lorg/apache/commons/io/function/IOComparator;\n+   #59 = Utf8               ()Lorg/apache/commons/io/function/IOComparator<-TT;>;\n+   #60 = InterfaceMethodref #39.#61       // java/util/Spliterator.getComparator:()Ljava/util/Comparator;\n+   #61 = NameAndType        #57:#62       // getComparator:()Ljava/util/Comparator;\n+   #62 = Utf8               ()Ljava/util/Comparator;\n+   #63 = Class              #64           // org/apache/commons/io/function/IOComparator\n+   #64 = Utf8               org/apache/commons/io/function/IOComparator\n+   #65 = Utf8               getExactSizeIfKnown\n+   #66 = InterfaceMethodref #39.#67       // java/util/Spliterator.getExactSizeIfKnown:()J\n+   #67 = NameAndType        #65:#43       // getExactSizeIfKnown:()J\n+   #68 = Utf8               hasCharacteristics\n+   #69 = Utf8               (I)Z\n+   #70 = InterfaceMethodref #39.#71       // java/util/Spliterator.hasCharacteristics:(I)Z\n+   #71 = NameAndType        #68:#69       // hasCharacteristics:(I)Z\n+   #72 = Utf8               I\n+   #73 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Z\n+   #74 = String             #53           // action\n+   #75 = Methodref          #76.#78       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #76 = Class              #77           // java/util/Objects\n+   #77 = Utf8               java/util/Objects\n+   #78 = NameAndType        #79:#80       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #79 = Utf8               requireNonNull\n+   #80 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #81 = Class              #82           // org/apache/commons/io/function/IOConsumer\n+   #82 = Utf8               org/apache/commons/io/function/IOConsumer\n+   #83 = InterfaceMethodref #81.#84       // org/apache/commons/io/function/IOConsumer.asConsumer:()Ljava/util/function/Consumer;\n+   #84 = NameAndType        #85:#86       // asConsumer:()Ljava/util/function/Consumer;\n+   #85 = Utf8               asConsumer\n+   #86 = Utf8               ()Ljava/util/function/Consumer;\n+   #87 = InterfaceMethodref #39.#88       // java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z\n+   #88 = NameAndType        #51:#89       // tryAdvance:(Ljava/util/function/Consumer;)Z\n+   #89 = Utf8               (Ljava/util/function/Consumer;)Z\n+   #90 = Utf8               trySplit\n+   #91 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator;\n+   #92 = Utf8               ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n+   #93 = InterfaceMethodref #39.#94       // java/util/Spliterator.trySplit:()Ljava/util/Spliterator;\n+   #94 = NameAndType        #90:#22       // trySplit:()Ljava/util/Spliterator;\n+   #95 = InterfaceMethodref #1.#96        // org/apache/commons/io/function/IOSpliterator.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n+   #96 = NameAndType        #5:#6         // adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n+   #97 = Utf8               SourceFile\n+   #98 = Utf8               IOSpliterator.java\n+   #99 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n {\n   public static <E extends java.lang.Object> org.apache.commons.io.function.IOSpliterator<E> adapt(java.util.Spliterator<E>);\n     descriptor: (Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #8                           // <E:Ljava/lang/Object;>(Ljava/util/Spliterator<TE;>;)Lorg/apache/commons/io/function/IOSpliterator<TE;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #1                  // Method org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n+         1: invokestatic  #10                 // Method org/apache/commons/io/function/IOSpliteratorAdapter.adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliteratorAdapter;\n          4: areturn\n       LineNumberTable:\n         line 42: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 iterator   Ljava/util/Spliterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0 iterator   Ljava/util/Spliterator<TE;>;\n-    Signature: #79                          // <E:Ljava/lang/Object;>(Ljava/util/Spliterator<TE;>;)Lorg/apache/commons/io/function/IOSpliterator<TE;>;\n \n   public default java.util.Spliterator<T> asSpliterator();\n     descriptor: ()Ljava/util/Spliterator;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #23                          // ()Ljava/util/Spliterator<TT;>;\n     Code:\n       stack=3, locals=1, args_size=1\n-         0: new           #7                  // class org/apache/commons/io/function/UncheckedIOSpliterator\n+         0: new           #24                 // class org/apache/commons/io/function/UncheckedIOSpliterator\n          3: dup\n          4: aload_0\n-         5: invokespecial #9                  // Method org/apache/commons/io/function/UncheckedIOSpliterator.\"<init>\":(Lorg/apache/commons/io/function/IOSpliterator;)V\n+         5: invokespecial #26                 // Method org/apache/commons/io/function/UncheckedIOSpliterator.\"<init>\":(Lorg/apache/commons/io/function/IOSpliterator;)V\n          8: areturn\n       LineNumberTable:\n         line 52: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-    Signature: #84                          // ()Ljava/util/Spliterator<TT;>;\n \n   public default int characteristics();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n-         6: invokeinterface #19,  1           // InterfaceMethod java/util/Spliterator.characteristics:()I\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         6: invokeinterface #38,  1           // InterfaceMethod java/util/Spliterator.characteristics:()I\n         11: ireturn\n       LineNumberTable:\n         line 61: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n       LocalVariableTypeTable:\n@@ -166,81 +166,79 @@\n \n   public default long estimateSize();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n-         6: invokeinterface #25,  1           // InterfaceMethod java/util/Spliterator.estimateSize:()J\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         6: invokeinterface #44,  1           // InterfaceMethod java/util/Spliterator.estimateSize:()J\n         11: lreturn\n       LineNumberTable:\n         line 71: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n \n   public default void forEachRemaining(org.apache.commons.io.function.IOConsumer<? super T>);\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #48                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)V\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #29,  2           // InterfaceMethod tryAdvance:(Lorg/apache/commons/io/function/IOConsumer;)Z\n-         7: ifeq          13\n-        10: goto          0\n-        13: return\n+         2: invokeinterface #49,  2           // InterfaceMethod tryAdvance:(Lorg/apache/commons/io/function/IOConsumer;)Z\n+         7: ifne          0\n+        10: return\n       LineNumberTable:\n         line 81: 0\n-        line 83: 13\n+        line 83: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      14     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n-            0      14     1 action   Lorg/apache/commons/io/function/IOConsumer;\n+            0      11     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n+            0      11     1 action   Lorg/apache/commons/io/function/IOConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-            0      14     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-            0      14     1 action   Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-      StackMapTable: number_of_entries = 2\n+            0      11     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n+            0      11     1 action   Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n+      StackMapTable: number_of_entries = 1\n         frame_type = 0 /* same */\n-        frame_type = 12 /* same */\n-    Signature: #90                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)V\n \n   public default org.apache.commons.io.function.IOComparator<? super T> getComparator();\n     descriptor: ()Lorg/apache/commons/io/function/IOComparator;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #59                          // ()Lorg/apache/commons/io/function/IOComparator<-TT;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n-         6: invokeinterface #33,  1           // InterfaceMethod java/util/Spliterator.getComparator:()Ljava/util/Comparator;\n-        11: checkcast     #37                 // class org/apache/commons/io/function/IOComparator\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         6: invokeinterface #60,  1           // InterfaceMethod java/util/Spliterator.getComparator:()Ljava/util/Comparator;\n+        11: checkcast     #63                 // class org/apache/commons/io/function/IOComparator\n         14: areturn\n       LineNumberTable:\n         line 93: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-    Signature: #92                          // ()Lorg/apache/commons/io/function/IOComparator<-TT;>;\n \n   public default long getExactSizeIfKnown();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n-         6: invokeinterface #39,  1           // InterfaceMethod java/util/Spliterator.getExactSizeIfKnown:()J\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         6: invokeinterface #66,  1           // InterfaceMethod java/util/Spliterator.getExactSizeIfKnown:()J\n         11: lreturn\n       LineNumberTable:\n         line 102: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n       LocalVariableTypeTable:\n@@ -249,74 +247,74 @@\n \n   public default boolean hasCharacteristics(int);\n     descriptor: (I)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n          6: iload_1\n-         7: invokeinterface #42,  2           // InterfaceMethod java/util/Spliterator.hasCharacteristics:(I)Z\n+         7: invokeinterface #70,  2           // InterfaceMethod java/util/Spliterator.hasCharacteristics:(I)Z\n         12: ireturn\n       LineNumberTable:\n         line 112: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n             0      13     1 characteristics   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n \n   public default boolean tryAdvance(org.apache.commons.io.function.IOConsumer<? super T>);\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;)Z\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #73                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Z\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n          6: aload_1\n-         7: ldc           #46                 // String action\n-         9: invokestatic  #48                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        12: checkcast     #54                 // class org/apache/commons/io/function/IOConsumer\n-        15: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/io/function/IOConsumer.asConsumer:()Ljava/util/function/Consumer;\n-        20: invokeinterface #60,  2           // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z\n+         7: ldc           #74                 // String action\n+         9: invokestatic  #75                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        12: checkcast     #81                 // class org/apache/commons/io/function/IOConsumer\n+        15: invokeinterface #83,  1           // InterfaceMethod org/apache/commons/io/function/IOConsumer.asConsumer:()Ljava/util/function/Consumer;\n+        20: invokeinterface #87,  2           // InterfaceMethod java/util/Spliterator.tryAdvance:(Ljava/util/function/Consumer;)Z\n         25: ireturn\n       LineNumberTable:\n         line 123: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n             0      26     1 action   Lorg/apache/commons/io/function/IOConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n             0      26     1 action   Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-    Signature: #94                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Z\n \n   public default org.apache.commons.io.function.IOSpliterator<T> trySplit();\n     descriptor: ()Lorg/apache/commons/io/function/IOSpliterator;\n     flags: (0x0001) ACC_PUBLIC\n+    Signature: #92                          // ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #13,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n-         6: invokeinterface #63,  1           // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;\n-        11: invokestatic  #66                 // InterfaceMethod adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n+         1: invokeinterface #35,  1           // InterfaceMethod unwrap:()Ljava/util/Spliterator;\n+         6: invokeinterface #93,  1           // InterfaceMethod java/util/Spliterator.trySplit:()Ljava/util/Spliterator;\n+        11: invokestatic  #95                 // InterfaceMethod adapt:(Ljava/util/Spliterator;)Lorg/apache/commons/io/function/IOSpliterator;\n         14: areturn\n       LineNumberTable:\n         line 133: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOSpliterator;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n-    Signature: #96                          // ()Lorg/apache/commons/io/function/IOSpliterator<TT;>;\n \n   public abstract java.util.Spliterator<T> unwrap();\n     descriptor: ()Ljava/util/Spliterator;\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n-    Signature: #84                          // ()Ljava/util/Spliterator<TT;>;\n+    Signature: #23                          // ()Ljava/util/Spliterator<TT;>;\n }\n-Signature: #97                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"IOSpliterator.java\"\n+Signature: #99                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n"}]}
