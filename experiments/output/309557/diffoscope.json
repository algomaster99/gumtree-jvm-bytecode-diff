{"diffoscope-json-version": 1, "source1": "first/Base16.class", "source2": "second/Base16.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,140 @@\n-  SHA-256 checksum 9d95086ab20bfa47cf91cbdb0dde80e6dd2b5b25b813f6d28c4b6aa525d8efe4\n+  SHA-256 checksum 38f98c0530e112ad089de9ab196d8df1928d6fa031243b69e78d22a09bc5f9a0\n   Compiled from \"Base16.java\"\n public class org.apache.commons.codec.binary.Base16 extends org.apache.commons.codec.binary.BaseNCodec\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #4                          // org/apache/commons/codec/binary/Base16\n-  super_class: #5                         // org/apache/commons/codec/binary/BaseNCodec\n+  this_class: #2                          // org/apache/commons/codec/binary/Base16\n+  super_class: #14                        // org/apache/commons/codec/binary/BaseNCodec\n   interfaces: 0, fields: 10, methods: 9, attributes: 2\n Constant pool:\n-    #1 = Methodref          #4.#71        // org/apache/commons/codec/binary/Base16.\"<init>\":(Z)V\n-    #2 = Fieldref           #4.#72        // org/apache/commons/codec/binary/Base16.DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-    #3 = Methodref          #4.#73        // org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n-    #4 = Class              #74           // org/apache/commons/codec/binary/Base16\n-    #5 = Class              #75           // org/apache/commons/codec/binary/BaseNCodec\n-    #6 = Methodref          #5.#76        // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n-    #7 = Fieldref           #4.#77        // org/apache/commons/codec/binary/Base16.LOWER_CASE_ENCODE_TABLE:[B\n-    #8 = Fieldref           #4.#78        // org/apache/commons/codec/binary/Base16.encodeTable:[B\n-    #9 = Fieldref           #4.#79        // org/apache/commons/codec/binary/Base16.LOWER_CASE_DECODE_TABLE:[B\n-   #10 = Fieldref           #4.#80        // org/apache/commons/codec/binary/Base16.decodeTable:[B\n-   #11 = Fieldref           #4.#81        // org/apache/commons/codec/binary/Base16.UPPER_CASE_ENCODE_TABLE:[B\n-   #12 = Fieldref           #4.#82        // org/apache/commons/codec/binary/Base16.UPPER_CASE_DECODE_TABLE:[B\n-   #13 = Fieldref           #57.#83       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n-   #14 = Fieldref           #57.#84       // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n-   #15 = Methodref          #4.#85        // org/apache/commons/codec/binary/Base16.validateTrailingCharacter:()V\n-   #16 = Methodref          #86.#87       // java/lang/Math.min:(II)I\n-   #17 = Methodref          #4.#88        // org/apache/commons/codec/binary/Base16.decodeOctet:(B)I\n-   #18 = Methodref          #4.#89        // org/apache/commons/codec/binary/Base16.ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #19 = Fieldref           #57.#90       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n-   #20 = Class              #91           // java/lang/IllegalArgumentException\n-   #21 = Class              #92           // java/lang/StringBuilder\n-   #22 = Methodref          #21.#93       // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #94           // Invalid octet in encoded value:\n-   #24 = Methodref          #21.#95       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #21.#96       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #21.#97       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #27 = Methodref          #20.#98       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #28 = String             #99           // Input length exceeds maximum size for encoded data:\n-   #29 = Methodref          #4.#100       // org/apache/commons/codec/binary/Base16.isStrictDecoding:()Z\n-   #30 = String             #101          // Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n-   #31 = Utf8               BITS_PER_ENCODED_BYTE\n-   #32 = Utf8               I\n-   #33 = Utf8               ConstantValue\n-   #34 = Integer            4\n-   #35 = Utf8               BYTES_PER_ENCODED_BLOCK\n-   #36 = Integer            2\n-   #37 = Utf8               BYTES_PER_UNENCODED_BLOCK\n-   #38 = Integer            1\n-   #39 = Utf8               UPPER_CASE_DECODE_TABLE\n-   #40 = Utf8               [B\n-   #41 = Utf8               UPPER_CASE_ENCODE_TABLE\n-   #42 = Utf8               LOWER_CASE_DECODE_TABLE\n-   #43 = Utf8               LOWER_CASE_ENCODE_TABLE\n-   #44 = Utf8               MASK_4BITS\n-   #45 = Integer            15\n-   #46 = Utf8               decodeTable\n-   #47 = Utf8               encodeTable\n-   #48 = Utf8               <init>\n-   #49 = Utf8               ()V\n-   #50 = Utf8               Code\n-   #51 = Utf8               LineNumberTable\n-   #52 = Utf8               (Z)V\n-   #53 = Utf8               (ZLorg/apache/commons/codec/CodecPolicy;)V\n-   #54 = Utf8               StackMapTable\n-   #55 = Class              #102          // org/apache/commons/codec/CodecPolicy\n-   #56 = Utf8               decode\n-   #57 = Class              #103          // org/apache/commons/codec/binary/BaseNCodec$Context\n-   #58 = Utf8               Context\n-   #59 = Utf8               InnerClasses\n-   #60 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n-   #61 = Class              #40           // \"[B\"\n-   #62 = Utf8               decodeOctet\n-   #63 = Utf8               (B)I\n-   #64 = Utf8               encode\n-   #65 = Utf8               isInAlphabet\n-   #66 = Utf8               (B)Z\n-   #67 = Utf8               validateTrailingCharacter\n-   #68 = Utf8               <clinit>\n-   #69 = Utf8               SourceFile\n-   #70 = Utf8               Base16.java\n-   #71 = NameAndType        #48:#52       // \"<init>\":(Z)V\n-   #72 = NameAndType        #104:#105     // DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-   #73 = NameAndType        #48:#53       // \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n-   #74 = Utf8               org/apache/commons/codec/binary/Base16\n-   #75 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n-   #76 = NameAndType        #48:#106      // \"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n-   #77 = NameAndType        #43:#40       // LOWER_CASE_ENCODE_TABLE:[B\n-   #78 = NameAndType        #47:#40       // encodeTable:[B\n-   #79 = NameAndType        #42:#40       // LOWER_CASE_DECODE_TABLE:[B\n-   #80 = NameAndType        #46:#40       // decodeTable:[B\n-   #81 = NameAndType        #41:#40       // UPPER_CASE_ENCODE_TABLE:[B\n-   #82 = NameAndType        #39:#40       // UPPER_CASE_DECODE_TABLE:[B\n-   #83 = NameAndType        #107:#108     // eof:Z\n-   #84 = NameAndType        #109:#32      // ibitWorkArea:I\n-   #85 = NameAndType        #67:#49       // validateTrailingCharacter:()V\n-   #86 = Class              #110          // java/lang/Math\n-   #87 = NameAndType        #111:#112     // min:(II)I\n-   #88 = NameAndType        #62:#63       // decodeOctet:(B)I\n-   #89 = NameAndType        #113:#114     // ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-   #90 = NameAndType        #115:#32      // pos:I\n-   #91 = Utf8               java/lang/IllegalArgumentException\n-   #92 = Utf8               java/lang/StringBuilder\n-   #93 = NameAndType        #48:#49       // \"<init>\":()V\n-   #94 = Utf8               Invalid octet in encoded value:\n-   #95 = NameAndType        #116:#117     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #96 = NameAndType        #116:#118     // append:(I)Ljava/lang/StringBuilder;\n-   #97 = NameAndType        #119:#120     // toString:()Ljava/lang/String;\n-   #98 = NameAndType        #48:#121      // \"<init>\":(Ljava/lang/String;)V\n-   #99 = Utf8               Input length exceeds maximum size for encoded data:\n-  #100 = NameAndType        #122:#123     // isStrictDecoding:()Z\n-  #101 = Utf8               Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n-  #102 = Utf8               org/apache/commons/codec/CodecPolicy\n-  #103 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n-  #104 = Utf8               DECODING_POLICY_DEFAULT\n-  #105 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n-  #106 = Utf8               (IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n-  #107 = Utf8               eof\n-  #108 = Utf8               Z\n-  #109 = Utf8               ibitWorkArea\n-  #110 = Utf8               java/lang/Math\n-  #111 = Utf8               min\n-  #112 = Utf8               (II)I\n-  #113 = Utf8               ensureBufferSize\n-  #114 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n-  #115 = Utf8               pos\n-  #116 = Utf8               append\n-  #117 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #118 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #119 = Utf8               toString\n-  #120 = Utf8               ()Ljava/lang/String;\n-  #121 = Utf8               (Ljava/lang/String;)V\n-  #122 = Utf8               isStrictDecoding\n-  #123 = Utf8               ()Z\n+    #1 = Methodref          #2.#3         // org/apache/commons/codec/binary/Base16.\"<init>\":(Z)V\n+    #2 = Class              #4            // org/apache/commons/codec/binary/Base16\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Z)V\n+    #4 = Utf8               org/apache/commons/codec/binary/Base16\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Z)V\n+    #7 = Fieldref           #2.#8         // org/apache/commons/codec/binary/Base16.DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+    #8 = NameAndType        #9:#10        // DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+    #9 = Utf8               DECODING_POLICY_DEFAULT\n+   #10 = Utf8               Lorg/apache/commons/codec/CodecPolicy;\n+   #11 = Methodref          #2.#12        // org/apache/commons/codec/binary/Base16.\"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+   #12 = NameAndType        #5:#13        // \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+   #13 = Utf8               (ZLorg/apache/commons/codec/CodecPolicy;)V\n+   #14 = Class              #15           // org/apache/commons/codec/binary/BaseNCodec\n+   #15 = Utf8               org/apache/commons/codec/binary/BaseNCodec\n+   #16 = Methodref          #14.#17       // org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+   #17 = NameAndType        #5:#18        // \"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+   #18 = Utf8               (IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+   #19 = Fieldref           #2.#20        // org/apache/commons/codec/binary/Base16.LOWER_CASE_ENCODE_TABLE:[B\n+   #20 = NameAndType        #21:#22       // LOWER_CASE_ENCODE_TABLE:[B\n+   #21 = Utf8               LOWER_CASE_ENCODE_TABLE\n+   #22 = Utf8               [B\n+   #23 = Fieldref           #2.#24        // org/apache/commons/codec/binary/Base16.encodeTable:[B\n+   #24 = NameAndType        #25:#22       // encodeTable:[B\n+   #25 = Utf8               encodeTable\n+   #26 = Fieldref           #2.#27        // org/apache/commons/codec/binary/Base16.LOWER_CASE_DECODE_TABLE:[B\n+   #27 = NameAndType        #28:#22       // LOWER_CASE_DECODE_TABLE:[B\n+   #28 = Utf8               LOWER_CASE_DECODE_TABLE\n+   #29 = Fieldref           #2.#30        // org/apache/commons/codec/binary/Base16.decodeTable:[B\n+   #30 = NameAndType        #31:#22       // decodeTable:[B\n+   #31 = Utf8               decodeTable\n+   #32 = Fieldref           #2.#33        // org/apache/commons/codec/binary/Base16.UPPER_CASE_ENCODE_TABLE:[B\n+   #33 = NameAndType        #34:#22       // UPPER_CASE_ENCODE_TABLE:[B\n+   #34 = Utf8               UPPER_CASE_ENCODE_TABLE\n+   #35 = Fieldref           #2.#36        // org/apache/commons/codec/binary/Base16.UPPER_CASE_DECODE_TABLE:[B\n+   #36 = NameAndType        #37:#22       // UPPER_CASE_DECODE_TABLE:[B\n+   #37 = Utf8               UPPER_CASE_DECODE_TABLE\n+   #38 = Fieldref           #39.#40       // org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+   #39 = Class              #41           // org/apache/commons/codec/binary/BaseNCodec$Context\n+   #40 = NameAndType        #42:#43       // eof:Z\n+   #41 = Utf8               org/apache/commons/codec/binary/BaseNCodec$Context\n+   #42 = Utf8               eof\n+   #43 = Utf8               Z\n+   #44 = Fieldref           #39.#45       // org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+   #45 = NameAndType        #46:#47       // ibitWorkArea:I\n+   #46 = Utf8               ibitWorkArea\n+   #47 = Utf8               I\n+   #48 = Methodref          #2.#49        // org/apache/commons/codec/binary/Base16.validateTrailingCharacter:()V\n+   #49 = NameAndType        #50:#51       // validateTrailingCharacter:()V\n+   #50 = Utf8               validateTrailingCharacter\n+   #51 = Utf8               ()V\n+   #52 = Methodref          #53.#54       // java/lang/Math.min:(II)I\n+   #53 = Class              #55           // java/lang/Math\n+   #54 = NameAndType        #56:#57       // min:(II)I\n+   #55 = Utf8               java/lang/Math\n+   #56 = Utf8               min\n+   #57 = Utf8               (II)I\n+   #58 = Methodref          #2.#59        // org/apache/commons/codec/binary/Base16.decodeOctet:(B)I\n+   #59 = NameAndType        #60:#61       // decodeOctet:(B)I\n+   #60 = Utf8               decodeOctet\n+   #61 = Utf8               (B)I\n+   #62 = Methodref          #2.#63        // org/apache/commons/codec/binary/Base16.ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #63 = NameAndType        #64:#65       // ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #64 = Utf8               ensureBufferSize\n+   #65 = Utf8               (ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+   #66 = Fieldref           #39.#67       // org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+   #67 = NameAndType        #68:#47       // pos:I\n+   #68 = Utf8               pos\n+   #69 = Class              #70           // java/lang/IllegalArgumentException\n+   #70 = Utf8               java/lang/IllegalArgumentException\n+   #71 = Class              #72           // java/lang/StringBuilder\n+   #72 = Utf8               java/lang/StringBuilder\n+   #73 = Methodref          #71.#74       // java/lang/StringBuilder.\"<init>\":()V\n+   #74 = NameAndType        #5:#51        // \"<init>\":()V\n+   #75 = String             #76           // Invalid octet in encoded value:\n+   #76 = Utf8               Invalid octet in encoded value:\n+   #77 = Methodref          #71.#78       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #78 = NameAndType        #79:#80       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #79 = Utf8               append\n+   #80 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #81 = Methodref          #71.#82       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #82 = NameAndType        #79:#83       // append:(I)Ljava/lang/StringBuilder;\n+   #83 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #84 = Methodref          #71.#85       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #85 = NameAndType        #86:#87       // toString:()Ljava/lang/String;\n+   #86 = Utf8               toString\n+   #87 = Utf8               ()Ljava/lang/String;\n+   #88 = Methodref          #69.#89       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #89 = NameAndType        #5:#90        // \"<init>\":(Ljava/lang/String;)V\n+   #90 = Utf8               (Ljava/lang/String;)V\n+   #91 = String             #92           // Input length exceeds maximum size for encoded data:\n+   #92 = Utf8               Input length exceeds maximum size for encoded data:\n+   #93 = Methodref          #2.#94        // org/apache/commons/codec/binary/Base16.isStrictDecoding:()Z\n+   #94 = NameAndType        #95:#96       // isStrictDecoding:()Z\n+   #95 = Utf8               isStrictDecoding\n+   #96 = Utf8               ()Z\n+   #97 = String             #98           // Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n+   #98 = Utf8               Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n+   #99 = Utf8               BITS_PER_ENCODED_BYTE\n+  #100 = Utf8               ConstantValue\n+  #101 = Integer            4\n+  #102 = Utf8               BYTES_PER_ENCODED_BLOCK\n+  #103 = Integer            2\n+  #104 = Utf8               BYTES_PER_UNENCODED_BLOCK\n+  #105 = Integer            1\n+  #106 = Utf8               MASK_4BITS\n+  #107 = Integer            15\n+  #108 = Utf8               Code\n+  #109 = Utf8               LineNumberTable\n+  #110 = Utf8               StackMapTable\n+  #111 = Class              #112          // org/apache/commons/codec/CodecPolicy\n+  #112 = Utf8               org/apache/commons/codec/CodecPolicy\n+  #113 = Utf8               decode\n+  #114 = Utf8               ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n+  #115 = Class              #22           // \"[B\"\n+  #116 = Utf8               encode\n+  #117 = Utf8               isInAlphabet\n+  #118 = Utf8               (B)Z\n+  #119 = Utf8               <clinit>\n+  #120 = Utf8               SourceFile\n+  #121 = Utf8               Base16.java\n+  #122 = Utf8               InnerClasses\n+  #123 = Utf8               Context\n {\n   private static final int BITS_PER_ENCODED_BYTE = 4;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 4\n \n   private static final int BYTES_PER_ENCODED_BLOCK = 2;\n@@ -192,16 +192,16 @@\n   public org.apache.commons.codec.binary.Base16(boolean);\n     descriptor: (Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: getstatic     #2                  // Field DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n-         5: invokespecial #3                  // Method \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n+         2: getstatic     #7                  // Field DECODING_POLICY_DEFAULT:Lorg/apache/commons/codec/CodecPolicy;\n+         5: invokespecial #11                 // Method \"<init>\":(ZLorg/apache/commons/codec/CodecPolicy;)V\n          8: return\n       LineNumberTable:\n         line 129: 0\n         line 130: 8\n \n   public org.apache.commons.codec.binary.Base16(boolean, org.apache.commons.codec.CodecPolicy);\n     descriptor: (ZLorg/apache/commons/codec/CodecPolicy;)V\n@@ -211,30 +211,30 @@\n          0: aload_0\n          1: iconst_1\n          2: iconst_2\n          3: iconst_0\n          4: iconst_0\n          5: bipush        61\n          7: aload_2\n-         8: invokespecial #6                  // Method org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n+         8: invokespecial #16                 // Method org/apache/commons/codec/binary/BaseNCodec.\"<init>\":(IIIIBLorg/apache/commons/codec/CodecPolicy;)V\n         11: iload_1\n         12: ifeq          32\n         15: aload_0\n-        16: getstatic     #7                  // Field LOWER_CASE_ENCODE_TABLE:[B\n-        19: putfield      #8                  // Field encodeTable:[B\n+        16: getstatic     #19                 // Field LOWER_CASE_ENCODE_TABLE:[B\n+        19: putfield      #23                 // Field encodeTable:[B\n         22: aload_0\n-        23: getstatic     #9                  // Field LOWER_CASE_DECODE_TABLE:[B\n-        26: putfield      #10                 // Field decodeTable:[B\n+        23: getstatic     #26                 // Field LOWER_CASE_DECODE_TABLE:[B\n+        26: putfield      #29                 // Field decodeTable:[B\n         29: goto          46\n         32: aload_0\n-        33: getstatic     #11                 // Field UPPER_CASE_ENCODE_TABLE:[B\n-        36: putfield      #8                  // Field encodeTable:[B\n+        33: getstatic     #32                 // Field UPPER_CASE_ENCODE_TABLE:[B\n+        36: putfield      #23                 // Field encodeTable:[B\n         39: aload_0\n-        40: getstatic     #12                 // Field UPPER_CASE_DECODE_TABLE:[B\n-        43: putfield      #10                 // Field decodeTable:[B\n+        40: getstatic     #35                 // Field UPPER_CASE_DECODE_TABLE:[B\n+        43: putfield      #29                 // Field decodeTable:[B\n         46: return\n       LineNumberTable:\n         line 139: 0\n         line 141: 11\n         line 142: 15\n         line 143: 22\n         line 145: 32\n@@ -249,36 +249,36 @@\n \n   void decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=12, args_size=5\n          0: aload         4\n-         2: getfield      #13                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         2: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          5: ifne          12\n          8: iload_3\n          9: ifge          31\n         12: aload         4\n         14: iconst_1\n-        15: putfield      #13                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        15: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         18: aload         4\n-        20: getfield      #14                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+        20: getfield      #44                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n         23: ifeq          30\n         26: aload_0\n-        27: invokespecial #15                 // Method validateTrailingCharacter:()V\n+        27: invokespecial #48                 // Method validateTrailingCharacter:()V\n         30: return\n         31: aload_1\n         32: arraylength\n         33: iload_2\n         34: isub\n         35: iload_3\n-        36: invokestatic  #16                 // Method java/lang/Math.min:(II)I\n+        36: invokestatic  #52                 // Method java/lang/Math.min:(II)I\n         39: istore        5\n         41: aload         4\n-        43: getfield      #14                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+        43: getfield      #44                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n         46: ifeq          53\n         49: iconst_1\n         50: goto          54\n         53: iconst_0\n         54: iload         5\n         56: iadd\n         57: istore        6\n@@ -289,18 +289,18 @@\n         67: iload         5\n         69: if_icmpne     87\n         72: aload         4\n         74: aload_0\n         75: aload_1\n         76: iload_2\n         77: baload\n-        78: invokespecial #17                 // Method decodeOctet:(B)I\n+        78: invokespecial #58                 // Method decodeOctet:(B)I\n         81: iconst_1\n         82: iadd\n-        83: putfield      #14                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+        83: putfield      #44                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n         86: return\n         87: iload         6\n         89: iconst_2\n         90: irem\n         91: ifne          99\n         94: iload         6\n         96: goto          103\n@@ -313,98 +313,98 @@\n        108: iadd\n        109: istore        8\n        111: aload_0\n        112: iload         7\n        114: iconst_2\n        115: idiv\n        116: aload         4\n-       118: invokevirtual #18                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+       118: invokevirtual #62                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n        121: astore        9\n        123: iload         5\n        125: iload         6\n        127: if_icmpge     180\n        130: aload         4\n-       132: getfield      #14                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       132: getfield      #44                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        135: iconst_1\n        136: isub\n        137: iconst_4\n        138: ishl\n        139: istore        10\n        141: iload         10\n        143: aload_0\n        144: aload_1\n        145: iload_2\n        146: iinc          2, 1\n        149: baload\n-       150: invokespecial #17                 // Method decodeOctet:(B)I\n+       150: invokespecial #58                 // Method decodeOctet:(B)I\n        153: ior\n        154: istore        10\n        156: aload         9\n        158: aload         4\n        160: dup\n-       161: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       161: getfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        164: dup_x1\n        165: iconst_1\n        166: iadd\n-       167: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       167: putfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        170: iload         10\n        172: i2b\n        173: bastore\n        174: aload         4\n        176: iconst_0\n-       177: putfield      #14                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       177: putfield      #44                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        180: iload         8\n        182: iconst_1\n        183: isub\n        184: istore        11\n        186: iload_2\n        187: iload         11\n        189: if_icmpge     242\n        192: aload_0\n        193: aload_1\n        194: iload_2\n        195: iinc          2, 1\n        198: baload\n-       199: invokespecial #17                 // Method decodeOctet:(B)I\n+       199: invokespecial #58                 // Method decodeOctet:(B)I\n        202: iconst_4\n        203: ishl\n        204: istore        10\n        206: iload         10\n        208: aload_0\n        209: aload_1\n        210: iload_2\n        211: iinc          2, 1\n        214: baload\n-       215: invokespecial #17                 // Method decodeOctet:(B)I\n+       215: invokespecial #58                 // Method decodeOctet:(B)I\n        218: ior\n        219: istore        10\n        221: aload         9\n        223: aload         4\n        225: dup\n-       226: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       226: getfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        229: dup_x1\n        230: iconst_1\n        231: iadd\n-       232: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       232: putfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        235: iload         10\n        237: i2b\n        238: bastore\n        239: goto          186\n        242: iload_2\n        243: iload         8\n        245: if_icmpge     262\n        248: aload         4\n        250: aload_0\n        251: aload_1\n        252: iload_2\n        253: baload\n-       254: invokespecial #17                 // Method decodeOctet:(B)I\n+       254: invokespecial #58                 // Method decodeOctet:(B)I\n        257: iconst_1\n        258: iadd\n-       259: putfield      #14                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n+       259: putfield      #44                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.ibitWorkArea:I\n        262: return\n       LineNumberTable:\n         line 152: 0\n         line 153: 12\n         line 154: 18\n         line 155: 26\n         line 157: 30\n@@ -460,36 +460,36 @@\n       stack=4, locals=3, args_size=2\n          0: iconst_m1\n          1: istore_2\n          2: iload_1\n          3: sipush        255\n          6: iand\n          7: aload_0\n-         8: getfield      #10                 // Field decodeTable:[B\n+         8: getfield      #29                 // Field decodeTable:[B\n         11: arraylength\n         12: if_icmpge     22\n         15: aload_0\n-        16: getfield      #10                 // Field decodeTable:[B\n+        16: getfield      #29                 // Field decodeTable:[B\n         19: iload_1\n         20: baload\n         21: istore_2\n         22: iload_2\n         23: iconst_m1\n         24: if_icmpne     54\n-        27: new           #20                 // class java/lang/IllegalArgumentException\n+        27: new           #69                 // class java/lang/IllegalArgumentException\n         30: dup\n-        31: new           #21                 // class java/lang/StringBuilder\n+        31: new           #71                 // class java/lang/StringBuilder\n         34: dup\n-        35: invokespecial #22                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        38: ldc           #23                 // String Invalid octet in encoded value:\n-        40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        35: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        38: ldc           #75                 // String Invalid octet in encoded value:\n+        40: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         43: iload_1\n-        44: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        50: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        44: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        47: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        50: invokespecial #88                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         53: athrow\n         54: iload_2\n         55: ireturn\n       LineNumberTable:\n         line 203: 0\n         line 204: 2\n         line 205: 15\n@@ -504,45 +504,45 @@\n \n   void encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec$Context);\n     descriptor: ([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=12, args_size=5\n          0: aload         4\n-         2: getfield      #13                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+         2: getfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n          5: ifeq          9\n          8: return\n          9: iload_3\n         10: ifge          20\n         13: aload         4\n         15: iconst_1\n-        16: putfield      #13                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n+        16: putfield      #38                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.eof:Z\n         19: return\n         20: iload_3\n         21: iconst_2\n         22: imul\n         23: istore        5\n         25: iload         5\n         27: ifge          57\n-        30: new           #20                 // class java/lang/IllegalArgumentException\n+        30: new           #69                 // class java/lang/IllegalArgumentException\n         33: dup\n-        34: new           #21                 // class java/lang/StringBuilder\n+        34: new           #71                 // class java/lang/StringBuilder\n         37: dup\n-        38: invokespecial #22                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        41: ldc           #28                 // String Input length exceeds maximum size for encoded data:\n-        43: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: invokespecial #73                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        41: ldc           #91                 // String Input length exceeds maximum size for encoded data:\n+        43: invokevirtual #77                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         46: iload_3\n-        47: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        50: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        53: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        47: invokevirtual #81                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        50: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        53: invokespecial #88                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         56: athrow\n         57: aload_0\n         58: iload         5\n         60: aload         4\n-        62: invokevirtual #18                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n+        62: invokevirtual #62                 // Method ensureBufferSize:(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B\n         65: astore        6\n         67: iload_2\n         68: iload_3\n         69: iadd\n         70: istore        7\n         72: iload_2\n         73: istore        8\n@@ -562,34 +562,34 @@\n         97: iload         9\n         99: bipush        15\n        101: iand\n        102: istore        11\n        104: aload         6\n        106: aload         4\n        108: dup\n-       109: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       109: getfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        112: dup_x1\n        113: iconst_1\n        114: iadd\n-       115: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       115: putfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        118: aload_0\n-       119: getfield      #8                  // Field encodeTable:[B\n+       119: getfield      #23                 // Field encodeTable:[B\n        122: iload         10\n        124: baload\n        125: bastore\n        126: aload         6\n        128: aload         4\n        130: dup\n-       131: getfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       131: getfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        134: dup_x1\n        135: iconst_1\n        136: iadd\n-       137: putfield      #19                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n+       137: putfield      #66                 // Field org/apache/commons/codec/binary/BaseNCodec$Context.pos:I\n        140: aload_0\n-       141: getfield      #8                  // Field encodeTable:[B\n+       141: getfield      #23                 // Field encodeTable:[B\n        144: iload         11\n        146: baload\n        147: bastore\n        148: iinc          8, 1\n        151: goto          75\n        154: return\n       LineNumberTable:\n@@ -628,19 +628,19 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: iload_1\n          1: sipush        255\n          4: iand\n          5: aload_0\n-         6: getfield      #10                 // Field decodeTable:[B\n+         6: getfield      #29                 // Field decodeTable:[B\n          9: arraylength\n         10: if_icmpge     27\n         13: aload_0\n-        14: getfield      #10                 // Field decodeTable:[B\n+        14: getfield      #29                 // Field decodeTable:[B\n         17: iload_1\n         18: baload\n         19: iconst_m1\n         20: if_icmpeq     27\n         23: iconst_1\n         24: goto          28\n         27: iconst_0\n@@ -654,20 +654,20 @@\n \n   private void validateTrailingCharacter();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method isStrictDecoding:()Z\n+         1: invokevirtual #93                 // Method isStrictDecoding:()Z\n          4: ifeq          17\n-         7: new           #20                 // class java/lang/IllegalArgumentException\n+         7: new           #69                 // class java/lang/IllegalArgumentException\n         10: dup\n-        11: ldc           #30                 // String Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n-        13: invokespecial #27                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #97                 // String Strict decoding: Last encoded character is a valid base 16 alphabetcharacter but not a possible encoding. Decoding requires at least two characters to create one byte.\n+        13: invokespecial #88                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: return\n       LineNumberTable:\n         line 262: 0\n         line 263: 7\n         line 267: 17\n       StackMapTable: number_of_entries = 1\n@@ -960,15 +960,15 @@\n        352: bipush        69\n        354: bipush        14\n        356: bastore\n        357: dup\n        358: bipush        70\n        360: bipush        15\n        362: bastore\n-       363: putstatic     #12                 // Field UPPER_CASE_DECODE_TABLE:[B\n+       363: putstatic     #35                 // Field UPPER_CASE_DECODE_TABLE:[B\n        366: bipush        16\n        368: newarray       byte\n        370: dup\n        371: iconst_0\n        372: bipush        48\n        374: bastore\n        375: dup\n@@ -1027,15 +1027,15 @@\n        449: bipush        14\n        451: bipush        69\n        453: bastore\n        454: dup\n        455: bipush        15\n        457: bipush        70\n        459: bastore\n-       460: putstatic     #11                 // Field UPPER_CASE_ENCODE_TABLE:[B\n+       460: putstatic     #32                 // Field UPPER_CASE_ENCODE_TABLE:[B\n        463: bipush        103\n        465: newarray       byte\n        467: dup\n        468: iconst_0\n        469: iconst_m1\n        470: bastore\n        471: dup\n@@ -1442,15 +1442,15 @@\n        975: bipush        101\n        977: bipush        14\n        979: bastore\n        980: dup\n        981: bipush        102\n        983: bipush        15\n        985: bastore\n-       986: putstatic     #9                  // Field LOWER_CASE_DECODE_TABLE:[B\n+       986: putstatic     #26                 // Field LOWER_CASE_DECODE_TABLE:[B\n        989: bipush        16\n        991: newarray       byte\n        993: dup\n        994: iconst_0\n        995: bipush        48\n        997: bastore\n        998: dup\n@@ -1509,18 +1509,18 @@\n       1072: bipush        14\n       1074: bipush        101\n       1076: bastore\n       1077: dup\n       1078: bipush        15\n       1080: bipush        102\n       1082: bastore\n-      1083: putstatic     #7                  // Field LOWER_CASE_ENCODE_TABLE:[B\n+      1083: putstatic     #19                 // Field LOWER_CASE_ENCODE_TABLE:[B\n       1086: return\n       LineNumberTable:\n         line 60: 0\n         line 73: 366\n         line 83: 463\n         line 98: 989\n }\n SourceFile: \"Base16.java\"\n InnerClasses:\n-  static #58= #57 of #5;                  // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n+  static #123= #39 of #14;                // Context=class org/apache/commons/codec/binary/BaseNCodec$Context of class org/apache/commons/codec/binary/BaseNCodec\n"}]}
