{"diffoscope-json-version": 1, "source1": "first/BrotliCompressorInputStream.class", "source2": "second/BrotliCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,213 +1,213 @@\n-  SHA-256 checksum 93d6ac19db8cb8b29f158ee9e739025928d905ffa789c014bf4ebd9ac7be9227\n+  SHA-256 checksum 1b4e34c43ac34e987f7d50568073788040e9b5b6c6acc3a67c0083ad8e61bb46\n   Compiled from \"BrotliCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #15                         // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n-  super_class: #2                         // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #1                          // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 2, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/compress/compressors/CompressorInputStream\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n+   #2 = Utf8               org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n+   #3 = Class              #4             // org/apache/commons/compress/compressors/CompressorInputStream\n    #4 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Class              #8             // org/brotli/dec/BrotliInputStream\n-   #8 = Utf8               org/brotli/dec/BrotliInputStream\n-   #9 = Class              #10            // org/apache/commons/compress/utils/CountingInputStream\n-  #10 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #11 = Methodref          #9.#12         // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #12 = NameAndType        #5:#13         // \"<init>\":(Ljava/io/InputStream;)V\n-  #13 = Utf8               (Ljava/io/InputStream;)V\n-  #14 = Fieldref           #15.#16        // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #15 = Class              #17            // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n-  #16 = NameAndType        #18:#19        // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #17 = Utf8               org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream\n-  #18 = Utf8               countingStream\n-  #19 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-  #20 = Methodref          #7.#12         // org/brotli/dec/BrotliInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-  #21 = Fieldref           #15.#22        // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.decIS:Lorg/brotli/dec/BrotliInputStream;\n-  #22 = NameAndType        #23:#24        // decIS:Lorg/brotli/dec/BrotliInputStream;\n-  #23 = Utf8               decIS\n-  #24 = Utf8               Lorg/brotli/dec/BrotliInputStream;\n-  #25 = Methodref          #7.#26         // org/brotli/dec/BrotliInputStream.available:()I\n-  #26 = NameAndType        #27:#28        // available:()I\n-  #27 = Utf8               available\n-  #28 = Utf8               ()I\n-  #29 = Methodref          #7.#30         // org/brotli/dec/BrotliInputStream.close:()V\n-  #30 = NameAndType        #31:#6         // close:()V\n-  #31 = Utf8               close\n-  #32 = Methodref          #9.#33         // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-  #33 = NameAndType        #34:#35        // getBytesRead:()J\n-  #34 = Utf8               getBytesRead\n-  #35 = Utf8               ()J\n-  #36 = Methodref          #7.#37         // org/brotli/dec/BrotliInputStream.mark:(I)V\n-  #37 = NameAndType        #38:#39        // mark:(I)V\n-  #38 = Utf8               mark\n-  #39 = Utf8               (I)V\n-  #40 = Methodref          #7.#41         // org/brotli/dec/BrotliInputStream.markSupported:()Z\n-  #41 = NameAndType        #42:#43        // markSupported:()Z\n-  #42 = Utf8               markSupported\n-  #43 = Utf8               ()Z\n-  #44 = Methodref          #7.#45         // org/brotli/dec/BrotliInputStream.read:()I\n-  #45 = NameAndType        #46:#28        // read:()I\n-  #46 = Utf8               read\n-  #47 = Methodref          #15.#48        // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.count:(I)V\n-  #48 = NameAndType        #49:#39        // count:(I)V\n-  #49 = Utf8               count\n-  #50 = Methodref          #7.#51         // org/brotli/dec/BrotliInputStream.read:([B)I\n-  #51 = NameAndType        #46:#52        // read:([B)I\n-  #52 = Utf8               ([B)I\n-  #53 = Methodref          #7.#54         // org/brotli/dec/BrotliInputStream.read:([BII)I\n-  #54 = NameAndType        #46:#55        // read:([BII)I\n-  #55 = Utf8               ([BII)I\n-  #56 = Methodref          #7.#57         // org/brotli/dec/BrotliInputStream.reset:()V\n-  #57 = NameAndType        #58:#6         // reset:()V\n-  #58 = Utf8               reset\n-  #59 = Methodref          #60.#61        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-  #60 = Class              #62            // org/apache/commons/compress/utils/IOUtils\n-  #61 = NameAndType        #63:#64        // skip:(Ljava/io/InputStream;J)J\n-  #62 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #63 = Utf8               skip\n-  #64 = Utf8               (Ljava/io/InputStream;J)J\n-  #65 = Methodref          #66.#67        // java/lang/Object.toString:()Ljava/lang/String;\n-  #66 = Class              #68            // java/lang/Object\n-  #67 = NameAndType        #69:#70        // toString:()Ljava/lang/String;\n-  #68 = Utf8               java/lang/Object\n-  #69 = Utf8               toString\n-  #70 = Utf8               ()Ljava/lang/String;\n-  #71 = Class              #72            // org/apache/commons/compress/utils/InputStreamStatistics\n-  #72 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #73 = Utf8               Code\n-  #74 = Utf8               LineNumberTable\n-  #75 = Utf8               LocalVariableTable\n-  #76 = Utf8               this\n-  #77 = Utf8               Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n-  #78 = Utf8               in\n-  #79 = Utf8               Ljava/io/InputStream;\n-  #80 = Utf8               Exceptions\n-  #81 = Class              #82            // java/io/IOException\n-  #82 = Utf8               java/io/IOException\n-  #83 = Utf8               getCompressedCount\n-  #84 = Utf8               readlimit\n-  #85 = Utf8               I\n-  #86 = Utf8               ret\n-  #87 = Utf8               StackMapTable\n-  #88 = Utf8               b\n-  #89 = Utf8               [B\n-  #90 = Utf8               buf\n-  #91 = Utf8               off\n-  #92 = Utf8               len\n-  #93 = Utf8               (J)J\n-  #94 = Utf8               n\n-  #95 = Utf8               J\n+   #5 = Class              #6             // org/apache/commons/compress/utils/InputStreamStatistics\n+   #6 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+   #7 = Utf8               countingStream\n+   #8 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #9 = Utf8               decIS\n+  #10 = Utf8               Lorg/brotli/dec/BrotliInputStream;\n+  #11 = Utf8               <init>\n+  #12 = Utf8               (Ljava/io/InputStream;)V\n+  #13 = Utf8               Exceptions\n+  #14 = Class              #15            // java/io/IOException\n+  #15 = Utf8               java/io/IOException\n+  #16 = Utf8               Code\n+  #17 = Methodref          #3.#18         // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+  #18 = NameAndType        #11:#19        // \"<init>\":()V\n+  #19 = Utf8               ()V\n+  #20 = Class              #21            // org/brotli/dec/BrotliInputStream\n+  #21 = Utf8               org/brotli/dec/BrotliInputStream\n+  #22 = Class              #23            // org/apache/commons/compress/utils/CountingInputStream\n+  #23 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #24 = Methodref          #22.#25        // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #25 = NameAndType        #11:#12        // \"<init>\":(Ljava/io/InputStream;)V\n+  #26 = Fieldref           #1.#27         // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #27 = NameAndType        #7:#8          // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+  #28 = Methodref          #20.#25        // org/brotli/dec/BrotliInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+  #29 = Fieldref           #1.#30         // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.decIS:Lorg/brotli/dec/BrotliInputStream;\n+  #30 = NameAndType        #9:#10         // decIS:Lorg/brotli/dec/BrotliInputStream;\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               LocalVariableTable\n+  #33 = Utf8               this\n+  #34 = Utf8               Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n+  #35 = Utf8               in\n+  #36 = Utf8               Ljava/io/InputStream;\n+  #37 = Utf8               available\n+  #38 = Utf8               ()I\n+  #39 = Methodref          #20.#40        // org/brotli/dec/BrotliInputStream.available:()I\n+  #40 = NameAndType        #37:#38        // available:()I\n+  #41 = Utf8               close\n+  #42 = Methodref          #20.#43        // org/brotli/dec/BrotliInputStream.close:()V\n+  #43 = NameAndType        #41:#19        // close:()V\n+  #44 = Utf8               getCompressedCount\n+  #45 = Utf8               ()J\n+  #46 = Methodref          #22.#47        // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #47 = NameAndType        #48:#45        // getBytesRead:()J\n+  #48 = Utf8               getBytesRead\n+  #49 = Utf8               mark\n+  #50 = Utf8               (I)V\n+  #51 = Methodref          #20.#52        // org/brotli/dec/BrotliInputStream.mark:(I)V\n+  #52 = NameAndType        #49:#50        // mark:(I)V\n+  #53 = Utf8               readlimit\n+  #54 = Utf8               I\n+  #55 = Utf8               markSupported\n+  #56 = Utf8               ()Z\n+  #57 = Methodref          #20.#58        // org/brotli/dec/BrotliInputStream.markSupported:()Z\n+  #58 = NameAndType        #55:#56        // markSupported:()Z\n+  #59 = Utf8               read\n+  #60 = Methodref          #20.#61        // org/brotli/dec/BrotliInputStream.read:()I\n+  #61 = NameAndType        #59:#38        // read:()I\n+  #62 = Methodref          #1.#63         // org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream.count:(I)V\n+  #63 = NameAndType        #64:#50        // count:(I)V\n+  #64 = Utf8               count\n+  #65 = Utf8               ret\n+  #66 = Utf8               StackMapTable\n+  #67 = Utf8               ([B)I\n+  #68 = Methodref          #20.#69        // org/brotli/dec/BrotliInputStream.read:([B)I\n+  #69 = NameAndType        #59:#67        // read:([B)I\n+  #70 = Utf8               b\n+  #71 = Utf8               [B\n+  #72 = Utf8               ([BII)I\n+  #73 = Methodref          #20.#74        // org/brotli/dec/BrotliInputStream.read:([BII)I\n+  #74 = NameAndType        #59:#72        // read:([BII)I\n+  #75 = Utf8               buf\n+  #76 = Utf8               off\n+  #77 = Utf8               len\n+  #78 = Utf8               reset\n+  #79 = Methodref          #20.#80        // org/brotli/dec/BrotliInputStream.reset:()V\n+  #80 = NameAndType        #78:#19        // reset:()V\n+  #81 = Utf8               skip\n+  #82 = Utf8               (J)J\n+  #83 = Methodref          #84.#86        // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+  #84 = Class              #85            // org/apache/commons/compress/utils/IOUtils\n+  #85 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #86 = NameAndType        #81:#87        // skip:(Ljava/io/InputStream;J)J\n+  #87 = Utf8               (Ljava/io/InputStream;J)J\n+  #88 = Utf8               n\n+  #89 = Utf8               J\n+  #90 = Utf8               toString\n+  #91 = Utf8               ()Ljava/lang/String;\n+  #92 = Methodref          #93.#95        // java/lang/Object.toString:()Ljava/lang/String;\n+  #93 = Class              #94            // java/lang/Object\n+  #94 = Utf8               java/lang/Object\n+  #95 = NameAndType        #90:#91        // toString:()Ljava/lang/String;\n   #96 = Utf8               SourceFile\n   #97 = Utf8               BrotliCompressorInputStream.java\n {\n   private final org.apache.commons.compress.utils.CountingInputStream countingStream;\n     descriptor: Lorg/apache/commons/compress/utils/CountingInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final org.brotli.dec.BrotliInputStream decIS;\n     descriptor: Lorg/brotli/dec/BrotliInputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStream(java.io.InputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=7, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #17                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #7                  // class org/brotli/dec/BrotliInputStream\n+         5: new           #20                 // class org/brotli/dec/BrotliInputStream\n          8: dup\n          9: aload_0\n-        10: new           #9                  // class org/apache/commons/compress/utils/CountingInputStream\n+        10: new           #22                 // class org/apache/commons/compress/utils/CountingInputStream\n         13: dup\n         14: aload_1\n-        15: invokespecial #11                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        15: invokespecial #24                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         18: dup_x1\n-        19: putfield      #14                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        22: invokespecial #20                 // Method org/brotli/dec/BrotliInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        25: putfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+        19: putfield      #26                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        22: invokespecial #28                 // Method org/brotli/dec/BrotliInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        25: putfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n         28: return\n       LineNumberTable:\n         line 41: 0\n         line 42: 4\n         line 43: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n             0      29     1    in   Ljava/io/InputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n-         4: invokevirtual #25                 // Method org/brotli/dec/BrotliInputStream.available:()I\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         4: invokevirtual #39                 // Method org/brotli/dec/BrotliInputStream.available:()I\n          7: ireturn\n       LineNumberTable:\n         line 47: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n-         4: invokevirtual #29                 // Method org/brotli/dec/BrotliInputStream.close:()V\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         4: invokevirtual #42                 // Method org/brotli/dec/BrotliInputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #32                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #26                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #46                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 60: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n \n   public synchronized void mark(int);\n     descriptor: (I)V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n          4: iload_1\n-         5: invokevirtual #36                 // Method org/brotli/dec/BrotliInputStream.mark:(I)V\n+         5: invokevirtual #51                 // Method org/brotli/dec/BrotliInputStream.mark:(I)V\n          8: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n@@ -215,40 +215,42 @@\n \n   public boolean markSupported();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n-         4: invokevirtual #40                 // Method org/brotli/dec/BrotliInputStream.markSupported:()Z\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         4: invokevirtual #57                 // Method org/brotli/dec/BrotliInputStream.markSupported:()Z\n          7: ireturn\n       LineNumberTable:\n         line 70: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n-         4: invokevirtual #44                 // Method org/brotli/dec/BrotliInputStream.read:()I\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         4: invokevirtual #60                 // Method org/brotli/dec/BrotliInputStream.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_0\n         15: goto          19\n         18: iconst_1\n-        19: invokevirtual #47                 // Method count:(I)V\n+        19: invokevirtual #62                 // Method count:(I)V\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 75: 0\n         line 76: 8\n         line 77: 22\n       LocalVariableTable:\n@@ -260,112 +262,110 @@\n           offset_delta = 18\n           locals = [ class org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream, int ]\n           stack = [ class org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream, int ]\n           stack = [ class org/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream, int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[]) throws java.io.IOException;\n     descriptor: ([B)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n          4: aload_1\n-         5: invokevirtual #50                 // Method org/brotli/dec/BrotliInputStream.read:([B)I\n+         5: invokevirtual #68                 // Method org/brotli/dec/BrotliInputStream.read:([B)I\n          8: ireturn\n       LineNumberTable:\n         line 82: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n             0       9     1     b   [B\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #53                 // Method org/brotli/dec/BrotliInputStream.read:([BII)I\n+         7: invokevirtual #73                 // Method org/brotli/dec/BrotliInputStream.read:([BII)I\n         10: istore        4\n         12: aload_0\n         13: iload         4\n-        15: invokevirtual #47                 // Method count:(I)V\n+        15: invokevirtual #62                 // Method count:(I)V\n         18: iload         4\n         20: ireturn\n       LineNumberTable:\n         line 87: 0\n         line 88: 12\n         line 89: 18\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      21     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n             0      21     1   buf   [B\n             0      21     2   off   I\n             0      21     3   len   I\n            12       9     4   ret   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public synchronized void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0021) ACC_PUBLIC, ACC_SYNCHRONIZED\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n-         4: invokevirtual #56                 // Method org/brotli/dec/BrotliInputStream.reset:()V\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         4: invokevirtual #79                 // Method org/brotli/dec/BrotliInputStream.reset:()V\n          7: return\n       LineNumberTable:\n         line 94: 0\n         line 95: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n          4: lload_1\n-         5: invokestatic  #59                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+         5: invokestatic  #83                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n          8: lreturn\n       LineNumberTable:\n         line 99: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n             0       9     1     n   J\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n-         4: invokevirtual #65                 // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #29                 // Field decIS:Lorg/brotli/dec/BrotliInputStream;\n+         4: invokevirtual #92                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 104: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/brotli/BrotliCompressorInputStream;\n }\n"}]}
