{"diffoscope-json-version": 1, "source1": "first/PrefixFileFilter.class", "source2": "second/PrefixFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,54 +1,54 @@\n-  SHA-256 checksum 26441add475b6a7770188f192c8246f0087a990eb5d40d8e7ef8230ae98260b9\n+  SHA-256 checksum b8d4b07819061fac1d235fad9a41d3a47a660241e2b8dbb6ea453f044a712780\n   Compiled from \"PrefixFileFilter.java\"\n public class org.apache.commons.io.filefilter.PrefixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #35                         // org/apache/commons/io/filefilter/PrefixFileFilter\n   super_class: #36                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 12, attributes: 3\n Constant pool:\n-    #1 = Fieldref           #94.#95       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-    #2 = Methodref          #35.#96       // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-    #3 = Methodref          #36.#97       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+    #1 = Fieldref           #92.#93       // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+    #2 = Methodref          #35.#94       // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+    #3 = Methodref          #36.#95       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n     #4 = String             #43           // prefixes\n-    #5 = Methodref          #98.#99       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #6 = Fieldref           #35.#100      // org/apache/commons/io/filefilter/PrefixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-    #7 = InterfaceMethodref #101.#102     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+    #5 = Methodref          #96.#97       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #6 = Fieldref           #35.#98       // org/apache/commons/io/filefilter/PrefixFileFilter.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+    #7 = InterfaceMethodref #99.#100      // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n     #8 = Class              #44           // \"[Ljava/lang/String;\"\n-    #9 = Fieldref           #35.#103      // org/apache/commons/io/filefilter/PrefixFileFilter.prefixes:[Ljava/lang/String;\n-   #10 = Methodref          #94.#104      // org/apache/commons/io/IOCase.value:(Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n-   #11 = Fieldref           #35.#105      // org/apache/commons/io/filefilter/PrefixFileFilter.isCase:Lorg/apache/commons/io/IOCase;\n-   #12 = Methodref          #35.#106      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #13 = Methodref          #35.#107      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+    #9 = Fieldref           #35.#101      // org/apache/commons/io/filefilter/PrefixFileFilter.prefixes:[Ljava/lang/String;\n+   #10 = Methodref          #92.#102      // org/apache/commons/io/IOCase.value:(Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n+   #11 = Fieldref           #35.#103      // org/apache/commons/io/filefilter/PrefixFileFilter.isCase:Lorg/apache/commons/io/IOCase;\n+   #12 = Methodref          #35.#104      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+   #13 = Methodref          #35.#105      // org/apache/commons/io/filefilter/PrefixFileFilter.\"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n    #14 = String             #63           // prefix\n-   #15 = Class              #108          // java/lang/String\n-   #16 = Methodref          #109.#110     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #17 = Methodref          #111.#112     // java/io/File.getName:()Ljava/lang/String;\n-   #18 = Methodref          #35.#113      // org/apache/commons/io/filefilter/PrefixFileFilter.accept:(Ljava/lang/String;)Z\n-   #19 = InterfaceMethodref #114.#115     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #20 = InterfaceMethodref #114.#116     // java/nio/file/Path.toFile:()Ljava/io/File;\n-   #21 = Methodref          #35.#117      // org/apache/commons/io/filefilter/PrefixFileFilter.accept:(Ljava/io/File;)Z\n-   #22 = Methodref          #35.#118      // org/apache/commons/io/filefilter/PrefixFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-   #23 = InterfaceMethodref #119.#120     // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-   #24 = InvokeDynamic      #0:#126       // #0:test:(Lorg/apache/commons/io/filefilter/PrefixFileFilter;Ljava/lang/String;)Ljava/util/function/Predicate;\n-   #25 = InterfaceMethodref #119.#127     // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n-   #26 = Class              #128          // java/lang/StringBuilder\n-   #27 = Methodref          #26.#97       // java/lang/StringBuilder.\"<init>\":()V\n-   #28 = Methodref          #36.#129      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n-   #29 = Methodref          #26.#130      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #30 = String             #131          // (\n-   #31 = Methodref          #35.#132      // org/apache/commons/io/filefilter/PrefixFileFilter.append:([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n-   #32 = String             #133          // )\n-   #33 = Methodref          #26.#129      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #34 = Methodref          #94.#134      // org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #35 = Class              #135          // org/apache/commons/io/filefilter/PrefixFileFilter\n-   #36 = Class              #136          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #37 = Class              #137          // java/io/Serializable\n+   #15 = Class              #106          // java/lang/String\n+   #16 = Methodref          #107.#108     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+   #17 = Methodref          #73.#109      // java/io/File.getName:()Ljava/lang/String;\n+   #18 = Methodref          #35.#110      // org/apache/commons/io/filefilter/PrefixFileFilter.accept:(Ljava/lang/String;)Z\n+   #19 = InterfaceMethodref #81.#111      // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #20 = InterfaceMethodref #81.#112      // java/nio/file/Path.toFile:()Ljava/io/File;\n+   #21 = Methodref          #35.#113      // org/apache/commons/io/filefilter/PrefixFileFilter.accept:(Ljava/io/File;)Z\n+   #22 = Methodref          #35.#114      // org/apache/commons/io/filefilter/PrefixFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #23 = InterfaceMethodref #115.#116     // java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+   #24 = InvokeDynamic      #0:#122       // #0:test:(Lorg/apache/commons/io/filefilter/PrefixFileFilter;Ljava/lang/String;)Ljava/util/function/Predicate;\n+   #25 = InterfaceMethodref #115.#123     // java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z\n+   #26 = Class              #124          // java/lang/StringBuilder\n+   #27 = Methodref          #26.#95       // java/lang/StringBuilder.\"<init>\":()V\n+   #28 = Methodref          #36.#125      // org/apache/commons/io/filefilter/AbstractFileFilter.toString:()Ljava/lang/String;\n+   #29 = Methodref          #26.#126      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #30 = String             #127          // (\n+   #31 = Methodref          #35.#128      // org/apache/commons/io/filefilter/PrefixFileFilter.append:([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n+   #32 = String             #129          // )\n+   #33 = Methodref          #26.#125      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #34 = Methodref          #92.#130      // org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #35 = Class              #131          // org/apache/commons/io/filefilter/PrefixFileFilter\n+   #36 = Class              #132          // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #37 = Class              #133          // java/io/Serializable\n    #38 = Utf8               serialVersionUID\n    #39 = Utf8               J\n    #40 = Utf8               ConstantValue\n    #41 = Long               8533897440809599867l\n    #43 = Utf8               prefixes\n    #44 = Utf8               [Ljava/lang/String;\n    #45 = Utf8               isCase\n@@ -75,129 +75,125 @@\n    #66 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n    #67 = Utf8               ([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n    #68 = Utf8               accept\n    #69 = Utf8               (Ljava/io/File;)Z\n    #70 = Utf8               file\n    #71 = Utf8               Ljava/io/File;\n    #72 = Utf8               StackMapTable\n-   #73 = Class              #135          // org/apache/commons/io/filefilter/PrefixFileFilter\n-   #74 = Class              #138          // java/io/File\n-   #75 = Class              #108          // java/lang/String\n-   #76 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #77 = Utf8               name\n-   #78 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #79 = Utf8               Ljava/nio/file/Path;\n-   #80 = Utf8               attributes\n-   #81 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #82 = Utf8               fileName\n-   #83 = Class              #139          // java/nio/file/Path\n-   #84 = Class              #140          // java/nio/file/attribute/BasicFileAttributes\n-   #85 = Utf8               (Ljava/lang/String;)Z\n-   #86 = Utf8               toString\n-   #87 = Utf8               ()Ljava/lang/String;\n-   #88 = Utf8               buffer\n-   #89 = Utf8               Ljava/lang/StringBuilder;\n-   #90 = Utf8               lambda$accept$0\n-   #91 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               PrefixFileFilter.java\n-   #94 = Class              #141          // org/apache/commons/io/IOCase\n-   #95 = NameAndType        #142:#46      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #96 = NameAndType        #47:#59       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n-   #97 = NameAndType        #47:#143      // \"<init>\":()V\n-   #98 = Class              #144          // java/util/Objects\n-   #99 = NameAndType        #145:#146     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #100 = NameAndType        #147:#44      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #101 = Class              #148          // java/util/List\n-  #102 = NameAndType        #149:#150     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #103 = NameAndType        #43:#44       // prefixes:[Ljava/lang/String;\n-  #104 = NameAndType        #151:#152     // value:(Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n-  #105 = NameAndType        #45:#46       // isCase:Lorg/apache/commons/io/IOCase;\n-  #106 = NameAndType        #47:#66       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #107 = NameAndType        #47:#67       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-  #108 = Utf8               java/lang/String\n-  #109 = Class              #44           // \"[Ljava/lang/String;\"\n-  #110 = NameAndType        #153:#154     // clone:()Ljava/lang/Object;\n-  #111 = Class              #138          // java/io/File\n-  #112 = NameAndType        #155:#87      // getName:()Ljava/lang/String;\n-  #113 = NameAndType        #68:#85       // accept:(Ljava/lang/String;)Z\n-  #114 = Class              #139          // java/nio/file/Path\n-  #115 = NameAndType        #156:#157     // getFileName:()Ljava/nio/file/Path;\n-  #116 = NameAndType        #158:#159     // toFile:()Ljava/io/File;\n-  #117 = NameAndType        #68:#69       // accept:(Ljava/io/File;)Z\n-  #118 = NameAndType        #160:#161     // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-  #119 = Class              #162          // java/util/stream/Stream\n-  #120 = NameAndType        #163:#164     // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #121 = Utf8               BootstrapMethods\n-  #122 = MethodHandle       6:#165        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #123 = MethodType         #166          //  (Ljava/lang/Object;)Z\n-  #124 = MethodHandle       7:#167        // REF_invokeSpecial org/apache/commons/io/filefilter/PrefixFileFilter.lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #125 = MethodType         #85           //  (Ljava/lang/String;)Z\n-  #126 = NameAndType        #168:#169     // test:(Lorg/apache/commons/io/filefilter/PrefixFileFilter;Ljava/lang/String;)Ljava/util/function/Predicate;\n-  #127 = NameAndType        #170:#171     // anyMatch:(Ljava/util/function/Predicate;)Z\n-  #128 = Utf8               java/lang/StringBuilder\n-  #129 = NameAndType        #86:#87       // toString:()Ljava/lang/String;\n-  #130 = NameAndType        #172:#173     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #131 = Utf8               (\n-  #132 = NameAndType        #172:#174     // append:([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n-  #133 = Utf8               )\n-  #134 = NameAndType        #175:#91      // checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #135 = Utf8               org/apache/commons/io/filefilter/PrefixFileFilter\n-  #136 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #137 = Utf8               java/io/Serializable\n-  #138 = Utf8               java/io/File\n-  #139 = Utf8               java/nio/file/Path\n-  #140 = Utf8               java/nio/file/attribute/BasicFileAttributes\n-  #141 = Utf8               org/apache/commons/io/IOCase\n-  #142 = Utf8               SENSITIVE\n-  #143 = Utf8               ()V\n-  #144 = Utf8               java/util/Objects\n-  #145 = Utf8               requireNonNull\n-  #146 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #147 = Utf8               EMPTY_STRING_ARRAY\n-  #148 = Utf8               java/util/List\n-  #149 = Utf8               toArray\n-  #150 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #151 = Utf8               value\n-  #152 = Utf8               (Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n-  #153 = Utf8               clone\n-  #154 = Utf8               ()Ljava/lang/Object;\n-  #155 = Utf8               getName\n-  #156 = Utf8               getFileName\n-  #157 = Utf8               ()Ljava/nio/file/Path;\n-  #158 = Utf8               toFile\n-  #159 = Utf8               ()Ljava/io/File;\n-  #160 = Utf8               toFileVisitResult\n-  #161 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n-  #162 = Utf8               java/util/stream/Stream\n-  #163 = Utf8               of\n-  #164 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n-  #165 = Methodref          #176.#177     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #166 = Utf8               (Ljava/lang/Object;)Z\n-  #167 = Methodref          #35.#178      // org/apache/commons/io/filefilter/PrefixFileFilter.lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #168 = Utf8               test\n-  #169 = Utf8               (Lorg/apache/commons/io/filefilter/PrefixFileFilter;Ljava/lang/String;)Ljava/util/function/Predicate;\n-  #170 = Utf8               anyMatch\n-  #171 = Utf8               (Ljava/util/function/Predicate;)Z\n-  #172 = Utf8               append\n-  #173 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #174 = Utf8               ([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n-  #175 = Utf8               checkStartsWith\n-  #176 = Class              #179          // java/lang/invoke/LambdaMetafactory\n-  #177 = NameAndType        #180:#184     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #178 = NameAndType        #90:#91       // lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #179 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #180 = Utf8               metafactory\n-  #181 = Class              #186          // java/lang/invoke/MethodHandles$Lookup\n-  #182 = Utf8               Lookup\n-  #183 = Utf8               InnerClasses\n-  #184 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #185 = Class              #187          // java/lang/invoke/MethodHandles\n-  #186 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #187 = Utf8               java/lang/invoke/MethodHandles\n+   #73 = Class              #134          // java/io/File\n+   #74 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+   #75 = Utf8               name\n+   #76 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #77 = Utf8               Ljava/nio/file/Path;\n+   #78 = Utf8               attributes\n+   #79 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+   #80 = Utf8               fileName\n+   #81 = Class              #135          // java/nio/file/Path\n+   #82 = Class              #136          // java/nio/file/attribute/BasicFileAttributes\n+   #83 = Utf8               (Ljava/lang/String;)Z\n+   #84 = Utf8               toString\n+   #85 = Utf8               ()Ljava/lang/String;\n+   #86 = Utf8               buffer\n+   #87 = Utf8               Ljava/lang/StringBuilder;\n+   #88 = Utf8               lambda$accept$0\n+   #89 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #90 = Utf8               SourceFile\n+   #91 = Utf8               PrefixFileFilter.java\n+   #92 = Class              #137          // org/apache/commons/io/IOCase\n+   #93 = NameAndType        #138:#46      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+   #94 = NameAndType        #47:#59       // \"<init>\":(Ljava/util/List;Lorg/apache/commons/io/IOCase;)V\n+   #95 = NameAndType        #47:#139      // \"<init>\":()V\n+   #96 = Class              #140          // java/util/Objects\n+   #97 = NameAndType        #141:#142     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #98 = NameAndType        #143:#44      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #99 = Class              #144          // java/util/List\n+  #100 = NameAndType        #145:#146     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #101 = NameAndType        #43:#44       // prefixes:[Ljava/lang/String;\n+  #102 = NameAndType        #147:#148     // value:(Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n+  #103 = NameAndType        #45:#46       // isCase:Lorg/apache/commons/io/IOCase;\n+  #104 = NameAndType        #47:#66       // \"<init>\":(Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #105 = NameAndType        #47:#67       // \"<init>\":([Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #106 = Utf8               java/lang/String\n+  #107 = Class              #44           // \"[Ljava/lang/String;\"\n+  #108 = NameAndType        #149:#150     // clone:()Ljava/lang/Object;\n+  #109 = NameAndType        #151:#85      // getName:()Ljava/lang/String;\n+  #110 = NameAndType        #68:#83       // accept:(Ljava/lang/String;)Z\n+  #111 = NameAndType        #152:#153     // getFileName:()Ljava/nio/file/Path;\n+  #112 = NameAndType        #154:#155     // toFile:()Ljava/io/File;\n+  #113 = NameAndType        #68:#69       // accept:(Ljava/io/File;)Z\n+  #114 = NameAndType        #156:#157     // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+  #115 = Class              #158          // java/util/stream/Stream\n+  #116 = NameAndType        #159:#160     // of:([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #117 = Utf8               BootstrapMethods\n+  #118 = MethodHandle       6:#161        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #119 = MethodType         #162          //  (Ljava/lang/Object;)Z\n+  #120 = MethodHandle       7:#163        // REF_invokeSpecial org/apache/commons/io/filefilter/PrefixFileFilter.lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #121 = MethodType         #83           //  (Ljava/lang/String;)Z\n+  #122 = NameAndType        #164:#165     // test:(Lorg/apache/commons/io/filefilter/PrefixFileFilter;Ljava/lang/String;)Ljava/util/function/Predicate;\n+  #123 = NameAndType        #166:#167     // anyMatch:(Ljava/util/function/Predicate;)Z\n+  #124 = Utf8               java/lang/StringBuilder\n+  #125 = NameAndType        #84:#85       // toString:()Ljava/lang/String;\n+  #126 = NameAndType        #168:#169     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #127 = Utf8               (\n+  #128 = NameAndType        #168:#170     // append:([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n+  #129 = Utf8               )\n+  #130 = NameAndType        #171:#89      // checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #131 = Utf8               org/apache/commons/io/filefilter/PrefixFileFilter\n+  #132 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+  #133 = Utf8               java/io/Serializable\n+  #134 = Utf8               java/io/File\n+  #135 = Utf8               java/nio/file/Path\n+  #136 = Utf8               java/nio/file/attribute/BasicFileAttributes\n+  #137 = Utf8               org/apache/commons/io/IOCase\n+  #138 = Utf8               SENSITIVE\n+  #139 = Utf8               ()V\n+  #140 = Utf8               java/util/Objects\n+  #141 = Utf8               requireNonNull\n+  #142 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #143 = Utf8               EMPTY_STRING_ARRAY\n+  #144 = Utf8               java/util/List\n+  #145 = Utf8               toArray\n+  #146 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #147 = Utf8               value\n+  #148 = Utf8               (Lorg/apache/commons/io/IOCase;Lorg/apache/commons/io/IOCase;)Lorg/apache/commons/io/IOCase;\n+  #149 = Utf8               clone\n+  #150 = Utf8               ()Ljava/lang/Object;\n+  #151 = Utf8               getName\n+  #152 = Utf8               getFileName\n+  #153 = Utf8               ()Ljava/nio/file/Path;\n+  #154 = Utf8               toFile\n+  #155 = Utf8               ()Ljava/io/File;\n+  #156 = Utf8               toFileVisitResult\n+  #157 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n+  #158 = Utf8               java/util/stream/Stream\n+  #159 = Utf8               of\n+  #160 = Utf8               ([Ljava/lang/Object;)Ljava/util/stream/Stream;\n+  #161 = Methodref          #172.#173     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #162 = Utf8               (Ljava/lang/Object;)Z\n+  #163 = Methodref          #35.#174      // org/apache/commons/io/filefilter/PrefixFileFilter.lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #164 = Utf8               test\n+  #165 = Utf8               (Lorg/apache/commons/io/filefilter/PrefixFileFilter;Ljava/lang/String;)Ljava/util/function/Predicate;\n+  #166 = Utf8               anyMatch\n+  #167 = Utf8               (Ljava/util/function/Predicate;)Z\n+  #168 = Utf8               append\n+  #169 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #170 = Utf8               ([Ljava/lang/Object;Ljava/lang/StringBuilder;)V\n+  #171 = Utf8               checkStartsWith\n+  #172 = Class              #175          // java/lang/invoke/LambdaMetafactory\n+  #173 = NameAndType        #176:#180     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #174 = NameAndType        #88:#89       // lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #175 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #176 = Utf8               metafactory\n+  #177 = Class              #182          // java/lang/invoke/MethodHandles$Lookup\n+  #178 = Utf8               Lookup\n+  #179 = Utf8               InnerClasses\n+  #180 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #181 = Class              #183          // java/lang/invoke/MethodHandles\n+  #182 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #183 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final long serialVersionUID = 8533897440809599867l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 8533897440809599867l\n \n   private final java.lang.String[] prefixes;\n@@ -538,14 +534,14 @@\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/PrefixFileFilter;\n             0      10     1  name   Ljava/lang/String;\n             0      10     2 prefix   Ljava/lang/String;\n }\n SourceFile: \"PrefixFileFilter.java\"\n InnerClasses:\n-  public static final #182= #181 of #185; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #178= #177 of #181; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #122 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #118 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #123 (Ljava/lang/Object;)Z\n-      #124 REF_invokeSpecial org/apache/commons/io/filefilter/PrefixFileFilter.lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n-      #125 (Ljava/lang/String;)Z\n+      #119 (Ljava/lang/Object;)Z\n+      #120 REF_invokeSpecial org/apache/commons/io/filefilter/PrefixFileFilter.lambda$accept$0:(Ljava/lang/String;Ljava/lang/String;)Z\n+      #121 (Ljava/lang/String;)Z\n"}]}
