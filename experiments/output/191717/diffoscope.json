{"diffoscope-json-version": 1, "source1": "first/ReversedLinesFileReader.class", "source2": "second/ReversedLinesFileReader.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,324 +1,324 @@\n-  SHA-256 checksum 78a9eda423ca079be3053c17e6fffaeb23aab5be9239edefb3f877751e2d7e57\n+  SHA-256 checksum 6b5af3b22c2505d446bf601a859709a86cbff5e535883d964fcb250daf2cb989\n   Compiled from \"ReversedLinesFileReader.java\"\n public class org.apache.commons.io.input.ReversedLinesFileReader implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/io/input/ReversedLinesFileReader\n-  super_class: #72                        // java/lang/Object\n+  this_class: #4                          // org/apache/commons/io/input/ReversedLinesFileReader\n+  super_class: #53                        // java/lang/Object\n   interfaces: 1, fields: 12, methods: 17, attributes: 2\n Constant pool:\n-    #1 = Class              #165          // org/apache/commons/io/IOUtils\n-    #2 = Fieldref           #8.#166       // org/apache/commons/io/input/ReversedLinesFileReader.byteDecrement:I\n-    #3 = Fieldref           #8.#167       // org/apache/commons/io/input/ReversedLinesFileReader.charset:Ljava/nio/charset/Charset;\n-    #4 = Fieldref           #8.#168       // org/apache/commons/io/input/ReversedLinesFileReader.avoidNewlineSplitBufferSize:I\n-    #5 = Fieldref           #8.#169       // org/apache/commons/io/input/ReversedLinesFileReader.newLineSequences:[[B\n-    #6 = Fieldref           #8.#170       // org/apache/commons/io/input/ReversedLinesFileReader.channel:Ljava/nio/channels/SeekableByteChannel;\n-    #7 = Fieldref           #8.#171       // org/apache/commons/io/input/ReversedLinesFileReader.blockSize:I\n-    #8 = Class              #172          // org/apache/commons/io/input/ReversedLinesFileReader\n-    #9 = Methodref          #127.#173     // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-   #10 = Methodref          #8.#174       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n-   #11 = Methodref          #175.#176     // java/io/File.toPath:()Ljava/nio/file/Path;\n-   #12 = Methodref          #8.#177       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-   #13 = Methodref          #8.#178       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-   #14 = Methodref          #8.#179       // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n-   #15 = Methodref          #72.#180      // java/lang/Object.\"<init>\":()V\n-   #16 = Methodref          #181.#182     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #17 = Methodref          #127.#183     // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-   #18 = Methodref          #128.#184     // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n-   #19 = Fieldref           #185.#186     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #20 = String             #187          // Shift_JIS\n-   #21 = Methodref          #127.#188     // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #22 = String             #189          // windows-31j\n-   #23 = String             #190          // x-windows-949\n-   #24 = String             #191          // gbk\n-   #25 = String             #192          // x-windows-950\n-   #26 = Fieldref           #185.#193     // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n-   #27 = Fieldref           #185.#194     // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n-   #28 = Fieldref           #185.#195     // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n-   #29 = Class              #196          // java/io/UnsupportedEncodingException\n-   #30 = String             #197          // For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-   #31 = Methodref          #29.#198      // java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Class              #199          // java/lang/StringBuilder\n-   #33 = Methodref          #32.#180      // java/lang/StringBuilder.\"<init>\":()V\n-   #34 = String             #200          // Encoding\n-   #35 = Methodref          #32.#201      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #36 = Methodref          #32.#202      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #37 = String             #203          //  is not supported yet (feel free to submit a patch)\n-   #38 = Methodref          #32.#204      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #39 = Class              #205          // \"[B\"\n-   #40 = Fieldref           #206.#207     // org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n-   #41 = Methodref          #206.#208     // org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #42 = Fieldref           #206.#209     // org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n-   #43 = Fieldref           #206.#210     // org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n-   #44 = Class              #211          // java/nio/file/OpenOption\n-   #45 = Fieldref           #212.#213     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n-   #46 = Methodref          #214.#215     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-   #47 = InterfaceMethodref #216.#217     // java/nio/channels/SeekableByteChannel.size:()J\n-   #48 = Fieldref           #8.#218       // org/apache/commons/io/input/ReversedLinesFileReader.totalByteLength:J\n-   #49 = Fieldref           #8.#219       // org/apache/commons/io/input/ReversedLinesFileReader.totalBlockCount:J\n-   #50 = Class              #220          // org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n-   #51 = Methodref          #50.#221      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-   #52 = Fieldref           #8.#222       // org/apache/commons/io/input/ReversedLinesFileReader.currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #53 = Methodref          #181.#223     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #54 = InterfaceMethodref #216.#224     // java/nio/channels/SeekableByteChannel.close:()V\n-   #55 = Methodref          #50.#225      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-   #56 = Methodref          #50.#226      // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #57 = String             #227          //\n-   #58 = Methodref          #135.#228     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = Fieldref           #8.#229       // org/apache/commons/io/input/ReversedLinesFileReader.trailingNewlineOfFileSkipped:Z\n-   #60 = Methodref          #8.#230       // org/apache/commons/io/input/ReversedLinesFileReader.readLine:()Ljava/lang/String;\n-   #61 = Class              #231          // java/lang/IllegalArgumentException\n-   #62 = String             #232          // lineCount < 0\n-   #63 = Methodref          #61.#198      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #64 = Class              #233          // java/util/ArrayList\n-   #65 = Methodref          #64.#234      // java/util/ArrayList.\"<init>\":(I)V\n-   #66 = Methodref          #64.#235      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #67 = Methodref          #8.#236       // org/apache/commons/io/input/ReversedLinesFileReader.readLines:(I)Ljava/util/List;\n-   #68 = Methodref          #237.#238     // java/util/Collections.reverse:(Ljava/util/List;)V\n-   #69 = InterfaceMethodref #151.#239     // java/util/List.isEmpty:()Z\n-   #70 = Methodref          #240.#241     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #71 = Methodref          #135.#242     // java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-   #72 = Class              #243          // java/lang/Object\n-   #73 = Class              #244          // java/io/Closeable\n-   #74 = Class              #245          // org/apache/commons/io/input/ReversedLinesFileReader$1\n-   #75 = Utf8               InnerClasses\n-   #76 = Utf8               FilePart\n-   #77 = Utf8               EMPTY_STRING\n-   #78 = Utf8               Ljava/lang/String;\n-   #79 = Utf8               ConstantValue\n-   #80 = Utf8               DEFAULT_BLOCK_SIZE\n-   #81 = Utf8               I\n-   #82 = Integer            8192\n-   #83 = Utf8               blockSize\n-   #84 = Utf8               charset\n-   #85 = Utf8               Ljava/nio/charset/Charset;\n-   #86 = Utf8               channel\n-   #87 = Utf8               Ljava/nio/channels/SeekableByteChannel;\n-   #88 = Utf8               totalByteLength\n-   #89 = Utf8               J\n-   #90 = Utf8               totalBlockCount\n-   #91 = Utf8               newLineSequences\n-   #92 = Utf8               [[B\n-   #93 = Utf8               avoidNewlineSplitBufferSize\n-   #94 = Utf8               byteDecrement\n-   #95 = Utf8               currentFilePart\n-   #96 = Utf8               Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-   #97 = Utf8               trailingNewlineOfFileSkipped\n-   #98 = Utf8               Z\n-   #99 = Utf8               <init>\n-  #100 = Utf8               (Ljava/io/File;)V\n-  #101 = Utf8               Code\n-  #102 = Utf8               LineNumberTable\n-  #103 = Utf8               LocalVariableTable\n-  #104 = Utf8               this\n-  #105 = Utf8               Lorg/apache/commons/io/input/ReversedLinesFileReader;\n-  #106 = Utf8               file\n-  #107 = Utf8               Ljava/io/File;\n-  #108 = Utf8               Exceptions\n-  #109 = Class              #246          // java/io/IOException\n-  #110 = Utf8               Deprecated\n-  #111 = Utf8               RuntimeVisibleAnnotations\n-  #112 = Utf8               Ljava/lang/Deprecated;\n-  #113 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n-  #114 = Utf8               (Ljava/io/File;ILjava/nio/charset/Charset;)V\n-  #115 = Utf8               (Ljava/io/File;ILjava/lang/String;)V\n-  #116 = Utf8               charsetName\n-  #117 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-  #118 = Utf8               Ljava/nio/file/Path;\n-  #119 = Utf8               (Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-  #120 = Utf8               charsetEncoder\n-  #121 = Utf8               Ljava/nio/charset/CharsetEncoder;\n-  #122 = Utf8               maxBytesPerChar\n-  #123 = Utf8               F\n-  #124 = Utf8               lastBlockLength\n-  #125 = Utf8               StackMapTable\n-  #126 = Class              #247          // java/nio/file/Path\n-  #127 = Class              #248          // java/nio/charset/Charset\n-  #128 = Class              #249          // java/nio/charset/CharsetEncoder\n-  #129 = Utf8               (Ljava/nio/file/Path;ILjava/lang/String;)V\n-  #130 = Utf8               close\n-  #131 = Utf8               ()V\n-  #132 = Utf8               readLine\n-  #133 = Utf8               ()Ljava/lang/String;\n-  #134 = Utf8               line\n-  #135 = Class              #250          // java/lang/String\n-  #136 = Utf8               readLines\n-  #137 = Utf8               (I)Ljava/util/List;\n-  #138 = Utf8               i\n-  #139 = Utf8               lineCount\n-  #140 = Utf8               arrayList\n-  #141 = Utf8               Ljava/util/ArrayList;\n-  #142 = Utf8               LocalVariableTypeTable\n-  #143 = Utf8               Ljava/util/ArrayList<Ljava/lang/String;>;\n-  #144 = Utf8               Signature\n-  #145 = Utf8               (I)Ljava/util/List<Ljava/lang/String;>;\n-  #146 = Utf8               toString\n-  #147 = Utf8               (I)Ljava/lang/String;\n-  #148 = Utf8               lines\n-  #149 = Utf8               Ljava/util/List;\n-  #150 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #151 = Class              #251          // java/util/List\n-  #152 = Utf8               access$000\n-  #153 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n-  #154 = Utf8               x0\n-  #155 = Utf8               access$100\n-  #156 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n-  #157 = Utf8               access$200\n-  #158 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n-  #159 = Utf8               access$300\n-  #160 = Utf8               access$400\n-  #161 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n-  #162 = Utf8               access$500\n-  #163 = Utf8               SourceFile\n-  #164 = Utf8               ReversedLinesFileReader.java\n-  #165 = Utf8               org/apache/commons/io/IOUtils\n-  #166 = NameAndType        #94:#81       // byteDecrement:I\n-  #167 = NameAndType        #84:#85       // charset:Ljava/nio/charset/Charset;\n-  #168 = NameAndType        #93:#81       // avoidNewlineSplitBufferSize:I\n-  #169 = NameAndType        #91:#92       // newLineSequences:[[B\n-  #170 = NameAndType        #86:#87       // channel:Ljava/nio/channels/SeekableByteChannel;\n-  #171 = NameAndType        #83:#81       // blockSize:I\n-  #172 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader\n-  #173 = NameAndType        #252:#253     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #174 = NameAndType        #99:#114      // \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n-  #175 = Class              #254          // java/io/File\n-  #176 = NameAndType        #255:#256     // toPath:()Ljava/nio/file/Path;\n-  #177 = NameAndType        #99:#117      // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n-  #178 = NameAndType        #99:#119      // \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n-  #179 = NameAndType        #99:#129      // \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n-  #180 = NameAndType        #99:#131      // \"<init>\":()V\n-  #181 = Class              #257          // org/apache/commons/io/Charsets\n-  #182 = NameAndType        #258:#259     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #183 = NameAndType        #260:#261     // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n-  #184 = NameAndType        #122:#262     // maxBytesPerChar:()F\n-  #185 = Class              #263          // java/nio/charset/StandardCharsets\n-  #186 = NameAndType        #264:#85      // UTF_8:Ljava/nio/charset/Charset;\n-  #187 = Utf8               Shift_JIS\n-  #188 = NameAndType        #265:#266     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #189 = Utf8               windows-31j\n-  #190 = Utf8               x-windows-949\n-  #191 = Utf8               gbk\n-  #192 = Utf8               x-windows-950\n-  #193 = NameAndType        #267:#85      // UTF_16BE:Ljava/nio/charset/Charset;\n-  #194 = NameAndType        #268:#85      // UTF_16LE:Ljava/nio/charset/Charset;\n-  #195 = NameAndType        #269:#85      // UTF_16:Ljava/nio/charset/Charset;\n-  #196 = Utf8               java/io/UnsupportedEncodingException\n-  #197 = Utf8               For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-  #198 = NameAndType        #99:#270      // \"<init>\":(Ljava/lang/String;)V\n-  #199 = Utf8               java/lang/StringBuilder\n-  #200 = Utf8               Encoding\n-  #201 = NameAndType        #271:#272     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #202 = NameAndType        #271:#273     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #203 = Utf8                is not supported yet (feel free to submit a patch)\n-  #204 = NameAndType        #146:#133     // toString:()Ljava/lang/String;\n-  #205 = Utf8               [B\n-  #206 = Class              #274          // org/apache/commons/io/StandardLineSeparator\n-  #207 = NameAndType        #275:#276     // CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n-  #208 = NameAndType        #277:#278     // getBytes:(Ljava/nio/charset/Charset;)[B\n-  #209 = NameAndType        #279:#276     // LF:Lorg/apache/commons/io/StandardLineSeparator;\n-  #210 = NameAndType        #280:#276     // CR:Lorg/apache/commons/io/StandardLineSeparator;\n-  #211 = Utf8               java/nio/file/OpenOption\n-  #212 = Class              #281          // java/nio/file/StandardOpenOption\n-  #213 = NameAndType        #282:#283     // READ:Ljava/nio/file/StandardOpenOption;\n-  #214 = Class              #284          // java/nio/file/Files\n-  #215 = NameAndType        #285:#286     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #216 = Class              #287          // java/nio/channels/SeekableByteChannel\n-  #217 = NameAndType        #288:#289     // size:()J\n-  #218 = NameAndType        #88:#89       // totalByteLength:J\n-  #219 = NameAndType        #90:#89       // totalBlockCount:J\n-  #220 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n-  #221 = NameAndType        #99:#290      // \"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-  #222 = NameAndType        #95:#96       // currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #223 = NameAndType        #258:#266     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #224 = NameAndType        #130:#131     // close:()V\n-  #225 = NameAndType        #291:#292     // access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-  #226 = NameAndType        #293:#294     // access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #227 = Utf8\n-  #228 = NameAndType        #295:#296     // equals:(Ljava/lang/Object;)Z\n-  #229 = NameAndType        #97:#98       // trailingNewlineOfFileSkipped:Z\n-  #230 = NameAndType        #132:#133     // readLine:()Ljava/lang/String;\n-  #231 = Utf8               java/lang/IllegalArgumentException\n-  #232 = Utf8               lineCount < 0\n-  #233 = Utf8               java/util/ArrayList\n-  #234 = NameAndType        #99:#297      // \"<init>\":(I)V\n-  #235 = NameAndType        #298:#296     // add:(Ljava/lang/Object;)Z\n-  #236 = NameAndType        #136:#137     // readLines:(I)Ljava/util/List;\n-  #237 = Class              #299          // java/util/Collections\n-  #238 = NameAndType        #300:#301     // reverse:(Ljava/util/List;)V\n-  #239 = NameAndType        #302:#303     // isEmpty:()Z\n-  #240 = Class              #304          // java/lang/System\n-  #241 = NameAndType        #305:#133     // lineSeparator:()Ljava/lang/String;\n-  #242 = NameAndType        #306:#307     // join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-  #243 = Utf8               java/lang/Object\n-  #244 = Utf8               java/io/Closeable\n-  #245 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$1\n-  #246 = Utf8               java/io/IOException\n-  #247 = Utf8               java/nio/file/Path\n-  #248 = Utf8               java/nio/charset/Charset\n-  #249 = Utf8               java/nio/charset/CharsetEncoder\n-  #250 = Utf8               java/lang/String\n-  #251 = Utf8               java/util/List\n-  #252 = Utf8               defaultCharset\n-  #253 = Utf8               ()Ljava/nio/charset/Charset;\n-  #254 = Utf8               java/io/File\n-  #255 = Utf8               toPath\n-  #256 = Utf8               ()Ljava/nio/file/Path;\n-  #257 = Utf8               org/apache/commons/io/Charsets\n-  #258 = Utf8               toCharset\n-  #259 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #260 = Utf8               newEncoder\n-  #261 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n-  #262 = Utf8               ()F\n-  #263 = Utf8               java/nio/charset/StandardCharsets\n-  #264 = Utf8               UTF_8\n-  #265 = Utf8               forName\n-  #266 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #267 = Utf8               UTF_16BE\n-  #268 = Utf8               UTF_16LE\n-  #269 = Utf8               UTF_16\n-  #270 = Utf8               (Ljava/lang/String;)V\n-  #271 = Utf8               append\n-  #272 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #273 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #274 = Utf8               org/apache/commons/io/StandardLineSeparator\n-  #275 = Utf8               CRLF\n-  #276 = Utf8               Lorg/apache/commons/io/StandardLineSeparator;\n-  #277 = Utf8               getBytes\n-  #278 = Utf8               (Ljava/nio/charset/Charset;)[B\n-  #279 = Utf8               LF\n-  #280 = Utf8               CR\n-  #281 = Utf8               java/nio/file/StandardOpenOption\n-  #282 = Utf8               READ\n-  #283 = Utf8               Ljava/nio/file/StandardOpenOption;\n-  #284 = Utf8               java/nio/file/Files\n-  #285 = Utf8               newByteChannel\n-  #286 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-  #287 = Utf8               java/nio/channels/SeekableByteChannel\n-  #288 = Utf8               size\n-  #289 = Utf8               ()J\n-  #290 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-  #291 = Utf8               access$700\n-  #292 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n-  #293 = Utf8               access$800\n-  #294 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-  #295 = Utf8               equals\n-  #296 = Utf8               (Ljava/lang/Object;)Z\n-  #297 = Utf8               (I)V\n-  #298 = Utf8               add\n-  #299 = Utf8               java/util/Collections\n-  #300 = Utf8               reverse\n-  #301 = Utf8               (Ljava/util/List;)V\n-  #302 = Utf8               isEmpty\n-  #303 = Utf8               ()Z\n-  #304 = Utf8               java/lang/System\n-  #305 = Utf8               lineSeparator\n-  #306 = Utf8               join\n-  #307 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Fieldref           #4.#5         // org/apache/commons/io/input/ReversedLinesFileReader.byteDecrement:I\n+    #4 = Class              #6            // org/apache/commons/io/input/ReversedLinesFileReader\n+    #5 = NameAndType        #7:#8         // byteDecrement:I\n+    #6 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader\n+    #7 = Utf8               byteDecrement\n+    #8 = Utf8               I\n+    #9 = Fieldref           #4.#10        // org/apache/commons/io/input/ReversedLinesFileReader.charset:Ljava/nio/charset/Charset;\n+   #10 = NameAndType        #11:#12       // charset:Ljava/nio/charset/Charset;\n+   #11 = Utf8               charset\n+   #12 = Utf8               Ljava/nio/charset/Charset;\n+   #13 = Fieldref           #4.#14        // org/apache/commons/io/input/ReversedLinesFileReader.avoidNewlineSplitBufferSize:I\n+   #14 = NameAndType        #15:#8        // avoidNewlineSplitBufferSize:I\n+   #15 = Utf8               avoidNewlineSplitBufferSize\n+   #16 = Fieldref           #4.#17        // org/apache/commons/io/input/ReversedLinesFileReader.newLineSequences:[[B\n+   #17 = NameAndType        #18:#19       // newLineSequences:[[B\n+   #18 = Utf8               newLineSequences\n+   #19 = Utf8               [[B\n+   #20 = Fieldref           #4.#21        // org/apache/commons/io/input/ReversedLinesFileReader.channel:Ljava/nio/channels/SeekableByteChannel;\n+   #21 = NameAndType        #22:#23       // channel:Ljava/nio/channels/SeekableByteChannel;\n+   #22 = Utf8               channel\n+   #23 = Utf8               Ljava/nio/channels/SeekableByteChannel;\n+   #24 = Fieldref           #4.#25        // org/apache/commons/io/input/ReversedLinesFileReader.blockSize:I\n+   #25 = NameAndType        #26:#8        // blockSize:I\n+   #26 = Utf8               blockSize\n+   #27 = Methodref          #28.#29       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #28 = Class              #30           // java/nio/charset/Charset\n+   #29 = NameAndType        #31:#32       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #30 = Utf8               java/nio/charset/Charset\n+   #31 = Utf8               defaultCharset\n+   #32 = Utf8               ()Ljava/nio/charset/Charset;\n+   #33 = Methodref          #4.#34        // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+   #34 = NameAndType        #35:#36       // \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+   #35 = Utf8               <init>\n+   #36 = Utf8               (Ljava/io/File;ILjava/nio/charset/Charset;)V\n+   #37 = Methodref          #38.#39       // java/io/File.toPath:()Ljava/nio/file/Path;\n+   #38 = Class              #40           // java/io/File\n+   #39 = NameAndType        #41:#42       // toPath:()Ljava/nio/file/Path;\n+   #40 = Utf8               java/io/File\n+   #41 = Utf8               toPath\n+   #42 = Utf8               ()Ljava/nio/file/Path;\n+   #43 = Methodref          #4.#44        // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+   #44 = NameAndType        #35:#45       // \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+   #45 = Utf8               (Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+   #46 = Methodref          #4.#47        // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+   #47 = NameAndType        #35:#48       // \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+   #48 = Utf8               (Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+   #49 = Methodref          #4.#50        // org/apache/commons/io/input/ReversedLinesFileReader.\"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+   #50 = NameAndType        #35:#51       // \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+   #51 = Utf8               (Ljava/nio/file/Path;ILjava/lang/String;)V\n+   #52 = Methodref          #53.#54       // java/lang/Object.\"<init>\":()V\n+   #53 = Class              #55           // java/lang/Object\n+   #54 = NameAndType        #35:#56       // \"<init>\":()V\n+   #55 = Utf8               java/lang/Object\n+   #56 = Utf8               ()V\n+   #57 = Methodref          #58.#59       // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #58 = Class              #60           // org/apache/commons/io/Charsets\n+   #59 = NameAndType        #61:#62       // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #60 = Utf8               org/apache/commons/io/Charsets\n+   #61 = Utf8               toCharset\n+   #62 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #63 = Methodref          #28.#64       // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #64 = NameAndType        #65:#66       // newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+   #65 = Utf8               newEncoder\n+   #66 = Utf8               ()Ljava/nio/charset/CharsetEncoder;\n+   #67 = Methodref          #68.#69       // java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n+   #68 = Class              #70           // java/nio/charset/CharsetEncoder\n+   #69 = NameAndType        #71:#72       // maxBytesPerChar:()F\n+   #70 = Utf8               java/nio/charset/CharsetEncoder\n+   #71 = Utf8               maxBytesPerChar\n+   #72 = Utf8               ()F\n+   #73 = Fieldref           #74.#75       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #74 = Class              #76           // java/nio/charset/StandardCharsets\n+   #75 = NameAndType        #77:#12       // UTF_8:Ljava/nio/charset/Charset;\n+   #76 = Utf8               java/nio/charset/StandardCharsets\n+   #77 = Utf8               UTF_8\n+   #78 = String             #79           // Shift_JIS\n+   #79 = Utf8               Shift_JIS\n+   #80 = Methodref          #28.#81       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #81 = NameAndType        #82:#83       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #82 = Utf8               forName\n+   #83 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #84 = String             #85           // windows-31j\n+   #85 = Utf8               windows-31j\n+   #86 = String             #87           // x-windows-949\n+   #87 = Utf8               x-windows-949\n+   #88 = String             #89           // gbk\n+   #89 = Utf8               gbk\n+   #90 = String             #91           // x-windows-950\n+   #91 = Utf8               x-windows-950\n+   #92 = Fieldref           #74.#93       // java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+   #93 = NameAndType        #94:#12       // UTF_16BE:Ljava/nio/charset/Charset;\n+   #94 = Utf8               UTF_16BE\n+   #95 = Fieldref           #74.#96       // java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+   #96 = NameAndType        #97:#12       // UTF_16LE:Ljava/nio/charset/Charset;\n+   #97 = Utf8               UTF_16LE\n+   #98 = Fieldref           #74.#99       // java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+   #99 = NameAndType        #100:#12      // UTF_16:Ljava/nio/charset/Charset;\n+  #100 = Utf8               UTF_16\n+  #101 = Class              #102          // java/io/UnsupportedEncodingException\n+  #102 = Utf8               java/io/UnsupportedEncodingException\n+  #103 = String             #104          // For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+  #104 = Utf8               For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+  #105 = Methodref          #101.#106     // java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n+  #106 = NameAndType        #35:#107      // \"<init>\":(Ljava/lang/String;)V\n+  #107 = Utf8               (Ljava/lang/String;)V\n+  #108 = Class              #109          // java/lang/StringBuilder\n+  #109 = Utf8               java/lang/StringBuilder\n+  #110 = Methodref          #108.#54      // java/lang/StringBuilder.\"<init>\":()V\n+  #111 = String             #112          // Encoding\n+  #112 = Utf8               Encoding\n+  #113 = Methodref          #108.#114     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #114 = NameAndType        #115:#116     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #115 = Utf8               append\n+  #116 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #117 = Methodref          #108.#118     // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #118 = NameAndType        #115:#119     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #119 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #120 = String             #121          //  is not supported yet (feel free to submit a patch)\n+  #121 = Utf8                is not supported yet (feel free to submit a patch)\n+  #122 = Methodref          #108.#123     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #123 = NameAndType        #124:#125     // toString:()Ljava/lang/String;\n+  #124 = Utf8               toString\n+  #125 = Utf8               ()Ljava/lang/String;\n+  #126 = Class              #127          // \"[B\"\n+  #127 = Utf8               [B\n+  #128 = Fieldref           #129.#130     // org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #129 = Class              #131          // org/apache/commons/io/StandardLineSeparator\n+  #130 = NameAndType        #132:#133     // CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #131 = Utf8               org/apache/commons/io/StandardLineSeparator\n+  #132 = Utf8               CRLF\n+  #133 = Utf8               Lorg/apache/commons/io/StandardLineSeparator;\n+  #134 = Methodref          #129.#135     // org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n+  #135 = NameAndType        #136:#137     // getBytes:(Ljava/nio/charset/Charset;)[B\n+  #136 = Utf8               getBytes\n+  #137 = Utf8               (Ljava/nio/charset/Charset;)[B\n+  #138 = Fieldref           #129.#139     // org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #139 = NameAndType        #140:#133     // LF:Lorg/apache/commons/io/StandardLineSeparator;\n+  #140 = Utf8               LF\n+  #141 = Fieldref           #129.#142     // org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n+  #142 = NameAndType        #143:#133     // CR:Lorg/apache/commons/io/StandardLineSeparator;\n+  #143 = Utf8               CR\n+  #144 = Class              #145          // java/nio/file/OpenOption\n+  #145 = Utf8               java/nio/file/OpenOption\n+  #146 = Fieldref           #147.#148     // java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+  #147 = Class              #149          // java/nio/file/StandardOpenOption\n+  #148 = NameAndType        #150:#151     // READ:Ljava/nio/file/StandardOpenOption;\n+  #149 = Utf8               java/nio/file/StandardOpenOption\n+  #150 = Utf8               READ\n+  #151 = Utf8               Ljava/nio/file/StandardOpenOption;\n+  #152 = Methodref          #153.#154     // java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #153 = Class              #155          // java/nio/file/Files\n+  #154 = NameAndType        #156:#157     // newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #155 = Utf8               java/nio/file/Files\n+  #156 = Utf8               newByteChannel\n+  #157 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+  #158 = InterfaceMethodref #159.#160     // java/nio/channels/SeekableByteChannel.size:()J\n+  #159 = Class              #161          // java/nio/channels/SeekableByteChannel\n+  #160 = NameAndType        #162:#163     // size:()J\n+  #161 = Utf8               java/nio/channels/SeekableByteChannel\n+  #162 = Utf8               size\n+  #163 = Utf8               ()J\n+  #164 = Fieldref           #4.#165       // org/apache/commons/io/input/ReversedLinesFileReader.totalByteLength:J\n+  #165 = NameAndType        #166:#167     // totalByteLength:J\n+  #166 = Utf8               totalByteLength\n+  #167 = Utf8               J\n+  #168 = Fieldref           #4.#169       // org/apache/commons/io/input/ReversedLinesFileReader.totalBlockCount:J\n+  #169 = NameAndType        #170:#167     // totalBlockCount:J\n+  #170 = Utf8               totalBlockCount\n+  #171 = Class              #172          // org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+  #172 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+  #173 = Methodref          #171.#174     // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #174 = NameAndType        #35:#175      // \"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #175 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+  #176 = Fieldref           #4.#177       // org/apache/commons/io/input/ReversedLinesFileReader.currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #177 = NameAndType        #178:#179     // currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #178 = Utf8               currentFilePart\n+  #179 = Utf8               Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #180 = Methodref          #58.#181      // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #181 = NameAndType        #61:#83       // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #182 = InterfaceMethodref #159.#183     // java/nio/channels/SeekableByteChannel.close:()V\n+  #183 = NameAndType        #184:#56      // close:()V\n+  #184 = Utf8               close\n+  #185 = Methodref          #171.#186     // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #186 = NameAndType        #187:#188     // access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #187 = Utf8               access$700\n+  #188 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+  #189 = Methodref          #171.#190     // org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #190 = NameAndType        #191:#192     // access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #191 = Utf8               access$800\n+  #192 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+  #193 = String             #194          //\n+  #194 = Utf8\n+  #195 = Methodref          #196.#197     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #196 = Class              #198          // java/lang/String\n+  #197 = NameAndType        #199:#200     // equals:(Ljava/lang/Object;)Z\n+  #198 = Utf8               java/lang/String\n+  #199 = Utf8               equals\n+  #200 = Utf8               (Ljava/lang/Object;)Z\n+  #201 = Fieldref           #4.#202       // org/apache/commons/io/input/ReversedLinesFileReader.trailingNewlineOfFileSkipped:Z\n+  #202 = NameAndType        #203:#204     // trailingNewlineOfFileSkipped:Z\n+  #203 = Utf8               trailingNewlineOfFileSkipped\n+  #204 = Utf8               Z\n+  #205 = Methodref          #4.#206       // org/apache/commons/io/input/ReversedLinesFileReader.readLine:()Ljava/lang/String;\n+  #206 = NameAndType        #207:#125     // readLine:()Ljava/lang/String;\n+  #207 = Utf8               readLine\n+  #208 = Class              #209          // java/lang/IllegalArgumentException\n+  #209 = Utf8               java/lang/IllegalArgumentException\n+  #210 = String             #211          // lineCount < 0\n+  #211 = Utf8               lineCount < 0\n+  #212 = Methodref          #208.#106     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #213 = Class              #214          // java/util/ArrayList\n+  #214 = Utf8               java/util/ArrayList\n+  #215 = Methodref          #213.#216     // java/util/ArrayList.\"<init>\":(I)V\n+  #216 = NameAndType        #35:#217      // \"<init>\":(I)V\n+  #217 = Utf8               (I)V\n+  #218 = Methodref          #213.#219     // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #219 = NameAndType        #220:#200     // add:(Ljava/lang/Object;)Z\n+  #220 = Utf8               add\n+  #221 = Methodref          #4.#222       // org/apache/commons/io/input/ReversedLinesFileReader.readLines:(I)Ljava/util/List;\n+  #222 = NameAndType        #223:#224     // readLines:(I)Ljava/util/List;\n+  #223 = Utf8               readLines\n+  #224 = Utf8               (I)Ljava/util/List;\n+  #225 = Methodref          #226.#227     // java/util/Collections.reverse:(Ljava/util/List;)V\n+  #226 = Class              #228          // java/util/Collections\n+  #227 = NameAndType        #229:#230     // reverse:(Ljava/util/List;)V\n+  #228 = Utf8               java/util/Collections\n+  #229 = Utf8               reverse\n+  #230 = Utf8               (Ljava/util/List;)V\n+  #231 = InterfaceMethodref #232.#233     // java/util/List.isEmpty:()Z\n+  #232 = Class              #234          // java/util/List\n+  #233 = NameAndType        #235:#236     // isEmpty:()Z\n+  #234 = Utf8               java/util/List\n+  #235 = Utf8               isEmpty\n+  #236 = Utf8               ()Z\n+  #237 = Methodref          #238.#239     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+  #238 = Class              #240          // java/lang/System\n+  #239 = NameAndType        #241:#125     // lineSeparator:()Ljava/lang/String;\n+  #240 = Utf8               java/lang/System\n+  #241 = Utf8               lineSeparator\n+  #242 = Methodref          #196.#243     // java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #243 = NameAndType        #244:#245     // join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #244 = Utf8               join\n+  #245 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+  #246 = Class              #247          // java/io/Closeable\n+  #247 = Utf8               java/io/Closeable\n+  #248 = Utf8               EMPTY_STRING\n+  #249 = Utf8               Ljava/lang/String;\n+  #250 = Utf8               ConstantValue\n+  #251 = Utf8               DEFAULT_BLOCK_SIZE\n+  #252 = Integer            8192\n+  #253 = Utf8               (Ljava/io/File;)V\n+  #254 = Utf8               Code\n+  #255 = Utf8               LineNumberTable\n+  #256 = Utf8               LocalVariableTable\n+  #257 = Utf8               this\n+  #258 = Utf8               Lorg/apache/commons/io/input/ReversedLinesFileReader;\n+  #259 = Utf8               file\n+  #260 = Utf8               Ljava/io/File;\n+  #261 = Utf8               Exceptions\n+  #262 = Class              #263          // java/io/IOException\n+  #263 = Utf8               java/io/IOException\n+  #264 = Utf8               Deprecated\n+  #265 = Utf8               RuntimeVisibleAnnotations\n+  #266 = Utf8               Ljava/lang/Deprecated;\n+  #267 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n+  #268 = Utf8               (Ljava/io/File;ILjava/lang/String;)V\n+  #269 = Utf8               charsetName\n+  #270 = Utf8               Ljava/nio/file/Path;\n+  #271 = Utf8               charsetEncoder\n+  #272 = Utf8               Ljava/nio/charset/CharsetEncoder;\n+  #273 = Utf8               F\n+  #274 = Utf8               lastBlockLength\n+  #275 = Utf8               StackMapTable\n+  #276 = Class              #277          // java/nio/file/Path\n+  #277 = Utf8               java/nio/file/Path\n+  #278 = Utf8               line\n+  #279 = Utf8               i\n+  #280 = Utf8               lineCount\n+  #281 = Utf8               arrayList\n+  #282 = Utf8               Ljava/util/ArrayList;\n+  #283 = Utf8               LocalVariableTypeTable\n+  #284 = Utf8               Ljava/util/ArrayList<Ljava/lang/String;>;\n+  #285 = Utf8               Signature\n+  #286 = Utf8               (I)Ljava/util/List<Ljava/lang/String;>;\n+  #287 = Utf8               (I)Ljava/lang/String;\n+  #288 = Utf8               lines\n+  #289 = Utf8               Ljava/util/List;\n+  #290 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #291 = Utf8               access$000\n+  #292 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n+  #293 = Utf8               x0\n+  #294 = Utf8               access$100\n+  #295 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n+  #296 = Utf8               access$200\n+  #297 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n+  #298 = Utf8               access$300\n+  #299 = Utf8               access$400\n+  #300 = Utf8               (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n+  #301 = Utf8               access$500\n+  #302 = Utf8               SourceFile\n+  #303 = Utf8               ReversedLinesFileReader.java\n+  #304 = Utf8               InnerClasses\n+  #305 = Utf8               FilePart\n+  #306 = Class              #307          // org/apache/commons/io/input/ReversedLinesFileReader$1\n+  #307 = Utf8               org/apache/commons/io/input/ReversedLinesFileReader$1\n {\n   private static final java.lang.String EMPTY_STRING = \"\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String\n \n   private static final int DEFAULT_BLOCK_SIZE = 8192;\n@@ -370,41 +370,41 @@\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: sipush        8192\n-         5: invokestatic  #9                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-         8: invokespecial #10                 // Method \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n+         5: invokestatic  #27                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         8: invokespecial #33                 // Method \"<init>\":(Ljava/io/File;ILjava/nio/charset/Charset;)V\n         11: return\n       LineNumberTable:\n         line 230: 0\n         line 231: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n             0      12     1  file   Ljava/io/File;\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #112()\n+      0: #266()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         2: invokevirtual #37                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          5: aload_2\n-         6: invokespecial #12                 // Method \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n+         6: invokespecial #43                 // Method \"<init>\":(Ljava/nio/file/Path;Ljava/nio/charset/Charset;)V\n          9: return\n       LineNumberTable:\n         line 243: 0\n         line 244: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n@@ -416,18 +416,18 @@\n   public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         2: invokevirtual #37                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          5: iload_2\n          6: aload_3\n-         7: invokespecial #13                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+         7: invokespecial #46                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n         10: return\n       LineNumberTable:\n         line 258: 0\n         line 259: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n@@ -440,18 +440,18 @@\n   public org.apache.commons.io.input.ReversedLinesFileReader(java.io.File, int, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ILjava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #11                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+         2: invokevirtual #37                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n          5: iload_2\n          6: aload_3\n-         7: invokespecial #14                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n+         7: invokespecial #49                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/lang/String;)V\n         10: return\n       LineNumberTable:\n         line 277: 0\n         line 278: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n@@ -466,15 +466,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: sipush        8192\n          5: aload_2\n-         6: invokespecial #13                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+         6: invokespecial #46                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n          9: return\n       LineNumberTable:\n         line 290: 0\n         line 291: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n@@ -485,200 +485,200 @@\n \n   public org.apache.commons.io.input.ReversedLinesFileReader(java.nio.file.Path, int, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=9, locals=7, args_size=4\n          0: aload_0\n-         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #52                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_2\n-         6: putfield      #7                  // Field blockSize:I\n+         6: putfield      #24                 // Field blockSize:I\n          9: aload_0\n         10: aload_3\n-        11: invokestatic  #16                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-        14: putfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n+        11: invokestatic  #57                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+        14: putfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n         17: aload_0\n-        18: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-        21: invokevirtual #17                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n+        18: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+        21: invokevirtual #63                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;\n         24: astore        4\n         26: aload         4\n-        28: invokevirtual #18                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n+        28: invokevirtual #67                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F\n         31: fstore        5\n         33: fload         5\n         35: fconst_1\n         36: fcmpl\n         37: ifne          48\n         40: aload_0\n         41: iconst_1\n-        42: putfield      #2                  // Field byteDecrement:I\n+        42: putfield      #3                  // Field byteDecrement:I\n         45: goto          214\n         48: aload_0\n-        49: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-        52: getstatic     #19                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        49: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+        52: getstatic     #73                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n         55: if_acmpne     66\n         58: aload_0\n         59: iconst_1\n-        60: putfield      #2                  // Field byteDecrement:I\n+        60: putfield      #3                  // Field byteDecrement:I\n         63: goto          214\n         66: aload_0\n-        67: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-        70: ldc           #20                 // String Shift_JIS\n-        72: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+        67: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+        70: ldc           #78                 // String Shift_JIS\n+        72: invokestatic  #80                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n         75: if_acmpeq     126\n         78: aload_0\n-        79: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-        82: ldc           #22                 // String windows-31j\n-        84: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+        79: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+        82: ldc           #84                 // String windows-31j\n+        84: invokestatic  #80                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n         87: if_acmpeq     126\n         90: aload_0\n-        91: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-        94: ldc           #23                 // String x-windows-949\n-        96: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+        91: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+        94: ldc           #86                 // String x-windows-949\n+        96: invokestatic  #80                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n         99: if_acmpeq     126\n        102: aload_0\n-       103: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       106: ldc           #24                 // String gbk\n-       108: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+       103: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       106: ldc           #88                 // String gbk\n+       108: invokestatic  #80                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n        111: if_acmpeq     126\n        114: aload_0\n-       115: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       118: ldc           #25                 // String x-windows-950\n-       120: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+       115: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       118: ldc           #90                 // String x-windows-950\n+       120: invokestatic  #80                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n        123: if_acmpne     134\n        126: aload_0\n        127: iconst_1\n-       128: putfield      #2                  // Field byteDecrement:I\n+       128: putfield      #3                  // Field byteDecrement:I\n        131: goto          214\n        134: aload_0\n-       135: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       138: getstatic     #26                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n+       135: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       138: getstatic     #92                 // Field java/nio/charset/StandardCharsets.UTF_16BE:Ljava/nio/charset/Charset;\n        141: if_acmpeq     154\n        144: aload_0\n-       145: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       148: getstatic     #27                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n+       145: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       148: getstatic     #95                 // Field java/nio/charset/StandardCharsets.UTF_16LE:Ljava/nio/charset/Charset;\n        151: if_acmpne     162\n        154: aload_0\n        155: iconst_2\n-       156: putfield      #2                  // Field byteDecrement:I\n+       156: putfield      #3                  // Field byteDecrement:I\n        159: goto          214\n        162: aload_0\n-       163: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       166: getstatic     #28                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n+       163: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       166: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_16:Ljava/nio/charset/Charset;\n        169: if_acmpne     182\n-       172: new           #29                 // class java/io/UnsupportedEncodingException\n+       172: new           #101                // class java/io/UnsupportedEncodingException\n        175: dup\n-       176: ldc           #30                 // String For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n-       178: invokespecial #31                 // Method java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n+       176: ldc           #103                // String For UTF-16, you need to specify the byte order (use UTF-16BE or UTF-16LE)\n+       178: invokespecial #105                // Method java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n        181: athrow\n-       182: new           #29                 // class java/io/UnsupportedEncodingException\n+       182: new           #101                // class java/io/UnsupportedEncodingException\n        185: dup\n-       186: new           #32                 // class java/lang/StringBuilder\n+       186: new           #108                // class java/lang/StringBuilder\n        189: dup\n-       190: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       193: ldc           #34                 // String Encoding\n-       195: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       190: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":()V\n+       193: ldc           #111                // String Encoding\n+       195: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        198: aload_3\n-       199: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-       202: ldc           #37                 // String  is not supported yet (feel free to submit a patch)\n-       204: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       207: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       210: invokespecial #31                 // Method java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n+       199: invokevirtual #117                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+       202: ldc           #120                // String  is not supported yet (feel free to submit a patch)\n+       204: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       207: invokevirtual #122                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       210: invokespecial #105                // Method java/io/UnsupportedEncodingException.\"<init>\":(Ljava/lang/String;)V\n        213: athrow\n        214: aload_0\n        215: iconst_3\n-       216: anewarray     #39                 // class \"[B\"\n+       216: anewarray     #126                // class \"[B\"\n        219: dup\n        220: iconst_0\n-       221: getstatic     #40                 // Field org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n+       221: getstatic     #128                // Field org/apache/commons/io/StandardLineSeparator.CRLF:Lorg/apache/commons/io/StandardLineSeparator;\n        224: aload_0\n-       225: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       228: invokevirtual #41                 // Method org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n+       225: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       228: invokevirtual #134                // Method org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n        231: aastore\n        232: dup\n        233: iconst_1\n-       234: getstatic     #42                 // Field org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n+       234: getstatic     #138                // Field org/apache/commons/io/StandardLineSeparator.LF:Lorg/apache/commons/io/StandardLineSeparator;\n        237: aload_0\n-       238: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       241: invokevirtual #41                 // Method org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n+       238: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       241: invokevirtual #134                // Method org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n        244: aastore\n        245: dup\n        246: iconst_2\n-       247: getstatic     #43                 // Field org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n+       247: getstatic     #141                // Field org/apache/commons/io/StandardLineSeparator.CR:Lorg/apache/commons/io/StandardLineSeparator;\n        250: aload_0\n-       251: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n-       254: invokevirtual #41                 // Method org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n+       251: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n+       254: invokevirtual #134                // Method org/apache/commons/io/StandardLineSeparator.getBytes:(Ljava/nio/charset/Charset;)[B\n        257: aastore\n-       258: putfield      #5                  // Field newLineSequences:[[B\n+       258: putfield      #16                 // Field newLineSequences:[[B\n        261: aload_0\n        262: aload_0\n-       263: getfield      #5                  // Field newLineSequences:[[B\n+       263: getfield      #16                 // Field newLineSequences:[[B\n        266: iconst_0\n        267: aaload\n        268: arraylength\n-       269: putfield      #4                  // Field avoidNewlineSplitBufferSize:I\n+       269: putfield      #13                 // Field avoidNewlineSplitBufferSize:I\n        272: aload_0\n        273: aload_1\n        274: iconst_1\n-       275: anewarray     #44                 // class java/nio/file/OpenOption\n+       275: anewarray     #144                // class java/nio/file/OpenOption\n        278: dup\n        279: iconst_0\n-       280: getstatic     #45                 // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n+       280: getstatic     #146                // Field java/nio/file/StandardOpenOption.READ:Ljava/nio/file/StandardOpenOption;\n        283: aastore\n-       284: invokestatic  #46                 // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n-       287: putfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;\n+       284: invokestatic  #152                // Method java/nio/file/Files.newByteChannel:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/nio/channels/SeekableByteChannel;\n+       287: putfield      #20                 // Field channel:Ljava/nio/channels/SeekableByteChannel;\n        290: aload_0\n        291: aload_0\n-       292: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;\n-       295: invokeinterface #47,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J\n-       300: putfield      #48                 // Field totalByteLength:J\n+       292: getfield      #20                 // Field channel:Ljava/nio/channels/SeekableByteChannel;\n+       295: invokeinterface #158,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.size:()J\n+       300: putfield      #164                // Field totalByteLength:J\n        303: aload_0\n-       304: getfield      #48                 // Field totalByteLength:J\n+       304: getfield      #164                // Field totalByteLength:J\n        307: iload_2\n        308: i2l\n        309: lrem\n        310: l2i\n        311: istore        6\n        313: iload         6\n        315: ifle          334\n        318: aload_0\n        319: aload_0\n-       320: getfield      #48                 // Field totalByteLength:J\n+       320: getfield      #164                // Field totalByteLength:J\n        323: iload_2\n        324: i2l\n        325: ldiv\n        326: lconst_1\n        327: ladd\n-       328: putfield      #49                 // Field totalBlockCount:J\n+       328: putfield      #168                // Field totalBlockCount:J\n        331: goto          357\n        334: aload_0\n        335: aload_0\n-       336: getfield      #48                 // Field totalByteLength:J\n+       336: getfield      #164                // Field totalByteLength:J\n        339: iload_2\n        340: i2l\n        341: ldiv\n-       342: putfield      #49                 // Field totalBlockCount:J\n+       342: putfield      #168                // Field totalBlockCount:J\n        345: aload_0\n-       346: getfield      #48                 // Field totalByteLength:J\n+       346: getfield      #164                // Field totalByteLength:J\n        349: lconst_0\n        350: lcmp\n        351: ifle          357\n        354: iload_2\n        355: istore        6\n        357: aload_0\n-       358: new           #50                 // class org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n+       358: new           #171                // class org/apache/commons/io/input/ReversedLinesFileReader$FilePart\n        361: dup\n        362: aload_0\n        363: aload_0\n-       364: getfield      #49                 // Field totalBlockCount:J\n+       364: getfield      #168                // Field totalBlockCount:J\n        367: iload         6\n        369: aconst_null\n        370: aconst_null\n-       371: invokespecial #51                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n-       374: putfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+       371: invokespecial #173                // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.\"<init>\":(Lorg/apache/commons/io/input/ReversedLinesFileReader;JI[BLorg/apache/commons/io/input/ReversedLinesFileReader$1;)V\n+       374: putfield      #176                // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n        377: return\n       LineNumberTable:\n         line 304: 0\n         line 305: 4\n         line 306: 9\n         line 309: 17\n         line 310: 26\n@@ -745,16 +745,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aload_3\n-         4: invokestatic  #53                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-         7: invokespecial #13                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n+         4: invokestatic  #180                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         7: invokespecial #46                 // Method \"<init>\":(Ljava/nio/file/Path;ILjava/nio/charset/Charset;)V\n         10: return\n       LineNumberTable:\n         line 382: 0\n         line 383: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n@@ -766,16 +766,16 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;\n-         4: invokeinterface #54,  1           // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V\n+         1: getfield      #20                 // Field channel:Ljava/nio/channels/SeekableByteChannel;\n+         4: invokeinterface #182,  1          // InterfaceMethod java/nio/channels/SeekableByteChannel.close:()V\n          9: return\n       LineNumberTable:\n         line 392: 0\n         line 393: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n@@ -784,45 +784,45 @@\n \n   public java.lang.String readLine() throws java.io.IOException;\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-         4: invokestatic  #55                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+         1: getfield      #176                // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+         4: invokestatic  #185                // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n          7: astore_1\n          8: aload_1\n          9: ifnonnull     44\n         12: aload_0\n         13: aload_0\n-        14: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-        17: invokestatic  #56                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-        20: putfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+        14: getfield      #176                // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+        17: invokestatic  #189                // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$800:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+        20: putfield      #176                // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n         23: aload_0\n-        24: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+        24: getfield      #176                // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n         27: ifnonnull     33\n         30: goto          44\n         33: aload_0\n-        34: getfield      #52                 // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n-        37: invokestatic  #55                 // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n+        34: getfield      #176                // Field currentFilePart:Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;\n+        37: invokestatic  #185                // Method org/apache/commons/io/input/ReversedLinesFileReader$FilePart.access$700:(Lorg/apache/commons/io/input/ReversedLinesFileReader$FilePart;)Ljava/lang/String;\n         40: astore_1\n         41: goto          8\n-        44: ldc           #57                 // String\n+        44: ldc           #193                // String\n         46: aload_1\n-        47: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        47: invokevirtual #195                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         50: ifeq          70\n         53: aload_0\n-        54: getfield      #59                 // Field trailingNewlineOfFileSkipped:Z\n+        54: getfield      #201                // Field trailingNewlineOfFileSkipped:Z\n         57: ifne          70\n         60: aload_0\n         61: iconst_1\n-        62: putfield      #59                 // Field trailingNewlineOfFileSkipped:Z\n+        62: putfield      #201                // Field trailingNewlineOfFileSkipped:Z\n         65: aload_0\n-        66: invokevirtual #60                 // Method readLine:()Ljava/lang/String;\n+        66: invokevirtual #205                // Method readLine:()Ljava/lang/String;\n         69: astore_1\n         70: aload_1\n         71: areturn\n       LineNumberTable:\n         line 403: 0\n         line 404: 8\n         line 405: 12\n@@ -850,39 +850,39 @@\n   public java.util.List<java.lang.String> readLines(int) throws java.io.IOException;\n     descriptor: (I)Ljava/util/List;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: iload_1\n          1: ifge          14\n-         4: new           #61                 // class java/lang/IllegalArgumentException\n+         4: new           #208                // class java/lang/IllegalArgumentException\n          7: dup\n-         8: ldc           #62                 // String lineCount < 0\n-        10: invokespecial #63                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+         8: ldc           #210                // String lineCount < 0\n+        10: invokespecial #212                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         13: athrow\n-        14: new           #64                 // class java/util/ArrayList\n+        14: new           #213                // class java/util/ArrayList\n         17: dup\n         18: iload_1\n-        19: invokespecial #65                 // Method java/util/ArrayList.\"<init>\":(I)V\n+        19: invokespecial #215                // Method java/util/ArrayList.\"<init>\":(I)V\n         22: astore_2\n         23: iconst_0\n         24: istore_3\n         25: iload_3\n         26: iload_1\n         27: if_icmpge     56\n         30: aload_0\n-        31: invokevirtual #60                 // Method readLine:()Ljava/lang/String;\n+        31: invokevirtual #205                // Method readLine:()Ljava/lang/String;\n         34: astore        4\n         36: aload         4\n         38: ifnonnull     43\n         41: aload_2\n         42: areturn\n         43: aload_2\n         44: aload         4\n-        46: invokevirtual #66                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+        46: invokevirtual #218                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n         49: pop\n         50: iinc          3, 1\n         53: goto          25\n         56: aload_2\n         57: areturn\n       LineNumberTable:\n         line 438: 0\n@@ -913,42 +913,42 @@\n         frame_type = 252 /* append */\n           offset_delta = 17\n           locals = [ class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 12\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #145                         // (I)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #286                         // (I)Ljava/util/List<Ljava/lang/String;>;\n \n   public java.lang.String toString(int) throws java.io.IOException;\n     descriptor: (I)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #67                 // Method readLines:(I)Ljava/util/List;\n+         2: invokevirtual #221                // Method readLines:(I)Ljava/util/List;\n          5: astore_2\n          6: aload_2\n-         7: invokestatic  #68                 // Method java/util/Collections.reverse:(Ljava/util/List;)V\n+         7: invokestatic  #225                // Method java/util/Collections.reverse:(Ljava/util/List;)V\n         10: aload_2\n-        11: invokeinterface #69,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+        11: invokeinterface #231,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n         16: ifeq          24\n-        19: ldc           #57                 // String\n+        19: ldc           #193                // String\n         21: goto          50\n-        24: new           #32                 // class java/lang/StringBuilder\n+        24: new           #108                // class java/lang/StringBuilder\n         27: dup\n-        28: invokespecial #33                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        31: invokestatic  #70                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+        28: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":()V\n+        31: invokestatic  #237                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n         34: aload_2\n-        35: invokestatic  #71                 // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n-        38: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: invokestatic  #70                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n-        44: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        35: invokestatic  #242                // Method java/lang/String.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;\n+        38: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: invokestatic  #237                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+        44: invokevirtual #113                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: invokevirtual #122                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         50: areturn\n       LineNumberTable:\n         line 465: 0\n         line 466: 6\n         line 467: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -969,89 +969,89 @@\n \n   static int access$000(org.apache.commons.io.input.ReversedLinesFileReader);\n     descriptor: (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field blockSize:I\n+         1: getfield      #24                 // Field blockSize:I\n          4: ireturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n \n   static java.nio.channels.SeekableByteChannel access$100(org.apache.commons.io.input.ReversedLinesFileReader);\n     descriptor: (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/channels/SeekableByteChannel;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field channel:Ljava/nio/channels/SeekableByteChannel;\n+         1: getfield      #20                 // Field channel:Ljava/nio/channels/SeekableByteChannel;\n          4: areturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n \n   static byte[][] access$200(org.apache.commons.io.input.ReversedLinesFileReader);\n     descriptor: (Lorg/apache/commons/io/input/ReversedLinesFileReader;)[[B\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field newLineSequences:[[B\n+         1: getfield      #16                 // Field newLineSequences:[[B\n          4: areturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n \n   static int access$300(org.apache.commons.io.input.ReversedLinesFileReader);\n     descriptor: (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field avoidNewlineSplitBufferSize:I\n+         1: getfield      #13                 // Field avoidNewlineSplitBufferSize:I\n          4: ireturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n \n   static java.nio.charset.Charset access$400(org.apache.commons.io.input.ReversedLinesFileReader);\n     descriptor: (Lorg/apache/commons/io/input/ReversedLinesFileReader;)Ljava/nio/charset/Charset;\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field charset:Ljava/nio/charset/Charset;\n+         1: getfield      #9                  // Field charset:Ljava/nio/charset/Charset;\n          4: areturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n \n   static int access$500(org.apache.commons.io.input.ReversedLinesFileReader);\n     descriptor: (Lorg/apache/commons/io/input/ReversedLinesFileReader;)I\n     flags: (0x1008) ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field byteDecrement:I\n+         1: getfield      #3                  // Field byteDecrement:I\n          4: ireturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0    x0   Lorg/apache/commons/io/input/ReversedLinesFileReader;\n }\n SourceFile: \"ReversedLinesFileReader.java\"\n InnerClasses:\n-  static #74;                             // class org/apache/commons/io/input/ReversedLinesFileReader$1\n-  private #76= #50 of #8;                 // FilePart=class org/apache/commons/io/input/ReversedLinesFileReader$FilePart of class org/apache/commons/io/input/ReversedLinesFileReader\n+  private #305= #171 of #4;               // FilePart=class org/apache/commons/io/input/ReversedLinesFileReader$FilePart of class org/apache/commons/io/input/ReversedLinesFileReader\n+  static #306;                            // class org/apache/commons/io/input/ReversedLinesFileReader$1\n"}]}
