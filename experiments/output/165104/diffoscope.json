{"diffoscope-json-version": 1, "source1": "first/Deflate64CompressorInputStream.class", "source2": "second/Deflate64CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,48 +1,48 @@\n-  SHA-256 checksum add54d8f19c1483b1265bd6f1145497eeb28ea1a65cbe09b9ed2f3d890bd31ba\n+  SHA-256 checksum 1ba1698fdf24881068d44c87696bfc0f41bca12179f18a0ca7339a1ad2a17bcf\n   Compiled from \"Deflate64CompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #29                         // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n   super_class: #30                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-    #1 = Class              #73           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-    #2 = Methodref          #1.#74        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Methodref          #29.#75       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-    #4 = Fieldref           #29.#76       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.originalStream:Ljava/io/InputStream;\n-    #5 = Methodref          #30.#77       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #6 = Fieldref           #29.#78       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.oneByte:[B\n-    #7 = Fieldref           #29.#79       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-    #8 = Methodref          #29.#80       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.read:([B)I\n-    #9 = Class              #81           // java/lang/IllegalStateException\n-   #10 = Class              #82           // java/lang/StringBuilder\n-   #11 = Methodref          #10.#77       // java/lang/StringBuilder.\"<init>\":()V\n-   #12 = String             #83           // Invalid return value from read:\n-   #13 = Methodref          #10.#84       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #14 = Methodref          #10.#85       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #15 = Methodref          #10.#86       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #16 = Methodref          #9.#87        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #17 = Methodref          #1.#88        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n-   #18 = Class              #89           // java/lang/RuntimeException\n-   #19 = Class              #90           // java/io/IOException\n-   #20 = String             #91           // Invalid Deflate64 input\n-   #21 = Methodref          #19.#92       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #22 = Methodref          #1.#93        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J\n-   #23 = Fieldref           #29.#94       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.compressedBytesRead:J\n-   #24 = Methodref          #29.#95       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.count:(I)V\n-   #25 = Methodref          #29.#96       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.closeDecoder:()V\n-   #26 = Methodref          #1.#97        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n-   #27 = Methodref          #98.#99       // java/io/InputStream.close:()V\n-   #28 = Methodref          #100.#101     // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n-   #29 = Class              #102          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-   #30 = Class              #103          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #31 = Class              #104          // org/apache/commons/compress/utils/InputStreamStatistics\n+    #1 = Class              #71           // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+    #2 = Methodref          #1.#72        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.\"<init>\":(Ljava/io/InputStream;)V\n+    #3 = Methodref          #29.#73       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.\"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+    #4 = Fieldref           #29.#74       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.originalStream:Ljava/io/InputStream;\n+    #5 = Methodref          #30.#75       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+    #6 = Fieldref           #29.#76       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.oneByte:[B\n+    #7 = Fieldref           #29.#77       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+    #8 = Methodref          #29.#78       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.read:([B)I\n+    #9 = Class              #79           // java/lang/IllegalStateException\n+   #10 = Class              #80           // java/lang/StringBuilder\n+   #11 = Methodref          #10.#75       // java/lang/StringBuilder.\"<init>\":()V\n+   #12 = String             #81           // Invalid return value from read:\n+   #13 = Methodref          #10.#82       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #14 = Methodref          #10.#83       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #15 = Methodref          #10.#84       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #16 = Methodref          #9.#85        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #17 = Methodref          #1.#86        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.decode:([BII)I\n+   #18 = Class              #87           // java/lang/RuntimeException\n+   #19 = Class              #88           // java/io/IOException\n+   #20 = String             #89           // Invalid Deflate64 input\n+   #21 = Methodref          #19.#90       // java/io/IOException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #22 = Methodref          #1.#91        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.getBytesRead:()J\n+   #23 = Fieldref           #29.#92       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.compressedBytesRead:J\n+   #24 = Methodref          #29.#93       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.count:(I)V\n+   #25 = Methodref          #29.#94       // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream.closeDecoder:()V\n+   #26 = Methodref          #1.#95        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder.available:()I\n+   #27 = Methodref          #96.#97       // java/io/InputStream.close:()V\n+   #28 = Methodref          #98.#99       // org/apache/commons/compress/utils/IOUtils.closeQuietly:(Ljava/io/Closeable;)V\n+   #29 = Class              #100          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+   #30 = Class              #101          // org/apache/commons/compress/compressors/CompressorInputStream\n+   #31 = Class              #102          // org/apache/commons/compress/utils/InputStreamStatistics\n    #32 = Utf8               originalStream\n    #33 = Utf8               Ljava/io/InputStream;\n    #34 = Utf8               decoder\n    #35 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n    #36 = Utf8               compressedBytesRead\n    #37 = Utf8               J\n    #38 = Utf8               oneByte\n@@ -64,75 +64,73 @@\n    #54 = Utf8               Exceptions\n    #55 = Utf8               ([BII)I\n    #56 = Utf8               ex\n    #57 = Utf8               Ljava/lang/RuntimeException;\n    #58 = Utf8               b\n    #59 = Utf8               off\n    #60 = Utf8               len\n-   #61 = Class              #102          // org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-   #62 = Class              #39           // \"[B\"\n-   #63 = Class              #89           // java/lang/RuntimeException\n-   #64 = Utf8               available\n-   #65 = Utf8               close\n-   #66 = Utf8               ()V\n-   #67 = Class              #105          // java/lang/Throwable\n-   #68 = Utf8               getCompressedCount\n-   #69 = Utf8               ()J\n-   #70 = Utf8               closeDecoder\n-   #71 = Utf8               SourceFile\n-   #72 = Utf8               Deflate64CompressorInputStream.java\n-   #73 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-   #74 = NameAndType        #40:#41       // \"<init>\":(Ljava/io/InputStream;)V\n-   #75 = NameAndType        #40:#48       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n-   #76 = NameAndType        #32:#33       // originalStream:Ljava/io/InputStream;\n-   #77 = NameAndType        #40:#66       // \"<init>\":()V\n-   #78 = NameAndType        #38:#39       // oneByte:[B\n-   #79 = NameAndType        #34:#35       // decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n-   #80 = NameAndType        #49:#106      // read:([B)I\n-   #81 = Utf8               java/lang/IllegalStateException\n-   #82 = Utf8               java/lang/StringBuilder\n-   #83 = Utf8               Invalid return value from read:\n-   #84 = NameAndType        #107:#108     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #85 = NameAndType        #107:#109     // append:(I)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #110:#111     // toString:()Ljava/lang/String;\n-   #87 = NameAndType        #40:#112      // \"<init>\":(Ljava/lang/String;)V\n-   #88 = NameAndType        #113:#55      // decode:([BII)I\n-   #89 = Utf8               java/lang/RuntimeException\n-   #90 = Utf8               java/io/IOException\n-   #91 = Utf8               Invalid Deflate64 input\n-   #92 = NameAndType        #40:#114      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #93 = NameAndType        #115:#69      // getBytesRead:()J\n-   #94 = NameAndType        #36:#37       // compressedBytesRead:J\n-   #95 = NameAndType        #116:#117     // count:(I)V\n-   #96 = NameAndType        #70:#66       // closeDecoder:()V\n-   #97 = NameAndType        #64:#50       // available:()I\n-   #98 = Class              #118          // java/io/InputStream\n-   #99 = NameAndType        #65:#66       // close:()V\n-  #100 = Class              #119          // org/apache/commons/compress/utils/IOUtils\n-  #101 = NameAndType        #120:#121     // closeQuietly:(Ljava/io/Closeable;)V\n-  #102 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n-  #103 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #104 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #105 = Utf8               java/lang/Throwable\n-  #106 = Utf8               ([B)I\n-  #107 = Utf8               append\n-  #108 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #109 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #110 = Utf8               toString\n-  #111 = Utf8               ()Ljava/lang/String;\n-  #112 = Utf8               (Ljava/lang/String;)V\n-  #113 = Utf8               decode\n-  #114 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #115 = Utf8               getBytesRead\n-  #116 = Utf8               count\n-  #117 = Utf8               (I)V\n-  #118 = Utf8               java/io/InputStream\n-  #119 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #120 = Utf8               closeQuietly\n-  #121 = Utf8               (Ljava/io/Closeable;)V\n+   #61 = Class              #39           // \"[B\"\n+   #62 = Utf8               available\n+   #63 = Utf8               close\n+   #64 = Utf8               ()V\n+   #65 = Class              #103          // java/lang/Throwable\n+   #66 = Utf8               getCompressedCount\n+   #67 = Utf8               ()J\n+   #68 = Utf8               closeDecoder\n+   #69 = Utf8               SourceFile\n+   #70 = Utf8               Deflate64CompressorInputStream.java\n+   #71 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+   #72 = NameAndType        #40:#41       // \"<init>\":(Ljava/io/InputStream;)V\n+   #73 = NameAndType        #40:#48       // \"<init>\":(Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;)V\n+   #74 = NameAndType        #32:#33       // originalStream:Ljava/io/InputStream;\n+   #75 = NameAndType        #40:#64       // \"<init>\":()V\n+   #76 = NameAndType        #38:#39       // oneByte:[B\n+   #77 = NameAndType        #34:#35       // decoder:Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n+   #78 = NameAndType        #49:#104      // read:([B)I\n+   #79 = Utf8               java/lang/IllegalStateException\n+   #80 = Utf8               java/lang/StringBuilder\n+   #81 = Utf8               Invalid return value from read:\n+   #82 = NameAndType        #105:#106     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = NameAndType        #105:#107     // append:(I)Ljava/lang/StringBuilder;\n+   #84 = NameAndType        #108:#109     // toString:()Ljava/lang/String;\n+   #85 = NameAndType        #40:#110      // \"<init>\":(Ljava/lang/String;)V\n+   #86 = NameAndType        #111:#55      // decode:([BII)I\n+   #87 = Utf8               java/lang/RuntimeException\n+   #88 = Utf8               java/io/IOException\n+   #89 = Utf8               Invalid Deflate64 input\n+   #90 = NameAndType        #40:#112      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #91 = NameAndType        #113:#67      // getBytesRead:()J\n+   #92 = NameAndType        #36:#37       // compressedBytesRead:J\n+   #93 = NameAndType        #114:#115     // count:(I)V\n+   #94 = NameAndType        #68:#64       // closeDecoder:()V\n+   #95 = NameAndType        #62:#50       // available:()I\n+   #96 = Class              #116          // java/io/InputStream\n+   #97 = NameAndType        #63:#64       // close:()V\n+   #98 = Class              #117          // org/apache/commons/compress/utils/IOUtils\n+   #99 = NameAndType        #118:#119     // closeQuietly:(Ljava/io/Closeable;)V\n+  #100 = Utf8               org/apache/commons/compress/compressors/deflate64/Deflate64CompressorInputStream\n+  #101 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+  #102 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+  #103 = Utf8               java/lang/Throwable\n+  #104 = Utf8               ([B)I\n+  #105 = Utf8               append\n+  #106 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #107 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #108 = Utf8               toString\n+  #109 = Utf8               ()Ljava/lang/String;\n+  #110 = Utf8               (Ljava/lang/String;)V\n+  #111 = Utf8               decode\n+  #112 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #113 = Utf8               getBytesRead\n+  #114 = Utf8               count\n+  #115 = Utf8               (I)V\n+  #116 = Utf8               java/io/InputStream\n+  #117 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #118 = Utf8               closeQuietly\n+  #119 = Utf8               (Ljava/io/Closeable;)V\n {\n   private java.io.InputStream originalStream;\n     descriptor: Ljava/io/InputStream;\n     flags: (0x0002) ACC_PRIVATE\n \n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder decoder;\n     descriptor: Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder;\n"}]}
