{"diffoscope-json-version": 1, "source1": "first/BeforeExecutionExclusionFileFilter.class", "source2": "second/BeforeExecutionExclusionFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,53 +1,53 @@\n-  SHA-256 checksum 7e0f2245e4e936858b529906a3c8c773f1400e504ca9c49af27e507319d34690\n+  SHA-256 checksum 8359d31990ec3aa19726166181163cf71a9ef75c0533ecf72893352126d034a1\n   Compiled from \"BeforeExecutionExclusionFileFilter.java\"\n public final class com.puppycrawl.tools.checkstyle.filefilters.BeforeExecutionExclusionFileFilter extends com.puppycrawl.tools.checkstyle.AbstractAutomaticBean implements com.puppycrawl.tools.checkstyle.api.BeforeExecutionFileFilter\n   minor version: 0\n   major version: 55\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter\n-  super_class: #2                         // com/puppycrawl/tools/checkstyle/AbstractAutomaticBean\n+  this_class: #1                          // com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter\n+  super_class: #3                         // com/puppycrawl/tools/checkstyle/AbstractAutomaticBean\n   interfaces: 1, fields: 1, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // com/puppycrawl/tools/checkstyle/AbstractAutomaticBean.\"<init>\":()V\n-   #2 = Class              #4             // com/puppycrawl/tools/checkstyle/AbstractAutomaticBean\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter\n+   #2 = Utf8               com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter\n+   #3 = Class              #4             // com/puppycrawl/tools/checkstyle/AbstractAutomaticBean\n    #4 = Utf8               com/puppycrawl/tools/checkstyle/AbstractAutomaticBean\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = Fieldref           #8.#9          // com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter.fileNamePattern:Ljava/util/regex/Pattern;\n-   #8 = Class              #10            // com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter\n-   #9 = NameAndType        #11:#12        // fileNamePattern:Ljava/util/regex/Pattern;\n-  #10 = Utf8               com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter\n-  #11 = Utf8               fileNamePattern\n-  #12 = Utf8               Ljava/util/regex/Pattern;\n-  #13 = Methodref          #14.#15        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #14 = Class              #16            // java/util/regex/Pattern\n-  #15 = NameAndType        #17:#18        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #16 = Utf8               java/util/regex/Pattern\n-  #17 = Utf8               matcher\n-  #18 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #19 = Methodref          #20.#21        // java/util/regex/Matcher.find:()Z\n-  #20 = Class              #22            // java/util/regex/Matcher\n-  #21 = NameAndType        #23:#24        // find:()Z\n-  #22 = Utf8               java/util/regex/Matcher\n-  #23 = Utf8               find\n-  #24 = Utf8               ()Z\n-  #25 = Class              #26            // com/puppycrawl/tools/checkstyle/api/BeforeExecutionFileFilter\n-  #26 = Utf8               com/puppycrawl/tools/checkstyle/api/BeforeExecutionFileFilter\n-  #27 = Utf8               Code\n-  #28 = Utf8               LineNumberTable\n-  #29 = Utf8               LocalVariableTable\n-  #30 = Utf8               this\n-  #31 = Utf8               Lcom/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter;\n-  #32 = Utf8               setFileNamePattern\n-  #33 = Utf8               (Ljava/util/regex/Pattern;)V\n-  #34 = Utf8               finishLocalSetup\n-  #35 = Utf8               accept\n-  #36 = Utf8               (Ljava/lang/String;)Z\n+   #5 = Class              #6             // com/puppycrawl/tools/checkstyle/api/BeforeExecutionFileFilter\n+   #6 = Utf8               com/puppycrawl/tools/checkstyle/api/BeforeExecutionFileFilter\n+   #7 = Utf8               fileNamePattern\n+   #8 = Utf8               Ljava/util/regex/Pattern;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               ()V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // com/puppycrawl/tools/checkstyle/AbstractAutomaticBean.\"<init>\":()V\n+  #13 = NameAndType        #9:#10         // \"<init>\":()V\n+  #14 = Utf8               LineNumberTable\n+  #15 = Utf8               LocalVariableTable\n+  #16 = Utf8               this\n+  #17 = Utf8               Lcom/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter;\n+  #18 = Utf8               setFileNamePattern\n+  #19 = Utf8               (Ljava/util/regex/Pattern;)V\n+  #20 = Fieldref           #1.#21         // com/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter.fileNamePattern:Ljava/util/regex/Pattern;\n+  #21 = NameAndType        #7:#8          // fileNamePattern:Ljava/util/regex/Pattern;\n+  #22 = Utf8               finishLocalSetup\n+  #23 = Utf8               accept\n+  #24 = Utf8               (Ljava/lang/String;)Z\n+  #25 = Methodref          #26.#28        // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #26 = Class              #27            // java/util/regex/Pattern\n+  #27 = Utf8               java/util/regex/Pattern\n+  #28 = NameAndType        #29:#30        // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #29 = Utf8               matcher\n+  #30 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #31 = Methodref          #32.#34        // java/util/regex/Matcher.find:()Z\n+  #32 = Class              #33            // java/util/regex/Matcher\n+  #33 = Utf8               java/util/regex/Matcher\n+  #34 = NameAndType        #35:#36        // find:()Z\n+  #35 = Utf8               find\n+  #36 = Utf8               ()Z\n   #37 = Utf8               uri\n   #38 = Utf8               Ljava/lang/String;\n   #39 = Utf8               StackMapTable\n   #40 = Utf8               SourceFile\n   #41 = Utf8               BeforeExecutionExclusionFileFilter.java\n {\n   private java.util.regex.Pattern fileNamePattern;\n@@ -56,30 +56,30 @@\n \n   public com.puppycrawl.tools.checkstyle.filefilters.BeforeExecutionExclusionFileFilter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method com/puppycrawl/tools/checkstyle/AbstractAutomaticBean.\"<init>\":()V\n+         1: invokespecial #12                 // Method com/puppycrawl/tools/checkstyle/AbstractAutomaticBean.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 60: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lcom/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter;\n \n   public void setFileNamePattern(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #7                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         2: putfield      #20                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n          5: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lcom/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter;\n@@ -99,32 +99,29 @@\n \n   public boolean accept(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #7                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n-         4: ifnull        21\n+         1: getfield      #20                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         4: ifnull        23\n          7: aload_0\n-         8: getfield      #7                  // Field fileNamePattern:Ljava/util/regex/Pattern;\n+         8: getfield      #20                 // Field fileNamePattern:Ljava/util/regex/Pattern;\n         11: aload_1\n-        12: invokevirtual #13                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        15: invokevirtual #19                 // Method java/util/regex/Matcher.find:()Z\n-        18: ifne          25\n-        21: iconst_1\n-        22: goto          26\n-        25: iconst_0\n-        26: ireturn\n+        12: invokevirtual #25                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        15: invokevirtual #31                 // Method java/util/regex/Matcher.find:()Z\n+        18: ifeq          23\n+        21: iconst_0\n+        22: ireturn\n+        23: iconst_1\n+        24: ireturn\n       LineNumberTable:\n         line 83: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      27     0  this   Lcom/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter;\n-            0      27     1   uri   Ljava/lang/String;\n-      StackMapTable: number_of_entries = 3\n-        frame_type = 21 /* same */\n-        frame_type = 3 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      25     0  this   Lcom/puppycrawl/tools/checkstyle/filefilters/BeforeExecutionExclusionFileFilter;\n+            0      25     1   uri   Ljava/lang/String;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 23 /* same */\n }\n SourceFile: \"BeforeExecutionExclusionFileFilter.java\"\n"}]}
