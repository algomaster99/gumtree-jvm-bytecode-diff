{"diffoscope-json-version": 1, "source1": "first/IMAPCommand.class", "source2": "second/IMAPCommand.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,68 +1,68 @@\n \n package org.apache.commons.net.imap;\n \n public enum IMAPCommand\n {\n-    CAPABILITY(0), \n-    NOOP(0), \n-    LOGOUT(0), \n-    STARTTLS(0), \n-    AUTHENTICATE(1), \n-    LOGIN(2), \n-    XOAUTH(1), \n-    SELECT(1), \n-    EXAMINE(1), \n-    CREATE(1), \n-    DELETE(1), \n-    RENAME(2), \n-    SUBSCRIBE(1), \n-    UNSUBSCRIBE(1), \n-    LIST(2), \n-    LSUB(2), \n-    STATUS(2), \n-    APPEND(2, 4), \n-    CHECK(0), \n-    CLOSE(0), \n-    EXPUNGE(0), \n-    SEARCH(1, Integer.MAX_VALUE), \n-    FETCH(2), \n-    STORE(3), \n-    COPY(2), \n-    UID(2, Integer.MAX_VALUE);\n+    CAPABILITY(\"CAPABILITY\", 0, 0), \n+    NOOP(\"NOOP\", 1, 0), \n+    LOGOUT(\"LOGOUT\", 2, 0), \n+    STARTTLS(\"STARTTLS\", 3, 0), \n+    AUTHENTICATE(\"AUTHENTICATE\", 4, 1), \n+    LOGIN(\"LOGIN\", 5, 2), \n+    XOAUTH(\"XOAUTH\", 6, 1), \n+    SELECT(\"SELECT\", 7, 1), \n+    EXAMINE(\"EXAMINE\", 8, 1), \n+    CREATE(\"CREATE\", 9, 1), \n+    DELETE(\"DELETE\", 10, 1), \n+    RENAME(\"RENAME\", 11, 2), \n+    SUBSCRIBE(\"SUBSCRIBE\", 12, 1), \n+    UNSUBSCRIBE(\"UNSUBSCRIBE\", 13, 1), \n+    LIST(\"LIST\", 14, 2), \n+    LSUB(\"LSUB\", 15, 2), \n+    STATUS(\"STATUS\", 16, 2), \n+    APPEND(\"APPEND\", 17, 2, 4), \n+    CHECK(\"CHECK\", 18, 0), \n+    CLOSE(\"CLOSE\", 19, 0), \n+    EXPUNGE(\"EXPUNGE\", 20, 0), \n+    SEARCH(\"SEARCH\", 21, 1, Integer.MAX_VALUE), \n+    FETCH(\"FETCH\", 22, 2), \n+    STORE(\"STORE\", 23, 3), \n+    COPY(\"COPY\", 24, 2), \n+    UID(\"UID\", 25, 2, Integer.MAX_VALUE);\n     \n     private final String imapCommand;\n     private final int minParamCount;\n     private final int maxParamCount;\n     \n     public static final String getCommand(final IMAPCommand command) {\n         return command.getIMAPCommand();\n     }\n     \n-    private IMAPCommand() {\n-        this(null);\n+    private IMAPCommand(final String s, final int n) {\n+        this(s, n, null);\n     }\n     \n-    private IMAPCommand(final int paramCount) {\n-        this(null, paramCount, paramCount);\n+    private IMAPCommand(final String s, final int n, final int paramCount) {\n+        this(s, n, null, paramCount, paramCount);\n     }\n     \n-    private IMAPCommand(final int minCount, final int maxCount) {\n-        this(null, minCount, maxCount);\n+    private IMAPCommand(final String s, final int n, final int minCount, final int maxCount) {\n+        this(s, n, null, minCount, maxCount);\n     }\n     \n-    private IMAPCommand(final String name) {\n-        this(name, 0);\n+    private IMAPCommand(final String s, final int n, final String name) {\n+        this(s, n, name, 0);\n     }\n     \n-    private IMAPCommand(final String name, final int paramCount) {\n-        this(name, paramCount, paramCount);\n+    private IMAPCommand(final String s, final int n, final String name, final int paramCount) {\n+        this(s, n, name, paramCount, paramCount);\n     }\n     \n-    private IMAPCommand(final String name, final int minCount, final int maxCount) {\n+    private IMAPCommand(final String name2, final int ordinal, final String name, final int minCount, final int maxCount) {\n         this.imapCommand = name;\n         this.minParamCount = minCount;\n         this.maxParamCount = maxCount;\n     }\n     \n     public String getIMAPCommand() {\n         return (this.imapCommand != null) ? this.imapCommand : this.name();\n"}]}
