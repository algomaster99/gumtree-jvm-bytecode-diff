{"diffoscope-json-version": 1, "source1": "first/CDL.class", "source2": "second/CDL.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,158 +1,153 @@\n-  SHA-256 checksum 9015334f7a15b446cde8dc9d4f9f5f7715a1ba7d5ce9bb525d53f5e02859bcca\n+  SHA-256 checksum 4030e28d769df4fa34bf26e3182e37982369c18f5a907f0dbafeab4d85e1ddb4\n   Compiled from \"CDL.java\"\n public class org.json.CDL\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #40                         // org/json/CDL\n   super_class: #41                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 11, attributes: 1\n Constant pool:\n-    #1 = Methodref          #41.#70       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #30.#71       // org/json/JSONTokener.next:()C\n-    #3 = Class              #72           // java/lang/StringBuilder\n-    #4 = Methodref          #3.#70        // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = Methodref          #30.#73       // org/json/JSONTokener.back:()V\n-    #6 = String             #74           // Missing close quote \\'\n-    #7 = Methodref          #3.#75        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #3.#76        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #9 = String             #77           // \\'.\n-   #10 = Methodref          #3.#78        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #11 = Methodref          #30.#79       // org/json/JSONTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-   #12 = String             #80           //\n-   #13 = Methodref          #30.#81       // org/json/JSONTokener.nextTo:(C)Ljava/lang/String;\n-   #14 = Class              #82           // org/json/JSONArray\n-   #15 = Methodref          #14.#70       // org/json/JSONArray.\"<init>\":()V\n-   #16 = Methodref          #40.#83       // org/json/CDL.getValue:(Lorg/json/JSONTokener;)Ljava/lang/String;\n-   #17 = Methodref          #14.#84       // org/json/JSONArray.length:()I\n-   #18 = Methodref          #85.#84       // java/lang/String.length:()I\n-   #19 = Methodref          #14.#86       // org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n-   #20 = String             #87           // Bad character \\'\n-   #21 = String             #88           // \\' (\n-   #22 = Methodref          #3.#89        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #23 = String             #90           // ).\n-   #24 = Methodref          #40.#91       // org/json/CDL.rowToJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #25 = Methodref          #14.#92       // org/json/JSONArray.toJSONObject:(Lorg/json/JSONArray;)Lorg/json/JSONObject;\n-   #26 = Methodref          #14.#93       // org/json/JSONArray.opt:(I)Ljava/lang/Object;\n-   #27 = Methodref          #41.#78       // java/lang/Object.toString:()Ljava/lang/String;\n-   #28 = Methodref          #85.#94       // java/lang/String.indexOf:(I)I\n-   #29 = Methodref          #85.#95       // java/lang/String.charAt:(I)C\n-   #30 = Class              #96           // org/json/JSONTokener\n-   #31 = Methodref          #30.#97       // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #40.#98       // org/json/CDL.toJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #33 = Methodref          #40.#99       // org/json/CDL.toJSONArray:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #34 = Methodref          #40.#100      // org/json/CDL.rowToJSONObject:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONObject;\n-   #35 = Methodref          #14.#101      // org/json/JSONArray.optJSONObject:(I)Lorg/json/JSONObject;\n-   #36 = Methodref          #102.#103     // org/json/JSONObject.names:()Lorg/json/JSONArray;\n-   #37 = Methodref          #40.#104      // org/json/CDL.rowToString:(Lorg/json/JSONArray;)Ljava/lang/String;\n-   #38 = Methodref          #40.#105      // org/json/CDL.toString:(Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;\n-   #39 = Methodref          #102.#106     // org/json/JSONObject.toJSONArray:(Lorg/json/JSONArray;)Lorg/json/JSONArray;\n-   #40 = Class              #107          // org/json/CDL\n-   #41 = Class              #108          // java/lang/Object\n+    #1 = Methodref          #41.#67       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #30.#68       // org/json/JSONTokener.next:()C\n+    #3 = Class              #69           // java/lang/StringBuilder\n+    #4 = Methodref          #3.#67        // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = Methodref          #30.#70       // org/json/JSONTokener.back:()V\n+    #6 = String             #71           // Missing close quote \\'\n+    #7 = Methodref          #3.#72        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #3.#73        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #9 = String             #74           // \\'.\n+   #10 = Methodref          #3.#75        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #11 = Methodref          #30.#76       // org/json/JSONTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+   #12 = String             #77           //\n+   #13 = Methodref          #30.#78       // org/json/JSONTokener.nextTo:(C)Ljava/lang/String;\n+   #14 = Class              #79           // org/json/JSONArray\n+   #15 = Methodref          #14.#67       // org/json/JSONArray.\"<init>\":()V\n+   #16 = Methodref          #40.#80       // org/json/CDL.getValue:(Lorg/json/JSONTokener;)Ljava/lang/String;\n+   #17 = Methodref          #14.#81       // org/json/JSONArray.length:()I\n+   #18 = Methodref          #53.#81       // java/lang/String.length:()I\n+   #19 = Methodref          #14.#82       // org/json/JSONArray.put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n+   #20 = String             #83           // Bad character \\'\n+   #21 = String             #84           // \\' (\n+   #22 = Methodref          #3.#85        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #23 = String             #86           // ).\n+   #24 = Methodref          #40.#87       // org/json/CDL.rowToJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #25 = Methodref          #14.#88       // org/json/JSONArray.toJSONObject:(Lorg/json/JSONArray;)Lorg/json/JSONObject;\n+   #26 = Methodref          #14.#89       // org/json/JSONArray.opt:(I)Ljava/lang/Object;\n+   #27 = Methodref          #41.#75       // java/lang/Object.toString:()Ljava/lang/String;\n+   #28 = Methodref          #53.#90       // java/lang/String.indexOf:(I)I\n+   #29 = Methodref          #53.#91       // java/lang/String.charAt:(I)C\n+   #30 = Class              #92           // org/json/JSONTokener\n+   #31 = Methodref          #30.#93       // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n+   #32 = Methodref          #40.#94       // org/json/CDL.toJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #33 = Methodref          #40.#95       // org/json/CDL.toJSONArray:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #34 = Methodref          #40.#96       // org/json/CDL.rowToJSONObject:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONObject;\n+   #35 = Methodref          #14.#97       // org/json/JSONArray.optJSONObject:(I)Lorg/json/JSONObject;\n+   #36 = Methodref          #56.#98       // org/json/JSONObject.names:()Lorg/json/JSONArray;\n+   #37 = Methodref          #40.#99       // org/json/CDL.rowToString:(Lorg/json/JSONArray;)Ljava/lang/String;\n+   #38 = Methodref          #40.#100      // org/json/CDL.toString:(Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;\n+   #39 = Methodref          #56.#101      // org/json/JSONObject.toJSONArray:(Lorg/json/JSONArray;)Lorg/json/JSONArray;\n+   #40 = Class              #102          // org/json/CDL\n+   #41 = Class              #103          // java/lang/Object\n    #42 = Utf8               <init>\n    #43 = Utf8               ()V\n    #44 = Utf8               Code\n    #45 = Utf8               LineNumberTable\n    #46 = Utf8               getValue\n    #47 = Utf8               (Lorg/json/JSONTokener;)Ljava/lang/String;\n    #48 = Utf8               StackMapTable\n-   #49 = Class              #72           // java/lang/StringBuilder\n-   #50 = Utf8               Exceptions\n-   #51 = Class              #109          // org/json/JSONException\n-   #52 = Utf8               rowToJSONArray\n-   #53 = Utf8               (Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #54 = Class              #82           // org/json/JSONArray\n-   #55 = Class              #110          // java/lang/String\n-   #56 = Utf8               rowToJSONObject\n-   #57 = Utf8               (Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONObject;\n-   #58 = Class              #111          // org/json/JSONObject\n-   #59 = Utf8               rowToString\n-   #60 = Utf8               (Lorg/json/JSONArray;)Ljava/lang/String;\n-   #61 = Class              #108          // java/lang/Object\n-   #62 = Utf8               toJSONArray\n-   #63 = Utf8               (Ljava/lang/String;)Lorg/json/JSONArray;\n-   #64 = Utf8               (Lorg/json/JSONArray;Ljava/lang/String;)Lorg/json/JSONArray;\n-   #65 = Utf8               (Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #66 = Utf8               toString\n-   #67 = Utf8               (Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;\n-   #68 = Utf8               SourceFile\n-   #69 = Utf8               CDL.java\n-   #70 = NameAndType        #42:#43       // \"<init>\":()V\n-   #71 = NameAndType        #112:#113     // next:()C\n-   #72 = Utf8               java/lang/StringBuilder\n-   #73 = NameAndType        #114:#43      // back:()V\n-   #74 = Utf8               Missing close quote \\'\n-   #75 = NameAndType        #115:#116     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #76 = NameAndType        #115:#117     // append:(C)Ljava/lang/StringBuilder;\n-   #77 = Utf8               \\'.\n-   #78 = NameAndType        #66:#118      // toString:()Ljava/lang/String;\n-   #79 = NameAndType        #119:#120     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-   #80 = Utf8\n-   #81 = NameAndType        #121:#122     // nextTo:(C)Ljava/lang/String;\n-   #82 = Utf8               org/json/JSONArray\n-   #83 = NameAndType        #46:#47       // getValue:(Lorg/json/JSONTokener;)Ljava/lang/String;\n-   #84 = NameAndType        #123:#124     // length:()I\n-   #85 = Class              #110          // java/lang/String\n-   #86 = NameAndType        #125:#126     // put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n-   #87 = Utf8               Bad character \\'\n-   #88 = Utf8               \\' (\n-   #89 = NameAndType        #115:#127     // append:(I)Ljava/lang/StringBuilder;\n-   #90 = Utf8               ).\n-   #91 = NameAndType        #52:#53       // rowToJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #92 = NameAndType        #128:#129     // toJSONObject:(Lorg/json/JSONArray;)Lorg/json/JSONObject;\n-   #93 = NameAndType        #130:#131     // opt:(I)Ljava/lang/Object;\n-   #94 = NameAndType        #132:#133     // indexOf:(I)I\n-   #95 = NameAndType        #134:#135     // charAt:(I)C\n-   #96 = Utf8               org/json/JSONTokener\n-   #97 = NameAndType        #42:#136      // \"<init>\":(Ljava/lang/String;)V\n-   #98 = NameAndType        #62:#53       // toJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-   #99 = NameAndType        #62:#65       // toJSONArray:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n-  #100 = NameAndType        #56:#57       // rowToJSONObject:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONObject;\n-  #101 = NameAndType        #137:#138     // optJSONObject:(I)Lorg/json/JSONObject;\n-  #102 = Class              #111          // org/json/JSONObject\n-  #103 = NameAndType        #139:#140     // names:()Lorg/json/JSONArray;\n-  #104 = NameAndType        #59:#60       // rowToString:(Lorg/json/JSONArray;)Ljava/lang/String;\n-  #105 = NameAndType        #66:#67       // toString:(Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;\n-  #106 = NameAndType        #62:#141      // toJSONArray:(Lorg/json/JSONArray;)Lorg/json/JSONArray;\n-  #107 = Utf8               org/json/CDL\n-  #108 = Utf8               java/lang/Object\n-  #109 = Utf8               org/json/JSONException\n-  #110 = Utf8               java/lang/String\n-  #111 = Utf8               org/json/JSONObject\n-  #112 = Utf8               next\n-  #113 = Utf8               ()C\n-  #114 = Utf8               back\n-  #115 = Utf8               append\n-  #116 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #117 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #118 = Utf8               ()Ljava/lang/String;\n-  #119 = Utf8               syntaxError\n-  #120 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n-  #121 = Utf8               nextTo\n-  #122 = Utf8               (C)Ljava/lang/String;\n-  #123 = Utf8               length\n-  #124 = Utf8               ()I\n-  #125 = Utf8               put\n-  #126 = Utf8               (Ljava/lang/Object;)Lorg/json/JSONArray;\n-  #127 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #128 = Utf8               toJSONObject\n-  #129 = Utf8               (Lorg/json/JSONArray;)Lorg/json/JSONObject;\n-  #130 = Utf8               opt\n-  #131 = Utf8               (I)Ljava/lang/Object;\n-  #132 = Utf8               indexOf\n-  #133 = Utf8               (I)I\n-  #134 = Utf8               charAt\n-  #135 = Utf8               (I)C\n-  #136 = Utf8               (Ljava/lang/String;)V\n-  #137 = Utf8               optJSONObject\n-  #138 = Utf8               (I)Lorg/json/JSONObject;\n-  #139 = Utf8               names\n-  #140 = Utf8               ()Lorg/json/JSONArray;\n-  #141 = Utf8               (Lorg/json/JSONArray;)Lorg/json/JSONArray;\n+   #49 = Utf8               Exceptions\n+   #50 = Class              #104          // org/json/JSONException\n+   #51 = Utf8               rowToJSONArray\n+   #52 = Utf8               (Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #53 = Class              #105          // java/lang/String\n+   #54 = Utf8               rowToJSONObject\n+   #55 = Utf8               (Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONObject;\n+   #56 = Class              #106          // org/json/JSONObject\n+   #57 = Utf8               rowToString\n+   #58 = Utf8               (Lorg/json/JSONArray;)Ljava/lang/String;\n+   #59 = Utf8               toJSONArray\n+   #60 = Utf8               (Ljava/lang/String;)Lorg/json/JSONArray;\n+   #61 = Utf8               (Lorg/json/JSONArray;Ljava/lang/String;)Lorg/json/JSONArray;\n+   #62 = Utf8               (Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #63 = Utf8               toString\n+   #64 = Utf8               (Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;\n+   #65 = Utf8               SourceFile\n+   #66 = Utf8               CDL.java\n+   #67 = NameAndType        #42:#43       // \"<init>\":()V\n+   #68 = NameAndType        #107:#108     // next:()C\n+   #69 = Utf8               java/lang/StringBuilder\n+   #70 = NameAndType        #109:#43      // back:()V\n+   #71 = Utf8               Missing close quote \\'\n+   #72 = NameAndType        #110:#111     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #73 = NameAndType        #110:#112     // append:(C)Ljava/lang/StringBuilder;\n+   #74 = Utf8               \\'.\n+   #75 = NameAndType        #63:#113      // toString:()Ljava/lang/String;\n+   #76 = NameAndType        #114:#115     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+   #77 = Utf8\n+   #78 = NameAndType        #116:#117     // nextTo:(C)Ljava/lang/String;\n+   #79 = Utf8               org/json/JSONArray\n+   #80 = NameAndType        #46:#47       // getValue:(Lorg/json/JSONTokener;)Ljava/lang/String;\n+   #81 = NameAndType        #118:#119     // length:()I\n+   #82 = NameAndType        #120:#121     // put:(Ljava/lang/Object;)Lorg/json/JSONArray;\n+   #83 = Utf8               Bad character \\'\n+   #84 = Utf8               \\' (\n+   #85 = NameAndType        #110:#122     // append:(I)Ljava/lang/StringBuilder;\n+   #86 = Utf8               ).\n+   #87 = NameAndType        #51:#52       // rowToJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #88 = NameAndType        #123:#124     // toJSONObject:(Lorg/json/JSONArray;)Lorg/json/JSONObject;\n+   #89 = NameAndType        #125:#126     // opt:(I)Ljava/lang/Object;\n+   #90 = NameAndType        #127:#128     // indexOf:(I)I\n+   #91 = NameAndType        #129:#130     // charAt:(I)C\n+   #92 = Utf8               org/json/JSONTokener\n+   #93 = NameAndType        #42:#131      // \"<init>\":(Ljava/lang/String;)V\n+   #94 = NameAndType        #59:#52       // toJSONArray:(Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #95 = NameAndType        #59:#62       // toJSONArray:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONArray;\n+   #96 = NameAndType        #54:#55       // rowToJSONObject:(Lorg/json/JSONArray;Lorg/json/JSONTokener;)Lorg/json/JSONObject;\n+   #97 = NameAndType        #132:#133     // optJSONObject:(I)Lorg/json/JSONObject;\n+   #98 = NameAndType        #134:#135     // names:()Lorg/json/JSONArray;\n+   #99 = NameAndType        #57:#58       // rowToString:(Lorg/json/JSONArray;)Ljava/lang/String;\n+  #100 = NameAndType        #63:#64       // toString:(Lorg/json/JSONArray;Lorg/json/JSONArray;)Ljava/lang/String;\n+  #101 = NameAndType        #59:#136      // toJSONArray:(Lorg/json/JSONArray;)Lorg/json/JSONArray;\n+  #102 = Utf8               org/json/CDL\n+  #103 = Utf8               java/lang/Object\n+  #104 = Utf8               org/json/JSONException\n+  #105 = Utf8               java/lang/String\n+  #106 = Utf8               org/json/JSONObject\n+  #107 = Utf8               next\n+  #108 = Utf8               ()C\n+  #109 = Utf8               back\n+  #110 = Utf8               append\n+  #111 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #112 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #113 = Utf8               ()Ljava/lang/String;\n+  #114 = Utf8               syntaxError\n+  #115 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n+  #116 = Utf8               nextTo\n+  #117 = Utf8               (C)Ljava/lang/String;\n+  #118 = Utf8               length\n+  #119 = Utf8               ()I\n+  #120 = Utf8               put\n+  #121 = Utf8               (Ljava/lang/Object;)Lorg/json/JSONArray;\n+  #122 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #123 = Utf8               toJSONObject\n+  #124 = Utf8               (Lorg/json/JSONArray;)Lorg/json/JSONObject;\n+  #125 = Utf8               opt\n+  #126 = Utf8               (I)Ljava/lang/Object;\n+  #127 = Utf8               indexOf\n+  #128 = Utf8               (I)I\n+  #129 = Utf8               charAt\n+  #130 = Utf8               (I)C\n+  #131 = Utf8               (Ljava/lang/String;)V\n+  #132 = Utf8               optJSONObject\n+  #133 = Utf8               (I)Lorg/json/JSONObject;\n+  #134 = Utf8               names\n+  #135 = Utf8               ()Lorg/json/JSONArray;\n+  #136 = Utf8               (Lorg/json/JSONArray;)Lorg/json/JSONArray;\n {\n   public org.json.CDL();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
