{"diffoscope-json-version": 1, "source1": "first/LocalVariableInfo.class", "source2": "second/LocalVariableInfo.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -11,40 +11,40 @@\n     private final Hashtable<String, String> names;\n     \n     public LocalVariableInfo() {\n         this.types = new Hashtable<String, Type>();\n         this.names = new Hashtable<String, String>();\n     }\n     \n-    private void add(final int offset, final String name, final Type t) throws LocalVariableInfoInconsistentException {\n-        if (this.getName(offset) != null && !this.getName(offset).equals(name)) {\n-            throw new LocalVariableInfoInconsistentException(\"At bytecode offset '\" + offset + \"' a local variable has two different names: '\" + this.getName(offset) + \"' and '\" + name + \"'.\");\n+    private void add(final int n, final String s, final Type obj) throws LocalVariableInfoInconsistentException {\n+        if (this.getName(n) != null && !this.getName(n).equals(s)) {\n+            throw new LocalVariableInfoInconsistentException(\"At bytecode offset '\" + n + \"' a local variable has two different names: '\" + this.getName(n) + \"' and '\" + s + \"'.\");\n         }\n-        if (this.getType(offset) != null && !this.getType(offset).equals((Object)t)) {\n-            throw new LocalVariableInfoInconsistentException(\"At bytecode offset '\" + offset + \"' a local variable has two different types: '\" + this.getType(offset) + \"' and '\" + t + \"'.\");\n+        if (this.getType(n) != null && !this.getType(n).equals((Object)obj)) {\n+            throw new LocalVariableInfoInconsistentException(\"At bytecode offset '\" + n + \"' a local variable has two different types: '\" + this.getType(n) + \"' and '\" + obj + \"'.\");\n         }\n-        this.setName(offset, name);\n-        this.setType(offset, t);\n+        this.setName(n, s);\n+        this.setType(n, obj);\n     }\n     \n-    public void add(final String name, final int startPc, final int length, final Type type) throws LocalVariableInfoInconsistentException {\n-        for (int i = startPc; i <= startPc + length; ++i) {\n-            this.add(i, name, type);\n+    public void add(final String s, final int n, final int n2, final Type type) throws LocalVariableInfoInconsistentException {\n+        for (int i = n; i <= n + n2; ++i) {\n+            this.add(i, s, type);\n         }\n     }\n     \n-    public String getName(final int offset) {\n-        return this.names.get(Integer.toString(offset));\n+    public String getName(final int i) {\n+        return this.names.get(Integer.toString(i));\n     }\n     \n-    public Type getType(final int offset) {\n-        return this.types.get(Integer.toString(offset));\n+    public Type getType(final int i) {\n+        return this.types.get(Integer.toString(i));\n     }\n     \n-    private void setName(final int offset, final String name) {\n-        this.names.put(Integer.toString(offset), name);\n+    private void setName(final int i, final String value) {\n+        this.names.put(Integer.toString(i), value);\n     }\n     \n-    private void setType(final int offset, final Type t) {\n-        this.types.put(Integer.toString(offset), t);\n+    private void setType(final int i, final Type value) {\n+        this.types.put(Integer.toString(i), value);\n     }\n }\n"}]}
