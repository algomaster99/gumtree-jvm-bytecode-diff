{"diffoscope-json-version": 1, "source1": "first/ExceptionUtils.class", "source2": "second/ExceptionUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,376 +1,376 @@\n-  SHA-256 checksum 5bfcd71bc1677151eda11e9dc42a7b1395a7c691f43bf779498a052734ed6d7d\n+  SHA-256 checksum 015ce05a8649c41e68d368ce6c97b6e73813d5ac6ff77c04a9abdbbb44602732\n   Compiled from \"ExceptionUtils.java\"\n public class org.apache.commons.lang3.exception.ExceptionUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #44                         // org/apache/commons/lang3/exception/ExceptionUtils\n-  super_class: #13                        // java/lang/Object\n+  this_class: #2                          // org/apache/commons/lang3/exception/ExceptionUtils\n+  super_class: #21                        // java/lang/Object\n   interfaces: 0, fields: 3, methods: 35, attributes: 1\n Constant pool:\n-    #1 = Methodref          #44.#192      // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-    #2 = Methodref          #10.#193      // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n-    #3 = Fieldref           #44.#194      // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-    #4 = Methodref          #44.#195      // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-    #5 = Methodref          #13.#196      // java/lang/Object.getClass:()Ljava/lang/Class;\n-    #6 = Class              #197          // java/lang/Class\n-    #7 = Methodref          #6.#198       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-    #8 = Class              #199          // java/lang/NoSuchMethodException\n-    #9 = Class              #200          // java/lang/SecurityException\n-   #10 = Class              #201          // java/lang/Throwable\n-   #11 = Methodref          #127.#202     // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n-   #12 = Methodref          #6.#203       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n-   #13 = Class              #204          // java/lang/Object\n-   #14 = Methodref          #127.#205     // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-   #15 = Class              #206          // java/lang/IllegalAccessException\n-   #16 = Class              #207          // java/lang/IllegalArgumentException\n-   #17 = Class              #208          // java/lang/reflect/InvocationTargetException\n-   #18 = Methodref          #209.#210     // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #19 = Class              #113          // \"[Ljava/lang/String;\"\n-   #20 = Class              #211          // org/apache/commons/lang3/StringUtils\n-   #21 = String             #212          //\n-   #22 = Methodref          #213.#214     // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #23 = Methodref          #10.#215      // java/lang/Throwable.getMessage:()Ljava/lang/String;\n-   #24 = Class              #216          // java/lang/StringBuilder\n-   #25 = Methodref          #24.#217      // java/lang/StringBuilder.\"<init>\":()V\n-   #26 = Methodref          #24.#218      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #27 = String             #219          // :\n-   #28 = Methodref          #20.#220      // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-   #29 = Methodref          #24.#221      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #30 = Methodref          #44.#222      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #31 = InterfaceMethodref #134.#223     // java/util/List.isEmpty:()Z\n-   #32 = InterfaceMethodref #134.#224     // java/util/List.size:()I\n-   #33 = InterfaceMethodref #134.#225     // java/util/List.get:(I)Ljava/lang/Object;\n-   #34 = Methodref          #44.#226      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-   #35 = Methodref          #44.#227      // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #36 = Fieldref           #209.#228     // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #37 = Methodref          #44.#229      // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-   #38 = Class              #230          // java/util/ArrayList\n-   #39 = Methodref          #38.#217      // java/util/ArrayList.\"<init>\":()V\n-   #40 = Methodref          #44.#231      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-   #41 = Methodref          #44.#232      // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-   #42 = Methodref          #10.#221      // java/lang/Throwable.toString:()Ljava/lang/String;\n-   #43 = InterfaceMethodref #134.#233     // java/util/List.add:(Ljava/lang/Object;)Z\n-   #44 = Class              #234          // org/apache/commons/lang3/exception/ExceptionUtils\n-   #45 = String             #235          //  [wrapped]\n-   #46 = InterfaceMethodref #134.#236     // java/util/List.addAll:(Ljava/util/Collection;)Z\n-   #47 = InterfaceMethodref #134.#237     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #48 = Methodref          #44.#238      // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-   #49 = Methodref          #239.#240     // java/lang/System.lineSeparator:()Ljava/lang/String;\n-   #50 = Class              #241          // java/util/StringTokenizer\n-   #51 = Methodref          #50.#242      // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-   #52 = Methodref          #50.#243      // java/util/StringTokenizer.hasMoreTokens:()Z\n-   #53 = Methodref          #50.#244      // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n-   #54 = String             #245          // at\n-   #55 = Methodref          #86.#246      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #56 = Methodref          #86.#247      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #57 = Methodref          #86.#248      // java/lang/String.trim:()Ljava/lang/String;\n-   #58 = Methodref          #86.#223      // java/lang/String.isEmpty:()Z\n-   #59 = Methodref          #44.#249      // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-   #60 = Class              #250          // java/io/StringWriter\n-   #61 = Methodref          #60.#217      // java/io/StringWriter.\"<init>\":()V\n-   #62 = Class              #251          // java/io/PrintWriter\n-   #63 = Methodref          #62.#252      // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n-   #64 = Methodref          #10.#253      // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n-   #65 = Methodref          #60.#254      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #66 = Methodref          #255.#221     // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #67 = InterfaceMethodref #134.#256     // java/util/List.contains:(Ljava/lang/Object;)Z\n-   #68 = Fieldref           #209.#257     // org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-   #69 = Class              #258          // \"[Ljava/lang/Throwable;\"\n-   #70 = Class              #259          // java/lang/reflect/UndeclaredThrowableException\n-   #71 = Methodref          #6.#260       // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n-   #72 = Methodref          #13.#261      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #73 = Methodref          #44.#262      // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-   #74 = Fieldref           #239.#263     // java/lang/System.err:Ljava/io/PrintStream;\n-   #75 = Methodref          #44.#264      // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-   #76 = String             #265          // printStream\n-   #77 = Methodref          #266.#267     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #78 = Methodref          #44.#268      // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-   #79 = Methodref          #166.#269     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #80 = Methodref          #166.#270     // java/io/PrintStream.flush:()V\n-   #81 = String             #271          // printWriter\n-   #82 = Methodref          #62.#269      // java/io/PrintWriter.println:(Ljava/lang/String;)V\n-   #83 = Methodref          #62.#270      // java/io/PrintWriter.flush:()V\n-   #84 = String             #272          // The List must not be null\n-   #85 = Methodref          #16.#273      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #86 = Class              #274          // java/lang/String\n-   #87 = Methodref          #86.#261      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #88 = InterfaceMethodref #134.#275     // java/util/List.remove:(I)Ljava/lang/Object;\n-   #89 = Methodref          #44.#276      // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-   #90 = Methodref          #6.#277       // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Methodref          #44.#278      // org/apache/commons/lang3/exception/ExceptionUtils.throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-   #92 = Class              #279          // java/lang/RuntimeException\n-   #93 = Class              #280          // java/lang/Error\n-   #94 = Methodref          #70.#281      // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #95 = Methodref          #13.#217      // java/lang/Object.\"<init>\":()V\n-   #96 = String             #116          // getCause\n-   #97 = String             #282          // getNextException\n-   #98 = String             #283          // getTargetException\n-   #99 = String             #284          // getException\n-  #100 = String             #285          // getSourceException\n-  #101 = String             #133          // getRootCause\n-  #102 = String             #286          // getCausedByException\n-  #103 = String             #287          // getNested\n-  #104 = String             #288          // getLinkedException\n-  #105 = String             #289          // getNestedException\n-  #106 = String             #290          // getLinkedCause\n-  #107 = String             #291          // getThrowable\n-  #108 = Utf8               NOT_FOUND\n-  #109 = Utf8               I\n-  #110 = Utf8               ConstantValue\n-  #111 = Integer            -1\n-  #112 = Utf8               CAUSE_METHOD_NAMES\n-  #113 = Utf8               [Ljava/lang/String;\n-  #114 = Utf8               WRAPPED_MARKER\n-  #115 = Utf8               Ljava/lang/String;\n-  #116 = Utf8               getCause\n-  #117 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #118 = Utf8               Code\n-  #119 = Utf8               LineNumberTable\n-  #120 = Utf8               Deprecated\n-  #121 = Utf8               RuntimeVisibleAnnotations\n-  #122 = Utf8               Ljava/lang/Deprecated;\n-  #123 = Utf8               (Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-  #124 = Utf8               StackMapTable\n-  #125 = Utf8               getCauseUsingMethodName\n-  #126 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #127 = Class              #292          // java/lang/reflect/Method\n-  #128 = Class              #293          // java/lang/Exception\n-  #129 = Utf8               getDefaultCauseMethodNames\n-  #130 = Utf8               ()[Ljava/lang/String;\n-  #131 = Utf8               getMessage\n-  #132 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n-  #133 = Utf8               getRootCause\n-  #134 = Class              #294          // java/util/List\n-  #135 = Utf8               getRootCauseMessage\n-  #136 = Utf8               getRootCauseStackTrace\n-  #137 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #138 = Utf8               getStackFrameList\n-  #139 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n-  #140 = Utf8               Signature\n-  #141 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n-  #142 = Utf8               getStackFrames\n-  #143 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #144 = Utf8               getStackTrace\n-  #145 = Utf8               getThrowableCount\n-  #146 = Utf8               (Ljava/lang/Throwable;)I\n-  #147 = Utf8               getThrowableList\n-  #148 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n-  #149 = Utf8               getThrowables\n-  #150 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #151 = Utf8               hasCause\n-  #152 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n-  #153 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n-  #154 = Utf8               indexOf\n-  #155 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #156 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n-  #157 = Utf8               indexOfThrowable\n-  #158 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n-  #159 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n-  #160 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n-  #161 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n-  #162 = Utf8               indexOfType\n-  #163 = Utf8               printRootCauseStackTrace\n-  #164 = Utf8               (Ljava/lang/Throwable;)V\n-  #165 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #166 = Class              #295          // java/io/PrintStream\n-  #167 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n-  #168 = Utf8               removeCommonFrames\n-  #169 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n-  #170 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n-  #171 = Utf8               rethrow\n-  #172 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #173 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n-  #174 = Utf8               throwableOf\n-  #175 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-  #176 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n-  #177 = Utf8               throwableOfThrowable\n-  #178 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n-  #179 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n-  #180 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n-  #181 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n-  #182 = Utf8               throwableOfType\n-  #183 = Utf8               typeErasure\n-  #184 = Utf8               Exceptions\n-  #185 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n-  #186 = Utf8               wrapAndThrow\n-  #187 = Utf8               <init>\n-  #188 = Utf8               ()V\n-  #189 = Utf8               <clinit>\n-  #190 = Utf8               SourceFile\n-  #191 = Utf8               ExceptionUtils.java\n-  #192 = NameAndType        #116:#123     // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n-  #193 = NameAndType        #116:#296     // getCause:()Ljava/lang/Throwable;\n-  #194 = NameAndType        #112:#113     // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-  #195 = NameAndType        #125:#126     // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n-  #196 = NameAndType        #297:#298     // getClass:()Ljava/lang/Class;\n-  #197 = Utf8               java/lang/Class\n-  #198 = NameAndType        #299:#300     // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #199 = Utf8               java/lang/NoSuchMethodException\n-  #200 = Utf8               java/lang/SecurityException\n-  #201 = Utf8               java/lang/Throwable\n-  #202 = NameAndType        #301:#298     // getReturnType:()Ljava/lang/Class;\n-  #203 = NameAndType        #302:#303     // isAssignableFrom:(Ljava/lang/Class;)Z\n-  #204 = Utf8               java/lang/Object\n-  #205 = NameAndType        #304:#305     // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #206 = Utf8               java/lang/IllegalAccessException\n-  #207 = Utf8               java/lang/IllegalArgumentException\n-  #208 = Utf8               java/lang/reflect/InvocationTargetException\n-  #209 = Class              #306          // org/apache/commons/lang3/ArrayUtils\n-  #210 = NameAndType        #307:#308     // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #211 = Utf8               org/apache/commons/lang3/StringUtils\n-  #212 = Utf8\n-  #213 = Class              #309          // org/apache/commons/lang3/ClassUtils\n-  #214 = NameAndType        #310:#311     // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #215 = NameAndType        #131:#312     // getMessage:()Ljava/lang/String;\n-  #216 = Utf8               java/lang/StringBuilder\n-  #217 = NameAndType        #187:#188     // \"<init>\":()V\n-  #218 = NameAndType        #313:#314     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #219 = Utf8               :\n-  #220 = NameAndType        #315:#316     // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-  #221 = NameAndType        #317:#312     // toString:()Ljava/lang/String;\n-  #222 = NameAndType        #147:#139     // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #223 = NameAndType        #318:#319     // isEmpty:()Z\n-  #224 = NameAndType        #320:#321     // size:()I\n-  #225 = NameAndType        #322:#323     // get:(I)Ljava/lang/Object;\n-  #226 = NameAndType        #133:#117     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n-  #227 = NameAndType        #131:#132     // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #228 = NameAndType        #324:#113     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #229 = NameAndType        #149:#150     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n-  #230 = Utf8               java/util/ArrayList\n-  #231 = NameAndType        #138:#139     // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n-  #232 = NameAndType        #168:#169     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n-  #233 = NameAndType        #325:#326     // add:(Ljava/lang/Object;)Z\n-  #234 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n-  #235 = Utf8                [wrapped]\n-  #236 = NameAndType        #327:#328     // addAll:(Ljava/util/Collection;)Z\n-  #237 = NameAndType        #329:#308     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #238 = NameAndType        #144:#132     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-  #239 = Class              #330          // java/lang/System\n-  #240 = NameAndType        #331:#312     // lineSeparator:()Ljava/lang/String;\n-  #241 = Utf8               java/util/StringTokenizer\n-  #242 = NameAndType        #187:#332     // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n-  #243 = NameAndType        #333:#319     // hasMoreTokens:()Z\n-  #244 = NameAndType        #334:#312     // nextToken:()Ljava/lang/String;\n-  #245 = Utf8               at\n-  #246 = NameAndType        #154:#335     // indexOf:(Ljava/lang/String;)I\n-  #247 = NameAndType        #336:#337     // substring:(II)Ljava/lang/String;\n-  #248 = NameAndType        #338:#312     // trim:()Ljava/lang/String;\n-  #249 = NameAndType        #142:#143     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n-  #250 = Utf8               java/io/StringWriter\n-  #251 = Utf8               java/io/PrintWriter\n-  #252 = NameAndType        #187:#339     // \"<init>\":(Ljava/io/Writer;Z)V\n-  #253 = NameAndType        #340:#341     // printStackTrace:(Ljava/io/PrintWriter;)V\n-  #254 = NameAndType        #342:#343     // getBuffer:()Ljava/lang/StringBuffer;\n-  #255 = Class              #344          // java/lang/StringBuffer\n-  #256 = NameAndType        #345:#326     // contains:(Ljava/lang/Object;)Z\n-  #257 = NameAndType        #346:#258     // EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-  #258 = Utf8               [Ljava/lang/Throwable;\n-  #259 = Utf8               java/lang/reflect/UndeclaredThrowableException\n-  #260 = NameAndType        #347:#326     // isInstance:(Ljava/lang/Object;)Z\n-  #261 = NameAndType        #348:#326     // equals:(Ljava/lang/Object;)Z\n-  #262 = NameAndType        #154:#155     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n-  #263 = NameAndType        #349:#350     // err:Ljava/io/PrintStream;\n-  #264 = NameAndType        #163:#165     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n-  #265 = Utf8               printStream\n-  #266 = Class              #351          // java/util/Objects\n-  #267 = NameAndType        #352:#353     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #268 = NameAndType        #136:#137     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-  #269 = NameAndType        #354:#355     // println:(Ljava/lang/String;)V\n-  #270 = NameAndType        #356:#188     // flush:()V\n-  #271 = Utf8               printWriter\n-  #272 = Utf8               The List must not be null\n-  #273 = NameAndType        #187:#355     // \"<init>\":(Ljava/lang/String;)V\n-  #274 = Utf8               java/lang/String\n-  #275 = NameAndType        #357:#323     // remove:(I)Ljava/lang/Object;\n-  #276 = NameAndType        #183:#172     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n-  #277 = NameAndType        #358:#359     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #278 = NameAndType        #174:#175     // throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n-  #279 = Utf8               java/lang/RuntimeException\n-  #280 = Utf8               java/lang/Error\n-  #281 = NameAndType        #187:#164     // \"<init>\":(Ljava/lang/Throwable;)V\n-  #282 = Utf8               getNextException\n-  #283 = Utf8               getTargetException\n-  #284 = Utf8               getException\n-  #285 = Utf8               getSourceException\n-  #286 = Utf8               getCausedByException\n-  #287 = Utf8               getNested\n-  #288 = Utf8               getLinkedException\n-  #289 = Utf8               getNestedException\n-  #290 = Utf8               getLinkedCause\n-  #291 = Utf8               getThrowable\n-  #292 = Utf8               java/lang/reflect/Method\n-  #293 = Utf8               java/lang/Exception\n-  #294 = Utf8               java/util/List\n-  #295 = Utf8               java/io/PrintStream\n-  #296 = Utf8               ()Ljava/lang/Throwable;\n-  #297 = Utf8               getClass\n-  #298 = Utf8               ()Ljava/lang/Class;\n-  #299 = Utf8               getMethod\n-  #300 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n-  #301 = Utf8               getReturnType\n-  #302 = Utf8               isAssignableFrom\n-  #303 = Utf8               (Ljava/lang/Class;)Z\n-  #304 = Utf8               invoke\n-  #305 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-  #306 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #307 = Utf8               clone\n-  #308 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #309 = Utf8               org/apache/commons/lang3/ClassUtils\n-  #310 = Utf8               getShortClassName\n-  #311 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #312 = Utf8               ()Ljava/lang/String;\n-  #313 = Utf8               append\n-  #314 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #315 = Utf8               defaultString\n-  #316 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #317 = Utf8               toString\n-  #318 = Utf8               isEmpty\n-  #319 = Utf8               ()Z\n-  #320 = Utf8               size\n-  #321 = Utf8               ()I\n-  #322 = Utf8               get\n-  #323 = Utf8               (I)Ljava/lang/Object;\n-  #324 = Utf8               EMPTY_STRING_ARRAY\n-  #325 = Utf8               add\n-  #326 = Utf8               (Ljava/lang/Object;)Z\n-  #327 = Utf8               addAll\n-  #328 = Utf8               (Ljava/util/Collection;)Z\n-  #329 = Utf8               toArray\n-  #330 = Utf8               java/lang/System\n-  #331 = Utf8               lineSeparator\n-  #332 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n-  #333 = Utf8               hasMoreTokens\n-  #334 = Utf8               nextToken\n-  #335 = Utf8               (Ljava/lang/String;)I\n-  #336 = Utf8               substring\n-  #337 = Utf8               (II)Ljava/lang/String;\n-  #338 = Utf8               trim\n-  #339 = Utf8               (Ljava/io/Writer;Z)V\n-  #340 = Utf8               printStackTrace\n-  #341 = Utf8               (Ljava/io/PrintWriter;)V\n-  #342 = Utf8               getBuffer\n-  #343 = Utf8               ()Ljava/lang/StringBuffer;\n-  #344 = Utf8               java/lang/StringBuffer\n-  #345 = Utf8               contains\n-  #346 = Utf8               EMPTY_THROWABLE_ARRAY\n-  #347 = Utf8               isInstance\n-  #348 = Utf8               equals\n-  #349 = Utf8               err\n-  #350 = Utf8               Ljava/io/PrintStream;\n-  #351 = Utf8               java/util/Objects\n-  #352 = Utf8               requireNonNull\n-  #353 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #354 = Utf8               println\n-  #355 = Utf8               (Ljava/lang/String;)V\n-  #356 = Utf8               flush\n-  #357 = Utf8               remove\n-  #358 = Utf8               cast\n-  #359 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+    #1 = Methodref          #2.#3         // org/apache/commons/lang3/exception/ExceptionUtils.getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+    #2 = Class              #4            // org/apache/commons/lang3/exception/ExceptionUtils\n+    #3 = NameAndType        #5:#6         // getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+    #4 = Utf8               org/apache/commons/lang3/exception/ExceptionUtils\n+    #5 = Utf8               getCause\n+    #6 = Utf8               (Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n+    #7 = Methodref          #8.#9         // java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+    #8 = Class              #10           // java/lang/Throwable\n+    #9 = NameAndType        #5:#11        // getCause:()Ljava/lang/Throwable;\n+   #10 = Utf8               java/lang/Throwable\n+   #11 = Utf8               ()Ljava/lang/Throwable;\n+   #12 = Fieldref           #2.#13        // org/apache/commons/lang3/exception/ExceptionUtils.CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+   #13 = NameAndType        #14:#15       // CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+   #14 = Utf8               CAUSE_METHOD_NAMES\n+   #15 = Utf8               [Ljava/lang/String;\n+   #16 = Methodref          #2.#17        // org/apache/commons/lang3/exception/ExceptionUtils.getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+   #17 = NameAndType        #18:#19       // getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+   #18 = Utf8               getCauseUsingMethodName\n+   #19 = Utf8               (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+   #20 = Methodref          #21.#22       // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #21 = Class              #23           // java/lang/Object\n+   #22 = NameAndType        #24:#25       // getClass:()Ljava/lang/Class;\n+   #23 = Utf8               java/lang/Object\n+   #24 = Utf8               getClass\n+   #25 = Utf8               ()Ljava/lang/Class;\n+   #26 = Class              #27           // java/lang/Class\n+   #27 = Utf8               java/lang/Class\n+   #28 = Methodref          #26.#29       // java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #29 = NameAndType        #30:#31       // getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #30 = Utf8               getMethod\n+   #31 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+   #32 = Class              #33           // java/lang/NoSuchMethodException\n+   #33 = Utf8               java/lang/NoSuchMethodException\n+   #34 = Class              #35           // java/lang/SecurityException\n+   #35 = Utf8               java/lang/SecurityException\n+   #36 = Methodref          #37.#38       // java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+   #37 = Class              #39           // java/lang/reflect/Method\n+   #38 = NameAndType        #40:#25       // getReturnType:()Ljava/lang/Class;\n+   #39 = Utf8               java/lang/reflect/Method\n+   #40 = Utf8               getReturnType\n+   #41 = Methodref          #26.#42       // java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+   #42 = NameAndType        #43:#44       // isAssignableFrom:(Ljava/lang/Class;)Z\n+   #43 = Utf8               isAssignableFrom\n+   #44 = Utf8               (Ljava/lang/Class;)Z\n+   #45 = Methodref          #37.#46       // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #46 = NameAndType        #47:#48       // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #47 = Utf8               invoke\n+   #48 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+   #49 = Class              #50           // java/lang/IllegalAccessException\n+   #50 = Utf8               java/lang/IllegalAccessException\n+   #51 = Class              #52           // java/lang/IllegalArgumentException\n+   #52 = Utf8               java/lang/IllegalArgumentException\n+   #53 = Class              #54           // java/lang/reflect/InvocationTargetException\n+   #54 = Utf8               java/lang/reflect/InvocationTargetException\n+   #55 = Methodref          #56.#57       // org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #56 = Class              #58           // org/apache/commons/lang3/ArrayUtils\n+   #57 = NameAndType        #59:#60       // clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #58 = Utf8               org/apache/commons/lang3/ArrayUtils\n+   #59 = Utf8               clone\n+   #60 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+   #61 = Class              #15           // \"[Ljava/lang/String;\"\n+   #62 = Class              #63           // org/apache/commons/lang3/StringUtils\n+   #63 = Utf8               org/apache/commons/lang3/StringUtils\n+   #64 = String             #65           //\n+   #65 = Utf8\n+   #66 = Methodref          #67.#68       // org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #67 = Class              #69           // org/apache/commons/lang3/ClassUtils\n+   #68 = NameAndType        #70:#71       // getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #69 = Utf8               org/apache/commons/lang3/ClassUtils\n+   #70 = Utf8               getShortClassName\n+   #71 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #72 = Methodref          #8.#73        // java/lang/Throwable.getMessage:()Ljava/lang/String;\n+   #73 = NameAndType        #74:#75       // getMessage:()Ljava/lang/String;\n+   #74 = Utf8               getMessage\n+   #75 = Utf8               ()Ljava/lang/String;\n+   #76 = Class              #77           // java/lang/StringBuilder\n+   #77 = Utf8               java/lang/StringBuilder\n+   #78 = Methodref          #76.#79       // java/lang/StringBuilder.\"<init>\":()V\n+   #79 = NameAndType        #80:#81       // \"<init>\":()V\n+   #80 = Utf8               <init>\n+   #81 = Utf8               ()V\n+   #82 = Methodref          #76.#83       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = NameAndType        #84:#85       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #84 = Utf8               append\n+   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #86 = String             #87           // :\n+   #87 = Utf8               :\n+   #88 = Methodref          #62.#89       // org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+   #89 = NameAndType        #90:#91       // defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+   #90 = Utf8               defaultString\n+   #91 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #92 = Methodref          #76.#93       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #93 = NameAndType        #94:#75       // toString:()Ljava/lang/String;\n+   #94 = Utf8               toString\n+   #95 = Methodref          #2.#96        // org/apache/commons/lang3/exception/ExceptionUtils.getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #96 = NameAndType        #97:#98       // getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+   #97 = Utf8               getThrowableList\n+   #98 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List;\n+   #99 = InterfaceMethodref #100.#101     // java/util/List.isEmpty:()Z\n+  #100 = Class              #102          // java/util/List\n+  #101 = NameAndType        #103:#104     // isEmpty:()Z\n+  #102 = Utf8               java/util/List\n+  #103 = Utf8               isEmpty\n+  #104 = Utf8               ()Z\n+  #105 = InterfaceMethodref #100.#106     // java/util/List.size:()I\n+  #106 = NameAndType        #107:#108     // size:()I\n+  #107 = Utf8               size\n+  #108 = Utf8               ()I\n+  #109 = InterfaceMethodref #100.#110     // java/util/List.get:(I)Ljava/lang/Object;\n+  #110 = NameAndType        #111:#112     // get:(I)Ljava/lang/Object;\n+  #111 = Utf8               get\n+  #112 = Utf8               (I)Ljava/lang/Object;\n+  #113 = Methodref          #2.#114       // org/apache/commons/lang3/exception/ExceptionUtils.getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #114 = NameAndType        #115:#116     // getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #115 = Utf8               getRootCause\n+  #116 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+  #117 = Methodref          #2.#118       // org/apache/commons/lang3/exception/ExceptionUtils.getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #118 = NameAndType        #74:#119      // getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #119 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/String;\n+  #120 = Fieldref           #56.#121      // org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #121 = NameAndType        #122:#15      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #122 = Utf8               EMPTY_STRING_ARRAY\n+  #123 = Methodref          #2.#124       // org/apache/commons/lang3/exception/ExceptionUtils.getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #124 = NameAndType        #125:#126     // getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #125 = Utf8               getThrowables\n+  #126 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+  #127 = Class              #128          // java/util/ArrayList\n+  #128 = Utf8               java/util/ArrayList\n+  #129 = Methodref          #127.#79      // java/util/ArrayList.\"<init>\":()V\n+  #130 = Methodref          #2.#131       // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #131 = NameAndType        #132:#98      // getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+  #132 = Utf8               getStackFrameList\n+  #133 = Methodref          #2.#134       // org/apache/commons/lang3/exception/ExceptionUtils.removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+  #134 = NameAndType        #135:#136     // removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+  #135 = Utf8               removeCommonFrames\n+  #136 = Utf8               (Ljava/util/List;Ljava/util/List;)V\n+  #137 = Methodref          #8.#93        // java/lang/Throwable.toString:()Ljava/lang/String;\n+  #138 = InterfaceMethodref #100.#139     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #139 = NameAndType        #140:#141     // add:(Ljava/lang/Object;)Z\n+  #140 = Utf8               add\n+  #141 = Utf8               (Ljava/lang/Object;)Z\n+  #142 = String             #143          //  [wrapped]\n+  #143 = Utf8                [wrapped]\n+  #144 = InterfaceMethodref #100.#145     // java/util/List.addAll:(Ljava/util/Collection;)Z\n+  #145 = NameAndType        #146:#147     // addAll:(Ljava/util/Collection;)Z\n+  #146 = Utf8               addAll\n+  #147 = Utf8               (Ljava/util/Collection;)Z\n+  #148 = InterfaceMethodref #100.#149     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #149 = NameAndType        #150:#60      // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #150 = Utf8               toArray\n+  #151 = Methodref          #2.#152       // org/apache/commons/lang3/exception/ExceptionUtils.getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #152 = NameAndType        #153:#119     // getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+  #153 = Utf8               getStackTrace\n+  #154 = Methodref          #155.#156     // java/lang/System.lineSeparator:()Ljava/lang/String;\n+  #155 = Class              #157          // java/lang/System\n+  #156 = NameAndType        #158:#75      // lineSeparator:()Ljava/lang/String;\n+  #157 = Utf8               java/lang/System\n+  #158 = Utf8               lineSeparator\n+  #159 = Class              #160          // java/util/StringTokenizer\n+  #160 = Utf8               java/util/StringTokenizer\n+  #161 = Methodref          #159.#162     // java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #162 = NameAndType        #80:#163      // \"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+  #163 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V\n+  #164 = Methodref          #159.#165     // java/util/StringTokenizer.hasMoreTokens:()Z\n+  #165 = NameAndType        #166:#104     // hasMoreTokens:()Z\n+  #166 = Utf8               hasMoreTokens\n+  #167 = Methodref          #159.#168     // java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n+  #168 = NameAndType        #169:#75      // nextToken:()Ljava/lang/String;\n+  #169 = Utf8               nextToken\n+  #170 = String             #171          // at\n+  #171 = Utf8               at\n+  #172 = Methodref          #173.#174     // java/lang/String.indexOf:(Ljava/lang/String;)I\n+  #173 = Class              #175          // java/lang/String\n+  #174 = NameAndType        #176:#177     // indexOf:(Ljava/lang/String;)I\n+  #175 = Utf8               java/lang/String\n+  #176 = Utf8               indexOf\n+  #177 = Utf8               (Ljava/lang/String;)I\n+  #178 = Methodref          #173.#179     // java/lang/String.substring:(II)Ljava/lang/String;\n+  #179 = NameAndType        #180:#181     // substring:(II)Ljava/lang/String;\n+  #180 = Utf8               substring\n+  #181 = Utf8               (II)Ljava/lang/String;\n+  #182 = Methodref          #173.#183     // java/lang/String.trim:()Ljava/lang/String;\n+  #183 = NameAndType        #184:#75      // trim:()Ljava/lang/String;\n+  #184 = Utf8               trim\n+  #185 = Methodref          #173.#101     // java/lang/String.isEmpty:()Z\n+  #186 = Methodref          #2.#187       // org/apache/commons/lang3/exception/ExceptionUtils.getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+  #187 = NameAndType        #188:#189     // getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+  #188 = Utf8               getStackFrames\n+  #189 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #190 = Class              #191          // java/io/StringWriter\n+  #191 = Utf8               java/io/StringWriter\n+  #192 = Methodref          #190.#79      // java/io/StringWriter.\"<init>\":()V\n+  #193 = Class              #194          // java/io/PrintWriter\n+  #194 = Utf8               java/io/PrintWriter\n+  #195 = Methodref          #193.#196     // java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+  #196 = NameAndType        #80:#197      // \"<init>\":(Ljava/io/Writer;Z)V\n+  #197 = Utf8               (Ljava/io/Writer;Z)V\n+  #198 = Methodref          #8.#199       // java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n+  #199 = NameAndType        #200:#201     // printStackTrace:(Ljava/io/PrintWriter;)V\n+  #200 = Utf8               printStackTrace\n+  #201 = Utf8               (Ljava/io/PrintWriter;)V\n+  #202 = Methodref          #190.#203     // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+  #203 = NameAndType        #204:#205     // getBuffer:()Ljava/lang/StringBuffer;\n+  #204 = Utf8               getBuffer\n+  #205 = Utf8               ()Ljava/lang/StringBuffer;\n+  #206 = Methodref          #207.#93      // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+  #207 = Class              #208          // java/lang/StringBuffer\n+  #208 = Utf8               java/lang/StringBuffer\n+  #209 = InterfaceMethodref #100.#210     // java/util/List.contains:(Ljava/lang/Object;)Z\n+  #210 = NameAndType        #211:#141     // contains:(Ljava/lang/Object;)Z\n+  #211 = Utf8               contains\n+  #212 = Fieldref           #56.#213      // org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+  #213 = NameAndType        #214:#215     // EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+  #214 = Utf8               EMPTY_THROWABLE_ARRAY\n+  #215 = Utf8               [Ljava/lang/Throwable;\n+  #216 = Class              #215          // \"[Ljava/lang/Throwable;\"\n+  #217 = Class              #218          // java/lang/reflect/UndeclaredThrowableException\n+  #218 = Utf8               java/lang/reflect/UndeclaredThrowableException\n+  #219 = Methodref          #26.#220      // java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+  #220 = NameAndType        #221:#141     // isInstance:(Ljava/lang/Object;)Z\n+  #221 = Utf8               isInstance\n+  #222 = Methodref          #21.#223      // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #223 = NameAndType        #224:#141     // equals:(Ljava/lang/Object;)Z\n+  #224 = Utf8               equals\n+  #225 = Methodref          #2.#226       // org/apache/commons/lang3/exception/ExceptionUtils.indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #226 = NameAndType        #176:#227     // indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #227 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+  #228 = Fieldref           #155.#229     // java/lang/System.err:Ljava/io/PrintStream;\n+  #229 = NameAndType        #230:#231     // err:Ljava/io/PrintStream;\n+  #230 = Utf8               err\n+  #231 = Utf8               Ljava/io/PrintStream;\n+  #232 = Methodref          #2.#233       // org/apache/commons/lang3/exception/ExceptionUtils.printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #233 = NameAndType        #234:#235     // printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #234 = Utf8               printRootCauseStackTrace\n+  #235 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+  #236 = String             #237          // printStream\n+  #237 = Utf8               printStream\n+  #238 = Methodref          #239.#240     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #239 = Class              #241          // java/util/Objects\n+  #240 = NameAndType        #242:#243     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #241 = Utf8               java/util/Objects\n+  #242 = Utf8               requireNonNull\n+  #243 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #244 = Methodref          #2.#245       // org/apache/commons/lang3/exception/ExceptionUtils.getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #245 = NameAndType        #246:#247     // getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #246 = Utf8               getRootCauseStackTrace\n+  #247 = Utf8               (Ljava/lang/Throwable;)[Ljava/lang/String;\n+  #248 = Methodref          #249.#250     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+  #249 = Class              #251          // java/io/PrintStream\n+  #250 = NameAndType        #252:#253     // println:(Ljava/lang/String;)V\n+  #251 = Utf8               java/io/PrintStream\n+  #252 = Utf8               println\n+  #253 = Utf8               (Ljava/lang/String;)V\n+  #254 = Methodref          #249.#255     // java/io/PrintStream.flush:()V\n+  #255 = NameAndType        #256:#81      // flush:()V\n+  #256 = Utf8               flush\n+  #257 = String             #258          // printWriter\n+  #258 = Utf8               printWriter\n+  #259 = Methodref          #193.#250     // java/io/PrintWriter.println:(Ljava/lang/String;)V\n+  #260 = Methodref          #193.#255     // java/io/PrintWriter.flush:()V\n+  #261 = String             #262          // The List must not be null\n+  #262 = Utf8               The List must not be null\n+  #263 = Methodref          #51.#264      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #264 = NameAndType        #80:#253      // \"<init>\":(Ljava/lang/String;)V\n+  #265 = Methodref          #173.#223     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #266 = InterfaceMethodref #100.#267     // java/util/List.remove:(I)Ljava/lang/Object;\n+  #267 = NameAndType        #268:#112     // remove:(I)Ljava/lang/Object;\n+  #268 = Utf8               remove\n+  #269 = Methodref          #2.#270       // org/apache/commons/lang3/exception/ExceptionUtils.typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #270 = NameAndType        #271:#272     // typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #271 = Utf8               typeErasure\n+  #272 = Utf8               (Ljava/lang/Throwable;)Ljava/lang/Object;\n+  #273 = Methodref          #26.#274      // java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #274 = NameAndType        #275:#276     // cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #275 = Utf8               cast\n+  #276 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #277 = Methodref          #2.#278       // org/apache/commons/lang3/exception/ExceptionUtils.throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #278 = NameAndType        #279:#280     // throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #279 = Utf8               throwableOf\n+  #280 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+  #281 = Class              #282          // java/lang/RuntimeException\n+  #282 = Utf8               java/lang/RuntimeException\n+  #283 = Class              #284          // java/lang/Error\n+  #284 = Utf8               java/lang/Error\n+  #285 = Methodref          #217.#286     // java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+  #286 = NameAndType        #80:#287      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #287 = Utf8               (Ljava/lang/Throwable;)V\n+  #288 = Methodref          #21.#79       // java/lang/Object.\"<init>\":()V\n+  #289 = String             #5            // getCause\n+  #290 = String             #291          // getNextException\n+  #291 = Utf8               getNextException\n+  #292 = String             #293          // getTargetException\n+  #293 = Utf8               getTargetException\n+  #294 = String             #295          // getException\n+  #295 = Utf8               getException\n+  #296 = String             #297          // getSourceException\n+  #297 = Utf8               getSourceException\n+  #298 = String             #115          // getRootCause\n+  #299 = String             #300          // getCausedByException\n+  #300 = Utf8               getCausedByException\n+  #301 = String             #302          // getNested\n+  #302 = Utf8               getNested\n+  #303 = String             #304          // getLinkedException\n+  #304 = Utf8               getLinkedException\n+  #305 = String             #306          // getNestedException\n+  #306 = Utf8               getNestedException\n+  #307 = String             #308          // getLinkedCause\n+  #308 = Utf8               getLinkedCause\n+  #309 = String             #310          // getThrowable\n+  #310 = Utf8               getThrowable\n+  #311 = Utf8               NOT_FOUND\n+  #312 = Utf8               I\n+  #313 = Utf8               ConstantValue\n+  #314 = Integer            -1\n+  #315 = Utf8               WRAPPED_MARKER\n+  #316 = Utf8               Ljava/lang/String;\n+  #317 = Utf8               Code\n+  #318 = Utf8               LineNumberTable\n+  #319 = Utf8               Deprecated\n+  #320 = Utf8               RuntimeVisibleAnnotations\n+  #321 = Utf8               Ljava/lang/Deprecated;\n+  #322 = Utf8               StackMapTable\n+  #323 = Class              #324          // java/lang/Exception\n+  #324 = Utf8               java/lang/Exception\n+  #325 = Utf8               getDefaultCauseMethodNames\n+  #326 = Utf8               ()[Ljava/lang/String;\n+  #327 = Utf8               getRootCauseMessage\n+  #328 = Utf8               Signature\n+  #329 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+  #330 = Utf8               getThrowableCount\n+  #331 = Utf8               (Ljava/lang/Throwable;)I\n+  #332 = Utf8               (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+  #333 = Utf8               hasCause\n+  #334 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n+  #335 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+  #336 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n+  #337 = Utf8               indexOfThrowable\n+  #338 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)I\n+  #339 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+  #340 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n+  #341 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+  #342 = Utf8               indexOfType\n+  #343 = Utf8               (Ljava/lang/Throwable;Ljava/io/PrintWriter;)V\n+  #344 = Utf8               (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+  #345 = Utf8               rethrow\n+  #346 = Utf8               <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+  #347 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n+  #348 = Utf8               throwableOfThrowable\n+  #349 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n+  #350 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+  #351 = Utf8               (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n+  #352 = Utf8               <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+  #353 = Utf8               throwableOfType\n+  #354 = Utf8               Exceptions\n+  #355 = Utf8               <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+  #356 = Utf8               wrapAndThrow\n+  #357 = Utf8               <clinit>\n+  #358 = Utf8               SourceFile\n+  #359 = Utf8               ExceptionUtils.java\n {\n   private static final int NOT_FOUND = -1;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   private static final java.lang.String[] CAUSE_METHOD_NAMES;\n@@ -391,36 +391,36 @@\n          1: aconst_null\n          2: invokestatic  #1                  // Method getCause:(Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n          5: areturn\n       LineNumberTable:\n         line 101: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #122()\n+      0: #321()\n         java.lang.Deprecated\n \n   public static java.lang.Throwable getCause(java.lang.Throwable, java.lang.String[]);\n     descriptor: (Ljava/lang/Throwable;[Ljava/lang/String;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: ifnonnull     25\n         10: aload_0\n-        11: invokevirtual #2                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+        11: invokevirtual #7                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n         14: astore_2\n         15: aload_2\n         16: ifnull        21\n         19: aload_2\n         20: areturn\n-        21: getstatic     #3                  // Field CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+        21: getstatic     #12                 // Field CAUSE_METHOD_NAMES:[Ljava/lang/String;\n         24: astore_1\n         25: aload_1\n         26: astore_2\n         27: aload_2\n         28: arraylength\n         29: istore_3\n         30: iconst_0\n@@ -432,15 +432,15 @@\n         40: iload         4\n         42: aaload\n         43: astore        5\n         45: aload         5\n         47: ifnull        66\n         50: aload_0\n         51: aload         5\n-        53: invokestatic  #4                  // Method getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n+        53: invokestatic  #16                 // Method getCauseUsingMethodName:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n         56: astore        6\n         58: aload         6\n         60: ifnull        66\n         63: aload         6\n         65: areturn\n         66: iinc          4, 1\n         69: goto          33\n@@ -472,46 +472,46 @@\n           offset_delta = 7\n           locals = [ class \"[Ljava/lang/String;\", int, int ]\n         frame_type = 32 /* same */\n         frame_type = 248 /* chop */\n           offset_delta = 5\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #122()\n+      0: #321()\n         java.lang.Deprecated\n \n   private static java.lang.Throwable getCauseUsingMethodName(java.lang.Throwable, java.lang.String);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/Throwable;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aconst_null\n          1: astore_2\n          2: aload_0\n-         3: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+         3: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n          6: aload_1\n          7: iconst_0\n-         8: anewarray     #6                  // class java/lang/Class\n-        11: invokevirtual #7                  // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n+         8: anewarray     #26                 // class java/lang/Class\n+        11: invokevirtual #28                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;\n         14: astore_2\n         15: goto          19\n         18: astore_3\n         19: aload_2\n         20: ifnull        49\n-        23: ldc           #10                 // class java/lang/Throwable\n+        23: ldc           #8                  // class java/lang/Throwable\n         25: aload_2\n-        26: invokevirtual #11                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n-        29: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+        26: invokevirtual #36                 // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;\n+        29: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n         32: ifeq          49\n         35: aload_2\n         36: aload_0\n         37: iconst_0\n-        38: anewarray     #13                 // class java/lang/Object\n-        41: invokevirtual #14                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n-        44: checkcast     #10                 // class java/lang/Throwable\n+        38: anewarray     #21                 // class java/lang/Object\n+        41: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;\n+        44: checkcast     #8                  // class java/lang/Throwable\n         47: areturn\n         48: astore_3\n         49: aconst_null\n         50: areturn\n       Exception table:\n          from    to  target type\n              2    15    18   Class java/lang/NoSuchMethodException\n@@ -539,52 +539,52 @@\n         frame_type = 0 /* same */\n \n   public static java.lang.String[] getDefaultCauseMethodNames();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #3                  // Field CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-         3: invokestatic  #18                 // Method org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n-         6: checkcast     #19                 // class \"[Ljava/lang/String;\"\n+         0: getstatic     #12                 // Field CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+         3: invokestatic  #55                 // Method org/apache/commons/lang3/ArrayUtils.clone:([Ljava/lang/Object;)[Ljava/lang/Object;\n+         6: checkcast     #61                 // class \"[Ljava/lang/String;\"\n          9: areturn\n       LineNumberTable:\n         line 182: 0\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #122()\n+      0: #321()\n         java.lang.Deprecated\n \n   public static java.lang.String getMessage(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     7\n-         4: ldc           #21                 // String\n+         4: ldc           #64                 // String\n          6: areturn\n          7: aload_0\n          8: aconst_null\n-         9: invokestatic  #22                 // Method org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+         9: invokestatic  #66                 // Method org/apache/commons/lang3/ClassUtils.getShortClassName:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n         12: astore_1\n         13: aload_0\n-        14: invokevirtual #23                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;\n+        14: invokevirtual #72                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;\n         17: astore_2\n-        18: new           #24                 // class java/lang/StringBuilder\n+        18: new           #76                 // class java/lang/StringBuilder\n         21: dup\n-        22: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        22: invokespecial #78                 // Method java/lang/StringBuilder.\"<init>\":()V\n         25: aload_1\n-        26: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        29: ldc           #27                 // String :\n-        31: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        26: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: ldc           #86                 // String :\n+        31: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         34: aload_2\n-        35: invokestatic  #28                 // Method org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n-        38: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        35: invokestatic  #88                 // Method org/apache/commons/lang3/StringUtils.defaultString:(Ljava/lang/String;)Ljava/lang/String;\n+        38: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         44: areturn\n       LineNumberTable:\n         line 197: 0\n         line 198: 4\n         line 200: 7\n         line 201: 13\n         line 202: 18\n@@ -593,28 +593,28 @@\n \n   public static java.lang.Throwable getRootCause(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #30                 // Method getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+         1: invokestatic  #95                 // Method getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n          4: astore_1\n          5: aload_1\n-         6: invokeinterface #31,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n+         6: invokeinterface #99,  1           // InterfaceMethod java/util/List.isEmpty:()Z\n         11: ifeq          18\n         14: aconst_null\n         15: goto          35\n         18: aload_1\n         19: aload_1\n-        20: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I\n+        20: invokeinterface #105,  1          // InterfaceMethod java/util/List.size:()I\n         25: iconst_1\n         26: isub\n-        27: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        32: checkcast     #10                 // class java/lang/Throwable\n+        27: invokeinterface #109,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        32: checkcast     #8                  // class java/lang/Throwable\n         35: areturn\n       LineNumberTable:\n         line 223: 0\n         line 224: 5\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 18\n@@ -624,24 +624,24 @@\n \n   public static java.lang.String getRootCauseMessage(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #34                 // Method getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n+         1: invokestatic  #113                // Method getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;\n          4: astore_1\n          5: aload_1\n          6: ifnonnull     13\n          9: aload_0\n         10: goto          14\n         13: aload_1\n         14: astore_1\n         15: aload_1\n-        16: invokestatic  #35                 // Method getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n+        16: invokestatic  #117                // Method getMessage:(Ljava/lang/Throwable;)Ljava/lang/String;\n         19: areturn\n       LineNumberTable:\n         line 239: 0\n         line 240: 5\n         line 241: 15\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n@@ -653,32 +653,32 @@\n   public static java.lang.String[] getRootCauseStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)[Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=7, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #36                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         4: getstatic     #120                // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n          7: areturn\n          8: aload_0\n-         9: invokestatic  #37                 // Method getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+         9: invokestatic  #123                // Method getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n         12: astore_1\n         13: aload_1\n         14: arraylength\n         15: istore_2\n-        16: new           #38                 // class java/util/ArrayList\n+        16: new           #127                // class java/util/ArrayList\n         19: dup\n-        20: invokespecial #39                 // Method java/util/ArrayList.\"<init>\":()V\n+        20: invokespecial #129                // Method java/util/ArrayList.\"<init>\":()V\n         23: astore_3\n         24: aload_1\n         25: iload_2\n         26: iconst_1\n         27: isub\n         28: aaload\n-        29: invokestatic  #40                 // Method getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+        29: invokestatic  #130                // Method getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n         32: astore        4\n         34: iload_2\n         35: istore        5\n         37: iinc          5, -1\n         40: iload         5\n         42: iflt          141\n         45: aload         4\n@@ -686,55 +686,55 @@\n         49: iload         5\n         51: ifeq          72\n         54: aload_1\n         55: iload         5\n         57: iconst_1\n         58: isub\n         59: aaload\n-        60: invokestatic  #40                 // Method getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n+        60: invokestatic  #130                // Method getStackFrameList:(Ljava/lang/Throwable;)Ljava/util/List;\n         63: astore        4\n         65: aload         6\n         67: aload         4\n-        69: invokestatic  #41                 // Method removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n+        69: invokestatic  #133                // Method removeCommonFrames:(Ljava/util/List;Ljava/util/List;)V\n         72: iload         5\n         74: iload_2\n         75: iconst_1\n         76: isub\n         77: if_icmpne     97\n         80: aload_3\n         81: aload_1\n         82: iload         5\n         84: aaload\n-        85: invokevirtual #42                 // Method java/lang/Throwable.toString:()Ljava/lang/String;\n-        88: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        85: invokevirtual #137                // Method java/lang/Throwable.toString:()Ljava/lang/String;\n+        88: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         93: pop\n         94: goto          129\n         97: aload_3\n-        98: new           #24                 // class java/lang/StringBuilder\n+        98: new           #76                 // class java/lang/StringBuilder\n        101: dup\n-       102: invokespecial #25                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       105: ldc           #45                 // String  [wrapped]\n-       107: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       102: invokespecial #78                 // Method java/lang/StringBuilder.\"<init>\":()V\n+       105: ldc           #142                // String  [wrapped]\n+       107: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n        110: aload_1\n        111: iload         5\n        113: aaload\n-       114: invokevirtual #42                 // Method java/lang/Throwable.toString:()Ljava/lang/String;\n-       117: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       120: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       123: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       114: invokevirtual #137                // Method java/lang/Throwable.toString:()Ljava/lang/String;\n+       117: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       120: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       123: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n        128: pop\n        129: aload_3\n        130: aload         6\n-       132: invokeinterface #46,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n+       132: invokeinterface #144,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z\n        137: pop\n        138: goto          37\n        141: aload_3\n-       142: getstatic     #36                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-       145: invokeinterface #47,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       150: checkcast     #19                 // class \"[Ljava/lang/String;\"\n+       142: getstatic     #120                // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+       145: invokeinterface #148,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       150: checkcast     #61                 // class \"[Ljava/lang/String;\"\n        153: areturn\n       LineNumberTable:\n         line 259: 0\n         line 260: 4\n         line 262: 8\n         line 263: 13\n         line 264: 16\n@@ -766,55 +766,55 @@\n \n   static java.util.List<java.lang.String> getStackFrameList(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/util/List;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=8, args_size=1\n          0: aload_0\n-         1: invokestatic  #48                 // Method getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+         1: invokestatic  #151                // Method getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n          4: astore_1\n-         5: invokestatic  #49                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+         5: invokestatic  #154                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n          8: astore_2\n-         9: new           #50                 // class java/util/StringTokenizer\n+         9: new           #159                // class java/util/StringTokenizer\n         12: dup\n         13: aload_1\n         14: aload_2\n-        15: invokespecial #51                 // Method java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        15: invokespecial #161                // Method java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         18: astore_3\n-        19: new           #38                 // class java/util/ArrayList\n+        19: new           #127                // class java/util/ArrayList\n         22: dup\n-        23: invokespecial #39                 // Method java/util/ArrayList.\"<init>\":()V\n+        23: invokespecial #129                // Method java/util/ArrayList.\"<init>\":()V\n         26: astore        4\n         28: iconst_0\n         29: istore        5\n         31: aload_3\n-        32: invokevirtual #52                 // Method java/util/StringTokenizer.hasMoreTokens:()Z\n+        32: invokevirtual #164                // Method java/util/StringTokenizer.hasMoreTokens:()Z\n         35: ifeq          103\n         38: aload_3\n-        39: invokevirtual #53                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n+        39: invokevirtual #167                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n         42: astore        6\n         44: aload         6\n-        46: ldc           #54                 // String at\n-        48: invokevirtual #55                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        46: ldc           #170                // String at\n+        48: invokevirtual #172                // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n         51: istore        7\n         53: iload         7\n         55: iconst_m1\n         56: if_icmpeq     92\n         59: aload         6\n         61: iconst_0\n         62: iload         7\n-        64: invokevirtual #56                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-        67: invokevirtual #57                 // Method java/lang/String.trim:()Ljava/lang/String;\n-        70: invokevirtual #58                 // Method java/lang/String.isEmpty:()Z\n+        64: invokevirtual #178                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        67: invokevirtual #182                // Method java/lang/String.trim:()Ljava/lang/String;\n+        70: invokevirtual #185                // Method java/lang/String.isEmpty:()Z\n         73: ifeq          92\n         76: iconst_1\n         77: istore        5\n         79: aload         4\n         81: aload         6\n-        83: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        83: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         88: pop\n         89: goto          100\n         92: iload         5\n         94: ifeq          100\n         97: goto          103\n        100: goto          31\n        103: aload         4\n@@ -842,46 +842,46 @@\n           stack = []\n         frame_type = 253 /* append */\n           offset_delta = 60\n           locals = [ class java/lang/String, int ]\n         frame_type = 249 /* chop */\n           offset_delta = 7\n         frame_type = 2 /* same */\n-    Signature: #141                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n+    Signature: #329                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/String;>;\n \n   static java.lang.String[] getStackFrames(java.lang.String);\n     descriptor: (Ljava/lang/String;)[Ljava/lang/String;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=4, args_size=1\n-         0: invokestatic  #49                 // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n+         0: invokestatic  #154                // Method java/lang/System.lineSeparator:()Ljava/lang/String;\n          3: astore_1\n-         4: new           #50                 // class java/util/StringTokenizer\n+         4: new           #159                // class java/util/StringTokenizer\n          7: dup\n          8: aload_0\n          9: aload_1\n-        10: invokespecial #51                 // Method java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n+        10: invokespecial #161                // Method java/util/StringTokenizer.\"<init>\":(Ljava/lang/String;Ljava/lang/String;)V\n         13: astore_2\n-        14: new           #38                 // class java/util/ArrayList\n+        14: new           #127                // class java/util/ArrayList\n         17: dup\n-        18: invokespecial #39                 // Method java/util/ArrayList.\"<init>\":()V\n+        18: invokespecial #129                // Method java/util/ArrayList.\"<init>\":()V\n         21: astore_3\n         22: aload_2\n-        23: invokevirtual #52                 // Method java/util/StringTokenizer.hasMoreTokens:()Z\n+        23: invokevirtual #164                // Method java/util/StringTokenizer.hasMoreTokens:()Z\n         26: ifeq          43\n         29: aload_3\n         30: aload_2\n-        31: invokevirtual #53                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n-        34: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        31: invokevirtual #167                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;\n+        34: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         39: pop\n         40: goto          22\n         43: aload_3\n-        44: getstatic     #36                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-        47: invokeinterface #47,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        52: checkcast     #19                 // class \"[Ljava/lang/String;\"\n+        44: getstatic     #120                // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+        47: invokeinterface #148,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        52: checkcast     #61                 // class \"[Ljava/lang/String;\"\n         55: areturn\n       LineNumberTable:\n         line 324: 0\n         line 325: 4\n         line 326: 14\n         line 327: 22\n         line 328: 29\n@@ -895,88 +895,88 @@\n   public static java.lang.String[] getStackFrames(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)[Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     8\n-         4: getstatic     #36                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         4: getstatic     #120                // Field org/apache/commons/lang3/ArrayUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n          7: areturn\n          8: aload_0\n-         9: invokestatic  #48                 // Method getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n-        12: invokestatic  #59                 // Method getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n+         9: invokestatic  #151                // Method getStackTrace:(Ljava/lang/Throwable;)Ljava/lang/String;\n+        12: invokestatic  #186                // Method getStackFrames:(Ljava/lang/String;)[Ljava/lang/String;\n         15: areturn\n       LineNumberTable:\n         line 347: 0\n         line 348: 4\n         line 350: 8\n       StackMapTable: number_of_entries = 1\n         frame_type = 8 /* same */\n \n   public static java.lang.String getStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=1\n-         0: new           #60                 // class java/io/StringWriter\n+         0: new           #190                // class java/io/StringWriter\n          3: dup\n-         4: invokespecial #61                 // Method java/io/StringWriter.\"<init>\":()V\n+         4: invokespecial #192                // Method java/io/StringWriter.\"<init>\":()V\n          7: astore_1\n-         8: new           #62                 // class java/io/PrintWriter\n+         8: new           #193                // class java/io/PrintWriter\n         11: dup\n         12: aload_1\n         13: iconst_1\n-        14: invokespecial #63                 // Method java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n+        14: invokespecial #195                // Method java/io/PrintWriter.\"<init>\":(Ljava/io/Writer;Z)V\n         17: astore_2\n         18: aload_0\n         19: aload_2\n-        20: invokevirtual #64                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n+        20: invokevirtual #198                // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V\n         23: aload_1\n-        24: invokevirtual #65                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-        27: invokevirtual #66                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n+        24: invokevirtual #202                // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+        27: invokevirtual #206                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n         30: areturn\n       LineNumberTable:\n         line 367: 0\n         line 368: 8\n         line 369: 18\n         line 370: 23\n \n   public static int getThrowableCount(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #30                 // Method getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n-         4: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I\n+         1: invokestatic  #95                 // Method getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+         4: invokeinterface #105,  1          // InterfaceMethod java/util/List.size:()I\n          9: ireturn\n       LineNumberTable:\n         line 391: 0\n \n   public static java.util.List<java.lang.Throwable> getThrowableList(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/util/List;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n-         0: new           #38                 // class java/util/ArrayList\n+         0: new           #127                // class java/util/ArrayList\n          3: dup\n-         4: invokespecial #39                 // Method java/util/ArrayList.\"<init>\":()V\n+         4: invokespecial #129                // Method java/util/ArrayList.\"<init>\":()V\n          7: astore_1\n          8: aload_0\n          9: ifnull        38\n         12: aload_1\n         13: aload_0\n-        14: invokeinterface #67,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z\n+        14: invokeinterface #209,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z\n         19: ifne          38\n         22: aload_1\n         23: aload_0\n-        24: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+        24: invokeinterface #138,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n         29: pop\n         30: aload_0\n-        31: invokevirtual #2                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+        31: invokevirtual #7                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n         34: astore_0\n         35: goto          8\n         38: aload_1\n         39: areturn\n       LineNumberTable:\n         line 414: 0\n         line 415: 8\n@@ -984,55 +984,55 @@\n         line 417: 30\n         line 419: 38\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 8\n           locals = [ class java/util/List ]\n         frame_type = 29 /* same */\n-    Signature: #148                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n+    Signature: #332                         // (Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;\n \n   public static java.lang.Throwable[] getThrowables(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #30                 // Method getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n+         1: invokestatic  #95                 // Method getThrowableList:(Ljava/lang/Throwable;)Ljava/util/List;\n          4: astore_1\n          5: aload_1\n-         6: getstatic     #68                 // Field org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n-         9: invokeinterface #47,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-        14: checkcast     #69                 // class \"[Ljava/lang/Throwable;\"\n+         6: getstatic     #212                // Field org/apache/commons/lang3/ArrayUtils.EMPTY_THROWABLE_ARRAY:[Ljava/lang/Throwable;\n+         9: invokeinterface #148,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+        14: checkcast     #216                // class \"[Ljava/lang/Throwable;\"\n         17: areturn\n       LineNumberTable:\n         line 442: 0\n         line 443: 5\n \n   public static boolean hasCause(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: instanceof    #70                 // class java/lang/reflect/UndeclaredThrowableException\n+         1: instanceof    #217                // class java/lang/reflect/UndeclaredThrowableException\n          4: ifeq          12\n          7: aload_0\n-         8: invokevirtual #2                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n+         8: invokevirtual #7                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;\n         11: astore_0\n         12: aload_1\n         13: aload_0\n-        14: invokevirtual #71                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n+        14: invokevirtual #219                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z\n         17: ireturn\n       LineNumberTable:\n         line 461: 0\n         line 462: 7\n         line 464: 12\n       StackMapTable: number_of_entries = 1\n         frame_type = 12 /* same */\n-    Signature: #153                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n+    Signature: #335                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)Z\n \n   private static int indexOf(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -1042,15 +1042,15 @@\n          8: iconst_m1\n          9: ireturn\n         10: iload_2\n         11: ifge          16\n         14: iconst_0\n         15: istore_2\n         16: aload_0\n-        17: invokestatic  #37                 // Method getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+        17: invokestatic  #123                // Method getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n         20: astore        4\n         22: iload_2\n         23: aload         4\n         25: arraylength\n         26: if_icmplt     31\n         29: iconst_m1\n         30: ireturn\n@@ -1062,16 +1062,16 @@\n         40: aload         4\n         42: arraylength\n         43: if_icmpge     70\n         46: aload_1\n         47: aload         4\n         49: iload         5\n         51: aaload\n-        52: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        55: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+        52: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        55: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n         58: ifeq          64\n         61: iload         5\n         63: ireturn\n         64: iinc          5, 1\n         67: goto          38\n         70: goto          108\n         73: iload_2\n@@ -1080,16 +1080,16 @@\n         78: aload         4\n         80: arraylength\n         81: if_icmpge     108\n         84: aload_1\n         85: aload         4\n         87: iload         5\n         89: aaload\n-        90: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        93: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        90: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        93: invokevirtual #222                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         96: ifeq          102\n         99: iload         5\n        101: ireturn\n        102: iinc          5, 1\n        105: goto          76\n        108: iconst_m1\n        109: ireturn\n@@ -1127,103 +1127,103 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 25 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #156                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n+    Signature: #336                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;IZ)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_0\n-         4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+         4: invokestatic  #225                // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 520: 0\n-    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+    Signature: #339                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n \n   public static int indexOfThrowable(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n-         4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+         4: invokestatic  #225                // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 543: 0\n-    Signature: #161                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+    Signature: #341                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_1\n-         4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+         4: invokestatic  #225                // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 562: 0\n-    Signature: #159                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n+    Signature: #339                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;)I\n \n   public static int indexOfType(java.lang.Throwable, java.lang.Class<? extends java.lang.Throwable>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)I\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_1\n-         4: invokestatic  #73                 // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n+         4: invokestatic  #225                // Method indexOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)I\n          7: ireturn\n       LineNumberTable:\n         line 586: 0\n-    Signature: #161                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n+    Signature: #341                         // (Ljava/lang/Throwable;Ljava/lang/Class<+Ljava/lang/Throwable;>;I)I\n \n   public static void printRootCauseStackTrace(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #74                 // Field java/lang/System.err:Ljava/io/PrintStream;\n-         4: invokestatic  #75                 // Method printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n+         1: getstatic     #228                // Field java/lang/System.err:Ljava/io/PrintStream;\n+         4: invokestatic  #232                // Method printRootCauseStackTrace:(Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n          7: return\n       LineNumberTable:\n         line 609: 0\n         line 610: 7\n \n   public static void printRootCauseStackTrace(java.lang.Throwable, java.io.PrintStream);\n     descriptor: (Ljava/lang/Throwable;Ljava/io/PrintStream;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n          1: ifnonnull     5\n          4: return\n          5: aload_1\n-         6: ldc           #76                 // String printStream\n-         8: invokestatic  #77                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         6: ldc           #236                // String printStream\n+         8: invokestatic  #238                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         11: pop\n         12: aload_0\n-        13: invokestatic  #78                 // Method getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+        13: invokestatic  #244                // Method getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n         16: astore_2\n         17: aload_2\n         18: astore_3\n         19: aload_3\n         20: arraylength\n         21: istore        4\n         23: iconst_0\n@@ -1233,19 +1233,19 @@\n         30: if_icmpge     51\n         33: aload_3\n         34: iload         5\n         36: aaload\n         37: astore        6\n         39: aload_1\n         40: aload         6\n-        42: invokevirtual #79                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+        42: invokevirtual #248                // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         45: iinc          5, 1\n         48: goto          26\n         51: aload_1\n-        52: invokevirtual #80                 // Method java/io/PrintStream.flush:()V\n+        52: invokevirtual #254                // Method java/io/PrintStream.flush:()V\n         55: return\n       LineNumberTable:\n         line 633: 0\n         line 634: 4\n         line 636: 5\n         line 637: 12\n         line 638: 17\n@@ -1267,149 +1267,149 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n          1: ifnonnull     5\n          4: return\n          5: aload_1\n-         6: ldc           #81                 // String printWriter\n-         8: invokestatic  #77                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: pop\n-        12: aload_0\n-        13: invokestatic  #78                 // Method getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n-        16: astore_2\n-        17: aload_2\n-        18: astore_3\n-        19: aload_3\n-        20: arraylength\n-        21: istore        4\n-        23: iconst_0\n-        24: istore        5\n-        26: iload         5\n-        28: iload         4\n-        30: if_icmpge     51\n-        33: aload_3\n-        34: iload         5\n-        36: aaload\n-        37: astore        6\n-        39: aload_1\n-        40: aload         6\n-        42: invokevirtual #82                 // Method java/io/PrintWriter.println:(Ljava/lang/String;)V\n-        45: iinc          5, 1\n-        48: goto          26\n-        51: aload_1\n-        52: invokevirtual #83                 // Method java/io/PrintWriter.flush:()V\n-        55: return\n+         6: ldc_w         #257                // String printWriter\n+         9: invokestatic  #238                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        12: pop\n+        13: aload_0\n+        14: invokestatic  #244                // Method getRootCauseStackTrace:(Ljava/lang/Throwable;)[Ljava/lang/String;\n+        17: astore_2\n+        18: aload_2\n+        19: astore_3\n+        20: aload_3\n+        21: arraylength\n+        22: istore        4\n+        24: iconst_0\n+        25: istore        5\n+        27: iload         5\n+        29: iload         4\n+        31: if_icmpge     52\n+        34: aload_3\n+        35: iload         5\n+        37: aaload\n+        38: astore        6\n+        40: aload_1\n+        41: aload         6\n+        43: invokevirtual #259                // Method java/io/PrintWriter.println:(Ljava/lang/String;)V\n+        46: iinc          5, 1\n+        49: goto          27\n+        52: aload_1\n+        53: invokevirtual #260                // Method java/io/PrintWriter.flush:()V\n+        56: return\n       LineNumberTable:\n         line 665: 0\n         line 666: 4\n         line 668: 5\n-        line 669: 12\n-        line 670: 17\n-        line 671: 39\n-        line 670: 45\n-        line 673: 51\n-        line 674: 55\n+        line 669: 13\n+        line 670: 18\n+        line 671: 40\n+        line 670: 46\n+        line 673: 52\n+        line 674: 56\n       StackMapTable: number_of_entries = 3\n         frame_type = 5 /* same */\n         frame_type = 255 /* full_frame */\n-          offset_delta = 20\n+          offset_delta = 21\n           locals = [ class java/lang/Throwable, class java/io/PrintWriter, class \"[Ljava/lang/String;\", class \"[Ljava/lang/String;\", int, int ]\n           stack = []\n         frame_type = 248 /* chop */\n           offset_delta = 24\n \n   public static void removeCommonFrames(java.util.List<java.lang.String>, java.util.List<java.lang.String>);\n     descriptor: (Ljava/util/List;Ljava/util/List;)V\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_0\n          1: ifnull        8\n          4: aload_1\n-         5: ifnonnull     18\n-         8: new           #16                 // class java/lang/IllegalArgumentException\n+         5: ifnonnull     19\n+         8: new           #51                 // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #84                 // String The List must not be null\n-        14: invokespecial #85                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-        17: athrow\n-        18: aload_0\n-        19: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I\n-        24: iconst_1\n-        25: isub\n-        26: istore_2\n-        27: aload_1\n-        28: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I\n-        33: iconst_1\n-        34: isub\n-        35: istore_3\n-        36: iload_2\n-        37: iflt          95\n-        40: iload_3\n-        41: iflt          95\n-        44: aload_0\n-        45: iload_2\n-        46: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        51: checkcast     #86                 // class java/lang/String\n-        54: astore        4\n-        56: aload_1\n-        57: iload_3\n-        58: invokeinterface #33,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n-        63: checkcast     #86                 // class java/lang/String\n-        66: astore        5\n-        68: aload         4\n-        70: aload         5\n-        72: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n-        75: ifeq          86\n-        78: aload_0\n-        79: iload_2\n-        80: invokeinterface #88,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;\n-        85: pop\n-        86: iinc          2, -1\n-        89: iinc          3, -1\n-        92: goto          36\n-        95: return\n+        12: ldc_w         #261                // String The List must not be null\n+        15: invokespecial #263                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        18: athrow\n+        19: aload_0\n+        20: invokeinterface #105,  1          // InterfaceMethod java/util/List.size:()I\n+        25: iconst_1\n+        26: isub\n+        27: istore_2\n+        28: aload_1\n+        29: invokeinterface #105,  1          // InterfaceMethod java/util/List.size:()I\n+        34: iconst_1\n+        35: isub\n+        36: istore_3\n+        37: iload_2\n+        38: iflt          96\n+        41: iload_3\n+        42: iflt          96\n+        45: aload_0\n+        46: iload_2\n+        47: invokeinterface #109,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        52: checkcast     #173                // class java/lang/String\n+        55: astore        4\n+        57: aload_1\n+        58: iload_3\n+        59: invokeinterface #109,  2          // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;\n+        64: checkcast     #173                // class java/lang/String\n+        67: astore        5\n+        69: aload         4\n+        71: aload         5\n+        73: invokevirtual #265                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        76: ifeq          87\n+        79: aload_0\n+        80: iload_2\n+        81: invokeinterface #266,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;\n+        86: pop\n+        87: iinc          2, -1\n+        90: iinc          3, -1\n+        93: goto          37\n+        96: return\n       LineNumberTable:\n         line 685: 0\n         line 686: 8\n-        line 688: 18\n-        line 689: 27\n-        line 690: 36\n-        line 693: 44\n-        line 694: 56\n-        line 695: 68\n-        line 696: 78\n-        line 698: 86\n-        line 699: 89\n-        line 700: 92\n-        line 701: 95\n+        line 688: 19\n+        line 689: 28\n+        line 690: 37\n+        line 693: 45\n+        line 694: 57\n+        line 695: 69\n+        line 696: 79\n+        line 698: 87\n+        line 699: 90\n+        line 700: 93\n+        line 701: 96\n       StackMapTable: number_of_entries = 5\n         frame_type = 8 /* same */\n-        frame_type = 9 /* same */\n+        frame_type = 10 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 17\n           locals = [ int, int ]\n         frame_type = 253 /* append */\n           offset_delta = 49\n           locals = [ class java/lang/String, class java/lang/String ]\n         frame_type = 249 /* chop */\n           offset_delta = 8\n-    Signature: #170                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n+    Signature: #344                         // (Ljava/util/List<Ljava/lang/String;>;Ljava/util/List<Ljava/lang/String;>;)V\n \n   public static <R extends java.lang.Object> R rethrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #89                 // Method typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n+         1: invokestatic  #269                // Method typeErasure:(Ljava/lang/Throwable;)Ljava/lang/Object;\n          4: areturn\n       LineNumberTable:\n         line 760: 0\n-    Signature: #173                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #346                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   private static <T extends java.lang.Throwable> T throwableOf(java.lang.Throwable, java.lang.Class<T>, int, boolean);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=6, args_size=4\n          0: aload_0\n@@ -1419,15 +1419,15 @@\n          8: aconst_null\n          9: areturn\n         10: iload_2\n         11: ifge          16\n         14: iconst_0\n         15: istore_2\n         16: aload_0\n-        17: invokestatic  #37                 // Method getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n+        17: invokestatic  #123                // Method getThrowables:(Ljava/lang/Throwable;)[Ljava/lang/Throwable;\n         20: astore        4\n         22: iload_2\n         23: aload         4\n         25: arraylength\n         26: if_icmplt     31\n         29: aconst_null\n         30: areturn\n@@ -1439,46 +1439,46 @@\n         40: aload         4\n         42: arraylength\n         43: if_icmpge     80\n         46: aload_1\n         47: aload         4\n         49: iload         5\n         51: aaload\n-        52: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        55: invokevirtual #12                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n+        52: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        55: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z\n         58: ifeq          74\n         61: aload_1\n         62: aload         4\n         64: iload         5\n         66: aaload\n-        67: invokevirtual #90                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-        70: checkcast     #10                 // class java/lang/Throwable\n+        67: invokevirtual #273                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+        70: checkcast     #8                  // class java/lang/Throwable\n         73: areturn\n         74: iinc          5, 1\n         77: goto          38\n         80: goto          128\n         83: iload_2\n         84: istore        5\n         86: iload         5\n         88: aload         4\n         90: arraylength\n         91: if_icmpge     128\n         94: aload_1\n         95: aload         4\n         97: iload         5\n         99: aaload\n-       100: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-       103: invokevirtual #72                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+       100: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+       103: invokevirtual #222                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n        106: ifeq          122\n        109: aload_1\n        110: aload         4\n        112: iload         5\n        114: aaload\n-       115: invokevirtual #90                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n-       118: checkcast     #10                 // class java/lang/Throwable\n+       115: invokevirtual #273                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;\n+       118: checkcast     #8                  // class java/lang/Throwable\n        121: areturn\n        122: iinc          5, 1\n        125: goto          86\n        128: aconst_null\n        129: areturn\n       LineNumberTable:\n         line 776: 0\n@@ -1514,188 +1514,188 @@\n         frame_type = 2 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 2\n           locals = [ int ]\n         frame_type = 35 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n-    Signature: #176                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n+    Signature: #347                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;IZ)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfThrowable(java.lang.Throwable, java.lang.Class<T>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_0\n-         4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+         4: invokestatic  #277                // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 819: 0\n-    Signature: #179                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+    Signature: #350                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfThrowable(java.lang.Throwable, java.lang.Class<T>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_0\n-         4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+         4: invokestatic  #277                // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 844: 0\n-    Signature: #181                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+    Signature: #352                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfType(java.lang.Throwable, java.lang.Class<T>);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: iconst_1\n-         4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+         4: invokestatic  #277                // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 864: 0\n-    Signature: #179                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n+    Signature: #350                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;)TT;\n \n   public static <T extends java.lang.Throwable> T throwableOfType(java.lang.Throwable, java.lang.Class<T>, int);\n     descriptor: (Ljava/lang/Throwable;Ljava/lang/Class;I)Ljava/lang/Throwable;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iconst_1\n-         4: invokestatic  #91                 // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n+         4: invokestatic  #277                // Method throwableOf:(Ljava/lang/Throwable;Ljava/lang/Class;IZ)Ljava/lang/Throwable;\n          7: areturn\n       LineNumberTable:\n         line 889: 0\n-    Signature: #181                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n+    Signature: #352                         // <T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;Ljava/lang/Class<TT;>;I)TT;\n \n   private static <R extends java.lang.Object, T extends java.lang.Throwable> R typeErasure(java.lang.Throwable) throws T;\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: athrow\n       LineNumberTable:\n         line 900: 0\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #185                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n+    Signature: #355                         // <R:Ljava/lang/Object;T:Ljava/lang/Throwable;>(Ljava/lang/Throwable;)TR;^TT;\n \n   public static <R extends java.lang.Object> R wrapAndThrow(java.lang.Throwable);\n     descriptor: (Ljava/lang/Throwable;)Ljava/lang/Object;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: instanceof    #92                 // class java/lang/RuntimeException\n+         1: instanceof    #281                // class java/lang/RuntimeException\n          4: ifeq          12\n          7: aload_0\n-         8: checkcast     #92                 // class java/lang/RuntimeException\n+         8: checkcast     #281                // class java/lang/RuntimeException\n         11: athrow\n         12: aload_0\n-        13: instanceof    #93                 // class java/lang/Error\n+        13: instanceof    #283                // class java/lang/Error\n         16: ifeq          24\n         19: aload_0\n-        20: checkcast     #93                 // class java/lang/Error\n+        20: checkcast     #283                // class java/lang/Error\n         23: athrow\n-        24: new           #70                 // class java/lang/reflect/UndeclaredThrowableException\n+        24: new           #217                // class java/lang/reflect/UndeclaredThrowableException\n         27: dup\n         28: aload_0\n-        29: invokespecial #94                 // Method java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n+        29: invokespecial #285                // Method java/lang/reflect/UndeclaredThrowableException.\"<init>\":(Ljava/lang/Throwable;)V\n         32: athrow\n       LineNumberTable:\n         line 925: 0\n         line 926: 7\n         line 928: 12\n         line 929: 19\n         line 931: 24\n       StackMapTable: number_of_entries = 2\n         frame_type = 12 /* same */\n         frame_type = 11 /* same */\n-    Signature: #173                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n+    Signature: #346                         // <R:Ljava/lang/Object;>(Ljava/lang/Throwable;)TR;\n \n   public org.apache.commons.lang3.exception.ExceptionUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #95                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #288                // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 941: 0\n         line 942: 4\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=0, args_size=0\n          0: bipush        12\n-         2: anewarray     #86                 // class java/lang/String\n+         2: anewarray     #173                // class java/lang/String\n          5: dup\n          6: iconst_0\n-         7: ldc           #96                 // String getCause\n-         9: aastore\n-        10: dup\n-        11: iconst_1\n-        12: ldc           #97                 // String getNextException\n-        14: aastore\n-        15: dup\n-        16: iconst_2\n-        17: ldc           #98                 // String getTargetException\n-        19: aastore\n-        20: dup\n-        21: iconst_3\n-        22: ldc           #99                 // String getException\n-        24: aastore\n-        25: dup\n-        26: iconst_4\n-        27: ldc           #100                // String getSourceException\n-        29: aastore\n-        30: dup\n-        31: iconst_5\n-        32: ldc           #101                // String getRootCause\n+         7: ldc_w         #289                // String getCause\n+        10: aastore\n+        11: dup\n+        12: iconst_1\n+        13: ldc_w         #290                // String getNextException\n+        16: aastore\n+        17: dup\n+        18: iconst_2\n+        19: ldc_w         #292                // String getTargetException\n+        22: aastore\n+        23: dup\n+        24: iconst_3\n+        25: ldc_w         #294                // String getException\n+        28: aastore\n+        29: dup\n+        30: iconst_4\n+        31: ldc_w         #296                // String getSourceException\n         34: aastore\n         35: dup\n-        36: bipush        6\n-        38: ldc           #102                // String getCausedByException\n+        36: iconst_5\n+        37: ldc_w         #298                // String getRootCause\n         40: aastore\n         41: dup\n-        42: bipush        7\n-        44: ldc           #103                // String getNested\n-        46: aastore\n-        47: dup\n-        48: bipush        8\n-        50: ldc           #104                // String getLinkedException\n-        52: aastore\n-        53: dup\n-        54: bipush        9\n-        56: ldc           #105                // String getNestedException\n-        58: aastore\n-        59: dup\n-        60: bipush        10\n-        62: ldc           #106                // String getLinkedCause\n-        64: aastore\n-        65: dup\n-        66: bipush        11\n-        68: ldc           #107                // String getThrowable\n-        70: aastore\n-        71: putstatic     #3                  // Field CAUSE_METHOD_NAMES:[Ljava/lang/String;\n-        74: return\n+        42: bipush        6\n+        44: ldc_w         #299                // String getCausedByException\n+        47: aastore\n+        48: dup\n+        49: bipush        7\n+        51: ldc_w         #301                // String getNested\n+        54: aastore\n+        55: dup\n+        56: bipush        8\n+        58: ldc_w         #303                // String getLinkedException\n+        61: aastore\n+        62: dup\n+        63: bipush        9\n+        65: ldc_w         #305                // String getNestedException\n+        68: aastore\n+        69: dup\n+        70: bipush        10\n+        72: ldc_w         #307                // String getLinkedCause\n+        75: aastore\n+        76: dup\n+        77: bipush        11\n+        79: ldc_w         #309                // String getThrowable\n+        82: aastore\n+        83: putstatic     #12                 // Field CAUSE_METHOD_NAMES:[Ljava/lang/String;\n+        86: return\n       LineNumberTable:\n         line 48: 0\n }\n SourceFile: \"ExceptionUtils.java\"\n"}]}
