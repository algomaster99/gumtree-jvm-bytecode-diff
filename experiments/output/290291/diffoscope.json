{"diffoscope-json-version": 1, "source1": "first/FileAlterationMonitor.class", "source2": "second/FileAlterationMonitor.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,14 +1,15 @@\n \n package org.apache.commons.io.monitor;\n \n import java.util.Iterator;\n import org.apache.commons.io.ThreadUtils;\n import java.time.Duration;\n import java.util.function.Predicate;\n+import java.util.Objects;\n import java.util.function.Consumer;\n import java.util.stream.Stream;\n import java.util.Collections;\n import java.util.Optional;\n import java.util.Collection;\n import java.util.concurrent.CopyOnWriteArrayList;\n import java.util.concurrent.ThreadFactory;\n@@ -53,17 +54,19 @@\n         return this.intervalMillis;\n     }\n     \n     public Iterable<FileAlterationObserver> getObservers() {\n         return this.observers;\n     }\n     \n-    public void removeObserver(final FileAlterationObserver fileAlterationObserver) {\n-        if (fileAlterationObserver != null) {\n-            this.observers.removeIf(fileAlterationObserver::equals);\n+    public void removeObserver(final FileAlterationObserver obj) {\n+        if (obj != null) {\n+            final List<FileAlterationObserver> observers = this.observers;\n+            Objects.requireNonNull(obj);\n+            observers.removeIf(obj::equals);\n         }\n     }\n     \n     @Override\n     public void run() {\n         while (this.running) {\n             this.observers.forEach(FileAlterationObserver::checkAndNotify);\n"}]}
