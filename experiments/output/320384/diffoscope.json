{"diffoscope-json-version": 1, "source1": "first/JavadocMetadataScraper.class", "source2": "second/JavadocMetadataScraper.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -192,39 +192,39 @@\n         final Matcher matcher = JavadocMetadataScraper.TOKEN_TEXT_PATTERN.matcher(input);\n         while (matcher.find()) {\n             elements.add(matcher.group(0));\n         }\n         return String.join(\",\", elements);\n     }\n     \n-    private static String constructSubTreeText(final DetailNode obj, final int n, final int n2) {\n+    private static String constructSubTreeText(final DetailNode detailNode, final int n, final int n2) {\n         final ArrayDeque arrayDeque = new ArrayDeque();\n-        arrayDeque.addFirst(obj);\n+        arrayDeque.addFirst(detailNode);\n         final HashSet set = new HashSet();\n         final StringBuilder sb = new StringBuilder(1024);\n         while (!arrayDeque.isEmpty()) {\n-            final DetailNode detailNode = (DetailNode)arrayDeque.removeFirst();\n-            if (set.add(detailNode)) {\n-                final String text = detailNode.getText();\n-                if (detailNode.getType() != 1 && !JavadocMetadataScraper.TOKEN_TEXT_PATTERN.matcher(text).matches()) {\n+            final DetailNode detailNode2 = (DetailNode)arrayDeque.removeFirst();\n+            if (set.add(detailNode2)) {\n+                final String text = detailNode2.getText();\n+                if (detailNode2.getType() != 1 && !JavadocMetadataScraper.TOKEN_TEXT_PATTERN.matcher(text).matches()) {\n                     sb.insert(0, text);\n                 }\n             }\n-            for (final DetailNode detailNode2 : detailNode.getChildren()) {\n-                Label_0203: {\n-                    if (detailNode2.getParent().equals(obj)) {\n-                        if (detailNode2.getIndex() < n) {\n-                            break Label_0203;\n+            for (final DetailNode detailNode3 : detailNode2.getChildren()) {\n+                Label_0205: {\n+                    if (detailNode3.getParent().equals((Object)detailNode)) {\n+                        if (detailNode3.getIndex() < n) {\n+                            break Label_0205;\n                         }\n-                        if (detailNode2.getIndex() > n2) {\n-                            break Label_0203;\n+                        if (detailNode3.getIndex() > n2) {\n+                            break Label_0205;\n                         }\n                     }\n-                    if (!set.contains(detailNode2)) {\n-                        arrayDeque.addFirst(detailNode2);\n+                    if (!set.contains(detailNode3)) {\n+                        arrayDeque.addFirst(detailNode3);\n                     }\n                 }\n             }\n         }\n         return sb.toString().trim();\n     }\n     \n"}]}
