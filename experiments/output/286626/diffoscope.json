{"diffoscope-json-version": 1, "source1": "first/AsiExtraField.class", "source2": "second/AsiExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,219 +1,220 @@\n-  SHA-256 checksum c47889790349201b20b7e11ea7c967dcbf9e117136a1db215881e8fd95f930f1\n+  SHA-256 checksum 372c8ece804d468a3125a6b8ff68ecd359b16e81a48f3ce75b1cad9c93ddfbcd\n   Compiled from \"AsiExtraField.java\"\n public class org.apache.commons.compress.archivers.zip.AsiExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField,org.apache.commons.compress.archivers.zip.UnixStat,java.lang.Cloneable\n   minor version: 0\n-  major version: 51\n+  major version: 53\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #13                         // org/apache/commons/compress/archivers/zip/AsiExtraField\n-  super_class: #59                        // java/lang/Object\n-  interfaces: 3, fields: 8, methods: 22, attributes: 1\n+  super_class: #52                        // java/lang/Object\n+  interfaces: 3, fields: 8, methods: 22, attributes: 3\n Constant pool:\n-    #1 = Methodref          #59.#119      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #13.#120      // org/apache/commons/compress/archivers/zip/AsiExtraField.mode:I\n-    #3 = Fieldref           #13.#121      // org/apache/commons/compress/archivers/zip/AsiExtraField.uid:I\n-    #4 = Fieldref           #13.#122      // org/apache/commons/compress/archivers/zip/AsiExtraField.gid:I\n-    #5 = String             #123          //\n-    #6 = Fieldref           #13.#124      // org/apache/commons/compress/archivers/zip/AsiExtraField.link:Ljava/lang/String;\n-    #7 = Fieldref           #13.#125      // org/apache/commons/compress/archivers/zip/AsiExtraField.dirFlag:Z\n-    #8 = Class              #126          // java/util/zip/CRC32\n-    #9 = Methodref          #8.#119       // java/util/zip/CRC32.\"<init>\":()V\n-   #10 = Fieldref           #13.#127      // org/apache/commons/compress/archivers/zip/AsiExtraField.crc:Ljava/util/zip/CRC32;\n-   #11 = Fieldref           #13.#128      // org/apache/commons/compress/archivers/zip/AsiExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #12 = Class              #129          // org/apache/commons/compress/archivers/zip/ZipShort\n-   #13 = Class              #130          // org/apache/commons/compress/archivers/zip/AsiExtraField\n-   #14 = Methodref          #13.#131      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLinkedFile:()Ljava/lang/String;\n-   #15 = Methodref          #46.#132      // java/lang/String.getBytes:()[B\n-   #16 = Methodref          #12.#133      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #17 = Methodref          #13.#134      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #18 = Methodref          #12.#135      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n-   #19 = Methodref          #13.#136      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:()I\n-   #20 = Methodref          #12.#137      // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n-   #21 = Methodref          #138.#139     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #22 = Methodref          #140.#141     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #23 = Methodref          #13.#142      // org/apache/commons/compress/archivers/zip/AsiExtraField.getUserId:()I\n-   #24 = Methodref          #13.#143      // org/apache/commons/compress/archivers/zip/AsiExtraField.getGroupId:()I\n-   #25 = Methodref          #8.#144       // java/util/zip/CRC32.reset:()V\n-   #26 = Methodref          #8.#145       // java/util/zip/CRC32.update:([B)V\n-   #27 = Methodref          #8.#146       // java/util/zip/CRC32.getValue:()J\n-   #28 = Methodref          #13.#147      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataData:()[B\n-   #29 = Methodref          #13.#148      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:(I)I\n-   #30 = Methodref          #46.#149      // java/lang/String.length:()I\n-   #31 = Methodref          #13.#150      // org/apache/commons/compress/archivers/zip/AsiExtraField.isLink:()Z\n-   #32 = Methodref          #140.#151     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #33 = Class              #152          // java/util/zip/ZipException\n-   #34 = Class              #153          // java/lang/StringBuilder\n-   #35 = Methodref          #34.#119      // java/lang/StringBuilder.\"<init>\":()V\n-   #36 = String             #154          // Bad CRC checksum, expected\n-   #37 = Methodref          #34.#155      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #38 = Methodref          #156.#157     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n-   #39 = String             #158          //  instead of\n-   #40 = Methodref          #34.#159      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #41 = Methodref          #33.#160      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #42 = Methodref          #12.#161      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-   #43 = String             #162          // Bad symbolic link name length\n-   #44 = Methodref          #34.#163      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #45 = String             #164          //  in ASI extra field\n-   #46 = Class              #165          // java/lang/String\n-   #47 = Methodref          #46.#166      // java/lang/String.\"<init>\":([B)V\n-   #48 = Class              #167          // org/apache/commons/compress/archivers/zip/UnixStat\n-   #49 = Methodref          #13.#168      // org/apache/commons/compress/archivers/zip/AsiExtraField.setDirectory:(Z)V\n-   #50 = Methodref          #13.#169      // org/apache/commons/compress/archivers/zip/AsiExtraField.setMode:(I)V\n-   #51 = Methodref          #13.#170      // org/apache/commons/compress/archivers/zip/AsiExtraField.parseFromLocalFileData:([BII)V\n-   #52 = Integer            32768\n-   #53 = Integer            40960\n-   #54 = Methodref          #13.#171      // org/apache/commons/compress/archivers/zip/AsiExtraField.isDirectory:()Z\n-   #55 = Methodref          #59.#172      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #56 = Class              #173          // java/lang/CloneNotSupportedException\n-   #57 = Class              #174          // java/lang/RuntimeException\n-   #58 = Methodref          #57.#175      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n-   #59 = Class              #176          // java/lang/Object\n-   #60 = Class              #177          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-   #61 = Class              #178          // java/lang/Cloneable\n-   #62 = Utf8               HEADER_ID\n-   #63 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #64 = Utf8               WORD\n-   #65 = Utf8               I\n-   #66 = Utf8               ConstantValue\n-   #67 = Integer            4\n-   #68 = Utf8               mode\n-   #69 = Utf8               uid\n-   #70 = Utf8               gid\n-   #71 = Utf8               link\n-   #72 = Utf8               Ljava/lang/String;\n-   #73 = Utf8               dirFlag\n-   #74 = Utf8               Z\n-   #75 = Utf8               crc\n-   #76 = Utf8               Ljava/util/zip/CRC32;\n-   #77 = Utf8               <init>\n-   #78 = Utf8               ()V\n-   #79 = Utf8               Code\n-   #80 = Utf8               LineNumberTable\n-   #81 = Utf8               getHeaderId\n-   #82 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #83 = Utf8               getLocalFileDataLength\n-   #84 = Utf8               getCentralDirectoryLength\n-   #85 = Utf8               getLocalFileDataData\n-   #86 = Utf8               ()[B\n-   #87 = Utf8               getCentralDirectoryData\n-   #88 = Utf8               setUserId\n-   #89 = Utf8               (I)V\n-   #90 = Utf8               getUserId\n-   #91 = Utf8               ()I\n-   #92 = Utf8               setGroupId\n-   #93 = Utf8               getGroupId\n-   #94 = Utf8               setLinkedFile\n-   #95 = Utf8               (Ljava/lang/String;)V\n-   #96 = Utf8               getLinkedFile\n-   #97 = Utf8               ()Ljava/lang/String;\n-   #98 = Utf8               isLink\n-   #99 = Utf8               ()Z\n-  #100 = Utf8               StackMapTable\n-  #101 = Utf8               setMode\n-  #102 = Utf8               getMode\n-  #103 = Utf8               setDirectory\n-  #104 = Utf8               (Z)V\n-  #105 = Utf8               isDirectory\n-  #106 = Utf8               parseFromLocalFileData\n-  #107 = Utf8               ([BII)V\n-  #108 = Class              #179          // \"[B\"\n-  #109 = Class              #130          // org/apache/commons/compress/archivers/zip/AsiExtraField\n-  #110 = Utf8               Exceptions\n-  #111 = Utf8               parseFromCentralDirectoryData\n-  #112 = Utf8               (I)I\n-  #113 = Utf8               clone\n-  #114 = Utf8               ()Ljava/lang/Object;\n-  #115 = Class              #173          // java/lang/CloneNotSupportedException\n-  #116 = Utf8               <clinit>\n-  #117 = Utf8               SourceFile\n-  #118 = Utf8               AsiExtraField.java\n-  #119 = NameAndType        #77:#78       // \"<init>\":()V\n-  #120 = NameAndType        #68:#65       // mode:I\n-  #121 = NameAndType        #69:#65       // uid:I\n-  #122 = NameAndType        #70:#65       // gid:I\n-  #123 = Utf8\n-  #124 = NameAndType        #71:#72       // link:Ljava/lang/String;\n-  #125 = NameAndType        #73:#74       // dirFlag:Z\n-  #126 = Utf8               java/util/zip/CRC32\n-  #127 = NameAndType        #75:#76       // crc:Ljava/util/zip/CRC32;\n-  #128 = NameAndType        #62:#63       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #129 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-  #130 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n-  #131 = NameAndType        #96:#97       // getLinkedFile:()Ljava/lang/String;\n-  #132 = NameAndType        #180:#86      // getBytes:()[B\n-  #133 = NameAndType        #77:#89       // \"<init>\":(I)V\n-  #134 = NameAndType        #83:#82       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-  #135 = NameAndType        #181:#91      // getValue:()I\n-  #136 = NameAndType        #102:#91      // getMode:()I\n-  #137 = NameAndType        #180:#182     // getBytes:(I)[B\n-  #138 = Class              #183          // java/lang/System\n-  #139 = NameAndType        #184:#185     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #140 = Class              #186          // org/apache/commons/compress/archivers/zip/ZipLong\n-  #141 = NameAndType        #180:#187     // getBytes:(J)[B\n-  #142 = NameAndType        #90:#91       // getUserId:()I\n-  #143 = NameAndType        #93:#91       // getGroupId:()I\n-  #144 = NameAndType        #188:#78      // reset:()V\n-  #145 = NameAndType        #189:#190     // update:([B)V\n-  #146 = NameAndType        #181:#191     // getValue:()J\n-  #147 = NameAndType        #85:#86       // getLocalFileDataData:()[B\n-  #148 = NameAndType        #102:#112     // getMode:(I)I\n-  #149 = NameAndType        #192:#91      // length:()I\n-  #150 = NameAndType        #98:#99       // isLink:()Z\n-  #151 = NameAndType        #181:#193     // getValue:([BI)J\n-  #152 = Utf8               java/util/zip/ZipException\n-  #153 = Utf8               java/lang/StringBuilder\n-  #154 = Utf8               Bad CRC checksum, expected\n-  #155 = NameAndType        #194:#195     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #156 = Class              #196          // java/lang/Long\n-  #157 = NameAndType        #197:#198     // toHexString:(J)Ljava/lang/String;\n-  #158 = Utf8                instead of\n-  #159 = NameAndType        #199:#97      // toString:()Ljava/lang/String;\n-  #160 = NameAndType        #77:#95       // \"<init>\":(Ljava/lang/String;)V\n-  #161 = NameAndType        #181:#200     // getValue:([BI)I\n-  #162 = Utf8               Bad symbolic link name length\n-  #163 = NameAndType        #194:#201     // append:(I)Ljava/lang/StringBuilder;\n-  #164 = Utf8                in ASI extra field\n-  #165 = Utf8               java/lang/String\n-  #166 = NameAndType        #77:#190      // \"<init>\":([B)V\n-  #167 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n-  #168 = NameAndType        #103:#104     // setDirectory:(Z)V\n-  #169 = NameAndType        #101:#89      // setMode:(I)V\n-  #170 = NameAndType        #106:#107     // parseFromLocalFileData:([BII)V\n-  #171 = NameAndType        #105:#99      // isDirectory:()Z\n-  #172 = NameAndType        #113:#114     // clone:()Ljava/lang/Object;\n-  #173 = Utf8               java/lang/CloneNotSupportedException\n-  #174 = Utf8               java/lang/RuntimeException\n-  #175 = NameAndType        #77:#202      // \"<init>\":(Ljava/lang/Throwable;)V\n-  #176 = Utf8               java/lang/Object\n-  #177 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #178 = Utf8               java/lang/Cloneable\n-  #179 = Utf8               [B\n-  #180 = Utf8               getBytes\n-  #181 = Utf8               getValue\n-  #182 = Utf8               (I)[B\n-  #183 = Utf8               java/lang/System\n-  #184 = Utf8               arraycopy\n-  #185 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #186 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-  #187 = Utf8               (J)[B\n-  #188 = Utf8               reset\n-  #189 = Utf8               update\n-  #190 = Utf8               ([B)V\n-  #191 = Utf8               ()J\n-  #192 = Utf8               length\n-  #193 = Utf8               ([BI)J\n-  #194 = Utf8               append\n-  #195 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #196 = Utf8               java/lang/Long\n-  #197 = Utf8               toHexString\n-  #198 = Utf8               (J)Ljava/lang/String;\n-  #199 = Utf8               toString\n-  #200 = Utf8               ([BI)I\n-  #201 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #202 = Utf8               (Ljava/lang/Throwable;)V\n+    #1 = Methodref          #52.#110      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #13.#111      // org/apache/commons/compress/archivers/zip/AsiExtraField.mode:I\n+    #3 = Fieldref           #13.#112      // org/apache/commons/compress/archivers/zip/AsiExtraField.uid:I\n+    #4 = Fieldref           #13.#113      // org/apache/commons/compress/archivers/zip/AsiExtraField.gid:I\n+    #5 = String             #114          //\n+    #6 = Fieldref           #13.#115      // org/apache/commons/compress/archivers/zip/AsiExtraField.link:Ljava/lang/String;\n+    #7 = Fieldref           #13.#116      // org/apache/commons/compress/archivers/zip/AsiExtraField.dirFlag:Z\n+    #8 = Class              #117          // java/util/zip/CRC32\n+    #9 = Methodref          #8.#110       // java/util/zip/CRC32.\"<init>\":()V\n+   #10 = Fieldref           #13.#118      // org/apache/commons/compress/archivers/zip/AsiExtraField.crc:Ljava/util/zip/CRC32;\n+   #11 = Fieldref           #13.#119      // org/apache/commons/compress/archivers/zip/AsiExtraField.HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #12 = Class              #120          // org/apache/commons/compress/archivers/zip/ZipShort\n+   #13 = Class              #121          // org/apache/commons/compress/archivers/zip/AsiExtraField\n+   #14 = Methodref          #13.#122      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLinkedFile:()Ljava/lang/String;\n+   #15 = Methodref          #39.#123      // java/lang/String.getBytes:()[B\n+   #16 = Methodref          #12.#124      // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #17 = Methodref          #13.#125      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #18 = Methodref          #12.#126      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:()I\n+   #19 = Methodref          #13.#127      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:()I\n+   #20 = Methodref          #12.#128      // org/apache/commons/compress/archivers/zip/ZipShort.getBytes:(I)[B\n+   #21 = Methodref          #129.#130     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #22 = Methodref          #131.#132     // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #23 = Methodref          #13.#133      // org/apache/commons/compress/archivers/zip/AsiExtraField.getUserId:()I\n+   #24 = Methodref          #13.#134      // org/apache/commons/compress/archivers/zip/AsiExtraField.getGroupId:()I\n+   #25 = Methodref          #8.#135       // java/util/zip/CRC32.reset:()V\n+   #26 = Methodref          #8.#136       // java/util/zip/CRC32.update:([B)V\n+   #27 = Methodref          #8.#137       // java/util/zip/CRC32.getValue:()J\n+   #28 = Methodref          #13.#138      // org/apache/commons/compress/archivers/zip/AsiExtraField.getLocalFileDataData:()[B\n+   #29 = Methodref          #13.#139      // org/apache/commons/compress/archivers/zip/AsiExtraField.getMode:(I)I\n+   #30 = Methodref          #39.#140      // java/lang/String.length:()I\n+   #31 = Methodref          #13.#141      // org/apache/commons/compress/archivers/zip/AsiExtraField.isLink:()Z\n+   #32 = Methodref          #131.#142     // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+   #33 = Class              #143          // java/util/zip/ZipException\n+   #34 = Methodref          #144.#145     // java/lang/Long.toHexString:(J)Ljava/lang/String;\n+   #35 = InvokeDynamic      #0:#149       // #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #36 = Methodref          #33.#150      // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+   #37 = Methodref          #12.#151      // org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+   #38 = InvokeDynamic      #1:#153       // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+   #39 = Class              #154          // java/lang/String\n+   #40 = Methodref          #39.#155      // java/lang/String.\"<init>\":([B)V\n+   #41 = Class              #156          // org/apache/commons/compress/archivers/zip/UnixStat\n+   #42 = Methodref          #13.#157      // org/apache/commons/compress/archivers/zip/AsiExtraField.setDirectory:(Z)V\n+   #43 = Methodref          #13.#158      // org/apache/commons/compress/archivers/zip/AsiExtraField.setMode:(I)V\n+   #44 = Methodref          #13.#159      // org/apache/commons/compress/archivers/zip/AsiExtraField.parseFromLocalFileData:([BII)V\n+   #45 = Integer            32768\n+   #46 = Integer            40960\n+   #47 = Methodref          #13.#160      // org/apache/commons/compress/archivers/zip/AsiExtraField.isDirectory:()Z\n+   #48 = Methodref          #52.#161      // java/lang/Object.clone:()Ljava/lang/Object;\n+   #49 = Class              #162          // java/lang/CloneNotSupportedException\n+   #50 = Class              #163          // java/lang/RuntimeException\n+   #51 = Methodref          #50.#164      // java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+   #52 = Class              #165          // java/lang/Object\n+   #53 = Class              #166          // org/apache/commons/compress/archivers/zip/ZipExtraField\n+   #54 = Class              #167          // java/lang/Cloneable\n+   #55 = Utf8               HEADER_ID\n+   #56 = Utf8               Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #57 = Utf8               WORD\n+   #58 = Utf8               I\n+   #59 = Utf8               ConstantValue\n+   #60 = Integer            4\n+   #61 = Utf8               mode\n+   #62 = Utf8               uid\n+   #63 = Utf8               gid\n+   #64 = Utf8               link\n+   #65 = Utf8               Ljava/lang/String;\n+   #66 = Utf8               dirFlag\n+   #67 = Utf8               Z\n+   #68 = Utf8               crc\n+   #69 = Utf8               Ljava/util/zip/CRC32;\n+   #70 = Utf8               <init>\n+   #71 = Utf8               ()V\n+   #72 = Utf8               Code\n+   #73 = Utf8               LineNumberTable\n+   #74 = Utf8               getHeaderId\n+   #75 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #76 = Utf8               getLocalFileDataLength\n+   #77 = Utf8               getCentralDirectoryLength\n+   #78 = Utf8               getLocalFileDataData\n+   #79 = Utf8               ()[B\n+   #80 = Utf8               getCentralDirectoryData\n+   #81 = Utf8               setUserId\n+   #82 = Utf8               (I)V\n+   #83 = Utf8               getUserId\n+   #84 = Utf8               ()I\n+   #85 = Utf8               setGroupId\n+   #86 = Utf8               getGroupId\n+   #87 = Utf8               setLinkedFile\n+   #88 = Utf8               (Ljava/lang/String;)V\n+   #89 = Utf8               getLinkedFile\n+   #90 = Utf8               ()Ljava/lang/String;\n+   #91 = Utf8               isLink\n+   #92 = Utf8               ()Z\n+   #93 = Utf8               StackMapTable\n+   #94 = Utf8               setMode\n+   #95 = Utf8               getMode\n+   #96 = Utf8               setDirectory\n+   #97 = Utf8               (Z)V\n+   #98 = Utf8               isDirectory\n+   #99 = Utf8               parseFromLocalFileData\n+  #100 = Utf8               ([BII)V\n+  #101 = Class              #168          // \"[B\"\n+  #102 = Utf8               Exceptions\n+  #103 = Utf8               parseFromCentralDirectoryData\n+  #104 = Utf8               (I)I\n+  #105 = Utf8               clone\n+  #106 = Utf8               ()Ljava/lang/Object;\n+  #107 = Utf8               <clinit>\n+  #108 = Utf8               SourceFile\n+  #109 = Utf8               AsiExtraField.java\n+  #110 = NameAndType        #70:#71       // \"<init>\":()V\n+  #111 = NameAndType        #61:#58       // mode:I\n+  #112 = NameAndType        #62:#58       // uid:I\n+  #113 = NameAndType        #63:#58       // gid:I\n+  #114 = Utf8\n+  #115 = NameAndType        #64:#65       // link:Ljava/lang/String;\n+  #116 = NameAndType        #66:#67       // dirFlag:Z\n+  #117 = Utf8               java/util/zip/CRC32\n+  #118 = NameAndType        #68:#69       // crc:Ljava/util/zip/CRC32;\n+  #119 = NameAndType        #55:#56       // HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #120 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+  #121 = Utf8               org/apache/commons/compress/archivers/zip/AsiExtraField\n+  #122 = NameAndType        #89:#90       // getLinkedFile:()Ljava/lang/String;\n+  #123 = NameAndType        #169:#79      // getBytes:()[B\n+  #124 = NameAndType        #70:#82       // \"<init>\":(I)V\n+  #125 = NameAndType        #76:#75       // getLocalFileDataLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #126 = NameAndType        #170:#84      // getValue:()I\n+  #127 = NameAndType        #95:#84       // getMode:()I\n+  #128 = NameAndType        #169:#171     // getBytes:(I)[B\n+  #129 = Class              #172          // java/lang/System\n+  #130 = NameAndType        #173:#174     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #131 = Class              #175          // org/apache/commons/compress/archivers/zip/ZipLong\n+  #132 = NameAndType        #169:#176     // getBytes:(J)[B\n+  #133 = NameAndType        #83:#84       // getUserId:()I\n+  #134 = NameAndType        #86:#84       // getGroupId:()I\n+  #135 = NameAndType        #177:#71      // reset:()V\n+  #136 = NameAndType        #178:#179     // update:([B)V\n+  #137 = NameAndType        #170:#180     // getValue:()J\n+  #138 = NameAndType        #78:#79       // getLocalFileDataData:()[B\n+  #139 = NameAndType        #95:#104      // getMode:(I)I\n+  #140 = NameAndType        #181:#84      // length:()I\n+  #141 = NameAndType        #91:#92       // isLink:()Z\n+  #142 = NameAndType        #170:#182     // getValue:([BI)J\n+  #143 = Utf8               java/util/zip/ZipException\n+  #144 = Class              #183          // java/lang/Long\n+  #145 = NameAndType        #184:#185     // toHexString:(J)Ljava/lang/String;\n+  #146 = Utf8               BootstrapMethods\n+  #147 = MethodHandle       6:#186        // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #148 = String             #187          // Bad CRC checksum, expected \\u0001 instead of \\u0001\n+  #149 = NameAndType        #188:#189     // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #150 = NameAndType        #70:#88       // \"<init>\":(Ljava/lang/String;)V\n+  #151 = NameAndType        #170:#190     // getValue:([BI)I\n+  #152 = String             #191          // Bad symbolic link name length \\u0001 in ASI extra field\n+  #153 = NameAndType        #188:#192     // makeConcatWithConstants:(I)Ljava/lang/String;\n+  #154 = Utf8               java/lang/String\n+  #155 = NameAndType        #70:#179      // \"<init>\":([B)V\n+  #156 = Utf8               org/apache/commons/compress/archivers/zip/UnixStat\n+  #157 = NameAndType        #96:#97       // setDirectory:(Z)V\n+  #158 = NameAndType        #94:#82       // setMode:(I)V\n+  #159 = NameAndType        #99:#100      // parseFromLocalFileData:([BII)V\n+  #160 = NameAndType        #98:#92       // isDirectory:()Z\n+  #161 = NameAndType        #105:#106     // clone:()Ljava/lang/Object;\n+  #162 = Utf8               java/lang/CloneNotSupportedException\n+  #163 = Utf8               java/lang/RuntimeException\n+  #164 = NameAndType        #70:#193      // \"<init>\":(Ljava/lang/Throwable;)V\n+  #165 = Utf8               java/lang/Object\n+  #166 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+  #167 = Utf8               java/lang/Cloneable\n+  #168 = Utf8               [B\n+  #169 = Utf8               getBytes\n+  #170 = Utf8               getValue\n+  #171 = Utf8               (I)[B\n+  #172 = Utf8               java/lang/System\n+  #173 = Utf8               arraycopy\n+  #174 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #175 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+  #176 = Utf8               (J)[B\n+  #177 = Utf8               reset\n+  #178 = Utf8               update\n+  #179 = Utf8               ([B)V\n+  #180 = Utf8               ()J\n+  #181 = Utf8               length\n+  #182 = Utf8               ([BI)J\n+  #183 = Utf8               java/lang/Long\n+  #184 = Utf8               toHexString\n+  #185 = Utf8               (J)Ljava/lang/String;\n+  #186 = Methodref          #194.#195     // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #187 = Utf8               Bad CRC checksum, expected \\u0001 instead of \\u0001\n+  #188 = Utf8               makeConcatWithConstants\n+  #189 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #190 = Utf8               ([BI)I\n+  #191 = Utf8               Bad symbolic link name length \\u0001 in ASI extra field\n+  #192 = Utf8               (I)Ljava/lang/String;\n+  #193 = Utf8               (Ljava/lang/Throwable;)V\n+  #194 = Class              #196          // java/lang/invoke/StringConcatFactory\n+  #195 = NameAndType        #188:#200     // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #196 = Utf8               java/lang/invoke/StringConcatFactory\n+  #197 = Class              #202          // java/lang/invoke/MethodHandles$Lookup\n+  #198 = Utf8               Lookup\n+  #199 = Utf8               InnerClasses\n+  #200 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #201 = Class              #203          // java/lang/invoke/MethodHandles\n+  #202 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #203 = Utf8               java/lang/invoke/MethodHandles\n {\n   private static final org.apache.commons.compress.archivers.zip.ZipShort HEADER_ID;\n     descriptor: Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final int WORD = 4;\n     descriptor: I\n@@ -640,140 +641,123 @@\n         43: aload_0\n         44: getfield      #10                 // Field crc:Ljava/util/zip/CRC32;\n         47: invokevirtual #27                 // Method java/util/zip/CRC32.getValue:()J\n         50: lstore        7\n         52: lload         4\n         54: lload         7\n         56: lcmp\n-        57: ifeq          104\n+        57: ifeq          83\n         60: new           #33                 // class java/util/zip/ZipException\n         63: dup\n-        64: new           #34                 // class java/lang/StringBuilder\n-        67: dup\n-        68: invokespecial #35                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        71: ldc           #36                 // String Bad CRC checksum, expected\n-        73: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        76: lload         4\n-        78: invokestatic  #38                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n-        81: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        84: ldc           #39                 // String  instead of\n-        86: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        89: lload         7\n-        91: invokestatic  #38                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n-        94: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        97: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       100: invokespecial #41                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       103: athrow\n-       104: aload         6\n-       106: iconst_0\n-       107: invokestatic  #42                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       110: istore        9\n-       112: aload         6\n-       114: iconst_2\n-       115: invokestatic  #32                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-       118: l2i\n-       119: newarray       byte\n-       121: astore        10\n-       123: aload_0\n-       124: aload         6\n-       126: bipush        6\n-       128: invokestatic  #42                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       131: putfield      #3                  // Field uid:I\n-       134: aload_0\n-       135: aload         6\n-       137: bipush        8\n-       139: invokestatic  #42                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n-       142: putfield      #4                  // Field gid:I\n-       145: aload         10\n-       147: arraylength\n-       148: ifne          160\n-       151: aload_0\n-       152: ldc           #5                  // String\n-       154: putfield      #6                  // Field link:Ljava/lang/String;\n-       157: goto          232\n-       160: aload         10\n-       162: arraylength\n-       163: aload         6\n-       165: arraylength\n-       166: bipush        10\n-       168: isub\n-       169: if_icmple     206\n-       172: new           #33                 // class java/util/zip/ZipException\n-       175: dup\n-       176: new           #34                 // class java/lang/StringBuilder\n-       179: dup\n-       180: invokespecial #35                 // Method java/lang/StringBuilder.\"<init>\":()V\n-       183: ldc           #43                 // String Bad symbolic link name length\n-       185: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       188: aload         10\n-       190: arraylength\n-       191: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-       194: ldc           #45                 // String  in ASI extra field\n-       196: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       199: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       202: invokespecial #41                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-       205: athrow\n-       206: aload         6\n-       208: bipush        10\n-       210: aload         10\n-       212: iconst_0\n-       213: aload         10\n-       215: arraylength\n-       216: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       219: aload_0\n-       220: new           #46                 // class java/lang/String\n-       223: dup\n-       224: aload         10\n-       226: invokespecial #47                 // Method java/lang/String.\"<init>\":([B)V\n-       229: putfield      #6                  // Field link:Ljava/lang/String;\n-       232: aload_0\n-       233: iload         9\n-       235: sipush        16384\n-       238: iand\n-       239: ifeq          246\n-       242: iconst_1\n-       243: goto          247\n-       246: iconst_0\n-       247: invokevirtual #49                 // Method setDirectory:(Z)V\n-       250: aload_0\n-       251: iload         9\n-       253: invokevirtual #50                 // Method setMode:(I)V\n-       256: return\n+        64: lload         4\n+        66: invokestatic  #34                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n+        69: lload         7\n+        71: invokestatic  #34                 // Method java/lang/Long.toHexString:(J)Ljava/lang/String;\n+        74: invokedynamic #35,  0             // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+        79: invokespecial #36                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        82: athrow\n+        83: aload         6\n+        85: iconst_0\n+        86: invokestatic  #37                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+        89: istore        9\n+        91: aload         6\n+        93: iconst_2\n+        94: invokestatic  #32                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+        97: l2i\n+        98: newarray       byte\n+       100: astore        10\n+       102: aload_0\n+       103: aload         6\n+       105: bipush        6\n+       107: invokestatic  #37                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       110: putfield      #3                  // Field uid:I\n+       113: aload_0\n+       114: aload         6\n+       116: bipush        8\n+       118: invokestatic  #37                 // Method org/apache/commons/compress/archivers/zip/ZipShort.getValue:([BI)I\n+       121: putfield      #4                  // Field gid:I\n+       124: aload         10\n+       126: arraylength\n+       127: ifne          139\n+       130: aload_0\n+       131: ldc           #5                  // String\n+       133: putfield      #6                  // Field link:Ljava/lang/String;\n+       136: goto          193\n+       139: aload         10\n+       141: arraylength\n+       142: aload         6\n+       144: arraylength\n+       145: bipush        10\n+       147: isub\n+       148: if_icmple     167\n+       151: new           #33                 // class java/util/zip/ZipException\n+       154: dup\n+       155: aload         10\n+       157: arraylength\n+       158: invokedynamic #38,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n+       163: invokespecial #36                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+       166: athrow\n+       167: aload         6\n+       169: bipush        10\n+       171: aload         10\n+       173: iconst_0\n+       174: aload         10\n+       176: arraylength\n+       177: invokestatic  #21                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       180: aload_0\n+       181: new           #39                 // class java/lang/String\n+       184: dup\n+       185: aload         10\n+       187: invokespecial #40                 // Method java/lang/String.\"<init>\":([B)V\n+       190: putfield      #6                  // Field link:Ljava/lang/String;\n+       193: aload_0\n+       194: iload         9\n+       196: sipush        16384\n+       199: iand\n+       200: ifeq          207\n+       203: iconst_1\n+       204: goto          208\n+       207: iconst_0\n+       208: invokevirtual #42                 // Method setDirectory:(Z)V\n+       211: aload_0\n+       212: iload         9\n+       214: invokevirtual #43                 // Method setMode:(I)V\n+       217: return\n       LineNumberTable:\n         line 270: 0\n         line 271: 7\n         line 272: 14\n         line 273: 27\n         line 274: 34\n         line 275: 43\n         line 276: 52\n         line 277: 60\n-        line 278: 78\n-        line 280: 91\n-        line 283: 104\n-        line 285: 112\n-        line 286: 123\n-        line 287: 134\n-        line 289: 145\n-        line 290: 151\n-        line 291: 160\n-        line 292: 172\n-        line 295: 206\n-        line 296: 219\n-        line 299: 232\n-        line 300: 250\n-        line 301: 256\n+        line 278: 66\n+        line 280: 71\n+        line 283: 83\n+        line 285: 91\n+        line 286: 102\n+        line 287: 113\n+        line 289: 124\n+        line 290: 130\n+        line 291: 139\n+        line 292: 151\n+        line 295: 167\n+        line 296: 180\n+        line 299: 193\n+        line 300: 211\n+        line 301: 217\n       StackMapTable: number_of_entries = 6\n         frame_type = 254 /* append */\n-          offset_delta = 104\n+          offset_delta = 83\n           locals = [ long, class \"[B\", long ]\n         frame_type = 253 /* append */\n           offset_delta = 55\n           locals = [ int, class \"[B\" ]\n-        frame_type = 45 /* same */\n+        frame_type = 27 /* same */\n         frame_type = 25 /* same */\n         frame_type = 77 /* same_locals_1_stack_item */\n           stack = [ class org/apache/commons/compress/archivers/zip/AsiExtraField ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 0\n           locals = [ class org/apache/commons/compress/archivers/zip/AsiExtraField, class \"[B\", int, int, long, class \"[B\", long, int, class \"[B\" ]\n           stack = [ class org/apache/commons/compress/archivers/zip/AsiExtraField, int ]\n@@ -785,37 +769,37 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #51                 // Method parseFromLocalFileData:([BII)V\n+         4: invokevirtual #44                 // Method parseFromLocalFileData:([BII)V\n          7: return\n       LineNumberTable:\n         line 311: 0\n         line 312: 7\n     Exceptions:\n       throws java.util.zip.ZipException\n \n   protected int getMode(int);\n     descriptor: (I)I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=3, args_size=2\n-         0: ldc           #52                 // int 32768\n+         0: ldc           #45                 // int 32768\n          2: istore_2\n          3: aload_0\n          4: invokevirtual #31                 // Method isLink:()Z\n          7: ifeq          16\n-        10: ldc           #53                 // int 40960\n+        10: ldc           #46                 // int 40960\n         12: istore_2\n         13: goto          27\n         16: aload_0\n-        17: invokevirtual #54                 // Method isDirectory:()Z\n+        17: invokevirtual #47                 // Method isDirectory:()Z\n         20: ifeq          27\n         23: sipush        16384\n         26: istore_2\n         27: iload_2\n         28: iload_1\n         29: sipush        4095\n         32: iand\n@@ -836,29 +820,29 @@\n \n   public java.lang.Object clone();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokespecial #55                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         1: invokespecial #48                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n          4: checkcast     #13                 // class org/apache/commons/compress/archivers/zip/AsiExtraField\n          7: astore_1\n          8: aload_1\n          9: new           #8                  // class java/util/zip/CRC32\n         12: dup\n         13: invokespecial #9                  // Method java/util/zip/CRC32.\"<init>\":()V\n         16: putfield      #10                 // Field crc:Ljava/util/zip/CRC32;\n         19: aload_1\n         20: areturn\n         21: astore_1\n-        22: new           #57                 // class java/lang/RuntimeException\n+        22: new           #50                 // class java/lang/RuntimeException\n         25: dup\n         26: aload_1\n-        27: invokespecial #58                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n+        27: invokespecial #51                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/Throwable;)V\n         30: athrow\n       Exception table:\n          from    to  target type\n              0    20    21   Class java/lang/CloneNotSupportedException\n       LineNumberTable:\n         line 332: 0\n         line 333: 8\n@@ -880,7 +864,16 @@\n          7: invokespecial #16                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         10: putstatic     #11                 // Field HEADER_ID:Lorg/apache/commons/compress/archivers/zip/ZipShort;\n         13: return\n       LineNumberTable:\n         line 54: 0\n }\n SourceFile: \"AsiExtraField.java\"\n+InnerClasses:\n+  public static final #198= #197 of #201; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+BootstrapMethods:\n+  0: #147 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #148 Bad CRC checksum, expected \\u0001 instead of \\u0001\n+  1: #147 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+    Method arguments:\n+      #152 Bad symbolic link name length \\u0001 in ASI extra field\n"}]}
