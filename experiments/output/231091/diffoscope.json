{"diffoscope-json-version": 1, "source1": "first/ReferenceForm.class", "source2": "second/ReferenceForm.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -1,37 +1,34 @@\n \n package org.apache.commons.compress.harmony.unpack200.bytecode.forms;\n \n import org.apache.commons.compress.harmony.pack200.Pack200Exception;\n-import org.apache.commons.compress.harmony.unpack200.SegmentConstantPool;\n import java.util.Objects;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry;\n import org.apache.commons.compress.harmony.unpack200.bytecode.ByteCode;\n import org.apache.commons.compress.harmony.unpack200.bytecode.OperandManager;\n \n public abstract class ReferenceForm extends ByteCodeForm\n {\n-    public ReferenceForm(final int opcode, final String name, final int[] rewrite) {\n-        super(opcode, name, rewrite);\n+    public ReferenceForm(final int n, final String s, final int[] array) {\n+        super(n, s, array);\n     }\n     \n     protected abstract int getPoolID();\n     \n     protected abstract int getOffset(final OperandManager p0);\n     \n-    protected void setNestedEntries(final ByteCode byteCode, final OperandManager operandManager, final int offset) throws Pack200Exception {\n-        final SegmentConstantPool globalPool = operandManager.globalConstantPool();\n-        ClassFileEntry[] nested = null;\n-        nested = new ClassFileEntry[] { (ClassFileEntry)globalPool.getConstantPoolEntry(this.getPoolID(), (long)offset) };\n+    protected void setNestedEntries(final ByteCode byteCode, final OperandManager operandManager, final int n) throws Pack200Exception {\n+        final ClassFileEntry[] nested = { (ClassFileEntry)operandManager.globalConstantPool().getConstantPoolEntry(this.getPoolID(), (long)n) };\n         Objects.requireNonNull(nested[0], \"Null nested entries are not allowed\");\n         byteCode.setNested(nested);\n         byteCode.setNestedPositions(new int[][] { { 0, 2 } });\n     }\n     \n-    public void setByteCodeOperands(final ByteCode byteCode, final OperandManager operandManager, final int codeLength) {\n+    public void setByteCodeOperands(final ByteCode byteCode, final OperandManager operandManager, final int n) {\n         final int offset = this.getOffset(operandManager);\n         try {\n             this.setNestedEntries(byteCode, operandManager, offset);\n         }\n         catch (final Pack200Exception ex) {\n             throw new Error(\"Got a pack200 exception. What to do?\");\n         }\n"}]}
