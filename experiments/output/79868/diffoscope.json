{"diffoscope-json-version": 1, "source1": "first/JsonPointer.class", "source2": "second/JsonPointer.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -13,14 +13,18 @@\n     protected volatile JsonPointer _head;\n     protected final String _asString;\n     protected final int _asStringOffset;\n     protected final String _matchingPropertyName;\n     protected final int _matchingElementIndex;\n     protected int _hashCode;\n     \n+    static {\n+        EMPTY = new JsonPointer();\n+    }\n+    \n     protected JsonPointer() {\n         this._nextSegment = null;\n         this._matchingPropertyName = null;\n         this._matchingElementIndex = -1;\n         this._asString = \"\";\n         this._asStringOffset = 0;\n     }\n@@ -175,40 +179,40 @@\n         if (tail == JsonPointer.EMPTY) {\n             return this;\n         }\n         String currentJsonPointer = this._asString;\n         if (currentJsonPointer.endsWith(\"/\")) {\n             currentJsonPointer = currentJsonPointer.substring(0, currentJsonPointer.length() - 1);\n         }\n-        return compile(currentJsonPointer + tail._asString);\n+        return compile(String.valueOf(currentJsonPointer) + tail._asString);\n     }\n     \n     public JsonPointer appendProperty(String property) {\n         if (property == null || property.isEmpty()) {\n             return this;\n         }\n         if (property.charAt(0) != '/') {\n-            property = '/' + property;\n+            property = String.valueOf('/') + property;\n         }\n         String currentJsonPointer = this._asString;\n         if (currentJsonPointer.endsWith(\"/\")) {\n             currentJsonPointer = currentJsonPointer.substring(0, currentJsonPointer.length() - 1);\n         }\n-        return compile(currentJsonPointer + property);\n+        return compile(String.valueOf(currentJsonPointer) + property);\n     }\n     \n     public JsonPointer appendIndex(final int index) {\n         if (index < 0) {\n             throw new IllegalArgumentException(\"Negative index cannot be appended\");\n         }\n         String currentJsonPointer = this._asString;\n         if (currentJsonPointer.endsWith(\"/\")) {\n             currentJsonPointer = currentJsonPointer.substring(0, currentJsonPointer.length() - 1);\n         }\n-        return compile(currentJsonPointer + '/' + index);\n+        return compile(String.valueOf(currentJsonPointer) + '/' + index);\n     }\n     \n     public boolean matchesProperty(final String name) {\n         return this._nextSegment != null && this._matchingPropertyName.equals(name);\n     }\n     \n     public JsonPointer matchProperty(final String name) {\n@@ -415,12 +419,8 @@\n         final String str = this.toString();\n         return new JsonPointer(str.substring(0, str.length() - suffixLength), 0, this._matchingPropertyName, this._matchingElementIndex, next._constructHead(suffixLength, last));\n     }\n     \n     private Object writeReplace() {\n         return new JsonPointer.Serialization(this.toString());\n     }\n-    \n-    static {\n-        EMPTY = new JsonPointer();\n-    }\n }\n"}]}
