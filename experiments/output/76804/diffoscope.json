{"diffoscope-json-version": 1, "source1": "first/FailableIntToLongFunction.class", "source2": "second/FailableIntToLongFunction.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,123 +1,128 @@\n-  SHA-256 checksum 192fc5bcae14b74a7a5b2e4e2e7da4f7d737c1dd86ed9ef9dded2ed882d28c00\n+  SHA-256 checksum 0dd0ecfb2f29650a4b37a8893406d678e25b6add41a31271131f4f99b0c9fdc3\n   Compiled from \"FailableIntToLongFunction.java\"\n public interface org.apache.commons.lang3.function.FailableIntToLongFunction<E extends java.lang.Throwable>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #2                          // org/apache/commons/lang3/function/FailableIntToLongFunction\n-  super_class: #11                        // java/lang/Object\n+  this_class: #1                          // org/apache/commons/lang3/function/FailableIntToLongFunction\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 1, methods: 4, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #2.#3          // org/apache/commons/lang3/function/FailableIntToLongFunction.NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-   #2 = Class              #4             // org/apache/commons/lang3/function/FailableIntToLongFunction\n-   #3 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-   #4 = Utf8               org/apache/commons/lang3/function/FailableIntToLongFunction\n+   #1 = Class              #2             // org/apache/commons/lang3/function/FailableIntToLongFunction\n+   #2 = Utf8               org/apache/commons/lang3/function/FailableIntToLongFunction\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n    #5 = Utf8               NOP\n    #6 = Utf8               Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-   #7 = InvokeDynamic      #0:#8          // #0:applyAsLong:()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-   #8 = NameAndType        #9:#10         // applyAsLong:()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-   #9 = Utf8               applyAsLong\n-  #10 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-  #11 = Class              #12            // java/lang/Object\n-  #12 = Utf8               java/lang/Object\n-  #13 = Utf8               nop\n-  #14 = Utf8               Code\n-  #15 = Utf8               LineNumberTable\n-  #16 = Utf8               Signature\n-  #17 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntToLongFunction<TE;>;\n-  #18 = Utf8               (I)J\n-  #19 = Utf8               Exceptions\n-  #20 = Class              #21            // java/lang/Throwable\n-  #21 = Utf8               java/lang/Throwable\n-  #22 = Utf8               (I)J^TE;\n-  #23 = Utf8               lambda$static$0\n-  #24 = Utf8               LocalVariableTable\n-  #25 = Utf8               t\n-  #26 = Utf8               I\n-  #27 = Utf8               <clinit>\n-  #28 = Utf8               ()V\n-  #29 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n-  #30 = Utf8               SourceFile\n-  #31 = Utf8               FailableIntToLongFunction.java\n+   #7 = Utf8               <clinit>\n+   #8 = Utf8               ()V\n+   #9 = Utf8               Code\n+  #10 = InvokeDynamic      #0:#11         // #0:applyAsLong:()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+  #11 = NameAndType        #12:#13        // applyAsLong:()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+  #12 = Utf8               applyAsLong\n+  #13 = Utf8               ()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+  #14 = Fieldref           #1.#15         // org/apache/commons/lang3/function/FailableIntToLongFunction.NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+  #15 = NameAndType        #5:#6          // NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+  #16 = Utf8               LineNumberTable\n+  #17 = Utf8               LocalVariableTable\n+  #18 = Utf8               nop\n+  #19 = Utf8               Signature\n+  #20 = Utf8               <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntToLongFunction<TE;>;\n+  #21 = Utf8               (I)J\n+  #22 = Utf8               Exceptions\n+  #23 = Class              #24            // java/lang/Throwable\n+  #24 = Utf8               java/lang/Throwable\n+  #25 = Utf8               (I)J^TE;\n+  #26 = Utf8               lambda$0\n+  #27 = Utf8               t\n+  #28 = Utf8               I\n+  #29 = Utf8               SourceFile\n+  #30 = Utf8               FailableIntToLongFunction.java\n+  #31 = Utf8               <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n   #32 = Utf8               RuntimeVisibleAnnotations\n   #33 = Utf8               Ljava/lang/FunctionalInterface;\n   #34 = Utf8               BootstrapMethods\n-  #35 = MethodHandle       6:#36          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #36 = Methodref          #37.#38        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #37 = Class              #39            // java/lang/invoke/LambdaMetafactory\n-  #38 = NameAndType        #40:#41        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #39 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #40 = Utf8               metafactory\n-  #41 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #42 = MethodType         #18            //  (I)J\n-  #43 = MethodHandle       6:#44          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntToLongFunction.lambda$static$0:(I)J\n-  #44 = InterfaceMethodref #2.#45         // org/apache/commons/lang3/function/FailableIntToLongFunction.lambda$static$0:(I)J\n-  #45 = NameAndType        #23:#18        // lambda$static$0:(I)J\n-  #46 = Utf8               InnerClasses\n-  #47 = Class              #48            // java/lang/invoke/MethodHandles$Lookup\n-  #48 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #49 = Class              #50            // java/lang/invoke/MethodHandles\n-  #50 = Utf8               java/lang/invoke/MethodHandles\n-  #51 = Utf8               Lookup\n+  #35 = Methodref          #36.#38        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #36 = Class              #37            // java/lang/invoke/LambdaMetafactory\n+  #37 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #38 = NameAndType        #39:#40        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #39 = Utf8               metafactory\n+  #40 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #41 = MethodHandle       6:#35          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #42 = MethodType         #21            //  (I)J\n+  #43 = InterfaceMethodref #1.#44         // org/apache/commons/lang3/function/FailableIntToLongFunction.lambda$0:(I)J\n+  #44 = NameAndType        #26:#21        // lambda$0:(I)J\n+  #45 = MethodHandle       6:#43          // REF_invokeStatic org/apache/commons/lang3/function/FailableIntToLongFunction.lambda$0:(I)J\n+  #46 = MethodType         #21            //  (I)J\n+  #47 = Utf8               InnerClasses\n+  #48 = Class              #49            // java/lang/invoke/MethodHandles$Lookup\n+  #49 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #50 = Class              #51            // java/lang/invoke/MethodHandles\n+  #51 = Utf8               java/lang/invoke/MethodHandles\n+  #52 = Utf8               Lookup\n {\n   public static final org.apache.commons.lang3.function.FailableIntToLongFunction NOP;\n     descriptor: Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n \n+  static {};\n+    descriptor: ()V\n+    flags: (0x0008) ACC_STATIC\n+    Code:\n+      stack=1, locals=0, args_size=0\n+         0: invokedynamic #10,  0             // InvokeDynamic #0:applyAsLong:()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+         5: putstatic     #14                 // Field NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+         8: return\n+      LineNumberTable:\n+        line 33: 0\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+\n   public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableIntToLongFunction<E> nop();\n     descriptor: ()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n+    Signature: #20                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntToLongFunction<TE;>;\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n+         0: getstatic     #14                 // Field NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n          3: areturn\n       LineNumberTable:\n         line 42: 0\n-    Signature: #17                          // <E:Ljava/lang/Throwable;>()Lorg/apache/commons/lang3/function/FailableIntToLongFunction<TE;>;\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n \n   public abstract long applyAsLong(int) throws E;\n     descriptor: (I)J\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.lang.Throwable\n-    Signature: #22                          // (I)J^TE;\n+    Signature: #25                          // (I)J^TE;\n \n-  private static long lambda$static$0(int) throws java.lang.Throwable;\n+  private static long lambda$0(int) throws java.lang.Throwable;\n     descriptor: (I)J\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Exceptions:\n+      throws java.lang.Throwable\n     Code:\n       stack=2, locals=1, args_size=1\n          0: lconst_0\n          1: lreturn\n       LineNumberTable:\n         line 33: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0     t   I\n-    Exceptions:\n-      throws java.lang.Throwable\n-\n-  static {};\n-    descriptor: ()V\n-    flags: (0x0008) ACC_STATIC\n-    Code:\n-      stack=1, locals=0, args_size=0\n-         0: invokedynamic #7,  0              // InvokeDynamic #0:applyAsLong:()Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-         5: putstatic     #1                  // Field NOP:Lorg/apache/commons/lang3/function/FailableIntToLongFunction;\n-         8: return\n-      LineNumberTable:\n-        line 33: 0\n }\n-Signature: #29                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n SourceFile: \"FailableIntToLongFunction.java\"\n+Signature: #31                          // <E:Ljava/lang/Throwable;>Ljava/lang/Object;\n RuntimeVisibleAnnotations:\n   0: #33()\n     java.lang.FunctionalInterface\n BootstrapMethods:\n-  0: #35 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #41 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n       #42 (I)J\n-      #43 REF_invokeStatic org/apache/commons/lang3/function/FailableIntToLongFunction.lambda$static$0:(I)J\n-      #42 (I)J\n+      #45 REF_invokeStatic org/apache/commons/lang3/function/FailableIntToLongFunction.lambda$0:(I)J\n+      #46 (I)J\n InnerClasses:\n-  public static final #51= #47 of #49;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #52= #48 of #50;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
