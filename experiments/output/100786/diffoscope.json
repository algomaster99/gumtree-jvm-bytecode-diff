{"diffoscope-json-version": 1, "source1": "first/Main$OutputFormat.class", "source2": "second/Main$OutputFormat.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -8,16 +8,22 @@\n \n enum OutputFormat\n {\n     public static final enum OutputFormat XML;\n     public static final enum OutputFormat SARIF;\n     public static final enum OutputFormat PLAIN;\n     \n-    public static OutputFormat valueOf(final String name) {\n-        return Enum.valueOf(OutputFormat.class, name);\n+    static {\n+        OutputFormat.XML = new OutputFormat(\"XML\", 0);\n+        OutputFormat.SARIF = new OutputFormat(\"SARIF\", 1);\n+        OutputFormat.PLAIN = new OutputFormat(\"PLAIN\", 2);\n+        OutputFormat.ENUM$VALUES = new OutputFormat[] { OutputFormat.XML, OutputFormat.SARIF, OutputFormat.PLAIN };\n+    }\n+    \n+    private OutputFormat(final String name, final int ordinal) {\n     }\n     \n     public AuditListener createListener(final OutputStream out, final AbstractAutomaticBean.OutputStreamOptions options) throws IOException {\n         AuditListener result;\n         if (this == OutputFormat.XML) {\n             result = (AuditListener)new XMLLogger(out, options);\n         }\n@@ -31,14 +37,11 @@\n     }\n     \n     @Override\n     public String toString() {\n         return this.name().toLowerCase(Locale.ROOT);\n     }\n     \n-    static {\n-        OutputFormat.XML = new OutputFormat(\"XML\", 0);\n-        OutputFormat.SARIF = new OutputFormat(\"SARIF\", 1);\n-        OutputFormat.PLAIN = new OutputFormat(\"PLAIN\", 2);\n-        OutputFormat.$VALUES = $values();\n+    public static OutputFormat valueOf(final String name) {\n+        return Enum.valueOf(OutputFormat.class, name);\n     }\n }\n"}]}
