{"diffoscope-json-version": 1, "source1": "first/BCodec.class", "source2": "second/BCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,192 +1,192 @@\n-  SHA-256 checksum 65ae1071c5e8fd6b0459d672df965dd743a9e5957bb113a8c99a0c4bab84f4c9\n+  SHA-256 checksum 31509a1f2df4fbd7a4b166692d2cb8f05c3f0316b4fcec7ca5bf5298733107ce\n   Compiled from \"BCodec.java\"\n public class org.apache.commons.codec.net.BCodec extends org.apache.commons.codec.net.RFC1522Codec implements org.apache.commons.codec.StringEncoder,org.apache.commons.codec.StringDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #8                          // org/apache/commons/codec/net/BCodec\n-  super_class: #14                        // org/apache/commons/codec/net/RFC1522Codec\n+  this_class: #1                          // org/apache/commons/codec/net/BCodec\n+  super_class: #3                         // org/apache/commons/codec/net/RFC1522Codec\n   interfaces: 2, fields: 1, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Fieldref           #2.#3         // org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n-    #2 = Class              #4            // org/apache/commons/codec/Charsets\n-    #3 = NameAndType        #5:#6         // UTF_8:Ljava/nio/charset/Charset;\n-    #4 = Utf8               org/apache/commons/codec/Charsets\n-    #5 = Utf8               UTF_8\n-    #6 = Utf8               Ljava/nio/charset/Charset;\n-    #7 = Methodref          #8.#9         // org/apache/commons/codec/net/BCodec.\"<init>\":(Ljava/nio/charset/Charset;)V\n-    #8 = Class              #10           // org/apache/commons/codec/net/BCodec\n-    #9 = NameAndType        #11:#12       // \"<init>\":(Ljava/nio/charset/Charset;)V\n-   #10 = Utf8               org/apache/commons/codec/net/BCodec\n+    #1 = Class              #2            // org/apache/commons/codec/net/BCodec\n+    #2 = Utf8               org/apache/commons/codec/net/BCodec\n+    #3 = Class              #4            // org/apache/commons/codec/net/RFC1522Codec\n+    #4 = Utf8               org/apache/commons/codec/net/RFC1522Codec\n+    #5 = Class              #6            // org/apache/commons/codec/StringEncoder\n+    #6 = Utf8               org/apache/commons/codec/StringEncoder\n+    #7 = Class              #8            // org/apache/commons/codec/StringDecoder\n+    #8 = Utf8               org/apache/commons/codec/StringDecoder\n+    #9 = Utf8               charset\n+   #10 = Utf8               Ljava/nio/charset/Charset;\n    #11 = Utf8               <init>\n-   #12 = Utf8               (Ljava/nio/charset/Charset;)V\n-   #13 = Methodref          #14.#15       // org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n-   #14 = Class              #16           // org/apache/commons/codec/net/RFC1522Codec\n-   #15 = NameAndType        #11:#17       // \"<init>\":()V\n-   #16 = Utf8               org/apache/commons/codec/net/RFC1522Codec\n-   #17 = Utf8               ()V\n-   #18 = Fieldref           #8.#19        // org/apache/commons/codec/net/BCodec.charset:Ljava/nio/charset/Charset;\n-   #19 = NameAndType        #20:#6        // charset:Ljava/nio/charset/Charset;\n-   #20 = Utf8               charset\n-   #21 = Methodref          #22.#23       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #22 = Class              #24           // java/nio/charset/Charset\n-   #23 = NameAndType        #25:#26       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #24 = Utf8               java/nio/charset/Charset\n-   #25 = Utf8               forName\n-   #26 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #27 = String             #28           // B\n-   #28 = Utf8               B\n-   #29 = Methodref          #30.#31       // org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B\n-   #30 = Class              #32           // org/apache/commons/codec/binary/Base64\n-   #31 = NameAndType        #33:#34       // encodeBase64:([B)[B\n-   #32 = Utf8               org/apache/commons/codec/binary/Base64\n-   #33 = Utf8               encodeBase64\n-   #34 = Utf8               ([B)[B\n-   #35 = Methodref          #30.#36       // org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n-   #36 = NameAndType        #37:#34       // decodeBase64:([B)[B\n-   #37 = Utf8               decodeBase64\n-   #38 = Methodref          #8.#39        // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #39 = NameAndType        #40:#41       // encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #40 = Utf8               encodeText\n-   #41 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #42 = Methodref          #8.#43        // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #43 = NameAndType        #40:#44       // encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #44 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #45 = Class              #46           // java/io/UnsupportedEncodingException\n-   #46 = Utf8               java/io/UnsupportedEncodingException\n-   #47 = Class              #48           // org/apache/commons/codec/EncoderException\n-   #48 = Utf8               org/apache/commons/codec/EncoderException\n-   #49 = Methodref          #45.#50       // java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n-   #50 = NameAndType        #51:#52       // getMessage:()Ljava/lang/String;\n-   #51 = Utf8               getMessage\n-   #52 = Utf8               ()Ljava/lang/String;\n-   #53 = Methodref          #47.#54       // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #54 = NameAndType        #11:#55       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #55 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #56 = Methodref          #8.#57        // org/apache/commons/codec/net/BCodec.getCharset:()Ljava/nio/charset/Charset;\n-   #57 = NameAndType        #58:#59       // getCharset:()Ljava/nio/charset/Charset;\n-   #58 = Utf8               getCharset\n-   #59 = Utf8               ()Ljava/nio/charset/Charset;\n-   #60 = Methodref          #8.#61        // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #61 = NameAndType        #62:#41       // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n-   #62 = Utf8               encode\n-   #63 = Methodref          #8.#64        // org/apache/commons/codec/net/BCodec.decodeText:(Ljava/lang/String;)Ljava/lang/String;\n-   #64 = NameAndType        #65:#66       // decodeText:(Ljava/lang/String;)Ljava/lang/String;\n-   #65 = Utf8               decodeText\n-   #66 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #67 = Class              #68           // java/lang/IllegalArgumentException\n-   #68 = Utf8               java/lang/IllegalArgumentException\n-   #69 = Class              #70           // org/apache/commons/codec/DecoderException\n-   #70 = Utf8               org/apache/commons/codec/DecoderException\n-   #71 = Methodref          #72.#50       // java/lang/Exception.getMessage:()Ljava/lang/String;\n-   #72 = Class              #73           // java/lang/Exception\n-   #73 = Utf8               java/lang/Exception\n-   #74 = Methodref          #69.#54       // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #75 = Class              #76           // java/lang/String\n-   #76 = Utf8               java/lang/String\n-   #77 = Methodref          #8.#78        // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #78 = NameAndType        #62:#66       // encode:(Ljava/lang/String;)Ljava/lang/String;\n-   #79 = Class              #80           // java/lang/StringBuilder\n-   #80 = Utf8               java/lang/StringBuilder\n-   #81 = Methodref          #79.#15       // java/lang/StringBuilder.\"<init>\":()V\n-   #82 = String             #83           // Objects of type\n-   #83 = Utf8               Objects of type\n-   #84 = Methodref          #79.#85       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #85 = NameAndType        #86:#87       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = Utf8               append\n-   #87 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #88 = Methodref          #89.#90       // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #89 = Class              #91           // java/lang/Object\n-   #90 = NameAndType        #92:#93       // getClass:()Ljava/lang/Class;\n-   #91 = Utf8               java/lang/Object\n-   #92 = Utf8               getClass\n-   #93 = Utf8               ()Ljava/lang/Class;\n-   #94 = Methodref          #95.#96       // java/lang/Class.getName:()Ljava/lang/String;\n-   #95 = Class              #97           // java/lang/Class\n-   #96 = NameAndType        #98:#52       // getName:()Ljava/lang/String;\n-   #97 = Utf8               java/lang/Class\n-   #98 = Utf8               getName\n-   #99 = String             #100          //  cannot be encoded using BCodec\n-  #100 = Utf8                cannot be encoded using BCodec\n-  #101 = Methodref          #79.#102      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-  #102 = NameAndType        #103:#52      // toString:()Ljava/lang/String;\n-  #103 = Utf8               toString\n-  #104 = Methodref          #47.#105      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-  #105 = NameAndType        #11:#106      // \"<init>\":(Ljava/lang/String;)V\n-  #106 = Utf8               (Ljava/lang/String;)V\n-  #107 = Methodref          #8.#108       // org/apache/commons/codec/net/BCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n-  #108 = NameAndType        #109:#66      // decode:(Ljava/lang/String;)Ljava/lang/String;\n-  #109 = Utf8               decode\n-  #110 = String             #111          //  cannot be decoded using BCodec\n-  #111 = Utf8                cannot be decoded using BCodec\n-  #112 = Methodref          #69.#105      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-  #113 = Methodref          #22.#114      // java/nio/charset/Charset.name:()Ljava/lang/String;\n-  #114 = NameAndType        #115:#52      // name:()Ljava/lang/String;\n-  #115 = Utf8               name\n-  #116 = Class              #117          // org/apache/commons/codec/StringEncoder\n-  #117 = Utf8               org/apache/commons/codec/StringEncoder\n-  #118 = Class              #119          // org/apache/commons/codec/StringDecoder\n-  #119 = Utf8               org/apache/commons/codec/StringDecoder\n-  #120 = Utf8               Code\n-  #121 = Utf8               LineNumberTable\n-  #122 = Utf8               LocalVariableTable\n-  #123 = Utf8               this\n-  #124 = Utf8               Lorg/apache/commons/codec/net/BCodec;\n-  #125 = Utf8               charsetName\n-  #126 = Utf8               Ljava/lang/String;\n-  #127 = Utf8               getEncoding\n-  #128 = Utf8               doEncoding\n-  #129 = Utf8               bytes\n-  #130 = Utf8               [B\n-  #131 = Utf8               StackMapTable\n-  #132 = Utf8               doDecoding\n-  #133 = Utf8               strSource\n-  #134 = Utf8               sourceCharset\n-  #135 = Utf8               Exceptions\n-  #136 = Utf8               e\n-  #137 = Utf8               Ljava/io/UnsupportedEncodingException;\n-  #138 = Utf8               Ljava/lang/Exception;\n-  #139 = Utf8               value\n-  #140 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #141 = Utf8               Ljava/lang/Object;\n-  #142 = Utf8               getDefaultCharset\n+   #12 = Utf8               ()V\n+   #13 = Utf8               Code\n+   #14 = Fieldref           #15.#17       // org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n+   #15 = Class              #16           // org/apache/commons/codec/Charsets\n+   #16 = Utf8               org/apache/commons/codec/Charsets\n+   #17 = NameAndType        #18:#10       // UTF_8:Ljava/nio/charset/Charset;\n+   #18 = Utf8               UTF_8\n+   #19 = Methodref          #1.#20        // org/apache/commons/codec/net/BCodec.\"<init>\":(Ljava/nio/charset/Charset;)V\n+   #20 = NameAndType        #11:#21       // \"<init>\":(Ljava/nio/charset/Charset;)V\n+   #21 = Utf8               (Ljava/nio/charset/Charset;)V\n+   #22 = Utf8               LineNumberTable\n+   #23 = Utf8               LocalVariableTable\n+   #24 = Utf8               this\n+   #25 = Utf8               Lorg/apache/commons/codec/net/BCodec;\n+   #26 = Methodref          #3.#27        // org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n+   #27 = NameAndType        #11:#12       // \"<init>\":()V\n+   #28 = Fieldref           #1.#29        // org/apache/commons/codec/net/BCodec.charset:Ljava/nio/charset/Charset;\n+   #29 = NameAndType        #9:#10        // charset:Ljava/nio/charset/Charset;\n+   #30 = Utf8               (Ljava/lang/String;)V\n+   #31 = Methodref          #32.#34       // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #32 = Class              #33           // java/nio/charset/Charset\n+   #33 = Utf8               java/nio/charset/Charset\n+   #34 = NameAndType        #35:#36       // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #35 = Utf8               forName\n+   #36 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+   #37 = Utf8               charsetName\n+   #38 = Utf8               Ljava/lang/String;\n+   #39 = Utf8               getEncoding\n+   #40 = Utf8               ()Ljava/lang/String;\n+   #41 = String             #42           // B\n+   #42 = Utf8               B\n+   #43 = Utf8               doEncoding\n+   #44 = Utf8               ([B)[B\n+   #45 = Methodref          #46.#48       // org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B\n+   #46 = Class              #47           // org/apache/commons/codec/binary/Base64\n+   #47 = Utf8               org/apache/commons/codec/binary/Base64\n+   #48 = NameAndType        #49:#44       // encodeBase64:([B)[B\n+   #49 = Utf8               encodeBase64\n+   #50 = Utf8               bytes\n+   #51 = Utf8               [B\n+   #52 = Utf8               StackMapTable\n+   #53 = Utf8               doDecoding\n+   #54 = Methodref          #46.#55       // org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n+   #55 = NameAndType        #56:#44       // decodeBase64:([B)[B\n+   #56 = Utf8               decodeBase64\n+   #57 = Utf8               encode\n+   #58 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #59 = Utf8               Exceptions\n+   #60 = Class              #61           // org/apache/commons/codec/EncoderException\n+   #61 = Utf8               org/apache/commons/codec/EncoderException\n+   #62 = Methodref          #1.#63        // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #63 = NameAndType        #64:#58       // encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #64 = Utf8               encodeText\n+   #65 = Utf8               strSource\n+   #66 = Utf8               sourceCharset\n+   #67 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #68 = Methodref          #1.#69        // org/apache/commons/codec/net/BCodec.encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #69 = NameAndType        #64:#67       // encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #70 = Methodref          #71.#73       // java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n+   #71 = Class              #72           // java/io/UnsupportedEncodingException\n+   #72 = Utf8               java/io/UnsupportedEncodingException\n+   #73 = NameAndType        #74:#40       // getMessage:()Ljava/lang/String;\n+   #74 = Utf8               getMessage\n+   #75 = Methodref          #60.#76       // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #76 = NameAndType        #11:#77       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #77 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #78 = Utf8               e\n+   #79 = Utf8               Ljava/io/UnsupportedEncodingException;\n+   #80 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #81 = Methodref          #1.#82        // org/apache/commons/codec/net/BCodec.getCharset:()Ljava/nio/charset/Charset;\n+   #82 = NameAndType        #83:#84       // getCharset:()Ljava/nio/charset/Charset;\n+   #83 = Utf8               getCharset\n+   #84 = Utf8               ()Ljava/nio/charset/Charset;\n+   #85 = Methodref          #1.#86        // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #86 = NameAndType        #57:#58       // encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+   #87 = Utf8               decode\n+   #88 = Class              #89           // org/apache/commons/codec/DecoderException\n+   #89 = Utf8               org/apache/commons/codec/DecoderException\n+   #90 = Methodref          #1.#91        // org/apache/commons/codec/net/BCodec.decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+   #91 = NameAndType        #92:#80       // decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+   #92 = Utf8               decodeText\n+   #93 = Methodref          #94.#73       // java/lang/Exception.getMessage:()Ljava/lang/String;\n+   #94 = Class              #95           // java/lang/Exception\n+   #95 = Utf8               java/lang/Exception\n+   #96 = Methodref          #88.#76       // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #97 = Class              #98           // java/lang/IllegalArgumentException\n+   #98 = Utf8               java/lang/IllegalArgumentException\n+   #99 = Utf8               value\n+  #100 = Utf8               Ljava/lang/Exception;\n+  #101 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #102 = Class              #103          // java/lang/String\n+  #103 = Utf8               java/lang/String\n+  #104 = Methodref          #1.#105       // org/apache/commons/codec/net/BCodec.encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #105 = NameAndType        #57:#80       // encode:(Ljava/lang/String;)Ljava/lang/String;\n+  #106 = Class              #107          // java/lang/StringBuilder\n+  #107 = Utf8               java/lang/StringBuilder\n+  #108 = String             #109          // Objects of type\n+  #109 = Utf8               Objects of type\n+  #110 = Methodref          #106.#111     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #111 = NameAndType        #11:#30       // \"<init>\":(Ljava/lang/String;)V\n+  #112 = Methodref          #113.#115     // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #113 = Class              #114          // java/lang/Object\n+  #114 = Utf8               java/lang/Object\n+  #115 = NameAndType        #116:#117     // getClass:()Ljava/lang/Class;\n+  #116 = Utf8               getClass\n+  #117 = Utf8               ()Ljava/lang/Class;\n+  #118 = Methodref          #119.#121     // java/lang/Class.getName:()Ljava/lang/String;\n+  #119 = Class              #120          // java/lang/Class\n+  #120 = Utf8               java/lang/Class\n+  #121 = NameAndType        #122:#40      // getName:()Ljava/lang/String;\n+  #122 = Utf8               getName\n+  #123 = Methodref          #106.#124     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #124 = NameAndType        #125:#126     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #125 = Utf8               append\n+  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #127 = String             #128          //  cannot be encoded using BCodec\n+  #128 = Utf8                cannot be encoded using BCodec\n+  #129 = Methodref          #106.#130     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #130 = NameAndType        #131:#40      // toString:()Ljava/lang/String;\n+  #131 = Utf8               toString\n+  #132 = Methodref          #60.#111      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+  #133 = Utf8               Ljava/lang/Object;\n+  #134 = Methodref          #1.#135       // org/apache/commons/codec/net/BCodec.decode:(Ljava/lang/String;)Ljava/lang/String;\n+  #135 = NameAndType        #87:#80       // decode:(Ljava/lang/String;)Ljava/lang/String;\n+  #136 = String             #137          //  cannot be decoded using BCodec\n+  #137 = Utf8                cannot be decoded using BCodec\n+  #138 = Methodref          #88.#111      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+  #139 = Utf8               getDefaultCharset\n+  #140 = Methodref          #32.#141      // java/nio/charset/Charset.name:()Ljava/lang/String;\n+  #141 = NameAndType        #142:#40      // name:()Ljava/lang/String;\n+  #142 = Utf8               name\n   #143 = Utf8               SourceFile\n   #144 = Utf8               BCodec.java\n {\n   private final java.nio.charset.Charset charset;\n     descriptor: Ljava/nio/charset/Charset;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.codec.net.BCodec();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #1                  // Field org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n-         4: invokespecial #7                  // Method \"<init>\":(Ljava/nio/charset/Charset;)V\n+         1: getstatic     #14                 // Field org/apache/commons/codec/Charsets.UTF_8:Ljava/nio/charset/Charset;\n+         4: invokespecial #19                 // Method \"<init>\":(Ljava/nio/charset/Charset;)V\n          7: return\n       LineNumberTable:\n         line 55: 0\n         line 56: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/codec/net/BCodec;\n \n   public org.apache.commons.codec.net.BCodec(java.nio.charset.Charset);\n     descriptor: (Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #13                 // Method org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n+         1: invokespecial #26                 // Method org/apache/commons/codec/net/RFC1522Codec.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #18                 // Field charset:Ljava/nio/charset/Charset;\n+         6: putfield      #28                 // Field charset:Ljava/nio/charset/Charset;\n          9: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 4\n         line 69: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -196,31 +196,31 @@\n   public org.apache.commons.codec.net.BCodec(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #21                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-         5: invokespecial #7                  // Method \"<init>\":(Ljava/nio/charset/Charset;)V\n+         2: invokestatic  #31                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         5: invokespecial #19                 // Method \"<init>\":(Ljava/nio/charset/Charset;)V\n          8: return\n       LineNumberTable:\n         line 82: 0\n         line 83: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/codec/net/BCodec;\n             0       9     1 charsetName   Ljava/lang/String;\n \n   protected java.lang.String getEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: ldc           #27                 // String B\n+         0: ldc           #41                 // String B\n          2: areturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       3     0  this   Lorg/apache/commons/codec/net/BCodec;\n \n@@ -230,15 +230,15 @@\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: invokestatic  #29                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B\n+         7: invokestatic  #45                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B\n         10: areturn\n       LineNumberTable:\n         line 92: 0\n         line 93: 4\n         line 95: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -253,15 +253,15 @@\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: invokestatic  #35                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n+         7: invokestatic  #54                 // Method org/apache/commons/codec/binary/Base64.decodeBase64:([B)[B\n         10: areturn\n       LineNumberTable:\n         line 100: 0\n         line 101: 4\n         line 103: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -269,276 +269,278 @@\n             0      11     1 bytes   [B\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n \n   public java.lang.String encode(java.lang.String, java.nio.charset.Charset) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.EncoderException\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: aload_2\n-         9: invokevirtual #38                 // Method encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+         9: invokevirtual #62                 // Method encodeText:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n         12: areturn\n       LineNumberTable:\n         line 119: 0\n         line 120: 4\n         line 122: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/codec/net/BCodec;\n             0      13     1 strSource   Ljava/lang/String;\n             0      13     2 sourceCharset   Ljava/nio/charset/Charset;\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.EncoderException\n \n   public java.lang.String encode(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.EncoderException\n     Code:\n       stack=4, locals=4, args_size=3\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: aload_2\n-         9: invokevirtual #42                 // Method encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+         9: invokevirtual #68                 // Method encodeText:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n         12: areturn\n         13: astore_3\n-        14: new           #47                 // class org/apache/commons/codec/EncoderException\n+        14: new           #60                 // class org/apache/commons/codec/EncoderException\n         17: dup\n         18: aload_3\n-        19: invokevirtual #49                 // Method java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n+        19: invokevirtual #70                 // Method java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;\n         22: aload_3\n-        23: invokespecial #53                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        23: invokespecial #75                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         26: athrow\n       Exception table:\n          from    to  target type\n              6    12    13   Class java/io/UnsupportedEncodingException\n       LineNumberTable:\n         line 137: 0\n         line 138: 4\n         line 141: 6\n         line 142: 13\n         line 143: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           14      13     3     e   Ljava/io/UnsupportedEncodingException;\n             0      27     0  this   Lorg/apache/commons/codec/net/BCodec;\n             0      27     1 strSource   Ljava/lang/String;\n             0      27     2 sourceCharset   Ljava/lang/String;\n+           14      13     3     e   Ljava/io/UnsupportedEncodingException;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 70 /* same_locals_1_stack_item */\n           stack = [ class java/io/UnsupportedEncodingException ]\n-    Exceptions:\n-      throws org.apache.commons.codec.EncoderException\n \n   public java.lang.String encode(java.lang.String) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.EncoderException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n          8: aload_0\n-         9: invokevirtual #56                 // Method getCharset:()Ljava/nio/charset/Charset;\n-        12: invokevirtual #60                 // Method encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n+         9: invokevirtual #81                 // Method getCharset:()Ljava/nio/charset/Charset;\n+        12: invokevirtual #85                 // Method encode:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;\n         15: areturn\n       LineNumberTable:\n         line 158: 0\n         line 159: 4\n         line 161: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      16     0  this   Lorg/apache/commons/codec/net/BCodec;\n             0      16     1 strSource   Ljava/lang/String;\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.EncoderException\n \n   public java.lang.String decode(java.lang.String) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.DecoderException\n     Code:\n       stack=4, locals=3, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n          7: aload_1\n-         8: invokevirtual #63                 // Method decodeText:(Ljava/lang/String;)Ljava/lang/String;\n+         8: invokevirtual #90                 // Method decodeText:(Ljava/lang/String;)Ljava/lang/String;\n         11: areturn\n         12: astore_2\n-        13: new           #69                 // class org/apache/commons/codec/DecoderException\n+        13: new           #88                 // class org/apache/commons/codec/DecoderException\n         16: dup\n         17: aload_2\n-        18: invokevirtual #71                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;\n+        18: invokevirtual #93                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;\n         21: aload_2\n-        22: invokespecial #74                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+        22: invokespecial #96                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n         25: athrow\n       Exception table:\n          from    to  target type\n              6    11    12   Class java/io/UnsupportedEncodingException\n              6    11    12   Class java/lang/IllegalArgumentException\n       LineNumberTable:\n         line 176: 0\n         line 177: 4\n         line 180: 6\n         line 181: 12\n         line 182: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           13      13     2     e   Ljava/lang/Exception;\n             0      26     0  this   Lorg/apache/commons/codec/net/BCodec;\n             0      26     1 value   Ljava/lang/String;\n+           13      13     2     e   Ljava/lang/Exception;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 69 /* same_locals_1_stack_item */\n           stack = [ class java/lang/Exception ]\n-    Exceptions:\n-      throws org.apache.commons.codec.DecoderException\n \n   public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.EncoderException\n     Code:\n-      stack=4, locals=2, args_size=2\n+      stack=5, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: instanceof    #75                 // class java/lang/String\n+         7: instanceof    #102                // class java/lang/String\n         10: ifeq          22\n         13: aload_0\n         14: aload_1\n-        15: checkcast     #75                 // class java/lang/String\n-        18: invokevirtual #77                 // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n+        15: checkcast     #102                // class java/lang/String\n+        18: invokevirtual #104                // Method encode:(Ljava/lang/String;)Ljava/lang/String;\n         21: areturn\n-        22: new           #47                 // class org/apache/commons/codec/EncoderException\n+        22: new           #60                 // class org/apache/commons/codec/EncoderException\n         25: dup\n-        26: new           #79                 // class java/lang/StringBuilder\n+        26: new           #106                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #82                 // String Objects of type\n-        35: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: aload_1\n-        39: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        42: invokevirtual #94                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        45: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #99                 // String  cannot be encoded using BCodec\n-        50: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        56: invokespecial #104                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-        59: athrow\n+        30: ldc           #108                // String Objects of type\n+        32: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        35: aload_1\n+        36: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        39: invokevirtual #118                // Method java/lang/Class.getName:()Ljava/lang/String;\n+        42: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: ldc           #127                // String  cannot be encoded using BCodec\n+        47: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokevirtual #129                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        53: invokespecial #132                // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        56: athrow\n       LineNumberTable:\n         line 197: 0\n         line 198: 4\n         line 199: 6\n         line 200: 13\n         line 202: 22\n-        line 203: 39\n+        line 203: 35\n+        line 204: 45\n+        line 202: 53\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      60     0  this   Lorg/apache/commons/codec/net/BCodec;\n-            0      60     1 value   Ljava/lang/Object;\n+            0      57     0  this   Lorg/apache/commons/codec/net/BCodec;\n+            0      57     1 value   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.EncoderException\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws org.apache.commons.codec.DecoderException\n     Code:\n-      stack=4, locals=2, args_size=2\n+      stack=5, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n-         7: instanceof    #75                 // class java/lang/String\n+         7: instanceof    #102                // class java/lang/String\n         10: ifeq          22\n         13: aload_0\n         14: aload_1\n-        15: checkcast     #75                 // class java/lang/String\n-        18: invokevirtual #107                // Method decode:(Ljava/lang/String;)Ljava/lang/String;\n+        15: checkcast     #102                // class java/lang/String\n+        18: invokevirtual #134                // Method decode:(Ljava/lang/String;)Ljava/lang/String;\n         21: areturn\n-        22: new           #69                 // class org/apache/commons/codec/DecoderException\n+        22: new           #88                 // class org/apache/commons/codec/DecoderException\n         25: dup\n-        26: new           #79                 // class java/lang/StringBuilder\n+        26: new           #106                // class java/lang/StringBuilder\n         29: dup\n-        30: invokespecial #81                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        33: ldc           #82                 // String Objects of type\n-        35: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        38: aload_1\n-        39: invokevirtual #88                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        42: invokevirtual #94                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        45: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        48: ldc           #110                // String  cannot be decoded using BCodec\n-        50: invokevirtual #84                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        53: invokevirtual #101                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        56: invokespecial #112                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-        59: athrow\n+        30: ldc           #108                // String Objects of type\n+        32: invokespecial #110                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        35: aload_1\n+        36: invokevirtual #112                // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        39: invokevirtual #118                // Method java/lang/Class.getName:()Ljava/lang/String;\n+        42: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        45: ldc           #136                // String  cannot be decoded using BCodec\n+        47: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        50: invokevirtual #129                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        53: invokespecial #138                // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        56: athrow\n       LineNumberTable:\n         line 221: 0\n         line 222: 4\n         line 223: 6\n         line 224: 13\n         line 226: 22\n-        line 227: 39\n+        line 227: 35\n+        line 228: 45\n+        line 226: 53\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      60     0  this   Lorg/apache/commons/codec/net/BCodec;\n-            0      60     1 value   Ljava/lang/Object;\n+            0      57     0  this   Lorg/apache/commons/codec/net/BCodec;\n+            0      57     1 value   Ljava/lang/Object;\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n         frame_type = 15 /* same */\n-    Exceptions:\n-      throws org.apache.commons.codec.DecoderException\n \n   public java.nio.charset.Charset getCharset();\n     descriptor: ()Ljava/nio/charset/Charset;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field charset:Ljava/nio/charset/Charset;\n+         1: getfield      #28                 // Field charset:Ljava/nio/charset/Charset;\n          4: areturn\n       LineNumberTable:\n         line 239: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/codec/net/BCodec;\n \n   public java.lang.String getDefaultCharset();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field charset:Ljava/nio/charset/Charset;\n-         4: invokevirtual #113                // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+         1: getfield      #28                 // Field charset:Ljava/nio/charset/Charset;\n+         4: invokevirtual #140                // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 248: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/codec/net/BCodec;\n }\n"}]}
