{"diffoscope-json-version": 1, "source1": "first/LineNumber.class", "source2": "second/LineNumber.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,163 +1,165 @@\n-  SHA-256 checksum 238dc583485c9cb45db592a49b5dca0d41149b493174a24ed274b7fc2b00be60\n+  SHA-256 checksum 260d24194e0e64bf33f7d92479acb3af7e21fdb09397433e912108a4729acd55\n   Compiled from \"LineNumber.java\"\n public final class org.apache.bcel.classfile.LineNumber implements java.lang.Cloneable,org.apache.bcel.classfile.Node\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #8                          // org/apache/bcel/classfile/LineNumber\n-  super_class: #14                        // java/lang/Object\n+  this_class: #1                          // org/apache/bcel/classfile/LineNumber\n+  super_class: #3                         // java/lang/Object\n   interfaces: 2, fields: 2, methods: 11, attributes: 1\n Constant pool:\n-    #1 = InterfaceMethodref #2.#3         // java/io/DataInput.readUnsignedShort:()I\n-    #2 = Class              #4            // java/io/DataInput\n-    #3 = NameAndType        #5:#6         // readUnsignedShort:()I\n-    #4 = Utf8               java/io/DataInput\n-    #5 = Utf8               readUnsignedShort\n-    #6 = Utf8               ()I\n-    #7 = Methodref          #8.#9         // org/apache/bcel/classfile/LineNumber.\"<init>\":(II)V\n-    #8 = Class              #10           // org/apache/bcel/classfile/LineNumber\n-    #9 = NameAndType        #11:#12       // \"<init>\":(II)V\n-   #10 = Utf8               org/apache/bcel/classfile/LineNumber\n-   #11 = Utf8               <init>\n-   #12 = Utf8               (II)V\n-   #13 = Methodref          #14.#15       // java/lang/Object.\"<init>\":()V\n-   #14 = Class              #16           // java/lang/Object\n-   #15 = NameAndType        #11:#17       // \"<init>\":()V\n-   #16 = Utf8               java/lang/Object\n-   #17 = Utf8               ()V\n-   #18 = Fieldref           #8.#19        // org/apache/bcel/classfile/LineNumber.startPc:S\n-   #19 = NameAndType        #20:#21       // startPc:S\n-   #20 = Utf8               startPc\n-   #21 = Utf8               S\n-   #22 = Fieldref           #8.#23        // org/apache/bcel/classfile/LineNumber.lineNumber:S\n-   #23 = NameAndType        #24:#21       // lineNumber:S\n-   #24 = Utf8               lineNumber\n-   #25 = Methodref          #8.#26        // org/apache/bcel/classfile/LineNumber.getStartPC:()I\n-   #26 = NameAndType        #27:#6        // getStartPC:()I\n-   #27 = Utf8               getStartPC\n-   #28 = Methodref          #8.#29        // org/apache/bcel/classfile/LineNumber.getLineNumber:()I\n-   #29 = NameAndType        #30:#6        // getLineNumber:()I\n-   #30 = Utf8               getLineNumber\n-   #31 = InterfaceMethodref #32.#33       // org/apache/bcel/classfile/Visitor.visitLineNumber:(Lorg/apache/bcel/classfile/LineNumber;)V\n-   #32 = Class              #34           // org/apache/bcel/classfile/Visitor\n-   #33 = NameAndType        #35:#36       // visitLineNumber:(Lorg/apache/bcel/classfile/LineNumber;)V\n-   #34 = Utf8               org/apache/bcel/classfile/Visitor\n-   #35 = Utf8               visitLineNumber\n-   #36 = Utf8               (Lorg/apache/bcel/classfile/LineNumber;)V\n-   #37 = Methodref          #14.#38       // java/lang/Object.clone:()Ljava/lang/Object;\n-   #38 = NameAndType        #39:#40       // clone:()Ljava/lang/Object;\n-   #39 = Utf8               clone\n-   #40 = Utf8               ()Ljava/lang/Object;\n-   #41 = Class              #42           // java/lang/CloneNotSupportedException\n-   #42 = Utf8               java/lang/CloneNotSupportedException\n-   #43 = Methodref          #44.#45       // java/io/DataOutputStream.writeShort:(I)V\n-   #44 = Class              #46           // java/io/DataOutputStream\n-   #45 = NameAndType        #47:#48       // writeShort:(I)V\n-   #46 = Utf8               java/io/DataOutputStream\n-   #47 = Utf8               writeShort\n-   #48 = Utf8               (I)V\n-   #49 = Integer            65535\n-   #50 = Class              #51           // java/lang/StringBuilder\n-   #51 = Utf8               java/lang/StringBuilder\n-   #52 = Methodref          #50.#15       // java/lang/StringBuilder.\"<init>\":()V\n-   #53 = String             #54           // LineNumber(\n-   #54 = Utf8               LineNumber(\n-   #55 = Methodref          #50.#56       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #56 = NameAndType        #57:#58       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #57 = Utf8               append\n-   #58 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #59 = Methodref          #50.#60       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #60 = NameAndType        #57:#61       // append:(I)Ljava/lang/StringBuilder;\n-   #61 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #62 = String             #63           // ,\n-   #63 = Utf8               ,\n-   #64 = String             #65           // )\n-   #65 = Utf8               )\n-   #66 = Methodref          #50.#67       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #67 = NameAndType        #68:#69       // toString:()Ljava/lang/String;\n-   #68 = Utf8               toString\n-   #69 = Utf8               ()Ljava/lang/String;\n-   #70 = Class              #71           // java/lang/Cloneable\n-   #71 = Utf8               java/lang/Cloneable\n-   #72 = Class              #73           // org/apache/bcel/classfile/Node\n-   #73 = Utf8               org/apache/bcel/classfile/Node\n-   #74 = Utf8               (Ljava/io/DataInput;)V\n-   #75 = Utf8               Code\n-   #76 = Utf8               LineNumberTable\n-   #77 = Utf8               LocalVariableTable\n-   #78 = Utf8               this\n-   #79 = Utf8               Lorg/apache/bcel/classfile/LineNumber;\n-   #80 = Utf8               file\n-   #81 = Utf8               Ljava/io/DataInput;\n-   #82 = Utf8               Exceptions\n-   #83 = Class              #84           // java/io/IOException\n-   #84 = Utf8               java/io/IOException\n-   #85 = Utf8               I\n-   #86 = Utf8               c\n-   #87 = Utf8               accept\n-   #88 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n-   #89 = Utf8               v\n-   #90 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n-   #91 = Utf8               copy\n-   #92 = Utf8               ()Lorg/apache/bcel/classfile/LineNumber;\n-   #93 = Utf8               StackMapTable\n-   #94 = Utf8               dump\n-   #95 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #96 = Utf8               Ljava/io/DataOutputStream;\n-   #97 = Utf8               setLineNumber\n-   #98 = Utf8               setStartPC\n-   #99 = Utf8               SourceFile\n-  #100 = Utf8               LineNumber.java\n+    #1 = Class              #2            // org/apache/bcel/classfile/LineNumber\n+    #2 = Utf8               org/apache/bcel/classfile/LineNumber\n+    #3 = Class              #4            // java/lang/Object\n+    #4 = Utf8               java/lang/Object\n+    #5 = Class              #6            // java/lang/Cloneable\n+    #6 = Utf8               java/lang/Cloneable\n+    #7 = Class              #8            // org/apache/bcel/classfile/Node\n+    #8 = Utf8               org/apache/bcel/classfile/Node\n+    #9 = Utf8               startPc\n+   #10 = Utf8               S\n+   #11 = Utf8               lineNumber\n+   #12 = Utf8               <init>\n+   #13 = Utf8               (Ljava/io/DataInput;)V\n+   #14 = Utf8               Exceptions\n+   #15 = Class              #16           // java/io/IOException\n+   #16 = Utf8               java/io/IOException\n+   #17 = Utf8               Code\n+   #18 = InterfaceMethodref #19.#21       // java/io/DataInput.readUnsignedShort:()I\n+   #19 = Class              #20           // java/io/DataInput\n+   #20 = Utf8               java/io/DataInput\n+   #21 = NameAndType        #22:#23       // readUnsignedShort:()I\n+   #22 = Utf8               readUnsignedShort\n+   #23 = Utf8               ()I\n+   #24 = Methodref          #1.#25        // org/apache/bcel/classfile/LineNumber.\"<init>\":(II)V\n+   #25 = NameAndType        #12:#26       // \"<init>\":(II)V\n+   #26 = Utf8               (II)V\n+   #27 = Utf8               LineNumberTable\n+   #28 = Utf8               LocalVariableTable\n+   #29 = Utf8               this\n+   #30 = Utf8               Lorg/apache/bcel/classfile/LineNumber;\n+   #31 = Utf8               file\n+   #32 = Utf8               Ljava/io/DataInput;\n+   #33 = Methodref          #3.#34        // java/lang/Object.\"<init>\":()V\n+   #34 = NameAndType        #12:#35       // \"<init>\":()V\n+   #35 = Utf8               ()V\n+   #36 = Fieldref           #1.#37        // org/apache/bcel/classfile/LineNumber.startPc:S\n+   #37 = NameAndType        #9:#10        // startPc:S\n+   #38 = Fieldref           #1.#39        // org/apache/bcel/classfile/LineNumber.lineNumber:S\n+   #39 = NameAndType        #11:#10       // lineNumber:S\n+   #40 = Utf8               I\n+   #41 = Utf8               (Lorg/apache/bcel/classfile/LineNumber;)V\n+   #42 = Methodref          #1.#43        // org/apache/bcel/classfile/LineNumber.getStartPC:()I\n+   #43 = NameAndType        #44:#23       // getStartPC:()I\n+   #44 = Utf8               getStartPC\n+   #45 = Methodref          #1.#46        // org/apache/bcel/classfile/LineNumber.getLineNumber:()I\n+   #46 = NameAndType        #47:#23       // getLineNumber:()I\n+   #47 = Utf8               getLineNumber\n+   #48 = Utf8               c\n+   #49 = Utf8               accept\n+   #50 = Utf8               (Lorg/apache/bcel/classfile/Visitor;)V\n+   #51 = InterfaceMethodref #52.#54       // org/apache/bcel/classfile/Visitor.visitLineNumber:(Lorg/apache/bcel/classfile/LineNumber;)V\n+   #52 = Class              #53           // org/apache/bcel/classfile/Visitor\n+   #53 = Utf8               org/apache/bcel/classfile/Visitor\n+   #54 = NameAndType        #55:#41       // visitLineNumber:(Lorg/apache/bcel/classfile/LineNumber;)V\n+   #55 = Utf8               visitLineNumber\n+   #56 = Utf8               v\n+   #57 = Utf8               Lorg/apache/bcel/classfile/Visitor;\n+   #58 = Utf8               copy\n+   #59 = Utf8               ()Lorg/apache/bcel/classfile/LineNumber;\n+   #60 = Methodref          #3.#61        // java/lang/Object.clone:()Ljava/lang/Object;\n+   #61 = NameAndType        #62:#63       // clone:()Ljava/lang/Object;\n+   #62 = Utf8               clone\n+   #63 = Utf8               ()Ljava/lang/Object;\n+   #64 = Class              #65           // java/lang/CloneNotSupportedException\n+   #65 = Utf8               java/lang/CloneNotSupportedException\n+   #66 = Utf8               StackMapTable\n+   #67 = Utf8               dump\n+   #68 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #69 = Methodref          #70.#72       // java/io/DataOutputStream.writeShort:(I)V\n+   #70 = Class              #71           // java/io/DataOutputStream\n+   #71 = Utf8               java/io/DataOutputStream\n+   #72 = NameAndType        #73:#74       // writeShort:(I)V\n+   #73 = Utf8               writeShort\n+   #74 = Utf8               (I)V\n+   #75 = Utf8               Ljava/io/DataOutputStream;\n+   #76 = Integer            65535\n+   #77 = Utf8               setLineNumber\n+   #78 = Utf8               setStartPC\n+   #79 = Utf8               toString\n+   #80 = Utf8               ()Ljava/lang/String;\n+   #81 = Class              #82           // java/lang/StringBuilder\n+   #82 = Utf8               java/lang/StringBuilder\n+   #83 = String             #84           // LineNumber(\n+   #84 = Utf8               LineNumber(\n+   #85 = Methodref          #81.#86       // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+   #86 = NameAndType        #12:#87       // \"<init>\":(Ljava/lang/String;)V\n+   #87 = Utf8               (Ljava/lang/String;)V\n+   #88 = Methodref          #81.#89       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #89 = NameAndType        #90:#91       // append:(I)Ljava/lang/StringBuilder;\n+   #90 = Utf8               append\n+   #91 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #92 = String             #93           // ,\n+   #93 = Utf8               ,\n+   #94 = Methodref          #81.#95       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #95 = NameAndType        #90:#96       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #96 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #97 = String             #98           // )\n+   #98 = Utf8               )\n+   #99 = Methodref          #81.#100      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #100 = NameAndType        #79:#80       // toString:()Ljava/lang/String;\n+  #101 = Utf8               SourceFile\n+  #102 = Utf8               LineNumber.java\n {\n   private short startPc;\n     descriptor: S\n     flags: (0x0002) ACC_PRIVATE\n \n   private short lineNumber;\n     descriptor: S\n     flags: (0x0002) ACC_PRIVATE\n \n   org.apache.bcel.classfile.LineNumber(java.io.DataInput) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;)V\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+         2: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n          7: aload_1\n-         8: invokeinterface #1,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        13: invokespecial #7                  // Method \"<init>\":(II)V\n+         8: invokeinterface #18,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        13: invokespecial #24                 // Method \"<init>\":(II)V\n         16: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/bcel/classfile/LineNumber;\n             0      17     1  file   Ljava/io/DataInput;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public org.apache.bcel.classfile.LineNumber(int, int);\n     descriptor: (II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #13                 // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #33                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n          6: i2s\n-         7: putfield      #18                 // Field startPc:S\n+         7: putfield      #36                 // Field startPc:S\n         10: aload_0\n         11: iload_2\n         12: i2s\n-        13: putfield      #22                 // Field lineNumber:S\n+        13: putfield      #38                 // Field lineNumber:S\n         16: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 4\n         line 53: 10\n         line 54: 16\n       LocalVariableTable:\n@@ -169,18 +171,18 @@\n   public org.apache.bcel.classfile.LineNumber(org.apache.bcel.classfile.LineNumber);\n     descriptor: (Lorg/apache/bcel/classfile/LineNumber;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #25                 // Method getStartPC:()I\n+         2: invokevirtual #42                 // Method getStartPC:()I\n          5: aload_1\n-         6: invokevirtual #28                 // Method getLineNumber:()I\n-         9: invokespecial #7                  // Method \"<init>\":(II)V\n+         6: invokevirtual #45                 // Method getLineNumber:()I\n+         9: invokespecial #24                 // Method \"<init>\":(II)V\n         12: return\n       LineNumberTable:\n         line 62: 0\n         line 63: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/bcel/classfile/LineNumber;\n@@ -189,15 +191,15 @@\n   public void accept(org.apache.bcel.classfile.Visitor);\n     descriptor: (Lorg/apache/bcel/classfile/Visitor;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokeinterface #31,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitLineNumber:(Lorg/apache/bcel/classfile/LineNumber;)V\n+         2: invokeinterface #51,  2           // InterfaceMethod org/apache/bcel/classfile/Visitor.visitLineNumber:(Lorg/apache/bcel/classfile/LineNumber;)V\n          7: return\n       LineNumberTable:\n         line 73: 0\n         line 74: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/LineNumber;\n@@ -205,16 +207,16 @@\n \n   public org.apache.bcel.classfile.LineNumber copy();\n     descriptor: ()Lorg/apache/bcel/classfile/LineNumber;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #37                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #8                  // class org/apache/bcel/classfile/LineNumber\n+         1: invokevirtual #60                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #1                  // class org/apache/bcel/classfile/LineNumber\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n@@ -228,60 +230,60 @@\n       StackMapTable: number_of_entries = 1\n         frame_type = 72 /* same_locals_1_stack_item */\n           stack = [ class java/lang/CloneNotSupportedException ]\n \n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #18                 // Field startPc:S\n-         5: invokevirtual #43                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #36                 // Field startPc:S\n+         5: invokevirtual #69                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #22                 // Field lineNumber:S\n-        13: invokevirtual #43                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #38                 // Field lineNumber:S\n+        13: invokevirtual #69                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 8\n         line 97: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/bcel/classfile/LineNumber;\n             0      17     1  file   Ljava/io/DataOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int getLineNumber();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field lineNumber:S\n-         4: ldc           #49                 // int 65535\n+         1: getfield      #38                 // Field lineNumber:S\n+         4: ldc           #76                 // int 65535\n          6: iand\n          7: ireturn\n       LineNumberTable:\n         line 103: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/LineNumber;\n \n   public int getStartPC();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field startPc:S\n-         4: ldc           #49                 // int 65535\n+         1: getfield      #36                 // Field startPc:S\n+         4: ldc           #76                 // int 65535\n          6: iand\n          7: ireturn\n       LineNumberTable:\n         line 110: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/bcel/classfile/LineNumber;\n@@ -290,15 +292,15 @@\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2s\n-         3: putfield      #22                 // Field lineNumber:S\n+         3: putfield      #38                 // Field lineNumber:S\n          6: return\n       LineNumberTable:\n         line 117: 0\n         line 118: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/bcel/classfile/LineNumber;\n@@ -308,46 +310,45 @@\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n          2: i2s\n-         3: putfield      #18                 // Field startPc:S\n+         3: putfield      #36                 // Field startPc:S\n          6: return\n       LineNumberTable:\n         line 124: 0\n         line 125: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/bcel/classfile/LineNumber;\n             0       7     1 startPc   I\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=1, args_size=1\n-         0: new           #50                 // class java/lang/StringBuilder\n+      stack=3, locals=1, args_size=1\n+         0: new           #81                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #52                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #53                 // String LineNumber(\n-         9: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        12: aload_0\n-        13: invokevirtual #25                 // Method getStartPC:()I\n-        16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #62                 // String ,\n-        21: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: aload_0\n-        25: invokevirtual #28                 // Method getLineNumber:()I\n-        28: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        31: ldc           #64                 // String )\n-        33: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        36: invokevirtual #66                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        39: areturn\n+         4: ldc           #83                 // String LineNumber(\n+         6: invokespecial #85                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+         9: aload_0\n+        10: invokevirtual #42                 // Method getStartPC:()I\n+        13: invokevirtual #88                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        16: ldc           #92                 // String ,\n+        18: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        21: aload_0\n+        22: invokevirtual #45                 // Method getLineNumber:()I\n+        25: invokevirtual #88                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        28: ldc           #97                 // String )\n+        30: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        36: areturn\n       LineNumberTable:\n         line 132: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      40     0  this   Lorg/apache/bcel/classfile/LineNumber;\n+            0      37     0  this   Lorg/apache/bcel/classfile/LineNumber;\n }\n SourceFile: \"LineNumber.java\"\n"}]}
