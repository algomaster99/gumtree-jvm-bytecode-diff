{"diffoscope-json-version": 1, "source1": "first/UtilTest.class", "source2": "second/UtilTest.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -33,99 +33,87 @@\n     public void testcloseQuietly() {\n         Util.closeQuietly((Closeable)null);\n         Util.closeQuietly((Socket)null);\n     }\n     \n     @Test\n     public void testNET550_Reader() throws Exception {\n-        final char[] buff = { 'a', 'b', 'c', 'd' };\n-        final int bufflen = buff.length;\n-        Reader rdr = new CharArrayReader(buff);\n-        UtilTest.CSLtotal listener = new UtilTest.CSLtotal((long)bufflen, 1L);\n-        Util.copyReader(rdr, this.dest, 1, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        rdr = new CharArrayReader(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, 2L);\n-        Util.copyReader(rdr, this.dest, 2, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        rdr = new CharArrayReader(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, (long)bufflen);\n-        Util.copyReader(rdr, this.dest, 20, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        rdr = new CharArrayReader(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, (long)bufflen);\n-        Util.copyReader(rdr, this.dest, -1, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        rdr = new CharArrayReader(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, (long)bufflen);\n-        Util.copyReader(rdr, this.dest, 0, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n+        final char[] buf = { 'a', 'b', 'c', 'd' };\n+        final int length = buf.length;\n+        final CharArrayReader charArrayReader = new CharArrayReader(buf);\n+        final UtilTest.CSLtotal csLtotal = new UtilTest.CSLtotal((long)length, 1L);\n+        Util.copyReader((Reader)charArrayReader, this.dest, 1, 0L, (CopyStreamListener)csLtotal);\n+        csLtotal.checkExpected();\n+        final CharArrayReader charArrayReader2 = new CharArrayReader(buf);\n+        final UtilTest.CSLtotal csLtotal2 = new UtilTest.CSLtotal((long)length, 2L);\n+        Util.copyReader((Reader)charArrayReader2, this.dest, 2, 0L, (CopyStreamListener)csLtotal2);\n+        csLtotal2.checkExpected();\n+        final CharArrayReader charArrayReader3 = new CharArrayReader(buf);\n+        final UtilTest.CSLtotal csLtotal3 = new UtilTest.CSLtotal((long)length, (long)length);\n+        Util.copyReader((Reader)charArrayReader3, this.dest, 20, 0L, (CopyStreamListener)csLtotal3);\n+        csLtotal3.checkExpected();\n+        final CharArrayReader charArrayReader4 = new CharArrayReader(buf);\n+        final UtilTest.CSLtotal csLtotal4 = new UtilTest.CSLtotal((long)length, (long)length);\n+        Util.copyReader((Reader)charArrayReader4, this.dest, -1, 0L, (CopyStreamListener)csLtotal4);\n+        csLtotal4.checkExpected();\n+        final CharArrayReader charArrayReader5 = new CharArrayReader(buf);\n+        final UtilTest.CSLtotal csLtotal5 = new UtilTest.CSLtotal((long)length, (long)length);\n+        Util.copyReader((Reader)charArrayReader5, this.dest, 0, 0L, (CopyStreamListener)csLtotal5);\n+        csLtotal5.checkExpected();\n     }\n     \n     @Test\n     public void testNET550_Stream() throws Exception {\n-        final byte[] buff = { 97, 98, 99, 100 };\n-        final int bufflen = buff.length;\n-        InputStream is = new ByteArrayInputStream(buff);\n-        UtilTest.CSLtotal listener = new UtilTest.CSLtotal((long)bufflen, 1L);\n-        Util.copyStream(is, this.dst, 1, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        is = new ByteArrayInputStream(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, 2L);\n-        Util.copyStream(is, this.dst, 2, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        is = new ByteArrayInputStream(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, (long)bufflen);\n-        Util.copyStream(is, this.dst, 20, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        is = new ByteArrayInputStream(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, (long)bufflen);\n-        Util.copyStream(is, this.dst, -1, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n-        is = new ByteArrayInputStream(buff);\n-        listener = new UtilTest.CSLtotal((long)bufflen, (long)bufflen);\n-        Util.copyStream(is, this.dst, 0, 0L, (CopyStreamListener)listener);\n-        listener.checkExpected();\n+        final byte[] buf = { 97, 98, 99, 100 };\n+        final int length = buf.length;\n+        final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(buf);\n+        final UtilTest.CSLtotal csLtotal = new UtilTest.CSLtotal((long)length, 1L);\n+        Util.copyStream((InputStream)byteArrayInputStream, this.dst, 1, 0L, (CopyStreamListener)csLtotal);\n+        csLtotal.checkExpected();\n+        final ByteArrayInputStream byteArrayInputStream2 = new ByteArrayInputStream(buf);\n+        final UtilTest.CSLtotal csLtotal2 = new UtilTest.CSLtotal((long)length, 2L);\n+        Util.copyStream((InputStream)byteArrayInputStream2, this.dst, 2, 0L, (CopyStreamListener)csLtotal2);\n+        csLtotal2.checkExpected();\n+        final ByteArrayInputStream byteArrayInputStream3 = new ByteArrayInputStream(buf);\n+        final UtilTest.CSLtotal csLtotal3 = new UtilTest.CSLtotal((long)length, (long)length);\n+        Util.copyStream((InputStream)byteArrayInputStream3, this.dst, 20, 0L, (CopyStreamListener)csLtotal3);\n+        csLtotal3.checkExpected();\n+        final ByteArrayInputStream byteArrayInputStream4 = new ByteArrayInputStream(buf);\n+        final UtilTest.CSLtotal csLtotal4 = new UtilTest.CSLtotal((long)length, (long)length);\n+        Util.copyStream((InputStream)byteArrayInputStream4, this.dst, -1, 0L, (CopyStreamListener)csLtotal4);\n+        csLtotal4.checkExpected();\n+        final ByteArrayInputStream byteArrayInputStream5 = new ByteArrayInputStream(buf);\n+        final UtilTest.CSLtotal csLtotal5 = new UtilTest.CSLtotal((long)length, (long)length);\n+        Util.copyStream((InputStream)byteArrayInputStream5, this.dst, 0, 0L, (CopyStreamListener)csLtotal5);\n+        csLtotal5.checkExpected();\n     }\n     \n     @Test\n     public void testReader_1() throws Exception {\n-        final long streamSize = 0L;\n-        final int bufferSize = -1;\n         Util.copyReader(this.source, this.dest, -1, 0L, (CopyStreamListener)new UtilTest.CSL(1L, 1, 0L));\n     }\n     \n     @Test\n     public void testReader0() throws Exception {\n-        final long streamSize = 0L;\n-        final int bufferSize = 0;\n         Util.copyReader(this.source, this.dest, 0, 0L, (CopyStreamListener)new UtilTest.CSL(1L, 1, 0L));\n     }\n     \n     @Test\n     public void testReader1() throws Exception {\n-        final long streamSize = 0L;\n-        final int bufferSize = 1;\n         Util.copyReader(this.source, this.dest, 1, 0L, (CopyStreamListener)new UtilTest.CSL(1L, 1, 0L));\n     }\n     \n     @Test\n     public void testStream_1() throws Exception {\n-        final long streamSize = 0L;\n-        final int bufferSize = -1;\n         Util.copyStream(this.src, this.dst, -1, 0L, (CopyStreamListener)new UtilTest.CSL(1L, 1, 0L));\n     }\n     \n     @Test\n     public void testStream0() throws Exception {\n-        final long streamSize = 0L;\n-        final int bufferSize = 0;\n         Util.copyStream(this.src, this.dst, 0, 0L, (CopyStreamListener)new UtilTest.CSL(1L, 1, 0L));\n     }\n     \n     @Test\n     public void testStream1() throws Exception {\n-        final long streamSize = 0L;\n-        final int bufferSize = 1;\n         Util.copyStream(this.src, this.dst, 1, 0L, (CopyStreamListener)new UtilTest.CSL(1L, 1, 0L));\n     }\n }\n"}]}
