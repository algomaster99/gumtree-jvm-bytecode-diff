{"diffoscope-json-version": 1, "source1": "first/MutableInt.class", "source2": "second/MutableInt.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,111 +1,111 @@\n-  SHA-256 checksum d0679b00e73e701c5d416111f5b04a035bdabd3f5e10397523211847771ebc58\n+  SHA-256 checksum 4a013bcef04d4c85ad930fe0b46f424848dcea0defcae863798d83a874bcf336\n   Compiled from \"MutableInt.java\"\n public class org.apache.commons.lang3.mutable.MutableInt extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableInt>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number>\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/lang3/mutable/MutableInt\n-  super_class: #11                        // java/lang/Number\n+  this_class: #8                          // org/apache/commons/lang3/mutable/MutableInt\n+  super_class: #2                         // java/lang/Number\n   interfaces: 2, fields: 2, methods: 33, attributes: 2\n Constant pool:\n-   #1 = Methodref          #11.#69        // java/lang/Number.\"<init>\":()V\n-   #2 = Fieldref           #7.#70         // org/apache/commons/lang3/mutable/MutableInt.value:I\n-   #3 = Methodref          #11.#71        // java/lang/Number.intValue:()I\n-   #4 = Methodref          #72.#73        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #5 = Methodref          #72.#74        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #6 = Methodref          #7.#71         // org/apache/commons/lang3/mutable/MutableInt.intValue:()I\n-   #7 = Class              #75            // org/apache/commons/lang3/mutable/MutableInt\n-   #8 = Methodref          #76.#77        // org/apache/commons/lang3/math/NumberUtils.compare:(II)I\n-   #9 = Methodref          #78.#79        // java/lang/String.valueOf:(I)Ljava/lang/String;\n-  #10 = Methodref          #7.#80         // org/apache/commons/lang3/mutable/MutableInt.compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n-  #11 = Class              #81            // java/lang/Number\n-  #12 = Methodref          #7.#82         // org/apache/commons/lang3/mutable/MutableInt.setValue:(Ljava/lang/Number;)V\n-  #13 = Methodref          #7.#83         // org/apache/commons/lang3/mutable/MutableInt.getValue:()Ljava/lang/Integer;\n-  #14 = Class              #84            // java/lang/Comparable\n-  #15 = Class              #85            // org/apache/commons/lang3/mutable/Mutable\n-  #16 = Utf8               serialVersionUID\n-  #17 = Utf8               J\n-  #18 = Utf8               ConstantValue\n-  #19 = Long               512176391864l\n-  #21 = Utf8               value\n-  #22 = Utf8               I\n-  #23 = Utf8               <init>\n-  #24 = Utf8               ()V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               (I)V\n-  #28 = Utf8               (Ljava/lang/Number;)V\n-  #29 = Utf8               (Ljava/lang/String;)V\n-  #30 = Utf8               getValue\n-  #31 = Utf8               ()Ljava/lang/Integer;\n-  #32 = Utf8               setValue\n-  #33 = Utf8               increment\n-  #34 = Utf8               getAndIncrement\n-  #35 = Utf8               ()I\n-  #36 = Utf8               incrementAndGet\n-  #37 = Utf8               decrement\n-  #38 = Utf8               getAndDecrement\n-  #39 = Utf8               decrementAndGet\n-  #40 = Utf8               add\n-  #41 = Utf8               subtract\n-  #42 = Utf8               addAndGet\n-  #43 = Utf8               (I)I\n-  #44 = Utf8               (Ljava/lang/Number;)I\n-  #45 = Utf8               getAndAdd\n-  #46 = Utf8               intValue\n-  #47 = Utf8               longValue\n-  #48 = Utf8               ()J\n-  #49 = Utf8               floatValue\n-  #50 = Utf8               ()F\n-  #51 = Utf8               doubleValue\n-  #52 = Utf8               ()D\n-  #53 = Utf8               toInteger\n-  #54 = Utf8               equals\n-  #55 = Utf8               (Ljava/lang/Object;)Z\n-  #56 = Utf8               StackMapTable\n-  #57 = Utf8               hashCode\n-  #58 = Utf8               compareTo\n-  #59 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableInt;)I\n-  #60 = Utf8               toString\n-  #61 = Utf8               ()Ljava/lang/String;\n-  #62 = Utf8               (Ljava/lang/Object;)I\n-  #63 = Utf8               (Ljava/lang/Object;)V\n-  #64 = Utf8               ()Ljava/lang/Object;\n-  #65 = Utf8               Signature\n-  #66 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableInt;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n-  #67 = Utf8               SourceFile\n-  #68 = Utf8               MutableInt.java\n-  #69 = NameAndType        #23:#24        // \"<init>\":()V\n-  #70 = NameAndType        #21:#22        // value:I\n-  #71 = NameAndType        #46:#35        // intValue:()I\n-  #72 = Class              #86            // java/lang/Integer\n-  #73 = NameAndType        #87:#88        // parseInt:(Ljava/lang/String;)I\n-  #74 = NameAndType        #89:#90        // valueOf:(I)Ljava/lang/Integer;\n-  #75 = Utf8               org/apache/commons/lang3/mutable/MutableInt\n-  #76 = Class              #91            // org/apache/commons/lang3/math/NumberUtils\n-  #77 = NameAndType        #92:#93        // compare:(II)I\n-  #78 = Class              #94            // java/lang/String\n-  #79 = NameAndType        #89:#95        // valueOf:(I)Ljava/lang/String;\n-  #80 = NameAndType        #58:#59        // compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n-  #81 = Utf8               java/lang/Number\n-  #82 = NameAndType        #32:#28        // setValue:(Ljava/lang/Number;)V\n-  #83 = NameAndType        #30:#31        // getValue:()Ljava/lang/Integer;\n-  #84 = Utf8               java/lang/Comparable\n-  #85 = Utf8               org/apache/commons/lang3/mutable/Mutable\n-  #86 = Utf8               java/lang/Integer\n-  #87 = Utf8               parseInt\n-  #88 = Utf8               (Ljava/lang/String;)I\n-  #89 = Utf8               valueOf\n-  #90 = Utf8               (I)Ljava/lang/Integer;\n-  #91 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #92 = Utf8               compare\n-  #93 = Utf8               (II)I\n-  #94 = Utf8               java/lang/String\n-  #95 = Utf8               (I)Ljava/lang/String;\n+   #1 = Methodref          #2.#3          // java/lang/Number.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Number\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Number\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/lang3/mutable/MutableInt.value:I\n+   #8 = Class              #10            // org/apache/commons/lang3/mutable/MutableInt\n+   #9 = NameAndType        #11:#12        // value:I\n+  #10 = Utf8               org/apache/commons/lang3/mutable/MutableInt\n+  #11 = Utf8               value\n+  #12 = Utf8               I\n+  #13 = Methodref          #2.#14         // java/lang/Number.intValue:()I\n+  #14 = NameAndType        #15:#16        // intValue:()I\n+  #15 = Utf8               intValue\n+  #16 = Utf8               ()I\n+  #17 = Methodref          #18.#19        // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #18 = Class              #20            // java/lang/Integer\n+  #19 = NameAndType        #21:#22        // parseInt:(Ljava/lang/String;)I\n+  #20 = Utf8               java/lang/Integer\n+  #21 = Utf8               parseInt\n+  #22 = Utf8               (Ljava/lang/String;)I\n+  #23 = Methodref          #18.#24        // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+  #24 = NameAndType        #25:#26        // valueOf:(I)Ljava/lang/Integer;\n+  #25 = Utf8               valueOf\n+  #26 = Utf8               (I)Ljava/lang/Integer;\n+  #27 = Methodref          #8.#14         // org/apache/commons/lang3/mutable/MutableInt.intValue:()I\n+  #28 = Methodref          #29.#30        // org/apache/commons/lang3/math/NumberUtils.compare:(II)I\n+  #29 = Class              #31            // org/apache/commons/lang3/math/NumberUtils\n+  #30 = NameAndType        #32:#33        // compare:(II)I\n+  #31 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+  #32 = Utf8               compare\n+  #33 = Utf8               (II)I\n+  #34 = Methodref          #35.#36        // java/lang/String.valueOf:(I)Ljava/lang/String;\n+  #35 = Class              #37            // java/lang/String\n+  #36 = NameAndType        #25:#38        // valueOf:(I)Ljava/lang/String;\n+  #37 = Utf8               java/lang/String\n+  #38 = Utf8               (I)Ljava/lang/String;\n+  #39 = Methodref          #8.#40         // org/apache/commons/lang3/mutable/MutableInt.compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+  #40 = NameAndType        #41:#42        // compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+  #41 = Utf8               compareTo\n+  #42 = Utf8               (Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+  #43 = Methodref          #8.#44         // org/apache/commons/lang3/mutable/MutableInt.setValue:(Ljava/lang/Number;)V\n+  #44 = NameAndType        #45:#46        // setValue:(Ljava/lang/Number;)V\n+  #45 = Utf8               setValue\n+  #46 = Utf8               (Ljava/lang/Number;)V\n+  #47 = Methodref          #8.#48         // org/apache/commons/lang3/mutable/MutableInt.getValue:()Ljava/lang/Integer;\n+  #48 = NameAndType        #49:#50        // getValue:()Ljava/lang/Integer;\n+  #49 = Utf8               getValue\n+  #50 = Utf8               ()Ljava/lang/Integer;\n+  #51 = Class              #52            // java/lang/Comparable\n+  #52 = Utf8               java/lang/Comparable\n+  #53 = Class              #54            // org/apache/commons/lang3/mutable/Mutable\n+  #54 = Utf8               org/apache/commons/lang3/mutable/Mutable\n+  #55 = Utf8               serialVersionUID\n+  #56 = Utf8               J\n+  #57 = Utf8               ConstantValue\n+  #58 = Long               512176391864l\n+  #60 = Utf8               Code\n+  #61 = Utf8               LineNumberTable\n+  #62 = Utf8               (I)V\n+  #63 = Utf8               (Ljava/lang/String;)V\n+  #64 = Utf8               increment\n+  #65 = Utf8               getAndIncrement\n+  #66 = Utf8               incrementAndGet\n+  #67 = Utf8               decrement\n+  #68 = Utf8               getAndDecrement\n+  #69 = Utf8               decrementAndGet\n+  #70 = Utf8               add\n+  #71 = Utf8               subtract\n+  #72 = Utf8               addAndGet\n+  #73 = Utf8               (I)I\n+  #74 = Utf8               (Ljava/lang/Number;)I\n+  #75 = Utf8               getAndAdd\n+  #76 = Utf8               longValue\n+  #77 = Utf8               ()J\n+  #78 = Utf8               floatValue\n+  #79 = Utf8               ()F\n+  #80 = Utf8               doubleValue\n+  #81 = Utf8               ()D\n+  #82 = Utf8               toInteger\n+  #83 = Utf8               equals\n+  #84 = Utf8               (Ljava/lang/Object;)Z\n+  #85 = Utf8               StackMapTable\n+  #86 = Utf8               hashCode\n+  #87 = Utf8               toString\n+  #88 = Utf8               ()Ljava/lang/String;\n+  #89 = Utf8               (Ljava/lang/Object;)I\n+  #90 = Utf8               (Ljava/lang/Object;)V\n+  #91 = Utf8               ()Ljava/lang/Object;\n+  #92 = Utf8               Signature\n+  #93 = Utf8               Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableInt;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n+  #94 = Utf8               SourceFile\n+  #95 = Utf8               MutableInt.java\n {\n   private static final long serialVersionUID = 512176391864l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 512176391864l\n \n   private int value;\n@@ -129,15 +129,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #2                  // Field value:I\n+         6: putfield      #7                  // Field value:I\n          9: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 4\n         line 56: 9\n \n   public org.apache.commons.lang3.mutable.MutableInt(java.lang.Number);\n@@ -145,16 +145,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n-         9: putfield      #2                  // Field value:I\n+         6: invokevirtual #13                 // Method java/lang/Number.intValue:()I\n+         9: putfield      #7                  // Field value:I\n         12: return\n       LineNumberTable:\n         line 65: 0\n         line 66: 4\n         line 67: 12\n \n   public org.apache.commons.lang3.mutable.MutableInt(java.lang.String);\n@@ -162,389 +162,389 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Number.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: invokestatic  #4                  // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-         9: putfield      #2                  // Field value:I\n+         6: invokestatic  #17                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+         9: putfield      #7                  // Field value:I\n         12: return\n       LineNumberTable:\n         line 77: 0\n         line 78: 4\n         line 79: 12\n \n   public java.lang.Integer getValue();\n     descriptor: ()Ljava/lang/Integer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n-         4: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         1: getfield      #7                  // Field value:I\n+         4: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          7: areturn\n       LineNumberTable:\n         line 89: 0\n \n   public void setValue(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #2                  // Field value:I\n+         2: putfield      #7                  // Field value:I\n          5: return\n       LineNumberTable:\n         line 98: 0\n         line 99: 5\n \n   public void setValue(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n-         5: putfield      #2                  // Field value:I\n+         2: invokevirtual #13                 // Method java/lang/Number.intValue:()I\n+         5: putfield      #7                  // Field value:I\n          8: return\n       LineNumberTable:\n         line 109: 0\n         line 110: 8\n \n   public void increment();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iconst_1\n          6: iadd\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 10\n \n   public int getAndIncrement();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: istore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:I\n+         7: getfield      #7                  // Field value:I\n         10: iconst_1\n         11: iadd\n-        12: putfield      #2                  // Field value:I\n+        12: putfield      #7                  // Field value:I\n         15: iload_1\n         16: ireturn\n       LineNumberTable:\n         line 130: 0\n         line 131: 5\n         line 132: 15\n \n   public int incrementAndGet();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iconst_1\n          6: iadd\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: aload_0\n-        11: getfield      #2                  // Field value:I\n+        11: getfield      #7                  // Field value:I\n         14: ireturn\n       LineNumberTable:\n         line 143: 0\n         line 144: 10\n \n   public void decrement();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iconst_1\n          6: isub\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: return\n       LineNumberTable:\n         line 153: 0\n         line 154: 10\n \n   public int getAndDecrement();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: istore_1\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:I\n+         7: getfield      #7                  // Field value:I\n         10: iconst_1\n         11: isub\n-        12: putfield      #2                  // Field value:I\n+        12: putfield      #7                  // Field value:I\n         15: iload_1\n         16: ireturn\n       LineNumberTable:\n         line 164: 0\n         line 165: 5\n         line 166: 15\n \n   public int decrementAndGet();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iconst_1\n          6: isub\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: aload_0\n-        11: getfield      #2                  // Field value:I\n+        11: getfield      #7                  // Field value:I\n         14: ireturn\n       LineNumberTable:\n         line 177: 0\n         line 178: 10\n \n   public void add(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iload_1\n          6: iadd\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: return\n       LineNumberTable:\n         line 189: 0\n         line 190: 10\n \n   public void add(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n+         6: invokevirtual #13                 // Method java/lang/Number.intValue:()I\n          9: iadd\n-        10: putfield      #2                  // Field value:I\n+        10: putfield      #7                  // Field value:I\n         13: return\n       LineNumberTable:\n         line 200: 0\n         line 201: 13\n \n   public void subtract(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iload_1\n          6: isub\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: return\n       LineNumberTable:\n         line 210: 0\n         line 211: 10\n \n   public void subtract(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n+         6: invokevirtual #13                 // Method java/lang/Number.intValue:()I\n          9: isub\n-        10: putfield      #2                  // Field value:I\n+        10: putfield      #7                  // Field value:I\n         13: return\n       LineNumberTable:\n         line 221: 0\n         line 222: 13\n \n   public int addAndGet(int);\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: iload_1\n          6: iadd\n-         7: putfield      #2                  // Field value:I\n+         7: putfield      #7                  // Field value:I\n         10: aload_0\n-        11: getfield      #2                  // Field value:I\n+        11: getfield      #7                  // Field value:I\n         14: ireturn\n       LineNumberTable:\n         line 233: 0\n         line 234: 10\n \n   public int addAndGet(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: dup\n-         2: getfield      #2                  // Field value:I\n+         2: getfield      #7                  // Field value:I\n          5: aload_1\n-         6: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n+         6: invokevirtual #13                 // Method java/lang/Number.intValue:()I\n          9: iadd\n-        10: putfield      #2                  // Field value:I\n+        10: putfield      #7                  // Field value:I\n         13: aload_0\n-        14: getfield      #2                  // Field value:I\n+        14: getfield      #7                  // Field value:I\n         17: ireturn\n       LineNumberTable:\n         line 247: 0\n         line 248: 13\n \n   public int getAndAdd(int);\n     descriptor: (I)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: istore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:I\n+         7: getfield      #7                  // Field value:I\n         10: iload_1\n         11: iadd\n-        12: putfield      #2                  // Field value:I\n+        12: putfield      #7                  // Field value:I\n         15: iload_2\n         16: ireturn\n       LineNumberTable:\n         line 260: 0\n         line 261: 5\n         line 262: 15\n \n   public int getAndAdd(java.lang.Number);\n     descriptor: (Ljava/lang/Number;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: istore_2\n          5: aload_0\n          6: dup\n-         7: getfield      #2                  // Field value:I\n+         7: getfield      #7                  // Field value:I\n         10: aload_1\n-        11: invokevirtual #3                  // Method java/lang/Number.intValue:()I\n+        11: invokevirtual #13                 // Method java/lang/Number.intValue:()I\n         14: iadd\n-        15: putfield      #2                  // Field value:I\n+        15: putfield      #7                  // Field value:I\n         18: iload_2\n         19: ireturn\n       LineNumberTable:\n         line 275: 0\n         line 276: 5\n         line 277: 18\n \n   public int intValue();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: ireturn\n       LineNumberTable:\n         line 289: 0\n \n   public long longValue();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: i2l\n          5: lreturn\n       LineNumberTable:\n         line 299: 0\n \n   public float floatValue();\n     descriptor: ()F\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: i2f\n          5: freturn\n       LineNumberTable:\n         line 309: 0\n \n   public double doubleValue();\n     descriptor: ()D\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: i2d\n          5: dreturn\n       LineNumberTable:\n         line 319: 0\n \n   public java.lang.Integer toInteger();\n     descriptor: ()Ljava/lang/Integer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #6                  // Method intValue:()I\n-         4: invokestatic  #5                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         1: invokevirtual #27                 // Method intValue:()I\n+         4: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          7: areturn\n       LineNumberTable:\n         line 329: 0\n \n   public boolean equals(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: instanceof    #7                  // class org/apache/commons/lang3/mutable/MutableInt\n+         1: instanceof    #8                  // class org/apache/commons/lang3/mutable/MutableInt\n          4: ifeq          27\n          7: aload_0\n-         8: getfield      #2                  // Field value:I\n+         8: getfield      #7                  // Field value:I\n         11: aload_1\n-        12: checkcast     #7                  // class org/apache/commons/lang3/mutable/MutableInt\n-        15: invokevirtual #6                  // Method intValue:()I\n+        12: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableInt\n+        15: invokevirtual #27                 // Method intValue:()I\n         18: if_icmpne     25\n         21: iconst_1\n         22: goto          26\n         25: iconst_0\n         26: ireturn\n         27: iconst_0\n         28: ireturn\n@@ -560,77 +560,77 @@\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: ireturn\n       LineNumberTable:\n         line 356: 0\n \n   public int compareTo(org.apache.commons.lang3.mutable.MutableInt);\n     descriptor: (Lorg/apache/commons/lang3/mutable/MutableInt;)I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n+         1: getfield      #7                  // Field value:I\n          4: aload_1\n-         5: getfield      #2                  // Field value:I\n-         8: invokestatic  #8                  // Method org/apache/commons/lang3/math/NumberUtils.compare:(II)I\n+         5: getfield      #7                  // Field value:I\n+         8: invokestatic  #28                 // Method org/apache/commons/lang3/math/NumberUtils.compare:(II)I\n         11: ireturn\n       LineNumberTable:\n         line 368: 0\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field value:I\n-         4: invokestatic  #9                  // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n+         1: getfield      #7                  // Field value:I\n+         4: invokestatic  #34                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 379: 0\n \n   public int compareTo(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)I\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #7                  // class org/apache/commons/lang3/mutable/MutableInt\n-         5: invokevirtual #10                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n+         2: checkcast     #8                  // class org/apache/commons/lang3/mutable/MutableInt\n+         5: invokevirtual #39                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableInt;)I\n          8: ireturn\n       LineNumberTable:\n         line 29: 0\n \n   public void setValue(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #11                 // class java/lang/Number\n-         5: invokevirtual #12                 // Method setValue:(Ljava/lang/Number;)V\n+         2: checkcast     #2                  // class java/lang/Number\n+         5: invokevirtual #43                 // Method setValue:(Ljava/lang/Number;)V\n          8: return\n       LineNumberTable:\n         line 29: 0\n \n   public java.lang.Object getValue();\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #13                 // Method getValue:()Ljava/lang/Integer;\n+         1: invokevirtual #47                 // Method getValue:()Ljava/lang/Integer;\n          4: areturn\n       LineNumberTable:\n         line 29: 0\n }\n-Signature: #66                          // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableInt;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n+Signature: #93                          // Ljava/lang/Number;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableInt;>;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Number;>;\n SourceFile: \"MutableInt.java\"\n"}]}
