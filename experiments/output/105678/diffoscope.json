{"diffoscope-json-version": 1, "source1": "first/ObservableInputStream$Observer.class", "source2": "second/ObservableInputStream$Observer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,26 +1,26 @@\n-  SHA-256 checksum 74352f38fb62ba448d36eeecd40d59c7261b8135e156f0a60f3880e2ec30b4d9\n+  SHA-256 checksum fcbffc74dbabc676acbaf83958c3666db8a01f730ee36d00e843a484e8181de8\n   Compiled from \"ObservableInputStream.java\"\n public abstract class org.apache.commons.io.input.ObservableInputStream$Observer\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #7                          // org/apache/commons/io/input/ObservableInputStream$Observer\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/io/input/ObservableInputStream$Observer\n+  super_class: #3                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 6, attributes: 2\n Constant pool:\n-   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n-   #2 = Class              #4             // java/lang/Object\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/input/ObservableInputStream$Observer\n+   #2 = Utf8               org/apache/commons/io/input/ObservableInputStream$Observer\n+   #3 = Class              #4             // java/lang/Object\n    #4 = Utf8               java/lang/Object\n    #5 = Utf8               <init>\n    #6 = Utf8               ()V\n-   #7 = Class              #8             // org/apache/commons/io/input/ObservableInputStream$Observer\n-   #8 = Utf8               org/apache/commons/io/input/ObservableInputStream$Observer\n-   #9 = Utf8               Code\n+   #7 = Utf8               Code\n+   #8 = Methodref          #3.#9          // java/lang/Object.\"<init>\":()V\n+   #9 = NameAndType        #5:#6          // \"<init>\":()V\n   #10 = Utf8               LineNumberTable\n   #11 = Utf8               LocalVariableTable\n   #12 = Utf8               this\n   #13 = Utf8               Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n   #14 = Utf8               closed\n   #15 = Utf8               Exceptions\n   #16 = Class              #17            // java/io/IOException\n@@ -48,94 +48,94 @@\n {\n   public org.apache.commons.io.input.ObservableInputStream$Observer();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #8                  // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 48: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n \n   public void closed() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 58: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void data(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=4, args_size=4\n          0: return\n       LineNumberTable:\n         line 72: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n             0       1     1 buffer   [B\n             0       1     2 offset   I\n             0       1     3 length   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void data(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=2, args_size=2\n          0: return\n       LineNumberTable:\n         line 85: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n             0       1     1 value   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void error(java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_1\n          1: athrow\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       2     0  this   Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n             0       2     1 exception   Ljava/io/IOException;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void finished() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=0, locals=1, args_size=1\n          0: return\n       LineNumberTable:\n         line 106: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       1     0  this   Lorg/apache/commons/io/input/ObservableInputStream$Observer;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ObservableInputStream.java\"\n InnerClasses:\n-  public static abstract #37= #7 of #35;  // Observer=class org/apache/commons/io/input/ObservableInputStream$Observer of class org/apache/commons/io/input/ObservableInputStream\n+  public static abstract #37= #1 of #35;  // Observer=class org/apache/commons/io/input/ObservableInputStream$Observer of class org/apache/commons/io/input/ObservableInputStream\n"}]}
