{"diffoscope-json-version": 1, "source1": "first/IllegalIdentifierNameCheck.class", "source2": "second/IllegalIdentifierNameCheck.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,78 +1,78 @@\n-  SHA-256 checksum f7fbe1762d81c335d46b1dc0fcf111bb2df39220c91375ad73e818de19c2f504\n+  SHA-256 checksum c694e18582db19287e3e8df26b4b94271e19beaf1e8219ee795ef46f1bc44543\n   Compiled from \"IllegalIdentifierNameCheck.java\"\n public class com.puppycrawl.tools.checkstyle.checks.naming.IllegalIdentifierNameCheck extends com.puppycrawl.tools.checkstyle.checks.naming.AbstractNameCheck\n   minor version: 0\n   major version: 55\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck\n-  super_class: #8                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+  this_class: #10                         // com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck\n+  super_class: #4                         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n   interfaces: 0, fields: 0, methods: 5, attributes: 2\n Constant pool:\n-   #1 = String             #24            // (?i)^(?!(record|yield|var|permits|sealed|_)$).+$\n-   #2 = Methodref          #8.#25         // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n-   #3 = Methodref          #7.#26         // com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck.getAcceptableTokens:()[I\n-   #4 = Class              #27            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n-   #5 = Fieldref           #28.#29        // com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n-   #6 = InterfaceMethodref #30.#31        // com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-   #7 = Class              #32            // com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck\n-   #8 = Class              #33            // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n-   #9 = Utf8               <init>\n-  #10 = Utf8               ()V\n-  #11 = Utf8               Code\n-  #12 = Utf8               LineNumberTable\n-  #13 = Utf8               getDefaultTokens\n+   #1 = String             #2             // (?i)^(?!(record|yield|var|permits|sealed|_)$).+$\n+   #2 = Utf8               (?i)^(?!(record|yield|var|permits|sealed|_)$).+$\n+   #3 = Methodref          #4.#5          // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n+   #4 = Class              #6             // com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+   #5 = NameAndType        #7:#8          // \"<init>\":(Ljava/lang/String;)V\n+   #6 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/lang/String;)V\n+   #9 = Methodref          #10.#11        // com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck.getAcceptableTokens:()[I\n+  #10 = Class              #12            // com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck\n+  #11 = NameAndType        #13:#14        // getAcceptableTokens:()[I\n+  #12 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck\n+  #13 = Utf8               getAcceptableTokens\n   #14 = Utf8               ()[I\n-  #15 = Utf8               getAcceptableTokens\n-  #16 = Utf8               getRequiredTokens\n-  #17 = Utf8               mustCheckName\n-  #18 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n-  #19 = Utf8               StackMapTable\n-  #20 = Utf8               SourceFile\n-  #21 = Utf8               IllegalIdentifierNameCheck.java\n-  #22 = Utf8               RuntimeVisibleAnnotations\n-  #23 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n-  #24 = Utf8               (?i)^(?!(record|yield|var|permits|sealed|_)$).+$\n-  #25 = NameAndType        #9:#34         // \"<init>\":(Ljava/lang/String;)V\n-  #26 = NameAndType        #15:#14        // getAcceptableTokens:()[I\n-  #27 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n-  #28 = Class              #35            // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #29 = NameAndType        #36:#37        // EMPTY_INT_ARRAY:[I\n-  #30 = Class              #38            // com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #31 = NameAndType        #39:#40        // findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n-  #32 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/IllegalIdentifierNameCheck\n-  #33 = Utf8               com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck\n-  #34 = Utf8               (Ljava/lang/String;)V\n-  #35 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n-  #36 = Utf8               EMPTY_INT_ARRAY\n-  #37 = Utf8               [I\n-  #38 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n-  #39 = Utf8               findFirstToken\n-  #40 = Utf8               (I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #15 = Class              #16            // com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #16 = Utf8               com/puppycrawl/tools/checkstyle/api/TokenTypes\n+  #17 = Fieldref           #18.#19        // com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n+  #18 = Class              #20            // com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+  #19 = NameAndType        #21:#22        // EMPTY_INT_ARRAY:[I\n+  #20 = Utf8               com/puppycrawl/tools/checkstyle/utils/CommonUtil\n+  #21 = Utf8               EMPTY_INT_ARRAY\n+  #22 = Utf8               [I\n+  #23 = InterfaceMethodref #24.#25        // com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #24 = Class              #26            // com/puppycrawl/tools/checkstyle/api/DetailAST\n+  #25 = NameAndType        #27:#28        // findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #26 = Utf8               com/puppycrawl/tools/checkstyle/api/DetailAST\n+  #27 = Utf8               findFirstToken\n+  #28 = Utf8               (I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+  #29 = Utf8               ()V\n+  #30 = Utf8               Code\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               getDefaultTokens\n+  #33 = Utf8               getRequiredTokens\n+  #34 = Utf8               mustCheckName\n+  #35 = Utf8               (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n+  #36 = Utf8               StackMapTable\n+  #37 = Utf8               SourceFile\n+  #38 = Utf8               IllegalIdentifierNameCheck.java\n+  #39 = Utf8               RuntimeVisibleAnnotations\n+  #40 = Utf8               Lcom/puppycrawl/tools/checkstyle/StatelessCheck;\n {\n   public com.puppycrawl.tools.checkstyle.checks.naming.IllegalIdentifierNameCheck();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: ldc           #1                  // String (?i)^(?!(record|yield|var|permits|sealed|_)$).+$\n-         3: invokespecial #2                  // Method com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n+         3: invokespecial #3                  // Method com/puppycrawl/tools/checkstyle/checks/naming/AbstractNameCheck.\"<init>\":(Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 97: 0\n         line 98: 6\n \n   public int[] getDefaultTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #3                  // Method getAcceptableTokens:()[I\n+         1: invokevirtual #9                  // Method getAcceptableTokens:()[I\n          4: areturn\n       LineNumberTable:\n         line 102: 0\n \n   public int[] getAcceptableTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n@@ -137,36 +137,36 @@\n         line 107: 0\n \n   public int[] getRequiredTokens();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #5                  // Field com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n+         0: getstatic     #17                 // Field com/puppycrawl/tools/checkstyle/utils/CommonUtil.EMPTY_INT_ARRAY:[I\n          3: areturn\n       LineNumberTable:\n         line 126: 0\n \n   protected boolean mustCheckName(com.puppycrawl.tools.checkstyle.api.DetailAST);\n     descriptor: (Lcom/puppycrawl/tools/checkstyle/api/DetailAST;)Z\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: bipush        58\n-         3: invokeinterface #6,  2            // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n+         3: invokeinterface #23,  2           // InterfaceMethod com/puppycrawl/tools/checkstyle/api/DetailAST.findFirstToken:(I)Lcom/puppycrawl/tools/checkstyle/api/DetailAST;\n          8: ifnull        15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n       LineNumberTable:\n         line 131: 0\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n }\n SourceFile: \"IllegalIdentifierNameCheck.java\"\n RuntimeVisibleAnnotations:\n-  0: #23()\n+  0: #40()\n     com.puppycrawl.tools.checkstyle.StatelessCheck\n"}]}
