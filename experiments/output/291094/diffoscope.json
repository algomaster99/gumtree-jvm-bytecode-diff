{"diffoscope-json-version": 1, "source1": "first/BooleanUtils.class", "source2": "second/BooleanUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,64 +1,64 @@\n-  SHA-256 checksum 2a0e90a0da75a3baceb5d121b717dda40bd891a19b19f5122070d2603a7dd071\n+  SHA-256 checksum 61e00cd3e19de37896a8f89e8fbdb59142b57b6c01dadee7833a10c428d4a357\n   Compiled from \"BooleanUtils.java\"\n public class org.apache.commons.lang3.BooleanUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #38                         // org/apache/commons/lang3/BooleanUtils\n   super_class: #39                        // java/lang/Object\n   interfaces: 0, fields: 0, methods: 41, attributes: 1\n Constant pool:\n-    #1 = Methodref          #39.#99       // java/lang/Object.\"<init>\":()V\n-    #2 = Methodref          #100.#101     // java/lang/Boolean.booleanValue:()Z\n-    #3 = Fieldref           #100.#102     // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n-    #4 = Fieldref           #100.#103     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-    #5 = Methodref          #100.#104     // java/lang/Boolean.equals:(Ljava/lang/Object;)Z\n-    #6 = Methodref          #38.#105      // org/apache/commons/lang3/BooleanUtils.isTrue:(Ljava/lang/Boolean;)Z\n-    #7 = Methodref          #38.#106      // org/apache/commons/lang3/BooleanUtils.isFalse:(Ljava/lang/Boolean;)Z\n-    #8 = Methodref          #107.#108     // java/lang/Integer.intValue:()I\n-    #9 = Class              #109          // java/lang/IllegalArgumentException\n-   #10 = String             #110          // The Integer did not match either specified value\n-   #11 = Methodref          #9.#111       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #12 = Methodref          #107.#104     // java/lang/Integer.equals:(Ljava/lang/Object;)Z\n-   #13 = String             #112          // The Integer did not match any specified value\n-   #14 = Fieldref           #113.#114     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n-   #15 = Fieldref           #113.#115     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n-   #16 = String             #116          // true\n-   #17 = Methodref          #117.#118     // java/lang/String.length:()I\n-   #18 = Methodref          #117.#119     // java/lang/String.charAt:(I)C\n-   #19 = Methodref          #117.#104     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #20 = String             #120          // The String did not match any specified value\n-   #21 = Methodref          #38.#121      // org/apache/commons/lang3/BooleanUtils.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n-   #22 = String             #122          // The String did not match either specified value\n-   #23 = String             #123          // false\n-   #24 = Methodref          #38.#124      // org/apache/commons/lang3/BooleanUtils.toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #25 = String             #125          // on\n-   #26 = String             #126          // off\n-   #27 = String             #127          // yes\n-   #28 = String             #128          // no\n-   #29 = Methodref          #38.#129      // org/apache/commons/lang3/BooleanUtils.toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-   #30 = String             #130          // The Array must not be null\n-   #31 = String             #131          // Array is empty\n-   #32 = Methodref          #132.#133     // org/apache/commons/lang3/ArrayUtils.toPrimitive:([Ljava/lang/Boolean;)[Z\n-   #33 = Methodref          #38.#134      // org/apache/commons/lang3/BooleanUtils.and:([Z)Z\n-   #34 = Class              #135          // java/lang/NullPointerException\n-   #35 = String             #136          // The array must not contain any null elements\n-   #36 = Methodref          #38.#137      // org/apache/commons/lang3/BooleanUtils.or:([Z)Z\n-   #37 = Methodref          #38.#138      // org/apache/commons/lang3/BooleanUtils.xor:([Z)Z\n-   #38 = Class              #139          // org/apache/commons/lang3/BooleanUtils\n-   #39 = Class              #140          // java/lang/Object\n+    #1 = Methodref          #39.#98       // java/lang/Object.\"<init>\":()V\n+    #2 = Methodref          #47.#99       // java/lang/Boolean.booleanValue:()Z\n+    #3 = Fieldref           #47.#100      // java/lang/Boolean.FALSE:Ljava/lang/Boolean;\n+    #4 = Fieldref           #47.#101      // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+    #5 = Methodref          #47.#102      // java/lang/Boolean.equals:(Ljava/lang/Object;)Z\n+    #6 = Methodref          #38.#103      // org/apache/commons/lang3/BooleanUtils.isTrue:(Ljava/lang/Boolean;)Z\n+    #7 = Methodref          #38.#104      // org/apache/commons/lang3/BooleanUtils.isFalse:(Ljava/lang/Boolean;)Z\n+    #8 = Methodref          #68.#105      // java/lang/Integer.intValue:()I\n+    #9 = Class              #106          // java/lang/IllegalArgumentException\n+   #10 = String             #107          // The Integer did not match either specified value\n+   #11 = Methodref          #9.#108       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #12 = Methodref          #68.#102      // java/lang/Integer.equals:(Ljava/lang/Object;)Z\n+   #13 = String             #109          // The Integer did not match any specified value\n+   #14 = Fieldref           #110.#111     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ONE:Ljava/lang/Integer;\n+   #15 = Fieldref           #110.#112     // org/apache/commons/lang3/math/NumberUtils.INTEGER_ZERO:Ljava/lang/Integer;\n+   #16 = String             #113          // true\n+   #17 = Methodref          #75.#114      // java/lang/String.length:()I\n+   #18 = Methodref          #75.#115      // java/lang/String.charAt:(I)C\n+   #19 = Methodref          #75.#102      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+   #20 = String             #116          // The String did not match any specified value\n+   #21 = Methodref          #38.#117      // org/apache/commons/lang3/BooleanUtils.toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n+   #22 = String             #118          // The String did not match either specified value\n+   #23 = String             #119          // false\n+   #24 = Methodref          #38.#120      // org/apache/commons/lang3/BooleanUtils.toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #25 = String             #121          // on\n+   #26 = String             #122          // off\n+   #27 = String             #123          // yes\n+   #28 = String             #124          // no\n+   #29 = Methodref          #38.#125      // org/apache/commons/lang3/BooleanUtils.toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+   #30 = String             #126          // The Array must not be null\n+   #31 = String             #127          // Array is empty\n+   #32 = Methodref          #128.#129     // org/apache/commons/lang3/ArrayUtils.toPrimitive:([Ljava/lang/Boolean;)[Z\n+   #33 = Methodref          #38.#130      // org/apache/commons/lang3/BooleanUtils.and:([Z)Z\n+   #34 = Class              #131          // java/lang/NullPointerException\n+   #35 = String             #132          // The array must not contain any null elements\n+   #36 = Methodref          #38.#133      // org/apache/commons/lang3/BooleanUtils.or:([Z)Z\n+   #37 = Methodref          #38.#134      // org/apache/commons/lang3/BooleanUtils.xor:([Z)Z\n+   #38 = Class              #135          // org/apache/commons/lang3/BooleanUtils\n+   #39 = Class              #136          // java/lang/Object\n    #40 = Utf8               <init>\n    #41 = Utf8               ()V\n    #42 = Utf8               Code\n    #43 = Utf8               LineNumberTable\n    #44 = Utf8               negate\n    #45 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/Boolean;\n    #46 = Utf8               StackMapTable\n-   #47 = Class              #141          // java/lang/Boolean\n+   #47 = Class              #137          // java/lang/Boolean\n    #48 = Utf8               isTrue\n    #49 = Utf8               (Ljava/lang/Boolean;)Z\n    #50 = Utf8               isNotTrue\n    #51 = Utf8               isFalse\n    #52 = Utf8               isNotFalse\n    #53 = Utf8               toBoolean\n    #54 = Utf8               toBooleanDefaultIfNull\n@@ -71,112 +71,108 @@\n    #61 = Utf8               (Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Z\n    #62 = Utf8               (IIII)Ljava/lang/Boolean;\n    #63 = Utf8               (Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Boolean;\n    #64 = Utf8               toInteger\n    #65 = Utf8               (Z)I\n    #66 = Utf8               toIntegerObject\n    #67 = Utf8               (Z)Ljava/lang/Integer;\n-   #68 = Class              #142          // java/lang/Integer\n+   #68 = Class              #138          // java/lang/Integer\n    #69 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/Integer;\n    #70 = Utf8               (ZII)I\n    #71 = Utf8               (Ljava/lang/Boolean;III)I\n    #72 = Utf8               (ZLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n    #73 = Utf8               (Ljava/lang/Boolean;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;\n    #74 = Utf8               (Ljava/lang/String;)Ljava/lang/Boolean;\n-   #75 = Class              #143          // java/lang/String\n+   #75 = Class              #139          // java/lang/String\n    #76 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Boolean;\n    #77 = Utf8               (Ljava/lang/String;)Z\n    #78 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z\n    #79 = Utf8               toStringTrueFalse\n    #80 = Utf8               (Ljava/lang/Boolean;)Ljava/lang/String;\n    #81 = Utf8               toStringOnOff\n    #82 = Utf8               toStringYesNo\n    #83 = Utf8               toString\n    #84 = Utf8               (Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n    #85 = Utf8               (Z)Ljava/lang/String;\n    #86 = Utf8               (ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n    #87 = Utf8               and\n    #88 = Utf8               ([Z)Z\n-   #89 = Class              #144          // \"[Z\"\n+   #89 = Class              #140          // \"[Z\"\n    #90 = Utf8               ([Ljava/lang/Boolean;)Ljava/lang/Boolean;\n-   #91 = Class              #145          // \"[Ljava/lang/Boolean;\"\n-   #92 = Class              #135          // java/lang/NullPointerException\n-   #93 = Utf8               or\n-   #94 = Utf8               xor\n-   #95 = Utf8               compare\n-   #96 = Utf8               (ZZ)I\n-   #97 = Utf8               SourceFile\n-   #98 = Utf8               BooleanUtils.java\n-   #99 = NameAndType        #40:#41       // \"<init>\":()V\n-  #100 = Class              #141          // java/lang/Boolean\n-  #101 = NameAndType        #146:#147     // booleanValue:()Z\n-  #102 = NameAndType        #148:#149     // FALSE:Ljava/lang/Boolean;\n-  #103 = NameAndType        #150:#149     // TRUE:Ljava/lang/Boolean;\n-  #104 = NameAndType        #151:#152     // equals:(Ljava/lang/Object;)Z\n-  #105 = NameAndType        #48:#49       // isTrue:(Ljava/lang/Boolean;)Z\n-  #106 = NameAndType        #51:#49       // isFalse:(Ljava/lang/Boolean;)Z\n-  #107 = Class              #142          // java/lang/Integer\n-  #108 = NameAndType        #153:#154     // intValue:()I\n-  #109 = Utf8               java/lang/IllegalArgumentException\n-  #110 = Utf8               The Integer did not match either specified value\n-  #111 = NameAndType        #40:#155      // \"<init>\":(Ljava/lang/String;)V\n-  #112 = Utf8               The Integer did not match any specified value\n-  #113 = Class              #156          // org/apache/commons/lang3/math/NumberUtils\n-  #114 = NameAndType        #157:#158     // INTEGER_ONE:Ljava/lang/Integer;\n-  #115 = NameAndType        #159:#158     // INTEGER_ZERO:Ljava/lang/Integer;\n-  #116 = Utf8               true\n-  #117 = Class              #143          // java/lang/String\n-  #118 = NameAndType        #160:#154     // length:()I\n-  #119 = NameAndType        #161:#162     // charAt:(I)C\n-  #120 = Utf8               The String did not match any specified value\n-  #121 = NameAndType        #57:#74       // toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n-  #122 = Utf8               The String did not match either specified value\n-  #123 = Utf8               false\n-  #124 = NameAndType        #83:#84       // toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #125 = Utf8               on\n-  #126 = Utf8               off\n-  #127 = Utf8               yes\n-  #128 = Utf8               no\n-  #129 = NameAndType        #83:#86       // toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #130 = Utf8               The Array must not be null\n-  #131 = Utf8               Array is empty\n-  #132 = Class              #163          // org/apache/commons/lang3/ArrayUtils\n-  #133 = NameAndType        #164:#165     // toPrimitive:([Ljava/lang/Boolean;)[Z\n-  #134 = NameAndType        #87:#88       // and:([Z)Z\n-  #135 = Utf8               java/lang/NullPointerException\n-  #136 = Utf8               The array must not contain any null elements\n-  #137 = NameAndType        #93:#88       // or:([Z)Z\n-  #138 = NameAndType        #94:#88       // xor:([Z)Z\n-  #139 = Utf8               org/apache/commons/lang3/BooleanUtils\n-  #140 = Utf8               java/lang/Object\n-  #141 = Utf8               java/lang/Boolean\n-  #142 = Utf8               java/lang/Integer\n-  #143 = Utf8               java/lang/String\n-  #144 = Utf8               [Z\n-  #145 = Utf8               [Ljava/lang/Boolean;\n-  #146 = Utf8               booleanValue\n-  #147 = Utf8               ()Z\n-  #148 = Utf8               FALSE\n-  #149 = Utf8               Ljava/lang/Boolean;\n-  #150 = Utf8               TRUE\n-  #151 = Utf8               equals\n-  #152 = Utf8               (Ljava/lang/Object;)Z\n-  #153 = Utf8               intValue\n-  #154 = Utf8               ()I\n-  #155 = Utf8               (Ljava/lang/String;)V\n-  #156 = Utf8               org/apache/commons/lang3/math/NumberUtils\n-  #157 = Utf8               INTEGER_ONE\n-  #158 = Utf8               Ljava/lang/Integer;\n-  #159 = Utf8               INTEGER_ZERO\n-  #160 = Utf8               length\n-  #161 = Utf8               charAt\n-  #162 = Utf8               (I)C\n-  #163 = Utf8               org/apache/commons/lang3/ArrayUtils\n-  #164 = Utf8               toPrimitive\n-  #165 = Utf8               ([Ljava/lang/Boolean;)[Z\n+   #91 = Class              #141          // \"[Ljava/lang/Boolean;\"\n+   #92 = Utf8               or\n+   #93 = Utf8               xor\n+   #94 = Utf8               compare\n+   #95 = Utf8               (ZZ)I\n+   #96 = Utf8               SourceFile\n+   #97 = Utf8               BooleanUtils.java\n+   #98 = NameAndType        #40:#41       // \"<init>\":()V\n+   #99 = NameAndType        #142:#143     // booleanValue:()Z\n+  #100 = NameAndType        #144:#145     // FALSE:Ljava/lang/Boolean;\n+  #101 = NameAndType        #146:#145     // TRUE:Ljava/lang/Boolean;\n+  #102 = NameAndType        #147:#148     // equals:(Ljava/lang/Object;)Z\n+  #103 = NameAndType        #48:#49       // isTrue:(Ljava/lang/Boolean;)Z\n+  #104 = NameAndType        #51:#49       // isFalse:(Ljava/lang/Boolean;)Z\n+  #105 = NameAndType        #149:#150     // intValue:()I\n+  #106 = Utf8               java/lang/IllegalArgumentException\n+  #107 = Utf8               The Integer did not match either specified value\n+  #108 = NameAndType        #40:#151      // \"<init>\":(Ljava/lang/String;)V\n+  #109 = Utf8               The Integer did not match any specified value\n+  #110 = Class              #152          // org/apache/commons/lang3/math/NumberUtils\n+  #111 = NameAndType        #153:#154     // INTEGER_ONE:Ljava/lang/Integer;\n+  #112 = NameAndType        #155:#154     // INTEGER_ZERO:Ljava/lang/Integer;\n+  #113 = Utf8               true\n+  #114 = NameAndType        #156:#150     // length:()I\n+  #115 = NameAndType        #157:#158     // charAt:(I)C\n+  #116 = Utf8               The String did not match any specified value\n+  #117 = NameAndType        #57:#74       // toBooleanObject:(Ljava/lang/String;)Ljava/lang/Boolean;\n+  #118 = Utf8               The String did not match either specified value\n+  #119 = Utf8               false\n+  #120 = NameAndType        #83:#84       // toString:(Ljava/lang/Boolean;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #121 = Utf8               on\n+  #122 = Utf8               off\n+  #123 = Utf8               yes\n+  #124 = Utf8               no\n+  #125 = NameAndType        #83:#86       // toString:(ZLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #126 = Utf8               The Array must not be null\n+  #127 = Utf8               Array is empty\n+  #128 = Class              #159          // org/apache/commons/lang3/ArrayUtils\n+  #129 = NameAndType        #160:#161     // toPrimitive:([Ljava/lang/Boolean;)[Z\n+  #130 = NameAndType        #87:#88       // and:([Z)Z\n+  #131 = Utf8               java/lang/NullPointerException\n+  #132 = Utf8               The array must not contain any null elements\n+  #133 = NameAndType        #92:#88       // or:([Z)Z\n+  #134 = NameAndType        #93:#88       // xor:([Z)Z\n+  #135 = Utf8               org/apache/commons/lang3/BooleanUtils\n+  #136 = Utf8               java/lang/Object\n+  #137 = Utf8               java/lang/Boolean\n+  #138 = Utf8               java/lang/Integer\n+  #139 = Utf8               java/lang/String\n+  #140 = Utf8               [Z\n+  #141 = Utf8               [Ljava/lang/Boolean;\n+  #142 = Utf8               booleanValue\n+  #143 = Utf8               ()Z\n+  #144 = Utf8               FALSE\n+  #145 = Utf8               Ljava/lang/Boolean;\n+  #146 = Utf8               TRUE\n+  #147 = Utf8               equals\n+  #148 = Utf8               (Ljava/lang/Object;)Z\n+  #149 = Utf8               intValue\n+  #150 = Utf8               ()I\n+  #151 = Utf8               (Ljava/lang/String;)V\n+  #152 = Utf8               org/apache/commons/lang3/math/NumberUtils\n+  #153 = Utf8               INTEGER_ONE\n+  #154 = Utf8               Ljava/lang/Integer;\n+  #155 = Utf8               INTEGER_ZERO\n+  #156 = Utf8               length\n+  #157 = Utf8               charAt\n+  #158 = Utf8               (I)C\n+  #159 = Utf8               org/apache/commons/lang3/ArrayUtils\n+  #160 = Utf8               toPrimitive\n+  #161 = Utf8               ([Ljava/lang/Boolean;)[Z\n {\n   public org.apache.commons.lang3.BooleanUtils();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
