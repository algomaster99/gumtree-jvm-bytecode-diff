{"diffoscope-json-version": 1, "source1": "first/MultiWrapDynaBean.class", "source2": "second/MultiWrapDynaBean.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -18,15 +18,17 @@\n     \n     public MultiWrapDynaBean(final Collection<?> beans) {\n         this.propsToBeans = new HashMap<String, DynaBean>();\n         final Collection<DynaClass> beanClasses = new ArrayList<DynaClass>(beans.size());\n         for (final Object bean : beans) {\n             final DynaBean dynaBean = createDynaBean(bean);\n             final DynaClass beanClass = dynaBean.getDynaClass();\n-            for (final DynaProperty prop : beanClass.getDynaProperties()) {\n+            DynaProperty[] dynaProperties;\n+            for (int length = (dynaProperties = beanClass.getDynaProperties()).length, i = 0; i < length; ++i) {\n+                final DynaProperty prop = dynaProperties[i];\n                 if (!this.propsToBeans.containsKey(prop.getName())) {\n                     this.propsToBeans.put(prop.getName(), dynaBean);\n                 }\n             }\n             beanClasses.add(beanClass);\n         }\n         this.dynaClass = (DynaClass)new MultiWrapDynaClass((Collection)beanClasses);\n"}]}
