{"diffoscope-json-version": 1, "source1": "first/ZstdCompressorOutputStream.class", "source2": "second/ZstdCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,190 +1,190 @@\n-  SHA-256 checksum bb8eda441a3c0415ba5e856b22e7994b346e15e1c5c9c8464659927ef74c523a\n+  SHA-256 checksum e86861db6c4d01e6a6e8d38eb85afed68737ef3d9d8c3ab355418488366a6c3f\n   Compiled from \"ZstdCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #10                         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  super_class: #11                        // org/apache/commons/compress/compressors/CompressorOutputStream\n+  this_class: #1                          // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#41        // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-   #2 = Class              #42            // com/github/luben/zstd/ZstdOutputStream\n-   #3 = Methodref          #2.#43         // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #4 = Fieldref           #10.#44        // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-   #5 = Methodref          #2.#45         // com/github/luben/zstd/ZstdOutputStream.close:()V\n-   #6 = Methodref          #2.#46         // com/github/luben/zstd/ZstdOutputStream.write:(I)V\n-   #7 = Methodref          #2.#47         // com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n-   #8 = Methodref          #48.#49        // java/lang/Object.toString:()Ljava/lang/String;\n-   #9 = Methodref          #2.#50         // com/github/luben/zstd/ZstdOutputStream.flush:()V\n-  #10 = Class              #51            // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #11 = Class              #52            // org/apache/commons/compress/compressors/CompressorOutputStream\n-  #12 = Utf8               encOS\n-  #13 = Utf8               Lcom/github/luben/zstd/ZstdOutputStream;\n-  #14 = Utf8               <init>\n-  #15 = Utf8               (Ljava/io/OutputStream;)V\n-  #16 = Utf8               Code\n-  #17 = Utf8               LineNumberTable\n-  #18 = Utf8               LocalVariableTable\n-  #19 = Utf8               this\n-  #20 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n-  #21 = Utf8               out\n-  #22 = Utf8               Ljava/io/OutputStream;\n-  #23 = Utf8               Exceptions\n-  #24 = Class              #53            // java/io/IOException\n-  #25 = Utf8               close\n-  #26 = Utf8               ()V\n-  #27 = Utf8               write\n-  #28 = Utf8               (I)V\n-  #29 = Utf8               b\n-  #30 = Utf8               I\n-  #31 = Utf8               ([BII)V\n-  #32 = Utf8               buf\n-  #33 = Utf8               [B\n-  #34 = Utf8               off\n-  #35 = Utf8               len\n-  #36 = Utf8               toString\n-  #37 = Utf8               ()Ljava/lang/String;\n-  #38 = Utf8               flush\n-  #39 = Utf8               SourceFile\n-  #40 = Utf8               ZstdCompressorOutputStream.java\n-  #41 = NameAndType        #14:#26        // \"<init>\":()V\n-  #42 = Utf8               com/github/luben/zstd/ZstdOutputStream\n-  #43 = NameAndType        #14:#15        // \"<init>\":(Ljava/io/OutputStream;)V\n-  #44 = NameAndType        #12:#13        // encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-  #45 = NameAndType        #25:#26        // close:()V\n-  #46 = NameAndType        #27:#28        // write:(I)V\n-  #47 = NameAndType        #27:#31        // write:([BII)V\n-  #48 = Class              #54            // java/lang/Object\n-  #49 = NameAndType        #36:#37        // toString:()Ljava/lang/String;\n-  #50 = NameAndType        #38:#26        // flush:()V\n-  #51 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n-  #52 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-  #53 = Utf8               java/io/IOException\n-  #54 = Utf8               java/lang/Object\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+   #2 = Utf8               org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream\n+   #3 = Class              #4             // org/apache/commons/compress/compressors/CompressorOutputStream\n+   #4 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+   #5 = Utf8               encOS\n+   #6 = Utf8               Lcom/github/luben/zstd/ZstdOutputStream;\n+   #7 = Utf8               <init>\n+   #8 = Utf8               (Ljava/io/OutputStream;)V\n+   #9 = Utf8               Exceptions\n+  #10 = Class              #11            // java/io/IOException\n+  #11 = Utf8               java/io/IOException\n+  #12 = Utf8               Code\n+  #13 = Methodref          #3.#14         // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+  #14 = NameAndType        #7:#15         // \"<init>\":()V\n+  #15 = Utf8               ()V\n+  #16 = Class              #17            // com/github/luben/zstd/ZstdOutputStream\n+  #17 = Utf8               com/github/luben/zstd/ZstdOutputStream\n+  #18 = Methodref          #16.#19        // com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+  #19 = NameAndType        #7:#8          // \"<init>\":(Ljava/io/OutputStream;)V\n+  #20 = Fieldref           #1.#21         // org/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream.encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+  #21 = NameAndType        #5:#6          // encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+  #22 = Utf8               LineNumberTable\n+  #23 = Utf8               LocalVariableTable\n+  #24 = Utf8               this\n+  #25 = Utf8               Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n+  #26 = Utf8               out\n+  #27 = Utf8               Ljava/io/OutputStream;\n+  #28 = Utf8               close\n+  #29 = Methodref          #16.#30        // com/github/luben/zstd/ZstdOutputStream.close:()V\n+  #30 = NameAndType        #28:#15        // close:()V\n+  #31 = Utf8               write\n+  #32 = Utf8               (I)V\n+  #33 = Methodref          #16.#34        // com/github/luben/zstd/ZstdOutputStream.write:(I)V\n+  #34 = NameAndType        #31:#32        // write:(I)V\n+  #35 = Utf8               b\n+  #36 = Utf8               I\n+  #37 = Utf8               ([BII)V\n+  #38 = Methodref          #16.#39        // com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n+  #39 = NameAndType        #31:#37        // write:([BII)V\n+  #40 = Utf8               buf\n+  #41 = Utf8               [B\n+  #42 = Utf8               off\n+  #43 = Utf8               len\n+  #44 = Utf8               toString\n+  #45 = Utf8               ()Ljava/lang/String;\n+  #46 = Methodref          #47.#49        // java/lang/Object.toString:()Ljava/lang/String;\n+  #47 = Class              #48            // java/lang/Object\n+  #48 = Utf8               java/lang/Object\n+  #49 = NameAndType        #44:#45        // toString:()Ljava/lang/String;\n+  #50 = Utf8               flush\n+  #51 = Methodref          #16.#52        // com/github/luben/zstd/ZstdOutputStream.flush:()V\n+  #52 = NameAndType        #50:#15        // flush:()V\n+  #53 = Utf8               SourceFile\n+  #54 = Utf8               ZstdCompressorOutputStream.java\n {\n   private final com.github.luben.zstd.ZstdOutputStream encOS;\n     descriptor: Lcom/github/luben/zstd/ZstdOutputStream;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.zstandard.ZstdCompressorOutputStream(java.io.OutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #13                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class com/github/luben/zstd/ZstdOutputStream\n+         5: new           #16                 // class com/github/luben/zstd/ZstdOutputStream\n          8: dup\n          9: aload_1\n-        10: invokespecial #3                  // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        13: putfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+        10: invokespecial #18                 // Method com/github/luben/zstd/ZstdOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        13: putfield      #20                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n         16: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 4\n         line 39: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      17     1   out   Ljava/io/OutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #5                  // Method com/github/luben/zstd/ZstdOutputStream.close:()V\n+         1: getfield      #20                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #29                 // Method com/github/luben/zstd/ZstdOutputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         1: getfield      #20                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n          4: iload_1\n-         5: invokevirtual #6                  // Method com/github/luben/zstd/ZstdOutputStream.write:(I)V\n+         5: invokevirtual #33                 // Method com/github/luben/zstd/ZstdOutputStream.write:(I)V\n          8: return\n       LineNumberTable:\n         line 48: 0\n         line 49: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0       9     1     b   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         1: getfield      #20                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #7                  // Method com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n+         7: invokevirtual #38                 // Method com/github/luben/zstd/ZstdOutputStream.write:([BII)V\n         10: return\n       LineNumberTable:\n         line 53: 0\n         line 54: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n             0      11     1   buf   [B\n             0      11     2   off   I\n             0      11     3   len   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #8                  // Method java/lang/Object.toString:()Ljava/lang/String;\n+         1: getfield      #20                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #46                 // Method java/lang/Object.toString:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 58: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n-         4: invokevirtual #9                  // Method com/github/luben/zstd/ZstdOutputStream.flush:()V\n+         1: getfield      #20                 // Field encOS:Lcom/github/luben/zstd/ZstdOutputStream;\n+         4: invokevirtual #51                 // Method com/github/luben/zstd/ZstdOutputStream.flush:()V\n          7: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/zstandard/ZstdCompressorOutputStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"ZstdCompressorOutputStream.java\"\n"}]}
