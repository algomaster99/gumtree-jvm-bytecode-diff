{"diffoscope-json-version": 1, "source1": "first/Triple.class", "source2": "second/Triple.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -5,37 +5,37 @@\n import org.apache.commons.lang3.builder.CompareToBuilder;\n import java.io.Serializable;\n \n public abstract class Triple<L, M, R> implements Comparable<Triple<L, M, R>>, Serializable\n {\n     private static final long serialVersionUID = 1L;\n     \n-    public static <L, M, R> Triple<L, M, R> of(final L left, final M middle, final R right) {\n-        return (Triple<L, M, R>)new ImmutableTriple((Object)left, (Object)middle, (Object)right);\n+    public static <L, M, R> Triple<L, M, R> of(final L l, final M m, final R r) {\n+        return (Triple<L, M, R>)new ImmutableTriple((Object)l, (Object)m, (Object)r);\n     }\n     \n     public abstract L getLeft();\n     \n     public abstract M getMiddle();\n     \n     public abstract R getRight();\n     \n     @Override\n-    public int compareTo(final Triple<L, M, R> other) {\n-        return new CompareToBuilder().append(this.getLeft(), (Object)other.getLeft()).append(this.getMiddle(), (Object)other.getMiddle()).append(this.getRight(), (Object)other.getRight()).toComparison();\n+    public int compareTo(final Triple<L, M, R> triple) {\n+        return new CompareToBuilder().append(this.getLeft(), (Object)triple.getLeft()).append(this.getMiddle(), (Object)triple.getMiddle()).append(this.getRight(), (Object)triple.getRight()).toComparison();\n     }\n     \n     @Override\n-    public boolean equals(final Object obj) {\n-        if (obj == this) {\n+    public boolean equals(final Object o) {\n+        if (o == this) {\n             return true;\n         }\n-        if (obj instanceof Triple) {\n-            final Triple<?, ?, ?> other = (Triple)obj;\n-            return Objects.equals(this.getLeft(), other.getLeft()) && Objects.equals(this.getMiddle(), other.getMiddle()) && Objects.equals(this.getRight(), other.getRight());\n+        if (o instanceof Triple) {\n+            final Triple triple = (Triple)o;\n+            return Objects.equals(this.getLeft(), triple.getLeft()) && Objects.equals(this.getMiddle(), triple.getMiddle()) && Objects.equals(this.getRight(), triple.getRight());\n         }\n         return false;\n     }\n     \n     @Override\n     public int hashCode() {\n         return ((this.getLeft() == null) ? 0 : this.getLeft().hashCode()) ^ ((this.getMiddle() == null) ? 0 : this.getMiddle().hashCode()) ^ ((this.getRight() == null) ? 0 : this.getRight().hashCode());\n"}]}
