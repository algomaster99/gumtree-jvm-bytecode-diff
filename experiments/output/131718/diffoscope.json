{"diffoscope-json-version": 1, "source1": "first/ReflectionToStringBuilder.class", "source2": "second/ReflectionToStringBuilder.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -110,15 +110,17 @@\n     protected void appendFieldsIn(final Class<?> clazz) {\n         if (clazz.isArray()) {\n             this.reflectionAppendArray(this.getObject());\n             return;\n         }\n         final Field[] fields = (Field[])ArraySorter.sort((Object[])clazz.getDeclaredFields(), (Comparator)Comparator.comparing((Function<? super Object, ? extends Comparable>)Field::getName));\n         AccessibleObject.setAccessible(fields, true);\n-        for (final Field field : fields) {\n+        Field[] array;\n+        for (int length = (array = fields).length, i = 0; i < length; ++i) {\n+            final Field field = array[i];\n             final String fieldName = field.getName();\n             if (this.accept(field)) {\n                 try {\n                     final Object fieldValue = this.getValue(field);\n                     if (!this.excludeNullValues || fieldValue != null) {\n                         this.append(fieldName, fieldValue, !field.isAnnotationPresent((Class<? extends Annotation>)ToStringSummary.class));\n                     }\n"}]}
