{"diffoscope-json-version": 1, "source1": "first/SimpleElementValueGen.class", "source2": "second/SimpleElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,74 +1,74 @@\n-  SHA-256 checksum f20b352164efe857b658211c68ebc74b796f5a0060b248b7f62159e76d030af4\n+  SHA-256 checksum b1a9f8e3d3d58dede001cf4ba58bba21e0191305dd2e694193aa4478a5bc18fb\n   Compiled from \"SimpleElementValueGen.java\"\n public class org.apache.bcel.generic.SimpleElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #57                         // org/apache/bcel/generic/SimpleElementValueGen\n   super_class: #37                        // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 1, methods: 17, attributes: 1\n Constant pool:\n-    #1 = Methodref          #37.#127      // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #2 = Methodref          #57.#128      // org/apache/bcel/generic/SimpleElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-    #3 = Methodref          #129.#130     // org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n-    #4 = Fieldref           #57.#131      // org/apache/bcel/generic/SimpleElementValueGen.idx:I\n-    #5 = Methodref          #129.#132     // org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n-    #6 = Methodref          #129.#133     // org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n-    #7 = Methodref          #129.#134     // org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n-    #8 = Methodref          #129.#135     // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-    #9 = Methodref          #34.#136      // org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n-   #10 = Methodref          #34.#137      // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n-   #11 = Methodref          #34.#138      // org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n-   #12 = Methodref          #34.#139      // org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n-   #13 = Methodref          #34.#140      // org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n-   #14 = Methodref          #34.#141      // org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n-   #15 = Methodref          #34.#142      // org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n-   #16 = Methodref          #34.#143      // org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n-   #17 = Methodref          #34.#144      // org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n-   #18 = Methodref          #34.#145      // org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n-   #19 = Methodref          #34.#146      // org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n-   #20 = Class              #147          // java/lang/IllegalArgumentException\n-   #21 = Class              #148          // java/lang/StringBuilder\n-   #22 = Methodref          #21.#149      // java/lang/StringBuilder.\"<init>\":()V\n-   #23 = String             #150          // SimpleElementValueGen class does not know how to copy this type\n-   #24 = Methodref          #21.#151      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #25 = Methodref          #37.#136      // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #26 = Methodref          #21.#152      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #27 = Methodref          #21.#153      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #28 = Methodref          #20.#154      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #29 = Methodref          #155.#156     // java/io/DataOutputStream.writeByte:(I)V\n-   #30 = Methodref          #155.#157     // java/io/DataOutputStream.writeShort:(I)V\n-   #31 = Class              #158          // java/lang/IllegalStateException\n-   #32 = String             #159          // SimpleElementValueGen doesnt know how to write out type\n-   #33 = Methodref          #31.#154      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #34 = Class              #160          // org/apache/bcel/classfile/SimpleElementValue\n-   #35 = Methodref          #129.#161     // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #36 = Methodref          #34.#162      // org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n-   #37 = Class              #163          // org/apache/bcel/generic/ElementValueGen\n-   #38 = String             #164          // Dont call getValueString() on a non STRING ElementValue\n-   #39 = Methodref          #129.#165     // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #40 = Class              #166          // org/apache/bcel/classfile/ConstantInteger\n-   #41 = Methodref          #40.#167      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n-   #42 = Class              #168          // org/apache/bcel/classfile/ConstantUtf8\n-   #43 = Methodref          #42.#169      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #44 = Methodref          #170.#171     // java/lang/Integer.toString:(I)Ljava/lang/String;\n-   #45 = Class              #172          // org/apache/bcel/classfile/ConstantLong\n-   #46 = Methodref          #45.#173      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n-   #47 = Methodref          #174.#175     // java/lang/Long.toString:(J)Ljava/lang/String;\n-   #48 = Class              #176          // org/apache/bcel/classfile/ConstantDouble\n-   #49 = Methodref          #48.#177      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n-   #50 = Methodref          #178.#179     // java/lang/Double.toString:(D)Ljava/lang/String;\n-   #51 = Class              #180          // org/apache/bcel/classfile/ConstantFloat\n-   #52 = Methodref          #51.#181      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n-   #53 = Methodref          #182.#183     // java/lang/Float.toString:(F)Ljava/lang/String;\n-   #54 = String             #184          // false\n-   #55 = String             #185          // true\n-   #56 = String             #186          // SimpleElementValueGen class does not know how to stringify type\n-   #57 = Class              #187          // org/apache/bcel/generic/SimpleElementValueGen\n+    #1 = Methodref          #37.#124      // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #2 = Methodref          #57.#125      // org/apache/bcel/generic/SimpleElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+    #3 = Methodref          #73.#126      // org/apache/bcel/generic/ConstantPoolGen.addInteger:(I)I\n+    #4 = Fieldref           #57.#127      // org/apache/bcel/generic/SimpleElementValueGen.idx:I\n+    #5 = Methodref          #73.#128      // org/apache/bcel/generic/ConstantPoolGen.addDouble:(D)I\n+    #6 = Methodref          #73.#129      // org/apache/bcel/generic/ConstantPoolGen.addFloat:(F)I\n+    #7 = Methodref          #73.#130      // org/apache/bcel/generic/ConstantPoolGen.addLong:(J)I\n+    #8 = Methodref          #73.#131      // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+    #9 = Methodref          #34.#132      // org/apache/bcel/classfile/SimpleElementValue.getElementValueType:()I\n+   #10 = Methodref          #34.#133      // org/apache/bcel/classfile/SimpleElementValue.getIndex:()I\n+   #11 = Methodref          #34.#134      // org/apache/bcel/classfile/SimpleElementValue.getValueString:()Ljava/lang/String;\n+   #12 = Methodref          #34.#135      // org/apache/bcel/classfile/SimpleElementValue.getValueInt:()I\n+   #13 = Methodref          #34.#136      // org/apache/bcel/classfile/SimpleElementValue.getValueByte:()B\n+   #14 = Methodref          #34.#137      // org/apache/bcel/classfile/SimpleElementValue.getValueChar:()C\n+   #15 = Methodref          #34.#138      // org/apache/bcel/classfile/SimpleElementValue.getValueLong:()J\n+   #16 = Methodref          #34.#139      // org/apache/bcel/classfile/SimpleElementValue.getValueFloat:()F\n+   #17 = Methodref          #34.#140      // org/apache/bcel/classfile/SimpleElementValue.getValueDouble:()D\n+   #18 = Methodref          #34.#141      // org/apache/bcel/classfile/SimpleElementValue.getValueBoolean:()Z\n+   #19 = Methodref          #34.#142      // org/apache/bcel/classfile/SimpleElementValue.getValueShort:()S\n+   #20 = Class              #143          // java/lang/IllegalArgumentException\n+   #21 = Class              #144          // java/lang/StringBuilder\n+   #22 = Methodref          #21.#145      // java/lang/StringBuilder.\"<init>\":()V\n+   #23 = String             #146          // SimpleElementValueGen class does not know how to copy this type\n+   #24 = Methodref          #21.#147      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #25 = Methodref          #37.#132      // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #26 = Methodref          #21.#148      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #27 = Methodref          #21.#149      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #28 = Methodref          #20.#150      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #29 = Methodref          #151.#152     // java/io/DataOutputStream.writeByte:(I)V\n+   #30 = Methodref          #151.#153     // java/io/DataOutputStream.writeShort:(I)V\n+   #31 = Class              #154          // java/lang/IllegalStateException\n+   #32 = String             #155          // SimpleElementValueGen doesnt know how to write out type\n+   #33 = Methodref          #31.#150      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #34 = Class              #156          // org/apache/bcel/classfile/SimpleElementValue\n+   #35 = Methodref          #73.#157      // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #36 = Methodref          #34.#158      // org/apache/bcel/classfile/SimpleElementValue.\"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+   #37 = Class              #159          // org/apache/bcel/generic/ElementValueGen\n+   #38 = String             #160          // Dont call getValueString() on a non STRING ElementValue\n+   #39 = Methodref          #73.#161      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #40 = Class              #162          // org/apache/bcel/classfile/ConstantInteger\n+   #41 = Methodref          #40.#163      // org/apache/bcel/classfile/ConstantInteger.getBytes:()I\n+   #42 = Class              #164          // org/apache/bcel/classfile/ConstantUtf8\n+   #43 = Methodref          #42.#165      // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+   #44 = Methodref          #166.#167     // java/lang/Integer.toString:(I)Ljava/lang/String;\n+   #45 = Class              #168          // org/apache/bcel/classfile/ConstantLong\n+   #46 = Methodref          #45.#169      // org/apache/bcel/classfile/ConstantLong.getBytes:()J\n+   #47 = Methodref          #170.#171     // java/lang/Long.toString:(J)Ljava/lang/String;\n+   #48 = Class              #172          // org/apache/bcel/classfile/ConstantDouble\n+   #49 = Methodref          #48.#173      // org/apache/bcel/classfile/ConstantDouble.getBytes:()D\n+   #50 = Methodref          #174.#175     // java/lang/Double.toString:(D)Ljava/lang/String;\n+   #51 = Class              #176          // org/apache/bcel/classfile/ConstantFloat\n+   #52 = Methodref          #51.#177      // org/apache/bcel/classfile/ConstantFloat.getBytes:()F\n+   #53 = Methodref          #178.#179     // java/lang/Float.toString:(F)Ljava/lang/String;\n+   #54 = String             #180          // false\n+   #55 = String             #181          // true\n+   #56 = String             #182          // SimpleElementValueGen class does not know how to stringify type\n+   #57 = Class              #183          // org/apache/bcel/generic/SimpleElementValueGen\n    #58 = Utf8               idx\n    #59 = Utf8               I\n    #60 = Utf8               <init>\n    #61 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Z)V\n    #62 = Utf8               Code\n    #63 = Utf8               LineNumberTable\n    #64 = Utf8               LocalVariableTable\n@@ -76,182 +76,178 @@\n    #66 = Utf8               Lorg/apache/bcel/generic/SimpleElementValueGen;\n    #67 = Utf8               type\n    #68 = Utf8               cpGen\n    #69 = Utf8               Lorg/apache/bcel/generic/ConstantPoolGen;\n    #70 = Utf8               value\n    #71 = Utf8               Z\n    #72 = Utf8               StackMapTable\n-   #73 = Class              #187          // org/apache/bcel/generic/SimpleElementValueGen\n-   #74 = Class              #188          // org/apache/bcel/generic/ConstantPoolGen\n-   #75 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;B)V\n-   #76 = Utf8               B\n-   #77 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;C)V\n-   #78 = Utf8               C\n-   #79 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;D)V\n-   #80 = Utf8               D\n-   #81 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;F)V\n-   #82 = Utf8               F\n-   #83 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;I)V\n-   #84 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;J)V\n-   #85 = Utf8               J\n-   #86 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;S)V\n-   #87 = Utf8               S\n-   #88 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Ljava/lang/String;)V\n-   #89 = Utf8               Ljava/lang/String;\n-   #90 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #91 = Utf8               (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #92 = Utf8               Lorg/apache/bcel/classfile/SimpleElementValue;\n-   #93 = Utf8               cpool\n-   #94 = Utf8               copyPoolEntries\n-   #95 = Class              #160          // org/apache/bcel/classfile/SimpleElementValue\n-   #96 = Utf8               dump\n-   #97 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #98 = Utf8               dos\n-   #99 = Utf8               Ljava/io/DataOutputStream;\n-  #100 = Utf8               Exceptions\n-  #101 = Class              #189          // java/io/IOException\n-  #102 = Utf8               getElementValue\n-  #103 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-  #104 = Utf8               getIndex\n-  #105 = Utf8               ()I\n-  #106 = Utf8               getValueInt\n-  #107 = Utf8               c\n-  #108 = Utf8               Lorg/apache/bcel/classfile/ConstantInteger;\n-  #109 = Utf8               getValueString\n-  #110 = Utf8               ()Ljava/lang/String;\n-  #111 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n-  #112 = Utf8               stringifyValue\n-  #113 = Utf8               j\n-  #114 = Utf8               Lorg/apache/bcel/classfile/ConstantLong;\n-  #115 = Utf8               d\n-  #116 = Utf8               Lorg/apache/bcel/classfile/ConstantDouble;\n-  #117 = Utf8               f\n-  #118 = Utf8               Lorg/apache/bcel/classfile/ConstantFloat;\n-  #119 = Utf8               s\n-  #120 = Utf8               b\n-  #121 = Utf8               ch\n-  #122 = Utf8               bo\n-  #123 = Utf8               cu8\n-  #124 = Class              #166          // org/apache/bcel/classfile/ConstantInteger\n-  #125 = Utf8               SourceFile\n-  #126 = Utf8               SimpleElementValueGen.java\n-  #127 = NameAndType        #60:#190      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #128 = NameAndType        #191:#192     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #129 = Class              #188          // org/apache/bcel/generic/ConstantPoolGen\n-  #130 = NameAndType        #193:#194     // addInteger:(I)I\n-  #131 = NameAndType        #58:#59       // idx:I\n-  #132 = NameAndType        #195:#196     // addDouble:(D)I\n-  #133 = NameAndType        #197:#198     // addFloat:(F)I\n-  #134 = NameAndType        #199:#200     // addLong:(J)I\n-  #135 = NameAndType        #201:#202     // addUtf8:(Ljava/lang/String;)I\n-  #136 = NameAndType        #203:#105     // getElementValueType:()I\n-  #137 = NameAndType        #104:#105     // getIndex:()I\n-  #138 = NameAndType        #109:#110     // getValueString:()Ljava/lang/String;\n-  #139 = NameAndType        #106:#105     // getValueInt:()I\n-  #140 = NameAndType        #204:#205     // getValueByte:()B\n-  #141 = NameAndType        #206:#207     // getValueChar:()C\n-  #142 = NameAndType        #208:#209     // getValueLong:()J\n-  #143 = NameAndType        #210:#211     // getValueFloat:()F\n-  #144 = NameAndType        #212:#213     // getValueDouble:()D\n-  #145 = NameAndType        #214:#215     // getValueBoolean:()Z\n-  #146 = NameAndType        #216:#217     // getValueShort:()S\n-  #147 = Utf8               java/lang/IllegalArgumentException\n-  #148 = Utf8               java/lang/StringBuilder\n-  #149 = NameAndType        #60:#218      // \"<init>\":()V\n-  #150 = Utf8               SimpleElementValueGen class does not know how to copy this type\n-  #151 = NameAndType        #219:#220     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #152 = NameAndType        #219:#221     // append:(I)Ljava/lang/StringBuilder;\n-  #153 = NameAndType        #222:#110     // toString:()Ljava/lang/String;\n-  #154 = NameAndType        #60:#223      // \"<init>\":(Ljava/lang/String;)V\n-  #155 = Class              #224          // java/io/DataOutputStream\n-  #156 = NameAndType        #225:#226     // writeByte:(I)V\n-  #157 = NameAndType        #227:#226     // writeShort:(I)V\n-  #158 = Utf8               java/lang/IllegalStateException\n-  #159 = Utf8               SimpleElementValueGen doesnt know how to write out type\n-  #160 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n-  #161 = NameAndType        #191:#228     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-  #162 = NameAndType        #60:#229      // \"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n-  #163 = Utf8               org/apache/bcel/generic/ElementValueGen\n-  #164 = Utf8               Dont call getValueString() on a non STRING ElementValue\n-  #165 = NameAndType        #230:#231     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #166 = Utf8               org/apache/bcel/classfile/ConstantInteger\n-  #167 = NameAndType        #232:#105     // getBytes:()I\n-  #168 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-  #169 = NameAndType        #232:#110     // getBytes:()Ljava/lang/String;\n-  #170 = Class              #233          // java/lang/Integer\n-  #171 = NameAndType        #222:#234     // toString:(I)Ljava/lang/String;\n-  #172 = Utf8               org/apache/bcel/classfile/ConstantLong\n-  #173 = NameAndType        #232:#209     // getBytes:()J\n-  #174 = Class              #235          // java/lang/Long\n-  #175 = NameAndType        #222:#236     // toString:(J)Ljava/lang/String;\n-  #176 = Utf8               org/apache/bcel/classfile/ConstantDouble\n-  #177 = NameAndType        #232:#213     // getBytes:()D\n-  #178 = Class              #237          // java/lang/Double\n-  #179 = NameAndType        #222:#238     // toString:(D)Ljava/lang/String;\n-  #180 = Utf8               org/apache/bcel/classfile/ConstantFloat\n-  #181 = NameAndType        #232:#211     // getBytes:()F\n-  #182 = Class              #239          // java/lang/Float\n-  #183 = NameAndType        #222:#240     // toString:(F)Ljava/lang/String;\n-  #184 = Utf8               false\n-  #185 = Utf8               true\n-  #186 = Utf8               SimpleElementValueGen class does not know how to stringify type\n-  #187 = Utf8               org/apache/bcel/generic/SimpleElementValueGen\n-  #188 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #189 = Utf8               java/io/IOException\n-  #190 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #191 = Utf8               getConstantPool\n-  #192 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #193 = Utf8               addInteger\n-  #194 = Utf8               (I)I\n-  #195 = Utf8               addDouble\n-  #196 = Utf8               (D)I\n-  #197 = Utf8               addFloat\n-  #198 = Utf8               (F)I\n-  #199 = Utf8               addLong\n-  #200 = Utf8               (J)I\n-  #201 = Utf8               addUtf8\n-  #202 = Utf8               (Ljava/lang/String;)I\n-  #203 = Utf8               getElementValueType\n-  #204 = Utf8               getValueByte\n-  #205 = Utf8               ()B\n-  #206 = Utf8               getValueChar\n-  #207 = Utf8               ()C\n-  #208 = Utf8               getValueLong\n-  #209 = Utf8               ()J\n-  #210 = Utf8               getValueFloat\n-  #211 = Utf8               ()F\n-  #212 = Utf8               getValueDouble\n-  #213 = Utf8               ()D\n-  #214 = Utf8               getValueBoolean\n-  #215 = Utf8               ()Z\n-  #216 = Utf8               getValueShort\n-  #217 = Utf8               ()S\n-  #218 = Utf8               ()V\n-  #219 = Utf8               append\n-  #220 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #221 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #222 = Utf8               toString\n-  #223 = Utf8               (Ljava/lang/String;)V\n-  #224 = Utf8               java/io/DataOutputStream\n-  #225 = Utf8               writeByte\n-  #226 = Utf8               (I)V\n-  #227 = Utf8               writeShort\n-  #228 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #229 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n-  #230 = Utf8               getConstant\n-  #231 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #232 = Utf8               getBytes\n-  #233 = Utf8               java/lang/Integer\n-  #234 = Utf8               (I)Ljava/lang/String;\n-  #235 = Utf8               java/lang/Long\n-  #236 = Utf8               (J)Ljava/lang/String;\n-  #237 = Utf8               java/lang/Double\n-  #238 = Utf8               (D)Ljava/lang/String;\n-  #239 = Utf8               java/lang/Float\n-  #240 = Utf8               (F)Ljava/lang/String;\n+   #73 = Class              #184          // org/apache/bcel/generic/ConstantPoolGen\n+   #74 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;B)V\n+   #75 = Utf8               B\n+   #76 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;C)V\n+   #77 = Utf8               C\n+   #78 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;D)V\n+   #79 = Utf8               D\n+   #80 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;F)V\n+   #81 = Utf8               F\n+   #82 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;I)V\n+   #83 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;J)V\n+   #84 = Utf8               J\n+   #85 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;S)V\n+   #86 = Utf8               S\n+   #87 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;Ljava/lang/String;)V\n+   #88 = Utf8               Ljava/lang/String;\n+   #89 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n+   #90 = Utf8               (Lorg/apache/bcel/classfile/SimpleElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+   #91 = Utf8               Lorg/apache/bcel/classfile/SimpleElementValue;\n+   #92 = Utf8               cpool\n+   #93 = Utf8               copyPoolEntries\n+   #94 = Utf8               dump\n+   #95 = Utf8               (Ljava/io/DataOutputStream;)V\n+   #96 = Utf8               dos\n+   #97 = Utf8               Ljava/io/DataOutputStream;\n+   #98 = Utf8               Exceptions\n+   #99 = Class              #185          // java/io/IOException\n+  #100 = Utf8               getElementValue\n+  #101 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+  #102 = Utf8               getIndex\n+  #103 = Utf8               ()I\n+  #104 = Utf8               getValueInt\n+  #105 = Utf8               c\n+  #106 = Utf8               Lorg/apache/bcel/classfile/ConstantInteger;\n+  #107 = Utf8               getValueString\n+  #108 = Utf8               ()Ljava/lang/String;\n+  #109 = Utf8               Lorg/apache/bcel/classfile/ConstantUtf8;\n+  #110 = Utf8               stringifyValue\n+  #111 = Utf8               j\n+  #112 = Utf8               Lorg/apache/bcel/classfile/ConstantLong;\n+  #113 = Utf8               d\n+  #114 = Utf8               Lorg/apache/bcel/classfile/ConstantDouble;\n+  #115 = Utf8               f\n+  #116 = Utf8               Lorg/apache/bcel/classfile/ConstantFloat;\n+  #117 = Utf8               s\n+  #118 = Utf8               b\n+  #119 = Utf8               ch\n+  #120 = Utf8               bo\n+  #121 = Utf8               cu8\n+  #122 = Utf8               SourceFile\n+  #123 = Utf8               SimpleElementValueGen.java\n+  #124 = NameAndType        #60:#186      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #125 = NameAndType        #187:#188     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #126 = NameAndType        #189:#190     // addInteger:(I)I\n+  #127 = NameAndType        #58:#59       // idx:I\n+  #128 = NameAndType        #191:#192     // addDouble:(D)I\n+  #129 = NameAndType        #193:#194     // addFloat:(F)I\n+  #130 = NameAndType        #195:#196     // addLong:(J)I\n+  #131 = NameAndType        #197:#198     // addUtf8:(Ljava/lang/String;)I\n+  #132 = NameAndType        #199:#103     // getElementValueType:()I\n+  #133 = NameAndType        #102:#103     // getIndex:()I\n+  #134 = NameAndType        #107:#108     // getValueString:()Ljava/lang/String;\n+  #135 = NameAndType        #104:#103     // getValueInt:()I\n+  #136 = NameAndType        #200:#201     // getValueByte:()B\n+  #137 = NameAndType        #202:#203     // getValueChar:()C\n+  #138 = NameAndType        #204:#205     // getValueLong:()J\n+  #139 = NameAndType        #206:#207     // getValueFloat:()F\n+  #140 = NameAndType        #208:#209     // getValueDouble:()D\n+  #141 = NameAndType        #210:#211     // getValueBoolean:()Z\n+  #142 = NameAndType        #212:#213     // getValueShort:()S\n+  #143 = Utf8               java/lang/IllegalArgumentException\n+  #144 = Utf8               java/lang/StringBuilder\n+  #145 = NameAndType        #60:#214      // \"<init>\":()V\n+  #146 = Utf8               SimpleElementValueGen class does not know how to copy this type\n+  #147 = NameAndType        #215:#216     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #148 = NameAndType        #215:#217     // append:(I)Ljava/lang/StringBuilder;\n+  #149 = NameAndType        #218:#108     // toString:()Ljava/lang/String;\n+  #150 = NameAndType        #60:#219      // \"<init>\":(Ljava/lang/String;)V\n+  #151 = Class              #220          // java/io/DataOutputStream\n+  #152 = NameAndType        #221:#222     // writeByte:(I)V\n+  #153 = NameAndType        #223:#222     // writeShort:(I)V\n+  #154 = Utf8               java/lang/IllegalStateException\n+  #155 = Utf8               SimpleElementValueGen doesnt know how to write out type\n+  #156 = Utf8               org/apache/bcel/classfile/SimpleElementValue\n+  #157 = NameAndType        #187:#224     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #158 = NameAndType        #60:#225      // \"<init>\":(IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #159 = Utf8               org/apache/bcel/generic/ElementValueGen\n+  #160 = Utf8               Dont call getValueString() on a non STRING ElementValue\n+  #161 = NameAndType        #226:#227     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #162 = Utf8               org/apache/bcel/classfile/ConstantInteger\n+  #163 = NameAndType        #228:#103     // getBytes:()I\n+  #164 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #165 = NameAndType        #228:#108     // getBytes:()Ljava/lang/String;\n+  #166 = Class              #229          // java/lang/Integer\n+  #167 = NameAndType        #218:#230     // toString:(I)Ljava/lang/String;\n+  #168 = Utf8               org/apache/bcel/classfile/ConstantLong\n+  #169 = NameAndType        #228:#205     // getBytes:()J\n+  #170 = Class              #231          // java/lang/Long\n+  #171 = NameAndType        #218:#232     // toString:(J)Ljava/lang/String;\n+  #172 = Utf8               org/apache/bcel/classfile/ConstantDouble\n+  #173 = NameAndType        #228:#209     // getBytes:()D\n+  #174 = Class              #233          // java/lang/Double\n+  #175 = NameAndType        #218:#234     // toString:(D)Ljava/lang/String;\n+  #176 = Utf8               org/apache/bcel/classfile/ConstantFloat\n+  #177 = NameAndType        #228:#207     // getBytes:()F\n+  #178 = Class              #235          // java/lang/Float\n+  #179 = NameAndType        #218:#236     // toString:(F)Ljava/lang/String;\n+  #180 = Utf8               false\n+  #181 = Utf8               true\n+  #182 = Utf8               SimpleElementValueGen class does not know how to stringify type\n+  #183 = Utf8               org/apache/bcel/generic/SimpleElementValueGen\n+  #184 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+  #185 = Utf8               java/io/IOException\n+  #186 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #187 = Utf8               getConstantPool\n+  #188 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+  #189 = Utf8               addInteger\n+  #190 = Utf8               (I)I\n+  #191 = Utf8               addDouble\n+  #192 = Utf8               (D)I\n+  #193 = Utf8               addFloat\n+  #194 = Utf8               (F)I\n+  #195 = Utf8               addLong\n+  #196 = Utf8               (J)I\n+  #197 = Utf8               addUtf8\n+  #198 = Utf8               (Ljava/lang/String;)I\n+  #199 = Utf8               getElementValueType\n+  #200 = Utf8               getValueByte\n+  #201 = Utf8               ()B\n+  #202 = Utf8               getValueChar\n+  #203 = Utf8               ()C\n+  #204 = Utf8               getValueLong\n+  #205 = Utf8               ()J\n+  #206 = Utf8               getValueFloat\n+  #207 = Utf8               ()F\n+  #208 = Utf8               getValueDouble\n+  #209 = Utf8               ()D\n+  #210 = Utf8               getValueBoolean\n+  #211 = Utf8               ()Z\n+  #212 = Utf8               getValueShort\n+  #213 = Utf8               ()S\n+  #214 = Utf8               ()V\n+  #215 = Utf8               append\n+  #216 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #217 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #218 = Utf8               toString\n+  #219 = Utf8               (Ljava/lang/String;)V\n+  #220 = Utf8               java/io/DataOutputStream\n+  #221 = Utf8               writeByte\n+  #222 = Utf8               (I)V\n+  #223 = Utf8               writeShort\n+  #224 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #225 = Utf8               (IILorg/apache/bcel/classfile/ConstantPool;)V\n+  #226 = Utf8               getConstant\n+  #227 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #228 = Utf8               getBytes\n+  #229 = Utf8               java/lang/Integer\n+  #230 = Utf8               (I)Ljava/lang/String;\n+  #231 = Utf8               java/lang/Long\n+  #232 = Utf8               (J)Ljava/lang/String;\n+  #233 = Utf8               java/lang/Double\n+  #234 = Utf8               (D)Ljava/lang/String;\n+  #235 = Utf8               java/lang/Float\n+  #236 = Utf8               (F)Ljava/lang/String;\n {\n   private final int idx;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.bcel.generic.SimpleElementValueGen(int, org.apache.bcel.generic.ConstantPoolGen, boolean);\n     descriptor: (ILorg/apache/bcel/generic/ConstantPoolGen;Z)V\n"}]}
