{"diffoscope-json-version": 1, "source1": "first/BrokenWriter.class", "source2": "second/BrokenWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,71 +1,71 @@\n-  SHA-256 checksum 1ec6aaa7191d7925e9983f9cec4d0b5b13d7e29a7ea237cd705e27e91e234e68\n+  SHA-256 checksum 4689d450ac5353a206253c67969b37629629f6aaaf304e12a3888f26029c9c95\n   Compiled from \"BrokenWriter.java\"\n public class org.apache.commons.io.output.BrokenWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #7                          // org/apache/commons/io/output/BrokenWriter\n-  super_class: #8                         // java/io/Writer\n+  this_class: #8                          // org/apache/commons/io/output/BrokenWriter\n+  super_class: #2                         // java/io/Writer\n   interfaces: 0, fields: 1, methods: 5, attributes: 1\n Constant pool:\n-   #1 = Methodref          #8.#31         // java/io/Writer.\"<init>\":()V\n-   #2 = Fieldref           #7.#32         // org/apache/commons/io/output/BrokenWriter.exception:Ljava/io/IOException;\n-   #3 = Class              #33            // java/io/IOException\n-   #4 = String             #34            // Broken writer\n-   #5 = Methodref          #3.#35         // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #6 = Methodref          #7.#36         // org/apache/commons/io/output/BrokenWriter.\"<init>\":(Ljava/io/IOException;)V\n-   #7 = Class              #37            // org/apache/commons/io/output/BrokenWriter\n-   #8 = Class              #38            // java/io/Writer\n-   #9 = Utf8               exception\n-  #10 = Utf8               Ljava/io/IOException;\n-  #11 = Utf8               <init>\n-  #12 = Utf8               (Ljava/io/IOException;)V\n-  #13 = Utf8               Code\n-  #14 = Utf8               LineNumberTable\n-  #15 = Utf8               LocalVariableTable\n-  #16 = Utf8               this\n-  #17 = Utf8               Lorg/apache/commons/io/output/BrokenWriter;\n-  #18 = Utf8               ()V\n-  #19 = Utf8               write\n-  #20 = Utf8               ([CII)V\n-  #21 = Utf8               cbuf\n-  #22 = Utf8               [C\n-  #23 = Utf8               off\n-  #24 = Utf8               I\n-  #25 = Utf8               len\n-  #26 = Utf8               Exceptions\n-  #27 = Utf8               flush\n-  #28 = Utf8               close\n-  #29 = Utf8               SourceFile\n-  #30 = Utf8               BrokenWriter.java\n-  #31 = NameAndType        #11:#18        // \"<init>\":()V\n-  #32 = NameAndType        #9:#10         // exception:Ljava/io/IOException;\n-  #33 = Utf8               java/io/IOException\n-  #34 = Utf8               Broken writer\n-  #35 = NameAndType        #11:#39        // \"<init>\":(Ljava/lang/String;)V\n-  #36 = NameAndType        #11:#12        // \"<init>\":(Ljava/io/IOException;)V\n-  #37 = Utf8               org/apache/commons/io/output/BrokenWriter\n-  #38 = Utf8               java/io/Writer\n-  #39 = Utf8               (Ljava/lang/String;)V\n+   #1 = Methodref          #2.#3          // java/io/Writer.\"<init>\":()V\n+   #2 = Class              #4             // java/io/Writer\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/io/Writer\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/io/output/BrokenWriter.exception:Ljava/io/IOException;\n+   #8 = Class              #10            // org/apache/commons/io/output/BrokenWriter\n+   #9 = NameAndType        #11:#12        // exception:Ljava/io/IOException;\n+  #10 = Utf8               org/apache/commons/io/output/BrokenWriter\n+  #11 = Utf8               exception\n+  #12 = Utf8               Ljava/io/IOException;\n+  #13 = Class              #14            // java/io/IOException\n+  #14 = Utf8               java/io/IOException\n+  #15 = String             #16            // Broken writer\n+  #16 = Utf8               Broken writer\n+  #17 = Methodref          #13.#18        // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #18 = NameAndType        #5:#19         // \"<init>\":(Ljava/lang/String;)V\n+  #19 = Utf8               (Ljava/lang/String;)V\n+  #20 = Methodref          #8.#21         // org/apache/commons/io/output/BrokenWriter.\"<init>\":(Ljava/io/IOException;)V\n+  #21 = NameAndType        #5:#22         // \"<init>\":(Ljava/io/IOException;)V\n+  #22 = Utf8               (Ljava/io/IOException;)V\n+  #23 = Utf8               Code\n+  #24 = Utf8               LineNumberTable\n+  #25 = Utf8               LocalVariableTable\n+  #26 = Utf8               this\n+  #27 = Utf8               Lorg/apache/commons/io/output/BrokenWriter;\n+  #28 = Utf8               write\n+  #29 = Utf8               ([CII)V\n+  #30 = Utf8               cbuf\n+  #31 = Utf8               [C\n+  #32 = Utf8               off\n+  #33 = Utf8               I\n+  #34 = Utf8               len\n+  #35 = Utf8               Exceptions\n+  #36 = Utf8               flush\n+  #37 = Utf8               close\n+  #38 = Utf8               SourceFile\n+  #39 = Utf8               BrokenWriter.java\n {\n   private final java.io.IOException exception;\n     descriptor: Ljava/io/IOException;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public org.apache.commons.io.output.BrokenWriter(java.io.IOException);\n     descriptor: (Ljava/io/IOException;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field exception:Ljava/io/IOException;\n+         6: putfield      #7                  // Field exception:Ljava/io/IOException;\n          9: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 4\n         line 45: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -74,34 +74,34 @@\n \n   public org.apache.commons.io.output.BrokenWriter();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: new           #3                  // class java/io/IOException\n+         1: new           #13                 // class java/io/IOException\n          4: dup\n-         5: ldc           #4                  // String Broken writer\n-         7: invokespecial #5                  // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-        10: invokespecial #6                  // Method \"<init>\":(Ljava/io/IOException;)V\n+         5: ldc           #15                 // String Broken writer\n+         7: invokespecial #17                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        10: invokespecial #20                 // Method \"<init>\":(Ljava/io/IOException;)V\n         13: return\n       LineNumberTable:\n         line 51: 0\n         line 52: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/BrokenWriter;\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #2                  // Field exception:Ljava/io/IOException;\n+         1: getfield      #7                  // Field exception:Ljava/io/IOException;\n          4: athrow\n       LineNumberTable:\n         line 64: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/BrokenWriter;\n             0       5     1  cbuf   [C\n@@ -112,15 +112,15 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field exception:Ljava/io/IOException;\n+         1: getfield      #7                  // Field exception:Ljava/io/IOException;\n          4: athrow\n       LineNumberTable:\n         line 74: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/BrokenWriter;\n     Exceptions:\n@@ -128,15 +128,15 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field exception:Ljava/io/IOException;\n+         1: getfield      #7                  // Field exception:Ljava/io/IOException;\n          4: athrow\n       LineNumberTable:\n         line 84: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/output/BrokenWriter;\n     Exceptions:\n"}]}
