{"diffoscope-json-version": 1, "source1": "first/CharSetUtils.class", "source2": "second/CharSetUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,29 +4,33 @@\n public class CharSetUtils\n {\n     public static boolean containsAny(final String str, final String... set) {\n         if (StringUtils.isEmpty((CharSequence)str) || deepEmpty(set)) {\n             return false;\n         }\n         final CharSet chars = CharSet.getInstance(set);\n-        for (final char c : str.toCharArray()) {\n+        char[] charArray;\n+        for (int length = (charArray = str.toCharArray()).length, i = 0; i < length; ++i) {\n+            final char c = charArray[i];\n             if (chars.contains(c)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n     \n     public static int count(final String str, final String... set) {\n         if (StringUtils.isEmpty((CharSequence)str) || deepEmpty(set)) {\n             return 0;\n         }\n         final CharSet chars = CharSet.getInstance(set);\n         int count = 0;\n-        for (final char c : str.toCharArray()) {\n+        char[] charArray;\n+        for (int length = (charArray = str.toCharArray()).length, i = 0; i < length; ++i) {\n+            final char c = charArray[i];\n             if (chars.contains(c)) {\n                 ++count;\n             }\n         }\n         return count;\n     }\n     \n@@ -57,17 +61,18 @@\n         }\n         return modify(str, set, true);\n     }\n     \n     private static String modify(final String str, final String[] set, final boolean expect) {\n         final CharSet chars = CharSet.getInstance(set);\n         final StringBuilder buffer = new StringBuilder(str.length());\n-        final char[] charArray;\n-        final char[] chrs = charArray = str.toCharArray();\n-        for (final char chr : charArray) {\n+        final char[] chrs = str.toCharArray();\n+        char[] array;\n+        for (int length = (array = chrs).length, i = 0; i < length; ++i) {\n+            final char chr = array[i];\n             if (chars.contains(chr) == expect) {\n                 buffer.append(chr);\n             }\n         }\n         return buffer.toString();\n     }\n     \n"}]}
