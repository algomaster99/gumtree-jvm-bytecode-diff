{"diffoscope-json-version": 1, "source1": "first/IOConsumer.class", "source2": "second/IOConsumer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,155 +1,155 @@\n-  SHA-256 checksum c5b595bf844ecfb667ad112ad875124721308402b7c68143321a75d1ff2b59bf\n+  SHA-256 checksum 81623e62176e6c9de19fb6d25fe392cfb06cb41a248add58983c303dac06a2c2\n   Compiled from \"IOConsumer.java\"\n public interface org.apache.commons.io.function.IOConsumer<T extends java.lang.Object>\n   minor version: 0\n   major version: 52\n   flags: (0x0601) ACC_PUBLIC, ACC_INTERFACE, ACC_ABSTRACT\n-  this_class: #7                          // org/apache/commons/io/function/IOConsumer\n-  super_class: #8                         // java/lang/Object\n+  this_class: #2                          // org/apache/commons/io/function/IOConsumer\n+  super_class: #25                        // java/lang/Object\n   interfaces: 0, fields: 1, methods: 6, attributes: 5\n Constant pool:\n-   #1 = Fieldref           #7.#44         // org/apache/commons/io/function/IOConsumer.NOOP_IO_CONSUMER:Lorg/apache/commons/io/function/IOConsumer;\n-   #2 = String             #27            // after\n-   #3 = Methodref          #45.#46        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #4 = InvokeDynamic      #0:#51         // #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-   #5 = InterfaceMethodref #7.#52         // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n-   #6 = InvokeDynamic      #1:#54         // #1:accept:()Lorg/apache/commons/io/function/IOConsumer;\n-   #7 = Class              #55            // org/apache/commons/io/function/IOConsumer\n-   #8 = Class              #56            // java/lang/Object\n-   #9 = Utf8               NOOP_IO_CONSUMER\n-  #10 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n-  #11 = Utf8               Signature\n-  #12 = Utf8               Lorg/apache/commons/io/function/IOConsumer<*>;\n-  #13 = Utf8               noop\n-  #14 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n-  #15 = Utf8               Code\n-  #16 = Utf8               LineNumberTable\n-  #17 = Utf8               <T:Ljava/lang/Object;>()Lorg/apache/commons/io/function/IOConsumer<TT;>;\n-  #18 = Utf8               accept\n-  #19 = Utf8               (Ljava/lang/Object;)V\n-  #20 = Utf8               Exceptions\n-  #21 = Class              #57            // java/io/IOException\n-  #22 = Utf8               (TT;)V\n-  #23 = Utf8               andThen\n-  #24 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #25 = Utf8               LocalVariableTable\n-  #26 = Utf8               this\n-  #27 = Utf8               after\n-  #28 = Utf8               LocalVariableTypeTable\n-  #29 = Utf8               Lorg/apache/commons/io/function/IOConsumer<TT;>;\n-  #30 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-  #31 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n-  #32 = Utf8               lambda$andThen$1\n-  #33 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #34 = Utf8               t\n-  #35 = Utf8               Ljava/lang/Object;\n-  #36 = Utf8               lambda$static$0\n-  #37 = Utf8               <clinit>\n-  #38 = Utf8               ()V\n-  #39 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n-  #40 = Utf8               SourceFile\n-  #41 = Utf8               IOConsumer.java\n-  #42 = Utf8               RuntimeVisibleAnnotations\n-  #43 = Utf8               Ljava/lang/FunctionalInterface;\n-  #44 = NameAndType        #9:#10         // NOOP_IO_CONSUMER:Lorg/apache/commons/io/function/IOConsumer;\n-  #45 = Class              #58            // java/util/Objects\n-  #46 = NameAndType        #59:#60        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #47 = Utf8               BootstrapMethods\n-  #48 = MethodHandle       6:#61          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #49 = MethodType         #19            //  (Ljava/lang/Object;)V\n-  #50 = MethodHandle       7:#62          // REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #51 = NameAndType        #18:#63        // accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #52 = NameAndType        #18:#19        // accept:(Ljava/lang/Object;)V\n-  #53 = MethodHandle       6:#64          // REF_invokeStatic org/apache/commons/io/function/IOConsumer.lambda$static$0:(Ljava/lang/Object;)V\n-  #54 = NameAndType        #18:#14        // accept:()Lorg/apache/commons/io/function/IOConsumer;\n-  #55 = Utf8               org/apache/commons/io/function/IOConsumer\n-  #56 = Utf8               java/lang/Object\n-  #57 = Utf8               java/io/IOException\n-  #58 = Utf8               java/util/Objects\n-  #59 = Utf8               requireNonNull\n-  #60 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #61 = Methodref          #65.#66        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #62 = InterfaceMethodref #7.#67         // org/apache/commons/io/function/IOConsumer.lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #63 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n-  #64 = InterfaceMethodref #7.#68         // org/apache/commons/io/function/IOConsumer.lambda$static$0:(Ljava/lang/Object;)V\n-  #65 = Class              #69            // java/lang/invoke/LambdaMetafactory\n-  #66 = NameAndType        #70:#74        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #67 = NameAndType        #32:#33        // lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-  #68 = NameAndType        #36:#19        // lambda$static$0:(Ljava/lang/Object;)V\n-  #69 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #70 = Utf8               metafactory\n-  #71 = Class              #76            // java/lang/invoke/MethodHandles$Lookup\n-  #72 = Utf8               Lookup\n-  #73 = Utf8               InnerClasses\n-  #74 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #75 = Class              #77            // java/lang/invoke/MethodHandles\n-  #76 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #77 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Fieldref           #2.#3          // org/apache/commons/io/function/IOConsumer.NOOP_IO_CONSUMER:Lorg/apache/commons/io/function/IOConsumer;\n+   #2 = Class              #4             // org/apache/commons/io/function/IOConsumer\n+   #3 = NameAndType        #5:#6          // NOOP_IO_CONSUMER:Lorg/apache/commons/io/function/IOConsumer;\n+   #4 = Utf8               org/apache/commons/io/function/IOConsumer\n+   #5 = Utf8               NOOP_IO_CONSUMER\n+   #6 = Utf8               Lorg/apache/commons/io/function/IOConsumer;\n+   #7 = String             #8             // after\n+   #8 = Utf8               after\n+   #9 = Methodref          #10.#11        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #10 = Class              #12            // java/util/Objects\n+  #11 = NameAndType        #13:#14        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #12 = Utf8               java/util/Objects\n+  #13 = Utf8               requireNonNull\n+  #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #15 = InvokeDynamic      #0:#16         // #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #16 = NameAndType        #17:#18        // accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #17 = Utf8               accept\n+  #18 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #19 = InterfaceMethodref #2.#20         // org/apache/commons/io/function/IOConsumer.accept:(Ljava/lang/Object;)V\n+  #20 = NameAndType        #17:#21        // accept:(Ljava/lang/Object;)V\n+  #21 = Utf8               (Ljava/lang/Object;)V\n+  #22 = InvokeDynamic      #1:#23         // #1:accept:()Lorg/apache/commons/io/function/IOConsumer;\n+  #23 = NameAndType        #17:#24        // accept:()Lorg/apache/commons/io/function/IOConsumer;\n+  #24 = Utf8               ()Lorg/apache/commons/io/function/IOConsumer;\n+  #25 = Class              #26            // java/lang/Object\n+  #26 = Utf8               java/lang/Object\n+  #27 = Utf8               Signature\n+  #28 = Utf8               Lorg/apache/commons/io/function/IOConsumer<*>;\n+  #29 = Utf8               noop\n+  #30 = Utf8               Code\n+  #31 = Utf8               LineNumberTable\n+  #32 = Utf8               <T:Ljava/lang/Object;>()Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+  #33 = Utf8               Exceptions\n+  #34 = Class              #35            // java/io/IOException\n+  #35 = Utf8               java/io/IOException\n+  #36 = Utf8               (TT;)V\n+  #37 = Utf8               andThen\n+  #38 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+  #39 = Utf8               LocalVariableTable\n+  #40 = Utf8               this\n+  #41 = Utf8               LocalVariableTypeTable\n+  #42 = Utf8               Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+  #43 = Utf8               Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n+  #44 = Utf8               (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+  #45 = Utf8               lambda$andThen$1\n+  #46 = Utf8               (Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #47 = Utf8               t\n+  #48 = Utf8               Ljava/lang/Object;\n+  #49 = Utf8               lambda$static$0\n+  #50 = Utf8               <clinit>\n+  #51 = Utf8               ()V\n+  #52 = Utf8               <T:Ljava/lang/Object;>Ljava/lang/Object;\n+  #53 = Utf8               SourceFile\n+  #54 = Utf8               IOConsumer.java\n+  #55 = Utf8               RuntimeVisibleAnnotations\n+  #56 = Utf8               Ljava/lang/FunctionalInterface;\n+  #57 = Utf8               BootstrapMethods\n+  #58 = MethodHandle       6:#59          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #59 = Methodref          #60.#61        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #60 = Class              #62            // java/lang/invoke/LambdaMetafactory\n+  #61 = NameAndType        #63:#64        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #62 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #63 = Utf8               metafactory\n+  #64 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #65 = MethodType         #21            //  (Ljava/lang/Object;)V\n+  #66 = MethodHandle       7:#67          // REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #67 = InterfaceMethodref #2.#68         // org/apache/commons/io/function/IOConsumer.lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #68 = NameAndType        #45:#46        // lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+  #69 = MethodHandle       6:#70          // REF_invokeStatic org/apache/commons/io/function/IOConsumer.lambda$static$0:(Ljava/lang/Object;)V\n+  #70 = InterfaceMethodref #2.#71         // org/apache/commons/io/function/IOConsumer.lambda$static$0:(Ljava/lang/Object;)V\n+  #71 = NameAndType        #49:#21        // lambda$static$0:(Ljava/lang/Object;)V\n+  #72 = Utf8               InnerClasses\n+  #73 = Class              #74            // java/lang/invoke/MethodHandles$Lookup\n+  #74 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #75 = Class              #76            // java/lang/invoke/MethodHandles\n+  #76 = Utf8               java/lang/invoke/MethodHandles\n+  #77 = Utf8               Lookup\n {\n   public static final org.apache.commons.io.function.IOConsumer<?> NOOP_IO_CONSUMER;\n     descriptor: Lorg/apache/commons/io/function/IOConsumer;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n-    Signature: #12                          // Lorg/apache/commons/io/function/IOConsumer<*>;\n+    Signature: #28                          // Lorg/apache/commons/io/function/IOConsumer<*>;\n \n   public static <T extends java.lang.Object> org.apache.commons.io.function.IOConsumer<T> noop();\n     descriptor: ()Lorg/apache/commons/io/function/IOConsumer;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: getstatic     #1                  // Field NOOP_IO_CONSUMER:Lorg/apache/commons/io/function/IOConsumer;\n          3: areturn\n       LineNumberTable:\n         line 47: 0\n-    Signature: #17                          // <T:Ljava/lang/Object;>()Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+    Signature: #32                          // <T:Ljava/lang/Object;>()Lorg/apache/commons/io/function/IOConsumer<TT;>;\n \n   public abstract void accept(T) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;)V\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n     Exceptions:\n       throws java.io.IOException\n-    Signature: #22                          // (TT;)V\n+    Signature: #36                          // (TT;)V\n \n   public default org.apache.commons.io.function.IOConsumer<T> andThen(org.apache.commons.io.function.IOConsumer<? super T>);\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n-         1: ldc           #2                  // String after\n-         3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #7                  // String after\n+         3: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: aload_1\n-         9: invokedynamic #4,  0              // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n+         9: invokedynamic #15,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/function/IOConsumer;Lorg/apache/commons/io/function/IOConsumer;)Lorg/apache/commons/io/function/IOConsumer;\n         14: areturn\n       LineNumberTable:\n         line 69: 0\n         line 70: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOConsumer;\n             0      15     1 after   Lorg/apache/commons/io/function/IOConsumer;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/function/IOConsumer<TT;>;\n             0      15     1 after   Lorg/apache/commons/io/function/IOConsumer<-TT;>;\n-    Signature: #31                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n+    Signature: #44                          // (Lorg/apache/commons/io/function/IOConsumer<-TT;>;)Lorg/apache/commons/io/function/IOConsumer<TT;>;\n \n   private void lambda$andThen$1(org.apache.commons.io.function.IOConsumer, java.lang.Object) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_2\n-         2: invokeinterface #5,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V\n+         2: invokeinterface #19,  2           // InterfaceMethod accept:(Ljava/lang/Object;)V\n          7: aload_1\n          8: aload_2\n-         9: invokeinterface #5,  2            // InterfaceMethod accept:(Ljava/lang/Object;)V\n+         9: invokeinterface #19,  2           // InterfaceMethod accept:(Ljava/lang/Object;)V\n         14: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 7\n         line 73: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -177,31 +177,31 @@\n       throws java.io.IOException\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: invokedynamic #6,  0              // InvokeDynamic #1:accept:()Lorg/apache/commons/io/function/IOConsumer;\n+         0: invokedynamic #22,  0             // InvokeDynamic #1:accept:()Lorg/apache/commons/io/function/IOConsumer;\n          5: putstatic     #1                  // Field NOOP_IO_CONSUMER:Lorg/apache/commons/io/function/IOConsumer;\n          8: return\n       LineNumberTable:\n         line 36: 0\n }\n-Signature: #39                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n+Signature: #52                          // <T:Ljava/lang/Object;>Ljava/lang/Object;\n SourceFile: \"IOConsumer.java\"\n RuntimeVisibleAnnotations:\n-  0: #43()\n+  0: #56()\n     java.lang.FunctionalInterface\n-InnerClasses:\n-  public static final #72= #71 of #75;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #58 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #49 (Ljava/lang/Object;)V\n-      #50 REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n-      #49 (Ljava/lang/Object;)V\n-  1: #48 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+      #65 (Ljava/lang/Object;)V\n+      #66 REF_invokeSpecial org/apache/commons/io/function/IOConsumer.lambda$andThen$1:(Lorg/apache/commons/io/function/IOConsumer;Ljava/lang/Object;)V\n+      #65 (Ljava/lang/Object;)V\n+  1: #58 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #49 (Ljava/lang/Object;)V\n-      #53 REF_invokeStatic org/apache/commons/io/function/IOConsumer.lambda$static$0:(Ljava/lang/Object;)V\n-      #49 (Ljava/lang/Object;)V\n+      #65 (Ljava/lang/Object;)V\n+      #69 REF_invokeStatic org/apache/commons/io/function/IOConsumer.lambda$static$0:(Ljava/lang/Object;)V\n+      #65 (Ljava/lang/Object;)V\n+InnerClasses:\n+  public static final #77= #73 of #75;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
