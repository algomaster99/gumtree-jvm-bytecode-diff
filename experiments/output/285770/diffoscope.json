{"diffoscope-json-version": 1, "source1": "first/PercentCodec.class", "source2": "second/PercentCodec.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,67 +1,67 @@\n-  SHA-256 checksum bdfc48571ab02081b2b0791d6532505617d9c72507b4330ab67a327c2a1975b3\n+  SHA-256 checksum 9d162a63db06bded734bda264bc1c8606360a282d138189474df7a6ecf5bb1b2\n   Compiled from \"PercentCodec.java\"\n public class org.apache.commons.codec.net.PercentCodec implements org.apache.commons.codec.BinaryEncoder,org.apache.commons.codec.BinaryDecoder\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #12                         // org/apache/commons/codec/net/PercentCodec\n   super_class: #48                        // java/lang/Object\n   interfaces: 2, fields: 5, methods: 15, attributes: 1\n Constant pool:\n-    #1 = Methodref          #48.#93       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #12.#94       // org/apache/commons/codec/net/PercentCodec.ESCAPE_CHAR:B\n-    #3 = Class              #95           // java/util/BitSet\n-    #4 = Methodref          #3.#93        // java/util/BitSet.\"<init>\":()V\n-    #5 = Fieldref           #12.#96       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n-    #6 = Class              #97           // java/lang/Integer\n+    #1 = Methodref          #48.#91       // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #12.#92       // org/apache/commons/codec/net/PercentCodec.ESCAPE_CHAR:B\n+    #3 = Class              #93           // java/util/BitSet\n+    #4 = Methodref          #3.#91        // java/util/BitSet.\"<init>\":()V\n+    #5 = Fieldref           #12.#94       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeChars:Ljava/util/BitSet;\n+    #6 = Class              #95           // java/lang/Integer\n     #7 = Integer            2147483647\n-    #8 = Fieldref           #12.#98       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n+    #8 = Fieldref           #12.#96       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMin:I\n     #9 = Integer            -2147483648\n-   #10 = Fieldref           #12.#99       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n-   #11 = Fieldref           #12.#100      // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n-   #12 = Class              #101          // org/apache/commons/codec/net/PercentCodec\n-   #13 = Methodref          #12.#102      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n-   #14 = Methodref          #12.#103      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n-   #15 = Methodref          #3.#104       // java/util/BitSet.set:(I)V\n-   #16 = Methodref          #12.#105      // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n-   #17 = Methodref          #12.#106      // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n-   #18 = Methodref          #12.#107      // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n-   #19 = Methodref          #108.#109     // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n-   #20 = Methodref          #12.#110      // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n-   #21 = Methodref          #111.#112     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n-   #22 = Methodref          #108.#113     // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n-   #23 = Methodref          #108.#114     // java/nio/ByteBuffer.array:()[B\n-   #24 = Methodref          #12.#115      // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n-   #25 = Methodref          #12.#116      // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n-   #26 = Methodref          #3.#117       // java/util/BitSet.get:(I)Z\n-   #27 = Methodref          #12.#118      // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n-   #28 = Methodref          #111.#119     // org/apache/commons/codec/net/Utils.digit16:(B)I\n-   #29 = Class              #120          // java/lang/ArrayIndexOutOfBoundsException\n-   #30 = Class              #121          // org/apache/commons/codec/DecoderException\n-   #31 = String             #122          // Invalid percent decoding:\n-   #32 = Methodref          #30.#123      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #33 = Class              #124          // \"[B\"\n-   #34 = Methodref          #12.#125      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n-   #35 = Class              #126          // org/apache/commons/codec/EncoderException\n-   #36 = Class              #127          // java/lang/StringBuilder\n-   #37 = Methodref          #36.#93       // java/lang/StringBuilder.\"<init>\":()V\n-   #38 = String             #128          // Objects of type\n-   #39 = Methodref          #36.#129      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #40 = Methodref          #48.#130      // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #41 = Methodref          #131.#132     // java/lang/Class.getName:()Ljava/lang/String;\n-   #42 = String             #133          //  cannot be Percent encoded\n-   #43 = Methodref          #36.#134      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #44 = Methodref          #35.#135      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #12.#136      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n-   #46 = String             #137          //  cannot be Percent decoded\n-   #47 = Methodref          #30.#135      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-   #48 = Class              #138          // java/lang/Object\n-   #49 = Class              #139          // org/apache/commons/codec/BinaryEncoder\n-   #50 = Class              #140          // org/apache/commons/codec/BinaryDecoder\n+   #10 = Fieldref           #12.#97       // org/apache/commons/codec/net/PercentCodec.alwaysEncodeCharsMax:I\n+   #11 = Fieldref           #12.#98       // org/apache/commons/codec/net/PercentCodec.plusForSpace:Z\n+   #12 = Class              #99           // org/apache/commons/codec/net/PercentCodec\n+   #13 = Methodref          #12.#100      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChar:(B)V\n+   #14 = Methodref          #12.#101      // org/apache/commons/codec/net/PercentCodec.insertAlwaysEncodeChars:([B)V\n+   #15 = Methodref          #3.#102       // java/util/BitSet.set:(I)V\n+   #16 = Methodref          #12.#103      // org/apache/commons/codec/net/PercentCodec.expectedEncodingBytes:([B)I\n+   #17 = Methodref          #12.#104      // org/apache/commons/codec/net/PercentCodec.containsSpace:([B)Z\n+   #18 = Methodref          #12.#105      // org/apache/commons/codec/net/PercentCodec.doEncode:([BIZ)[B\n+   #19 = Methodref          #77.#106      // java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;\n+   #20 = Methodref          #12.#107      // org/apache/commons/codec/net/PercentCodec.canEncode:(B)Z\n+   #21 = Methodref          #108.#109     // org/apache/commons/codec/net/Utils.hexDigit:(I)C\n+   #22 = Methodref          #77.#110      // java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;\n+   #23 = Methodref          #77.#111      // java/nio/ByteBuffer.array:()[B\n+   #24 = Methodref          #12.#112      // org/apache/commons/codec/net/PercentCodec.isAsciiChar:(B)Z\n+   #25 = Methodref          #12.#113      // org/apache/commons/codec/net/PercentCodec.inAlwaysEncodeCharsRange:(B)Z\n+   #26 = Methodref          #3.#114       // java/util/BitSet.get:(I)Z\n+   #27 = Methodref          #12.#115      // org/apache/commons/codec/net/PercentCodec.expectedDecodingBytes:([B)I\n+   #28 = Methodref          #108.#116     // org/apache/commons/codec/net/Utils.digit16:(B)I\n+   #29 = Class              #117          // java/lang/ArrayIndexOutOfBoundsException\n+   #30 = Class              #118          // org/apache/commons/codec/DecoderException\n+   #31 = String             #119          // Invalid percent decoding:\n+   #32 = Methodref          #30.#120      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+   #33 = Class              #121          // \"[B\"\n+   #34 = Methodref          #12.#122      // org/apache/commons/codec/net/PercentCodec.encode:([B)[B\n+   #35 = Class              #123          // org/apache/commons/codec/EncoderException\n+   #36 = Class              #124          // java/lang/StringBuilder\n+   #37 = Methodref          #36.#91       // java/lang/StringBuilder.\"<init>\":()V\n+   #38 = String             #125          // Objects of type\n+   #39 = Methodref          #36.#126      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #40 = Methodref          #48.#127      // java/lang/Object.getClass:()Ljava/lang/Class;\n+   #41 = Methodref          #128.#129     // java/lang/Class.getName:()Ljava/lang/String;\n+   #42 = String             #130          //  cannot be Percent encoded\n+   #43 = Methodref          #36.#131      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #44 = Methodref          #35.#132      // org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+   #45 = Methodref          #12.#133      // org/apache/commons/codec/net/PercentCodec.decode:([B)[B\n+   #46 = String             #134          //  cannot be Percent decoded\n+   #47 = Methodref          #30.#132      // org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+   #48 = Class              #135          // java/lang/Object\n+   #49 = Class              #136          // org/apache/commons/codec/BinaryEncoder\n+   #50 = Class              #137          // org/apache/commons/codec/BinaryDecoder\n    #51 = Utf8               ESCAPE_CHAR\n    #52 = Utf8               B\n    #53 = Utf8               ConstantValue\n    #54 = Integer            37\n    #55 = Utf8               alwaysEncodeChars\n    #56 = Utf8               Ljava/util/BitSet;\n    #57 = Utf8               plusForSpace\n@@ -80,104 +80,101 @@\n    #70 = Utf8               insertAlwaysEncodeChar\n    #71 = Utf8               (B)V\n    #72 = Utf8               encode\n    #73 = Utf8               ([B)[B\n    #74 = Utf8               Exceptions\n    #75 = Utf8               doEncode\n    #76 = Utf8               ([BIZ)[B\n-   #77 = Class              #101          // org/apache/commons/codec/net/PercentCodec\n-   #78 = Class              #141          // java/nio/ByteBuffer\n-   #79 = Utf8               expectedEncodingBytes\n-   #80 = Utf8               ([B)I\n-   #81 = Utf8               containsSpace\n-   #82 = Utf8               ([B)Z\n-   #83 = Utf8               canEncode\n-   #84 = Utf8               (B)Z\n-   #85 = Utf8               inAlwaysEncodeCharsRange\n-   #86 = Utf8               isAsciiChar\n-   #87 = Utf8               decode\n-   #88 = Class              #120          // java/lang/ArrayIndexOutOfBoundsException\n-   #89 = Utf8               expectedDecodingBytes\n-   #90 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-   #91 = Utf8               SourceFile\n-   #92 = Utf8               PercentCodec.java\n-   #93 = NameAndType        #62:#63       // \"<init>\":()V\n-   #94 = NameAndType        #51:#52       // ESCAPE_CHAR:B\n-   #95 = Utf8               java/util/BitSet\n-   #96 = NameAndType        #55:#56       // alwaysEncodeChars:Ljava/util/BitSet;\n-   #97 = Utf8               java/lang/Integer\n-   #98 = NameAndType        #59:#60       // alwaysEncodeCharsMin:I\n-   #99 = NameAndType        #61:#60       // alwaysEncodeCharsMax:I\n-  #100 = NameAndType        #57:#58       // plusForSpace:Z\n-  #101 = Utf8               org/apache/commons/codec/net/PercentCodec\n-  #102 = NameAndType        #70:#71       // insertAlwaysEncodeChar:(B)V\n-  #103 = NameAndType        #67:#68       // insertAlwaysEncodeChars:([B)V\n-  #104 = NameAndType        #142:#143     // set:(I)V\n-  #105 = NameAndType        #79:#80       // expectedEncodingBytes:([B)I\n-  #106 = NameAndType        #81:#82       // containsSpace:([B)Z\n-  #107 = NameAndType        #75:#76       // doEncode:([BIZ)[B\n-  #108 = Class              #141          // java/nio/ByteBuffer\n-  #109 = NameAndType        #144:#145     // allocate:(I)Ljava/nio/ByteBuffer;\n-  #110 = NameAndType        #83:#84       // canEncode:(B)Z\n-  #111 = Class              #146          // org/apache/commons/codec/net/Utils\n-  #112 = NameAndType        #147:#148     // hexDigit:(I)C\n-  #113 = NameAndType        #149:#150     // put:(B)Ljava/nio/ByteBuffer;\n-  #114 = NameAndType        #151:#152     // array:()[B\n-  #115 = NameAndType        #86:#84       // isAsciiChar:(B)Z\n-  #116 = NameAndType        #85:#84       // inAlwaysEncodeCharsRange:(B)Z\n-  #117 = NameAndType        #153:#154     // get:(I)Z\n-  #118 = NameAndType        #89:#80       // expectedDecodingBytes:([B)I\n-  #119 = NameAndType        #155:#156     // digit16:(B)I\n-  #120 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n-  #121 = Utf8               org/apache/commons/codec/DecoderException\n-  #122 = Utf8               Invalid percent decoding:\n-  #123 = NameAndType        #62:#157      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #124 = Utf8               [B\n-  #125 = NameAndType        #72:#73       // encode:([B)[B\n-  #126 = Utf8               org/apache/commons/codec/EncoderException\n-  #127 = Utf8               java/lang/StringBuilder\n-  #128 = Utf8               Objects of type\n-  #129 = NameAndType        #158:#159     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #130 = NameAndType        #160:#161     // getClass:()Ljava/lang/Class;\n-  #131 = Class              #162          // java/lang/Class\n-  #132 = NameAndType        #163:#164     // getName:()Ljava/lang/String;\n-  #133 = Utf8                cannot be Percent encoded\n-  #134 = NameAndType        #165:#164     // toString:()Ljava/lang/String;\n-  #135 = NameAndType        #62:#166      // \"<init>\":(Ljava/lang/String;)V\n-  #136 = NameAndType        #87:#73       // decode:([B)[B\n-  #137 = Utf8                cannot be Percent decoded\n-  #138 = Utf8               java/lang/Object\n-  #139 = Utf8               org/apache/commons/codec/BinaryEncoder\n-  #140 = Utf8               org/apache/commons/codec/BinaryDecoder\n-  #141 = Utf8               java/nio/ByteBuffer\n-  #142 = Utf8               set\n-  #143 = Utf8               (I)V\n-  #144 = Utf8               allocate\n-  #145 = Utf8               (I)Ljava/nio/ByteBuffer;\n-  #146 = Utf8               org/apache/commons/codec/net/Utils\n-  #147 = Utf8               hexDigit\n-  #148 = Utf8               (I)C\n-  #149 = Utf8               put\n-  #150 = Utf8               (B)Ljava/nio/ByteBuffer;\n-  #151 = Utf8               array\n-  #152 = Utf8               ()[B\n-  #153 = Utf8               get\n-  #154 = Utf8               (I)Z\n-  #155 = Utf8               digit16\n-  #156 = Utf8               (B)I\n-  #157 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #158 = Utf8               append\n-  #159 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #160 = Utf8               getClass\n-  #161 = Utf8               ()Ljava/lang/Class;\n-  #162 = Utf8               java/lang/Class\n-  #163 = Utf8               getName\n-  #164 = Utf8               ()Ljava/lang/String;\n-  #165 = Utf8               toString\n-  #166 = Utf8               (Ljava/lang/String;)V\n+   #77 = Class              #138          // java/nio/ByteBuffer\n+   #78 = Utf8               expectedEncodingBytes\n+   #79 = Utf8               ([B)I\n+   #80 = Utf8               containsSpace\n+   #81 = Utf8               ([B)Z\n+   #82 = Utf8               canEncode\n+   #83 = Utf8               (B)Z\n+   #84 = Utf8               inAlwaysEncodeCharsRange\n+   #85 = Utf8               isAsciiChar\n+   #86 = Utf8               decode\n+   #87 = Utf8               expectedDecodingBytes\n+   #88 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #89 = Utf8               SourceFile\n+   #90 = Utf8               PercentCodec.java\n+   #91 = NameAndType        #62:#63       // \"<init>\":()V\n+   #92 = NameAndType        #51:#52       // ESCAPE_CHAR:B\n+   #93 = Utf8               java/util/BitSet\n+   #94 = NameAndType        #55:#56       // alwaysEncodeChars:Ljava/util/BitSet;\n+   #95 = Utf8               java/lang/Integer\n+   #96 = NameAndType        #59:#60       // alwaysEncodeCharsMin:I\n+   #97 = NameAndType        #61:#60       // alwaysEncodeCharsMax:I\n+   #98 = NameAndType        #57:#58       // plusForSpace:Z\n+   #99 = Utf8               org/apache/commons/codec/net/PercentCodec\n+  #100 = NameAndType        #70:#71       // insertAlwaysEncodeChar:(B)V\n+  #101 = NameAndType        #67:#68       // insertAlwaysEncodeChars:([B)V\n+  #102 = NameAndType        #139:#140     // set:(I)V\n+  #103 = NameAndType        #78:#79       // expectedEncodingBytes:([B)I\n+  #104 = NameAndType        #80:#81       // containsSpace:([B)Z\n+  #105 = NameAndType        #75:#76       // doEncode:([BIZ)[B\n+  #106 = NameAndType        #141:#142     // allocate:(I)Ljava/nio/ByteBuffer;\n+  #107 = NameAndType        #82:#83       // canEncode:(B)Z\n+  #108 = Class              #143          // org/apache/commons/codec/net/Utils\n+  #109 = NameAndType        #144:#145     // hexDigit:(I)C\n+  #110 = NameAndType        #146:#147     // put:(B)Ljava/nio/ByteBuffer;\n+  #111 = NameAndType        #148:#149     // array:()[B\n+  #112 = NameAndType        #85:#83       // isAsciiChar:(B)Z\n+  #113 = NameAndType        #84:#83       // inAlwaysEncodeCharsRange:(B)Z\n+  #114 = NameAndType        #150:#151     // get:(I)Z\n+  #115 = NameAndType        #87:#79       // expectedDecodingBytes:([B)I\n+  #116 = NameAndType        #152:#153     // digit16:(B)I\n+  #117 = Utf8               java/lang/ArrayIndexOutOfBoundsException\n+  #118 = Utf8               org/apache/commons/codec/DecoderException\n+  #119 = Utf8               Invalid percent decoding:\n+  #120 = NameAndType        #62:#154      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #121 = Utf8               [B\n+  #122 = NameAndType        #72:#73       // encode:([B)[B\n+  #123 = Utf8               org/apache/commons/codec/EncoderException\n+  #124 = Utf8               java/lang/StringBuilder\n+  #125 = Utf8               Objects of type\n+  #126 = NameAndType        #155:#156     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #127 = NameAndType        #157:#158     // getClass:()Ljava/lang/Class;\n+  #128 = Class              #159          // java/lang/Class\n+  #129 = NameAndType        #160:#161     // getName:()Ljava/lang/String;\n+  #130 = Utf8                cannot be Percent encoded\n+  #131 = NameAndType        #162:#161     // toString:()Ljava/lang/String;\n+  #132 = NameAndType        #62:#163      // \"<init>\":(Ljava/lang/String;)V\n+  #133 = NameAndType        #86:#73       // decode:([B)[B\n+  #134 = Utf8                cannot be Percent decoded\n+  #135 = Utf8               java/lang/Object\n+  #136 = Utf8               org/apache/commons/codec/BinaryEncoder\n+  #137 = Utf8               org/apache/commons/codec/BinaryDecoder\n+  #138 = Utf8               java/nio/ByteBuffer\n+  #139 = Utf8               set\n+  #140 = Utf8               (I)V\n+  #141 = Utf8               allocate\n+  #142 = Utf8               (I)Ljava/nio/ByteBuffer;\n+  #143 = Utf8               org/apache/commons/codec/net/Utils\n+  #144 = Utf8               hexDigit\n+  #145 = Utf8               (I)C\n+  #146 = Utf8               put\n+  #147 = Utf8               (B)Ljava/nio/ByteBuffer;\n+  #148 = Utf8               array\n+  #149 = Utf8               ()[B\n+  #150 = Utf8               get\n+  #151 = Utf8               (I)Z\n+  #152 = Utf8               digit16\n+  #153 = Utf8               (B)I\n+  #154 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #155 = Utf8               append\n+  #156 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #157 = Utf8               getClass\n+  #158 = Utf8               ()Ljava/lang/Class;\n+  #159 = Utf8               java/lang/Class\n+  #160 = Utf8               getName\n+  #161 = Utf8               ()Ljava/lang/String;\n+  #162 = Utf8               toString\n+  #163 = Utf8               (Ljava/lang/String;)V\n {\n   private final byte ESCAPE_CHAR = 37;\n     descriptor: B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n     ConstantValue: int 37\n \n   private final java.util.BitSet alwaysEncodeChars;\n@@ -871,89 +868,87 @@\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: instanceof    #33                 // class \"[B\"\n-        10: ifeq          25\n+        10: ifeq          22\n         13: aload_0\n         14: aload_1\n         15: checkcast     #33                 // class \"[B\"\n-        18: checkcast     #33                 // class \"[B\"\n-        21: invokevirtual #34                 // Method encode:([B)[B\n-        24: areturn\n-        25: new           #35                 // class org/apache/commons/codec/EncoderException\n-        28: dup\n-        29: new           #36                 // class java/lang/StringBuilder\n-        32: dup\n-        33: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        36: ldc           #38                 // String Objects of type\n-        38: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: aload_1\n-        42: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        45: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: ldc           #42                 // String  cannot be Percent encoded\n-        53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        56: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        59: invokespecial #44                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n-        62: athrow\n+        18: invokevirtual #34                 // Method encode:([B)[B\n+        21: areturn\n+        22: new           #35                 // class org/apache/commons/codec/EncoderException\n+        25: dup\n+        26: new           #36                 // class java/lang/StringBuilder\n+        29: dup\n+        30: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #38                 // String Objects of type\n+        35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: aload_1\n+        39: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #42                 // String  cannot be Percent encoded\n+        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #44                 // Method org/apache/commons/codec/EncoderException.\"<init>\":(Ljava/lang/String;)V\n+        59: athrow\n       LineNumberTable:\n         line 237: 0\n         line 238: 4\n         line 239: 6\n         line 240: 13\n-        line 242: 25\n+        line 242: 22\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.EncoderException\n \n   public java.lang.Object decode(java.lang.Object) throws org.apache.commons.codec.DecoderException;\n     descriptor: (Ljava/lang/Object;)Ljava/lang/Object;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_1\n          7: instanceof    #33                 // class \"[B\"\n-        10: ifeq          25\n+        10: ifeq          22\n         13: aload_0\n         14: aload_1\n         15: checkcast     #33                 // class \"[B\"\n-        18: checkcast     #33                 // class \"[B\"\n-        21: invokevirtual #45                 // Method decode:([B)[B\n-        24: areturn\n-        25: new           #30                 // class org/apache/commons/codec/DecoderException\n-        28: dup\n-        29: new           #36                 // class java/lang/StringBuilder\n-        32: dup\n-        33: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        36: ldc           #38                 // String Objects of type\n-        38: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: aload_1\n-        42: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n-        45: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n-        48: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        51: ldc           #46                 // String  cannot be Percent decoded\n-        53: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        56: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        59: invokespecial #47                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n-        62: athrow\n+        18: invokevirtual #45                 // Method decode:([B)[B\n+        21: areturn\n+        22: new           #30                 // class org/apache/commons/codec/DecoderException\n+        25: dup\n+        26: new           #36                 // class java/lang/StringBuilder\n+        29: dup\n+        30: invokespecial #37                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        33: ldc           #38                 // String Objects of type\n+        35: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        38: aload_1\n+        39: invokevirtual #40                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        42: invokevirtual #41                 // Method java/lang/Class.getName:()Ljava/lang/String;\n+        45: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        48: ldc           #46                 // String  cannot be Percent decoded\n+        50: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        53: invokevirtual #43                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        56: invokespecial #47                 // Method org/apache/commons/codec/DecoderException.\"<init>\":(Ljava/lang/String;)V\n+        59: athrow\n       LineNumberTable:\n         line 255: 0\n         line 256: 4\n         line 257: 6\n         line 258: 13\n-        line 260: 25\n+        line 260: 22\n       StackMapTable: number_of_entries = 2\n         frame_type = 6 /* same */\n-        frame_type = 18 /* same */\n+        frame_type = 15 /* same */\n     Exceptions:\n       throws org.apache.commons.codec.DecoderException\n }\n SourceFile: \"PercentCodec.java\"\n"}]}
