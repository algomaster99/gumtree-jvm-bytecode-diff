{"diffoscope-json-version": 1, "source1": "first/FailableFunction.class", "source2": "second/FailableFunction.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -14,17 +14,17 @@\n     \n     default <T, R, E extends Throwable> FailableFunction<T, R, E> nop() {\n         return FailableFunction.NOP;\n     }\n     \n     default <V> FailableFunction<T, V, E> andThen(final FailableFunction<? super R, ? extends V, E> after) {\n         Objects.requireNonNull(after);\n-        return t -> after.apply(this.apply(t));\n+        return t -> failableFunction.apply(this.apply(t));\n     }\n     \n     R apply(final T p0) throws E, Throwable;\n     \n     default <V> FailableFunction<V, R, E> compose(final FailableFunction<? super V, ? extends T, E> before) {\n         Objects.requireNonNull(before);\n-        return v -> this.apply(before.apply(v));\n+        return v -> this.apply(failableFunction.apply(v));\n     }\n }\n"}]}
