{"diffoscope-json-version": 1, "source1": "first/CharsToNameCanonicalizer.class", "source2": "second/CharsToNameCanonicalizer.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,102 +1,102 @@\n-  SHA-256 checksum 49300bd1751d2d28e3be356f645b701ead916a785c3873b4905e557236a9e5b5\n+  SHA-256 checksum 99950d6177640a6e11f1b4bfe3670e5677b093657ae921dccf22c850eb1c0d21\n   Compiled from \"CharsToNameCanonicalizer.java\"\n public final class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n   this_class: #9                          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n   super_class: #71                        // java/lang/Object\n   interfaces: 0, fields: 18, methods: 25, attributes: 2\n Constant pool:\n-    #1 = Methodref          #71.#214      // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #9.#215       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._parent:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n-    #3 = Fieldref           #9.#216       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._seed:I\n-    #4 = Fieldref           #9.#217       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._canonicalize:Z\n-    #5 = Fieldref           #9.#218       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._flags:I\n-    #6 = Fieldref           #9.#219       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._hashShared:Z\n-    #7 = Fieldref           #9.#220       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._longestCollisionList:I\n-    #8 = Class              #221          // java/util/concurrent/atomic/AtomicReference\n-    #9 = Class              #222          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n-   #10 = Methodref          #29.#223      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.createInitial:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;\n-   #11 = Methodref          #8.#224       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n-   #12 = Fieldref           #9.#225       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n-   #13 = Fieldref           #226.#227     // com/fasterxml/jackson/core/JsonFactory$Feature.CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #14 = Methodref          #226.#228     // com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn:(I)Z\n-   #15 = Fieldref           #29.#229      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.symbols:[Ljava/lang/String;\n-   #16 = Fieldref           #9.#230       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._symbols:[Ljava/lang/String;\n-   #17 = Fieldref           #29.#231      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-   #18 = Fieldref           #9.#232       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-   #19 = Fieldref           #29.#233      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.size:I\n-   #20 = Fieldref           #9.#234       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._size:I\n-   #21 = Fieldref           #29.#235      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.longestCollisionList:I\n-   #22 = Methodref          #9.#236       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._thresholdSize:(I)I\n-   #23 = Fieldref           #9.#237       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._sizeThreshold:I\n-   #24 = Fieldref           #9.#238       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._indexMask:I\n-   #25 = Methodref          #239.#240     // java/lang/System.currentTimeMillis:()J\n-   #26 = Methodref          #9.#241       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.createRoot:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n-   #27 = Methodref          #9.#242       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.\"<init>\":(I)V\n-   #28 = Methodref          #8.#243       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n-   #29 = Class              #244          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo\n-   #30 = Methodref          #9.#245       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;IILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n-   #31 = Methodref          #9.#246       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.maybeDirty:()Z\n-   #32 = Methodref          #29.#247      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.\"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;)V\n-   #33 = Methodref          #9.#248       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.mergeChild:(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n-   #34 = Methodref          #8.#249       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-   #35 = Fieldref           #52.#250      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.length:I\n-   #36 = String             #251          //\n-   #37 = Class              #252          // java/lang/String\n-   #38 = Methodref          #37.#253      // java/lang/String.\"<init>\":([CII)V\n-   #39 = Methodref          #9.#254       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._hashToIndex:(I)I\n-   #40 = Methodref          #37.#255      // java/lang/String.length:()I\n-   #41 = Methodref          #37.#256      // java/lang/String.charAt:(I)C\n-   #42 = Methodref          #52.#257      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.has:([CII)Ljava/lang/String;\n-   #43 = Fieldref           #52.#258      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.next:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-   #44 = Methodref          #9.#259       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._findSymbol2:([CIILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)Ljava/lang/String;\n-   #45 = Methodref          #9.#260       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._addSymbol:([CIIII)Ljava/lang/String;\n-   #46 = Methodref          #9.#261       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.copyArrays:()V\n-   #47 = Methodref          #9.#262       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.rehash:()V\n-   #48 = Methodref          #9.#263       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.calcHash:([CII)I\n-   #49 = Fieldref           #226.#264     // com/fasterxml/jackson/core/JsonFactory$Feature.INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #50 = Fieldref           #265.#266     // com/fasterxml/jackson/core/util/InternCache.instance:Lcom/fasterxml/jackson/core/util/InternCache;\n-   #51 = Methodref          #265.#267     // com/fasterxml/jackson/core/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;\n-   #52 = Class              #268          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket\n-   #53 = Methodref          #52.#269      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)V\n-   #54 = Methodref          #9.#270       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._handleSpillOverflow:(ILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;I)V\n-   #55 = Methodref          #271.#272     // java/lang/Math.max:(II)I\n-   #56 = Fieldref           #9.#273       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._overflows:Ljava/util/BitSet;\n-   #57 = Class              #274          // java/util/BitSet\n-   #58 = Methodref          #57.#214      // java/util/BitSet.\"<init>\":()V\n-   #59 = Methodref          #57.#275      // java/util/BitSet.set:(I)V\n-   #60 = Methodref          #57.#276      // java/util/BitSet.get:(I)Z\n-   #61 = Fieldref           #226.#277     // com/fasterxml/jackson/core/JsonFactory$Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-   #62 = Methodref          #9.#278       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._reportTooManyCollisions:(I)V\n-   #63 = Fieldref           #52.#279      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.symbol:Ljava/lang/String;\n-   #64 = Methodref          #280.#281     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n+    #1 = Methodref          #71.#210      // java/lang/Object.\"<init>\":()V\n+    #2 = Fieldref           #9.#211       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._parent:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n+    #3 = Fieldref           #9.#212       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._seed:I\n+    #4 = Fieldref           #9.#213       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._canonicalize:Z\n+    #5 = Fieldref           #9.#214       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._flags:I\n+    #6 = Fieldref           #9.#215       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._hashShared:Z\n+    #7 = Fieldref           #9.#216       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._longestCollisionList:I\n+    #8 = Class              #217          // java/util/concurrent/atomic/AtomicReference\n+    #9 = Class              #218          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n+   #10 = Methodref          #29.#219      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.createInitial:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;\n+   #11 = Methodref          #8.#220       // java/util/concurrent/atomic/AtomicReference.\"<init>\":(Ljava/lang/Object;)V\n+   #12 = Fieldref           #9.#221       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n+   #13 = Fieldref           #222.#223     // com/fasterxml/jackson/core/JsonFactory$Feature.CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #14 = Methodref          #222.#224     // com/fasterxml/jackson/core/JsonFactory$Feature.enabledIn:(I)Z\n+   #15 = Fieldref           #29.#225      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.symbols:[Ljava/lang/String;\n+   #16 = Fieldref           #9.#226       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._symbols:[Ljava/lang/String;\n+   #17 = Fieldref           #29.#227      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+   #18 = Fieldref           #9.#228       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+   #19 = Fieldref           #29.#229      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.size:I\n+   #20 = Fieldref           #9.#230       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._size:I\n+   #21 = Fieldref           #29.#231      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.longestCollisionList:I\n+   #22 = Methodref          #9.#232       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._thresholdSize:(I)I\n+   #23 = Fieldref           #9.#233       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._sizeThreshold:I\n+   #24 = Fieldref           #9.#234       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._indexMask:I\n+   #25 = Methodref          #235.#236     // java/lang/System.currentTimeMillis:()J\n+   #26 = Methodref          #9.#237       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.createRoot:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n+   #27 = Methodref          #9.#238       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.\"<init>\":(I)V\n+   #28 = Methodref          #8.#239       // java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;\n+   #29 = Class              #240          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo\n+   #30 = Methodref          #9.#241       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.\"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;IILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n+   #31 = Methodref          #9.#242       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.maybeDirty:()Z\n+   #32 = Methodref          #29.#243      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo.\"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;)V\n+   #33 = Methodref          #9.#244       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.mergeChild:(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n+   #34 = Methodref          #8.#245       // java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+   #35 = Fieldref           #52.#246      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.length:I\n+   #36 = String             #247          //\n+   #37 = Class              #248          // java/lang/String\n+   #38 = Methodref          #37.#249      // java/lang/String.\"<init>\":([CII)V\n+   #39 = Methodref          #9.#250       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._hashToIndex:(I)I\n+   #40 = Methodref          #37.#251      // java/lang/String.length:()I\n+   #41 = Methodref          #37.#252      // java/lang/String.charAt:(I)C\n+   #42 = Methodref          #52.#253      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.has:([CII)Ljava/lang/String;\n+   #43 = Fieldref           #52.#254      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.next:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+   #44 = Methodref          #9.#255       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._findSymbol2:([CIILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)Ljava/lang/String;\n+   #45 = Methodref          #9.#256       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._addSymbol:([CIIII)Ljava/lang/String;\n+   #46 = Methodref          #9.#257       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.copyArrays:()V\n+   #47 = Methodref          #9.#258       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.rehash:()V\n+   #48 = Methodref          #9.#259       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.calcHash:([CII)I\n+   #49 = Fieldref           #222.#260     // com/fasterxml/jackson/core/JsonFactory$Feature.INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #50 = Fieldref           #261.#262     // com/fasterxml/jackson/core/util/InternCache.instance:Lcom/fasterxml/jackson/core/util/InternCache;\n+   #51 = Methodref          #261.#263     // com/fasterxml/jackson/core/util/InternCache.intern:(Ljava/lang/String;)Ljava/lang/String;\n+   #52 = Class              #264          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket\n+   #53 = Methodref          #52.#265      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.\"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)V\n+   #54 = Methodref          #9.#266       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._handleSpillOverflow:(ILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;I)V\n+   #55 = Methodref          #267.#268     // java/lang/Math.max:(II)I\n+   #56 = Fieldref           #9.#269       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._overflows:Ljava/util/BitSet;\n+   #57 = Class              #270          // java/util/BitSet\n+   #58 = Methodref          #57.#210      // java/util/BitSet.\"<init>\":()V\n+   #59 = Methodref          #57.#271      // java/util/BitSet.set:(I)V\n+   #60 = Methodref          #57.#272      // java/util/BitSet.get:(I)Z\n+   #61 = Fieldref           #222.#273     // com/fasterxml/jackson/core/JsonFactory$Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+   #62 = Methodref          #9.#274       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer._reportTooManyCollisions:(I)V\n+   #63 = Fieldref           #52.#275      // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket.symbol:Ljava/lang/String;\n+   #64 = Methodref          #276.#277     // java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n    #65 = Class              #111          // \"[Ljava/lang/String;\"\n    #66 = Class              #113          // \"[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\"\n    #67 = Integer            65536\n-   #68 = Methodref          #9.#282       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.calcHash:(Ljava/lang/String;)I\n-   #69 = Class              #283          // java/lang/IllegalStateException\n-   #70 = String             #284          // Internal error on SymbolTable.rehash(): had %d entries; now have %d\n-   #71 = Class              #285          // java/lang/Object\n-   #72 = Methodref          #286.#287     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #73 = Methodref          #37.#288      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #74 = Methodref          #69.#289      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #75 = Class              #290          // com/fasterxml/jackson/core/exc/StreamConstraintsException\n-   #76 = Class              #291          // java/lang/StringBuilder\n-   #77 = Methodref          #76.#214      // java/lang/StringBuilder.\"<init>\":()V\n-   #78 = String             #292          // Longest collision chain in symbol table (of size\n-   #79 = Methodref          #76.#293      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #80 = Methodref          #76.#294      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #81 = String             #295          // ) now exceeds maximum,\n-   #82 = String             #296          //  -- suspect a DoS attack based on hash collisions\n-   #83 = Methodref          #76.#297      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #84 = Methodref          #75.#289      // com/fasterxml/jackson/core/exc/StreamConstraintsException.\"<init>\":(Ljava/lang/String;)V\n-   #85 = String             #298          // Internal error: expected internal size %d vs calculated count %d\n+   #68 = Methodref          #9.#278       // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer.calcHash:(Ljava/lang/String;)I\n+   #69 = Class              #279          // java/lang/IllegalStateException\n+   #70 = String             #280          // Internal error on SymbolTable.rehash(): had %d entries; now have %d\n+   #71 = Class              #281          // java/lang/Object\n+   #72 = Methodref          #282.#283     // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #73 = Methodref          #37.#284      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #74 = Methodref          #69.#285      // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #75 = Class              #286          // com/fasterxml/jackson/core/exc/StreamConstraintsException\n+   #76 = Class              #287          // java/lang/StringBuilder\n+   #77 = Methodref          #76.#210      // java/lang/StringBuilder.\"<init>\":()V\n+   #78 = String             #288          // Longest collision chain in symbol table (of size\n+   #79 = Methodref          #76.#289      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #80 = Methodref          #76.#290      // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #81 = String             #291          // ) now exceeds maximum,\n+   #82 = String             #292          //  -- suspect a DoS attack based on hash collisions\n+   #83 = Methodref          #76.#293      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #84 = Methodref          #75.#285      // com/fasterxml/jackson/core/exc/StreamConstraintsException.\"<init>\":(Ljava/lang/String;)V\n+   #85 = String             #294          // Internal error: expected internal size %d vs calculated count %d\n    #86 = Utf8               TableInfo\n    #87 = Utf8               InnerClasses\n    #88 = Utf8               Bucket\n    #89 = Utf8               HASH_MULT\n    #90 = Utf8               I\n    #91 = Utf8               ConstantValue\n    #92 = Integer            33\n@@ -154,218 +154,214 @@\n   #144 = Utf8               ()V\n   #145 = Utf8               StackMapTable\n   #146 = Utf8               mergeChild\n   #147 = Utf8               (Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n   #148 = Utf8               childState\n   #149 = Utf8               childCount\n   #150 = Utf8               currState\n-  #151 = Class              #244          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo\n-  #152 = Utf8               size\n-  #153 = Utf8               ()I\n-  #154 = Utf8               bucketCount\n-  #155 = Utf8               maybeDirty\n-  #156 = Utf8               ()Z\n-  #157 = Utf8               hashSeed\n-  #158 = Utf8               collisionCount\n-  #159 = Utf8               bucket\n-  #160 = Utf8               Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-  #161 = Utf8               count\n-  #162 = Class              #222          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n-  #163 = Utf8               maxCollisionLength\n-  #164 = Utf8               findSymbol\n-  #165 = Utf8               ([CIII)Ljava/lang/String;\n-  #166 = Utf8               i\n-  #167 = Utf8               b\n-  #168 = Utf8               buffer\n-  #169 = Utf8               [C\n-  #170 = Utf8               start\n-  #171 = Utf8               len\n-  #172 = Utf8               h\n-  #173 = Utf8               index\n-  #174 = Utf8               sym\n-  #175 = Utf8               Ljava/lang/String;\n-  #176 = Class              #252          // java/lang/String\n-  #177 = Class              #268          // com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket\n-  #178 = Utf8               Exceptions\n-  #179 = Class              #299          // java/io/IOException\n-  #180 = Utf8               _findSymbol2\n-  #181 = Utf8               ([CIILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)Ljava/lang/String;\n-  #182 = Utf8               _addSymbol\n-  #183 = Utf8               ([CIIII)Ljava/lang/String;\n-  #184 = Utf8               bix\n-  #185 = Utf8               newB\n-  #186 = Utf8               collLen\n-  #187 = Utf8               newSymbol\n-  #188 = Utf8               _handleSpillOverflow\n-  #189 = Utf8               (ILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;I)V\n-  #190 = Utf8               bucketIndex\n-  #191 = Utf8               newBucket\n-  #192 = Utf8               mainIndex\n-  #193 = Utf8               _hashToIndex\n-  #194 = Utf8               rawHash\n-  #195 = Utf8               calcHash\n-  #196 = Utf8               ([CII)I\n-  #197 = Utf8               end\n-  #198 = Utf8               hash\n-  #199 = Utf8               (Ljava/lang/String;)I\n-  #200 = Utf8               key\n-  #201 = Utf8               copyArrays\n-  #202 = Utf8               oldSyms\n-  #203 = Utf8               oldBuckets\n-  #204 = Utf8               rehash\n-  #205 = Utf8               symbol\n-  #206 = Utf8               newSize\n-  #207 = Utf8               maxColl\n-  #208 = Utf8               bucketSize\n-  #209 = Utf8               _reportTooManyCollisions\n-  #210 = Utf8               maxLen\n-  #211 = Utf8               verifyInternalConsistency\n-  #212 = Utf8               SourceFile\n-  #213 = Utf8               CharsToNameCanonicalizer.java\n-  #214 = NameAndType        #121:#144     // \"<init>\":()V\n-  #215 = NameAndType        #100:#101     // _parent:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n-  #216 = NameAndType        #106:#90      // _seed:I\n-  #217 = NameAndType        #108:#109     // _canonicalize:Z\n-  #218 = NameAndType        #107:#90      // _flags:I\n-  #219 = NameAndType        #118:#109     // _hashShared:Z\n-  #220 = NameAndType        #117:#90      // _longestCollisionList:I\n-  #221 = Utf8               java/util/concurrent/atomic/AtomicReference\n-  #222 = Utf8               com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n-  #223 = NameAndType        #300:#301     // createInitial:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;\n-  #224 = NameAndType        #121:#302     // \"<init>\":(Ljava/lang/Object;)V\n-  #225 = NameAndType        #102:#103     // _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n-  #226 = Class              #304          // com/fasterxml/jackson/core/JsonFactory$Feature\n-  #227 = NameAndType        #306:#307     // CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #228 = NameAndType        #308:#309     // enabledIn:(I)Z\n-  #229 = NameAndType        #310:#111     // symbols:[Ljava/lang/String;\n-  #230 = NameAndType        #110:#111     // _symbols:[Ljava/lang/String;\n-  #231 = NameAndType        #311:#113     // buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-  #232 = NameAndType        #112:#113     // _buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-  #233 = NameAndType        #152:#90      // size:I\n-  #234 = NameAndType        #114:#90      // _size:I\n-  #235 = NameAndType        #312:#90      // longestCollisionList:I\n-  #236 = NameAndType        #134:#135     // _thresholdSize:(I)I\n-  #237 = NameAndType        #115:#90      // _sizeThreshold:I\n-  #238 = NameAndType        #116:#90      // _indexMask:I\n-  #239 = Class              #313          // java/lang/System\n-  #240 = NameAndType        #314:#315     // currentTimeMillis:()J\n-  #241 = NameAndType        #137:#141     // createRoot:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n-  #242 = NameAndType        #121:#122     // \"<init>\":(I)V\n-  #243 = NameAndType        #316:#317     // get:()Ljava/lang/Object;\n-  #244 = Utf8               com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo\n-  #245 = NameAndType        #121:#128     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;IILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n-  #246 = NameAndType        #155:#156     // maybeDirty:()Z\n-  #247 = NameAndType        #121:#318     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;)V\n-  #248 = NameAndType        #146:#147     // mergeChild:(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n-  #249 = NameAndType        #319:#320     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #250 = NameAndType        #321:#90      // length:I\n-  #251 = Utf8\n-  #252 = Utf8               java/lang/String\n-  #253 = NameAndType        #121:#322     // \"<init>\":([CII)V\n-  #254 = NameAndType        #193:#135     // _hashToIndex:(I)I\n-  #255 = NameAndType        #321:#153     // length:()I\n-  #256 = NameAndType        #323:#324     // charAt:(I)C\n-  #257 = NameAndType        #325:#326     // has:([CII)Ljava/lang/String;\n-  #258 = NameAndType        #327:#160     // next:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n-  #259 = NameAndType        #180:#181     // _findSymbol2:([CIILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)Ljava/lang/String;\n-  #260 = NameAndType        #182:#183     // _addSymbol:([CIIII)Ljava/lang/String;\n-  #261 = NameAndType        #201:#144     // copyArrays:()V\n-  #262 = NameAndType        #204:#144     // rehash:()V\n-  #263 = NameAndType        #195:#196     // calcHash:([CII)I\n-  #264 = NameAndType        #328:#307     // INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #265 = Class              #329          // com/fasterxml/jackson/core/util/InternCache\n-  #266 = NameAndType        #330:#331     // instance:Lcom/fasterxml/jackson/core/util/InternCache;\n-  #267 = NameAndType        #332:#333     // intern:(Ljava/lang/String;)Ljava/lang/String;\n-  #268 = Utf8               com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket\n-  #269 = NameAndType        #121:#334     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)V\n-  #270 = NameAndType        #188:#189     // _handleSpillOverflow:(ILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;I)V\n-  #271 = Class              #335          // java/lang/Math\n-  #272 = NameAndType        #336:#337     // max:(II)I\n-  #273 = NameAndType        #119:#120     // _overflows:Ljava/util/BitSet;\n-  #274 = Utf8               java/util/BitSet\n-  #275 = NameAndType        #338:#122     // set:(I)V\n-  #276 = NameAndType        #316:#309     // get:(I)Z\n-  #277 = NameAndType        #339:#307     // FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #278 = NameAndType        #209:#122     // _reportTooManyCollisions:(I)V\n-  #279 = NameAndType        #205:#175     // symbol:Ljava/lang/String;\n-  #280 = Class              #340          // java/util/Arrays\n-  #281 = NameAndType        #341:#342     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #282 = NameAndType        #195:#199     // calcHash:(Ljava/lang/String;)I\n-  #283 = Utf8               java/lang/IllegalStateException\n-  #284 = Utf8               Internal error on SymbolTable.rehash(): had %d entries; now have %d\n-  #285 = Utf8               java/lang/Object\n-  #286 = Class              #343          // java/lang/Integer\n-  #287 = NameAndType        #344:#345     // valueOf:(I)Ljava/lang/Integer;\n-  #288 = NameAndType        #346:#347     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #289 = NameAndType        #121:#348     // \"<init>\":(Ljava/lang/String;)V\n-  #290 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n-  #291 = Utf8               java/lang/StringBuilder\n-  #292 = Utf8               Longest collision chain in symbol table (of size\n-  #293 = NameAndType        #349:#350     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #294 = NameAndType        #349:#351     // append:(I)Ljava/lang/StringBuilder;\n-  #295 = Utf8               ) now exceeds maximum,\n-  #296 = Utf8                -- suspect a DoS attack based on hash collisions\n-  #297 = NameAndType        #352:#353     // toString:()Ljava/lang/String;\n-  #298 = Utf8               Internal error: expected internal size %d vs calculated count %d\n-  #299 = Utf8               java/io/IOException\n-  #300 = Utf8               createInitial\n-  #301 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;\n-  #302 = Utf8               (Ljava/lang/Object;)V\n-  #303 = Class              #354          // com/fasterxml/jackson/core/JsonFactory\n-  #304 = Utf8               com/fasterxml/jackson/core/JsonFactory$Feature\n-  #305 = Utf8               Feature\n-  #306 = Utf8               CANONICALIZE_FIELD_NAMES\n-  #307 = Utf8               Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n-  #308 = Utf8               enabledIn\n-  #309 = Utf8               (I)Z\n-  #310 = Utf8               symbols\n-  #311 = Utf8               buckets\n-  #312 = Utf8               longestCollisionList\n-  #313 = Utf8               java/lang/System\n-  #314 = Utf8               currentTimeMillis\n-  #315 = Utf8               ()J\n-  #316 = Utf8               get\n-  #317 = Utf8               ()Ljava/lang/Object;\n-  #318 = Utf8               (Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;)V\n-  #319 = Utf8               compareAndSet\n-  #320 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #321 = Utf8               length\n-  #322 = Utf8               ([CII)V\n-  #323 = Utf8               charAt\n-  #324 = Utf8               (I)C\n-  #325 = Utf8               has\n-  #326 = Utf8               ([CII)Ljava/lang/String;\n-  #327 = Utf8               next\n-  #328 = Utf8               INTERN_FIELD_NAMES\n-  #329 = Utf8               com/fasterxml/jackson/core/util/InternCache\n-  #330 = Utf8               instance\n-  #331 = Utf8               Lcom/fasterxml/jackson/core/util/InternCache;\n-  #332 = Utf8               intern\n-  #333 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #334 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)V\n-  #335 = Utf8               java/lang/Math\n-  #336 = Utf8               max\n-  #337 = Utf8               (II)I\n-  #338 = Utf8               set\n-  #339 = Utf8               FAIL_ON_SYMBOL_HASH_OVERFLOW\n-  #340 = Utf8               java/util/Arrays\n-  #341 = Utf8               copyOf\n-  #342 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n-  #343 = Utf8               java/lang/Integer\n-  #344 = Utf8               valueOf\n-  #345 = Utf8               (I)Ljava/lang/Integer;\n-  #346 = Utf8               format\n-  #347 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #348 = Utf8               (Ljava/lang/String;)V\n-  #349 = Utf8               append\n-  #350 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #351 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #352 = Utf8               toString\n-  #353 = Utf8               ()Ljava/lang/String;\n-  #354 = Utf8               com/fasterxml/jackson/core/JsonFactory\n+  #151 = Utf8               size\n+  #152 = Utf8               ()I\n+  #153 = Utf8               bucketCount\n+  #154 = Utf8               maybeDirty\n+  #155 = Utf8               ()Z\n+  #156 = Utf8               hashSeed\n+  #157 = Utf8               collisionCount\n+  #158 = Utf8               bucket\n+  #159 = Utf8               Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+  #160 = Utf8               count\n+  #161 = Utf8               maxCollisionLength\n+  #162 = Utf8               findSymbol\n+  #163 = Utf8               ([CIII)Ljava/lang/String;\n+  #164 = Utf8               i\n+  #165 = Utf8               b\n+  #166 = Utf8               buffer\n+  #167 = Utf8               [C\n+  #168 = Utf8               start\n+  #169 = Utf8               len\n+  #170 = Utf8               h\n+  #171 = Utf8               index\n+  #172 = Utf8               sym\n+  #173 = Utf8               Ljava/lang/String;\n+  #174 = Utf8               Exceptions\n+  #175 = Class              #295          // java/io/IOException\n+  #176 = Utf8               _findSymbol2\n+  #177 = Utf8               ([CIILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)Ljava/lang/String;\n+  #178 = Utf8               _addSymbol\n+  #179 = Utf8               ([CIIII)Ljava/lang/String;\n+  #180 = Utf8               bix\n+  #181 = Utf8               newB\n+  #182 = Utf8               collLen\n+  #183 = Utf8               newSymbol\n+  #184 = Utf8               _handleSpillOverflow\n+  #185 = Utf8               (ILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;I)V\n+  #186 = Utf8               bucketIndex\n+  #187 = Utf8               newBucket\n+  #188 = Utf8               mainIndex\n+  #189 = Utf8               _hashToIndex\n+  #190 = Utf8               rawHash\n+  #191 = Utf8               calcHash\n+  #192 = Utf8               ([CII)I\n+  #193 = Utf8               end\n+  #194 = Utf8               hash\n+  #195 = Utf8               (Ljava/lang/String;)I\n+  #196 = Utf8               key\n+  #197 = Utf8               copyArrays\n+  #198 = Utf8               oldSyms\n+  #199 = Utf8               oldBuckets\n+  #200 = Utf8               rehash\n+  #201 = Utf8               symbol\n+  #202 = Utf8               newSize\n+  #203 = Utf8               maxColl\n+  #204 = Utf8               bucketSize\n+  #205 = Utf8               _reportTooManyCollisions\n+  #206 = Utf8               maxLen\n+  #207 = Utf8               verifyInternalConsistency\n+  #208 = Utf8               SourceFile\n+  #209 = Utf8               CharsToNameCanonicalizer.java\n+  #210 = NameAndType        #121:#144     // \"<init>\":()V\n+  #211 = NameAndType        #100:#101     // _parent:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n+  #212 = NameAndType        #106:#90      // _seed:I\n+  #213 = NameAndType        #108:#109     // _canonicalize:Z\n+  #214 = NameAndType        #107:#90      // _flags:I\n+  #215 = NameAndType        #118:#109     // _hashShared:Z\n+  #216 = NameAndType        #117:#90      // _longestCollisionList:I\n+  #217 = Utf8               java/util/concurrent/atomic/AtomicReference\n+  #218 = Utf8               com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n+  #219 = NameAndType        #296:#297     // createInitial:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;\n+  #220 = NameAndType        #121:#298     // \"<init>\":(Ljava/lang/Object;)V\n+  #221 = NameAndType        #102:#103     // _tableInfo:Ljava/util/concurrent/atomic/AtomicReference;\n+  #222 = Class              #300          // com/fasterxml/jackson/core/JsonFactory$Feature\n+  #223 = NameAndType        #302:#303     // CANONICALIZE_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #224 = NameAndType        #304:#305     // enabledIn:(I)Z\n+  #225 = NameAndType        #306:#111     // symbols:[Ljava/lang/String;\n+  #226 = NameAndType        #110:#111     // _symbols:[Ljava/lang/String;\n+  #227 = NameAndType        #307:#113     // buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+  #228 = NameAndType        #112:#113     // _buckets:[Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+  #229 = NameAndType        #151:#90      // size:I\n+  #230 = NameAndType        #114:#90      // _size:I\n+  #231 = NameAndType        #308:#90      // longestCollisionList:I\n+  #232 = NameAndType        #134:#135     // _thresholdSize:(I)I\n+  #233 = NameAndType        #115:#90      // _sizeThreshold:I\n+  #234 = NameAndType        #116:#90      // _indexMask:I\n+  #235 = Class              #309          // java/lang/System\n+  #236 = NameAndType        #310:#311     // currentTimeMillis:()J\n+  #237 = NameAndType        #137:#141     // createRoot:(I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;\n+  #238 = NameAndType        #121:#122     // \"<init>\":(I)V\n+  #239 = NameAndType        #312:#313     // get:()Ljava/lang/Object;\n+  #240 = Utf8               com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo\n+  #241 = NameAndType        #121:#128     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;IILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n+  #242 = NameAndType        #154:#155     // maybeDirty:()Z\n+  #243 = NameAndType        #121:#314     // \"<init>\":(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;)V\n+  #244 = NameAndType        #146:#147     // mergeChild:(Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;)V\n+  #245 = NameAndType        #315:#316     // compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #246 = NameAndType        #317:#90      // length:I\n+  #247 = Utf8\n+  #248 = Utf8               java/lang/String\n+  #249 = NameAndType        #121:#318     // \"<init>\":([CII)V\n+  #250 = NameAndType        #189:#135     // _hashToIndex:(I)I\n+  #251 = NameAndType        #317:#152     // length:()I\n+  #252 = NameAndType        #319:#320     // charAt:(I)C\n+  #253 = NameAndType        #321:#322     // has:([CII)Ljava/lang/String;\n+  #254 = NameAndType        #323:#159     // next:Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;\n+  #255 = NameAndType        #176:#177     // _findSymbol2:([CIILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)Ljava/lang/String;\n+  #256 = NameAndType        #178:#179     // _addSymbol:([CIIII)Ljava/lang/String;\n+  #257 = NameAndType        #197:#144     // copyArrays:()V\n+  #258 = NameAndType        #200:#144     // rehash:()V\n+  #259 = NameAndType        #191:#192     // calcHash:([CII)I\n+  #260 = NameAndType        #324:#303     // INTERN_FIELD_NAMES:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #261 = Class              #325          // com/fasterxml/jackson/core/util/InternCache\n+  #262 = NameAndType        #326:#327     // instance:Lcom/fasterxml/jackson/core/util/InternCache;\n+  #263 = NameAndType        #328:#329     // intern:(Ljava/lang/String;)Ljava/lang/String;\n+  #264 = Utf8               com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket\n+  #265 = NameAndType        #121:#330     // \"<init>\":(Ljava/lang/String;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)V\n+  #266 = NameAndType        #184:#185     // _handleSpillOverflow:(ILcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;I)V\n+  #267 = Class              #331          // java/lang/Math\n+  #268 = NameAndType        #332:#333     // max:(II)I\n+  #269 = NameAndType        #119:#120     // _overflows:Ljava/util/BitSet;\n+  #270 = Utf8               java/util/BitSet\n+  #271 = NameAndType        #334:#122     // set:(I)V\n+  #272 = NameAndType        #312:#305     // get:(I)Z\n+  #273 = NameAndType        #335:#303     // FAIL_ON_SYMBOL_HASH_OVERFLOW:Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #274 = NameAndType        #205:#122     // _reportTooManyCollisions:(I)V\n+  #275 = NameAndType        #201:#173     // symbol:Ljava/lang/String;\n+  #276 = Class              #336          // java/util/Arrays\n+  #277 = NameAndType        #337:#338     // copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #278 = NameAndType        #191:#195     // calcHash:(Ljava/lang/String;)I\n+  #279 = Utf8               java/lang/IllegalStateException\n+  #280 = Utf8               Internal error on SymbolTable.rehash(): had %d entries; now have %d\n+  #281 = Utf8               java/lang/Object\n+  #282 = Class              #339          // java/lang/Integer\n+  #283 = NameAndType        #340:#341     // valueOf:(I)Ljava/lang/Integer;\n+  #284 = NameAndType        #342:#343     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #285 = NameAndType        #121:#344     // \"<init>\":(Ljava/lang/String;)V\n+  #286 = Utf8               com/fasterxml/jackson/core/exc/StreamConstraintsException\n+  #287 = Utf8               java/lang/StringBuilder\n+  #288 = Utf8               Longest collision chain in symbol table (of size\n+  #289 = NameAndType        #345:#346     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #290 = NameAndType        #345:#347     // append:(I)Ljava/lang/StringBuilder;\n+  #291 = Utf8               ) now exceeds maximum,\n+  #292 = Utf8                -- suspect a DoS attack based on hash collisions\n+  #293 = NameAndType        #348:#349     // toString:()Ljava/lang/String;\n+  #294 = Utf8               Internal error: expected internal size %d vs calculated count %d\n+  #295 = Utf8               java/io/IOException\n+  #296 = Utf8               createInitial\n+  #297 = Utf8               (I)Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo;\n+  #298 = Utf8               (Ljava/lang/Object;)V\n+  #299 = Class              #350          // com/fasterxml/jackson/core/JsonFactory\n+  #300 = Utf8               com/fasterxml/jackson/core/JsonFactory$Feature\n+  #301 = Utf8               Feature\n+  #302 = Utf8               CANONICALIZE_FIELD_NAMES\n+  #303 = Utf8               Lcom/fasterxml/jackson/core/JsonFactory$Feature;\n+  #304 = Utf8               enabledIn\n+  #305 = Utf8               (I)Z\n+  #306 = Utf8               symbols\n+  #307 = Utf8               buckets\n+  #308 = Utf8               longestCollisionList\n+  #309 = Utf8               java/lang/System\n+  #310 = Utf8               currentTimeMillis\n+  #311 = Utf8               ()J\n+  #312 = Utf8               get\n+  #313 = Utf8               ()Ljava/lang/Object;\n+  #314 = Utf8               (Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer;)V\n+  #315 = Utf8               compareAndSet\n+  #316 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #317 = Utf8               length\n+  #318 = Utf8               ([CII)V\n+  #319 = Utf8               charAt\n+  #320 = Utf8               (I)C\n+  #321 = Utf8               has\n+  #322 = Utf8               ([CII)Ljava/lang/String;\n+  #323 = Utf8               next\n+  #324 = Utf8               INTERN_FIELD_NAMES\n+  #325 = Utf8               com/fasterxml/jackson/core/util/InternCache\n+  #326 = Utf8               instance\n+  #327 = Utf8               Lcom/fasterxml/jackson/core/util/InternCache;\n+  #328 = Utf8               intern\n+  #329 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+  #330 = Utf8               (Ljava/lang/String;Lcom/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket;)V\n+  #331 = Utf8               java/lang/Math\n+  #332 = Utf8               max\n+  #333 = Utf8               (II)I\n+  #334 = Utf8               set\n+  #335 = Utf8               FAIL_ON_SYMBOL_HASH_OVERFLOW\n+  #336 = Utf8               java/util/Arrays\n+  #337 = Utf8               copyOf\n+  #338 = Utf8               ([Ljava/lang/Object;I)[Ljava/lang/Object;\n+  #339 = Utf8               java/lang/Integer\n+  #340 = Utf8               valueOf\n+  #341 = Utf8               (I)Ljava/lang/Integer;\n+  #342 = Utf8               format\n+  #343 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #344 = Utf8               (Ljava/lang/String;)V\n+  #345 = Utf8               append\n+  #346 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #347 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #348 = Utf8               toString\n+  #349 = Utf8               ()Ljava/lang/String;\n+  #350 = Utf8               com/fasterxml/jackson/core/JsonFactory\n {\n   public static final int HASH_MULT = 33;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 33\n \n   private static final int DEFAULT_T_SIZE = 64;\n@@ -1985,8 +1981,8 @@\n           offset_delta = 5\n         frame_type = 41 /* same */\n }\n SourceFile: \"CharsToNameCanonicalizer.java\"\n InnerClasses:\n   private static final #86= #29 of #9;    // TableInfo=class com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$TableInfo of class com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n   static final #88= #52 of #9;            // Bucket=class com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer$Bucket of class com/fasterxml/jackson/core/sym/CharsToNameCanonicalizer\n-  public static final #305= #226 of #303; // Feature=class com/fasterxml/jackson/core/JsonFactory$Feature of class com/fasterxml/jackson/core/JsonFactory\n+  public static final #301= #222 of #299; // Feature=class com/fasterxml/jackson/core/JsonFactory$Feature of class com/fasterxml/jackson/core/JsonFactory\n"}]}
