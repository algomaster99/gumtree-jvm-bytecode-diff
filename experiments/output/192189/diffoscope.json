{"diffoscope-json-version": 1, "source1": "first/RegexFileFilter.class", "source2": "second/RegexFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,254 +1,254 @@\n-  SHA-256 checksum d62abd01e2f671e7acc3ca73493c2a585eb77336f999074b0a7e5724f8f70763\n+  SHA-256 checksum 1ef2ffefe580b467fcc15236bf97793ee57e0285ca61554e2b519ac6cf3271cd\n   Compiled from \"RegexFileFilter.java\"\n public class org.apache.commons.io.filefilter.RegexFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #50                         // org/apache/commons/io/filefilter/RegexFileFilter\n-  super_class: #51                        // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #30                         // org/apache/commons/io/filefilter/RegexFileFilter\n+  super_class: #36                        // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 1, fields: 3, methods: 12, attributes: 3\n Constant pool:\n-    #1 = String             #57           // pattern\n-    #2 = Methodref          #108.#109     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-    #3 = Methodref          #5.#110       // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-    #4 = Methodref          #111.#112     // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-    #5 = Class              #113          // java/util/regex/Pattern\n-    #6 = InvokeDynamic      #0:#121       // #0:apply:()Ljava/util/function/Function;\n-    #7 = Class              #122          // java/io/Serializable\n-    #8 = Class              #123          // java/util/function/Function\n-    #9 = Methodref          #50.#124      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #10 = Methodref          #51.#125      // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #11 = Fieldref           #50.#126      // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n-   #12 = Fieldref           #50.#127      // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n-   #13 = Methodref          #50.#128      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n-   #14 = Methodref          #50.#110      // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #15 = Methodref          #50.#129      // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n-   #16 = Methodref          #50.#130      // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n-   #17 = Methodref          #5.#131       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #18 = Methodref          #132.#133     // java/util/regex/Matcher.matches:()Z\n-   #19 = InterfaceMethodref #8.#134       // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #20 = Class              #135          // java/lang/CharSequence\n-   #21 = Methodref          #50.#136      // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-   #22 = Class              #137          // java/lang/StringBuilder\n-   #23 = Methodref          #22.#125      // java/lang/StringBuilder.\"<init>\":()V\n-   #24 = String             #138          // RegexFileFilter [pattern=\n-   #25 = Methodref          #22.#139      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #26 = Methodref          #22.#140      // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #27 = String             #141          // ]\n-   #28 = Methodref          #22.#142      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #29 = Methodref          #143.#144     // java/lang/invoke/SerializedLambda.getImplMethodName:()Ljava/lang/String;\n-   #30 = Methodref          #102.#145     // java/lang/String.hashCode:()I\n-   #31 = String             #103          // lambda$new$fc983b68$1\n-   #32 = Methodref          #102.#146     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #33 = Methodref          #143.#147     // java/lang/invoke/SerializedLambda.getImplMethodKind:()I\n-   #34 = Methodref          #143.#148     // java/lang/invoke/SerializedLambda.getFunctionalInterfaceClass:()Ljava/lang/String;\n-   #35 = String             #123          // java/util/function/Function\n-   #36 = Methodref          #149.#146     // java/lang/Object.equals:(Ljava/lang/Object;)Z\n-   #37 = Methodref          #143.#150     // java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodName:()Ljava/lang/String;\n-   #38 = String             #151          // apply\n-   #39 = Methodref          #143.#152     // java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodSignature:()Ljava/lang/String;\n-   #40 = String             #153          // (Ljava/lang/Object;)Ljava/lang/Object;\n-   #41 = Methodref          #143.#154     // java/lang/invoke/SerializedLambda.getImplClass:()Ljava/lang/String;\n-   #42 = String             #155          // org/apache/commons/io/filefilter/RegexFileFilter\n-   #43 = Methodref          #143.#156     // java/lang/invoke/SerializedLambda.getImplMethodSignature:()Ljava/lang/String;\n-   #44 = String             #104          // (Ljava/nio/file/Path;)Ljava/lang/String;\n-   #45 = Class              #157          // java/lang/IllegalArgumentException\n-   #46 = String             #158          // Invalid lambda deserialization\n-   #47 = Methodref          #45.#159      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #48 = InterfaceMethodref #160.#161     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #49 = InterfaceMethodref #160.#142     // java/nio/file/Path.toString:()Ljava/lang/String;\n-   #50 = Class              #155          // org/apache/commons/io/filefilter/RegexFileFilter\n-   #51 = Class              #162          // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #52 = Utf8               serialVersionUID\n-   #53 = Utf8               J\n-   #54 = Utf8               ConstantValue\n-   #55 = Long               4269646126155225062l\n-   #57 = Utf8               pattern\n-   #58 = Utf8               Ljava/util/regex/Pattern;\n-   #59 = Utf8               pathToString\n-   #60 = Utf8               Ljava/util/function/Function;\n-   #61 = Utf8               Signature\n-   #62 = Utf8               Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n-   #63 = Utf8               compile\n-   #64 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-   #65 = Utf8               Code\n-   #66 = Utf8               LineNumberTable\n-   #67 = Utf8               LocalVariableTable\n-   #68 = Utf8               Ljava/lang/String;\n-   #69 = Utf8               flags\n-   #70 = Utf8               I\n-   #71 = Utf8               toFlags\n-   #72 = Utf8               (Lorg/apache/commons/io/IOCase;)I\n-   #73 = Utf8               ioCase\n-   #74 = Utf8               Lorg/apache/commons/io/IOCase;\n-   #75 = Utf8               StackMapTable\n-   #76 = Utf8               <init>\n-   #77 = Utf8               (Ljava/util/regex/Pattern;)V\n-   #78 = Utf8               this\n-   #79 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n-   #80 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-   #81 = Utf8               LocalVariableTypeTable\n-   #82 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n-   #83 = Utf8               (Ljava/lang/String;)V\n-   #84 = Utf8               (Ljava/lang/String;I)V\n-   #85 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n-   #86 = Utf8               accept\n-   #87 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n-   #88 = Utf8               dir\n-   #89 = Utf8               Ljava/io/File;\n-   #90 = Utf8               name\n-   #91 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #92 = Utf8               path\n-   #93 = Utf8               Ljava/nio/file/Path;\n-   #94 = Utf8               attributes\n-   #95 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n-   #96 = Utf8               toString\n-   #97 = Utf8               ()Ljava/lang/String;\n-   #98 = Utf8               $deserializeLambda$\n-   #99 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\n-  #100 = Utf8               lambda\n-  #101 = Utf8               Ljava/lang/invoke/SerializedLambda;\n-  #102 = Class              #163          // java/lang/String\n-  #103 = Utf8               lambda$new$fc983b68$1\n-  #104 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n-  #105 = Utf8               p\n-  #106 = Utf8               SourceFile\n-  #107 = Utf8               RegexFileFilter.java\n-  #108 = Class              #164          // java/util/Objects\n-  #109 = NameAndType        #165:#166     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #110 = NameAndType        #63:#64       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-  #111 = Class              #167          // org/apache/commons/io/IOCase\n-  #112 = NameAndType        #168:#169     // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n-  #113 = Utf8               java/util/regex/Pattern\n-  #114 = Utf8               BootstrapMethods\n-  #115 = MethodHandle       6:#170        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #116 = MethodType         #153          //  (Ljava/lang/Object;)Ljava/lang/Object;\n-  #117 = MethodHandle       6:#171        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #118 = MethodType         #104          //  (Ljava/nio/file/Path;)Ljava/lang/String;\n-  #119 = Integer            5\n-  #120 = Integer            0\n-  #121 = NameAndType        #151:#172     // apply:()Ljava/util/function/Function;\n-  #122 = Utf8               java/io/Serializable\n-  #123 = Utf8               java/util/function/Function\n-  #124 = NameAndType        #76:#80       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n-  #125 = NameAndType        #76:#173      // \"<init>\":()V\n-  #126 = NameAndType        #57:#58       // pattern:Ljava/util/regex/Pattern;\n-  #127 = NameAndType        #59:#60       // pathToString:Ljava/util/function/Function;\n-  #128 = NameAndType        #76:#84       // \"<init>\":(Ljava/lang/String;I)V\n-  #129 = NameAndType        #76:#77       // \"<init>\":(Ljava/util/regex/Pattern;)V\n-  #130 = NameAndType        #71:#72       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n-  #131 = NameAndType        #174:#175     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #132 = Class              #176          // java/util/regex/Matcher\n-  #133 = NameAndType        #177:#178     // matches:()Z\n-  #134 = NameAndType        #151:#153     // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #135 = Utf8               java/lang/CharSequence\n-  #136 = NameAndType        #179:#180     // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n-  #137 = Utf8               java/lang/StringBuilder\n-  #138 = Utf8               RegexFileFilter [pattern=\n-  #139 = NameAndType        #181:#182     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #140 = NameAndType        #181:#183     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #141 = Utf8               ]\n-  #142 = NameAndType        #96:#97       // toString:()Ljava/lang/String;\n-  #143 = Class              #184          // java/lang/invoke/SerializedLambda\n-  #144 = NameAndType        #185:#97      // getImplMethodName:()Ljava/lang/String;\n-  #145 = NameAndType        #186:#187     // hashCode:()I\n-  #146 = NameAndType        #188:#189     // equals:(Ljava/lang/Object;)Z\n-  #147 = NameAndType        #190:#187     // getImplMethodKind:()I\n-  #148 = NameAndType        #191:#97      // getFunctionalInterfaceClass:()Ljava/lang/String;\n-  #149 = Class              #192          // java/lang/Object\n-  #150 = NameAndType        #193:#97      // getFunctionalInterfaceMethodName:()Ljava/lang/String;\n-  #151 = Utf8               apply\n-  #152 = NameAndType        #194:#97      // getFunctionalInterfaceMethodSignature:()Ljava/lang/String;\n-  #153 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #154 = NameAndType        #195:#97      // getImplClass:()Ljava/lang/String;\n-  #155 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n-  #156 = NameAndType        #196:#97      // getImplMethodSignature:()Ljava/lang/String;\n-  #157 = Utf8               java/lang/IllegalArgumentException\n-  #158 = Utf8               Invalid lambda deserialization\n-  #159 = NameAndType        #76:#83       // \"<init>\":(Ljava/lang/String;)V\n-  #160 = Class              #197          // java/nio/file/Path\n-  #161 = NameAndType        #198:#199     // getFileName:()Ljava/nio/file/Path;\n-  #162 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-  #163 = Utf8               java/lang/String\n-  #164 = Utf8               java/util/Objects\n-  #165 = Utf8               requireNonNull\n-  #166 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #167 = Utf8               org/apache/commons/io/IOCase\n-  #168 = Utf8               isCaseSensitive\n-  #169 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n-  #170 = Methodref          #200.#201     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #171 = Methodref          #50.#202      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #172 = Utf8               ()Ljava/util/function/Function;\n-  #173 = Utf8               ()V\n-  #174 = Utf8               matcher\n-  #175 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #176 = Utf8               java/util/regex/Matcher\n-  #177 = Utf8               matches\n-  #178 = Utf8               ()Z\n-  #179 = Utf8               toFileVisitResult\n-  #180 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n-  #181 = Utf8               append\n-  #182 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #183 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #184 = Utf8               java/lang/invoke/SerializedLambda\n-  #185 = Utf8               getImplMethodName\n-  #186 = Utf8               hashCode\n-  #187 = Utf8               ()I\n-  #188 = Utf8               equals\n-  #189 = Utf8               (Ljava/lang/Object;)Z\n-  #190 = Utf8               getImplMethodKind\n-  #191 = Utf8               getFunctionalInterfaceClass\n-  #192 = Utf8               java/lang/Object\n-  #193 = Utf8               getFunctionalInterfaceMethodName\n-  #194 = Utf8               getFunctionalInterfaceMethodSignature\n-  #195 = Utf8               getImplClass\n-  #196 = Utf8               getImplMethodSignature\n-  #197 = Utf8               java/nio/file/Path\n-  #198 = Utf8               getFileName\n-  #199 = Utf8               ()Ljava/nio/file/Path;\n-  #200 = Class              #203          // java/lang/invoke/LambdaMetafactory\n-  #201 = NameAndType        #204:#208     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #202 = NameAndType        #103:#104     // lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n-  #203 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #204 = Utf8               altMetafactory\n-  #205 = Class              #210          // java/lang/invoke/MethodHandles$Lookup\n-  #206 = Utf8               Lookup\n-  #207 = Utf8               InnerClasses\n-  #208 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #209 = Class              #211          // java/lang/invoke/MethodHandles\n-  #210 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #211 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = String             #2            // pattern\n+    #2 = Utf8               pattern\n+    #3 = Methodref          #4.#5         // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #4 = Class              #6            // java/util/Objects\n+    #5 = NameAndType        #7:#8         // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #6 = Utf8               java/util/Objects\n+    #7 = Utf8               requireNonNull\n+    #8 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+    #9 = Methodref          #10.#11       // java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #10 = Class              #12           // java/util/regex/Pattern\n+   #11 = NameAndType        #13:#14       // compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #12 = Utf8               java/util/regex/Pattern\n+   #13 = Utf8               compile\n+   #14 = Utf8               (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #15 = Methodref          #16.#17       // org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+   #16 = Class              #18           // org/apache/commons/io/IOCase\n+   #17 = NameAndType        #19:#20       // isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+   #18 = Utf8               org/apache/commons/io/IOCase\n+   #19 = Utf8               isCaseSensitive\n+   #20 = Utf8               (Lorg/apache/commons/io/IOCase;)Z\n+   #21 = InvokeDynamic      #0:#22        // #0:apply:()Ljava/util/function/Function;\n+   #22 = NameAndType        #23:#24       // apply:()Ljava/util/function/Function;\n+   #23 = Utf8               apply\n+   #24 = Utf8               ()Ljava/util/function/Function;\n+   #25 = Class              #26           // java/io/Serializable\n+   #26 = Utf8               java/io/Serializable\n+   #27 = Class              #28           // java/util/function/Function\n+   #28 = Utf8               java/util/function/Function\n+   #29 = Methodref          #30.#31       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #30 = Class              #32           // org/apache/commons/io/filefilter/RegexFileFilter\n+   #31 = NameAndType        #33:#34       // \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #32 = Utf8               org/apache/commons/io/filefilter/RegexFileFilter\n+   #33 = Utf8               <init>\n+   #34 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+   #35 = Methodref          #36.#37       // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+   #36 = Class              #38           // org/apache/commons/io/filefilter/AbstractFileFilter\n+   #37 = NameAndType        #33:#39       // \"<init>\":()V\n+   #38 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n+   #39 = Utf8               ()V\n+   #40 = Fieldref           #30.#41       // org/apache/commons/io/filefilter/RegexFileFilter.pattern:Ljava/util/regex/Pattern;\n+   #41 = NameAndType        #2:#42        // pattern:Ljava/util/regex/Pattern;\n+   #42 = Utf8               Ljava/util/regex/Pattern;\n+   #43 = Fieldref           #30.#44       // org/apache/commons/io/filefilter/RegexFileFilter.pathToString:Ljava/util/function/Function;\n+   #44 = NameAndType        #45:#46       // pathToString:Ljava/util/function/Function;\n+   #45 = Utf8               pathToString\n+   #46 = Utf8               Ljava/util/function/Function;\n+   #47 = Methodref          #30.#48       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/lang/String;I)V\n+   #48 = NameAndType        #33:#49       // \"<init>\":(Ljava/lang/String;I)V\n+   #49 = Utf8               (Ljava/lang/String;I)V\n+   #50 = Methodref          #30.#11       // org/apache/commons/io/filefilter/RegexFileFilter.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+   #51 = Methodref          #30.#52       // org/apache/commons/io/filefilter/RegexFileFilter.\"<init>\":(Ljava/util/regex/Pattern;)V\n+   #52 = NameAndType        #33:#53       // \"<init>\":(Ljava/util/regex/Pattern;)V\n+   #53 = Utf8               (Ljava/util/regex/Pattern;)V\n+   #54 = Methodref          #30.#55       // org/apache/commons/io/filefilter/RegexFileFilter.toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #55 = NameAndType        #56:#57       // toFlags:(Lorg/apache/commons/io/IOCase;)I\n+   #56 = Utf8               toFlags\n+   #57 = Utf8               (Lorg/apache/commons/io/IOCase;)I\n+   #58 = Methodref          #10.#59       // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #59 = NameAndType        #60:#61       // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #60 = Utf8               matcher\n+   #61 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+   #62 = Methodref          #63.#64       // java/util/regex/Matcher.matches:()Z\n+   #63 = Class              #65           // java/util/regex/Matcher\n+   #64 = NameAndType        #66:#67       // matches:()Z\n+   #65 = Utf8               java/util/regex/Matcher\n+   #66 = Utf8               matches\n+   #67 = Utf8               ()Z\n+   #68 = InterfaceMethodref #27.#69       // java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #69 = NameAndType        #23:#70       // apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #70 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #71 = Class              #72           // java/lang/CharSequence\n+   #72 = Utf8               java/lang/CharSequence\n+   #73 = Methodref          #30.#74       // org/apache/commons/io/filefilter/RegexFileFilter.toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #74 = NameAndType        #75:#76       // toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+   #75 = Utf8               toFileVisitResult\n+   #76 = Utf8               (Z)Ljava/nio/file/FileVisitResult;\n+   #77 = Class              #78           // java/lang/StringBuilder\n+   #78 = Utf8               java/lang/StringBuilder\n+   #79 = Methodref          #77.#37       // java/lang/StringBuilder.\"<init>\":()V\n+   #80 = String             #81           // RegexFileFilter [pattern=\n+   #81 = Utf8               RegexFileFilter [pattern=\n+   #82 = Methodref          #77.#83       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #83 = NameAndType        #84:#85       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #84 = Utf8               append\n+   #85 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #86 = Methodref          #77.#87       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #87 = NameAndType        #84:#88       // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #88 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #89 = String             #90           // ]\n+   #90 = Utf8               ]\n+   #91 = Methodref          #77.#92       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #92 = NameAndType        #93:#94       // toString:()Ljava/lang/String;\n+   #93 = Utf8               toString\n+   #94 = Utf8               ()Ljava/lang/String;\n+   #95 = Methodref          #96.#97       // java/lang/invoke/SerializedLambda.getImplMethodName:()Ljava/lang/String;\n+   #96 = Class              #98           // java/lang/invoke/SerializedLambda\n+   #97 = NameAndType        #99:#94       // getImplMethodName:()Ljava/lang/String;\n+   #98 = Utf8               java/lang/invoke/SerializedLambda\n+   #99 = Utf8               getImplMethodName\n+  #100 = Methodref          #101.#102     // java/lang/String.hashCode:()I\n+  #101 = Class              #103          // java/lang/String\n+  #102 = NameAndType        #104:#105     // hashCode:()I\n+  #103 = Utf8               java/lang/String\n+  #104 = Utf8               hashCode\n+  #105 = Utf8               ()I\n+  #106 = String             #107          // lambda$new$fc983b68$1\n+  #107 = Utf8               lambda$new$fc983b68$1\n+  #108 = Methodref          #101.#109     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #109 = NameAndType        #110:#111     // equals:(Ljava/lang/Object;)Z\n+  #110 = Utf8               equals\n+  #111 = Utf8               (Ljava/lang/Object;)Z\n+  #112 = Methodref          #96.#113      // java/lang/invoke/SerializedLambda.getImplMethodKind:()I\n+  #113 = NameAndType        #114:#105     // getImplMethodKind:()I\n+  #114 = Utf8               getImplMethodKind\n+  #115 = Methodref          #96.#116      // java/lang/invoke/SerializedLambda.getFunctionalInterfaceClass:()Ljava/lang/String;\n+  #116 = NameAndType        #117:#94      // getFunctionalInterfaceClass:()Ljava/lang/String;\n+  #117 = Utf8               getFunctionalInterfaceClass\n+  #118 = String             #28           // java/util/function/Function\n+  #119 = Methodref          #120.#109     // java/lang/Object.equals:(Ljava/lang/Object;)Z\n+  #120 = Class              #121          // java/lang/Object\n+  #121 = Utf8               java/lang/Object\n+  #122 = Methodref          #96.#123      // java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodName:()Ljava/lang/String;\n+  #123 = NameAndType        #124:#94      // getFunctionalInterfaceMethodName:()Ljava/lang/String;\n+  #124 = Utf8               getFunctionalInterfaceMethodName\n+  #125 = String             #23           // apply\n+  #126 = Methodref          #96.#127      // java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodSignature:()Ljava/lang/String;\n+  #127 = NameAndType        #128:#94      // getFunctionalInterfaceMethodSignature:()Ljava/lang/String;\n+  #128 = Utf8               getFunctionalInterfaceMethodSignature\n+  #129 = String             #70           // (Ljava/lang/Object;)Ljava/lang/Object;\n+  #130 = Methodref          #96.#131      // java/lang/invoke/SerializedLambda.getImplClass:()Ljava/lang/String;\n+  #131 = NameAndType        #132:#94      // getImplClass:()Ljava/lang/String;\n+  #132 = Utf8               getImplClass\n+  #133 = String             #32           // org/apache/commons/io/filefilter/RegexFileFilter\n+  #134 = Methodref          #96.#135      // java/lang/invoke/SerializedLambda.getImplMethodSignature:()Ljava/lang/String;\n+  #135 = NameAndType        #136:#94      // getImplMethodSignature:()Ljava/lang/String;\n+  #136 = Utf8               getImplMethodSignature\n+  #137 = String             #138          // (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #138 = Utf8               (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #139 = Class              #140          // java/lang/IllegalArgumentException\n+  #140 = Utf8               java/lang/IllegalArgumentException\n+  #141 = String             #142          // Invalid lambda deserialization\n+  #142 = Utf8               Invalid lambda deserialization\n+  #143 = Methodref          #139.#144     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #144 = NameAndType        #33:#145      // \"<init>\":(Ljava/lang/String;)V\n+  #145 = Utf8               (Ljava/lang/String;)V\n+  #146 = InterfaceMethodref #147.#148     // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+  #147 = Class              #149          // java/nio/file/Path\n+  #148 = NameAndType        #150:#151     // getFileName:()Ljava/nio/file/Path;\n+  #149 = Utf8               java/nio/file/Path\n+  #150 = Utf8               getFileName\n+  #151 = Utf8               ()Ljava/nio/file/Path;\n+  #152 = InterfaceMethodref #147.#92      // java/nio/file/Path.toString:()Ljava/lang/String;\n+  #153 = Utf8               serialVersionUID\n+  #154 = Utf8               J\n+  #155 = Utf8               ConstantValue\n+  #156 = Long               4269646126155225062l\n+  #158 = Utf8               Signature\n+  #159 = Utf8               Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n+  #160 = Utf8               Code\n+  #161 = Utf8               LineNumberTable\n+  #162 = Utf8               LocalVariableTable\n+  #163 = Utf8               Ljava/lang/String;\n+  #164 = Utf8               flags\n+  #165 = Utf8               I\n+  #166 = Utf8               ioCase\n+  #167 = Utf8               Lorg/apache/commons/io/IOCase;\n+  #168 = Utf8               StackMapTable\n+  #169 = Utf8               this\n+  #170 = Utf8               Lorg/apache/commons/io/filefilter/RegexFileFilter;\n+  #171 = Utf8               LocalVariableTypeTable\n+  #172 = Utf8               (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+  #173 = Utf8               (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n+  #174 = Utf8               accept\n+  #175 = Utf8               (Ljava/io/File;Ljava/lang/String;)Z\n+  #176 = Utf8               dir\n+  #177 = Utf8               Ljava/io/File;\n+  #178 = Utf8               name\n+  #179 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #180 = Utf8               path\n+  #181 = Utf8               Ljava/nio/file/Path;\n+  #182 = Utf8               attributes\n+  #183 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n+  #184 = Utf8               $deserializeLambda$\n+  #185 = Utf8               (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\n+  #186 = Utf8               lambda\n+  #187 = Utf8               Ljava/lang/invoke/SerializedLambda;\n+  #188 = Utf8               p\n+  #189 = Utf8               SourceFile\n+  #190 = Utf8               RegexFileFilter.java\n+  #191 = Utf8               BootstrapMethods\n+  #192 = MethodHandle       6:#193        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #193 = Methodref          #194.#195     // java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #194 = Class              #196          // java/lang/invoke/LambdaMetafactory\n+  #195 = NameAndType        #197:#198     // altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #196 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #197 = Utf8               altMetafactory\n+  #198 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  #199 = MethodType         #70           //  (Ljava/lang/Object;)Ljava/lang/Object;\n+  #200 = MethodHandle       6:#201        // REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #201 = Methodref          #30.#202      // org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #202 = NameAndType        #107:#138     // lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n+  #203 = MethodType         #138          //  (Ljava/nio/file/Path;)Ljava/lang/String;\n+  #204 = Integer            5\n+  #205 = Integer            0\n+  #206 = Utf8               InnerClasses\n+  #207 = Class              #208          // java/lang/invoke/MethodHandles$Lookup\n+  #208 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #209 = Class              #210          // java/lang/invoke/MethodHandles\n+  #210 = Utf8               java/lang/invoke/MethodHandles\n+  #211 = Utf8               Lookup\n {\n   private static final long serialVersionUID = 4269646126155225062l;\n     descriptor: J\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: long 4269646126155225062l\n \n   private final java.util.regex.Pattern pattern;\n     descriptor: Ljava/util/regex/Pattern;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.util.function.Function<java.nio.file.Path, java.lang.String> pathToString;\n     descriptor: Ljava/util/function/Function;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #62                          // Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n+    Signature: #159                         // Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n \n   private static java.util.regex.Pattern compile(java.lang.String, int);\n     descriptor: (Ljava/lang/String;I)Ljava/util/regex/Pattern;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: ldc           #1                  // String pattern\n-         3: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_0\n          8: iload_1\n-         9: invokestatic  #3                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+         9: invokestatic  #9                  // Method java/util/regex/Pattern.compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n         12: areturn\n       LineNumberTable:\n         line 86: 0\n         line 87: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0 pattern   Ljava/lang/String;\n@@ -256,15 +256,15 @@\n \n   private static int toFlags(org.apache.commons.io.IOCase);\n     descriptor: (Lorg/apache/commons/io/IOCase;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #4                  // Method org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n+         1: invokestatic  #15                 // Method org/apache/commons/io/IOCase.isCaseSensitive:(Lorg/apache/commons/io/IOCase;)Z\n          4: ifeq          11\n          7: iconst_0\n          8: goto          12\n         11: iconst_2\n         12: ireturn\n       LineNumberTable:\n         line 97: 0\n@@ -279,18 +279,18 @@\n   public org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern);\n     descriptor: (Ljava/util/regex/Pattern;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokedynamic #6,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n-         7: checkcast     #7                  // class java/io/Serializable\n-        10: checkcast     #8                  // class java/util/function/Function\n-        13: invokespecial #9                  // Method \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n+         2: invokedynamic #21,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n+         7: checkcast     #25                 // class java/io/Serializable\n+        10: checkcast     #27                 // class java/util/function/Function\n+        13: invokespecial #29                 // Method \"<init>\":(Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n         16: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      17     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -298,25 +298,25 @@\n \n   public org.apache.commons.io.filefilter.RegexFileFilter(java.util.regex.Pattern, java.util.function.Function<java.nio.file.Path, java.lang.String>);\n     descriptor: (Ljava/util/regex/Pattern;Ljava/util/function/Function;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #10                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #35                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_1\n          5: ldc           #1                  // String pattern\n-         7: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n         10: pop\n         11: aload_0\n         12: aload_1\n-        13: putfield      #11                 // Field pattern:Ljava/util/regex/Pattern;\n+        13: putfield      #40                 // Field pattern:Ljava/util/regex/Pattern;\n         16: aload_0\n         17: aload_2\n-        18: putfield      #12                 // Field pathToString:Ljava/util/function/Function;\n+        18: putfield      #43                 // Field pathToString:Ljava/util/function/Function;\n         21: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 4\n         line 127: 11\n         line 128: 16\n         line 129: 21\n@@ -324,25 +324,25 @@\n         Start  Length  Slot  Name   Signature\n             0      22     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n             0      22     1 pattern   Ljava/util/regex/Pattern;\n             0      22     2 pathToString   Ljava/util/function/Function;\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n             0      22     2 pathToString   Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;\n-    Signature: #82                          // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n+    Signature: #172                         // (Ljava/util/regex/Pattern;Ljava/util/function/Function<Ljava/nio/file/Path;Ljava/lang/String;>;)V\n \n   public org.apache.commons.io.filefilter.RegexFileFilter(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: invokespecial #13                 // Method \"<init>\":(Ljava/lang/String;I)V\n+         3: invokespecial #47                 // Method \"<init>\":(Ljava/lang/String;I)V\n          6: return\n       LineNumberTable:\n         line 138: 0\n         line 139: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -352,16 +352,16 @@\n     descriptor: (Ljava/lang/String;I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokestatic  #14                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-         6: invokespecial #15                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n+         3: invokestatic  #50                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+         6: invokespecial #51                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n          9: return\n       LineNumberTable:\n         line 149: 0\n         line 150: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -372,17 +372,17 @@\n     descriptor: (Ljava/lang/String;Lorg/apache/commons/io/IOCase;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #16                 // Method toFlags:(Lorg/apache/commons/io/IOCase;)I\n-         6: invokestatic  #14                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n-         9: invokespecial #15                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n+         3: invokestatic  #54                 // Method toFlags:(Lorg/apache/commons/io/IOCase;)I\n+         6: invokestatic  #50                 // Method compile:(Ljava/lang/String;I)Ljava/util/regex/Pattern;\n+         9: invokespecial #51                 // Method \"<init>\":(Ljava/util/regex/Pattern;)V\n         12: return\n       LineNumberTable:\n         line 160: 0\n         line 161: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n@@ -391,18 +391,18 @@\n \n   public boolean accept(java.io.File, java.lang.String);\n     descriptor: (Ljava/io/File;Ljava/lang/String;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #11                 // Field pattern:Ljava/util/regex/Pattern;\n+         1: getfield      #40                 // Field pattern:Ljava/util/regex/Pattern;\n          4: aload_2\n-         5: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-         8: invokevirtual #18                 // Method java/util/regex/Matcher.matches:()Z\n+         5: invokevirtual #58                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         8: invokevirtual #62                 // Method java/util/regex/Matcher.matches:()Z\n         11: ireturn\n       LineNumberTable:\n         line 172: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n             0      12     1   dir   Ljava/io/File;\n@@ -411,117 +411,117 @@\n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_0\n-         2: getfield      #11                 // Field pattern:Ljava/util/regex/Pattern;\n+         2: getfield      #40                 // Field pattern:Ljava/util/regex/Pattern;\n          5: aload_0\n-         6: getfield      #12                 // Field pathToString:Ljava/util/function/Function;\n+         6: getfield      #43                 // Field pathToString:Ljava/util/function/Function;\n          9: aload_1\n-        10: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n-        15: checkcast     #20                 // class java/lang/CharSequence\n-        18: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        21: invokevirtual #18                 // Method java/util/regex/Matcher.matches:()Z\n-        24: invokevirtual #21                 // Method toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n+        10: invokeinterface #68,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;\n+        15: checkcast     #71                 // class java/lang/CharSequence\n+        18: invokevirtual #58                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        21: invokevirtual #62                 // Method java/util/regex/Matcher.matches:()Z\n+        24: invokevirtual #73                 // Method toFileVisitResult:(Z)Ljava/nio/file/FileVisitResult;\n         27: areturn\n       LineNumberTable:\n         line 184: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      28     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n             0      28     1  path   Ljava/nio/file/Path;\n             0      28     2 attributes   Ljava/nio/file/attribute/BasicFileAttributes;\n \n   public java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #22                 // class java/lang/StringBuilder\n+         0: new           #77                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #23                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #24                 // String RegexFileFilter [pattern=\n-         9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #79                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #80                 // String RegexFileFilter [pattern=\n+         9: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: getfield      #11                 // Field pattern:Ljava/util/regex/Pattern;\n-        16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-        19: ldc           #27                 // String ]\n-        21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        24: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        13: getfield      #40                 // Field pattern:Ljava/util/regex/Pattern;\n+        16: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+        19: ldc           #89                 // String ]\n+        21: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         27: areturn\n       LineNumberTable:\n         line 194: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      28     0  this   Lorg/apache/commons/io/filefilter/RegexFileFilter;\n \n   private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);\n     descriptor: (Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method java/lang/invoke/SerializedLambda.getImplMethodName:()Ljava/lang/String;\n+         1: invokevirtual #95                 // Method java/lang/invoke/SerializedLambda.getImplMethodName:()Ljava/lang/String;\n          4: astore_1\n          5: iconst_m1\n          6: istore_2\n          7: aload_1\n-         8: invokevirtual #30                 // Method java/lang/String.hashCode:()I\n+         8: invokevirtual #100                // Method java/lang/String.hashCode:()I\n         11: lookupswitch  { // 1\n               -365729413: 28\n                  default: 39\n             }\n         28: aload_1\n-        29: ldc           #31                 // String lambda$new$fc983b68$1\n-        31: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        29: ldc           #106                // String lambda$new$fc983b68$1\n+        31: invokevirtual #108                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         34: ifeq          39\n         37: iconst_0\n         38: istore_2\n         39: iload_2\n         40: lookupswitch  { // 1\n                        0: 60\n                  default: 135\n             }\n         60: aload_0\n-        61: invokevirtual #33                 // Method java/lang/invoke/SerializedLambda.getImplMethodKind:()I\n+        61: invokevirtual #112                // Method java/lang/invoke/SerializedLambda.getImplMethodKind:()I\n         64: bipush        6\n         66: if_icmpne     135\n         69: aload_0\n-        70: invokevirtual #34                 // Method java/lang/invoke/SerializedLambda.getFunctionalInterfaceClass:()Ljava/lang/String;\n-        73: ldc           #35                 // String java/util/function/Function\n-        75: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        70: invokevirtual #115                // Method java/lang/invoke/SerializedLambda.getFunctionalInterfaceClass:()Ljava/lang/String;\n+        73: ldc           #118                // String java/util/function/Function\n+        75: invokevirtual #119                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         78: ifeq          135\n         81: aload_0\n-        82: invokevirtual #37                 // Method java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodName:()Ljava/lang/String;\n-        85: ldc           #38                 // String apply\n-        87: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        82: invokevirtual #122                // Method java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodName:()Ljava/lang/String;\n+        85: ldc           #125                // String apply\n+        87: invokevirtual #119                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n         90: ifeq          135\n         93: aload_0\n-        94: invokevirtual #39                 // Method java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodSignature:()Ljava/lang/String;\n-        97: ldc           #40                 // String (Ljava/lang/Object;)Ljava/lang/Object;\n-        99: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+        94: invokevirtual #126                // Method java/lang/invoke/SerializedLambda.getFunctionalInterfaceMethodSignature:()Ljava/lang/String;\n+        97: ldc           #129                // String (Ljava/lang/Object;)Ljava/lang/Object;\n+        99: invokevirtual #119                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n        102: ifeq          135\n        105: aload_0\n-       106: invokevirtual #41                 // Method java/lang/invoke/SerializedLambda.getImplClass:()Ljava/lang/String;\n-       109: ldc           #42                 // String org/apache/commons/io/filefilter/RegexFileFilter\n-       111: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+       106: invokevirtual #130                // Method java/lang/invoke/SerializedLambda.getImplClass:()Ljava/lang/String;\n+       109: ldc           #133                // String org/apache/commons/io/filefilter/RegexFileFilter\n+       111: invokevirtual #119                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n        114: ifeq          135\n        117: aload_0\n-       118: invokevirtual #43                 // Method java/lang/invoke/SerializedLambda.getImplMethodSignature:()Ljava/lang/String;\n-       121: ldc           #44                 // String (Ljava/nio/file/Path;)Ljava/lang/String;\n-       123: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n+       118: invokevirtual #134                // Method java/lang/invoke/SerializedLambda.getImplMethodSignature:()Ljava/lang/String;\n+       121: ldc           #137                // String (Ljava/nio/file/Path;)Ljava/lang/String;\n+       123: invokevirtual #119                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z\n        126: ifeq          135\n-       129: invokedynamic #6,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n+       129: invokedynamic #21,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;\n        134: areturn\n-       135: new           #45                 // class java/lang/IllegalArgumentException\n+       135: new           #139                // class java/lang/IllegalArgumentException\n        138: dup\n-       139: ldc           #46                 // String Invalid lambda deserialization\n-       141: invokespecial #47                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+       139: ldc           #141                // String Invalid lambda deserialization\n+       141: invokespecial #143                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n        144: athrow\n       LineNumberTable:\n         line 74: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0     145     0 lambda   Ljava/lang/invoke/SerializedLambda;\n       StackMapTable: number_of_entries = 4\n@@ -535,27 +535,27 @@\n \n   private static java.lang.String lambda$new$fc983b68$1(java.nio.file.Path);\n     descriptor: (Ljava/nio/file/Path;)Ljava/lang/String;\n     flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokeinterface #48,  1           // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-         6: invokeinterface #49,  1           // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n+         1: invokeinterface #146,  1          // InterfaceMethod java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+         6: invokeinterface #152,  1          // InterfaceMethod java/nio/file/Path.toString:()Ljava/lang/String;\n         11: areturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      12     0     p   Ljava/nio/file/Path;\n }\n SourceFile: \"RegexFileFilter.java\"\n-InnerClasses:\n-  public static final #206= #205 of #209; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #115 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n+  0: #192 REF_invokeStatic java/lang/invoke/LambdaMetafactory.altMetafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #116 (Ljava/lang/Object;)Ljava/lang/Object;\n-      #117 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n-      #118 (Ljava/nio/file/Path;)Ljava/lang/String;\n-      #119 5\n-      #120 0\n+      #199 (Ljava/lang/Object;)Ljava/lang/Object;\n+      #200 REF_invokeStatic org/apache/commons/io/filefilter/RegexFileFilter.lambda$new$fc983b68$1:(Ljava/nio/file/Path;)Ljava/lang/String;\n+      #203 (Ljava/nio/file/Path;)Ljava/lang/String;\n+      #204 5\n+      #205 0\n+InnerClasses:\n+  public static final #211= #207 of #209; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
