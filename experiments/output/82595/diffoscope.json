{"diffoscope-json-version": 1, "source1": "first/SkipShieldingInputStream.class", "source2": "second/SkipShieldingInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -6,20 +6,20 @@\n import java.io.FilterInputStream;\n \n public class SkipShieldingInputStream extends FilterInputStream\n {\n     private static final int SKIP_BUFFER_SIZE = 8192;\n     private static final byte[] SKIP_BUFFER;\n     \n+    static {\n+        SKIP_BUFFER = new byte[8192];\n+    }\n+    \n     public SkipShieldingInputStream(final InputStream in) {\n         super(in);\n     }\n     \n     @Override\n     public long skip(final long n) throws IOException {\n-        return (n < 0L) ? 0L : ((long)this.read(SkipShieldingInputStream.SKIP_BUFFER, 0, (int)Math.min(n, 8192L)));\n-    }\n-    \n-    static {\n-        SKIP_BUFFER = new byte[8192];\n+        return (n < 0L) ? 0 : this.read(SkipShieldingInputStream.SKIP_BUFFER, 0, (int)Math.min(n, 8192L));\n     }\n }\n"}]}
