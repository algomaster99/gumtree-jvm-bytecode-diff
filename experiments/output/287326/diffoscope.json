{"diffoscope-json-version": 1, "source1": "first/BHSDCodec.class", "source2": "second/BHSDCodec.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -141,68 +141,68 @@\n         return decodeInts;\n     }\n     \n     public boolean encodes(final long n) {\n         return n >= this.smallest && n <= this.largest;\n     }\n     \n-    public byte[] encode(final int i, final int n) throws Pack200Exception {\n-        if (!this.encodes(i)) {\n-            throw new Pack200Exception(\"The codec \" + this.toString() + \" does not encode the value \" + i);\n+    public byte[] encode(final int n, final int n2) throws Pack200Exception {\n+        if (!this.encodes(n)) {\n+            throw new Pack200Exception(\"The codec \" + this.toString() + \" does not encode the value \" + n);\n         }\n-        long n2 = (long)i;\n+        long n3 = (long)n;\n         if (this.isDelta()) {\n-            n2 -= n;\n+            n3 -= n2;\n         }\n         if (this.isSigned()) {\n-            if (n2 < -2147483648L) {\n-                n2 += 4294967296L;\n+            if (n3 < -2147483648L) {\n+                n3 += 4294967296L;\n             }\n-            else if (n2 > 2147483647L) {\n-                n2 -= 4294967296L;\n+            else if (n3 > 2147483647L) {\n+                n3 -= 4294967296L;\n             }\n-            if (n2 < 0L) {\n-                n2 = (-n2 << this.s) - 1L;\n+            if (n3 < 0L) {\n+                n3 = (-n3 << this.s) - 1L;\n             }\n             else if (this.s == 1) {\n-                n2 <<= this.s;\n+                n3 <<= this.s;\n             }\n             else {\n-                n2 += (n2 - n2 % 3L) / 3L;\n+                n3 += (n3 - n3 % 3L) / 3L;\n             }\n         }\n-        else if (n2 < 0L) {\n+        else if (n3 < 0L) {\n             if (this.cardinality < 4294967296L) {\n-                n2 += this.cardinality;\n+                n3 += this.cardinality;\n             }\n             else {\n-                n2 += 4294967296L;\n+                n3 += 4294967296L;\n             }\n         }\n-        if (n2 < 0L) {\n+        if (n3 < 0L) {\n             throw new Pack200Exception(\"unable to encode\");\n         }\n         final ArrayList list = new ArrayList();\n-        for (int j = 0; j < this.b; ++j) {\n-            long n3;\n-            if (n2 < this.l) {\n-                n3 = n2;\n+        for (int i = 0; i < this.b; ++i) {\n+            long n4;\n+            if (n3 < this.l) {\n+                n4 = n3;\n             }\n             else {\n-                for (n3 = n2 % this.h; n3 < this.l; n3 += this.h) {}\n+                for (n4 = n3 % this.h; n4 < this.l; n4 += this.h) {}\n             }\n-            list.add(Byte.valueOf((byte)(int)n3));\n-            if (n3 < this.l) {\n+            list.add(Byte.valueOf((byte)(int)n4));\n+            if (n4 < this.l) {\n                 break;\n             }\n-            n2 = (n2 - n3) / this.h;\n+            n3 = (n3 - n4) / this.h;\n         }\n         final byte[] array = new byte[list.size()];\n-        for (int k = 0; k < array.length; ++k) {\n-            array[k] = (byte)list.get(k);\n+        for (int j = 0; j < array.length; ++j) {\n+            array[j] = (byte)list.get(j);\n         }\n         return array;\n     }\n     \n     public byte[] encode(final int n) throws Pack200Exception {\n         return this.encode(n, 0);\n     }\n"}]}
