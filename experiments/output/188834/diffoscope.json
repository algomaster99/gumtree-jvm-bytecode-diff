{"diffoscope-json-version": 1, "source1": "first/BitInputStream.class", "source2": "second/BitInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,121 +1,121 @@\n-  SHA-256 checksum dec2980683dec02374ecbbcc87614d61408a48e0ccc7beef7d71a08c944f1e9b\n+  SHA-256 checksum 76a95f1931ff94ba380cc8bd97e7533e6b0cbd3032fa08809837963e0511535c\n   Compiled from \"BitInputStream.java\"\n public class org.apache.commons.compress.utils.BitInputStream implements java.io.Closeable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #9                          // org/apache/commons/compress/utils/BitInputStream\n-  super_class: #26                        // java/lang/Object\n+  this_class: #13                         // org/apache/commons/compress/utils/BitInputStream\n+  super_class: #2                         // java/lang/Object\n   interfaces: 1, fields: 6, methods: 12, attributes: 1\n Constant pool:\n-    #1 = Methodref          #26.#77       // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #78           // org/apache/commons/compress/utils/CountingInputStream\n-    #3 = Methodref          #2.#79        // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #4 = Fieldref           #9.#80        // org/apache/commons/compress/utils/BitInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-    #5 = Fieldref           #9.#81        // org/apache/commons/compress/utils/BitInputStream.byteOrder:Ljava/nio/ByteOrder;\n-    #6 = Methodref          #2.#82        // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-    #7 = Fieldref           #9.#83        // org/apache/commons/compress/utils/BitInputStream.bitsCached:J\n-    #8 = Fieldref           #9.#84        // org/apache/commons/compress/utils/BitInputStream.bitsCachedSize:I\n-    #9 = Class              #85           // org/apache/commons/compress/utils/BitInputStream\n-   #10 = Class              #86           // java/io/IOException\n-   #11 = String             #87           // count must not be negative or greater than 63\n-   #12 = Methodref          #10.#88       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Methodref          #9.#89        // org/apache/commons/compress/utils/BitInputStream.ensureCache:(I)Z\n-   #14 = Long               -1l\n-   #16 = Methodref          #9.#90        // org/apache/commons/compress/utils/BitInputStream.processBitsGreater57:(I)J\n-   #17 = Methodref          #9.#91        // org/apache/commons/compress/utils/BitInputStream.readCachedBits:(I)J\n-   #18 = Class              #92           // java/lang/Byte\n-   #19 = Long               8l\n-   #21 = Methodref          #2.#93        // org/apache/commons/compress/utils/CountingInputStream.available:()I\n-   #22 = Methodref          #2.#94        // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #23 = Methodref          #2.#95        // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-   #24 = Fieldref           #96.#97       // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-   #25 = Fieldref           #9.#98        // org/apache/commons/compress/utils/BitInputStream.MASKS:[J\n-   #26 = Class              #99           // java/lang/Object\n-   #27 = Class              #100          // java/io/Closeable\n-   #28 = Utf8               MAXIMUM_CACHE_SIZE\n-   #29 = Utf8               I\n-   #30 = Utf8               ConstantValue\n-   #31 = Integer            63\n-   #32 = Utf8               MASKS\n-   #33 = Utf8               [J\n-   #34 = Utf8               in\n-   #35 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #36 = Utf8               byteOrder\n-   #37 = Utf8               Ljava/nio/ByteOrder;\n-   #38 = Utf8               bitsCached\n-   #39 = Utf8               J\n-   #40 = Utf8               bitsCachedSize\n-   #41 = Utf8               <init>\n-   #42 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-   #43 = Utf8               Code\n-   #44 = Utf8               LineNumberTable\n-   #45 = Utf8               LocalVariableTable\n-   #46 = Utf8               this\n-   #47 = Utf8               Lorg/apache/commons/compress/utils/BitInputStream;\n-   #48 = Utf8               Ljava/io/InputStream;\n-   #49 = Utf8               close\n-   #50 = Utf8               ()V\n-   #51 = Utf8               Exceptions\n-   #52 = Utf8               clearBitCache\n-   #53 = Utf8               readBits\n-   #54 = Utf8               (I)J\n-   #55 = Utf8               count\n-   #56 = Utf8               StackMapTable\n-   #57 = Utf8               ()I\n-   #58 = Utf8               bitsAvailable\n-   #59 = Utf8               ()J\n-   #60 = Utf8               alignWithByteBoundary\n-   #61 = Utf8               toSkip\n-   #62 = Utf8               getBytesRead\n-   #63 = Utf8               processBitsGreater57\n-   #64 = Utf8               bitsToAdd\n-   #65 = Utf8               bitsOut\n-   #66 = Utf8               overflowBits\n-   #67 = Utf8               overflow\n-   #68 = Utf8               bitsToAddCount\n-   #69 = Utf8               nextByte\n-   #70 = Utf8               readCachedBits\n-   #71 = Utf8               ensureCache\n-   #72 = Utf8               (I)Z\n-   #73 = Utf8               <clinit>\n-   #74 = Utf8               i\n-   #75 = Utf8               SourceFile\n-   #76 = Utf8               BitInputStream.java\n-   #77 = NameAndType        #41:#50       // \"<init>\":()V\n-   #78 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-   #79 = NameAndType        #41:#101      // \"<init>\":(Ljava/io/InputStream;)V\n-   #80 = NameAndType        #34:#35       // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #81 = NameAndType        #36:#37       // byteOrder:Ljava/nio/ByteOrder;\n-   #82 = NameAndType        #49:#50       // close:()V\n-   #83 = NameAndType        #38:#39       // bitsCached:J\n-   #84 = NameAndType        #40:#29       // bitsCachedSize:I\n-   #85 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-   #86 = Utf8               java/io/IOException\n-   #87 = Utf8               count must not be negative or greater than 63\n-   #88 = NameAndType        #41:#102      // \"<init>\":(Ljava/lang/String;)V\n-   #89 = NameAndType        #71:#72       // ensureCache:(I)Z\n-   #90 = NameAndType        #63:#54       // processBitsGreater57:(I)J\n-   #91 = NameAndType        #70:#54       // readCachedBits:(I)J\n-   #92 = Utf8               java/lang/Byte\n-   #93 = NameAndType        #103:#57      // available:()I\n-   #94 = NameAndType        #62:#59       // getBytesRead:()J\n-   #95 = NameAndType        #104:#57      // read:()I\n-   #96 = Class              #105          // java/nio/ByteOrder\n-   #97 = NameAndType        #106:#37      // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-   #98 = NameAndType        #32:#33       // MASKS:[J\n-   #99 = Utf8               java/lang/Object\n-  #100 = Utf8               java/io/Closeable\n-  #101 = Utf8               (Ljava/io/InputStream;)V\n-  #102 = Utf8               (Ljava/lang/String;)V\n-  #103 = Utf8               available\n-  #104 = Utf8               read\n-  #105 = Utf8               java/nio/ByteOrder\n-  #106 = Utf8               LITTLE_ENDIAN\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Class              #8            // org/apache/commons/compress/utils/CountingInputStream\n+    #8 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+    #9 = Methodref          #7.#10        // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #10 = NameAndType        #5:#11        // \"<init>\":(Ljava/io/InputStream;)V\n+   #11 = Utf8               (Ljava/io/InputStream;)V\n+   #12 = Fieldref           #13.#14       // org/apache/commons/compress/utils/BitInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #13 = Class              #15           // org/apache/commons/compress/utils/BitInputStream\n+   #14 = NameAndType        #16:#17       // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #15 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+   #16 = Utf8               in\n+   #17 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #18 = Fieldref           #13.#19       // org/apache/commons/compress/utils/BitInputStream.byteOrder:Ljava/nio/ByteOrder;\n+   #19 = NameAndType        #20:#21       // byteOrder:Ljava/nio/ByteOrder;\n+   #20 = Utf8               byteOrder\n+   #21 = Utf8               Ljava/nio/ByteOrder;\n+   #22 = Methodref          #7.#23        // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #23 = NameAndType        #24:#6        // close:()V\n+   #24 = Utf8               close\n+   #25 = Fieldref           #13.#26       // org/apache/commons/compress/utils/BitInputStream.bitsCached:J\n+   #26 = NameAndType        #27:#28       // bitsCached:J\n+   #27 = Utf8               bitsCached\n+   #28 = Utf8               J\n+   #29 = Fieldref           #13.#30       // org/apache/commons/compress/utils/BitInputStream.bitsCachedSize:I\n+   #30 = NameAndType        #31:#32       // bitsCachedSize:I\n+   #31 = Utf8               bitsCachedSize\n+   #32 = Utf8               I\n+   #33 = Class              #34           // java/io/IOException\n+   #34 = Utf8               java/io/IOException\n+   #35 = String             #36           // count must not be negative or greater than 63\n+   #36 = Utf8               count must not be negative or greater than 63\n+   #37 = Methodref          #33.#38       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #38 = NameAndType        #5:#39        // \"<init>\":(Ljava/lang/String;)V\n+   #39 = Utf8               (Ljava/lang/String;)V\n+   #40 = Methodref          #13.#41       // org/apache/commons/compress/utils/BitInputStream.ensureCache:(I)Z\n+   #41 = NameAndType        #42:#43       // ensureCache:(I)Z\n+   #42 = Utf8               ensureCache\n+   #43 = Utf8               (I)Z\n+   #44 = Long               -1l\n+   #46 = Methodref          #13.#47       // org/apache/commons/compress/utils/BitInputStream.processBitsGreater57:(I)J\n+   #47 = NameAndType        #48:#49       // processBitsGreater57:(I)J\n+   #48 = Utf8               processBitsGreater57\n+   #49 = Utf8               (I)J\n+   #50 = Methodref          #13.#51       // org/apache/commons/compress/utils/BitInputStream.readCachedBits:(I)J\n+   #51 = NameAndType        #52:#49       // readCachedBits:(I)J\n+   #52 = Utf8               readCachedBits\n+   #53 = Class              #54           // java/lang/Byte\n+   #54 = Utf8               java/lang/Byte\n+   #55 = Long               8l\n+   #57 = Methodref          #7.#58        // org/apache/commons/compress/utils/CountingInputStream.available:()I\n+   #58 = NameAndType        #59:#60       // available:()I\n+   #59 = Utf8               available\n+   #60 = Utf8               ()I\n+   #61 = Methodref          #7.#62        // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #62 = NameAndType        #63:#64       // getBytesRead:()J\n+   #63 = Utf8               getBytesRead\n+   #64 = Utf8               ()J\n+   #65 = Methodref          #7.#66        // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+   #66 = NameAndType        #67:#60       // read:()I\n+   #67 = Utf8               read\n+   #68 = Fieldref           #69.#70       // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+   #69 = Class              #71           // java/nio/ByteOrder\n+   #70 = NameAndType        #72:#21       // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+   #71 = Utf8               java/nio/ByteOrder\n+   #72 = Utf8               LITTLE_ENDIAN\n+   #73 = Fieldref           #13.#74       // org/apache/commons/compress/utils/BitInputStream.MASKS:[J\n+   #74 = NameAndType        #75:#76       // MASKS:[J\n+   #75 = Utf8               MASKS\n+   #76 = Utf8               [J\n+   #77 = Class              #78           // java/io/Closeable\n+   #78 = Utf8               java/io/Closeable\n+   #79 = Utf8               MAXIMUM_CACHE_SIZE\n+   #80 = Utf8               ConstantValue\n+   #81 = Integer            63\n+   #82 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+   #83 = Utf8               Code\n+   #84 = Utf8               LineNumberTable\n+   #85 = Utf8               LocalVariableTable\n+   #86 = Utf8               this\n+   #87 = Utf8               Lorg/apache/commons/compress/utils/BitInputStream;\n+   #88 = Utf8               Ljava/io/InputStream;\n+   #89 = Utf8               Exceptions\n+   #90 = Utf8               clearBitCache\n+   #91 = Utf8               readBits\n+   #92 = Utf8               count\n+   #93 = Utf8               StackMapTable\n+   #94 = Utf8               bitsAvailable\n+   #95 = Utf8               alignWithByteBoundary\n+   #96 = Utf8               toSkip\n+   #97 = Utf8               bitsToAdd\n+   #98 = Utf8               bitsOut\n+   #99 = Utf8               overflowBits\n+  #100 = Utf8               overflow\n+  #101 = Utf8               bitsToAddCount\n+  #102 = Utf8               nextByte\n+  #103 = Utf8               <clinit>\n+  #104 = Utf8               i\n+  #105 = Utf8               SourceFile\n+  #106 = Utf8               BitInputStream.java\n {\n   private static final int MAXIMUM_CACHE_SIZE = 63;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 63\n \n   private static final long[] MASKS;\n@@ -142,22 +142,22 @@\n     descriptor: (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n-         5: new           #2                  // class org/apache/commons/compress/utils/CountingInputStream\n+         5: new           #7                  // class org/apache/commons/compress/utils/CountingInputStream\n          8: dup\n          9: aload_1\n-        10: invokespecial #3                  // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        13: putfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        10: invokespecial #9                  // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        13: putfield      #12                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n         16: aload_0\n         17: aload_2\n-        18: putfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;\n+        18: putfield      #18                 // Field byteOrder:Ljava/nio/ByteOrder;\n         21: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 4\n         line 54: 16\n         line 55: 21\n       LocalVariableTable:\n@@ -168,16 +168,16 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #6                  // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+         1: getfield      #12                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #22                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/utils/BitInputStream;\n@@ -187,18 +187,18 @@\n   public void clearBitCache();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: lconst_0\n-         2: putfield      #7                  // Field bitsCached:J\n+         2: putfield      #25                 // Field bitsCached:J\n          5: aload_0\n          6: iconst_0\n-         7: putfield      #8                  // Field bitsCachedSize:I\n+         7: putfield      #29                 // Field bitsCachedSize:I\n         10: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 5\n         line 69: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -210,36 +210,36 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: iload_1\n          1: iflt          10\n          4: iload_1\n          5: bipush        63\n          7: if_icmple     20\n-        10: new           #10                 // class java/io/IOException\n+        10: new           #33                 // class java/io/IOException\n         13: dup\n-        14: ldc           #11                 // String count must not be negative or greater than 63\n-        16: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        14: ldc           #35                 // String count must not be negative or greater than 63\n+        16: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         19: athrow\n         20: aload_0\n         21: iload_1\n-        22: invokespecial #13                 // Method ensureCache:(I)Z\n+        22: invokespecial #40                 // Method ensureCache:(I)Z\n         25: ifeq          32\n-        28: ldc2_w        #14                 // long -1l\n+        28: ldc2_w        #44                 // long -1l\n         31: lreturn\n         32: aload_0\n-        33: getfield      #8                  // Field bitsCachedSize:I\n+        33: getfield      #29                 // Field bitsCachedSize:I\n         36: iload_1\n         37: if_icmpge     46\n         40: aload_0\n         41: iload_1\n-        42: invokespecial #16                 // Method processBitsGreater57:(I)J\n+        42: invokespecial #46                 // Method processBitsGreater57:(I)J\n         45: lreturn\n         46: aload_0\n         47: iload_1\n-        48: invokespecial #17                 // Method readCachedBits:(I)J\n+        48: invokespecial #50                 // Method readCachedBits:(I)J\n         51: lreturn\n       LineNumberTable:\n         line 82: 0\n         line 83: 10\n         line 85: 20\n         line 86: 28\n         line 89: 32\n@@ -259,34 +259,34 @@\n \n   public int bitsCached();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field bitsCachedSize:I\n+         1: getfield      #29                 // Field bitsCachedSize:I\n          4: ireturn\n       LineNumberTable:\n         line 102: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/utils/BitInputStream;\n \n   public long bitsAvailable() throws java.io.IOException;\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field bitsCachedSize:I\n+         1: getfield      #29                 // Field bitsCachedSize:I\n          4: i2l\n-         5: ldc2_w        #19                 // long 8l\n+         5: ldc2_w        #55                 // long 8l\n          8: aload_0\n-         9: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        12: invokevirtual #21                 // Method org/apache/commons/compress/utils/CountingInputStream.available:()I\n+         9: getfield      #12                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        12: invokevirtual #57                 // Method org/apache/commons/compress/utils/CountingInputStream.available:()I\n         15: i2l\n         16: lmul\n         17: ladd\n         18: lreturn\n       LineNumberTable:\n         line 114: 0\n       LocalVariableTable:\n@@ -297,23 +297,23 @@\n \n   public void alignWithByteBoundary();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field bitsCachedSize:I\n+         1: getfield      #29                 // Field bitsCachedSize:I\n          4: bipush        8\n          6: irem\n          7: istore_1\n          8: iload_1\n          9: ifle          18\n         12: aload_0\n         13: iload_1\n-        14: invokespecial #17                 // Method readCachedBits:(I)J\n+        14: invokespecial #50                 // Method readCachedBits:(I)J\n         17: pop2\n         18: return\n       LineNumberTable:\n         line 122: 0\n         line 123: 8\n         line 124: 12\n         line 126: 18\n@@ -328,16 +328,16 @@\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #22                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #12                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #61                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 137: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/utils/BitInputStream;\n \n@@ -346,99 +346,99 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=12, args_size=2\n          0: lconst_0\n          1: lstore        5\n          3: iload_1\n          4: aload_0\n-         5: getfield      #8                  // Field bitsCachedSize:I\n+         5: getfield      #29                 // Field bitsCachedSize:I\n          8: isub\n          9: istore        7\n         11: bipush        8\n         13: iload         7\n         15: isub\n         16: istore        4\n         18: aload_0\n-        19: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        22: invokevirtual #23                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+        19: getfield      #12                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        22: invokevirtual #65                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n         25: i2l\n         26: lstore        8\n         28: lload         8\n         30: lconst_0\n         31: lcmp\n         32: ifge          38\n         35: lload         8\n         37: lreturn\n         38: aload_0\n-        39: getfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;\n-        42: getstatic     #24                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        39: getfield      #18                 // Field byteOrder:Ljava/nio/ByteOrder;\n+        42: getstatic     #68                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n         45: if_acmpne     92\n         48: lload         8\n-        50: getstatic     #25                 // Field MASKS:[J\n+        50: getstatic     #73                 // Field MASKS:[J\n         53: iload         7\n         55: laload\n         56: land\n         57: lstore        10\n         59: aload_0\n         60: dup\n-        61: getfield      #7                  // Field bitsCached:J\n+        61: getfield      #25                 // Field bitsCached:J\n         64: lload         10\n         66: aload_0\n-        67: getfield      #8                  // Field bitsCachedSize:I\n+        67: getfield      #29                 // Field bitsCachedSize:I\n         70: lshl\n         71: lor\n-        72: putfield      #7                  // Field bitsCached:J\n+        72: putfield      #25                 // Field bitsCached:J\n         75: lload         8\n         77: iload         7\n         79: lushr\n-        80: getstatic     #25                 // Field MASKS:[J\n+        80: getstatic     #73                 // Field MASKS:[J\n         83: iload         4\n         85: laload\n         86: land\n         87: lstore        5\n         89: goto          139\n         92: aload_0\n         93: dup\n-        94: getfield      #7                  // Field bitsCached:J\n+        94: getfield      #25                 // Field bitsCached:J\n         97: iload         7\n         99: lshl\n-       100: putfield      #7                  // Field bitsCached:J\n+       100: putfield      #25                 // Field bitsCached:J\n        103: lload         8\n        105: iload         4\n        107: lushr\n-       108: getstatic     #25                 // Field MASKS:[J\n+       108: getstatic     #73                 // Field MASKS:[J\n        111: iload         7\n        113: laload\n        114: land\n        115: lstore        10\n        117: aload_0\n        118: dup\n-       119: getfield      #7                  // Field bitsCached:J\n+       119: getfield      #25                 // Field bitsCached:J\n        122: lload         10\n        124: lor\n-       125: putfield      #7                  // Field bitsCached:J\n+       125: putfield      #25                 // Field bitsCached:J\n        128: lload         8\n-       130: getstatic     #25                 // Field MASKS:[J\n+       130: getstatic     #73                 // Field MASKS:[J\n        133: iload         4\n        135: laload\n        136: land\n        137: lstore        5\n        139: aload_0\n-       140: getfield      #7                  // Field bitsCached:J\n-       143: getstatic     #25                 // Field MASKS:[J\n+       140: getfield      #25                 // Field bitsCached:J\n+       143: getstatic     #73                 // Field MASKS:[J\n        146: iload_1\n        147: laload\n        148: land\n        149: lstore_2\n        150: aload_0\n        151: lload         5\n-       153: putfield      #7                  // Field bitsCached:J\n+       153: putfield      #25                 // Field bitsCached:J\n        156: aload_0\n        157: iload         4\n-       159: putfield      #8                  // Field bitsCachedSize:I\n+       159: putfield      #29                 // Field bitsCachedSize:I\n        162: lload_2\n        163: lreturn\n       LineNumberTable:\n         line 143: 0\n         line 146: 3\n         line 147: 11\n         line 148: 18\n@@ -480,49 +480,49 @@\n \n   private long readCachedBits(int);\n     descriptor: (I)J\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;\n-         4: getstatic     #24                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+         1: getfield      #18                 // Field byteOrder:Ljava/nio/ByteOrder;\n+         4: getstatic     #68                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n          7: if_acmpne     34\n         10: aload_0\n-        11: getfield      #7                  // Field bitsCached:J\n-        14: getstatic     #25                 // Field MASKS:[J\n+        11: getfield      #25                 // Field bitsCached:J\n+        14: getstatic     #73                 // Field MASKS:[J\n         17: iload_1\n         18: laload\n         19: land\n         20: lstore_2\n         21: aload_0\n         22: dup\n-        23: getfield      #7                  // Field bitsCached:J\n+        23: getfield      #25                 // Field bitsCached:J\n         26: iload_1\n         27: lushr\n-        28: putfield      #7                  // Field bitsCached:J\n+        28: putfield      #25                 // Field bitsCached:J\n         31: goto          52\n         34: aload_0\n-        35: getfield      #7                  // Field bitsCached:J\n+        35: getfield      #25                 // Field bitsCached:J\n         38: aload_0\n-        39: getfield      #8                  // Field bitsCachedSize:I\n+        39: getfield      #29                 // Field bitsCachedSize:I\n         42: iload_1\n         43: isub\n         44: lshr\n-        45: getstatic     #25                 // Field MASKS:[J\n+        45: getstatic     #73                 // Field MASKS:[J\n         48: iload_1\n         49: laload\n         50: land\n         51: lstore_2\n         52: aload_0\n         53: dup\n-        54: getfield      #8                  // Field bitsCachedSize:I\n+        54: getfield      #29                 // Field bitsCachedSize:I\n         57: iload_1\n         58: isub\n-        59: putfield      #8                  // Field bitsCachedSize:I\n+        59: putfield      #29                 // Field bitsCachedSize:I\n         62: lload_2\n         63: lreturn\n       LineNumberTable:\n         line 170: 0\n         line 171: 10\n         line 172: 21\n         line 174: 34\n@@ -542,64 +542,64 @@\n \n   private boolean ensureCache(int) throws java.io.IOException;\n     descriptor: (I)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=4, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field bitsCachedSize:I\n+         1: getfield      #29                 // Field bitsCachedSize:I\n          4: iload_1\n          5: if_icmpge     97\n          8: aload_0\n-         9: getfield      #8                  // Field bitsCachedSize:I\n+         9: getfield      #29                 // Field bitsCachedSize:I\n         12: bipush        57\n         14: if_icmpge     97\n         17: aload_0\n-        18: getfield      #4                  // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-        21: invokevirtual #23                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+        18: getfield      #12                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        21: invokevirtual #65                 // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n         24: i2l\n         25: lstore_2\n         26: lload_2\n         27: lconst_0\n         28: lcmp\n         29: ifge          34\n         32: iconst_1\n         33: ireturn\n         34: aload_0\n-        35: getfield      #5                  // Field byteOrder:Ljava/nio/ByteOrder;\n-        38: getstatic     #24                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+        35: getfield      #18                 // Field byteOrder:Ljava/nio/ByteOrder;\n+        38: getstatic     #68                 // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n         41: if_acmpne     62\n         44: aload_0\n         45: dup\n-        46: getfield      #7                  // Field bitsCached:J\n+        46: getfield      #25                 // Field bitsCached:J\n         49: lload_2\n         50: aload_0\n-        51: getfield      #8                  // Field bitsCachedSize:I\n+        51: getfield      #29                 // Field bitsCachedSize:I\n         54: lshl\n         55: lor\n-        56: putfield      #7                  // Field bitsCached:J\n+        56: putfield      #25                 // Field bitsCached:J\n         59: goto          83\n         62: aload_0\n         63: dup\n-        64: getfield      #7                  // Field bitsCached:J\n+        64: getfield      #25                 // Field bitsCached:J\n         67: bipush        8\n         69: lshl\n-        70: putfield      #7                  // Field bitsCached:J\n+        70: putfield      #25                 // Field bitsCached:J\n         73: aload_0\n         74: dup\n-        75: getfield      #7                  // Field bitsCached:J\n+        75: getfield      #25                 // Field bitsCached:J\n         78: lload_2\n         79: lor\n-        80: putfield      #7                  // Field bitsCached:J\n+        80: putfield      #25                 // Field bitsCached:J\n         83: aload_0\n         84: dup\n-        85: getfield      #8                  // Field bitsCachedSize:I\n+        85: getfield      #29                 // Field bitsCachedSize:I\n         88: bipush        8\n         90: iadd\n-        91: putfield      #8                  // Field bitsCachedSize:I\n+        91: putfield      #29                 // Field bitsCachedSize:I\n         94: goto          0\n         97: iconst_0\n         98: ireturn\n       LineNumberTable:\n         line 187: 0\n         line 188: 17\n         line 189: 26\n@@ -631,23 +631,23 @@\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=6, locals=1, args_size=0\n          0: bipush        64\n          2: newarray       long\n-         4: putstatic     #25                 // Field MASKS:[J\n+         4: putstatic     #73                 // Field MASKS:[J\n          7: iconst_1\n          8: istore_0\n          9: iload_0\n         10: bipush        63\n         12: if_icmpgt     37\n-        15: getstatic     #25                 // Field MASKS:[J\n+        15: getstatic     #73                 // Field MASKS:[J\n         18: iload_0\n-        19: getstatic     #25                 // Field MASKS:[J\n+        19: getstatic     #73                 // Field MASKS:[J\n         22: iload_0\n         23: iconst_1\n         24: isub\n         25: laload\n         26: iconst_1\n         27: lshl\n         28: lconst_1\n"}]}
