{"diffoscope-json-version": 1, "source1": "first/XmlStreamWriter.class", "source2": "second/XmlStreamWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,208 +1,208 @@\n-  SHA-256 checksum be985b426bbfb2b78283fbcdea42cf88e92623fa57026fc837d06460ed9f3363\n+  SHA-256 checksum 71f7b6867c8e92d2b19625787a6b9a04ea5dcf926f8597e7d320e10aeea5a600\n   Compiled from \"XmlStreamWriter.java\"\n public class org.apache.commons.io.output.XmlStreamWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #12                         // org/apache/commons/io/output/XmlStreamWriter\n-  super_class: #49                        // java/io/Writer\n+  this_class: #4                          // org/apache/commons/io/output/XmlStreamWriter\n+  super_class: #32                        // java/io/Writer\n   interfaces: 0, fields: 6, methods: 13, attributes: 2\n Constant pool:\n-    #1 = Class              #97           // org/apache/commons/io/IOUtils\n-    #2 = Methodref          #12.#98       // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-    #3 = Class              #99           // org/apache/commons/io/output/XmlStreamWriter$Builder\n-    #4 = Methodref          #3.#100       // org/apache/commons/io/output/XmlStreamWriter$Builder.\"<init>\":()V\n-    #5 = Methodref          #12.#101      // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-    #6 = Class              #102          // java/io/FileOutputStream\n-    #7 = Methodref          #6.#103       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n-    #8 = Methodref          #12.#104      // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-    #9 = Fieldref           #105.#106     // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #10 = Methodref          #49.#100      // java/io/Writer.\"<init>\":()V\n-   #11 = Class              #107          // java/io/StringWriter\n-   #12 = Class              #108          // org/apache/commons/io/output/XmlStreamWriter\n-   #13 = Methodref          #11.#109      // java/io/StringWriter.\"<init>\":(I)V\n-   #14 = Fieldref           #12.#110      // org/apache/commons/io/output/XmlStreamWriter.prologWriter:Ljava/io/StringWriter;\n-   #15 = Fieldref           #12.#111      // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;\n-   #16 = Methodref          #112.#113     // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #17 = Class              #114          // java/nio/charset/Charset\n-   #18 = Fieldref           #12.#115      // org/apache/commons/io/output/XmlStreamWriter.defaultCharset:Ljava/nio/charset/Charset;\n-   #19 = Methodref          #116.#117     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #20 = Fieldref           #12.#118      // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;\n-   #21 = Fieldref           #12.#119      // org/apache/commons/io/output/XmlStreamWriter.charset:Ljava/nio/charset/Charset;\n-   #22 = Class              #120          // java/io/OutputStreamWriter\n-   #23 = Methodref          #22.#98       // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #24 = Methodref          #11.#121      // java/io/StringWriter.toString:()Ljava/lang/String;\n-   #25 = Methodref          #49.#122      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #26 = Methodref          #49.#123      // java/io/Writer.close:()V\n-   #27 = Methodref          #11.#124      // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n-   #28 = Methodref          #87.#125      // java/lang/StringBuffer.length:()I\n-   #29 = Methodref          #11.#126      // java/io/StringWriter.write:([CII)V\n-   #30 = Methodref          #87.#127      // java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-   #31 = String             #128          // <?xml\n-   #32 = Methodref          #129.#130     // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #33 = String             #131          // ?>\n-   #34 = Methodref          #87.#132      // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n-   #35 = Fieldref           #133.#134     // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-   #36 = Methodref          #135.#136     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #37 = Methodref          #88.#137      // java/util/regex/Matcher.find:()Z\n-   #38 = Methodref          #88.#138      // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #39 = Fieldref           #139.#140     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #40 = Methodref          #129.#141     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #41 = Methodref          #129.#125     // java/lang/String.length:()I\n-   #42 = Methodref          #129.#127     // java/lang/String.substring:(II)Ljava/lang/String;\n-   #43 = Methodref          #17.#142      // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #44 = Methodref          #87.#121      // java/lang/StringBuffer.toString:()Ljava/lang/String;\n-   #45 = Methodref          #49.#126      // java/io/Writer.write:([CII)V\n-   #46 = Methodref          #49.#143      // java/io/Writer.flush:()V\n-   #47 = Methodref          #17.#144      // java/nio/charset/Charset.name:()Ljava/lang/String;\n-   #48 = Methodref          #12.#145      // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V\n-   #49 = Class              #146          // java/io/Writer\n-   #50 = Class              #147          // org/apache/commons/io/output/XmlStreamWriter$1\n-   #51 = Utf8               InnerClasses\n-   #52 = Utf8               Builder\n-   #53 = Utf8               BUFFER_SIZE\n-   #54 = Utf8               I\n-   #55 = Utf8               ConstantValue\n-   #56 = Integer            8192\n-   #57 = Utf8               out\n-   #58 = Utf8               Ljava/io/OutputStream;\n-   #59 = Utf8               defaultCharset\n-   #60 = Utf8               Ljava/nio/charset/Charset;\n-   #61 = Utf8               prologWriter\n-   #62 = Utf8               Ljava/io/StringWriter;\n-   #63 = Utf8               writer\n-   #64 = Utf8               Ljava/io/Writer;\n-   #65 = Utf8               charset\n-   #66 = Utf8               builder\n-   #67 = Utf8               ()Lorg/apache/commons/io/output/XmlStreamWriter$Builder;\n-   #68 = Utf8               Code\n-   #69 = Utf8               LineNumberTable\n-   #70 = Utf8               <init>\n-   #71 = Utf8               (Ljava/io/File;)V\n-   #72 = Utf8               Exceptions\n-   #73 = Class              #148          // java/io/FileNotFoundException\n-   #74 = Utf8               Deprecated\n-   #75 = Utf8               RuntimeVisibleAnnotations\n-   #76 = Utf8               Ljava/lang/Deprecated;\n-   #77 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #78 = Utf8               (Ljava/io/OutputStream;)V\n-   #79 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #80 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n-   #81 = Utf8               close\n-   #82 = Utf8               ()V\n-   #83 = Utf8               StackMapTable\n-   #84 = Class              #149          // java/io/IOException\n-   #85 = Utf8               detectEncoding\n-   #86 = Utf8               ([CII)V\n-   #87 = Class              #150          // java/lang/StringBuffer\n-   #88 = Class              #151          // java/util/regex/Matcher\n-   #89 = Utf8               flush\n-   #90 = Utf8               getDefaultEncoding\n-   #91 = Utf8               ()Ljava/lang/String;\n-   #92 = Utf8               getEncoding\n-   #93 = Utf8               write\n-   #94 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/io/output/XmlStreamWriter$1;)V\n-   #95 = Utf8               SourceFile\n-   #96 = Utf8               XmlStreamWriter.java\n-   #97 = Utf8               org/apache/commons/io/IOUtils\n-   #98 = NameAndType        #70:#79       // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #99 = Utf8               org/apache/commons/io/output/XmlStreamWriter$Builder\n-  #100 = NameAndType        #70:#82       // \"<init>\":()V\n-  #101 = NameAndType        #70:#77       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #102 = Utf8               java/io/FileOutputStream\n-  #103 = NameAndType        #70:#71       // \"<init>\":(Ljava/io/File;)V\n-  #104 = NameAndType        #70:#80       // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n-  #105 = Class              #152          // java/nio/charset/StandardCharsets\n-  #106 = NameAndType        #153:#60      // UTF_8:Ljava/nio/charset/Charset;\n-  #107 = Utf8               java/io/StringWriter\n-  #108 = Utf8               org/apache/commons/io/output/XmlStreamWriter\n-  #109 = NameAndType        #70:#154      // \"<init>\":(I)V\n-  #110 = NameAndType        #61:#62       // prologWriter:Ljava/io/StringWriter;\n-  #111 = NameAndType        #57:#58       // out:Ljava/io/OutputStream;\n-  #112 = Class              #155          // java/util/Objects\n-  #113 = NameAndType        #156:#157     // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #114 = Utf8               java/nio/charset/Charset\n-  #115 = NameAndType        #59:#60       // defaultCharset:Ljava/nio/charset/Charset;\n-  #116 = Class              #158          // org/apache/commons/io/Charsets\n-  #117 = NameAndType        #159:#160     // toCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #118 = NameAndType        #63:#64       // writer:Ljava/io/Writer;\n-  #119 = NameAndType        #65:#60       // charset:Ljava/nio/charset/Charset;\n-  #120 = Utf8               java/io/OutputStreamWriter\n-  #121 = NameAndType        #161:#91      // toString:()Ljava/lang/String;\n-  #122 = NameAndType        #93:#162      // write:(Ljava/lang/String;)V\n-  #123 = NameAndType        #81:#82       // close:()V\n-  #124 = NameAndType        #163:#164     // getBuffer:()Ljava/lang/StringBuffer;\n-  #125 = NameAndType        #165:#166     // length:()I\n-  #126 = NameAndType        #93:#86       // write:([CII)V\n-  #127 = NameAndType        #167:#168     // substring:(II)Ljava/lang/String;\n-  #128 = Utf8               <?xml\n-  #129 = Class              #169          // java/lang/String\n-  #130 = NameAndType        #170:#171     // equals:(Ljava/lang/Object;)Z\n-  #131 = Utf8               ?>\n-  #132 = NameAndType        #172:#173     // indexOf:(Ljava/lang/String;)I\n-  #133 = Class              #174          // org/apache/commons/io/input/XmlStreamReader\n-  #134 = NameAndType        #175:#176     // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n-  #135 = Class              #177          // java/util/regex/Pattern\n-  #136 = NameAndType        #178:#179     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #137 = NameAndType        #180:#181     // find:()Z\n-  #138 = NameAndType        #182:#183     // group:(I)Ljava/lang/String;\n-  #139 = Class              #184          // java/util/Locale\n-  #140 = NameAndType        #185:#186     // ROOT:Ljava/util/Locale;\n-  #141 = NameAndType        #187:#188     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #142 = NameAndType        #189:#190     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #143 = NameAndType        #89:#82       // flush:()V\n-  #144 = NameAndType        #191:#91      // name:()Ljava/lang/String;\n-  #145 = NameAndType        #85:#86       // detectEncoding:([CII)V\n-  #146 = Utf8               java/io/Writer\n-  #147 = Utf8               org/apache/commons/io/output/XmlStreamWriter$1\n-  #148 = Utf8               java/io/FileNotFoundException\n-  #149 = Utf8               java/io/IOException\n-  #150 = Utf8               java/lang/StringBuffer\n-  #151 = Utf8               java/util/regex/Matcher\n-  #152 = Utf8               java/nio/charset/StandardCharsets\n-  #153 = Utf8               UTF_8\n-  #154 = Utf8               (I)V\n-  #155 = Utf8               java/util/Objects\n-  #156 = Utf8               requireNonNull\n-  #157 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #158 = Utf8               org/apache/commons/io/Charsets\n-  #159 = Utf8               toCharset\n-  #160 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #161 = Utf8               toString\n-  #162 = Utf8               (Ljava/lang/String;)V\n-  #163 = Utf8               getBuffer\n-  #164 = Utf8               ()Ljava/lang/StringBuffer;\n-  #165 = Utf8               length\n-  #166 = Utf8               ()I\n-  #167 = Utf8               substring\n-  #168 = Utf8               (II)Ljava/lang/String;\n-  #169 = Utf8               java/lang/String\n-  #170 = Utf8               equals\n-  #171 = Utf8               (Ljava/lang/Object;)Z\n-  #172 = Utf8               indexOf\n-  #173 = Utf8               (Ljava/lang/String;)I\n-  #174 = Utf8               org/apache/commons/io/input/XmlStreamReader\n-  #175 = Utf8               ENCODING_PATTERN\n-  #176 = Utf8               Ljava/util/regex/Pattern;\n-  #177 = Utf8               java/util/regex/Pattern\n-  #178 = Utf8               matcher\n-  #179 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #180 = Utf8               find\n-  #181 = Utf8               ()Z\n-  #182 = Utf8               group\n-  #183 = Utf8               (I)Ljava/lang/String;\n-  #184 = Utf8               java/util/Locale\n-  #185 = Utf8               ROOT\n-  #186 = Utf8               Ljava/util/Locale;\n-  #187 = Utf8               toUpperCase\n-  #188 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #189 = Utf8               forName\n-  #190 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #191 = Utf8               name\n+    #1 = Class              #2            // org/apache/commons/io/IOUtils\n+    #2 = Utf8               org/apache/commons/io/IOUtils\n+    #3 = Methodref          #4.#5         // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+    #4 = Class              #6            // org/apache/commons/io/output/XmlStreamWriter\n+    #5 = NameAndType        #7:#8         // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+    #6 = Utf8               org/apache/commons/io/output/XmlStreamWriter\n+    #7 = Utf8               <init>\n+    #8 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+    #9 = Class              #10           // org/apache/commons/io/output/XmlStreamWriter$Builder\n+   #10 = Utf8               org/apache/commons/io/output/XmlStreamWriter$Builder\n+   #11 = Methodref          #9.#12        // org/apache/commons/io/output/XmlStreamWriter$Builder.\"<init>\":()V\n+   #12 = NameAndType        #7:#13        // \"<init>\":()V\n+   #13 = Utf8               ()V\n+   #14 = Methodref          #4.#15        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #15 = NameAndType        #7:#16        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #16 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #17 = Class              #18           // java/io/FileOutputStream\n+   #18 = Utf8               java/io/FileOutputStream\n+   #19 = Methodref          #17.#20       // java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+   #20 = NameAndType        #7:#21        // \"<init>\":(Ljava/io/File;)V\n+   #21 = Utf8               (Ljava/io/File;)V\n+   #22 = Methodref          #4.#23        // org/apache/commons/io/output/XmlStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #23 = NameAndType        #7:#24        // \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #24 = Utf8               (Ljava/io/OutputStream;Ljava/lang/String;)V\n+   #25 = Fieldref           #26.#27       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #26 = Class              #28           // java/nio/charset/StandardCharsets\n+   #27 = NameAndType        #29:#30       // UTF_8:Ljava/nio/charset/Charset;\n+   #28 = Utf8               java/nio/charset/StandardCharsets\n+   #29 = Utf8               UTF_8\n+   #30 = Utf8               Ljava/nio/charset/Charset;\n+   #31 = Methodref          #32.#12       // java/io/Writer.\"<init>\":()V\n+   #32 = Class              #33           // java/io/Writer\n+   #33 = Utf8               java/io/Writer\n+   #34 = Class              #35           // java/io/StringWriter\n+   #35 = Utf8               java/io/StringWriter\n+   #36 = Methodref          #34.#37       // java/io/StringWriter.\"<init>\":(I)V\n+   #37 = NameAndType        #7:#38        // \"<init>\":(I)V\n+   #38 = Utf8               (I)V\n+   #39 = Fieldref           #4.#40        // org/apache/commons/io/output/XmlStreamWriter.prologWriter:Ljava/io/StringWriter;\n+   #40 = NameAndType        #41:#42       // prologWriter:Ljava/io/StringWriter;\n+   #41 = Utf8               prologWriter\n+   #42 = Utf8               Ljava/io/StringWriter;\n+   #43 = Fieldref           #4.#44        // org/apache/commons/io/output/XmlStreamWriter.out:Ljava/io/OutputStream;\n+   #44 = NameAndType        #45:#46       // out:Ljava/io/OutputStream;\n+   #45 = Utf8               out\n+   #46 = Utf8               Ljava/io/OutputStream;\n+   #47 = Methodref          #48.#49       // java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #48 = Class              #50           // java/util/Objects\n+   #49 = NameAndType        #51:#52       // requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #50 = Utf8               java/util/Objects\n+   #51 = Utf8               requireNonNull\n+   #52 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+   #53 = Class              #54           // java/nio/charset/Charset\n+   #54 = Utf8               java/nio/charset/Charset\n+   #55 = Fieldref           #4.#56        // org/apache/commons/io/output/XmlStreamWriter.defaultCharset:Ljava/nio/charset/Charset;\n+   #56 = NameAndType        #57:#30       // defaultCharset:Ljava/nio/charset/Charset;\n+   #57 = Utf8               defaultCharset\n+   #58 = Methodref          #59.#60       // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #59 = Class              #61           // org/apache/commons/io/Charsets\n+   #60 = NameAndType        #62:#63       // toCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #61 = Utf8               org/apache/commons/io/Charsets\n+   #62 = Utf8               toCharset\n+   #63 = Utf8               (Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+   #64 = Fieldref           #4.#65        // org/apache/commons/io/output/XmlStreamWriter.writer:Ljava/io/Writer;\n+   #65 = NameAndType        #66:#67       // writer:Ljava/io/Writer;\n+   #66 = Utf8               writer\n+   #67 = Utf8               Ljava/io/Writer;\n+   #68 = Fieldref           #4.#69        // org/apache/commons/io/output/XmlStreamWriter.charset:Ljava/nio/charset/Charset;\n+   #69 = NameAndType        #70:#30       // charset:Ljava/nio/charset/Charset;\n+   #70 = Utf8               charset\n+   #71 = Class              #72           // java/io/OutputStreamWriter\n+   #72 = Utf8               java/io/OutputStreamWriter\n+   #73 = Methodref          #71.#5        // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+   #74 = Methodref          #34.#75       // java/io/StringWriter.toString:()Ljava/lang/String;\n+   #75 = NameAndType        #76:#77       // toString:()Ljava/lang/String;\n+   #76 = Utf8               toString\n+   #77 = Utf8               ()Ljava/lang/String;\n+   #78 = Methodref          #32.#79       // java/io/Writer.write:(Ljava/lang/String;)V\n+   #79 = NameAndType        #80:#81       // write:(Ljava/lang/String;)V\n+   #80 = Utf8               write\n+   #81 = Utf8               (Ljava/lang/String;)V\n+   #82 = Methodref          #32.#83       // java/io/Writer.close:()V\n+   #83 = NameAndType        #84:#13       // close:()V\n+   #84 = Utf8               close\n+   #85 = Methodref          #34.#86       // java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+   #86 = NameAndType        #87:#88       // getBuffer:()Ljava/lang/StringBuffer;\n+   #87 = Utf8               getBuffer\n+   #88 = Utf8               ()Ljava/lang/StringBuffer;\n+   #89 = Methodref          #90.#91       // java/lang/StringBuffer.length:()I\n+   #90 = Class              #92           // java/lang/StringBuffer\n+   #91 = NameAndType        #93:#94       // length:()I\n+   #92 = Utf8               java/lang/StringBuffer\n+   #93 = Utf8               length\n+   #94 = Utf8               ()I\n+   #95 = Methodref          #34.#96       // java/io/StringWriter.write:([CII)V\n+   #96 = NameAndType        #80:#97       // write:([CII)V\n+   #97 = Utf8               ([CII)V\n+   #98 = Methodref          #90.#99       // java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+   #99 = NameAndType        #100:#101     // substring:(II)Ljava/lang/String;\n+  #100 = Utf8               substring\n+  #101 = Utf8               (II)Ljava/lang/String;\n+  #102 = String             #103          // <?xml\n+  #103 = Utf8               <?xml\n+  #104 = Methodref          #105.#106     // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #105 = Class              #107          // java/lang/String\n+  #106 = NameAndType        #108:#109     // equals:(Ljava/lang/Object;)Z\n+  #107 = Utf8               java/lang/String\n+  #108 = Utf8               equals\n+  #109 = Utf8               (Ljava/lang/Object;)Z\n+  #110 = String             #111          // ?>\n+  #111 = Utf8               ?>\n+  #112 = Methodref          #90.#113      // java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n+  #113 = NameAndType        #114:#115     // indexOf:(Ljava/lang/String;)I\n+  #114 = Utf8               indexOf\n+  #115 = Utf8               (Ljava/lang/String;)I\n+  #116 = Fieldref           #117.#118     // org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #117 = Class              #119          // org/apache/commons/io/input/XmlStreamReader\n+  #118 = NameAndType        #120:#121     // ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+  #119 = Utf8               org/apache/commons/io/input/XmlStreamReader\n+  #120 = Utf8               ENCODING_PATTERN\n+  #121 = Utf8               Ljava/util/regex/Pattern;\n+  #122 = Methodref          #123.#124     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #123 = Class              #125          // java/util/regex/Pattern\n+  #124 = NameAndType        #126:#127     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #125 = Utf8               java/util/regex/Pattern\n+  #126 = Utf8               matcher\n+  #127 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #128 = Methodref          #129.#130     // java/util/regex/Matcher.find:()Z\n+  #129 = Class              #131          // java/util/regex/Matcher\n+  #130 = NameAndType        #132:#133     // find:()Z\n+  #131 = Utf8               java/util/regex/Matcher\n+  #132 = Utf8               find\n+  #133 = Utf8               ()Z\n+  #134 = Methodref          #129.#135     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+  #135 = NameAndType        #136:#137     // group:(I)Ljava/lang/String;\n+  #136 = Utf8               group\n+  #137 = Utf8               (I)Ljava/lang/String;\n+  #138 = Fieldref           #139.#140     // java/util/Locale.ROOT:Ljava/util/Locale;\n+  #139 = Class              #141          // java/util/Locale\n+  #140 = NameAndType        #142:#143     // ROOT:Ljava/util/Locale;\n+  #141 = Utf8               java/util/Locale\n+  #142 = Utf8               ROOT\n+  #143 = Utf8               Ljava/util/Locale;\n+  #144 = Methodref          #105.#145     // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #145 = NameAndType        #146:#147     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #146 = Utf8               toUpperCase\n+  #147 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #148 = Methodref          #105.#91      // java/lang/String.length:()I\n+  #149 = Methodref          #105.#99      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #150 = Methodref          #53.#151      // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #151 = NameAndType        #152:#153     // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #152 = Utf8               forName\n+  #153 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #154 = Methodref          #90.#75       // java/lang/StringBuffer.toString:()Ljava/lang/String;\n+  #155 = Methodref          #32.#96       // java/io/Writer.write:([CII)V\n+  #156 = Methodref          #32.#157      // java/io/Writer.flush:()V\n+  #157 = NameAndType        #158:#13      // flush:()V\n+  #158 = Utf8               flush\n+  #159 = Methodref          #53.#160      // java/nio/charset/Charset.name:()Ljava/lang/String;\n+  #160 = NameAndType        #161:#77      // name:()Ljava/lang/String;\n+  #161 = Utf8               name\n+  #162 = Methodref          #4.#163       // org/apache/commons/io/output/XmlStreamWriter.detectEncoding:([CII)V\n+  #163 = NameAndType        #164:#97      // detectEncoding:([CII)V\n+  #164 = Utf8               detectEncoding\n+  #165 = Utf8               BUFFER_SIZE\n+  #166 = Utf8               I\n+  #167 = Utf8               ConstantValue\n+  #168 = Integer            8192\n+  #169 = Utf8               builder\n+  #170 = Utf8               ()Lorg/apache/commons/io/output/XmlStreamWriter$Builder;\n+  #171 = Utf8               Code\n+  #172 = Utf8               LineNumberTable\n+  #173 = Utf8               Exceptions\n+  #174 = Class              #175          // java/io/FileNotFoundException\n+  #175 = Utf8               java/io/FileNotFoundException\n+  #176 = Utf8               Deprecated\n+  #177 = Utf8               RuntimeVisibleAnnotations\n+  #178 = Utf8               Ljava/lang/Deprecated;\n+  #179 = Utf8               (Ljava/io/OutputStream;)V\n+  #180 = Utf8               StackMapTable\n+  #181 = Class              #182          // java/io/IOException\n+  #182 = Utf8               java/io/IOException\n+  #183 = Utf8               getDefaultEncoding\n+  #184 = Utf8               getEncoding\n+  #185 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/io/output/XmlStreamWriter$1;)V\n+  #186 = Utf8               SourceFile\n+  #187 = Utf8               XmlStreamWriter.java\n+  #188 = Utf8               InnerClasses\n+  #189 = Utf8               Builder\n+  #190 = Class              #191          // org/apache/commons/io/output/XmlStreamWriter$1\n+  #191 = Utf8               org/apache/commons/io/output/XmlStreamWriter$1\n {\n   private static final int BUFFER_SIZE = 8192;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 8192\n \n   private final java.io.OutputStream out;\n@@ -226,103 +226,103 @@\n     flags: (0x0002) ACC_PRIVATE\n \n   public static org.apache.commons.io.output.XmlStreamWriter$Builder builder();\n     descriptor: ()Lorg/apache/commons/io/output/XmlStreamWriter$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: new           #3                  // class org/apache/commons/io/output/XmlStreamWriter$Builder\n+         0: new           #9                  // class org/apache/commons/io/output/XmlStreamWriter$Builder\n          3: dup\n-         4: invokespecial #4                  // Method org/apache/commons/io/output/XmlStreamWriter$Builder.\"<init>\":()V\n+         4: invokespecial #11                 // Method org/apache/commons/io/output/XmlStreamWriter$Builder.\"<init>\":()V\n          7: areturn\n       LineNumberTable:\n         line 90: 0\n \n   public org.apache.commons.io.output.XmlStreamWriter(java.io.File) throws java.io.FileNotFoundException;\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: aconst_null\n-         3: invokespecial #5                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+         3: invokespecial #14                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n          6: return\n       LineNumberTable:\n         line 114: 0\n         line 115: 6\n     Exceptions:\n       throws java.io.FileNotFoundException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #76()\n+      0: #178()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.XmlStreamWriter(java.io.File, java.lang.String) throws java.io.FileNotFoundException;\n     descriptor: (Ljava/io/File;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: new           #6                  // class java/io/FileOutputStream\n+         1: new           #17                 // class java/io/FileOutputStream\n          4: dup\n          5: aload_1\n-         6: invokespecial #7                  // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n+         6: invokespecial #19                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/io/File;)V\n          9: aload_2\n-        10: invokespecial #8                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n+        10: invokespecial #22                 // Method \"<init>\":(Ljava/io/OutputStream;Ljava/lang/String;)V\n         13: return\n       LineNumberTable:\n         line 130: 0\n         line 131: 13\n     Exceptions:\n       throws java.io.FileNotFoundException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #76()\n+      0: #178()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream);\n     descriptor: (Ljava/io/OutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-         5: invokespecial #2                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+         2: getstatic     #25                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+         5: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n          8: return\n       LineNumberTable:\n         line 142: 0\n         line 143: 8\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #76()\n+      0: #178()\n         java.lang.Deprecated\n \n   private org.apache.commons.io.output.XmlStreamWriter(java.io.OutputStream, java.nio.charset.Charset);\n     descriptor: (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #10                 // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #31                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_0\n-         5: new           #11                 // class java/io/StringWriter\n+         5: new           #34                 // class java/io/StringWriter\n          8: dup\n          9: sipush        8192\n-        12: invokespecial #13                 // Method java/io/StringWriter.\"<init>\":(I)V\n-        15: putfield      #14                 // Field prologWriter:Ljava/io/StringWriter;\n+        12: invokespecial #36                 // Method java/io/StringWriter.\"<init>\":(I)V\n+        15: putfield      #39                 // Field prologWriter:Ljava/io/StringWriter;\n         18: aload_0\n         19: aload_1\n-        20: putfield      #15                 // Field out:Ljava/io/OutputStream;\n+        20: putfield      #43                 // Field out:Ljava/io/OutputStream;\n         23: aload_0\n         24: aload_2\n-        25: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n-        28: checkcast     #17                 // class java/nio/charset/Charset\n-        31: putfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;\n+        25: invokestatic  #47                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;\n+        28: checkcast     #53                 // class java/nio/charset/Charset\n+        31: putfield      #55                 // Field defaultCharset:Ljava/nio/charset/Charset;\n         34: return\n       LineNumberTable:\n         line 152: 0\n         line 97: 4\n         line 153: 18\n         line 154: 23\n         line 155: 34\n@@ -331,56 +331,56 @@\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: getstatic     #9                  // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-         6: invokestatic  #19                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-         9: invokespecial #2                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+         3: getstatic     #25                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+         6: invokestatic  #58                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+         9: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         12: return\n       LineNumberTable:\n         line 167: 0\n         line 168: 12\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #76()\n+      0: #178()\n         java.lang.Deprecated\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field writer:Ljava/io/Writer;\n+         1: getfield      #64                 // Field writer:Ljava/io/Writer;\n          4: ifnonnull     48\n          7: aload_0\n          8: aload_0\n-         9: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;\n-        12: putfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n+         9: getfield      #55                 // Field defaultCharset:Ljava/nio/charset/Charset;\n+        12: putfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n         15: aload_0\n-        16: new           #22                 // class java/io/OutputStreamWriter\n+        16: new           #71                 // class java/io/OutputStreamWriter\n         19: dup\n         20: aload_0\n-        21: getfield      #15                 // Field out:Ljava/io/OutputStream;\n+        21: getfield      #43                 // Field out:Ljava/io/OutputStream;\n         24: aload_0\n-        25: getfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n-        28: invokespecial #23                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-        31: putfield      #20                 // Field writer:Ljava/io/Writer;\n+        25: getfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n+        28: invokespecial #73                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        31: putfield      #64                 // Field writer:Ljava/io/Writer;\n         34: aload_0\n-        35: getfield      #20                 // Field writer:Ljava/io/Writer;\n+        35: getfield      #64                 // Field writer:Ljava/io/Writer;\n         38: aload_0\n-        39: getfield      #14                 // Field prologWriter:Ljava/io/StringWriter;\n-        42: invokevirtual #24                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n-        45: invokevirtual #25                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        39: getfield      #39                 // Field prologWriter:Ljava/io/StringWriter;\n+        42: invokevirtual #74                 // Method java/io/StringWriter.toString:()Ljava/lang/String;\n+        45: invokevirtual #78                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n         48: aload_0\n-        49: getfield      #20                 // Field writer:Ljava/io/Writer;\n-        52: invokevirtual #26                 // Method java/io/Writer.close:()V\n+        49: getfield      #64                 // Field writer:Ljava/io/Writer;\n+        52: invokevirtual #82                 // Method java/io/Writer.close:()V\n         55: return\n       LineNumberTable:\n         line 177: 0\n         line 178: 7\n         line 179: 15\n         line 180: 34\n         line 182: 48\n@@ -394,129 +394,129 @@\n     descriptor: ([CII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=9, args_size=4\n          0: iload_3\n          1: istore        4\n          3: aload_0\n-         4: getfield      #14                 // Field prologWriter:Ljava/io/StringWriter;\n-         7: invokevirtual #27                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n+         4: getfield      #39                 // Field prologWriter:Ljava/io/StringWriter;\n+         7: invokevirtual #85                 // Method java/io/StringWriter.getBuffer:()Ljava/lang/StringBuffer;\n         10: astore        5\n         12: aload         5\n-        14: invokevirtual #28                 // Method java/lang/StringBuffer.length:()I\n+        14: invokevirtual #89                 // Method java/lang/StringBuffer.length:()I\n         17: iload_3\n         18: iadd\n         19: sipush        8192\n         22: if_icmple     36\n         25: sipush        8192\n         28: aload         5\n-        30: invokevirtual #28                 // Method java/lang/StringBuffer.length:()I\n+        30: invokevirtual #89                 // Method java/lang/StringBuffer.length:()I\n         33: isub\n         34: istore        4\n         36: aload_0\n-        37: getfield      #14                 // Field prologWriter:Ljava/io/StringWriter;\n+        37: getfield      #39                 // Field prologWriter:Ljava/io/StringWriter;\n         40: aload_1\n         41: iload_2\n         42: iload         4\n-        44: invokevirtual #29                 // Method java/io/StringWriter.write:([CII)V\n+        44: invokevirtual #95                 // Method java/io/StringWriter.write:([CII)V\n         47: aload         5\n-        49: invokevirtual #28                 // Method java/lang/StringBuffer.length:()I\n+        49: invokevirtual #89                 // Method java/lang/StringBuffer.length:()I\n         52: iconst_5\n         53: if_icmplt     252\n         56: aload         5\n         58: iconst_0\n         59: iconst_5\n-        60: invokevirtual #30                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-        63: ldc           #31                 // String <?xml\n-        65: invokevirtual #32                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        60: invokevirtual #98                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+        63: ldc           #102                // String <?xml\n+        65: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         68: ifeq          179\n         71: aload         5\n-        73: ldc           #33                 // String ?>\n-        75: invokevirtual #34                 // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n+        73: ldc           #110                // String ?>\n+        75: invokevirtual #112                // Method java/lang/StringBuffer.indexOf:(Ljava/lang/String;)I\n         78: istore        6\n         80: iload         6\n         82: ifle          157\n-        85: getstatic     #35                 // Field org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n+        85: getstatic     #116                // Field org/apache/commons/io/input/XmlStreamReader.ENCODING_PATTERN:Ljava/util/regex/Pattern;\n         88: aload         5\n         90: iconst_0\n         91: iload         6\n-        93: invokevirtual #30                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n-        96: invokevirtual #36                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        93: invokevirtual #98                 // Method java/lang/StringBuffer.substring:(II)Ljava/lang/String;\n+        96: invokevirtual #122                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n         99: astore        7\n        101: aload         7\n-       103: invokevirtual #37                 // Method java/util/regex/Matcher.find:()Z\n+       103: invokevirtual #128                // Method java/util/regex/Matcher.find:()Z\n        106: ifeq          146\n        109: aload         7\n        111: iconst_1\n-       112: invokevirtual #38                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-       115: getstatic     #39                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-       118: invokevirtual #40                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+       112: invokevirtual #134                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+       115: getstatic     #138                // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+       118: invokevirtual #144                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n        121: astore        8\n        123: aload_0\n        124: aload         8\n        126: iconst_1\n        127: aload         8\n-       129: invokevirtual #41                 // Method java/lang/String.length:()I\n+       129: invokevirtual #148                // Method java/lang/String.length:()I\n        132: iconst_1\n        133: isub\n-       134: invokevirtual #42                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n-       137: invokestatic  #43                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-       140: putfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n+       134: invokevirtual #149                // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       137: invokestatic  #150                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+       140: putfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n        143: goto          154\n        146: aload_0\n        147: aload_0\n-       148: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;\n-       151: putfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n+       148: getfield      #55                 // Field defaultCharset:Ljava/nio/charset/Charset;\n+       151: putfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n        154: goto          176\n        157: aload         5\n-       159: invokevirtual #28                 // Method java/lang/StringBuffer.length:()I\n+       159: invokevirtual #89                 // Method java/lang/StringBuffer.length:()I\n        162: sipush        8192\n        165: if_icmplt     176\n        168: aload_0\n        169: aload_0\n-       170: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;\n-       173: putfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n+       170: getfield      #55                 // Field defaultCharset:Ljava/nio/charset/Charset;\n+       173: putfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n        176: goto          187\n        179: aload_0\n        180: aload_0\n-       181: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;\n-       184: putfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n+       181: getfield      #55                 // Field defaultCharset:Ljava/nio/charset/Charset;\n+       184: putfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n        187: aload_0\n-       188: getfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n+       188: getfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n        191: ifnull        252\n        194: aload_0\n        195: aconst_null\n-       196: putfield      #14                 // Field prologWriter:Ljava/io/StringWriter;\n+       196: putfield      #39                 // Field prologWriter:Ljava/io/StringWriter;\n        199: aload_0\n-       200: new           #22                 // class java/io/OutputStreamWriter\n+       200: new           #71                 // class java/io/OutputStreamWriter\n        203: dup\n        204: aload_0\n-       205: getfield      #15                 // Field out:Ljava/io/OutputStream;\n+       205: getfield      #43                 // Field out:Ljava/io/OutputStream;\n        208: aload_0\n-       209: getfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n-       212: invokespecial #23                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-       215: putfield      #20                 // Field writer:Ljava/io/Writer;\n+       209: getfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n+       212: invokespecial #73                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+       215: putfield      #64                 // Field writer:Ljava/io/Writer;\n        218: aload_0\n-       219: getfield      #20                 // Field writer:Ljava/io/Writer;\n+       219: getfield      #64                 // Field writer:Ljava/io/Writer;\n        222: aload         5\n-       224: invokevirtual #44                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n-       227: invokevirtual #25                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+       224: invokevirtual #154                // Method java/lang/StringBuffer.toString:()Ljava/lang/String;\n+       227: invokevirtual #78                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n        230: iload_3\n        231: iload         4\n        233: if_icmple     252\n        236: aload_0\n-       237: getfield      #20                 // Field writer:Ljava/io/Writer;\n+       237: getfield      #64                 // Field writer:Ljava/io/Writer;\n        240: aload_1\n        241: iload_2\n        242: iload         4\n        244: iadd\n        245: iload_3\n        246: iload         4\n        248: isub\n-       249: invokevirtual #45                 // Method java/io/Writer.write:([CII)V\n+       249: invokevirtual #155                // Method java/io/Writer.write:([CII)V\n        252: return\n       LineNumberTable:\n         line 195: 0\n         line 196: 3\n         line 197: 12\n         line 198: 25\n         line 200: 36\n@@ -562,19 +562,19 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #20                 // Field writer:Ljava/io/Writer;\n+         1: getfield      #64                 // Field writer:Ljava/io/Writer;\n          4: ifnull        14\n          7: aload_0\n-         8: getfield      #20                 // Field writer:Ljava/io/Writer;\n-        11: invokevirtual #46                 // Method java/io/Writer.flush:()V\n+         8: getfield      #64                 // Field writer:Ljava/io/Writer;\n+        11: invokevirtual #156                // Method java/io/Writer.flush:()V\n         14: return\n       LineNumberTable:\n         line 247: 0\n         line 248: 7\n         line 250: 14\n       StackMapTable: number_of_entries = 1\n         frame_type = 14 /* same */\n@@ -583,52 +583,52 @@\n \n   public java.lang.String getDefaultEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field defaultCharset:Ljava/nio/charset/Charset;\n-         4: invokevirtual #47                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+         1: getfield      #55                 // Field defaultCharset:Ljava/nio/charset/Charset;\n+         4: invokevirtual #159                // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 258: 0\n \n   public java.lang.String getEncoding();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #21                 // Field charset:Ljava/nio/charset/Charset;\n-         4: invokevirtual #47                 // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n+         1: getfield      #68                 // Field charset:Ljava/nio/charset/Charset;\n+         4: invokevirtual #159                // Method java/nio/charset/Charset.name:()Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 267: 0\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #14                 // Field prologWriter:Ljava/io/StringWriter;\n+         1: getfield      #39                 // Field prologWriter:Ljava/io/StringWriter;\n          4: ifnull        17\n          7: aload_0\n          8: aload_1\n          9: iload_2\n         10: iload_3\n-        11: invokespecial #48                 // Method detectEncoding:([CII)V\n+        11: invokespecial #162                // Method detectEncoding:([CII)V\n         14: goto          27\n         17: aload_0\n-        18: getfield      #20                 // Field writer:Ljava/io/Writer;\n+        18: getfield      #64                 // Field writer:Ljava/io/Writer;\n         21: aload_1\n         22: iload_2\n         23: iload_3\n-        24: invokevirtual #45                 // Method java/io/Writer.write:([CII)V\n+        24: invokevirtual #155                // Method java/io/Writer.write:([CII)V\n         27: return\n       LineNumberTable:\n         line 280: 0\n         line 281: 7\n         line 283: 17\n         line 285: 27\n       StackMapTable: number_of_entries = 2\n@@ -641,16 +641,16 @@\n     descriptor: (Ljava/io/OutputStream;Ljava/nio/charset/Charset;Lorg/apache/commons/io/output/XmlStreamWriter$1;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #2                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+         3: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n          6: return\n       LineNumberTable:\n         line 45: 0\n }\n SourceFile: \"XmlStreamWriter.java\"\n InnerClasses:\n-  static #50;                             // class org/apache/commons/io/output/XmlStreamWriter$1\n-  public static #52= #3 of #12;           // Builder=class org/apache/commons/io/output/XmlStreamWriter$Builder of class org/apache/commons/io/output/XmlStreamWriter\n+  public static #189= #9 of #4;           // Builder=class org/apache/commons/io/output/XmlStreamWriter$Builder of class org/apache/commons/io/output/XmlStreamWriter\n+  static #190;                            // class org/apache/commons/io/output/XmlStreamWriter$1\n"}]}
