{"diffoscope-json-version": 1, "source1": "first/DeletingPathVisitor.class", "source2": "second/DeletingPathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,141 +1,138 @@\n-  SHA-256 checksum b4a8040566d24807121f17b97811729c80172712630ffe54d5946667c143a644\n+  SHA-256 checksum 94625a6b212126fdf9db48f7470b5516142b6bec24a79d65d941e20e1bce41dc\n   Compiled from \"DeletingPathVisitor.java\"\n public class org.apache.commons.io.file.DeletingPathVisitor extends org.apache.commons.io.file.CountingPathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #1                          // org/apache/commons/io/file/DeletingPathVisitor\n   super_class: #29                        // org/apache/commons/io/file/CountingPathVisitor\n   interfaces: 0, fields: 1, methods: 10, attributes: 2\n Constant pool:\n-    #1 = Class              #59           // org/apache/commons/io/file/DeletingPathVisitor\n-    #2 = Methodref          #60.#61       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #3 = Class              #62           // java/lang/String\n-    #4 = Methodref          #1.#63        // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-    #5 = Methodref          #60.#64       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-    #6 = Methodref          #29.#65       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-    #7 = Methodref          #66.#67       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+    #1 = Class              #57           // org/apache/commons/io/file/DeletingPathVisitor\n+    #2 = Methodref          #58.#59       // org/apache/commons/io/file/Counters.bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #3 = Class              #60           // java/lang/String\n+    #4 = Methodref          #1.#61        // org/apache/commons/io/file/DeletingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+    #5 = Methodref          #58.#62       // org/apache/commons/io/file/Counters.longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+    #6 = Methodref          #29.#63       // org/apache/commons/io/file/CountingPathVisitor.\"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+    #7 = Methodref          #64.#65       // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n     #8 = Class              #31           // \"[Ljava/lang/String;\"\n-    #9 = Fieldref           #1.#68        // org/apache/commons/io/file/DeletingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #10 = Methodref          #69.#70       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n-   #11 = Fieldref           #1.#71        // org/apache/commons/io/file/DeletingPathVisitor.skip:[Ljava/lang/String;\n-   #12 = InterfaceMethodref #25.#72       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n-   #13 = Methodref          #73.#74       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #14 = Methodref          #69.#75       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #15 = Methodref          #76.#77       // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-   #16 = Methodref          #78.#79       // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #17 = Methodref          #29.#80       // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #18 = Methodref          #29.#81       // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #19 = Methodref          #1.#82        // org/apache/commons/io/file/DeletingPathVisitor.accept:(Ljava/nio/file/Path;)Z\n-   #20 = Fieldref           #83.#84       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #21 = Fieldref           #83.#85       // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #22 = Class              #86           // java/nio/file/LinkOption\n-   #23 = Methodref          #78.#87       // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #24 = Methodref          #1.#88        // org/apache/commons/io/file/DeletingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #25 = Class              #89           // java/nio/file/Path\n-   #26 = Methodref          #1.#80        // org/apache/commons/io/file/DeletingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #27 = Methodref          #1.#90        // org/apache/commons/io/file/DeletingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #28 = Methodref          #1.#91        // org/apache/commons/io/file/DeletingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #29 = Class              #92           // org/apache/commons/io/file/CountingPathVisitor\n+    #9 = Fieldref           #1.#66        // org/apache/commons/io/file/DeletingPathVisitor.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #10 = Methodref          #67.#68       // java/util/Arrays.sort:([Ljava/lang/Object;)V\n+   #11 = Fieldref           #1.#69        // org/apache/commons/io/file/DeletingPathVisitor.skip:[Ljava/lang/String;\n+   #12 = InterfaceMethodref #25.#70       // java/nio/file/Path.getFileName:()Ljava/nio/file/Path;\n+   #13 = Methodref          #71.#72       // java/util/Objects.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #14 = Methodref          #67.#73       // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #15 = Methodref          #74.#75       // org/apache/commons/io/file/PathUtils.isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+   #16 = Methodref          #76.#77       // java/nio/file/Files.deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #17 = Methodref          #29.#78       // org/apache/commons/io/file/CountingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #18 = Methodref          #29.#79       // org/apache/commons/io/file/CountingPathVisitor.preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #19 = Methodref          #1.#80        // org/apache/commons/io/file/DeletingPathVisitor.accept:(Ljava/nio/file/Path;)Z\n+   #20 = Fieldref           #51.#81       // java/nio/file/FileVisitResult.CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #21 = Fieldref           #51.#82       // java/nio/file/FileVisitResult.SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+   #22 = Class              #83           // java/nio/file/LinkOption\n+   #23 = Methodref          #76.#84       // java/nio/file/Files.exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #24 = Methodref          #1.#85        // org/apache/commons/io/file/DeletingPathVisitor.updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #25 = Class              #86           // java/nio/file/Path\n+   #26 = Methodref          #1.#78        // org/apache/commons/io/file/DeletingPathVisitor.postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #27 = Methodref          #1.#87        // org/apache/commons/io/file/DeletingPathVisitor.visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #28 = Methodref          #1.#88        // org/apache/commons/io/file/DeletingPathVisitor.preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #29 = Class              #89           // org/apache/commons/io/file/CountingPathVisitor\n    #30 = Utf8               skip\n    #31 = Utf8               [Ljava/lang/String;\n    #32 = Utf8               withBigIntegerCounters\n    #33 = Utf8               ()Lorg/apache/commons/io/file/DeletingPathVisitor;\n    #34 = Utf8               Code\n    #35 = Utf8               LineNumberTable\n    #36 = Utf8               withLongCounters\n    #37 = Utf8               <init>\n-   #38 = Class              #93           // org/apache/commons/io/file/Counters$PathCounters\n+   #38 = Class              #90           // org/apache/commons/io/file/Counters$PathCounters\n    #39 = Utf8               PathCounters\n    #40 = Utf8               InnerClasses\n    #41 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n    #42 = Utf8               StackMapTable\n-   #43 = Class              #59           // org/apache/commons/io/file/DeletingPathVisitor\n-   #44 = Class              #93           // org/apache/commons/io/file/Counters$PathCounters\n-   #45 = Utf8               accept\n-   #46 = Utf8               (Ljava/nio/file/Path;)Z\n-   #47 = Utf8               postVisitDirectory\n-   #48 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #49 = Utf8               Exceptions\n-   #50 = Class              #94           // java/io/IOException\n-   #51 = Utf8               preVisitDirectory\n-   #52 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #53 = Class              #95           // java/nio/file/FileVisitResult\n-   #54 = Utf8               visitFile\n-   #55 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #56 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #57 = Utf8               SourceFile\n-   #58 = Utf8               DeletingPathVisitor.java\n-   #59 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n-   #60 = Class              #96           // org/apache/commons/io/file/Counters\n-   #61 = NameAndType        #97:#98       // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #62 = Utf8               java/lang/String\n-   #63 = NameAndType        #37:#41       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n-   #64 = NameAndType        #99:#98       // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #65 = NameAndType        #37:#100      // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-   #66 = Class              #31           // \"[Ljava/lang/String;\"\n-   #67 = NameAndType        #101:#102     // clone:()Ljava/lang/Object;\n-   #68 = NameAndType        #103:#31      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #69 = Class              #104          // java/util/Arrays\n-   #70 = NameAndType        #105:#106     // sort:([Ljava/lang/Object;)V\n-   #71 = NameAndType        #30:#31       // skip:[Ljava/lang/String;\n-   #72 = NameAndType        #107:#108     // getFileName:()Ljava/nio/file/Path;\n-   #73 = Class              #109          // java/util/Objects\n-   #74 = NameAndType        #110:#111     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-   #75 = NameAndType        #112:#113     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #76 = Class              #114          // org/apache/commons/io/file/PathUtils\n-   #77 = NameAndType        #115:#46      // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n-   #78 = Class              #116          // java/nio/file/Files\n-   #79 = NameAndType        #117:#46      // deleteIfExists:(Ljava/nio/file/Path;)Z\n-   #80 = NameAndType        #47:#48       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-   #81 = NameAndType        #51:#56       // preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #82 = NameAndType        #45:#46       // accept:(Ljava/nio/file/Path;)Z\n-   #83 = Class              #95           // java/nio/file/FileVisitResult\n-   #84 = NameAndType        #118:#119     // CONTINUE:Ljava/nio/file/FileVisitResult;\n-   #85 = NameAndType        #120:#119     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n-   #86 = Utf8               java/nio/file/LinkOption\n-   #87 = NameAndType        #121:#122     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-   #88 = NameAndType        #123:#124     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n-   #89 = Utf8               java/nio/file/Path\n-   #90 = NameAndType        #54:#52       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #91 = NameAndType        #51:#52       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n-   #92 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n-   #93 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n-   #94 = Utf8               java/io/IOException\n-   #95 = Utf8               java/nio/file/FileVisitResult\n-   #96 = Utf8               org/apache/commons/io/file/Counters\n-   #97 = Utf8               bigIntegerPathCounters\n-   #98 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n-   #99 = Utf8               longPathCounters\n-  #100 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n-  #101 = Utf8               clone\n-  #102 = Utf8               ()Ljava/lang/Object;\n-  #103 = Utf8               EMPTY_STRING_ARRAY\n-  #104 = Utf8               java/util/Arrays\n-  #105 = Utf8               sort\n-  #106 = Utf8               ([Ljava/lang/Object;)V\n-  #107 = Utf8               getFileName\n-  #108 = Utf8               ()Ljava/nio/file/Path;\n-  #109 = Utf8               java/util/Objects\n-  #110 = Utf8               toString\n-  #111 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n-  #112 = Utf8               binarySearch\n-  #113 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #114 = Utf8               org/apache/commons/io/file/PathUtils\n-  #115 = Utf8               isEmptyDirectory\n-  #116 = Utf8               java/nio/file/Files\n-  #117 = Utf8               deleteIfExists\n-  #118 = Utf8               CONTINUE\n-  #119 = Utf8               Ljava/nio/file/FileVisitResult;\n-  #120 = Utf8               SKIP_SUBTREE\n-  #121 = Utf8               exists\n-  #122 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n-  #123 = Utf8               updateFileCounters\n-  #124 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #43 = Utf8               accept\n+   #44 = Utf8               (Ljava/nio/file/Path;)Z\n+   #45 = Utf8               postVisitDirectory\n+   #46 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #47 = Utf8               Exceptions\n+   #48 = Class              #91           // java/io/IOException\n+   #49 = Utf8               preVisitDirectory\n+   #50 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #51 = Class              #92           // java/nio/file/FileVisitResult\n+   #52 = Utf8               visitFile\n+   #53 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #54 = Utf8               (Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #55 = Utf8               SourceFile\n+   #56 = Utf8               DeletingPathVisitor.java\n+   #57 = Utf8               org/apache/commons/io/file/DeletingPathVisitor\n+   #58 = Class              #93           // org/apache/commons/io/file/Counters\n+   #59 = NameAndType        #94:#95       // bigIntegerPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #60 = Utf8               java/lang/String\n+   #61 = NameAndType        #37:#41       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;[Ljava/lang/String;)V\n+   #62 = NameAndType        #96:#95       // longPathCounters:()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #63 = NameAndType        #37:#97       // \"<init>\":(Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #64 = Class              #31           // \"[Ljava/lang/String;\"\n+   #65 = NameAndType        #98:#99       // clone:()Ljava/lang/Object;\n+   #66 = NameAndType        #100:#31      // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+   #67 = Class              #101          // java/util/Arrays\n+   #68 = NameAndType        #102:#103     // sort:([Ljava/lang/Object;)V\n+   #69 = NameAndType        #30:#31       // skip:[Ljava/lang/String;\n+   #70 = NameAndType        #104:#105     // getFileName:()Ljava/nio/file/Path;\n+   #71 = Class              #106          // java/util/Objects\n+   #72 = NameAndType        #107:#108     // toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+   #73 = NameAndType        #109:#110     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #74 = Class              #111          // org/apache/commons/io/file/PathUtils\n+   #75 = NameAndType        #112:#44      // isEmptyDirectory:(Ljava/nio/file/Path;)Z\n+   #76 = Class              #113          // java/nio/file/Files\n+   #77 = NameAndType        #114:#44      // deleteIfExists:(Ljava/nio/file/Path;)Z\n+   #78 = NameAndType        #45:#46       // postVisitDirectory:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+   #79 = NameAndType        #49:#54       // preVisitDirectory:(Ljava/lang/Object;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #80 = NameAndType        #43:#44       // accept:(Ljava/nio/file/Path;)Z\n+   #81 = NameAndType        #115:#116     // CONTINUE:Ljava/nio/file/FileVisitResult;\n+   #82 = NameAndType        #117:#116     // SKIP_SUBTREE:Ljava/nio/file/FileVisitResult;\n+   #83 = Utf8               java/nio/file/LinkOption\n+   #84 = NameAndType        #118:#119     // exists:(Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+   #85 = NameAndType        #120:#121     // updateFileCounters:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n+   #86 = Utf8               java/nio/file/Path\n+   #87 = NameAndType        #52:#50       // visitFile:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #88 = NameAndType        #49:#50       // preVisitDirectory:(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #89 = Utf8               org/apache/commons/io/file/CountingPathVisitor\n+   #90 = Utf8               org/apache/commons/io/file/Counters$PathCounters\n+   #91 = Utf8               java/io/IOException\n+   #92 = Utf8               java/nio/file/FileVisitResult\n+   #93 = Utf8               org/apache/commons/io/file/Counters\n+   #94 = Utf8               bigIntegerPathCounters\n+   #95 = Utf8               ()Lorg/apache/commons/io/file/Counters$PathCounters;\n+   #96 = Utf8               longPathCounters\n+   #97 = Utf8               (Lorg/apache/commons/io/file/Counters$PathCounters;)V\n+   #98 = Utf8               clone\n+   #99 = Utf8               ()Ljava/lang/Object;\n+  #100 = Utf8               EMPTY_STRING_ARRAY\n+  #101 = Utf8               java/util/Arrays\n+  #102 = Utf8               sort\n+  #103 = Utf8               ([Ljava/lang/Object;)V\n+  #104 = Utf8               getFileName\n+  #105 = Utf8               ()Ljava/nio/file/Path;\n+  #106 = Utf8               java/util/Objects\n+  #107 = Utf8               toString\n+  #108 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n+  #109 = Utf8               binarySearch\n+  #110 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #111 = Utf8               org/apache/commons/io/file/PathUtils\n+  #112 = Utf8               isEmptyDirectory\n+  #113 = Utf8               java/nio/file/Files\n+  #114 = Utf8               deleteIfExists\n+  #115 = Utf8               CONTINUE\n+  #116 = Utf8               Ljava/nio/file/FileVisitResult;\n+  #117 = Utf8               SKIP_SUBTREE\n+  #118 = Utf8               exists\n+  #119 = Utf8               (Ljava/nio/file/Path;[Ljava/nio/file/LinkOption;)Z\n+  #120 = Utf8               updateFileCounters\n+  #121 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)V\n {\n   private final java.lang.String[] skip;\n     descriptor: [Ljava/lang/String;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   public static org.apache.commons.io.file.DeletingPathVisitor withBigIntegerCounters();\n     descriptor: ()Lorg/apache/commons/io/file/DeletingPathVisitor;\n@@ -359,8 +356,8 @@\n       LineNumberTable:\n         line 35: 0\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"DeletingPathVisitor.java\"\n InnerClasses:\n-  public static #39= #38 of #60;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n+  public static #39= #38 of #58;          // PathCounters=class org/apache/commons/io/file/Counters$PathCounters of class org/apache/commons/io/file/Counters\n"}]}
