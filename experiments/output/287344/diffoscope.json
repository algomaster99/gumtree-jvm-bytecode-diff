{"diffoscope-json-version": 1, "source1": "first/ClassBands.class", "source2": "second/ClassBands.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -449,63 +449,63 @@\n         this.code_attr_calls = list6.toArray();\n     }\n     \n     public void pack(final OutputStream outputStream) throws IOException, Pack200Exception {\n         PackingUtils.log(\"Writing class bands...\");\n         final byte[] encodeBandInt = this.encodeBandInt(\"class_this\", this.getInts(this.class_this), Codec.DELTA5);\n         outputStream.write(encodeBandInt);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from class_this[\" + this.class_this.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from class_this[\" + this.class_this.length);\n         final byte[] encodeBandInt2 = this.encodeBandInt(\"class_super\", this.getInts(this.class_super), Codec.DELTA5);\n         outputStream.write(encodeBandInt2);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from class_super[\" + this.class_super.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from class_super[\" + this.class_super.length);\n         final byte[] encodeBandInt3 = this.encodeBandInt(\"class_interface_count\", this.class_interface_count, Codec.DELTA5);\n         outputStream.write(encodeBandInt3);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from class_interface_count[\" + this.class_interface_count.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from class_interface_count[\" + this.class_interface_count.length);\n         final int[] array = new int[this.sum(this.class_interface_count)];\n         int n = 0;\n         for (int i = 0; i < this.class_interface.length; ++i) {\n             if (this.class_interface[i] != null) {\n                 for (int j = 0; j < this.class_interface[i].length; ++j) {\n                     array[n] = this.class_interface[i][j].getIndex();\n                     ++n;\n                 }\n             }\n         }\n         final byte[] encodeBandInt4 = this.encodeBandInt(\"class_interface\", array, Codec.DELTA5);\n         outputStream.write(encodeBandInt4);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from class_interface[\" + array.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from class_interface[\" + array.length);\n         final byte[] encodeBandInt5 = this.encodeBandInt(\"class_field_count\", this.class_field_count, Codec.DELTA5);\n         outputStream.write(encodeBandInt5);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from class_field_count[\" + this.class_field_count.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from class_field_count[\" + this.class_field_count.length);\n         final byte[] encodeBandInt6 = this.encodeBandInt(\"class_method_count\", this.class_method_count, Codec.DELTA5);\n         outputStream.write(encodeBandInt6);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from class_method_count[\" + this.class_method_count.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from class_method_count[\" + this.class_method_count.length);\n         final int[] array2 = new int[this.sum(this.class_field_count)];\n         int n2 = 0;\n         for (int k = 0; k < this.index; ++k) {\n             for (int l = 0; l < this.field_descr[k].length; ++l) {\n                 array2[n2] = this.field_descr[k][l].getIndex();\n                 ++n2;\n             }\n         }\n         final byte[] encodeBandInt7 = this.encodeBandInt(\"field_descr\", array2, Codec.DELTA5);\n         outputStream.write(encodeBandInt7);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from field_descr[\" + array2.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from field_descr[\" + array2.length);\n         this.writeFieldAttributeBands(outputStream);\n         final int[] array3 = new int[this.sum(this.class_method_count)];\n         int n3 = 0;\n         for (int n4 = 0; n4 < this.index; ++n4) {\n             for (int n5 = 0; n5 < this.method_descr[n4].length; ++n5) {\n                 array3[n3] = this.method_descr[n4][n5].getIndex();\n                 ++n3;\n             }\n         }\n         final byte[] encodeBandInt8 = this.encodeBandInt(\"method_descr\", array3, Codec.MDELTA5);\n         outputStream.write(encodeBandInt8);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from method_descr[\" + array3.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from method_descr[\" + array3.length);\n         this.writeMethodAttributeBands(outputStream);\n         this.writeClassAttributeBands(outputStream);\n         this.writeCodeBands(outputStream);\n     }\n     \n     private int sum(final int[] array) {\n         int n = 0;\n@@ -514,101 +514,101 @@\n         }\n         return n;\n     }\n     \n     private void writeFieldAttributeBands(final OutputStream outputStream) throws IOException, Pack200Exception {\n         final byte[] encodeFlags = this.encodeFlags(\"field_flags\", this.field_flags, Codec.UNSIGNED5, Codec.UNSIGNED5, this.segmentHeader.have_field_flags_hi());\n         outputStream.write(encodeFlags);\n-        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from field_flags[\" + this.field_flags.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from field_flags[\" + this.field_flags.length);\n         final byte[] encodeBandInt = this.encodeBandInt(\"field_attr_calls\", this.field_attr_calls, Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from field_attr_calls[\" + this.field_attr_calls.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from field_attr_calls[\" + this.field_attr_calls.length);\n         final byte[] encodeBandInt2 = this.encodeBandInt(\"fieldConstantValueKQ\", this.cpEntryListToArray(this.fieldConstantValueKQ), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt2);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from fieldConstantValueKQ[\" + this.fieldConstantValueKQ.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from fieldConstantValueKQ[\" + this.fieldConstantValueKQ.size());\n         final byte[] encodeBandInt3 = this.encodeBandInt(\"fieldSignature\", this.cpEntryListToArray(this.fieldSignature), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt3);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from fieldSignature[\" + this.fieldSignature.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from fieldSignature[\" + this.fieldSignature.size());\n         this.field_RVA_bands.pack(outputStream);\n         this.field_RIA_bands.pack(outputStream);\n         final Iterator iterator = this.fieldAttributeBands.iterator();\n         while (iterator.hasNext()) {\n             ((NewAttributeBands)iterator.next()).pack(outputStream);\n         }\n     }\n     \n     private void writeMethodAttributeBands(final OutputStream outputStream) throws IOException, Pack200Exception {\n         final byte[] encodeFlags = this.encodeFlags(\"method_flags\", this.method_flags, Codec.UNSIGNED5, Codec.UNSIGNED5, this.segmentHeader.have_method_flags_hi());\n         outputStream.write(encodeFlags);\n-        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from method_flags[\" + this.method_flags.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from method_flags[\" + this.method_flags.length);\n         final byte[] encodeBandInt = this.encodeBandInt(\"method_attr_calls\", this.method_attr_calls, Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from method_attr_calls[\" + this.method_attr_calls.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from method_attr_calls[\" + this.method_attr_calls.length);\n         final byte[] encodeBandInt2 = this.encodeBandInt(\"methodExceptionNumber\", this.methodExceptionNumber.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt2);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from methodExceptionNumber[\" + this.methodExceptionNumber.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from methodExceptionNumber[\" + this.methodExceptionNumber.size());\n         final byte[] encodeBandInt3 = this.encodeBandInt(\"methodExceptionClasses\", this.cpEntryListToArray(this.methodExceptionClasses), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt3);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from methodExceptionClasses[\" + this.methodExceptionClasses.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from methodExceptionClasses[\" + this.methodExceptionClasses.size());\n         final byte[] encodeBandInt4 = this.encodeBandInt(\"methodSignature\", this.cpEntryListToArray(this.methodSignature), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt4);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from methodSignature[\" + this.methodSignature.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from methodSignature[\" + this.methodSignature.size());\n         this.method_RVA_bands.pack(outputStream);\n         this.method_RIA_bands.pack(outputStream);\n         this.method_RVPA_bands.pack(outputStream);\n         this.method_RIPA_bands.pack(outputStream);\n         this.method_AD_bands.pack(outputStream);\n         final Iterator iterator = this.methodAttributeBands.iterator();\n         while (iterator.hasNext()) {\n             ((NewAttributeBands)iterator.next()).pack(outputStream);\n         }\n     }\n     \n     private void writeClassAttributeBands(final OutputStream outputStream) throws IOException, Pack200Exception {\n         final byte[] encodeFlags = this.encodeFlags(\"class_flags\", this.class_flags, Codec.UNSIGNED5, Codec.UNSIGNED5, this.segmentHeader.have_class_flags_hi());\n         outputStream.write(encodeFlags);\n-        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from class_flags[\" + this.class_flags.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from class_flags[\" + this.class_flags.length);\n         final byte[] encodeBandInt = this.encodeBandInt(\"class_attr_calls\", this.class_attr_calls, Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from class_attr_calls[\" + this.class_attr_calls.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from class_attr_calls[\" + this.class_attr_calls.length);\n         final byte[] encodeBandInt2 = this.encodeBandInt(\"classSourceFile\", this.cpEntryOrNullListToArray(this.classSourceFile), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt2);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from classSourceFile[\" + this.classSourceFile.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from classSourceFile[\" + this.classSourceFile.size());\n         final byte[] encodeBandInt3 = this.encodeBandInt(\"class_enclosing_method_RC\", this.cpEntryListToArray(this.classEnclosingMethodClass), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt3);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from class_enclosing_method_RC[\" + this.classEnclosingMethodClass.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from class_enclosing_method_RC[\" + this.classEnclosingMethodClass.size());\n         final byte[] encodeBandInt4 = this.encodeBandInt(\"class_EnclosingMethod_RDN\", this.cpEntryOrNullListToArray(this.classEnclosingMethodDesc), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt4);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from class_EnclosingMethod_RDN[\" + this.classEnclosingMethodDesc.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from class_EnclosingMethod_RDN[\" + this.classEnclosingMethodDesc.size());\n         final byte[] encodeBandInt5 = this.encodeBandInt(\"class_Signature_RS\", this.cpEntryListToArray(this.classSignature), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt5);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from class_Signature_RS[\" + this.classSignature.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from class_Signature_RS[\" + this.classSignature.size());\n         this.class_RVA_bands.pack(outputStream);\n         this.class_RIA_bands.pack(outputStream);\n         final byte[] encodeBandInt6 = this.encodeBandInt(\"class_InnerClasses_N\", this.class_InnerClasses_N, Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt6);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from class_InnerClasses_N[\" + this.class_InnerClasses_N.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from class_InnerClasses_N[\" + this.class_InnerClasses_N.length);\n         final byte[] encodeBandInt7 = this.encodeBandInt(\"class_InnerClasses_RC\", this.getInts(this.class_InnerClasses_RC), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt7);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from class_InnerClasses_RC[\" + this.class_InnerClasses_RC.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from class_InnerClasses_RC[\" + this.class_InnerClasses_RC.length);\n         final byte[] encodeBandInt8 = this.encodeBandInt(\"class_InnerClasses_F\", this.class_InnerClasses_F, Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt8);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from class_InnerClasses_F[\" + this.class_InnerClasses_F.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from class_InnerClasses_F[\" + this.class_InnerClasses_F.length);\n         final byte[] encodeBandInt9 = this.encodeBandInt(\"class_InnerClasses_outer_RCN\", this.cpEntryOrNullListToArray(this.classInnerClassesOuterRCN), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt9);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt9.length + \" bytes from class_InnerClasses_outer_RCN[\" + this.classInnerClassesOuterRCN.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt9.length + \" bytes from class_InnerClasses_outer_RCN[\" + this.classInnerClassesOuterRCN.size());\n         final byte[] encodeBandInt10 = this.encodeBandInt(\"class_InnerClasses_name_RUN\", this.cpEntryOrNullListToArray(this.classInnerClassesNameRUN), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt10);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt10.length + \" bytes from class_InnerClasses_name_RUN[\" + this.classInnerClassesNameRUN.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt10.length + \" bytes from class_InnerClasses_name_RUN[\" + this.classInnerClassesNameRUN.size());\n         final byte[] encodeBandInt11 = this.encodeBandInt(\"classFileVersionMinor\", this.classFileVersionMinor.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt11);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt11.length + \" bytes from classFileVersionMinor[\" + this.classFileVersionMinor.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt11.length + \" bytes from classFileVersionMinor[\" + this.classFileVersionMinor.size());\n         final byte[] encodeBandInt12 = this.encodeBandInt(\"classFileVersionMajor\", this.classFileVersionMajor.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt12);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt12.length + \" bytes from classFileVersionMajor[\" + this.classFileVersionMajor.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt12.length + \" bytes from classFileVersionMajor[\" + this.classFileVersionMajor.size());\n         final Iterator iterator = this.classAttributeBands.iterator();\n         while (iterator.hasNext()) {\n             ((NewAttributeBands)iterator.next()).pack(outputStream);\n         }\n     }\n     \n     private int[] getInts(final CPClass[] array) {\n@@ -620,91 +620,91 @@\n         }\n         return array2;\n     }\n     \n     private void writeCodeBands(final OutputStream outputStream) throws IOException, Pack200Exception {\n         final byte[] encodeBandInt = this.encodeBandInt(\"codeHeaders\", this.codeHeaders, Codec.BYTE1);\n         outputStream.write(encodeBandInt);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from codeHeaders[\" + this.codeHeaders.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from codeHeaders[\" + this.codeHeaders.length);\n         final byte[] encodeBandInt2 = this.encodeBandInt(\"codeMaxStack\", this.codeMaxStack.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt2);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from codeMaxStack[\" + this.codeMaxStack.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from codeMaxStack[\" + this.codeMaxStack.size());\n         final byte[] encodeBandInt3 = this.encodeBandInt(\"codeMaxLocals\", this.codeMaxLocals.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt3);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from codeMaxLocals[\" + this.codeMaxLocals.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from codeMaxLocals[\" + this.codeMaxLocals.size());\n         final byte[] encodeBandInt4 = this.encodeBandInt(\"codeHandlerCount\", this.codeHandlerCount.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt4);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from codeHandlerCount[\" + this.codeHandlerCount.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from codeHandlerCount[\" + this.codeHandlerCount.size());\n         final byte[] encodeBandInt5 = this.encodeBandInt(\"codeHandlerStartP\", this.integerListToArray(this.codeHandlerStartP), Codec.BCI5);\n         outputStream.write(encodeBandInt5);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from codeHandlerStartP[\" + this.codeHandlerStartP.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from codeHandlerStartP[\" + this.codeHandlerStartP.size());\n         final byte[] encodeBandInt6 = this.encodeBandInt(\"codeHandlerEndPO\", this.integerListToArray(this.codeHandlerEndPO), Codec.BRANCH5);\n         outputStream.write(encodeBandInt6);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from codeHandlerEndPO[\" + this.codeHandlerEndPO.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from codeHandlerEndPO[\" + this.codeHandlerEndPO.size());\n         final byte[] encodeBandInt7 = this.encodeBandInt(\"codeHandlerCatchPO\", this.integerListToArray(this.codeHandlerCatchPO), Codec.BRANCH5);\n         outputStream.write(encodeBandInt7);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from codeHandlerCatchPO[\" + this.codeHandlerCatchPO.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from codeHandlerCatchPO[\" + this.codeHandlerCatchPO.size());\n         final byte[] encodeBandInt8 = this.encodeBandInt(\"codeHandlerClass\", this.cpEntryOrNullListToArray(this.codeHandlerClass), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt8);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from codeHandlerClass[\" + this.codeHandlerClass.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from codeHandlerClass[\" + this.codeHandlerClass.size());\n         this.writeCodeAttributeBands(outputStream);\n     }\n     \n     private void writeCodeAttributeBands(final OutputStream outputStream) throws IOException, Pack200Exception {\n         final byte[] encodeFlags = this.encodeFlags(\"codeFlags\", this.longListToArray(this.codeFlags), Codec.UNSIGNED5, Codec.UNSIGNED5, this.segmentHeader.have_code_flags_hi());\n         outputStream.write(encodeFlags);\n-        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from codeFlags[\" + this.codeFlags.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeFlags.length + \" bytes from codeFlags[\" + this.codeFlags.size());\n         final byte[] encodeBandInt = this.encodeBandInt(\"code_attr_calls\", this.code_attr_calls, Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from code_attr_calls[\" + this.code_attr_calls.length + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from code_attr_calls[\" + this.code_attr_calls.length);\n         final byte[] encodeBandInt2 = this.encodeBandInt(\"code_LineNumberTable_N\", this.codeLineNumberTableN.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt2);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from code_LineNumberTable_N[\" + this.codeLineNumberTableN.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from code_LineNumberTable_N[\" + this.codeLineNumberTableN.size());\n         final byte[] encodeBandInt3 = this.encodeBandInt(\"code_LineNumberTable_bci_P\", this.integerListToArray(this.codeLineNumberTableBciP), Codec.BCI5);\n         outputStream.write(encodeBandInt3);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from code_LineNumberTable_bci_P[\" + this.codeLineNumberTableBciP.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from code_LineNumberTable_bci_P[\" + this.codeLineNumberTableBciP.size());\n         final byte[] encodeBandInt4 = this.encodeBandInt(\"code_LineNumberTable_line\", this.codeLineNumberTableLine.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt4);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from code_LineNumberTable_line[\" + this.codeLineNumberTableLine.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from code_LineNumberTable_line[\" + this.codeLineNumberTableLine.size());\n         final byte[] encodeBandInt5 = this.encodeBandInt(\"code_LocalVariableTable_N\", this.codeLocalVariableTableN.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt5);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from code_LocalVariableTable_N[\" + this.codeLocalVariableTableN.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from code_LocalVariableTable_N[\" + this.codeLocalVariableTableN.size());\n         final byte[] encodeBandInt6 = this.encodeBandInt(\"code_LocalVariableTable_bci_P\", this.integerListToArray(this.codeLocalVariableTableBciP), Codec.BCI5);\n         outputStream.write(encodeBandInt6);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from code_LocalVariableTable_bci_P[\" + this.codeLocalVariableTableBciP.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from code_LocalVariableTable_bci_P[\" + this.codeLocalVariableTableBciP.size());\n         final byte[] encodeBandInt7 = this.encodeBandInt(\"code_LocalVariableTable_span_O\", this.integerListToArray(this.codeLocalVariableTableSpanO), Codec.BRANCH5);\n         outputStream.write(encodeBandInt7);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from code_LocalVariableTable_span_O[\" + this.codeLocalVariableTableSpanO.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from code_LocalVariableTable_span_O[\" + this.codeLocalVariableTableSpanO.size());\n         final byte[] encodeBandInt8 = this.encodeBandInt(\"code_LocalVariableTable_name_RU\", this.cpEntryListToArray(this.codeLocalVariableTableNameRU), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt8);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from code_LocalVariableTable_name_RU[\" + this.codeLocalVariableTableNameRU.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from code_LocalVariableTable_name_RU[\" + this.codeLocalVariableTableNameRU.size());\n         final byte[] encodeBandInt9 = this.encodeBandInt(\"code_LocalVariableTable_type_RS\", this.cpEntryListToArray(this.codeLocalVariableTableTypeRS), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt9);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt9.length + \" bytes from code_LocalVariableTable_type_RS[\" + this.codeLocalVariableTableTypeRS.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt9.length + \" bytes from code_LocalVariableTable_type_RS[\" + this.codeLocalVariableTableTypeRS.size());\n         final byte[] encodeBandInt10 = this.encodeBandInt(\"code_LocalVariableTable_slot\", this.codeLocalVariableTableSlot.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt10);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt10.length + \" bytes from code_LocalVariableTable_slot[\" + this.codeLocalVariableTableSlot.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt10.length + \" bytes from code_LocalVariableTable_slot[\" + this.codeLocalVariableTableSlot.size());\n         final byte[] encodeBandInt11 = this.encodeBandInt(\"code_LocalVariableTypeTable_N\", this.codeLocalVariableTypeTableN.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt11);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt11.length + \" bytes from code_LocalVariableTypeTable_N[\" + this.codeLocalVariableTypeTableN.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt11.length + \" bytes from code_LocalVariableTypeTable_N[\" + this.codeLocalVariableTypeTableN.size());\n         final byte[] encodeBandInt12 = this.encodeBandInt(\"code_LocalVariableTypeTable_bci_P\", this.integerListToArray(this.codeLocalVariableTypeTableBciP), Codec.BCI5);\n         outputStream.write(encodeBandInt12);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt12.length + \" bytes from code_LocalVariableTypeTable_bci_P[\" + this.codeLocalVariableTypeTableBciP.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt12.length + \" bytes from code_LocalVariableTypeTable_bci_P[\" + this.codeLocalVariableTypeTableBciP.size());\n         final byte[] encodeBandInt13 = this.encodeBandInt(\"code_LocalVariableTypeTable_span_O\", this.integerListToArray(this.codeLocalVariableTypeTableSpanO), Codec.BRANCH5);\n         outputStream.write(encodeBandInt13);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt13.length + \" bytes from code_LocalVariableTypeTable_span_O[\" + this.codeLocalVariableTypeTableSpanO.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt13.length + \" bytes from code_LocalVariableTypeTable_span_O[\" + this.codeLocalVariableTypeTableSpanO.size());\n         final byte[] encodeBandInt14 = this.encodeBandInt(\"code_LocalVariableTypeTable_name_RU\", this.cpEntryListToArray(this.codeLocalVariableTypeTableNameRU), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt14);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt14.length + \" bytes from code_LocalVariableTypeTable_name_RU[\" + this.codeLocalVariableTypeTableNameRU.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt14.length + \" bytes from code_LocalVariableTypeTable_name_RU[\" + this.codeLocalVariableTypeTableNameRU.size());\n         final byte[] encodeBandInt15 = this.encodeBandInt(\"code_LocalVariableTypeTable_type_RS\", this.cpEntryListToArray(this.codeLocalVariableTypeTableTypeRS), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt15);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt15.length + \" bytes from code_LocalVariableTypeTable_type_RS[\" + this.codeLocalVariableTypeTableTypeRS.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt15.length + \" bytes from code_LocalVariableTypeTable_type_RS[\" + this.codeLocalVariableTypeTableTypeRS.size());\n         final byte[] encodeBandInt16 = this.encodeBandInt(\"code_LocalVariableTypeTable_slot\", this.codeLocalVariableTypeTableSlot.toArray(), Codec.UNSIGNED5);\n         outputStream.write(encodeBandInt16);\n-        PackingUtils.log(\"Wrote \" + encodeBandInt16.length + \" bytes from code_LocalVariableTypeTable_slot[\" + this.codeLocalVariableTypeTableSlot.size() + \"]\");\n+        PackingUtils.log(\"Wrote \" + encodeBandInt16.length + \" bytes from code_LocalVariableTypeTable_slot[\" + this.codeLocalVariableTypeTableSlot.size());\n         final Iterator iterator = this.codeAttributeBands.iterator();\n         while (iterator.hasNext()) {\n             ((NewAttributeBands)iterator.next()).pack(outputStream);\n         }\n     }\n     \n     public void addMethod(int n, final String s, final String s2, final String s3, final String[] array) {\n"}]}
