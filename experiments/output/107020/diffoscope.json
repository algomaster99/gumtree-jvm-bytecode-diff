{"diffoscope-json-version": 1, "source1": "first/FileEqualsFileFilter.class", "source2": "second/FileEqualsFileFilter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,63 +1,63 @@\n-  SHA-256 checksum 5d68d808d46760e675d62e9903d739dcbae1480804f580d7249e0b3cf728175a\n+  SHA-256 checksum a86ff9b18a2157ff4cc6854788fa9f3f98ef91996fa92e311abac0b28974207f\n   Compiled from \"FileEqualsFileFilter.java\"\n public class org.apache.commons.io.filefilter.FileEqualsFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #18                         // org/apache/commons/io/filefilter/FileEqualsFileFilter\n-  super_class: #2                         // org/apache/commons/io/filefilter/AbstractFileFilter\n+  this_class: #1                          // org/apache/commons/io/filefilter/FileEqualsFileFilter\n+  super_class: #3                         // org/apache/commons/io/filefilter/AbstractFileFilter\n   interfaces: 0, fields: 2, methods: 3, attributes: 1\n Constant pool:\n-   #1 = Methodref          #2.#3          // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n-   #2 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n-   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #1 = Class              #2             // org/apache/commons/io/filefilter/FileEqualsFileFilter\n+   #2 = Utf8               org/apache/commons/io/filefilter/FileEqualsFileFilter\n+   #3 = Class              #4             // org/apache/commons/io/filefilter/AbstractFileFilter\n    #4 = Utf8               org/apache/commons/io/filefilter/AbstractFileFilter\n-   #5 = Utf8               <init>\n-   #6 = Utf8               ()V\n-   #7 = String             #8             // file\n-   #8 = Utf8               file\n-   #9 = Methodref          #10.#11        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #10 = Class              #12            // java/util/Objects\n-  #11 = NameAndType        #13:#14        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #12 = Utf8               java/util/Objects\n-  #13 = Utf8               requireNonNull\n-  #14 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #15 = Class              #16            // java/io/File\n-  #16 = Utf8               java/io/File\n-  #17 = Fieldref           #18.#19        // org/apache/commons/io/filefilter/FileEqualsFileFilter.file:Ljava/io/File;\n-  #18 = Class              #20            // org/apache/commons/io/filefilter/FileEqualsFileFilter\n-  #19 = NameAndType        #8:#21         // file:Ljava/io/File;\n-  #20 = Utf8               org/apache/commons/io/filefilter/FileEqualsFileFilter\n-  #21 = Utf8               Ljava/io/File;\n-  #22 = Methodref          #15.#23        // java/io/File.toPath:()Ljava/nio/file/Path;\n-  #23 = NameAndType        #24:#25        // toPath:()Ljava/nio/file/Path;\n-  #24 = Utf8               toPath\n-  #25 = Utf8               ()Ljava/nio/file/Path;\n-  #26 = Fieldref           #18.#27        // org/apache/commons/io/filefilter/FileEqualsFileFilter.path:Ljava/nio/file/Path;\n-  #27 = NameAndType        #28:#29        // path:Ljava/nio/file/Path;\n-  #28 = Utf8               path\n-  #29 = Utf8               Ljava/nio/file/Path;\n-  #30 = Methodref          #10.#31        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #31 = NameAndType        #32:#33        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #32 = Utf8               equals\n-  #33 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n-  #34 = Methodref          #18.#35        // org/apache/commons/io/filefilter/FileEqualsFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #35 = NameAndType        #36:#37        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #36 = Utf8               toFileVisitResult\n-  #37 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n-  #38 = Utf8               (Ljava/io/File;)V\n-  #39 = Utf8               Code\n-  #40 = Utf8               LineNumberTable\n-  #41 = Utf8               LocalVariableTable\n-  #42 = Utf8               this\n-  #43 = Utf8               Lorg/apache/commons/io/filefilter/FileEqualsFileFilter;\n-  #44 = Utf8               accept\n-  #45 = Utf8               (Ljava/io/File;)Z\n-  #46 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+   #5 = Utf8               file\n+   #6 = Utf8               Ljava/io/File;\n+   #7 = Utf8               path\n+   #8 = Utf8               Ljava/nio/file/Path;\n+   #9 = Utf8               <init>\n+  #10 = Utf8               (Ljava/io/File;)V\n+  #11 = Utf8               Code\n+  #12 = Methodref          #3.#13         // org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+  #13 = NameAndType        #9:#14         // \"<init>\":()V\n+  #14 = Utf8               ()V\n+  #15 = String             #5             // file\n+  #16 = Methodref          #17.#19        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #17 = Class              #18            // java/util/Objects\n+  #18 = Utf8               java/util/Objects\n+  #19 = NameAndType        #20:#21        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #20 = Utf8               requireNonNull\n+  #21 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #22 = Class              #23            // java/io/File\n+  #23 = Utf8               java/io/File\n+  #24 = Fieldref           #1.#25         // org/apache/commons/io/filefilter/FileEqualsFileFilter.file:Ljava/io/File;\n+  #25 = NameAndType        #5:#6          // file:Ljava/io/File;\n+  #26 = Methodref          #22.#27        // java/io/File.toPath:()Ljava/nio/file/Path;\n+  #27 = NameAndType        #28:#29        // toPath:()Ljava/nio/file/Path;\n+  #28 = Utf8               toPath\n+  #29 = Utf8               ()Ljava/nio/file/Path;\n+  #30 = Fieldref           #1.#31         // org/apache/commons/io/filefilter/FileEqualsFileFilter.path:Ljava/nio/file/Path;\n+  #31 = NameAndType        #7:#8          // path:Ljava/nio/file/Path;\n+  #32 = Utf8               LineNumberTable\n+  #33 = Utf8               LocalVariableTable\n+  #34 = Utf8               this\n+  #35 = Utf8               Lorg/apache/commons/io/filefilter/FileEqualsFileFilter;\n+  #36 = Utf8               accept\n+  #37 = Utf8               (Ljava/io/File;)Z\n+  #38 = Methodref          #17.#39        // java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #39 = NameAndType        #40:#41        // equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #40 = Utf8               equals\n+  #41 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z\n+  #42 = Utf8               (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n+  #43 = Methodref          #1.#44         // org/apache/commons/io/filefilter/FileEqualsFileFilter.toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #44 = NameAndType        #45:#46        // toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+  #45 = Utf8               toFileVisitResult\n+  #46 = Utf8               (ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n   #47 = Utf8               attributes\n   #48 = Utf8               Ljava/nio/file/attribute/BasicFileAttributes;\n   #49 = Utf8               SourceFile\n   #50 = Utf8               FileEqualsFileFilter.java\n {\n   private final java.io.File file;\n     descriptor: Ljava/io/File;\n@@ -69,25 +69,25 @@\n \n   public org.apache.commons.io.filefilter.FileEqualsFileFilter(java.io.File);\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n+         1: invokespecial #12                 // Method org/apache/commons/io/filefilter/AbstractFileFilter.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #7                  // String file\n-         8: invokestatic  #9                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #15                 // class java/io/File\n-        14: putfield      #17                 // Field file:Ljava/io/File;\n+         6: ldc           #15                 // String file\n+         8: invokestatic  #16                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #22                 // class java/io/File\n+        14: putfield      #24                 // Field file:Ljava/io/File;\n         17: aload_0\n         18: aload_1\n-        19: invokevirtual #22                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n-        22: putfield      #26                 // Field path:Ljava/nio/file/Path;\n+        19: invokevirtual #26                 // Method java/io/File.toPath:()Ljava/nio/file/Path;\n+        22: putfield      #30                 // Field path:Ljava/nio/file/Path;\n         25: return\n       LineNumberTable:\n         line 43: 0\n         line 44: 4\n         line 45: 17\n         line 46: 25\n       LocalVariableTable:\n@@ -97,36 +97,36 @@\n \n   public boolean accept(java.io.File);\n     descriptor: (Ljava/io/File;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #17                 // Field file:Ljava/io/File;\n+         1: getfield      #24                 // Field file:Ljava/io/File;\n          4: aload_1\n-         5: invokestatic  #30                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+         5: invokestatic  #38                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n          8: ireturn\n       LineNumberTable:\n         line 50: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/filefilter/FileEqualsFileFilter;\n             0       9     1  file   Ljava/io/File;\n \n   public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes);\n     descriptor: (Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #26                 // Field path:Ljava/nio/file/Path;\n+         1: getfield      #30                 // Field path:Ljava/nio/file/Path;\n          4: aload_1\n-         5: invokestatic  #30                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n+         5: invokestatic  #38                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z\n          8: aload_1\n-         9: invokestatic  #34                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n+         9: invokestatic  #43                 // Method toFileVisitResult:(ZLjava/nio/file/Path;)Ljava/nio/file/FileVisitResult;\n         12: areturn\n       LineNumberTable:\n         line 55: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/filefilter/FileEqualsFileFilter;\n             0      13     1  path   Ljava/nio/file/Path;\n"}]}
