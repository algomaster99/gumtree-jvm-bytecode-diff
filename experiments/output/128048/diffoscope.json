{"diffoscope-json-version": 1, "source1": "first/TreeUtils.class", "source2": "second/TreeUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -12,24 +12,24 @@\n         if (stream != null) {\n             printTree(stream, \"\", result);\n         }\n     }\n     \n     private static void printTree(final PrintStream stream, final String indent, final ImmutableNode result) {\n         final StringBuilder buffer = new StringBuilder(indent).append(\"<\").append(result.getNodeName());\n-        result.getAttributes().forEach((k, v) -> buffer.append(' ').append(k).append(\"='\").append(v).append(\"'\"));\n+        result.getAttributes().forEach((k, v) -> sb.append(' ').append(k).append(\"='\").append(v).append(\"'\"));\n         buffer.append(\">\");\n         stream.print(buffer.toString());\n         if (result.getValue() != null) {\n             stream.print(result.getValue());\n         }\n         boolean newline = false;\n         if (!result.getChildren().isEmpty()) {\n             stream.print(\"\\n\");\n-            result.forEach(child -> printTree(stream, indent + \"  \", child));\n+            result.forEach(child -> printTree(stream2, String.valueOf(obj) + \"  \", child));\n             newline = true;\n         }\n         if (newline) {\n             stream.print(indent);\n         }\n         stream.println(\"</\" + result.getNodeName() + \">\");\n     }\n"}]}
