{"diffoscope-json-version": 1, "source1": "first/AbstractUnicodeExtraField.class", "source2": "second/AbstractUnicodeExtraField.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,153 +1,153 @@\n-  SHA-256 checksum ab846615894eb938fbd6760c4b8d8c24129560b7b34fd54275d4328e7e4b6e3a\n+  SHA-256 checksum 64f5fa4eeadf3dd97f22f8b1cc487f63716142d20960efd38063516c350c450d\n   Compiled from \"AbstractUnicodeExtraField.java\"\n public abstract class org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField implements org.apache.commons.compress.archivers.zip.ZipExtraField\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #19                         // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-  super_class: #2                         // java/lang/Object\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+  super_class: #3                         // java/lang/Object\n   interfaces: 1, fields: 3, methods: 14, attributes: 1\n Constant pool:\n-    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n-    #2 = Class              #4            // java/lang/Object\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+    #2 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n+    #3 = Class              #4            // java/lang/Object\n     #4 = Utf8               java/lang/Object\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Class              #8            // java/util/zip/CRC32\n-    #8 = Utf8               java/util/zip/CRC32\n-    #9 = Methodref          #7.#3         // java/util/zip/CRC32.\"<init>\":()V\n-   #10 = Methodref          #7.#11        // java/util/zip/CRC32.update:([BII)V\n-   #11 = NameAndType        #12:#13       // update:([BII)V\n-   #12 = Utf8               update\n-   #13 = Utf8               ([BII)V\n-   #14 = Methodref          #7.#15        // java/util/zip/CRC32.getValue:()J\n-   #15 = NameAndType        #16:#17       // getValue:()J\n-   #16 = Utf8               getValue\n-   #17 = Utf8               ()J\n-   #18 = Fieldref           #19.#20       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n-   #19 = Class              #21           // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #20 = NameAndType        #22:#23       // nameCRC32:J\n-   #21 = Utf8               org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField\n-   #22 = Utf8               nameCRC32\n-   #23 = Utf8               J\n-   #24 = Fieldref           #25.#26       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #25 = Class              #27           // java/nio/charset/StandardCharsets\n-   #26 = NameAndType        #28:#29       // UTF_8:Ljava/nio/charset/Charset;\n-   #27 = Utf8               java/nio/charset/StandardCharsets\n-   #28 = Utf8               UTF_8\n-   #29 = Utf8               Ljava/nio/charset/Charset;\n-   #30 = Methodref          #31.#32       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-   #31 = Class              #33           // java/lang/String\n-   #32 = NameAndType        #34:#35       // getBytes:(Ljava/nio/charset/Charset;)[B\n-   #33 = Utf8               java/lang/String\n-   #34 = Utf8               getBytes\n-   #35 = Utf8               (Ljava/nio/charset/Charset;)[B\n-   #36 = Fieldref           #19.#37       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n-   #37 = NameAndType        #38:#39       // unicodeName:[B\n-   #38 = Utf8               unicodeName\n-   #39 = Utf8               [B\n-   #40 = Methodref          #19.#41       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n-   #41 = NameAndType        #5:#42        // \"<init>\":(Ljava/lang/String;[BII)V\n-   #42 = Utf8               (Ljava/lang/String;[BII)V\n-   #43 = Fieldref           #19.#44       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n-   #44 = NameAndType        #45:#39       // data:[B\n-   #45 = Utf8               data\n-   #46 = Methodref          #47.#48       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n-   #47 = Class              #49           // org/apache/commons/compress/archivers/zip/ZipLong\n-   #48 = NameAndType        #34:#50       // getBytes:(J)[B\n-   #49 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n-   #50 = Utf8               (J)[B\n-   #51 = Methodref          #52.#53       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #52 = Class              #54           // java/lang/System\n-   #53 = NameAndType        #55:#56       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #54 = Utf8               java/lang/System\n-   #55 = Utf8               arraycopy\n-   #56 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #57 = Methodref          #19.#58       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n-   #58 = NameAndType        #59:#6        // assembleData:()V\n-   #59 = Utf8               assembleData\n-   #60 = Class              #61           // org/apache/commons/compress/archivers/zip/ZipShort\n-   #61 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n-   #62 = Methodref          #60.#63       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n-   #63 = NameAndType        #5:#64        // \"<init>\":(I)V\n-   #64 = Utf8               (I)V\n-   #65 = Methodref          #19.#66       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n-   #66 = NameAndType        #67:#68       // getCentralDirectoryData:()[B\n-   #67 = Utf8               getCentralDirectoryData\n-   #68 = Utf8               ()[B\n-   #69 = Methodref          #19.#70       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #70 = NameAndType        #71:#72       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #71 = Utf8               getCentralDirectoryLength\n-   #72 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n-   #73 = Class              #74           // java/util/zip/ZipException\n-   #74 = Utf8               java/util/zip/ZipException\n-   #75 = String             #76           // UniCode path extra data must have at least 5 bytes.\n-   #76 = Utf8               UniCode path extra data must have at least 5 bytes.\n-   #77 = Methodref          #73.#78       // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-   #78 = NameAndType        #5:#79        // \"<init>\":(Ljava/lang/String;)V\n-   #79 = Utf8               (Ljava/lang/String;)V\n-   #80 = Class              #81           // java/lang/StringBuilder\n-   #81 = Utf8               java/lang/StringBuilder\n-   #82 = Methodref          #80.#3        // java/lang/StringBuilder.\"<init>\":()V\n-   #83 = String             #84           // Unsupported version [\n-   #84 = Utf8               Unsupported version [\n-   #85 = Methodref          #80.#86       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #86 = NameAndType        #87:#88       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #87 = Utf8               append\n-   #88 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #89 = Methodref          #80.#90       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #90 = NameAndType        #87:#91       // append:(I)Ljava/lang/StringBuilder;\n-   #91 = Utf8               (I)Ljava/lang/StringBuilder;\n-   #92 = String             #93           // ] for UniCode path extra data.\n-   #93 = Utf8               ] for UniCode path extra data.\n-   #94 = Methodref          #80.#95       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #95 = NameAndType        #96:#97       // toString:()Ljava/lang/String;\n-   #96 = Utf8               toString\n-   #97 = Utf8               ()Ljava/lang/String;\n-   #98 = Methodref          #47.#99       // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-   #99 = NameAndType        #16:#100      // getValue:([BI)J\n-  #100 = Utf8               ([BI)J\n-  #101 = Methodref          #19.#102      // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n-  #102 = NameAndType        #103:#13      // parseFromLocalFileData:([BII)V\n-  #103 = Utf8               parseFromLocalFileData\n-  #104 = Class              #105          // org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #105 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n-  #106 = Utf8               Code\n-  #107 = Utf8               LineNumberTable\n-  #108 = Utf8               LocalVariableTable\n-  #109 = Utf8               this\n-  #110 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-  #111 = Utf8               text\n-  #112 = Utf8               Ljava/lang/String;\n-  #113 = Utf8               bytes\n-  #114 = Utf8               off\n-  #115 = Utf8               I\n-  #116 = Utf8               len\n-  #117 = Utf8               crc32\n-  #118 = Utf8               Ljava/util/zip/CRC32;\n-  #119 = Utf8               (Ljava/lang/String;[B)V\n-  #120 = Utf8               StackMapTable\n-  #121 = Utf8               getNameCRC32\n-  #122 = Utf8               setNameCRC32\n-  #123 = Utf8               (J)V\n-  #124 = Utf8               getUnicodeName\n-  #125 = Utf8               b\n-  #126 = Class              #39           // \"[B\"\n-  #127 = Utf8               setUnicodeName\n-  #128 = Utf8               ([B)V\n-  #129 = Utf8               getLocalFileDataData\n-  #130 = Utf8               getLocalFileDataLength\n-  #131 = Utf8               buffer\n-  #132 = Utf8               offset\n-  #133 = Utf8               length\n-  #134 = Utf8               version\n-  #135 = Utf8               Exceptions\n-  #136 = Utf8               parseFromCentralDirectoryData\n+    #5 = Class              #6            // org/apache/commons/compress/archivers/zip/ZipExtraField\n+    #6 = Utf8               org/apache/commons/compress/archivers/zip/ZipExtraField\n+    #7 = Utf8               nameCRC32\n+    #8 = Utf8               J\n+    #9 = Utf8               unicodeName\n+   #10 = Utf8               [B\n+   #11 = Utf8               data\n+   #12 = Utf8               <init>\n+   #13 = Utf8               ()V\n+   #14 = Utf8               Code\n+   #15 = Methodref          #3.#16        // java/lang/Object.\"<init>\":()V\n+   #16 = NameAndType        #12:#13       // \"<init>\":()V\n+   #17 = Utf8               LineNumberTable\n+   #18 = Utf8               LocalVariableTable\n+   #19 = Utf8               this\n+   #20 = Utf8               Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+   #21 = Utf8               (Ljava/lang/String;[BII)V\n+   #22 = Class              #23           // java/util/zip/CRC32\n+   #23 = Utf8               java/util/zip/CRC32\n+   #24 = Methodref          #22.#16       // java/util/zip/CRC32.\"<init>\":()V\n+   #25 = Methodref          #22.#26       // java/util/zip/CRC32.update:([BII)V\n+   #26 = NameAndType        #27:#28       // update:([BII)V\n+   #27 = Utf8               update\n+   #28 = Utf8               ([BII)V\n+   #29 = Methodref          #22.#30       // java/util/zip/CRC32.getValue:()J\n+   #30 = NameAndType        #31:#32       // getValue:()J\n+   #31 = Utf8               getValue\n+   #32 = Utf8               ()J\n+   #33 = Fieldref           #1.#34        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.nameCRC32:J\n+   #34 = NameAndType        #7:#8         // nameCRC32:J\n+   #35 = Fieldref           #36.#38       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #36 = Class              #37           // java/nio/charset/StandardCharsets\n+   #37 = Utf8               java/nio/charset/StandardCharsets\n+   #38 = NameAndType        #39:#40       // UTF_8:Ljava/nio/charset/Charset;\n+   #39 = Utf8               UTF_8\n+   #40 = Utf8               Ljava/nio/charset/Charset;\n+   #41 = Methodref          #42.#44       // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+   #42 = Class              #43           // java/lang/String\n+   #43 = Utf8               java/lang/String\n+   #44 = NameAndType        #45:#46       // getBytes:(Ljava/nio/charset/Charset;)[B\n+   #45 = Utf8               getBytes\n+   #46 = Utf8               (Ljava/nio/charset/Charset;)[B\n+   #47 = Fieldref           #1.#48        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.unicodeName:[B\n+   #48 = NameAndType        #9:#10        // unicodeName:[B\n+   #49 = Utf8               text\n+   #50 = Utf8               Ljava/lang/String;\n+   #51 = Utf8               bytes\n+   #52 = Utf8               off\n+   #53 = Utf8               I\n+   #54 = Utf8               len\n+   #55 = Utf8               crc32\n+   #56 = Utf8               Ljava/util/zip/CRC32;\n+   #57 = Utf8               (Ljava/lang/String;[B)V\n+   #58 = Methodref          #1.#59        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.\"<init>\":(Ljava/lang/String;[BII)V\n+   #59 = NameAndType        #12:#21       // \"<init>\":(Ljava/lang/String;[BII)V\n+   #60 = Utf8               assembleData\n+   #61 = Fieldref           #1.#62        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.data:[B\n+   #62 = NameAndType        #11:#10       // data:[B\n+   #63 = Methodref          #64.#66       // org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+   #64 = Class              #65           // org/apache/commons/compress/archivers/zip/ZipLong\n+   #65 = Utf8               org/apache/commons/compress/archivers/zip/ZipLong\n+   #66 = NameAndType        #45:#67       // getBytes:(J)[B\n+   #67 = Utf8               (J)[B\n+   #68 = Methodref          #69.#71       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #69 = Class              #70           // java/lang/System\n+   #70 = Utf8               java/lang/System\n+   #71 = NameAndType        #72:#73       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #72 = Utf8               arraycopy\n+   #73 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #74 = Utf8               StackMapTable\n+   #75 = Utf8               getNameCRC32\n+   #76 = Utf8               setNameCRC32\n+   #77 = Utf8               (J)V\n+   #78 = Utf8               getUnicodeName\n+   #79 = Utf8               ()[B\n+   #80 = Utf8               b\n+   #81 = Class              #10           // \"[B\"\n+   #82 = Utf8               setUnicodeName\n+   #83 = Utf8               ([B)V\n+   #84 = Utf8               getCentralDirectoryData\n+   #85 = Methodref          #1.#86        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.assembleData:()V\n+   #86 = NameAndType        #60:#13       // assembleData:()V\n+   #87 = Utf8               getCentralDirectoryLength\n+   #88 = Utf8               ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #89 = Class              #90           // org/apache/commons/compress/archivers/zip/ZipShort\n+   #90 = Utf8               org/apache/commons/compress/archivers/zip/ZipShort\n+   #91 = Methodref          #89.#92       // org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+   #92 = NameAndType        #12:#93       // \"<init>\":(I)V\n+   #93 = Utf8               (I)V\n+   #94 = Utf8               getLocalFileDataData\n+   #95 = Methodref          #1.#96        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryData:()[B\n+   #96 = NameAndType        #84:#79       // getCentralDirectoryData:()[B\n+   #97 = Utf8               getLocalFileDataLength\n+   #98 = Methodref          #1.#99        // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+   #99 = NameAndType        #87:#88       // getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+  #100 = Utf8               parseFromLocalFileData\n+  #101 = Utf8               Exceptions\n+  #102 = Class              #103          // java/util/zip/ZipException\n+  #103 = Utf8               java/util/zip/ZipException\n+  #104 = String             #105          // UniCode path extra data must have at least 5 bytes.\n+  #105 = Utf8               UniCode path extra data must have at least 5 bytes.\n+  #106 = Methodref          #102.#107     // java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+  #107 = NameAndType        #12:#108      // \"<init>\":(Ljava/lang/String;)V\n+  #108 = Utf8               (Ljava/lang/String;)V\n+  #109 = Class              #110          // java/lang/StringBuilder\n+  #110 = Utf8               java/lang/StringBuilder\n+  #111 = String             #112          // Unsupported version [\n+  #112 = Utf8               Unsupported version [\n+  #113 = Methodref          #109.#107     // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #114 = Methodref          #109.#115     // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #115 = NameAndType        #116:#117     // append:(I)Ljava/lang/StringBuilder;\n+  #116 = Utf8               append\n+  #117 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #118 = String             #119          // ] for UniCode path extra data.\n+  #119 = Utf8               ] for UniCode path extra data.\n+  #120 = Methodref          #109.#121     // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #121 = NameAndType        #116:#122     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #122 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #123 = Methodref          #109.#124     // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #124 = NameAndType        #125:#126     // toString:()Ljava/lang/String;\n+  #125 = Utf8               toString\n+  #126 = Utf8               ()Ljava/lang/String;\n+  #127 = Methodref          #64.#128      // org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+  #128 = NameAndType        #31:#129      // getValue:([BI)J\n+  #129 = Utf8               ([BI)J\n+  #130 = Utf8               buffer\n+  #131 = Utf8               offset\n+  #132 = Utf8               length\n+  #133 = Utf8               version\n+  #134 = Utf8               parseFromCentralDirectoryData\n+  #135 = Methodref          #1.#136       // org/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField.parseFromLocalFileData:([BII)V\n+  #136 = NameAndType        #100:#28      // parseFromLocalFileData:([BII)V\n   #137 = Utf8               SourceFile\n   #138 = Utf8               AbstractUnicodeExtraField.java\n {\n   private long nameCRC32;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n@@ -161,48 +161,48 @@\n \n   protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n          4: return\n       LineNumberTable:\n         line 35: 0\n         line 36: 4\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   protected org.apache.commons.compress.archivers.zip.AbstractUnicodeExtraField(java.lang.String, byte[], int, int);\n     descriptor: (Ljava/lang/String;[BII)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=6, args_size=5\n          0: aload_0\n-         1: invokespecial #1                  // Method java/lang/Object.\"<init>\":()V\n-         4: new           #7                  // class java/util/zip/CRC32\n+         1: invokespecial #15                 // Method java/lang/Object.\"<init>\":()V\n+         4: new           #22                 // class java/util/zip/CRC32\n          7: dup\n-         8: invokespecial #9                  // Method java/util/zip/CRC32.\"<init>\":()V\n+         8: invokespecial #24                 // Method java/util/zip/CRC32.\"<init>\":()V\n         11: astore        5\n         13: aload         5\n         15: aload_2\n         16: iload_3\n         17: iload         4\n-        19: invokevirtual #10                 // Method java/util/zip/CRC32.update:([BII)V\n+        19: invokevirtual #25                 // Method java/util/zip/CRC32.update:([BII)V\n         22: aload_0\n         23: aload         5\n-        25: invokevirtual #14                 // Method java/util/zip/CRC32.getValue:()J\n-        28: putfield      #18                 // Field nameCRC32:J\n+        25: invokevirtual #29                 // Method java/util/zip/CRC32.getValue:()J\n+        28: putfield      #33                 // Field nameCRC32:J\n         31: aload_0\n         32: aload_1\n-        33: getstatic     #24                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-        36: invokevirtual #30                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n-        39: putfield      #36                 // Field unicodeName:[B\n+        33: getstatic     #35                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        36: invokevirtual #41                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B\n+        39: putfield      #47                 // Field unicodeName:[B\n         42: return\n       LineNumberTable:\n         line 50: 0\n         line 51: 4\n         line 52: 13\n         line 53: 22\n         line 55: 31\n@@ -223,15 +223,15 @@\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n          4: aload_2\n          5: arraylength\n-         6: invokespecial #40                 // Method \"<init>\":(Ljava/lang/String;[BII)V\n+         6: invokespecial #58                 // Method \"<init>\":(Ljava/lang/String;[BII)V\n          9: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 9\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n@@ -240,49 +240,49 @@\n \n   private void assembleData();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #36                 // Field unicodeName:[B\n+         1: getfield      #47                 // Field unicodeName:[B\n          4: ifnonnull     8\n          7: return\n          8: aload_0\n          9: iconst_5\n         10: aload_0\n-        11: getfield      #36                 // Field unicodeName:[B\n+        11: getfield      #47                 // Field unicodeName:[B\n         14: arraylength\n         15: iadd\n         16: newarray       byte\n-        18: putfield      #43                 // Field data:[B\n+        18: putfield      #61                 // Field data:[B\n         21: aload_0\n-        22: getfield      #43                 // Field data:[B\n+        22: getfield      #61                 // Field data:[B\n         25: iconst_0\n         26: iconst_1\n         27: bastore\n         28: aload_0\n-        29: getfield      #18                 // Field nameCRC32:J\n-        32: invokestatic  #46                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n+        29: getfield      #33                 // Field nameCRC32:J\n+        32: invokestatic  #63                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getBytes:(J)[B\n         35: iconst_0\n         36: aload_0\n-        37: getfield      #43                 // Field data:[B\n+        37: getfield      #61                 // Field data:[B\n         40: iconst_1\n         41: iconst_4\n-        42: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        42: invokestatic  #68                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         45: aload_0\n-        46: getfield      #36                 // Field unicodeName:[B\n+        46: getfield      #47                 // Field unicodeName:[B\n         49: iconst_0\n         50: aload_0\n-        51: getfield      #43                 // Field data:[B\n+        51: getfield      #61                 // Field data:[B\n         54: iconst_5\n         55: aload_0\n-        56: getfield      #36                 // Field unicodeName:[B\n+        56: getfield      #47                 // Field unicodeName:[B\n         59: arraylength\n-        60: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        60: invokestatic  #68                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         63: return\n       LineNumberTable:\n         line 71: 0\n         line 72: 7\n         line 75: 8\n         line 77: 21\n         line 78: 28\n@@ -296,33 +296,33 @@\n \n   public long getNameCRC32();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #18                 // Field nameCRC32:J\n+         1: getfield      #33                 // Field nameCRC32:J\n          4: lreturn\n       LineNumberTable:\n         line 87: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   public void setNameCRC32(long);\n     descriptor: (J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: lload_1\n-         2: putfield      #18                 // Field nameCRC32:J\n+         2: putfield      #33                 // Field nameCRC32:J\n          5: aload_0\n          6: aconst_null\n-         7: putfield      #43                 // Field data:[B\n+         7: putfield      #61                 // Field data:[B\n         10: return\n       LineNumberTable:\n         line 95: 0\n         line 96: 5\n         line 97: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -333,29 +333,29 @@\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aconst_null\n          1: astore_1\n          2: aload_0\n-         3: getfield      #36                 // Field unicodeName:[B\n+         3: getfield      #47                 // Field unicodeName:[B\n          6: ifnull        29\n          9: aload_0\n-        10: getfield      #36                 // Field unicodeName:[B\n+        10: getfield      #47                 // Field unicodeName:[B\n         13: arraylength\n         14: newarray       byte\n         16: astore_1\n         17: aload_0\n-        18: getfield      #36                 // Field unicodeName:[B\n+        18: getfield      #47                 // Field unicodeName:[B\n         21: iconst_0\n         22: aload_1\n         23: iconst_0\n         24: aload_1\n         25: arraylength\n-        26: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        26: invokestatic  #68                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         29: aload_1\n         30: areturn\n       LineNumberTable:\n         line 103: 0\n         line 104: 2\n         line 105: 9\n         line 106: 17\n@@ -376,35 +376,38 @@\n       stack=5, locals=2, args_size=2\n          0: aload_1\n          1: ifnull        27\n          4: aload_0\n          5: aload_1\n          6: arraylength\n          7: newarray       byte\n-         9: putfield      #36                 // Field unicodeName:[B\n+         9: putfield      #47                 // Field unicodeName:[B\n         12: aload_1\n         13: iconst_0\n         14: aload_0\n-        15: getfield      #36                 // Field unicodeName:[B\n+        15: getfield      #47                 // Field unicodeName:[B\n         18: iconst_0\n         19: aload_1\n         20: arraylength\n-        21: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        21: invokestatic  #68                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         24: goto          32\n         27: aload_0\n         28: aconst_null\n-        29: putfield      #36                 // Field unicodeName:[B\n+        29: putfield      #47                 // Field unicodeName:[B\n         32: aload_0\n         33: aconst_null\n-        34: putfield      #43                 // Field data:[B\n+        34: putfield      #61                 // Field data:[B\n         37: return\n       LineNumberTable:\n         line 115: 0\n         line 116: 4\n         line 117: 12\n+        line 118: 19\n+        line 117: 21\n+        line 119: 24\n         line 120: 27\n         line 122: 32\n         line 123: 37\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      38     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0      38     1 unicodeName   [B\n@@ -414,36 +417,36 @@\n \n   public byte[] getCentralDirectoryData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #43                 // Field data:[B\n+         1: getfield      #61                 // Field data:[B\n          4: ifnonnull     11\n          7: aload_0\n-         8: invokespecial #57                 // Method assembleData:()V\n+         8: invokespecial #85                 // Method assembleData:()V\n         11: aconst_null\n         12: astore_1\n         13: aload_0\n-        14: getfield      #43                 // Field data:[B\n+        14: getfield      #61                 // Field data:[B\n         17: ifnull        40\n         20: aload_0\n-        21: getfield      #43                 // Field data:[B\n+        21: getfield      #61                 // Field data:[B\n         24: arraylength\n         25: newarray       byte\n         27: astore_1\n         28: aload_0\n-        29: getfield      #43                 // Field data:[B\n+        29: getfield      #61                 // Field data:[B\n         32: iconst_0\n         33: aload_1\n         34: iconst_0\n         35: aload_1\n         36: arraylength\n-        37: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        37: invokestatic  #68                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         40: aload_1\n         41: areturn\n       LineNumberTable:\n         line 127: 0\n         line 128: 7\n         line 130: 11\n         line 131: 13\n@@ -462,29 +465,29 @@\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getCentralDirectoryLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #43                 // Field data:[B\n+         1: getfield      #61                 // Field data:[B\n          4: ifnonnull     11\n          7: aload_0\n-         8: invokespecial #57                 // Method assembleData:()V\n-        11: new           #60                 // class org/apache/commons/compress/archivers/zip/ZipShort\n+         8: invokespecial #85                 // Method assembleData:()V\n+        11: new           #89                 // class org/apache/commons/compress/archivers/zip/ZipShort\n         14: dup\n         15: aload_0\n-        16: getfield      #43                 // Field data:[B\n+        16: getfield      #61                 // Field data:[B\n         19: ifnull        30\n         22: aload_0\n-        23: getfield      #43                 // Field data:[B\n+        23: getfield      #61                 // Field data:[B\n         26: arraylength\n         27: goto          31\n         30: iconst_0\n-        31: invokespecial #62                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n+        31: invokespecial #91                 // Method org/apache/commons/compress/archivers/zip/ZipShort.\"<init>\":(I)V\n         34: areturn\n       LineNumberTable:\n         line 140: 0\n         line 141: 7\n         line 143: 11\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -502,141 +505,142 @@\n \n   public byte[] getLocalFileDataData();\n     descriptor: ()[B\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #65                 // Method getCentralDirectoryData:()[B\n+         1: invokevirtual #95                 // Method getCentralDirectoryData:()[B\n          4: areturn\n       LineNumberTable:\n         line 148: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   public org.apache.commons.compress.archivers.zip.ZipShort getLocalFileDataLength();\n     descriptor: ()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #69                 // Method getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n+         1: invokevirtual #98                 // Method getCentralDirectoryLength:()Lorg/apache/commons/compress/archivers/zip/ZipShort;\n          4: areturn\n       LineNumberTable:\n         line 153: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n \n   public void parseFromLocalFileData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.util.zip.ZipException\n     Code:\n       stack=6, locals=5, args_size=4\n          0: iload_3\n          1: iconst_5\n          2: if_icmpge     15\n-         5: new           #73                 // class java/util/zip/ZipException\n+         5: new           #102                // class java/util/zip/ZipException\n          8: dup\n-         9: ldc           #75                 // String UniCode path extra data must have at least 5 bytes.\n-        11: invokespecial #77                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+         9: ldc           #104                // String UniCode path extra data must have at least 5 bytes.\n+        11: invokespecial #106                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n         14: athrow\n         15: aload_1\n         16: iload_2\n         17: baload\n         18: istore        4\n         20: iload         4\n         22: iconst_1\n-        23: if_icmpeq     59\n-        26: new           #73                 // class java/util/zip/ZipException\n+        23: if_icmpeq     56\n+        26: new           #102                // class java/util/zip/ZipException\n         29: dup\n-        30: new           #80                 // class java/lang/StringBuilder\n+        30: new           #109                // class java/lang/StringBuilder\n         33: dup\n-        34: invokespecial #82                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        37: ldc           #83                 // String Unsupported version [\n-        39: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        42: iload         4\n-        44: invokevirtual #89                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        47: ldc           #92                 // String ] for UniCode path extra data.\n-        49: invokevirtual #85                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #94                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        55: invokespecial #77                 // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n-        58: athrow\n-        59: aload_0\n-        60: aload_1\n-        61: iload_2\n-        62: iconst_1\n-        63: iadd\n-        64: invokestatic  #98                 // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n-        67: putfield      #18                 // Field nameCRC32:J\n-        70: aload_0\n-        71: iload_3\n-        72: iconst_5\n-        73: isub\n-        74: newarray       byte\n-        76: putfield      #36                 // Field unicodeName:[B\n-        79: aload_1\n-        80: iload_2\n-        81: iconst_5\n-        82: iadd\n-        83: aload_0\n-        84: getfield      #36                 // Field unicodeName:[B\n-        87: iconst_0\n-        88: iload_3\n-        89: iconst_5\n-        90: isub\n-        91: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-        94: aload_0\n-        95: aconst_null\n-        96: putfield      #43                 // Field data:[B\n-        99: return\n+        34: ldc           #111                // String Unsupported version [\n+        36: invokespecial #113                // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        39: iload         4\n+        41: invokevirtual #114                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        44: ldc           #118                // String ] for UniCode path extra data.\n+        46: invokevirtual #120                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        49: invokevirtual #123                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        52: invokespecial #106                // Method java/util/zip/ZipException.\"<init>\":(Ljava/lang/String;)V\n+        55: athrow\n+        56: aload_0\n+        57: aload_1\n+        58: iload_2\n+        59: iconst_1\n+        60: iadd\n+        61: invokestatic  #127                // Method org/apache/commons/compress/archivers/zip/ZipLong.getValue:([BI)J\n+        64: putfield      #33                 // Field nameCRC32:J\n+        67: aload_0\n+        68: iload_3\n+        69: iconst_5\n+        70: isub\n+        71: newarray       byte\n+        73: putfield      #47                 // Field unicodeName:[B\n+        76: aload_1\n+        77: iload_2\n+        78: iconst_5\n+        79: iadd\n+        80: aload_0\n+        81: getfield      #47                 // Field unicodeName:[B\n+        84: iconst_0\n+        85: iload_3\n+        86: iconst_5\n+        87: isub\n+        88: invokestatic  #68                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        91: aload_0\n+        92: aconst_null\n+        93: putfield      #61                 // Field data:[B\n+        96: return\n       LineNumberTable:\n         line 160: 0\n         line 161: 5\n         line 164: 15\n         line 166: 20\n         line 167: 26\n-        line 171: 59\n-        line 172: 70\n-        line 173: 79\n-        line 174: 94\n-        line 175: 99\n+        line 168: 44\n+        line 167: 52\n+        line 171: 56\n+        line 172: 67\n+        line 173: 76\n+        line 174: 91\n+        line 175: 96\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0     100     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n-            0     100     1 buffer   [B\n-            0     100     2 offset   I\n-            0     100     3 length   I\n-           20      80     4 version   I\n+            0      97     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n+            0      97     1 buffer   [B\n+            0      97     2 offset   I\n+            0      97     3 length   I\n+           20      77     4 version   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 15 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 43\n+          offset_delta = 40\n           locals = [ int ]\n-    Exceptions:\n-      throws java.util.zip.ZipException\n \n   public void parseFromCentralDirectoryData(byte[], int, int) throws java.util.zip.ZipException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.util.zip.ZipException\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #101                // Method parseFromLocalFileData:([BII)V\n+         4: invokevirtual #135                // Method parseFromLocalFileData:([BII)V\n          7: return\n       LineNumberTable:\n         line 185: 0\n         line 186: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/AbstractUnicodeExtraField;\n             0       8     1 buffer   [B\n             0       8     2 offset   I\n             0       8     3 length   I\n-    Exceptions:\n-      throws java.util.zip.ZipException\n }\n SourceFile: \"AbstractUnicodeExtraField.java\"\n"}]}
