{"diffoscope-json-version": 1, "source1": "first/SimplePathVisitor.class", "source2": "second/SimplePathVisitor.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,107 +1,107 @@\n-  SHA-256 checksum 3f56c299152255e0b19012941ed257b7092ecd3cca13589684ad263c73310ac7\n+  SHA-256 checksum 78731fb93c31602b44d80cbed76464193c540f5417ee1183414ae9235bbf9fa5\n   Compiled from \"SimplePathVisitor.java\"\n public abstract class org.apache.commons.io.file.SimplePathVisitor extends java.nio.file.SimpleFileVisitor<java.nio.file.Path> implements org.apache.commons.io.file.PathVisitor\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n   this_class: #12                         // org/apache/commons/io/file/SimplePathVisitor\n-  super_class: #13                        // java/nio/file/SimpleFileVisitor\n+  super_class: #2                         // java/nio/file/SimpleFileVisitor\n   interfaces: 1, fields: 1, methods: 5, attributes: 4\n Constant pool:\n-   #1 = Methodref          #13.#34        // java/nio/file/SimpleFileVisitor.\"<init>\":()V\n-   #2 = InvokeDynamic      #0:#40         // #0:apply:(Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n-   #3 = Fieldref           #12.#41        // org/apache/commons/io/file/SimplePathVisitor.visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n-   #4 = String             #25            // visitFileFailed\n-   #5 = Methodref          #42.#43        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #6 = Class              #44            // org/apache/commons/io/function/IOBiFunction\n-   #7 = InterfaceMethodref #6.#45         // org/apache/commons/io/function/IOBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #8 = Class              #46            // java/nio/file/FileVisitResult\n-   #9 = Class              #47            // java/nio/file/Path\n-  #10 = Methodref          #12.#48        // org/apache/commons/io/file/SimplePathVisitor.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #11 = Methodref          #13.#49        // java/nio/file/SimpleFileVisitor.visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #12 = Class              #50            // org/apache/commons/io/file/SimplePathVisitor\n-  #13 = Class              #51            // java/nio/file/SimpleFileVisitor\n-  #14 = Class              #52            // org/apache/commons/io/file/PathVisitor\n+   #1 = Methodref          #2.#3          // java/nio/file/SimpleFileVisitor.\"<init>\":()V\n+   #2 = Class              #4             // java/nio/file/SimpleFileVisitor\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/nio/file/SimpleFileVisitor\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = InvokeDynamic      #0:#8          // #0:apply:(Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n+   #8 = NameAndType        #9:#10         // apply:(Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n+   #9 = Utf8               apply\n+  #10 = Utf8               (Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n+  #11 = Fieldref           #12.#13        // org/apache/commons/io/file/SimplePathVisitor.visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n+  #12 = Class              #14            // org/apache/commons/io/file/SimplePathVisitor\n+  #13 = NameAndType        #15:#16        // visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n+  #14 = Utf8               org/apache/commons/io/file/SimplePathVisitor\n   #15 = Utf8               visitFileFailedFunction\n   #16 = Utf8               Lorg/apache/commons/io/function/IOBiFunction;\n-  #17 = Utf8               Signature\n-  #18 = Utf8               Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;\n-  #19 = Utf8               <init>\n-  #20 = Utf8               ()V\n-  #21 = Utf8               Code\n-  #22 = Utf8               LineNumberTable\n-  #23 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;)V\n-  #24 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n-  #25 = Utf8               visitFileFailed\n-  #26 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #27 = Utf8               Exceptions\n-  #28 = Class              #53            // java/io/IOException\n-  #29 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #30 = Utf8               lambda$new$0\n-  #31 = Utf8               Ljava/nio/file/SimpleFileVisitor<Ljava/nio/file/Path;>;Lorg/apache/commons/io/file/PathVisitor;\n-  #32 = Utf8               SourceFile\n-  #33 = Utf8               SimplePathVisitor.java\n-  #34 = NameAndType        #19:#20        // \"<init>\":()V\n-  #35 = Utf8               BootstrapMethods\n-  #36 = MethodHandle       6:#54          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #37 = MethodType         #55            //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #38 = MethodHandle       7:#56          // REF_invokeSpecial org/apache/commons/io/file/SimplePathVisitor.lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #39 = MethodType         #26            //  (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #40 = NameAndType        #57:#58        // apply:(Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n-  #41 = NameAndType        #15:#16        // visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n-  #42 = Class              #59            // java/util/Objects\n-  #43 = NameAndType        #60:#61        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #44 = Utf8               org/apache/commons/io/function/IOBiFunction\n-  #45 = NameAndType        #57:#55        // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #46 = Utf8               java/nio/file/FileVisitResult\n-  #47 = Utf8               java/nio/file/Path\n-  #48 = NameAndType        #25:#26        // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #49 = NameAndType        #25:#29        // visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #50 = Utf8               org/apache/commons/io/file/SimplePathVisitor\n-  #51 = Utf8               java/nio/file/SimpleFileVisitor\n-  #52 = Utf8               org/apache/commons/io/file/PathVisitor\n-  #53 = Utf8               java/io/IOException\n-  #54 = Methodref          #62.#63        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #55 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #56 = Methodref          #12.#64        // org/apache/commons/io/file/SimplePathVisitor.lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #57 = Utf8               apply\n-  #58 = Utf8               (Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n-  #59 = Utf8               java/util/Objects\n-  #60 = Utf8               requireNonNull\n-  #61 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #62 = Class              #65            // java/lang/invoke/LambdaMetafactory\n-  #63 = NameAndType        #66:#70        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #64 = NameAndType        #30:#29        // lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-  #65 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #66 = Utf8               metafactory\n-  #67 = Class              #72            // java/lang/invoke/MethodHandles$Lookup\n-  #68 = Utf8               Lookup\n-  #69 = Utf8               InnerClasses\n-  #70 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #71 = Class              #73            // java/lang/invoke/MethodHandles\n-  #72 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #73 = Utf8               java/lang/invoke/MethodHandles\n+  #17 = String             #18            // visitFileFailed\n+  #18 = Utf8               visitFileFailed\n+  #19 = Methodref          #20.#21        // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #20 = Class              #22            // java/util/Objects\n+  #21 = NameAndType        #23:#24        // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #22 = Utf8               java/util/Objects\n+  #23 = Utf8               requireNonNull\n+  #24 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #25 = Class              #26            // org/apache/commons/io/function/IOBiFunction\n+  #26 = Utf8               org/apache/commons/io/function/IOBiFunction\n+  #27 = InterfaceMethodref #25.#28        // org/apache/commons/io/function/IOBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #28 = NameAndType        #9:#29         // apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #29 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #30 = Class              #31            // java/nio/file/FileVisitResult\n+  #31 = Utf8               java/nio/file/FileVisitResult\n+  #32 = Class              #33            // java/nio/file/Path\n+  #33 = Utf8               java/nio/file/Path\n+  #34 = Methodref          #12.#35        // org/apache/commons/io/file/SimplePathVisitor.visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #35 = NameAndType        #18:#36        // visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #36 = Utf8               (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #37 = Methodref          #2.#38         // java/nio/file/SimpleFileVisitor.visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #38 = NameAndType        #18:#39        // visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #39 = Utf8               (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #40 = Class              #41            // org/apache/commons/io/file/PathVisitor\n+  #41 = Utf8               org/apache/commons/io/file/PathVisitor\n+  #42 = Utf8               Signature\n+  #43 = Utf8               Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;\n+  #44 = Utf8               Code\n+  #45 = Utf8               LineNumberTable\n+  #46 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction;)V\n+  #47 = Utf8               (Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n+  #48 = Utf8               Exceptions\n+  #49 = Class              #50            // java/io/IOException\n+  #50 = Utf8               java/io/IOException\n+  #51 = Utf8               lambda$new$0\n+  #52 = Utf8               Ljava/nio/file/SimpleFileVisitor<Ljava/nio/file/Path;>;Lorg/apache/commons/io/file/PathVisitor;\n+  #53 = Utf8               SourceFile\n+  #54 = Utf8               SimplePathVisitor.java\n+  #55 = Utf8               BootstrapMethods\n+  #56 = MethodHandle       6:#57          // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #57 = Methodref          #58.#59        // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #58 = Class              #60            // java/lang/invoke/LambdaMetafactory\n+  #59 = NameAndType        #61:#62        // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #60 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #61 = Utf8               metafactory\n+  #62 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #63 = MethodType         #29            //  (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #64 = MethodHandle       7:#65          // REF_invokeSpecial org/apache/commons/io/file/SimplePathVisitor.lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #65 = Methodref          #12.#66        // org/apache/commons/io/file/SimplePathVisitor.lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #66 = NameAndType        #51:#39        // lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #67 = MethodType         #36            //  (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+  #68 = Utf8               InnerClasses\n+  #69 = Class              #70            // java/lang/invoke/MethodHandles$Lookup\n+  #70 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #71 = Class              #72            // java/lang/invoke/MethodHandles\n+  #72 = Utf8               java/lang/invoke/MethodHandles\n+  #73 = Utf8               Lookup\n {\n   private final org.apache.commons.io.function.IOBiFunction<java.nio.file.Path, java.io.IOException, java.nio.file.FileVisitResult> visitFileFailedFunction;\n     descriptor: Lorg/apache/commons/io/function/IOBiFunction;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n-    Signature: #18                          // Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;\n+    Signature: #43                          // Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;\n \n   protected org.apache.commons.io.file.SimplePathVisitor();\n     descriptor: ()V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: invokespecial #1                  // Method java/nio/file/SimpleFileVisitor.\"<init>\":()V\n          4: aload_0\n          5: aload_0\n-         6: invokedynamic #2,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n-        11: putfield      #3                  // Field visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n+         6: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Lorg/apache/commons/io/file/SimplePathVisitor;)Lorg/apache/commons/io/function/IOBiFunction;\n+        11: putfield      #11                 // Field visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n         14: return\n       LineNumberTable:\n         line 40: 0\n         line 41: 4\n         line 42: 14\n \n   protected org.apache.commons.io.file.SimplePathVisitor(org.apache.commons.io.function.IOBiFunction<java.nio.file.Path, java.io.IOException, java.nio.file.FileVisitResult>);\n@@ -109,76 +109,76 @@\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method java/nio/file/SimpleFileVisitor.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: ldc           #4                  // String visitFileFailed\n-         8: invokestatic  #5                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        11: checkcast     #6                  // class org/apache/commons/io/function/IOBiFunction\n-        14: putfield      #3                  // Field visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n+         6: ldc           #17                 // String visitFileFailed\n+         8: invokestatic  #19                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        11: checkcast     #25                 // class org/apache/commons/io/function/IOBiFunction\n+        14: putfield      #11                 // Field visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n         17: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 4\n         line 51: 17\n-    Signature: #24                          // (Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n+    Signature: #47                          // (Lorg/apache/commons/io/function/IOBiFunction<Ljava/nio/file/Path;Ljava/io/IOException;Ljava/nio/file/FileVisitResult;>;)V\n \n   public java.nio.file.FileVisitResult visitFileFailed(java.nio.file.Path, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #3                  // Field visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n+         1: getfield      #11                 // Field visitFileFailedFunction:Lorg/apache/commons/io/function/IOBiFunction;\n          4: aload_1\n          5: aload_2\n-         6: invokeinterface #7,  3            // InterfaceMethod org/apache/commons/io/function/IOBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-        11: checkcast     #8                  // class java/nio/file/FileVisitResult\n+         6: invokeinterface #27,  3           // InterfaceMethod org/apache/commons/io/function/IOBiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+        11: checkcast     #30                 // class java/nio/file/FileVisitResult\n         14: areturn\n       LineNumberTable:\n         line 55: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public java.nio.file.FileVisitResult visitFileFailed(java.lang.Object, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: checkcast     #9                  // class java/nio/file/Path\n+         2: checkcast     #32                 // class java/nio/file/Path\n          5: aload_2\n-         6: invokevirtual #10                 // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+         6: invokevirtual #34                 // Method visitFileFailed:(Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n          9: areturn\n       LineNumberTable:\n         line 33: 0\n     Exceptions:\n       throws java.io.IOException\n \n   private java.nio.file.FileVisitResult lambda$new$0(java.lang.Object, java.io.IOException) throws java.io.IOException;\n     descriptor: (Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokespecial #11                 // Method java/nio/file/SimpleFileVisitor.visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+         3: invokespecial #37                 // Method java/nio/file/SimpleFileVisitor.visitFileFailed:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n          6: areturn\n       LineNumberTable:\n         line 41: 0\n     Exceptions:\n       throws java.io.IOException\n }\n-Signature: #31                          // Ljava/nio/file/SimpleFileVisitor<Ljava/nio/file/Path;>;Lorg/apache/commons/io/file/PathVisitor;\n+Signature: #52                          // Ljava/nio/file/SimpleFileVisitor<Ljava/nio/file/Path;>;Lorg/apache/commons/io/file/PathVisitor;\n SourceFile: \"SimplePathVisitor.java\"\n-InnerClasses:\n-  public static final #68= #67 of #71;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #36 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #56 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #37 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-      #38 REF_invokeSpecial org/apache/commons/io/file/SimplePathVisitor.lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n-      #39 (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+      #63 (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+      #64 REF_invokeSpecial org/apache/commons/io/file/SimplePathVisitor.lambda$new$0:(Ljava/lang/Object;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+      #67 (Ljava/nio/file/Path;Ljava/io/IOException;)Ljava/nio/file/FileVisitResult;\n+InnerClasses:\n+  public static final #73= #69 of #71;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
