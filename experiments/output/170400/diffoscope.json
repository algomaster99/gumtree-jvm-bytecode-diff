{"diffoscope-json-version": 1, "source1": "first/ParserConfiguration.class", "source2": "second/ParserConfiguration.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,24 +1,24 @@\n-  SHA-256 checksum 11bdae20d5b149df20c0c1a732aac0bdbb63de22bbfae715cbba0930724d78e2\n+  SHA-256 checksum a441ea95b6e3b0afc10362ff30820278bf4b6cebb72ed9a28bf80b45cf6e92a8\n   Compiled from \"ParserConfiguration.java\"\n public class org.json.ParserConfiguration\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #3                          // org/json/ParserConfiguration\n   super_class: #7                         // java/lang/Object\n   interfaces: 0, fields: 4, methods: 8, attributes: 1\n Constant pool:\n-   #1 = Methodref          #7.#49         // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #3.#50         // org/json/ParserConfiguration.keepStrings:Z\n-   #3 = Class              #51            // org/json/ParserConfiguration\n-   #4 = Fieldref           #3.#52         // org/json/ParserConfiguration.maxNestingDepth:I\n-   #5 = Methodref          #3.#53         // org/json/ParserConfiguration.\"<init>\":(ZI)V\n-   #6 = Methodref          #3.#54         // org/json/ParserConfiguration.clone:()Lorg/json/ParserConfiguration;\n-   #7 = Class              #55            // java/lang/Object\n+   #1 = Methodref          #7.#48         // java/lang/Object.\"<init>\":()V\n+   #2 = Fieldref           #3.#49         // org/json/ParserConfiguration.keepStrings:Z\n+   #3 = Class              #50            // org/json/ParserConfiguration\n+   #4 = Fieldref           #3.#51         // org/json/ParserConfiguration.maxNestingDepth:I\n+   #5 = Methodref          #3.#52         // org/json/ParserConfiguration.\"<init>\":(ZI)V\n+   #6 = Methodref          #3.#53         // org/json/ParserConfiguration.clone:()Lorg/json/ParserConfiguration;\n+   #7 = Class              #54            // java/lang/Object\n    #8 = Utf8               UNDEFINED_MAXIMUM_NESTING_DEPTH\n    #9 = Utf8               I\n   #10 = Utf8               ConstantValue\n   #11 = Integer            -1\n   #12 = Utf8               DEFAULT_MAXIMUM_NESTING_DEPTH\n   #13 = Integer            512\n   #14 = Utf8               keepStrings\n@@ -45,29 +45,28 @@\n   #35 = Utf8               Signature\n   #36 = Utf8               <T:Lorg/json/ParserConfiguration;>(Z)TT;\n   #37 = Utf8               getMaxNestingDepth\n   #38 = Utf8               ()I\n   #39 = Utf8               withMaxNestingDepth\n   #40 = Utf8               (I)Lorg/json/ParserConfiguration;\n   #41 = Utf8               StackMapTable\n-  #42 = Class              #51            // org/json/ParserConfiguration\n-  #43 = Utf8               <T:Lorg/json/ParserConfiguration;>(I)TT;\n-  #44 = Utf8               ()Ljava/lang/Object;\n-  #45 = Utf8               Exceptions\n-  #46 = Class              #56            // java/lang/CloneNotSupportedException\n-  #47 = Utf8               SourceFile\n-  #48 = Utf8               ParserConfiguration.java\n-  #49 = NameAndType        #17:#18        // \"<init>\":()V\n-  #50 = NameAndType        #14:#15        // keepStrings:Z\n-  #51 = Utf8               org/json/ParserConfiguration\n-  #52 = NameAndType        #16:#9         // maxNestingDepth:I\n-  #53 = NameAndType        #17:#24        // \"<init>\":(ZI)V\n-  #54 = NameAndType        #25:#26        // clone:()Lorg/json/ParserConfiguration;\n-  #55 = Utf8               java/lang/Object\n-  #56 = Utf8               java/lang/CloneNotSupportedException\n+  #42 = Utf8               <T:Lorg/json/ParserConfiguration;>(I)TT;\n+  #43 = Utf8               ()Ljava/lang/Object;\n+  #44 = Utf8               Exceptions\n+  #45 = Class              #55            // java/lang/CloneNotSupportedException\n+  #46 = Utf8               SourceFile\n+  #47 = Utf8               ParserConfiguration.java\n+  #48 = NameAndType        #17:#18        // \"<init>\":()V\n+  #49 = NameAndType        #14:#15        // keepStrings:Z\n+  #50 = Utf8               org/json/ParserConfiguration\n+  #51 = NameAndType        #16:#9         // maxNestingDepth:I\n+  #52 = NameAndType        #17:#24        // \"<init>\":(ZI)V\n+  #53 = NameAndType        #25:#26        // clone:()Lorg/json/ParserConfiguration;\n+  #54 = Utf8               java/lang/Object\n+  #55 = Utf8               java/lang/CloneNotSupportedException\n {\n   public static final int UNDEFINED_MAXIMUM_NESTING_DEPTH = -1;\n     descriptor: I\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     ConstantValue: int -1\n \n   public static final int DEFAULT_MAXIMUM_NESTING_DEPTH = 512;\n@@ -240,15 +239,15 @@\n         Start  Length  Slot  Name   Signature\n             5      20     2 newConfig   TT;\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n           offset_delta = 18\n           locals = [ class org/json/ParserConfiguration ]\n         frame_type = 4 /* same */\n-    Signature: #43                          // <T:Lorg/json/ParserConfiguration;>(I)TT;\n+    Signature: #42                          // <T:Lorg/json/ParserConfiguration;>(I)TT;\n \n   protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;\n     descriptor: ()Ljava/lang/Object;\n     flags: (0x1044) ACC_PROTECTED, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n"}]}
