{"diffoscope-json-version": 1, "source1": "first/DeltaDecoder.class", "source2": "second/DeltaDecoder.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,253 +1,251 @@\n-  SHA-256 checksum 7e7b7d864518a98d4068832f3289e6532ae644e2e532952d33d035659b89abe2\n+  SHA-256 checksum cfd84e35e5919f79d36fffa3116c5c3fdd760c02a094143da002444019010532\n   Compiled from \"DeltaDecoder.java\"\n class org.apache.commons.compress.archivers.sevenz.DeltaDecoder extends org.apache.commons.compress.archivers.sevenz.CoderBase\n   minor version: 0\n   major version: 51\n   flags: (0x0020) ACC_SUPER\n-  this_class: #18                         // org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n-  super_class: #19                        // org/apache/commons/compress/archivers/sevenz/CoderBase\n+  this_class: #1                          // org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n+  super_class: #3                         // org/apache/commons/compress/archivers/sevenz/CoderBase\n   interfaces: 0, fields: 0, methods: 6, attributes: 1\n Constant pool:\n-    #1 = Class              #63           // java/lang/Class\n-    #2 = Class              #64           // java/lang/Number\n-    #3 = Methodref          #19.#65       // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n-    #4 = Class              #66           // org/tukaani/xz/DeltaOptions\n-    #5 = Methodref          #18.#67       // org/apache/commons/compress/archivers/sevenz/DeltaDecoder.getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-    #6 = Methodref          #4.#68        // org/tukaani/xz/DeltaOptions.\"<init>\":(I)V\n-    #7 = Methodref          #4.#69        // org/tukaani/xz/DeltaOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n-    #8 = Methodref          #18.#70       // org/apache/commons/compress/archivers/sevenz/DeltaDecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n-    #9 = Class              #71           // org/tukaani/xz/FinishableWrapperOutputStream\n-   #10 = Methodref          #9.#72        // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-   #11 = Methodref          #4.#73        // org/tukaani/xz/DeltaOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-   #12 = Class              #74           // org/tukaani/xz/UnsupportedOptionsException\n-   #13 = Class              #75           // java/io/IOException\n-   #14 = Methodref          #12.#76       // org/tukaani/xz/UnsupportedOptionsException.getMessage:()Ljava/lang/String;\n-   #15 = Methodref          #13.#77       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = Methodref          #78.#79       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n-   #17 = Fieldref           #80.#81       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n-   #18 = Class              #82           // org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n-   #19 = Class              #83           // org/apache/commons/compress/archivers/sevenz/CoderBase\n-   #20 = Utf8               <init>\n-   #21 = Utf8               ()V\n-   #22 = Utf8               Code\n-   #23 = Utf8               LineNumberTable\n-   #24 = Utf8               LocalVariableTable\n-   #25 = Utf8               this\n-   #26 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n-   #27 = Utf8               decode\n-   #28 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n-   #29 = Utf8               archiveName\n-   #30 = Utf8               Ljava/lang/String;\n-   #31 = Utf8               in\n-   #32 = Utf8               Ljava/io/InputStream;\n-   #33 = Utf8               uncompressedLength\n-   #34 = Utf8               J\n-   #35 = Utf8               coder\n-   #36 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n-   #37 = Utf8               password\n-   #38 = Utf8               [B\n-   #39 = Utf8               maxMemoryLimitInKb\n-   #40 = Utf8               I\n-   #41 = Utf8               Exceptions\n-   #42 = Utf8               encode\n-   #43 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n-   #44 = Utf8               ex\n-   #45 = Utf8               Lorg/tukaani/xz/UnsupportedOptionsException;\n-   #46 = Utf8               out\n-   #47 = Utf8               Ljava/io/OutputStream;\n-   #48 = Utf8               options\n-   #49 = Utf8               Ljava/lang/Object;\n-   #50 = Utf8               distance\n-   #51 = Utf8               StackMapTable\n-   #52 = Class              #82           // org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n-   #53 = Class              #84           // java/io/OutputStream\n-   #54 = Class              #85           // java/lang/Object\n-   #55 = Class              #74           // org/tukaani/xz/UnsupportedOptionsException\n-   #56 = Utf8               getOptionsAsProperties\n-   #57 = Utf8               (Ljava/lang/Object;)[B\n-   #58 = Utf8               getOptionsFromCoder\n-   #59 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n-   #60 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #61 = Utf8               SourceFile\n-   #62 = Utf8               DeltaDecoder.java\n-   #63 = Utf8               java/lang/Class\n-   #64 = Utf8               java/lang/Number\n-   #65 = NameAndType        #20:#86       // \"<init>\":([Ljava/lang/Class;)V\n-   #66 = Utf8               org/tukaani/xz/DeltaOptions\n-   #67 = NameAndType        #58:#60       // getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-   #68 = NameAndType        #20:#87       // \"<init>\":(I)V\n-   #69 = NameAndType        #88:#89       // getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n-   #70 = NameAndType        #90:#91       // numberOptionOrDefault:(Ljava/lang/Object;I)I\n-   #71 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n-   #72 = NameAndType        #20:#92       // \"<init>\":(Ljava/io/OutputStream;)V\n-   #73 = NameAndType        #93:#94       // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-   #74 = Utf8               org/tukaani/xz/UnsupportedOptionsException\n-   #75 = Utf8               java/io/IOException\n-   #76 = NameAndType        #95:#96       // getMessage:()Ljava/lang/String;\n-   #77 = NameAndType        #20:#97       // \"<init>\":(Ljava/lang/String;)V\n-   #78 = Class              #98           // java/lang/Integer\n-   #79 = NameAndType        #99:#100      // valueOf:(I)Ljava/lang/Integer;\n-   #80 = Class              #101          // org/apache/commons/compress/archivers/sevenz/Coder\n-   #81 = NameAndType        #102:#38      // properties:[B\n-   #82 = Utf8               org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n-   #83 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n-   #84 = Utf8               java/io/OutputStream\n-   #85 = Utf8               java/lang/Object\n-   #86 = Utf8               ([Ljava/lang/Class;)V\n-   #87 = Utf8               (I)V\n-   #88 = Utf8               getInputStream\n-   #89 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n-   #90 = Utf8               numberOptionOrDefault\n-   #91 = Utf8               (Ljava/lang/Object;I)I\n-   #92 = Utf8               (Ljava/io/OutputStream;)V\n-   #93 = Utf8               getOutputStream\n-   #94 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n-   #95 = Utf8               getMessage\n-   #96 = Utf8               ()Ljava/lang/String;\n-   #97 = Utf8               (Ljava/lang/String;)V\n-   #98 = Utf8               java/lang/Integer\n-   #99 = Utf8               valueOf\n-  #100 = Utf8               (I)Ljava/lang/Integer;\n-  #101 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n-  #102 = Utf8               properties\n+    #1 = Class              #2            // org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n+    #2 = Utf8               org/apache/commons/compress/archivers/sevenz/DeltaDecoder\n+    #3 = Class              #4            // org/apache/commons/compress/archivers/sevenz/CoderBase\n+    #4 = Utf8               org/apache/commons/compress/archivers/sevenz/CoderBase\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Utf8               Code\n+    #8 = Class              #9            // java/lang/Class\n+    #9 = Utf8               java/lang/Class\n+   #10 = Class              #11           // java/lang/Number\n+   #11 = Utf8               java/lang/Number\n+   #12 = Methodref          #3.#13        // org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+   #13 = NameAndType        #5:#14        // \"<init>\":([Ljava/lang/Class;)V\n+   #14 = Utf8               ([Ljava/lang/Class;)V\n+   #15 = Utf8               LineNumberTable\n+   #16 = Utf8               LocalVariableTable\n+   #17 = Utf8               this\n+   #18 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n+   #19 = Utf8               decode\n+   #20 = Utf8               (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n+   #21 = Utf8               Exceptions\n+   #22 = Class              #23           // java/io/IOException\n+   #23 = Utf8               java/io/IOException\n+   #24 = Class              #25           // org/tukaani/xz/DeltaOptions\n+   #25 = Utf8               org/tukaani/xz/DeltaOptions\n+   #26 = Methodref          #1.#27        // org/apache/commons/compress/archivers/sevenz/DeltaDecoder.getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #27 = NameAndType        #28:#29       // getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #28 = Utf8               getOptionsFromCoder\n+   #29 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+   #30 = Methodref          #24.#31       // org/tukaani/xz/DeltaOptions.\"<init>\":(I)V\n+   #31 = NameAndType        #5:#32        // \"<init>\":(I)V\n+   #32 = Utf8               (I)V\n+   #33 = Methodref          #24.#34       // org/tukaani/xz/DeltaOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+   #34 = NameAndType        #35:#36       // getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+   #35 = Utf8               getInputStream\n+   #36 = Utf8               (Ljava/io/InputStream;)Ljava/io/InputStream;\n+   #37 = Utf8               archiveName\n+   #38 = Utf8               Ljava/lang/String;\n+   #39 = Utf8               in\n+   #40 = Utf8               Ljava/io/InputStream;\n+   #41 = Utf8               uncompressedLength\n+   #42 = Utf8               J\n+   #43 = Utf8               coder\n+   #44 = Utf8               Lorg/apache/commons/compress/archivers/sevenz/Coder;\n+   #45 = Utf8               password\n+   #46 = Utf8               [B\n+   #47 = Utf8               maxMemoryLimitInKb\n+   #48 = Utf8               I\n+   #49 = Utf8               encode\n+   #50 = Utf8               (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n+   #51 = Methodref          #1.#52        // org/apache/commons/compress/archivers/sevenz/DeltaDecoder.numberOptionOrDefault:(Ljava/lang/Object;I)I\n+   #52 = NameAndType        #53:#54       // numberOptionOrDefault:(Ljava/lang/Object;I)I\n+   #53 = Utf8               numberOptionOrDefault\n+   #54 = Utf8               (Ljava/lang/Object;I)I\n+   #55 = Class              #56           // org/tukaani/xz/FinishableWrapperOutputStream\n+   #56 = Utf8               org/tukaani/xz/FinishableWrapperOutputStream\n+   #57 = Methodref          #55.#58       // org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+   #58 = NameAndType        #5:#59        // \"<init>\":(Ljava/io/OutputStream;)V\n+   #59 = Utf8               (Ljava/io/OutputStream;)V\n+   #60 = Methodref          #24.#61       // org/tukaani/xz/DeltaOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+   #61 = NameAndType        #62:#63       // getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+   #62 = Utf8               getOutputStream\n+   #63 = Utf8               (Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+   #64 = Methodref          #65.#67       // org/tukaani/xz/UnsupportedOptionsException.getMessage:()Ljava/lang/String;\n+   #65 = Class              #66           // org/tukaani/xz/UnsupportedOptionsException\n+   #66 = Utf8               org/tukaani/xz/UnsupportedOptionsException\n+   #67 = NameAndType        #68:#69       // getMessage:()Ljava/lang/String;\n+   #68 = Utf8               getMessage\n+   #69 = Utf8               ()Ljava/lang/String;\n+   #70 = Methodref          #22.#71       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #71 = NameAndType        #5:#72        // \"<init>\":(Ljava/lang/String;)V\n+   #72 = Utf8               (Ljava/lang/String;)V\n+   #73 = Utf8               out\n+   #74 = Utf8               Ljava/io/OutputStream;\n+   #75 = Utf8               options\n+   #76 = Utf8               Ljava/lang/Object;\n+   #77 = Utf8               distance\n+   #78 = Utf8               ex\n+   #79 = Utf8               Lorg/tukaani/xz/UnsupportedOptionsException;\n+   #80 = Utf8               StackMapTable\n+   #81 = Class              #82           // java/io/OutputStream\n+   #82 = Utf8               java/io/OutputStream\n+   #83 = Class              #84           // java/lang/Object\n+   #84 = Utf8               java/lang/Object\n+   #85 = Utf8               getOptionsAsProperties\n+   #86 = Utf8               (Ljava/lang/Object;)[B\n+   #87 = Utf8               (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n+   #88 = Methodref          #89.#91       // java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+   #89 = Class              #90           // java/lang/Integer\n+   #90 = Utf8               java/lang/Integer\n+   #91 = NameAndType        #92:#93       // valueOf:(I)Ljava/lang/Integer;\n+   #92 = Utf8               valueOf\n+   #93 = Utf8               (I)Ljava/lang/Integer;\n+   #94 = Fieldref           #95.#97       // org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+   #95 = Class              #96           // org/apache/commons/compress/archivers/sevenz/Coder\n+   #96 = Utf8               org/apache/commons/compress/archivers/sevenz/Coder\n+   #97 = NameAndType        #98:#46       // properties:[B\n+   #98 = Utf8               properties\n+   #99 = Utf8               SourceFile\n+  #100 = Utf8               DeltaDecoder.java\n {\n   org.apache.commons.compress.archivers.sevenz.DeltaDecoder();\n     descriptor: ()V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: anewarray     #1                  // class java/lang/Class\n+         2: anewarray     #8                  // class java/lang/Class\n          5: dup\n          6: iconst_0\n-         7: ldc           #2                  // class java/lang/Number\n+         7: ldc           #10                 // class java/lang/Number\n          9: aastore\n-        10: invokespecial #3                  // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n+        10: invokespecial #12                 // Method org/apache/commons/compress/archivers/sevenz/CoderBase.\"<init>\":([Ljava/lang/Class;)V\n         13: return\n       LineNumberTable:\n         line 29: 0\n         line 30: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n \n   java.io.InputStream decode(java.lang.String, java.io.InputStream, long, org.apache.commons.compress.archivers.sevenz.Coder, byte[], int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/io/InputStream;JLorg/apache/commons/compress/archivers/sevenz/Coder;[BI)Ljava/io/InputStream;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=8, args_size=7\n-         0: new           #4                  // class org/tukaani/xz/DeltaOptions\n+         0: new           #24                 // class org/tukaani/xz/DeltaOptions\n          3: dup\n          4: aload_0\n          5: aload         5\n-         7: invokespecial #5                  // Method getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-        10: invokespecial #6                  // Method org/tukaani/xz/DeltaOptions.\"<init>\":(I)V\n+         7: invokespecial #26                 // Method getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+        10: invokespecial #30                 // Method org/tukaani/xz/DeltaOptions.\"<init>\":(I)V\n         13: aload_2\n-        14: invokevirtual #7                  // Method org/tukaani/xz/DeltaOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n+        14: invokevirtual #33                 // Method org/tukaani/xz/DeltaOptions.getInputStream:(Ljava/io/InputStream;)Ljava/io/InputStream;\n         17: areturn\n       LineNumberTable:\n         line 35: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      18     0  this   Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n             0      18     1 archiveName   Ljava/lang/String;\n             0      18     2    in   Ljava/io/InputStream;\n             0      18     3 uncompressedLength   J\n             0      18     5 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n             0      18     6 password   [B\n             0      18     7 maxMemoryLimitInKb   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   java.io.OutputStream encode(java.io.OutputStream, java.lang.Object) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;Ljava/lang/Object;)Ljava/io/OutputStream;\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=3\n          0: aload_2\n          1: iconst_1\n-         2: invokestatic  #8                  // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n+         2: invokestatic  #51                 // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n          5: istore_3\n-         6: new           #4                  // class org/tukaani/xz/DeltaOptions\n+         6: new           #24                 // class org/tukaani/xz/DeltaOptions\n          9: dup\n         10: iload_3\n-        11: invokespecial #6                  // Method org/tukaani/xz/DeltaOptions.\"<init>\":(I)V\n-        14: new           #9                  // class org/tukaani/xz/FinishableWrapperOutputStream\n+        11: invokespecial #30                 // Method org/tukaani/xz/DeltaOptions.\"<init>\":(I)V\n+        14: new           #55                 // class org/tukaani/xz/FinishableWrapperOutputStream\n         17: dup\n         18: aload_1\n-        19: invokespecial #10                 // Method org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n-        22: invokevirtual #11                 // Method org/tukaani/xz/DeltaOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n+        19: invokespecial #57                 // Method org/tukaani/xz/FinishableWrapperOutputStream.\"<init>\":(Ljava/io/OutputStream;)V\n+        22: invokevirtual #60                 // Method org/tukaani/xz/DeltaOptions.getOutputStream:(Lorg/tukaani/xz/FinishableOutputStream;)Lorg/tukaani/xz/FinishableOutputStream;\n         25: areturn\n         26: astore        4\n-        28: new           #13                 // class java/io/IOException\n+        28: new           #22                 // class java/io/IOException\n         31: dup\n         32: aload         4\n-        34: invokevirtual #14                 // Method org/tukaani/xz/UnsupportedOptionsException.getMessage:()Ljava/lang/String;\n-        37: invokespecial #15                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        34: invokevirtual #64                 // Method org/tukaani/xz/UnsupportedOptionsException.getMessage:()Ljava/lang/String;\n+        37: invokespecial #70                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         40: athrow\n       Exception table:\n          from    to  target type\n              6    25    26   Class org/tukaani/xz/UnsupportedOptionsException\n       LineNumberTable:\n         line 41: 0\n         line 43: 6\n         line 44: 26\n         line 45: 28\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           28      13     4    ex   Lorg/tukaani/xz/UnsupportedOptionsException;\n             0      41     0  this   Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n             0      41     1   out   Ljava/io/OutputStream;\n             0      41     2 options   Ljava/lang/Object;\n             6      35     3 distance   I\n+           28      13     4    ex   Lorg/tukaani/xz/UnsupportedOptionsException;\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 26\n           locals = [ class org/apache/commons/compress/archivers/sevenz/DeltaDecoder, class java/io/OutputStream, class java/lang/Object, int ]\n           stack = [ class org/tukaani/xz/UnsupportedOptionsException ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   byte[] getOptionsAsProperties(java.lang.Object);\n     descriptor: (Ljava/lang/Object;)[B\n     flags: (0x0000)\n     Code:\n       stack=5, locals=2, args_size=2\n          0: iconst_1\n          1: newarray       byte\n          3: dup\n          4: iconst_0\n          5: aload_1\n          6: iconst_1\n-         7: invokestatic  #8                  // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n+         7: invokestatic  #51                 // Method numberOptionOrDefault:(Ljava/lang/Object;I)I\n         10: iconst_1\n         11: isub\n         12: i2b\n         13: bastore\n         14: areturn\n       LineNumberTable:\n         line 51: 0\n-        line 52: 7\n+        line 52: 5\n         line 51: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n             0      15     1 options   Ljava/lang/Object;\n \n   java.lang.Object getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder, java.io.InputStream);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/Coder;Ljava/io/InputStream;)Ljava/lang/Object;\n     flags: (0x0000)\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #5                  // Method getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n-         5: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n+         2: invokespecial #26                 // Method getOptionsFromCoder:(Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n+         5: invokestatic  #88                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;\n          8: areturn\n       LineNumberTable:\n         line 58: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/sevenz/DeltaDecoder;\n             0       9     1 coder   Lorg/apache/commons/compress/archivers/sevenz/Coder;\n@@ -255,25 +253,25 @@\n \n   private int getOptionsFromCoder(org.apache.commons.compress.archivers.sevenz.Coder);\n     descriptor: (Lorg/apache/commons/compress/archivers/sevenz/Coder;)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_1\n-         1: getfield      #17                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         1: getfield      #94                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n          4: ifnull        15\n          7: aload_1\n-         8: getfield      #17                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+         8: getfield      #94                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         11: arraylength\n         12: ifne          17\n         15: iconst_1\n         16: ireturn\n         17: sipush        255\n         20: aload_1\n-        21: getfield      #17                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n+        21: getfield      #94                 // Field org/apache/commons/compress/archivers/sevenz/Coder.properties:[B\n         24: iconst_0\n         25: baload\n         26: iand\n         27: iconst_1\n         28: iadd\n         29: ireturn\n       LineNumberTable:\n"}]}
