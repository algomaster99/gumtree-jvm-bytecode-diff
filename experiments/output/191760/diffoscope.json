{"diffoscope-json-version": 1, "source1": "first/LockableFileWriter.class", "source2": "second/LockableFileWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,231 +1,231 @@\n-  SHA-256 checksum 40bd694946f5898df9c5fbaec913390e244ce537083e8389276f97d90d45abba\n+  SHA-256 checksum 65776cf2d72f4f8fcf694627ae801c28cdf15146aeb8cba7d038d2203ae0db8e\n   Compiled from \"LockableFileWriter.java\"\n public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #23                         // org/apache/commons/io/output/LockableFileWriter\n-  super_class: #56                        // java/io/Writer\n+  this_class: #2                          // org/apache/commons/io/output/LockableFileWriter\n+  super_class: #28                        // java/io/Writer\n   interfaces: 0, fields: 3, methods: 20, attributes: 1\n Constant pool:\n-    #1 = Methodref          #23.#123      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n-    #2 = Class              #124          // java/io/File\n-    #3 = Methodref          #2.#125       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-    #4 = Methodref          #23.#126      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n-    #5 = Methodref          #93.#127      // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n-    #6 = Methodref          #23.#128      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-    #7 = Methodref          #23.#129      // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-    #8 = Methodref          #56.#130      // java/io/Writer.\"<init>\":()V\n-    #9 = Methodref          #2.#131       // java/io/File.getAbsoluteFile:()Ljava/io/File;\n-   #10 = Methodref          #2.#132       // java/io/File.getParentFile:()Ljava/io/File;\n-   #11 = Methodref          #133.#134     // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n-   #12 = Methodref          #2.#135       // java/io/File.isDirectory:()Z\n-   #13 = Class              #136          // java/io/IOException\n-   #14 = String             #137          // File specified is a directory\n-   #15 = Methodref          #13.#125      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #16 = String             #138          // java.io.tmpdir\n-   #17 = Methodref          #139.#140     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #18 = Methodref          #23.#141      // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V\n-   #19 = Class              #142          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#130      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = Methodref          #2.#143       // java/io/File.getName:()Ljava/lang/String;\n-   #22 = Methodref          #19.#144      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = Class              #145          // org/apache/commons/io/output/LockableFileWriter\n-   #24 = String             #146          // .lck\n-   #25 = Methodref          #19.#147      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #26 = Methodref          #2.#148       // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-   #27 = Fieldref           #23.#149      // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;\n-   #28 = Methodref          #23.#150      // org/apache/commons/io/output/LockableFileWriter.createLock:()V\n-   #29 = Methodref          #23.#151      // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-   #30 = Fieldref           #23.#152      // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;\n-   #31 = Methodref          #153.#154     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-   #32 = Methodref          #2.#155       // java/io/File.exists:()Z\n-   #33 = String             #156          // Could not find lockDir:\n-   #34 = Methodref          #2.#157       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n-   #35 = Methodref          #2.#158       // java/io/File.canWrite:()Z\n-   #36 = String             #159          // Could not write to lockDir:\n-   #37 = Methodref          #2.#160       // java/io/File.createNewFile:()Z\n-   #38 = String             #161          // Can\\'t write file, lock\n-   #39 = String             #162          //  exists\n-   #40 = Methodref          #2.#163       // java/io/File.deleteOnExit:()V\n-   #41 = Class              #164          // java/io/OutputStreamWriter\n-   #42 = Class              #165          // java/io/FileOutputStream\n-   #43 = Methodref          #42.#166      // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n-   #44 = Methodref          #153.#167     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-   #45 = Methodref          #41.#168      // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-   #46 = Class              #169          // java/lang/RuntimeException\n-   #47 = Methodref          #133.#170     // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n-   #48 = Methodref          #56.#171      // java/io/Writer.close:()V\n-   #49 = Methodref          #133.#172     // org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n-   #50 = Methodref          #56.#173      // java/io/Writer.write:(I)V\n-   #51 = Methodref          #56.#174      // java/io/Writer.write:([C)V\n-   #52 = Methodref          #56.#175      // java/io/Writer.write:([CII)V\n-   #53 = Methodref          #56.#176      // java/io/Writer.write:(Ljava/lang/String;)V\n-   #54 = Methodref          #56.#177      // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #55 = Methodref          #56.#178      // java/io/Writer.flush:()V\n-   #56 = Class              #179          // java/io/Writer\n-   #57 = Utf8               LCK\n-   #58 = Utf8               Ljava/lang/String;\n-   #59 = Utf8               ConstantValue\n-   #60 = Utf8               out\n-   #61 = Utf8               Ljava/io/Writer;\n-   #62 = Utf8               lockFile\n-   #63 = Utf8               Ljava/io/File;\n-   #64 = Utf8               <init>\n-   #65 = Utf8               (Ljava/lang/String;)V\n-   #66 = Utf8               Code\n-   #67 = Utf8               LineNumberTable\n-   #68 = Utf8               LocalVariableTable\n-   #69 = Utf8               this\n-   #70 = Utf8               Lorg/apache/commons/io/output/LockableFileWriter;\n-   #71 = Utf8               fileName\n-   #72 = Utf8               Exceptions\n-   #73 = Utf8               (Ljava/lang/String;Z)V\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n+    #2 = Class              #4            // org/apache/commons/io/output/LockableFileWriter\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n+    #4 = Utf8               org/apache/commons/io/output/LockableFileWriter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/lang/String;ZLjava/lang/String;)V\n+    #7 = Class              #8            // java/io/File\n+    #8 = Utf8               java/io/File\n+    #9 = Methodref          #7.#10        // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+   #10 = NameAndType        #5:#11        // \"<init>\":(Ljava/lang/String;)V\n+   #11 = Utf8               (Ljava/lang/String;)V\n+   #12 = Methodref          #2.#13        // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+   #13 = NameAndType        #5:#14        // \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+   #14 = Utf8               (Ljava/io/File;ZLjava/lang/String;)V\n+   #15 = Methodref          #16.#17       // java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+   #16 = Class              #18           // java/nio/charset/Charset\n+   #17 = NameAndType        #19:#20       // defaultCharset:()Ljava/nio/charset/Charset;\n+   #18 = Utf8               java/nio/charset/Charset\n+   #19 = Utf8               defaultCharset\n+   #20 = Utf8               ()Ljava/nio/charset/Charset;\n+   #21 = Methodref          #2.#22        // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+   #22 = NameAndType        #5:#23        // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+   #23 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+   #24 = Methodref          #2.#25        // org/apache/commons/io/output/LockableFileWriter.\"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+   #25 = NameAndType        #5:#26        // \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+   #26 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+   #27 = Methodref          #28.#29       // java/io/Writer.\"<init>\":()V\n+   #28 = Class              #30           // java/io/Writer\n+   #29 = NameAndType        #5:#31        // \"<init>\":()V\n+   #30 = Utf8               java/io/Writer\n+   #31 = Utf8               ()V\n+   #32 = Methodref          #7.#33        // java/io/File.getAbsoluteFile:()Ljava/io/File;\n+   #33 = NameAndType        #34:#35       // getAbsoluteFile:()Ljava/io/File;\n+   #34 = Utf8               getAbsoluteFile\n+   #35 = Utf8               ()Ljava/io/File;\n+   #36 = Methodref          #7.#37        // java/io/File.getParentFile:()Ljava/io/File;\n+   #37 = NameAndType        #38:#35       // getParentFile:()Ljava/io/File;\n+   #38 = Utf8               getParentFile\n+   #39 = Methodref          #40.#41       // org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n+   #40 = Class              #42           // org/apache/commons/io/FileUtils\n+   #41 = NameAndType        #43:#44       // forceMkdir:(Ljava/io/File;)V\n+   #42 = Utf8               org/apache/commons/io/FileUtils\n+   #43 = Utf8               forceMkdir\n+   #44 = Utf8               (Ljava/io/File;)V\n+   #45 = Methodref          #7.#46        // java/io/File.isDirectory:()Z\n+   #46 = NameAndType        #47:#48       // isDirectory:()Z\n+   #47 = Utf8               isDirectory\n+   #48 = Utf8               ()Z\n+   #49 = Class              #50           // java/io/IOException\n+   #50 = Utf8               java/io/IOException\n+   #51 = String             #52           // File specified is a directory\n+   #52 = Utf8               File specified is a directory\n+   #53 = Methodref          #49.#10       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #54 = String             #55           // java.io.tmpdir\n+   #55 = Utf8               java.io.tmpdir\n+   #56 = Methodref          #57.#58       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #57 = Class              #59           // java/lang/System\n+   #58 = NameAndType        #60:#61       // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #59 = Utf8               java/lang/System\n+   #60 = Utf8               getProperty\n+   #61 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #62 = Methodref          #2.#63        // org/apache/commons/io/output/LockableFileWriter.testLockDir:(Ljava/io/File;)V\n+   #63 = NameAndType        #64:#44       // testLockDir:(Ljava/io/File;)V\n+   #64 = Utf8               testLockDir\n+   #65 = Class              #66           // java/lang/StringBuilder\n+   #66 = Utf8               java/lang/StringBuilder\n+   #67 = Methodref          #65.#29       // java/lang/StringBuilder.\"<init>\":()V\n+   #68 = Methodref          #7.#69        // java/io/File.getName:()Ljava/lang/String;\n+   #69 = NameAndType        #70:#71       // getName:()Ljava/lang/String;\n+   #70 = Utf8               getName\n+   #71 = Utf8               ()Ljava/lang/String;\n+   #72 = Methodref          #65.#73       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #73 = NameAndType        #74:#75       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n    #74 = Utf8               append\n-   #75 = Utf8               Z\n-   #76 = Utf8               (Ljava/lang/String;ZLjava/lang/String;)V\n-   #77 = Utf8               lockDir\n-   #78 = Utf8               (Ljava/io/File;)V\n-   #79 = Utf8               file\n-   #80 = Utf8               (Ljava/io/File;Z)V\n-   #81 = Utf8               (Ljava/io/File;ZLjava/lang/String;)V\n-   #82 = Utf8               Deprecated\n-   #83 = Utf8               RuntimeVisibleAnnotations\n-   #84 = Utf8               Ljava/lang/Deprecated;\n-   #85 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n-   #86 = Utf8               charset\n-   #87 = Utf8               Ljava/nio/charset/Charset;\n-   #88 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n-   #89 = Utf8               charsetName\n-   #90 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-   #91 = Utf8               lockDirFile\n-   #92 = Utf8               StackMapTable\n-   #93 = Class              #180          // java/nio/charset/Charset\n-   #94 = Class              #181          // java/lang/String\n-   #95 = Utf8               (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-   #96 = Utf8               testLockDir\n-   #97 = Utf8               createLock\n-   #98 = Utf8               ()V\n-   #99 = Class              #182          // java/lang/Object\n-  #100 = Class              #183          // java/lang/Throwable\n-  #101 = Utf8               initWriter\n-  #102 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-  #103 = Utf8               ex\n-  #104 = Utf8               Ljava/lang/Exception;\n-  #105 = Utf8               fileExistedAlready\n-  #106 = Class              #184          // java/lang/Exception\n-  #107 = Utf8               close\n-  #108 = Utf8               write\n-  #109 = Utf8               (I)V\n-  #110 = Utf8               c\n-  #111 = Utf8               I\n-  #112 = Utf8               ([C)V\n-  #113 = Utf8               cbuf\n-  #114 = Utf8               [C\n-  #115 = Utf8               ([CII)V\n-  #116 = Utf8               off\n-  #117 = Utf8               len\n-  #118 = Utf8               str\n-  #119 = Utf8               (Ljava/lang/String;II)V\n-  #120 = Utf8               flush\n-  #121 = Utf8               SourceFile\n-  #122 = Utf8               LockableFileWriter.java\n-  #123 = NameAndType        #64:#76       // \"<init>\":(Ljava/lang/String;ZLjava/lang/String;)V\n-  #124 = Utf8               java/io/File\n-  #125 = NameAndType        #64:#65       // \"<init>\":(Ljava/lang/String;)V\n-  #126 = NameAndType        #64:#81       // \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n-  #127 = NameAndType        #185:#186     // defaultCharset:()Ljava/nio/charset/Charset;\n-  #128 = NameAndType        #64:#90       // \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n-  #129 = NameAndType        #64:#95       // \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n-  #130 = NameAndType        #64:#98       // \"<init>\":()V\n-  #131 = NameAndType        #187:#188     // getAbsoluteFile:()Ljava/io/File;\n-  #132 = NameAndType        #189:#188     // getParentFile:()Ljava/io/File;\n-  #133 = Class              #190          // org/apache/commons/io/FileUtils\n-  #134 = NameAndType        #191:#78      // forceMkdir:(Ljava/io/File;)V\n-  #135 = NameAndType        #192:#193     // isDirectory:()Z\n-  #136 = Utf8               java/io/IOException\n-  #137 = Utf8               File specified is a directory\n-  #138 = Utf8               java.io.tmpdir\n-  #139 = Class              #194          // java/lang/System\n-  #140 = NameAndType        #195:#196     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #141 = NameAndType        #96:#78       // testLockDir:(Ljava/io/File;)V\n-  #142 = Utf8               java/lang/StringBuilder\n-  #143 = NameAndType        #197:#198     // getName:()Ljava/lang/String;\n-  #144 = NameAndType        #74:#199      // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #145 = Utf8               org/apache/commons/io/output/LockableFileWriter\n-  #146 = Utf8               .lck\n-  #147 = NameAndType        #200:#198     // toString:()Ljava/lang/String;\n-  #148 = NameAndType        #64:#88       // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-  #149 = NameAndType        #62:#63       // lockFile:Ljava/io/File;\n-  #150 = NameAndType        #97:#98       // createLock:()V\n-  #151 = NameAndType        #101:#102     // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-  #152 = NameAndType        #60:#61       // out:Ljava/io/Writer;\n-  #153 = Class              #201          // org/apache/commons/io/Charsets\n-  #154 = NameAndType        #202:#203     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #155 = NameAndType        #204:#193     // exists:()Z\n-  #156 = Utf8               Could not find lockDir:\n-  #157 = NameAndType        #205:#198     // getAbsolutePath:()Ljava/lang/String;\n-  #158 = NameAndType        #206:#193     // canWrite:()Z\n-  #159 = Utf8               Could not write to lockDir:\n-  #160 = NameAndType        #207:#193     // createNewFile:()Z\n-  #161 = Utf8               Can\\'t write file, lock\n-  #162 = Utf8                exists\n-  #163 = NameAndType        #208:#98      // deleteOnExit:()V\n-  #164 = Utf8               java/io/OutputStreamWriter\n-  #165 = Utf8               java/io/FileOutputStream\n-  #166 = NameAndType        #64:#73       // \"<init>\":(Ljava/lang/String;Z)V\n-  #167 = NameAndType        #202:#209     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #168 = NameAndType        #64:#210      // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #169 = Utf8               java/lang/RuntimeException\n-  #170 = NameAndType        #211:#212     // deleteQuietly:(Ljava/io/File;)Z\n-  #171 = NameAndType        #107:#98      // close:()V\n-  #172 = NameAndType        #213:#214     // delete:(Ljava/io/File;)Ljava/io/File;\n-  #173 = NameAndType        #108:#109     // write:(I)V\n-  #174 = NameAndType        #108:#112     // write:([C)V\n-  #175 = NameAndType        #108:#115     // write:([CII)V\n-  #176 = NameAndType        #108:#65      // write:(Ljava/lang/String;)V\n-  #177 = NameAndType        #108:#119     // write:(Ljava/lang/String;II)V\n-  #178 = NameAndType        #120:#98      // flush:()V\n-  #179 = Utf8               java/io/Writer\n-  #180 = Utf8               java/nio/charset/Charset\n-  #181 = Utf8               java/lang/String\n-  #182 = Utf8               java/lang/Object\n-  #183 = Utf8               java/lang/Throwable\n-  #184 = Utf8               java/lang/Exception\n-  #185 = Utf8               defaultCharset\n-  #186 = Utf8               ()Ljava/nio/charset/Charset;\n-  #187 = Utf8               getAbsoluteFile\n-  #188 = Utf8               ()Ljava/io/File;\n-  #189 = Utf8               getParentFile\n-  #190 = Utf8               org/apache/commons/io/FileUtils\n-  #191 = Utf8               forceMkdir\n-  #192 = Utf8               isDirectory\n-  #193 = Utf8               ()Z\n-  #194 = Utf8               java/lang/System\n-  #195 = Utf8               getProperty\n-  #196 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #197 = Utf8               getName\n-  #198 = Utf8               ()Ljava/lang/String;\n-  #199 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #200 = Utf8               toString\n-  #201 = Utf8               org/apache/commons/io/Charsets\n-  #202 = Utf8               toCharset\n-  #203 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n-  #204 = Utf8               exists\n-  #205 = Utf8               getAbsolutePath\n-  #206 = Utf8               canWrite\n-  #207 = Utf8               createNewFile\n-  #208 = Utf8               deleteOnExit\n-  #209 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-  #210 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n-  #211 = Utf8               deleteQuietly\n-  #212 = Utf8               (Ljava/io/File;)Z\n-  #213 = Utf8               delete\n-  #214 = Utf8               (Ljava/io/File;)Ljava/io/File;\n+   #75 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #76 = String             #77           // .lck\n+   #77 = Utf8               .lck\n+   #78 = Methodref          #65.#79       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #79 = NameAndType        #80:#71       // toString:()Ljava/lang/String;\n+   #80 = Utf8               toString\n+   #81 = Methodref          #7.#82        // java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #82 = NameAndType        #5:#83        // \"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+   #83 = Utf8               (Ljava/io/File;Ljava/lang/String;)V\n+   #84 = Fieldref           #2.#85        // org/apache/commons/io/output/LockableFileWriter.lockFile:Ljava/io/File;\n+   #85 = NameAndType        #86:#87       // lockFile:Ljava/io/File;\n+   #86 = Utf8               lockFile\n+   #87 = Utf8               Ljava/io/File;\n+   #88 = Methodref          #2.#89        // org/apache/commons/io/output/LockableFileWriter.createLock:()V\n+   #89 = NameAndType        #90:#31       // createLock:()V\n+   #90 = Utf8               createLock\n+   #91 = Methodref          #2.#92        // org/apache/commons/io/output/LockableFileWriter.initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+   #92 = NameAndType        #93:#94       // initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+   #93 = Utf8               initWriter\n+   #94 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+   #95 = Fieldref           #2.#96        // org/apache/commons/io/output/LockableFileWriter.out:Ljava/io/Writer;\n+   #96 = NameAndType        #97:#98       // out:Ljava/io/Writer;\n+   #97 = Utf8               out\n+   #98 = Utf8               Ljava/io/Writer;\n+   #99 = Methodref          #100.#101     // org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #100 = Class              #102          // org/apache/commons/io/Charsets\n+  #101 = NameAndType        #103:#104     // toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #102 = Utf8               org/apache/commons/io/Charsets\n+  #103 = Utf8               toCharset\n+  #104 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;\n+  #105 = Methodref          #7.#106       // java/io/File.exists:()Z\n+  #106 = NameAndType        #107:#48      // exists:()Z\n+  #107 = Utf8               exists\n+  #108 = String             #109          // Could not find lockDir:\n+  #109 = Utf8               Could not find lockDir:\n+  #110 = Methodref          #7.#111       // java/io/File.getAbsolutePath:()Ljava/lang/String;\n+  #111 = NameAndType        #112:#71      // getAbsolutePath:()Ljava/lang/String;\n+  #112 = Utf8               getAbsolutePath\n+  #113 = Methodref          #7.#114       // java/io/File.canWrite:()Z\n+  #114 = NameAndType        #115:#48      // canWrite:()Z\n+  #115 = Utf8               canWrite\n+  #116 = String             #117          // Could not write to lockDir:\n+  #117 = Utf8               Could not write to lockDir:\n+  #118 = Methodref          #7.#119       // java/io/File.createNewFile:()Z\n+  #119 = NameAndType        #120:#48      // createNewFile:()Z\n+  #120 = Utf8               createNewFile\n+  #121 = String             #122          // Can\\'t write file, lock\n+  #122 = Utf8               Can\\'t write file, lock\n+  #123 = String             #124          //  exists\n+  #124 = Utf8                exists\n+  #125 = Methodref          #7.#126       // java/io/File.deleteOnExit:()V\n+  #126 = NameAndType        #127:#31      // deleteOnExit:()V\n+  #127 = Utf8               deleteOnExit\n+  #128 = Class              #129          // java/io/OutputStreamWriter\n+  #129 = Utf8               java/io/OutputStreamWriter\n+  #130 = Class              #131          // java/io/FileOutputStream\n+  #131 = Utf8               java/io/FileOutputStream\n+  #132 = Methodref          #130.#133     // java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n+  #133 = NameAndType        #5:#134       // \"<init>\":(Ljava/lang/String;Z)V\n+  #134 = Utf8               (Ljava/lang/String;Z)V\n+  #135 = Methodref          #100.#136     // org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #136 = NameAndType        #103:#137     // toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #137 = Utf8               (Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+  #138 = Methodref          #128.#139     // java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #139 = NameAndType        #5:#140       // \"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #140 = Utf8               (Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+  #141 = Class              #142          // java/lang/RuntimeException\n+  #142 = Utf8               java/lang/RuntimeException\n+  #143 = Methodref          #40.#144      // org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+  #144 = NameAndType        #145:#146     // deleteQuietly:(Ljava/io/File;)Z\n+  #145 = Utf8               deleteQuietly\n+  #146 = Utf8               (Ljava/io/File;)Z\n+  #147 = Methodref          #28.#148      // java/io/Writer.close:()V\n+  #148 = NameAndType        #149:#31      // close:()V\n+  #149 = Utf8               close\n+  #150 = Methodref          #40.#151      // org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n+  #151 = NameAndType        #152:#153     // delete:(Ljava/io/File;)Ljava/io/File;\n+  #152 = Utf8               delete\n+  #153 = Utf8               (Ljava/io/File;)Ljava/io/File;\n+  #154 = Methodref          #28.#155      // java/io/Writer.write:(I)V\n+  #155 = NameAndType        #156:#157     // write:(I)V\n+  #156 = Utf8               write\n+  #157 = Utf8               (I)V\n+  #158 = Methodref          #28.#159      // java/io/Writer.write:([C)V\n+  #159 = NameAndType        #156:#160     // write:([C)V\n+  #160 = Utf8               ([C)V\n+  #161 = Methodref          #28.#162      // java/io/Writer.write:([CII)V\n+  #162 = NameAndType        #156:#163     // write:([CII)V\n+  #163 = Utf8               ([CII)V\n+  #164 = Methodref          #28.#165      // java/io/Writer.write:(Ljava/lang/String;)V\n+  #165 = NameAndType        #156:#11      // write:(Ljava/lang/String;)V\n+  #166 = Methodref          #28.#167      // java/io/Writer.write:(Ljava/lang/String;II)V\n+  #167 = NameAndType        #156:#168     // write:(Ljava/lang/String;II)V\n+  #168 = Utf8               (Ljava/lang/String;II)V\n+  #169 = Methodref          #28.#170      // java/io/Writer.flush:()V\n+  #170 = NameAndType        #171:#31      // flush:()V\n+  #171 = Utf8               flush\n+  #172 = Utf8               LCK\n+  #173 = Utf8               Ljava/lang/String;\n+  #174 = Utf8               ConstantValue\n+  #175 = Utf8               Code\n+  #176 = Utf8               LineNumberTable\n+  #177 = Utf8               LocalVariableTable\n+  #178 = Utf8               this\n+  #179 = Utf8               Lorg/apache/commons/io/output/LockableFileWriter;\n+  #180 = Utf8               fileName\n+  #181 = Utf8               Exceptions\n+  #182 = Utf8               Z\n+  #183 = Utf8               lockDir\n+  #184 = Utf8               file\n+  #185 = Utf8               (Ljava/io/File;Z)V\n+  #186 = Utf8               Deprecated\n+  #187 = Utf8               RuntimeVisibleAnnotations\n+  #188 = Utf8               Ljava/lang/Deprecated;\n+  #189 = Utf8               (Ljava/io/File;Ljava/nio/charset/Charset;)V\n+  #190 = Utf8               charset\n+  #191 = Utf8               Ljava/nio/charset/Charset;\n+  #192 = Utf8               charsetName\n+  #193 = Utf8               lockDirFile\n+  #194 = Utf8               StackMapTable\n+  #195 = Class              #196          // java/lang/String\n+  #196 = Utf8               java/lang/String\n+  #197 = Class              #198          // java/lang/Object\n+  #198 = Utf8               java/lang/Object\n+  #199 = Class              #200          // java/lang/Throwable\n+  #200 = Utf8               java/lang/Throwable\n+  #201 = Utf8               ex\n+  #202 = Utf8               Ljava/lang/Exception;\n+  #203 = Utf8               fileExistedAlready\n+  #204 = Class              #205          // java/lang/Exception\n+  #205 = Utf8               java/lang/Exception\n+  #206 = Utf8               c\n+  #207 = Utf8               I\n+  #208 = Utf8               cbuf\n+  #209 = Utf8               [C\n+  #210 = Utf8               off\n+  #211 = Utf8               len\n+  #212 = Utf8               str\n+  #213 = Utf8               SourceFile\n+  #214 = Utf8               LockableFileWriter.java\n {\n   private static final java.lang.String LCK = \".lck\";\n     descriptor: Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: String .lck\n \n   private final java.io.Writer out;\n@@ -281,21 +281,21 @@\n \n   public org.apache.commons.io.output.LockableFileWriter(java.lang.String, boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;ZLjava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: new           #2                  // class java/io/File\n+         1: new           #7                  // class java/io/File\n          4: dup\n          5: aload_1\n-         6: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+         6: invokespecial #9                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n          9: iload_2\n         10: aload_3\n-        11: invokespecial #4                  // Method \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+        11: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n         14: return\n       LineNumberTable:\n         line 96: 0\n         line 97: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -310,15 +310,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aconst_null\n-         4: invokespecial #4                  // Method \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+         4: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n          7: return\n       LineNumberTable:\n         line 108: 0\n         line 109: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -331,15 +331,15 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: aconst_null\n-         4: invokespecial #4                  // Method \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n+         4: invokespecial #12                 // Method \"<init>\":(Ljava/io/File;ZLjava/lang/String;)V\n          7: return\n       LineNumberTable:\n         line 120: 0\n         line 121: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -351,46 +351,46 @@\n   public org.apache.commons.io.output.LockableFileWriter(java.io.File, boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/io/File;ZLjava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n-         2: invokestatic  #5                  // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n+         2: invokestatic  #15                 // Method java/nio/charset/Charset.defaultCharset:()Ljava/nio/charset/Charset;\n          5: iload_2\n          6: aload_3\n-         7: invokespecial #6                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+         7: invokespecial #21                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n         10: return\n       LineNumberTable:\n         line 135: 0\n         line 136: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n             0      11     1  file   Ljava/io/File;\n             0      11     2 append   Z\n             0      11     3 lockDir   Ljava/lang/String;\n     Exceptions:\n       throws java.io.IOException\n     Deprecated: true\n     RuntimeVisibleAnnotations:\n-      0: #84()\n+      0: #188()\n         java.lang.Deprecated\n \n   public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n          4: aconst_null\n-         5: invokespecial #6                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+         5: invokespecial #21                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n          8: return\n       LineNumberTable:\n         line 148: 0\n         line 149: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -405,15 +405,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n          2: aload_2\n          3: iconst_0\n          4: aconst_null\n-         5: invokespecial #7                  // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n+         5: invokespecial #24                 // Method \"<init>\":(Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n          8: return\n       LineNumberTable:\n         line 163: 0\n         line 164: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -424,71 +424,71 @@\n \n   public org.apache.commons.io.output.LockableFileWriter(java.io.File, java.nio.charset.Charset, boolean, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=6, args_size=5\n          0: aload_0\n-         1: invokespecial #8                  // Method java/io/Writer.\"<init>\":()V\n+         1: invokespecial #27                 // Method java/io/Writer.\"<init>\":()V\n          4: aload_1\n-         5: invokevirtual #9                  // Method java/io/File.getAbsoluteFile:()Ljava/io/File;\n+         5: invokevirtual #32                 // Method java/io/File.getAbsoluteFile:()Ljava/io/File;\n          8: astore_1\n          9: aload_1\n-        10: invokevirtual #10                 // Method java/io/File.getParentFile:()Ljava/io/File;\n+        10: invokevirtual #36                 // Method java/io/File.getParentFile:()Ljava/io/File;\n         13: ifnull        23\n         16: aload_1\n-        17: invokevirtual #10                 // Method java/io/File.getParentFile:()Ljava/io/File;\n-        20: invokestatic  #11                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n+        17: invokevirtual #36                 // Method java/io/File.getParentFile:()Ljava/io/File;\n+        20: invokestatic  #39                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n         23: aload_1\n-        24: invokevirtual #12                 // Method java/io/File.isDirectory:()Z\n+        24: invokevirtual #45                 // Method java/io/File.isDirectory:()Z\n         27: ifeq          40\n-        30: new           #13                 // class java/io/IOException\n+        30: new           #49                 // class java/io/IOException\n         33: dup\n-        34: ldc           #14                 // String File specified is a directory\n-        36: invokespecial #15                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        34: ldc           #51                 // String File specified is a directory\n+        36: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         39: athrow\n         40: aload         4\n         42: ifnonnull     52\n-        45: ldc           #16                 // String java.io.tmpdir\n-        47: invokestatic  #17                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+        45: ldc           #54                 // String java.io.tmpdir\n+        47: invokestatic  #56                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n         50: astore        4\n-        52: new           #2                  // class java/io/File\n+        52: new           #7                  // class java/io/File\n         55: dup\n         56: aload         4\n-        58: invokespecial #3                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+        58: invokespecial #9                  // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n         61: astore        5\n         63: aload         5\n-        65: invokestatic  #11                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n+        65: invokestatic  #39                 // Method org/apache/commons/io/FileUtils.forceMkdir:(Ljava/io/File;)V\n         68: aload_0\n         69: aload         5\n-        71: invokespecial #18                 // Method testLockDir:(Ljava/io/File;)V\n+        71: invokespecial #62                 // Method testLockDir:(Ljava/io/File;)V\n         74: aload_0\n-        75: new           #2                  // class java/io/File\n+        75: new           #7                  // class java/io/File\n         78: dup\n         79: aload         5\n-        81: new           #19                 // class java/lang/StringBuilder\n+        81: new           #65                 // class java/lang/StringBuilder\n         84: dup\n-        85: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        85: invokespecial #67                 // Method java/lang/StringBuilder.\"<init>\":()V\n         88: aload_1\n-        89: invokevirtual #21                 // Method java/io/File.getName:()Ljava/lang/String;\n-        92: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        95: ldc           #24                 // String .lck\n-        97: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-       100: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       103: invokespecial #26                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n-       106: putfield      #27                 // Field lockFile:Ljava/io/File;\n+        89: invokevirtual #68                 // Method java/io/File.getName:()Ljava/lang/String;\n+        92: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        95: ldc           #76                 // String .lck\n+        97: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+       100: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       103: invokespecial #81                 // Method java/io/File.\"<init>\":(Ljava/io/File;Ljava/lang/String;)V\n+       106: putfield      #84                 // Field lockFile:Ljava/io/File;\n        109: aload_0\n-       110: invokespecial #28                 // Method createLock:()V\n+       110: invokespecial #88                 // Method createLock:()V\n        113: aload_0\n        114: aload_0\n        115: aload_1\n        116: aload_2\n        117: iload_3\n-       118: invokespecial #29                 // Method initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n-       121: putfield      #30                 // Field out:Ljava/io/Writer;\n+       118: invokespecial #91                 // Method initWriter:(Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n+       121: putfield      #95                 // Field out:Ljava/io/Writer;\n        124: return\n       LineNumberTable:\n         line 178: 0\n         line 180: 4\n         line 181: 9\n         line 182: 16\n         line 184: 23\n@@ -524,18 +524,18 @@\n     descriptor: (Ljava/io/File;Ljava/lang/String;ZLjava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=5\n          0: aload_0\n          1: aload_1\n          2: aload_2\n-         3: invokestatic  #31                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n+         3: invokestatic  #99                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/lang/String;)Ljava/nio/charset/Charset;\n          6: iload_3\n          7: aload         4\n-         9: invokespecial #6                  // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n+         9: invokespecial #21                 // Method \"<init>\":(Ljava/io/File;Ljava/nio/charset/Charset;ZLjava/lang/String;)V\n         12: return\n       LineNumberTable:\n         line 219: 0\n         line 220: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -548,44 +548,44 @@\n \n   private void testLockDir(java.io.File) throws java.io.IOException;\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_1\n-         1: invokevirtual #32                 // Method java/io/File.exists:()Z\n+         1: invokevirtual #105                // Method java/io/File.exists:()Z\n          4: ifne          37\n-         7: new           #13                 // class java/io/IOException\n+         7: new           #49                 // class java/io/IOException\n         10: dup\n-        11: new           #19                 // class java/lang/StringBuilder\n+        11: new           #65                 // class java/lang/StringBuilder\n         14: dup\n-        15: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        18: ldc           #33                 // String Could not find lockDir:\n-        20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        15: invokespecial #67                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        18: ldc           #108                // String Could not find lockDir:\n+        20: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         23: aload_1\n-        24: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n-        27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokespecial #15                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        24: invokevirtual #110                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n+        27: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        33: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         36: athrow\n         37: aload_1\n-        38: invokevirtual #35                 // Method java/io/File.canWrite:()Z\n+        38: invokevirtual #113                // Method java/io/File.canWrite:()Z\n         41: ifne          74\n-        44: new           #13                 // class java/io/IOException\n+        44: new           #49                 // class java/io/IOException\n         47: dup\n-        48: new           #19                 // class java/lang/StringBuilder\n+        48: new           #65                 // class java/lang/StringBuilder\n         51: dup\n-        52: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        55: ldc           #36                 // String Could not write to lockDir:\n-        57: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        52: invokespecial #67                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        55: ldc           #116                // String Could not write to lockDir:\n+        57: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         60: aload_1\n-        61: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n-        64: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        67: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        70: invokespecial #15                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        61: invokevirtual #110                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n+        64: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        67: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        70: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         73: athrow\n         74: return\n       LineNumberTable:\n         line 230: 0\n         line 231: 7\n         line 232: 24\n         line 234: 37\n@@ -603,41 +603,41 @@\n       throws java.io.IOException\n \n   private void createLock() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=1\n-         0: ldc           #23                 // class org/apache/commons/io/output/LockableFileWriter\n+         0: ldc           #2                  // class org/apache/commons/io/output/LockableFileWriter\n          2: dup\n          3: astore_1\n          4: monitorenter\n          5: aload_0\n-         6: getfield      #27                 // Field lockFile:Ljava/io/File;\n-         9: invokevirtual #37                 // Method java/io/File.createNewFile:()Z\n+         6: getfield      #84                 // Field lockFile:Ljava/io/File;\n+         9: invokevirtual #118                // Method java/io/File.createNewFile:()Z\n         12: ifne          53\n-        15: new           #13                 // class java/io/IOException\n+        15: new           #49                 // class java/io/IOException\n         18: dup\n-        19: new           #19                 // class java/lang/StringBuilder\n+        19: new           #65                 // class java/lang/StringBuilder\n         22: dup\n-        23: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        26: ldc           #38                 // String Can\\'t write file, lock\n-        28: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        23: invokespecial #67                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        26: ldc           #121                // String Can\\'t write file, lock\n+        28: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         31: aload_0\n-        32: getfield      #27                 // Field lockFile:Ljava/io/File;\n-        35: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n-        38: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        41: ldc           #39                 // String  exists\n-        43: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        46: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        49: invokespecial #15                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        32: getfield      #84                 // Field lockFile:Ljava/io/File;\n+        35: invokevirtual #110                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n+        38: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        41: ldc           #123                // String  exists\n+        43: invokevirtual #72                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        46: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        49: invokespecial #53                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         52: athrow\n         53: aload_0\n-        54: getfield      #27                 // Field lockFile:Ljava/io/File;\n-        57: invokevirtual #40                 // Method java/io/File.deleteOnExit:()V\n+        54: getfield      #84                 // Field lockFile:Ljava/io/File;\n+        57: invokevirtual #125                // Method java/io/File.deleteOnExit:()V\n         60: aload_1\n         61: monitorexit\n         62: goto          70\n         65: astore_2\n         66: aload_1\n         67: monitorexit\n         68: aload_2\n@@ -671,37 +671,37 @@\n \n   private java.io.Writer initWriter(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException;\n     descriptor: (Ljava/io/File;Ljava/nio/charset/Charset;Z)Ljava/io/Writer;\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=6, args_size=4\n          0: aload_1\n-         1: invokevirtual #32                 // Method java/io/File.exists:()Z\n+         1: invokevirtual #105                // Method java/io/File.exists:()Z\n          4: istore        4\n-         6: new           #41                 // class java/io/OutputStreamWriter\n+         6: new           #128                // class java/io/OutputStreamWriter\n          9: dup\n-        10: new           #42                 // class java/io/FileOutputStream\n+        10: new           #130                // class java/io/FileOutputStream\n         13: dup\n         14: aload_1\n-        15: invokevirtual #34                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n+        15: invokevirtual #110                // Method java/io/File.getAbsolutePath:()Ljava/lang/String;\n         18: iload_3\n-        19: invokespecial #43                 // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n+        19: invokespecial #132                // Method java/io/FileOutputStream.\"<init>\":(Ljava/lang/String;Z)V\n         22: aload_2\n-        23: invokestatic  #44                 // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n-        26: invokespecial #45                 // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n+        23: invokestatic  #135                // Method org/apache/commons/io/Charsets.toCharset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;\n+        26: invokespecial #138                // Method java/io/OutputStreamWriter.\"<init>\":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V\n         29: areturn\n         30: astore        5\n         32: aload_0\n-        33: getfield      #27                 // Field lockFile:Ljava/io/File;\n-        36: invokestatic  #47                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+        33: getfield      #84                 // Field lockFile:Ljava/io/File;\n+        36: invokestatic  #143                // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n         39: pop\n         40: iload         4\n         42: ifne          50\n         45: aload_1\n-        46: invokestatic  #47                 // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n+        46: invokestatic  #143                // Method org/apache/commons/io/FileUtils.deleteQuietly:(Ljava/io/File;)Z\n         49: pop\n         50: aload         5\n         52: athrow\n       Exception table:\n          from    to  target type\n              6    29    30   Class java/io/IOException\n              6    29    30   Class java/lang/RuntimeException\n@@ -736,25 +736,25 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n-         4: invokevirtual #48                 // Method java/io/Writer.close:()V\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #147                // Method java/io/Writer.close:()V\n          7: aload_0\n-         8: getfield      #27                 // Field lockFile:Ljava/io/File;\n-        11: invokestatic  #49                 // Method org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n+         8: getfield      #84                 // Field lockFile:Ljava/io/File;\n+        11: invokestatic  #150                // Method org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n         14: pop\n         15: goto          29\n         18: astore_1\n         19: aload_0\n-        20: getfield      #27                 // Field lockFile:Ljava/io/File;\n-        23: invokestatic  #49                 // Method org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n+        20: getfield      #84                 // Field lockFile:Ljava/io/File;\n+        23: invokestatic  #150                // Method org/apache/commons/io/FileUtils.delete:(Ljava/io/File;)Ljava/io/File;\n         26: pop\n         27: aload_1\n         28: athrow\n         29: return\n       Exception table:\n          from    to  target type\n              0     7    18   any\n@@ -777,17 +777,17 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n          4: iload_1\n-         5: invokevirtual #50                 // Method java/io/Writer.write:(I)V\n+         5: invokevirtual #154                // Method java/io/Writer.write:(I)V\n          8: return\n       LineNumberTable:\n         line 301: 0\n         line 302: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -797,17 +797,17 @@\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n          4: aload_1\n-         5: invokevirtual #51                 // Method java/io/Writer.write:([C)V\n+         5: invokevirtual #158                // Method java/io/Writer.write:([C)V\n          8: return\n       LineNumberTable:\n         line 311: 0\n         line 312: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -817,19 +817,19 @@\n \n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #52                 // Method java/io/Writer.write:([CII)V\n+         7: invokevirtual #161                // Method java/io/Writer.write:([CII)V\n         10: return\n       LineNumberTable:\n         line 323: 0\n         line 324: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -841,17 +841,17 @@\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n          4: aload_1\n-         5: invokevirtual #53                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+         5: invokevirtual #164                // Method java/io/Writer.write:(Ljava/lang/String;)V\n          8: return\n       LineNumberTable:\n         line 333: 0\n         line 334: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -861,19 +861,19 @@\n \n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #54                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+         7: invokevirtual #166                // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         10: return\n       LineNumberTable:\n         line 345: 0\n         line 346: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n@@ -885,16 +885,16 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field out:Ljava/io/Writer;\n-         4: invokevirtual #55                 // Method java/io/Writer.flush:()V\n+         1: getfield      #95                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #169                // Method java/io/Writer.flush:()V\n          7: return\n       LineNumberTable:\n         line 354: 0\n         line 355: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/LockableFileWriter;\n"}]}
