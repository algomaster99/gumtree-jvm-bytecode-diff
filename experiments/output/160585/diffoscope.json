{"diffoscope-json-version": 1, "source1": "first/NumberInput.class", "source2": "second/NumberInput.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -175,33 +175,33 @@\n             len = s.length();\n         }\n         else if (sign == '-') {\n             i = 1;\n         }\n         while (i < len) {\n             final char c = s.charAt(i);\n-            Label_0095: {\n+            Label_0096: {\n                 if (c <= '9') {\n                     if (c >= '0') {\n-                        break Label_0095;\n+                        break Label_0096;\n                     }\n                 }\n                 try {\n                     return (int)parseDouble(s, true);\n                 }\n-                catch (final NumberFormatException ex) {\n+                catch (final NumberFormatException e) {\n                     return def;\n                 }\n             }\n             ++i;\n         }\n         try {\n             return Integer.parseInt(s);\n         }\n-        catch (final NumberFormatException ex2) {\n+        catch (final NumberFormatException ex) {\n             return def;\n         }\n     }\n     \n     public static long parseAsLong(String s, final long def) {\n         if (s == null) {\n             return def;\n@@ -218,33 +218,33 @@\n             len = s.length();\n         }\n         else if (sign == '-') {\n             i = 1;\n         }\n         while (i < len) {\n             final char c = s.charAt(i);\n-            Label_0098: {\n+            Label_0099: {\n                 if (c <= '9') {\n                     if (c >= '0') {\n-                        break Label_0098;\n+                        break Label_0099;\n                     }\n                 }\n                 try {\n                     return (long)parseDouble(s, true);\n                 }\n-                catch (final NumberFormatException ex) {\n+                catch (final NumberFormatException e) {\n                     return def;\n                 }\n             }\n             ++i;\n         }\n         try {\n             return Long.parseLong(s);\n         }\n-        catch (final NumberFormatException ex2) {\n+        catch (final NumberFormatException ex) {\n             return def;\n         }\n     }\n     \n     public static double parseAsDouble(final String s, final double def) {\n         return parseAsDouble(s, def, false);\n     }\n"}]}
