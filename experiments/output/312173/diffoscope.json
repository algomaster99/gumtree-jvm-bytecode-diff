{"diffoscope-json-version": 1, "source1": "first/ClassFileEntry.class", "source2": "second/ClassFileEntry.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,67 +1,67 @@\n-  SHA-256 checksum 11d19c521dba18f86a0d051b278c863c31229893ff7862cc28f4a1780d4816aa\n+  SHA-256 checksum 1f587b168c652f4ca22759cd165d0c8dcb617951011392f834a2de7801feff0f\n   Compiled from \"ClassFileEntry.java\"\n public abstract class org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #9                          // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  super_class: #10                        // java/lang/Object\n+  this_class: #8                          // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-   #1 = Methodref          #10.#39        // java/lang/Object.\"<init>\":()V\n-   #2 = Fieldref           #9.#40         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-   #3 = Methodref          #10.#41        // java/lang/Object.hashCode:()I\n-   #4 = Fieldref           #9.#42         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolved:Z\n-   #5 = Class              #43            // java/lang/IllegalStateException\n-   #6 = String             #44            // Entry has not been resolved\n-   #7 = Methodref          #5.#45         // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #8 = Methodref          #9.#46         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.doWrite:(Ljava/io/DataOutputStream;)V\n-   #9 = Class              #47            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #10 = Class              #48            // java/lang/Object\n+   #1 = Methodref          #2.#3          // java/lang/Object.\"<init>\":()V\n+   #2 = Class              #4             // java/lang/Object\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+   #8 = Class              #10            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #9 = NameAndType        #11:#12        // NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n   #11 = Utf8               NONE\n   #12 = Utf8               [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #13 = Utf8               resolved\n-  #14 = Utf8               Z\n-  #15 = Utf8               <init>\n-  #16 = Utf8               ()V\n-  #17 = Utf8               Code\n-  #18 = Utf8               LineNumberTable\n-  #19 = Utf8               doWrite\n-  #20 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #21 = Utf8               Exceptions\n-  #22 = Class              #49            // java/io/IOException\n-  #23 = Utf8               equals\n-  #24 = Utf8               (Ljava/lang/Object;)Z\n-  #25 = Utf8               getNestedClassFileEntries\n-  #26 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #27 = Utf8               hashCode\n-  #28 = Utf8               ()I\n-  #29 = Utf8               objectHashCode\n-  #30 = Utf8               resolve\n-  #31 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #32 = Utf8               toString\n-  #33 = Utf8               ()Ljava/lang/String;\n-  #34 = Utf8               write\n-  #35 = Utf8               StackMapTable\n-  #36 = Utf8               <clinit>\n-  #37 = Utf8               SourceFile\n-  #38 = Utf8               ClassFileEntry.java\n-  #39 = NameAndType        #15:#16        // \"<init>\":()V\n-  #40 = NameAndType        #11:#12        // NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #41 = NameAndType        #27:#28        // hashCode:()I\n-  #42 = NameAndType        #13:#14        // resolved:Z\n-  #43 = Utf8               java/lang/IllegalStateException\n-  #44 = Utf8               Entry has not been resolved\n-  #45 = NameAndType        #15:#50        // \"<init>\":(Ljava/lang/String;)V\n-  #46 = NameAndType        #19:#20        // doWrite:(Ljava/io/DataOutputStream;)V\n-  #47 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #48 = Utf8               java/lang/Object\n-  #49 = Utf8               java/io/IOException\n-  #50 = Utf8               (Ljava/lang/String;)V\n+  #13 = Methodref          #2.#14         // java/lang/Object.hashCode:()I\n+  #14 = NameAndType        #15:#16        // hashCode:()I\n+  #15 = Utf8               hashCode\n+  #16 = Utf8               ()I\n+  #17 = Fieldref           #8.#18         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolved:Z\n+  #18 = NameAndType        #19:#20        // resolved:Z\n+  #19 = Utf8               resolved\n+  #20 = Utf8               Z\n+  #21 = Class              #22            // java/lang/IllegalStateException\n+  #22 = Utf8               java/lang/IllegalStateException\n+  #23 = String             #24            // Entry has not been resolved\n+  #24 = Utf8               Entry has not been resolved\n+  #25 = Methodref          #21.#26        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #26 = NameAndType        #5:#27         // \"<init>\":(Ljava/lang/String;)V\n+  #27 = Utf8               (Ljava/lang/String;)V\n+  #28 = Methodref          #8.#29         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.doWrite:(Ljava/io/DataOutputStream;)V\n+  #29 = NameAndType        #30:#31        // doWrite:(Ljava/io/DataOutputStream;)V\n+  #30 = Utf8               doWrite\n+  #31 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #32 = Utf8               Code\n+  #33 = Utf8               LineNumberTable\n+  #34 = Utf8               Exceptions\n+  #35 = Class              #36            // java/io/IOException\n+  #36 = Utf8               java/io/IOException\n+  #37 = Utf8               equals\n+  #38 = Utf8               (Ljava/lang/Object;)Z\n+  #39 = Utf8               getNestedClassFileEntries\n+  #40 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #41 = Utf8               objectHashCode\n+  #42 = Utf8               resolve\n+  #43 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #44 = Utf8               toString\n+  #45 = Utf8               ()Ljava/lang/String;\n+  #46 = Utf8               write\n+  #47 = Utf8               StackMapTable\n+  #48 = Utf8               <clinit>\n+  #49 = Utf8               SourceFile\n+  #50 = Utf8               ClassFileEntry.java\n {\n   protected static final org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] NONE;\n     descriptor: [Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x001c) ACC_PROTECTED, ACC_STATIC, ACC_FINAL\n \n   private boolean resolved;\n     descriptor: Z\n@@ -89,42 +89,42 @@\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n-         0: getstatic     #2                  // Field NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+         0: getstatic     #7                  // Field NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n          3: areturn\n       LineNumberTable:\n         line 36: 0\n \n   public abstract int hashCode();\n     descriptor: ()I\n     flags: (0x0401) ACC_PUBLIC, ACC_ABSTRACT\n \n   protected int objectHashCode();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.hashCode:()I\n+         1: invokespecial #13                 // Method java/lang/Object.hashCode:()I\n          4: ireturn\n       LineNumberTable:\n         line 43: 0\n \n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: putfield      #4                  // Field resolved:Z\n+         2: putfield      #17                 // Field resolved:Z\n          5: return\n       LineNumberTable:\n         line 52: 0\n         line 53: 5\n \n   public abstract java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n@@ -132,24 +132,24 @@\n \n   public final void write(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field resolved:Z\n+         1: getfield      #17                 // Field resolved:Z\n          4: ifne          17\n-         7: new           #5                  // class java/lang/IllegalStateException\n+         7: new           #21                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #6                  // String Entry has not been resolved\n-        13: invokespecial #7                  // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #23                 // String Entry has not been resolved\n+        13: invokespecial #25                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n         18: aload_1\n-        19: invokevirtual #8                  // Method doWrite:(Ljava/io/DataOutputStream;)V\n+        19: invokevirtual #28                 // Method doWrite:(Ljava/io/DataOutputStream;)V\n         22: return\n       LineNumberTable:\n         line 59: 0\n         line 60: 7\n         line 62: 17\n         line 63: 22\n       StackMapTable: number_of_entries = 1\n@@ -159,14 +159,14 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #9                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-         4: putstatic     #2                  // Field NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+         1: anewarray     #8                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         4: putstatic     #7                  // Field NONE:[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n          7: return\n       LineNumberTable:\n         line 27: 0\n }\n SourceFile: \"ClassFileEntry.java\"\n"}]}
