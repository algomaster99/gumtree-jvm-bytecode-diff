{"diffoscope-json-version": 1, "source1": "first/JavadocParser$DtTagStartContext.class", "source2": "second/JavadocParser$DtTagStartContext.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -23,55 +23,55 @@\n         return this.getToken(55, 0);\n     }\n     \n     public List<JavadocParser.AttributeContext> attribute() {\n         return this.getRuleContexts((Class)JavadocParser.AttributeContext.class);\n     }\n     \n-    public JavadocParser.AttributeContext attribute(final int i) {\n-        return (JavadocParser.AttributeContext)this.getRuleContext((Class)JavadocParser.AttributeContext.class, i);\n+    public JavadocParser.AttributeContext attribute(final int n) {\n+        return (JavadocParser.AttributeContext)this.getRuleContext((Class)JavadocParser.AttributeContext.class, n);\n     }\n     \n     public List<TerminalNode> NEWLINE() {\n         return this.getTokens(6);\n     }\n     \n-    public TerminalNode NEWLINE(final int i) {\n-        return this.getToken(6, i);\n+    public TerminalNode NEWLINE(final int n) {\n+        return this.getToken(6, n);\n     }\n     \n     public List<TerminalNode> LEADING_ASTERISK() {\n         return this.getTokens(1);\n     }\n     \n-    public TerminalNode LEADING_ASTERISK(final int i) {\n-        return this.getToken(1, i);\n+    public TerminalNode LEADING_ASTERISK(final int n) {\n+        return this.getToken(1, n);\n     }\n     \n     public List<TerminalNode> WS() {\n         return this.getTokens(4);\n     }\n     \n-    public TerminalNode WS(final int i) {\n-        return this.getToken(4, i);\n+    public TerminalNode WS(final int n) {\n+        return this.getToken(4, n);\n     }\n     \n-    public DtTagStartContext(final ParserRuleContext parent, final int invokingState) {\n-        super(parent, invokingState);\n+    public DtTagStartContext(final ParserRuleContext parserRuleContext, final int n) {\n+        super(parserRuleContext, n);\n     }\n     \n-    public DtTagStartContext(final ParserRuleContext parent, final int invokingState, final boolean isNonTight) {\n-        super(parent, invokingState);\n+    public DtTagStartContext(final ParserRuleContext parserRuleContext, final int n, final boolean isNonTight) {\n+        super(parserRuleContext, n);\n         this.isNonTight = isNonTight;\n     }\n     \n     public int getRuleIndex() {\n         return 30;\n     }\n     \n-    public <T> T accept(final ParseTreeVisitor<? extends T> visitor) {\n-        if (visitor instanceof JavadocParserVisitor) {\n-            return (T)((JavadocParserVisitor)visitor).visitDtTagStart(this);\n+    public <T> T accept(final ParseTreeVisitor<? extends T> parseTreeVisitor) {\n+        if (parseTreeVisitor instanceof JavadocParserVisitor) {\n+            return (T)((JavadocParserVisitor)parseTreeVisitor).visitDtTagStart(this);\n         }\n-        return (T)visitor.visitChildren((RuleNode)this);\n+        return (T)parseTreeVisitor.visitChildren((RuleNode)this);\n     }\n }\n"}]}
