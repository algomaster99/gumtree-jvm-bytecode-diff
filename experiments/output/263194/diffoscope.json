{"diffoscope-json-version": 1, "source1": "first/MutableFloat.class", "source2": "second/MutableFloat.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,32 +9,32 @@\n     public MutableFloat() {\n     }\n     \n     public MutableFloat(final float value) {\n         this.value = value;\n     }\n     \n-    public MutableFloat(final Number value) {\n-        this.value = value.floatValue();\n+    public MutableFloat(final Number n) {\n+        this.value = n.floatValue();\n     }\n     \n-    public MutableFloat(final String value) {\n-        this.value = Float.parseFloat(value);\n+    public MutableFloat(final String s) {\n+        this.value = Float.parseFloat(s);\n     }\n     \n     public Float getValue() {\n         return Float.valueOf(this.value);\n     }\n     \n     public void setValue(final float value) {\n         this.value = value;\n     }\n     \n-    public void setValue(final Number value) {\n-        this.value = value.floatValue();\n+    public void setValue(final Number n) {\n+        this.value = n.floatValue();\n     }\n     \n     public boolean isNaN() {\n         return Float.isNaN(this.value);\n     }\n     \n     public boolean isInfinite() {\n@@ -42,71 +42,71 @@\n     }\n     \n     public void increment() {\n         ++this.value;\n     }\n     \n     public float getAndIncrement() {\n-        final float last = this.value;\n+        final float value = this.value;\n         ++this.value;\n-        return last;\n+        return value;\n     }\n     \n     public float incrementAndGet() {\n         return ++this.value;\n     }\n     \n     public void decrement() {\n         --this.value;\n     }\n     \n     public float getAndDecrement() {\n-        final float last = this.value;\n+        final float value = this.value;\n         --this.value;\n-        return last;\n+        return value;\n     }\n     \n     public float decrementAndGet() {\n         return --this.value;\n     }\n     \n-    public void add(final float operand) {\n-        this.value += operand;\n+    public void add(final float n) {\n+        this.value += n;\n     }\n     \n-    public void add(final Number operand) {\n-        this.value += operand.floatValue();\n+    public void add(final Number n) {\n+        this.value += n.floatValue();\n     }\n     \n-    public void subtract(final float operand) {\n-        this.value -= operand;\n+    public void subtract(final float n) {\n+        this.value -= n;\n     }\n     \n-    public void subtract(final Number operand) {\n-        this.value -= operand.floatValue();\n+    public void subtract(final Number n) {\n+        this.value -= n.floatValue();\n     }\n     \n-    public float addAndGet(final float operand) {\n-        return this.value += operand;\n+    public float addAndGet(final float n) {\n+        return this.value += n;\n     }\n     \n-    public float addAndGet(final Number operand) {\n-        return this.value += operand.floatValue();\n+    public float addAndGet(final Number n) {\n+        return this.value += n.floatValue();\n     }\n     \n-    public float getAndAdd(final float operand) {\n-        final float last = this.value;\n-        this.value += operand;\n-        return last;\n+    public float getAndAdd(final float n) {\n+        final float value = this.value;\n+        this.value += n;\n+        return value;\n     }\n     \n-    public float getAndAdd(final Number operand) {\n-        final float last = this.value;\n-        this.value += operand.floatValue();\n-        return last;\n+    public float getAndAdd(final Number n) {\n+        final float value = this.value;\n+        this.value += n.floatValue();\n+        return value;\n     }\n     \n     @Override\n     public int intValue() {\n         return (int)this.value;\n     }\n     \n@@ -125,24 +125,24 @@\n         return this.value;\n     }\n     \n     public Float toFloat() {\n         return Float.valueOf(this.floatValue());\n     }\n     \n-    public boolean equals(final Object obj) {\n-        return obj instanceof MutableFloat && Float.floatToIntBits(((MutableFloat)obj).value) == Float.floatToIntBits(this.value);\n+    public boolean equals(final Object o) {\n+        return o instanceof MutableFloat && Float.floatToIntBits(((MutableFloat)o).value) == Float.floatToIntBits(this.value);\n     }\n     \n     public int hashCode() {\n         return Float.floatToIntBits(this.value);\n     }\n     \n     @Override\n-    public int compareTo(final MutableFloat other) {\n-        return Float.compare(this.value, other.value);\n+    public int compareTo(final MutableFloat mutableFloat) {\n+        return Float.compare(this.value, mutableFloat.value);\n     }\n     \n     public String toString() {\n         return String.valueOf(this.value);\n     }\n }\n"}]}
