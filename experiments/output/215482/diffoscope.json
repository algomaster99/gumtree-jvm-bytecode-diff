{"diffoscope-json-version": 1, "source1": "first/DCONST.class", "source2": "second/DCONST.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,37 +4,37 @@\n public class DCONST extends Instruction implements ConstantPushInstruction\n {\n     private double value;\n     \n     DCONST() {\n     }\n     \n-    public DCONST(final double f) {\n+    public DCONST(final double n) {\n         super((short)14, (short)1);\n-        if (f == 0.0) {\n+        if (n == 0.0) {\n             super.setOpcode((short)14);\n         }\n         else {\n-            if (f != 1.0) {\n-                throw new ClassGenException(\"DCONST can be used only for 0.0 and 1.0: \" + f);\n+            if (n != 1.0) {\n+                throw new ClassGenException(\"DCONST can be used only for 0.0 and 1.0: \" + n);\n             }\n             super.setOpcode((short)15);\n         }\n-        this.value = f;\n+        this.value = n;\n     }\n     \n     public Number getValue() {\n         return new Double(this.value);\n     }\n     \n-    public Type getType(final ConstantPoolGen cp) {\n+    public Type getType(final ConstantPoolGen constantPoolGen) {\n         return (Type)Type.DOUBLE;\n     }\n     \n-    public void accept(final Visitor v) {\n-        v.visitPushInstruction((PushInstruction)this);\n-        v.visitStackProducer((StackProducer)this);\n-        v.visitTypedInstruction((TypedInstruction)this);\n-        v.visitConstantPushInstruction((ConstantPushInstruction)this);\n-        v.visitDCONST(this);\n+    public void accept(final Visitor visitor) {\n+        visitor.visitPushInstruction((PushInstruction)this);\n+        visitor.visitStackProducer((StackProducer)this);\n+        visitor.visitTypedInstruction((TypedInstruction)this);\n+        visitor.visitConstantPushInstruction((ConstantPushInstruction)this);\n+        visitor.visitDCONST(this);\n     }\n }\n"}]}
