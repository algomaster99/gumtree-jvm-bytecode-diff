{"diffoscope-json-version": 1, "source1": "first/BitStream.class", "source2": "second/BitStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,121 +1,121 @@\n-  SHA-256 checksum 7011321f7729a94dcc7870ea58106c0ea4c1bdc7fc4d27890cd12dbf55c0420d\n+  SHA-256 checksum 592e9ee550f60b161beb5906a6ddc2a654353302f00cfb68b19e5fab6bae76fe\n   Compiled from \"BitStream.java\"\n class org.apache.commons.compress.archivers.zip.BitStream extends org.apache.commons.compress.utils.BitInputStream\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0020) ACC_SUPER\n-  this_class: #4                          // org/apache/commons/compress/archivers/zip/BitStream\n-  super_class: #5                         // org/apache/commons/compress/utils/BitInputStream\n+  this_class: #1                          // org/apache/commons/compress/archivers/zip/BitStream\n+  super_class: #3                         // org/apache/commons/compress/utils/BitInputStream\n   interfaces: 0, fields: 0, methods: 4, attributes: 1\n Constant pool:\n-   #1 = Fieldref           #26.#27        // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-   #2 = Methodref          #5.#28         // org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-   #3 = Methodref          #4.#29         // org/apache/commons/compress/archivers/zip/BitStream.readBits:(I)J\n-   #4 = Class              #30            // org/apache/commons/compress/archivers/zip/BitStream\n-   #5 = Class              #31            // org/apache/commons/compress/utils/BitInputStream\n-   #6 = Utf8               <init>\n-   #7 = Utf8               (Ljava/io/InputStream;)V\n-   #8 = Utf8               Code\n-   #9 = Utf8               LineNumberTable\n-  #10 = Utf8               LocalVariableTable\n-  #11 = Utf8               this\n-  #12 = Utf8               Lorg/apache/commons/compress/archivers/zip/BitStream;\n-  #13 = Utf8               in\n-  #14 = Utf8               Ljava/io/InputStream;\n-  #15 = Utf8               nextBit\n-  #16 = Utf8               ()I\n-  #17 = Utf8               Exceptions\n-  #18 = Class              #32            // java/io/IOException\n-  #19 = Utf8               nextBits\n-  #20 = Utf8               (I)J\n-  #21 = Utf8               n\n-  #22 = Utf8               I\n-  #23 = Utf8               nextByte\n-  #24 = Utf8               SourceFile\n-  #25 = Utf8               BitStream.java\n-  #26 = Class              #33            // java/nio/ByteOrder\n-  #27 = NameAndType        #34:#35        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-  #28 = NameAndType        #6:#36         // \"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-  #29 = NameAndType        #37:#20        // readBits:(I)J\n-  #30 = Utf8               org/apache/commons/compress/archivers/zip/BitStream\n-  #31 = Utf8               org/apache/commons/compress/utils/BitInputStream\n-  #32 = Utf8               java/io/IOException\n-  #33 = Utf8               java/nio/ByteOrder\n-  #34 = Utf8               LITTLE_ENDIAN\n-  #35 = Utf8               Ljava/nio/ByteOrder;\n-  #36 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n-  #37 = Utf8               readBits\n+   #1 = Class              #2             // org/apache/commons/compress/archivers/zip/BitStream\n+   #2 = Utf8               org/apache/commons/compress/archivers/zip/BitStream\n+   #3 = Class              #4             // org/apache/commons/compress/utils/BitInputStream\n+   #4 = Utf8               org/apache/commons/compress/utils/BitInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/InputStream;)V\n+   #7 = Utf8               Code\n+   #8 = Fieldref           #9.#11         // java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+   #9 = Class              #10            // java/nio/ByteOrder\n+  #10 = Utf8               java/nio/ByteOrder\n+  #11 = NameAndType        #12:#13        // LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+  #12 = Utf8               LITTLE_ENDIAN\n+  #13 = Utf8               Ljava/nio/ByteOrder;\n+  #14 = Methodref          #3.#15         // org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+  #15 = NameAndType        #5:#16         // \"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+  #16 = Utf8               (Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+  #17 = Utf8               LineNumberTable\n+  #18 = Utf8               LocalVariableTable\n+  #19 = Utf8               this\n+  #20 = Utf8               Lorg/apache/commons/compress/archivers/zip/BitStream;\n+  #21 = Utf8               in\n+  #22 = Utf8               Ljava/io/InputStream;\n+  #23 = Utf8               nextBit\n+  #24 = Utf8               ()I\n+  #25 = Utf8               Exceptions\n+  #26 = Class              #27            // java/io/IOException\n+  #27 = Utf8               java/io/IOException\n+  #28 = Methodref          #1.#29         // org/apache/commons/compress/archivers/zip/BitStream.readBits:(I)J\n+  #29 = NameAndType        #30:#31        // readBits:(I)J\n+  #30 = Utf8               readBits\n+  #31 = Utf8               (I)J\n+  #32 = Utf8               nextBits\n+  #33 = Utf8               n\n+  #34 = Utf8               I\n+  #35 = Utf8               nextByte\n+  #36 = Utf8               SourceFile\n+  #37 = Utf8               BitStream.java\n {\n   org.apache.commons.compress.archivers.zip.BitStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #1                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n-         5: invokespecial #2                  // Method org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n+         2: getstatic     #8                  // Field java/nio/ByteOrder.LITTLE_ENDIAN:Ljava/nio/ByteOrder;\n+         5: invokespecial #14                 // Method org/apache/commons/compress/utils/BitInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V\n          8: return\n       LineNumberTable:\n         line 36: 0\n         line 37: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/archivers/zip/BitStream;\n             0       9     1    in   Ljava/io/InputStream;\n \n   int nextBit() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #3                  // Method readBits:(I)J\n+         2: invokevirtual #28                 // Method readBits:(I)J\n          5: l2i\n          6: ireturn\n       LineNumberTable:\n         line 45: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/archivers/zip/BitStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   long nextBits(int) throws java.io.IOException;\n     descriptor: (I)J\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #3                  // Method readBits:(I)J\n+         2: invokevirtual #28                 // Method readBits:(I)J\n          5: lreturn\n       LineNumberTable:\n         line 55: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/compress/archivers/zip/BitStream;\n             0       6     1     n   I\n-    Exceptions:\n-      throws java.io.IOException\n \n   int nextByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0000)\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        8\n-         3: invokevirtual #3                  // Method readBits:(I)J\n+         3: invokevirtual #28                 // Method readBits:(I)J\n          6: l2i\n          7: ireturn\n       LineNumberTable:\n         line 59: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/archivers/zip/BitStream;\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"BitStream.java\"\n"}]}
