{"diffoscope-json-version": 1, "source1": "first/HuffmanDecoder$DecodingMemory.class", "source2": "second/HuffmanDecoder$DecodingMemory.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,111 +1,101 @@\n-  SHA-256 checksum ec0b4138e235c6b1184c5c67761a4c89165d5ad1f641d4e20d4fa17e8603476b\n+  SHA-256 checksum 537310fdd949eeff4e7cf605ab4e31d1d3d42e0aadf200f1f7d02a454fb0790b\n   Compiled from \"HuffmanDecoder.java\"\n class org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory\n   minor version: 0\n-  major version: 53\n+  major version: 51\n   flags: (0x0020) ACC_SUPER\n-  this_class: #14                         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  super_class: #15                        // java/lang/Object\n-  interfaces: 0, fields: 4, methods: 7, attributes: 3\n+  this_class: #1                          // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+  super_class: #3                         // java/lang/Object\n+  interfaces: 0, fields: 4, methods: 7, attributes: 2\n Constant pool:\n-   #1 = Methodref          #14.#60        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":()V\n-   #2 = Methodref          #14.#61        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":(I)V\n-   #3 = Methodref          #15.#60        // java/lang/Object.\"<init>\":()V\n-   #4 = Fieldref           #14.#62        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.memory:[B\n-   #5 = Fieldref           #14.#63        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.mask:I\n-   #6 = Fieldref           #14.#64        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wHead:I\n-   #7 = Methodref          #14.#65        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.incCounter:(I)I\n-   #8 = Methodref          #14.#66        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n-   #9 = Class              #67            // java/lang/IllegalStateException\n-  #10 = InvokeDynamic      #0:#71         // #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-  #11 = Methodref          #9.#72         // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-  #12 = Fieldref           #14.#73        // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wrappedAround:Z\n-  #13 = InvokeDynamic      #1:#71         // #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-  #14 = Class              #76            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #15 = Class              #77            // java/lang/Object\n-  #16 = Utf8               memory\n-  #17 = Utf8               [B\n-  #18 = Utf8               mask\n-  #19 = Utf8               I\n-  #20 = Utf8               wHead\n-  #21 = Utf8               wrappedAround\n-  #22 = Utf8               Z\n-  #23 = Utf8               <init>\n-  #24 = Utf8               ()V\n-  #25 = Utf8               Code\n-  #26 = Utf8               LineNumberTable\n-  #27 = Utf8               LocalVariableTable\n-  #28 = Utf8               this\n-  #29 = Utf8               DecodingMemory\n-  #30 = Utf8               InnerClasses\n-  #31 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-  #32 = Utf8               (I)V\n-  #33 = Utf8               bits\n-  #34 = Utf8               add\n-  #35 = Utf8               (B)B\n-  #36 = Utf8               b\n-  #37 = Utf8               B\n-  #38 = Utf8               ([BII)V\n-  #39 = Utf8               i\n-  #40 = Utf8               off\n-  #41 = Utf8               len\n-  #42 = Utf8               StackMapTable\n-  #43 = Utf8               recordToBuffer\n-  #44 = Utf8               (II[B)V\n-  #45 = Utf8               pos\n-  #46 = Utf8               distance\n-  #47 = Utf8               length\n-  #48 = Utf8               buff\n-  #49 = Utf8               start\n-  #50 = Utf8               incCounter\n-  #51 = Utf8               (I)I\n-  #52 = Utf8               counter\n-  #53 = Utf8               newCounter\n-  #54 = Class              #78            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  #55 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n-  #56 = Utf8               x0\n-  #57 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;\n-  #58 = Utf8               SourceFile\n-  #59 = Utf8               HuffmanDecoder.java\n-  #60 = NameAndType        #23:#24        // \"<init>\":()V\n-  #61 = NameAndType        #23:#32        // \"<init>\":(I)V\n-  #62 = NameAndType        #16:#17        // memory:[B\n-  #63 = NameAndType        #18:#19        // mask:I\n-  #64 = NameAndType        #20:#19        // wHead:I\n-  #65 = NameAndType        #50:#51        // incCounter:(I)I\n-  #66 = NameAndType        #34:#35        // add:(B)B\n-  #67 = Utf8               java/lang/IllegalStateException\n-  #68 = Utf8               BootstrapMethods\n-  #69 = MethodHandle       6:#79          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #70 = String             #80            // Illegal distance parameter: \\u0001\n-  #71 = NameAndType        #81:#82        // makeConcatWithConstants:(I)Ljava/lang/String;\n-  #72 = NameAndType        #23:#83        // \"<init>\":(Ljava/lang/String;)V\n-  #73 = NameAndType        #21:#22        // wrappedAround:Z\n-  #74 = String             #84            // Attempt to read beyond memory: dist=\\u0001\n-  #75 = Class              #85            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #76 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n-  #77 = Utf8               java/lang/Object\n-  #78 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  #79 = Methodref          #86.#87        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #80 = Utf8               Illegal distance parameter: \\u0001\n-  #81 = Utf8               makeConcatWithConstants\n-  #82 = Utf8               (I)Ljava/lang/String;\n-  #83 = Utf8               (Ljava/lang/String;)V\n-  #84 = Utf8               Attempt to read beyond memory: dist=\\u0001\n-  #85 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  #86 = Class              #88            // java/lang/invoke/StringConcatFactory\n-  #87 = NameAndType        #81:#91        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #88 = Utf8               java/lang/invoke/StringConcatFactory\n-  #89 = Class              #93            // java/lang/invoke/MethodHandles$Lookup\n-  #90 = Utf8               Lookup\n-  #91 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-  #92 = Class              #94            // java/lang/invoke/MethodHandles\n-  #93 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #94 = Utf8               java/lang/invoke/MethodHandles\n+   #1 = Class              #2             // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #2 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory\n+   #3 = Class              #4             // java/lang/Object\n+   #4 = Utf8               java/lang/Object\n+   #5 = Utf8               memory\n+   #6 = Utf8               [B\n+   #7 = Utf8               mask\n+   #8 = Utf8               I\n+   #9 = Utf8               wHead\n+  #10 = Utf8               wrappedAround\n+  #11 = Utf8               Z\n+  #12 = Utf8               <init>\n+  #13 = Utf8               ()V\n+  #14 = Utf8               Code\n+  #15 = Methodref          #1.#16         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":(I)V\n+  #16 = NameAndType        #12:#17        // \"<init>\":(I)V\n+  #17 = Utf8               (I)V\n+  #18 = Utf8               LineNumberTable\n+  #19 = Utf8               LocalVariableTable\n+  #20 = Utf8               this\n+  #21 = Utf8               Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+  #22 = Methodref          #3.#23         // java/lang/Object.\"<init>\":()V\n+  #23 = NameAndType        #12:#13        // \"<init>\":()V\n+  #24 = Fieldref           #1.#25         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.memory:[B\n+  #25 = NameAndType        #5:#6          // memory:[B\n+  #26 = Fieldref           #1.#27         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.mask:I\n+  #27 = NameAndType        #7:#8          // mask:I\n+  #28 = Utf8               bits\n+  #29 = Utf8               add\n+  #30 = Utf8               (B)B\n+  #31 = Fieldref           #1.#32         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wHead:I\n+  #32 = NameAndType        #9:#8          // wHead:I\n+  #33 = Methodref          #1.#34         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.incCounter:(I)I\n+  #34 = NameAndType        #35:#36        // incCounter:(I)I\n+  #35 = Utf8               incCounter\n+  #36 = Utf8               (I)I\n+  #37 = Utf8               b\n+  #38 = Utf8               B\n+  #39 = Utf8               ([BII)V\n+  #40 = Methodref          #1.#41         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.add:(B)B\n+  #41 = NameAndType        #29:#30        // add:(B)B\n+  #42 = Utf8               off\n+  #43 = Utf8               len\n+  #44 = Utf8               i\n+  #45 = Utf8               StackMapTable\n+  #46 = Utf8               recordToBuffer\n+  #47 = Utf8               (II[B)V\n+  #48 = Class              #49            // java/lang/IllegalStateException\n+  #49 = Utf8               java/lang/IllegalStateException\n+  #50 = Class              #51            // java/lang/StringBuilder\n+  #51 = Utf8               java/lang/StringBuilder\n+  #52 = String             #53            // Illegal distance parameter:\n+  #53 = Utf8               Illegal distance parameter:\n+  #54 = Methodref          #50.#55        // java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+  #55 = NameAndType        #12:#56        // \"<init>\":(Ljava/lang/String;)V\n+  #56 = Utf8               (Ljava/lang/String;)V\n+  #57 = Methodref          #50.#58        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+  #58 = NameAndType        #59:#60        // append:(I)Ljava/lang/StringBuilder;\n+  #59 = Utf8               append\n+  #60 = Utf8               (I)Ljava/lang/StringBuilder;\n+  #61 = Methodref          #50.#62        // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+  #62 = NameAndType        #63:#64        // toString:()Ljava/lang/String;\n+  #63 = Utf8               toString\n+  #64 = Utf8               ()Ljava/lang/String;\n+  #65 = Methodref          #48.#55        // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+  #66 = Fieldref           #1.#67         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.wrappedAround:Z\n+  #67 = NameAndType        #10:#11        // wrappedAround:Z\n+  #68 = String             #69            // Attempt to read beyond memory: dist=\n+  #69 = Utf8               Attempt to read beyond memory: dist=\n+  #70 = Utf8               distance\n+  #71 = Utf8               length\n+  #72 = Utf8               buff\n+  #73 = Utf8               start\n+  #74 = Utf8               pos\n+  #75 = Utf8               counter\n+  #76 = Utf8               newCounter\n+  #77 = Utf8               (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;)V\n+  #78 = Methodref          #1.#23         // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory.\"<init>\":()V\n+  #79 = Utf8               SourceFile\n+  #80 = Utf8               HuffmanDecoder.java\n+  #81 = Utf8               InnerClasses\n+  #82 = Class              #83            // org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #83 = Utf8               org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n+  #84 = Utf8               DecodingMemory\n {\n   private final byte[] memory;\n     descriptor: [B\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int mask;\n     descriptor: I\n@@ -122,43 +112,43 @@\n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: bipush        16\n-         3: invokespecial #2                  // Method \"<init>\":(I)V\n+         3: invokespecial #15                 // Method \"<init>\":(I)V\n          6: return\n       LineNumberTable:\n         line 481: 0\n         line 482: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       7     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n \n   private org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(int);\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #3                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #22                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: iload_1\n          7: ishl\n          8: newarray       byte\n-        10: putfield      #4                  // Field memory:[B\n+        10: putfield      #24                 // Field memory:[B\n         13: aload_0\n         14: aload_0\n-        15: getfield      #4                  // Field memory:[B\n+        15: getfield      #24                 // Field memory:[B\n         18: arraylength\n         19: iconst_1\n         20: isub\n-        21: putfield      #5                  // Field mask:I\n+        21: putfield      #26                 // Field mask:I\n         24: return\n       LineNumberTable:\n         line 484: 0\n         line 485: 4\n         line 486: 13\n         line 487: 24\n       LocalVariableTable:\n@@ -168,25 +158,25 @@\n \n   byte add(byte);\n     descriptor: (B)B\n     flags: (0x0000)\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #4                  // Field memory:[B\n+         1: getfield      #24                 // Field memory:[B\n          4: aload_0\n-         5: getfield      #6                  // Field wHead:I\n+         5: getfield      #31                 // Field wHead:I\n          8: iload_1\n          9: bastore\n         10: aload_0\n         11: aload_0\n         12: aload_0\n-        13: getfield      #6                  // Field wHead:I\n-        16: invokespecial #7                  // Method incCounter:(I)I\n-        19: putfield      #6                  // Field wHead:I\n+        13: getfield      #31                 // Field wHead:I\n+        16: invokespecial #33                 // Method incCounter:(I)I\n+        19: putfield      #31                 // Field wHead:I\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 490: 0\n         line 491: 10\n         line 492: 22\n       LocalVariableTable:\n@@ -197,158 +187,166 @@\n   void add(byte[], int, int);\n     descriptor: ([BII)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=5, args_size=4\n          0: iload_2\n          1: istore        4\n-         3: iload         4\n-         5: iload_2\n-         6: iload_3\n-         7: iadd\n-         8: if_icmpge     26\n-        11: aload_0\n-        12: aload_1\n-        13: iload         4\n-        15: baload\n-        16: invokevirtual #8                  // Method add:(B)B\n-        19: pop\n-        20: iinc          4, 1\n-        23: goto          3\n+         3: goto          18\n+         6: aload_0\n+         7: aload_1\n+         8: iload         4\n+        10: baload\n+        11: invokevirtual #40                 // Method add:(B)B\n+        14: pop\n+        15: iinc          4, 1\n+        18: iload         4\n+        20: iload_2\n+        21: iload_3\n+        22: iadd\n+        23: if_icmplt     6\n         26: return\n       LineNumberTable:\n         line 496: 0\n-        line 497: 11\n-        line 496: 20\n+        line 497: 6\n+        line 496: 15\n         line 499: 26\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            3      23     4     i   I\n             0      27     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n             0      27     1     b   [B\n             0      27     2   off   I\n             0      27     3   len   I\n+            3      23     4     i   I\n       StackMapTable: number_of_entries = 2\n         frame_type = 252 /* append */\n-          offset_delta = 3\n+          offset_delta = 6\n           locals = [ int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 22\n+        frame_type = 11 /* same */\n \n   void recordToBuffer(int, int, byte[]);\n     descriptor: (II[B)V\n     flags: (0x0000)\n     Code:\n       stack=5, locals=7, args_size=4\n          0: iload_1\n          1: aload_0\n-         2: getfield      #4                  // Field memory:[B\n+         2: getfield      #24                 // Field memory:[B\n          5: arraylength\n-         6: if_icmple     23\n-         9: new           #9                  // class java/lang/IllegalStateException\n+         6: if_icmple     33\n+         9: new           #48                 // class java/lang/IllegalStateException\n         12: dup\n-        13: iload_1\n-        14: invokedynamic #10,  0             // InvokeDynamic #0:makeConcatWithConstants:(I)Ljava/lang/String;\n-        19: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        22: athrow\n-        23: aload_0\n-        24: getfield      #6                  // Field wHead:I\n-        27: iload_1\n-        28: isub\n-        29: aload_0\n-        30: getfield      #5                  // Field mask:I\n-        33: iand\n-        34: istore        4\n-        36: aload_0\n-        37: getfield      #12                 // Field wrappedAround:Z\n-        40: ifne          66\n-        43: iload         4\n-        45: aload_0\n-        46: getfield      #6                  // Field wHead:I\n-        49: if_icmplt     66\n-        52: new           #9                  // class java/lang/IllegalStateException\n-        55: dup\n-        56: iload_1\n-        57: invokedynamic #13,  0             // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;\n-        62: invokespecial #11                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-        65: athrow\n-        66: iconst_0\n-        67: istore        5\n-        69: iload         4\n-        71: istore        6\n-        73: iload         5\n-        75: iload_2\n-        76: if_icmpge     108\n-        79: aload_3\n-        80: iload         5\n-        82: aload_0\n-        83: aload_0\n-        84: getfield      #4                  // Field memory:[B\n-        87: iload         6\n-        89: baload\n-        90: invokevirtual #8                  // Method add:(B)B\n-        93: bastore\n-        94: iinc          5, 1\n-        97: aload_0\n-        98: iload         6\n-       100: invokespecial #7                  // Method incCounter:(I)I\n-       103: istore        6\n-       105: goto          73\n-       108: return\n+        13: new           #50                 // class java/lang/StringBuilder\n+        16: dup\n+        17: ldc           #52                 // String Illegal distance parameter:\n+        19: invokespecial #54                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        22: iload_1\n+        23: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        26: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        29: invokespecial #65                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        32: athrow\n+        33: aload_0\n+        34: getfield      #31                 // Field wHead:I\n+        37: iload_1\n+        38: isub\n+        39: aload_0\n+        40: getfield      #26                 // Field mask:I\n+        43: iand\n+        44: istore        4\n+        46: aload_0\n+        47: getfield      #66                 // Field wrappedAround:Z\n+        50: ifne          86\n+        53: iload         4\n+        55: aload_0\n+        56: getfield      #31                 // Field wHead:I\n+        59: if_icmplt     86\n+        62: new           #48                 // class java/lang/IllegalStateException\n+        65: dup\n+        66: new           #50                 // class java/lang/StringBuilder\n+        69: dup\n+        70: ldc           #68                 // String Attempt to read beyond memory: dist=\n+        72: invokespecial #54                 // Method java/lang/StringBuilder.\"<init>\":(Ljava/lang/String;)V\n+        75: iload_1\n+        76: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        79: invokevirtual #61                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        82: invokespecial #65                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        85: athrow\n+        86: iconst_0\n+        87: istore        5\n+        89: iload         4\n+        91: istore        6\n+        93: goto          122\n+        96: aload_3\n+        97: iload         5\n+        99: aload_0\n+       100: aload_0\n+       101: getfield      #24                 // Field memory:[B\n+       104: iload         6\n+       106: baload\n+       107: invokevirtual #40                 // Method add:(B)B\n+       110: bastore\n+       111: iinc          5, 1\n+       114: aload_0\n+       115: iload         6\n+       117: invokespecial #33                 // Method incCounter:(I)I\n+       120: istore        6\n+       122: iload         5\n+       124: iload_2\n+       125: if_icmplt     96\n+       128: return\n       LineNumberTable:\n         line 502: 0\n         line 503: 9\n-        line 505: 23\n-        line 506: 36\n-        line 507: 52\n-        line 509: 66\n-        line 510: 79\n-        line 509: 94\n-        line 512: 108\n+        line 505: 33\n+        line 506: 46\n+        line 507: 62\n+        line 509: 86\n+        line 510: 96\n+        line 509: 111\n+        line 512: 128\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           69      39     5     i   I\n-           73      35     6   pos   I\n-            0     109     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-            0     109     1 distance   I\n-            0     109     2 length   I\n-            0     109     3  buff   [B\n-           36      73     4 start   I\n+            0     129     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n+            0     129     1 distance   I\n+            0     129     2 length   I\n+            0     129     3  buff   [B\n+           46      83     4 start   I\n+           89      39     5     i   I\n+           93      35     6   pos   I\n       StackMapTable: number_of_entries = 4\n-        frame_type = 23 /* same */\n+        frame_type = 33 /* same */\n         frame_type = 252 /* append */\n-          offset_delta = 42\n+          offset_delta = 52\n           locals = [ int ]\n         frame_type = 253 /* append */\n-          offset_delta = 6\n+          offset_delta = 9\n           locals = [ int, int ]\n-        frame_type = 249 /* chop */\n-          offset_delta = 34\n+        frame_type = 25 /* same */\n \n   private int incCounter(int);\n     descriptor: (I)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=3, args_size=2\n          0: iload_1\n          1: iconst_1\n          2: iadd\n          3: aload_0\n-         4: getfield      #5                  // Field mask:I\n+         4: getfield      #26                 // Field mask:I\n          7: iand\n          8: istore_2\n          9: aload_0\n-        10: getfield      #12                 // Field wrappedAround:Z\n+        10: getfield      #66                 // Field wrappedAround:Z\n         13: ifne          26\n         16: iload_2\n         17: iload_1\n         18: if_icmpge     26\n         21: aload_0\n         22: iconst_1\n-        23: putfield      #12                 // Field wrappedAround:Z\n+        23: putfield      #66                 // Field wrappedAround:Z\n         26: iload_2\n         27: ireturn\n       LineNumberTable:\n         line 515: 0\n         line 516: 9\n         line 517: 21\n         line 519: 26\n@@ -358,34 +356,23 @@\n             0      28     1 counter   I\n             9      19     2 newCounter   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 26\n           locals = [ int ]\n \n-  org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$1);\n-    descriptor: (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;)V\n+  org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory(org.apache.commons.compress.compressors.deflate64.HuffmanDecoder$DecodingMemory);\n+    descriptor: (Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;)V\n     flags: (0x1000) ACC_SYNTHETIC\n     Code:\n       stack=1, locals=2, args_size=2\n          0: aload_0\n-         1: invokespecial #1                  // Method \"<init>\":()V\n+         1: invokespecial #78                 // Method \"<init>\":()V\n          4: return\n       LineNumberTable:\n-        line 474: 0\n+        line 480: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0       5     0  this   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory;\n-            0       5     1    x0   Lorg/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1;\n }\n SourceFile: \"HuffmanDecoder.java\"\n InnerClasses:\n-  private static #29= #14 of #75;         // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n-  static #54;                             // class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$1\n-  public static final #90= #89 of #92;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n-BootstrapMethods:\n-  0: #69 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #70 Illegal distance parameter: \\u0001\n-  1: #69 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;\n-    Method arguments:\n-      #74 Attempt to read beyond memory: dist=\\u0001\n+  private static #84= #1 of #82;          // DecodingMemory=class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder$DecodingMemory of class org/apache/commons/compress/compressors/deflate64/HuffmanDecoder\n"}]}
