{"diffoscope-json-version": 1, "source1": "first/SSLContextUtils.class", "source2": "second/SSLContextUtils.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,25 +9,25 @@\n import javax.net.ssl.KeyManager;\n \n public class SSLContextUtils\n {\n     private SSLContextUtils() {\n     }\n     \n-    public static SSLContext createSSLContext(final String protocol, final KeyManager keyManager, final TrustManager trustManager) throws IOException {\n-        return createSSLContext(protocol, (KeyManager[])((keyManager == null) ? null : new KeyManager[] { keyManager }), (TrustManager[])((trustManager == null) ? null : new TrustManager[] { trustManager }));\n+    public static SSLContext createSSLContext(final String s, final KeyManager keyManager, final TrustManager trustManager) throws IOException {\n+        return createSSLContext(s, (KeyManager[])((keyManager == null) ? null : new KeyManager[] { keyManager }), (TrustManager[])((trustManager == null) ? null : new TrustManager[] { trustManager }));\n     }\n     \n-    public static SSLContext createSSLContext(final String protocol, final KeyManager[] keyManagers, final TrustManager[] trustManagers) throws IOException {\n-        SSLContext ctx;\n+    public static SSLContext createSSLContext(final String protocol, final KeyManager[] km, final TrustManager[] tm) throws IOException {\n+        SSLContext instance;\n         try {\n-            ctx = SSLContext.getInstance(protocol);\n-            ctx.init(keyManagers, trustManagers, null);\n+            instance = SSLContext.getInstance(protocol);\n+            instance.init(km, tm, null);\n         }\n-        catch (final GeneralSecurityException e) {\n-            final IOException ioe = new IOException(\"Could not initialize SSL context\");\n-            ioe.initCause(e);\n-            throw ioe;\n+        catch (final GeneralSecurityException cause) {\n+            final IOException ex = new IOException(\"Could not initialize SSL context\");\n+            ex.initCause(cause);\n+            throw ex;\n         }\n-        return ctx;\n+        return instance;\n     }\n }\n"}]}
