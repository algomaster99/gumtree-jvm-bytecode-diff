{"diffoscope-json-version": 1, "source1": "first/ClassPath$Dir.class", "source2": "second/ClassPath$Dir.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -9,23 +9,23 @@\n import java.io.IOException;\n \n private static class Dir extends ClassPath.AbstractPathEntry\n {\n     private final String dir;\n     \n     Dir(final String d) {\n-        super((ClassPath.ClassPath$1)null);\n+        super((ClassPath.AbstractPathEntry)null);\n         this.dir = d;\n     }\n     \n     public void close() throws IOException {\n     }\n     \n     ClassPath.ClassFile getClassFile(final String name, final String suffix) throws IOException {\n-        final File file = new File(this.dir + File.separatorChar + name.replace('.', File.separatorChar) + suffix);\n+        final File file = new File(String.valueOf(this.dir) + File.separatorChar + name.replace('.', File.separatorChar) + suffix);\n         return (ClassPath.ClassFile)(file.exists() ? new Dir.ClassPath$Dir$1(this, file) : null);\n     }\n     \n     URL getResource(final String name) {\n         final File file = this.toFile(name);\n         try {\n             return file.exists() ? file.toURI().toURL() : null;\n@@ -42,14 +42,14 @@\n         }\n         catch (final IOException e) {\n             return null;\n         }\n     }\n     \n     private File toFile(final String name) {\n-        return new File(this.dir + File.separatorChar + name.replace('/', File.separatorChar));\n+        return new File(String.valueOf(this.dir) + File.separatorChar + name.replace('/', File.separatorChar));\n     }\n     \n     public String toString() {\n         return this.dir;\n     }\n }\n"}]}
