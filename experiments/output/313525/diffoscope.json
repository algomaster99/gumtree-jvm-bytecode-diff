{"diffoscope-json-version": 1, "source1": "first/JiraCsv213Test.class", "source2": "second/JiraCsv213Test.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,146 +1,146 @@\n-  SHA-256 checksum 58c3c3ee5f8b751c7c9afecb0b5d610950332da7fae23744410fd348b2c75666\n+  SHA-256 checksum 63a86c4dd81895cc606b8e37e831693d7e0a4c217595dde072b0de7ac16ac169\n   Compiled from \"JiraCsv213Test.java\"\n public class org.apache.commons.csv.issues.JiraCsv213Test\n   minor version: 0\n   major version: 51\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #33                         // org/apache/commons/csv/issues/JiraCsv213Test\n-  super_class: #34                        // java/lang/Object\n+  this_class: #117                        // org/apache/commons/csv/issues/JiraCsv213Test\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 0, methods: 3, attributes: 2\n Constant pool:\n-    #1 = Methodref          #34.#50       // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #42.#51       // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-    #3 = Methodref          #42.#52       // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-    #4 = Methodref          #42.#53       // org/apache/commons/csv/CSVFormat.withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n-    #5 = Methodref          #42.#54       // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-    #6 = Fieldref           #55.#56       // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-    #7 = Methodref          #42.#57       // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-    #8 = Class              #58           // java/io/InputStreamReader\n-    #9 = Class              #59           // java/io/FileInputStream\n-   #10 = Methodref          #9.#60        // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-   #11 = Fieldref           #61.#62       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-   #12 = Methodref          #8.#63        // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #13 = Methodref          #42.#64       // org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-   #14 = Methodref          #43.#65       // org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n-   #15 = InterfaceMethodref #66.#67       // java/util/Iterator.hasNext:()Z\n-   #16 = Fieldref           #68.#69       // java/lang/System.out:Ljava/io/PrintStream;\n-   #17 = Methodref          #43.#70       // org/apache/commons/csv/CSVParser.getCurrentLineNumber:()J\n-   #18 = Methodref          #71.#72       // java/io/PrintStream.println:(J)V\n-   #19 = Methodref          #43.#73       // org/apache/commons/csv/CSVParser.getRecordNumber:()J\n-   #20 = InterfaceMethodref #66.#74       // java/util/Iterator.next:()Ljava/lang/Object;\n-   #21 = Class              #75           // org/apache/commons/csv/CSVRecord\n-   #22 = Methodref          #43.#76       // org/apache/commons/csv/CSVParser.close:()V\n-   #23 = Class              #77           // java/lang/Throwable\n-   #24 = Methodref          #23.#78       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n-   #25 = Class              #79           // java/io/IOException\n-   #26 = Class              #80           // java/lang/RuntimeException\n-   #27 = String             #81           // Error while adding end channel to csv\n-   #28 = Methodref          #26.#82       // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #29 = Class              #83           // java/io/File\n-   #30 = String             #84           // src/test/resources/CSV-213/999751170.patch.csv\n-   #31 = Methodref          #29.#85       // java/io/File.\"<init>\":(Ljava/lang/String;)V\n-   #32 = Methodref          #33.#86       // org/apache/commons/csv/issues/JiraCsv213Test.createEndChannel:(Ljava/io/File;)V\n-   #33 = Class              #87           // org/apache/commons/csv/issues/JiraCsv213Test\n-   #34 = Class              #88           // java/lang/Object\n-   #35 = Utf8               <init>\n-   #36 = Utf8               ()V\n-   #37 = Utf8               Code\n-   #38 = Utf8               LineNumberTable\n-   #39 = Utf8               createEndChannel\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+    #8 = Class              #10           // org/apache/commons/csv/CSVFormat\n+    #9 = NameAndType        #11:#12       // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+   #10 = Utf8               org/apache/commons/csv/CSVFormat\n+   #11 = Utf8               DEFAULT\n+   #12 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n+   #13 = Methodref          #8.#14        // org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+   #14 = NameAndType        #15:#16       // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+   #15 = Utf8               withDelimiter\n+   #16 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n+   #17 = Methodref          #8.#18        // org/apache/commons/csv/CSVFormat.withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n+   #18 = NameAndType        #19:#20       // withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n+   #19 = Utf8               withFirstRecordAsHeader\n+   #20 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n+   #21 = Methodref          #8.#22        // org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+   #22 = NameAndType        #23:#16       // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+   #23 = Utf8               withRecordSeparator\n+   #24 = Fieldref           #25.#26       // org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+   #25 = Class              #27           // org/apache/commons/csv/QuoteMode\n+   #26 = NameAndType        #28:#29       // ALL:Lorg/apache/commons/csv/QuoteMode;\n+   #27 = Utf8               org/apache/commons/csv/QuoteMode\n+   #28 = Utf8               ALL\n+   #29 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n+   #30 = Methodref          #8.#31        // org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+   #31 = NameAndType        #32:#33       // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+   #32 = Utf8               withQuoteMode\n+   #33 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+   #34 = Class              #35           // java/io/InputStreamReader\n+   #35 = Utf8               java/io/InputStreamReader\n+   #36 = Class              #37           // java/io/FileInputStream\n+   #37 = Utf8               java/io/FileInputStream\n+   #38 = Methodref          #36.#39       // java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+   #39 = NameAndType        #5:#40        // \"<init>\":(Ljava/io/File;)V\n    #40 = Utf8               (Ljava/io/File;)V\n-   #41 = Utf8               StackMapTable\n-   #42 = Class              #89           // org/apache/commons/csv/CSVFormat\n-   #43 = Class              #90           // org/apache/commons/csv/CSVParser\n-   #44 = Utf8               test\n-   #45 = Utf8               RuntimeVisibleAnnotations\n-   #46 = Utf8               Lorg/junit/Test;\n-   #47 = Utf8               SourceFile\n-   #48 = Utf8               JiraCsv213Test.java\n-   #49 = Utf8               Lorg/junit/Ignore;\n-   #50 = NameAndType        #35:#36       // \"<init>\":()V\n-   #51 = NameAndType        #91:#92       // DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n-   #52 = NameAndType        #93:#94       // withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-   #53 = NameAndType        #95:#96       // withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n-   #54 = NameAndType        #97:#94       // withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-   #55 = Class              #98           // org/apache/commons/csv/QuoteMode\n-   #56 = NameAndType        #99:#100      // ALL:Lorg/apache/commons/csv/QuoteMode;\n-   #57 = NameAndType        #101:#102     // withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-   #58 = Utf8               java/io/InputStreamReader\n-   #59 = Utf8               java/io/FileInputStream\n-   #60 = NameAndType        #35:#40       // \"<init>\":(Ljava/io/File;)V\n-   #61 = Class              #103          // java/nio/charset/StandardCharsets\n-   #62 = NameAndType        #104:#105     // UTF_8:Ljava/nio/charset/Charset;\n-   #63 = NameAndType        #35:#106      // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-   #64 = NameAndType        #107:#108     // parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-   #65 = NameAndType        #109:#110     // iterator:()Ljava/util/Iterator;\n-   #66 = Class              #111          // java/util/Iterator\n-   #67 = NameAndType        #112:#113     // hasNext:()Z\n-   #68 = Class              #114          // java/lang/System\n-   #69 = NameAndType        #115:#116     // out:Ljava/io/PrintStream;\n-   #70 = NameAndType        #117:#118     // getCurrentLineNumber:()J\n-   #71 = Class              #119          // java/io/PrintStream\n-   #72 = NameAndType        #120:#121     // println:(J)V\n-   #73 = NameAndType        #122:#118     // getRecordNumber:()J\n-   #74 = NameAndType        #123:#124     // next:()Ljava/lang/Object;\n-   #75 = Utf8               org/apache/commons/csv/CSVRecord\n-   #76 = NameAndType        #125:#36      // close:()V\n-   #77 = Utf8               java/lang/Throwable\n-   #78 = NameAndType        #126:#127     // addSuppressed:(Ljava/lang/Throwable;)V\n-   #79 = Utf8               java/io/IOException\n-   #80 = Utf8               java/lang/RuntimeException\n-   #81 = Utf8               Error while adding end channel to csv\n-   #82 = NameAndType        #35:#128      // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n-   #83 = Utf8               java/io/File\n-   #84 = Utf8               src/test/resources/CSV-213/999751170.patch.csv\n-   #85 = NameAndType        #35:#129      // \"<init>\":(Ljava/lang/String;)V\n-   #86 = NameAndType        #39:#40       // createEndChannel:(Ljava/io/File;)V\n-   #87 = Utf8               org/apache/commons/csv/issues/JiraCsv213Test\n-   #88 = Utf8               java/lang/Object\n-   #89 = Utf8               org/apache/commons/csv/CSVFormat\n-   #90 = Utf8               org/apache/commons/csv/CSVParser\n-   #91 = Utf8               DEFAULT\n-   #92 = Utf8               Lorg/apache/commons/csv/CSVFormat;\n-   #93 = Utf8               withDelimiter\n-   #94 = Utf8               (C)Lorg/apache/commons/csv/CSVFormat;\n-   #95 = Utf8               withFirstRecordAsHeader\n-   #96 = Utf8               ()Lorg/apache/commons/csv/CSVFormat;\n-   #97 = Utf8               withRecordSeparator\n-   #98 = Utf8               org/apache/commons/csv/QuoteMode\n-   #99 = Utf8               ALL\n-  #100 = Utf8               Lorg/apache/commons/csv/QuoteMode;\n-  #101 = Utf8               withQuoteMode\n-  #102 = Utf8               (Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n-  #103 = Utf8               java/nio/charset/StandardCharsets\n-  #104 = Utf8               UTF_8\n-  #105 = Utf8               Ljava/nio/charset/Charset;\n-  #106 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-  #107 = Utf8               parse\n-  #108 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n-  #109 = Utf8               iterator\n-  #110 = Utf8               ()Ljava/util/Iterator;\n-  #111 = Utf8               java/util/Iterator\n-  #112 = Utf8               hasNext\n-  #113 = Utf8               ()Z\n-  #114 = Utf8               java/lang/System\n-  #115 = Utf8               out\n-  #116 = Utf8               Ljava/io/PrintStream;\n-  #117 = Utf8               getCurrentLineNumber\n-  #118 = Utf8               ()J\n-  #119 = Utf8               java/io/PrintStream\n-  #120 = Utf8               println\n-  #121 = Utf8               (J)V\n-  #122 = Utf8               getRecordNumber\n-  #123 = Utf8               next\n-  #124 = Utf8               ()Ljava/lang/Object;\n-  #125 = Utf8               close\n-  #126 = Utf8               addSuppressed\n-  #127 = Utf8               (Ljava/lang/Throwable;)V\n-  #128 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n-  #129 = Utf8               (Ljava/lang/String;)V\n+   #41 = Fieldref           #42.#43       // java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+   #42 = Class              #44           // java/nio/charset/StandardCharsets\n+   #43 = NameAndType        #45:#46       // UTF_8:Ljava/nio/charset/Charset;\n+   #44 = Utf8               java/nio/charset/StandardCharsets\n+   #45 = Utf8               UTF_8\n+   #46 = Utf8               Ljava/nio/charset/Charset;\n+   #47 = Methodref          #34.#48       // java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #48 = NameAndType        #5:#49        // \"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #49 = Utf8               (Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+   #50 = Methodref          #8.#51        // org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+   #51 = NameAndType        #52:#53       // parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+   #52 = Utf8               parse\n+   #53 = Utf8               (Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+   #54 = Methodref          #55.#56       // org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n+   #55 = Class              #57           // org/apache/commons/csv/CSVParser\n+   #56 = NameAndType        #58:#59       // iterator:()Ljava/util/Iterator;\n+   #57 = Utf8               org/apache/commons/csv/CSVParser\n+   #58 = Utf8               iterator\n+   #59 = Utf8               ()Ljava/util/Iterator;\n+   #60 = InterfaceMethodref #61.#62       // java/util/Iterator.hasNext:()Z\n+   #61 = Class              #63           // java/util/Iterator\n+   #62 = NameAndType        #64:#65       // hasNext:()Z\n+   #63 = Utf8               java/util/Iterator\n+   #64 = Utf8               hasNext\n+   #65 = Utf8               ()Z\n+   #66 = Fieldref           #67.#68       // java/lang/System.out:Ljava/io/PrintStream;\n+   #67 = Class              #69           // java/lang/System\n+   #68 = NameAndType        #70:#71       // out:Ljava/io/PrintStream;\n+   #69 = Utf8               java/lang/System\n+   #70 = Utf8               out\n+   #71 = Utf8               Ljava/io/PrintStream;\n+   #72 = Methodref          #55.#73       // org/apache/commons/csv/CSVParser.getCurrentLineNumber:()J\n+   #73 = NameAndType        #74:#75       // getCurrentLineNumber:()J\n+   #74 = Utf8               getCurrentLineNumber\n+   #75 = Utf8               ()J\n+   #76 = Methodref          #77.#78       // java/io/PrintStream.println:(J)V\n+   #77 = Class              #79           // java/io/PrintStream\n+   #78 = NameAndType        #80:#81       // println:(J)V\n+   #79 = Utf8               java/io/PrintStream\n+   #80 = Utf8               println\n+   #81 = Utf8               (J)V\n+   #82 = Methodref          #55.#83       // org/apache/commons/csv/CSVParser.getRecordNumber:()J\n+   #83 = NameAndType        #84:#75       // getRecordNumber:()J\n+   #84 = Utf8               getRecordNumber\n+   #85 = InterfaceMethodref #61.#86       // java/util/Iterator.next:()Ljava/lang/Object;\n+   #86 = NameAndType        #87:#88       // next:()Ljava/lang/Object;\n+   #87 = Utf8               next\n+   #88 = Utf8               ()Ljava/lang/Object;\n+   #89 = Class              #90           // org/apache/commons/csv/CSVRecord\n+   #90 = Utf8               org/apache/commons/csv/CSVRecord\n+   #91 = Methodref          #55.#92       // org/apache/commons/csv/CSVParser.close:()V\n+   #92 = NameAndType        #93:#6        // close:()V\n+   #93 = Utf8               close\n+   #94 = Class              #95           // java/lang/Throwable\n+   #95 = Utf8               java/lang/Throwable\n+   #96 = Methodref          #94.#97       // java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+   #97 = NameAndType        #98:#99       // addSuppressed:(Ljava/lang/Throwable;)V\n+   #98 = Utf8               addSuppressed\n+   #99 = Utf8               (Ljava/lang/Throwable;)V\n+  #100 = Class              #101          // java/io/IOException\n+  #101 = Utf8               java/io/IOException\n+  #102 = Class              #103          // java/lang/RuntimeException\n+  #103 = Utf8               java/lang/RuntimeException\n+  #104 = String             #105          // Error while adding end channel to csv\n+  #105 = Utf8               Error while adding end channel to csv\n+  #106 = Methodref          #102.#107     // java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #107 = NameAndType        #5:#108       // \"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #108 = Utf8               (Ljava/lang/String;Ljava/lang/Throwable;)V\n+  #109 = Class              #110          // java/io/File\n+  #110 = Utf8               java/io/File\n+  #111 = String             #112          // src/test/resources/CSV-213/999751170.patch.csv\n+  #112 = Utf8               src/test/resources/CSV-213/999751170.patch.csv\n+  #113 = Methodref          #109.#114     // java/io/File.\"<init>\":(Ljava/lang/String;)V\n+  #114 = NameAndType        #5:#115       // \"<init>\":(Ljava/lang/String;)V\n+  #115 = Utf8               (Ljava/lang/String;)V\n+  #116 = Methodref          #117.#118     // org/apache/commons/csv/issues/JiraCsv213Test.createEndChannel:(Ljava/io/File;)V\n+  #117 = Class              #119          // org/apache/commons/csv/issues/JiraCsv213Test\n+  #118 = NameAndType        #120:#40      // createEndChannel:(Ljava/io/File;)V\n+  #119 = Utf8               org/apache/commons/csv/issues/JiraCsv213Test\n+  #120 = Utf8               createEndChannel\n+  #121 = Utf8               Code\n+  #122 = Utf8               LineNumberTable\n+  #123 = Utf8               StackMapTable\n+  #124 = Utf8               test\n+  #125 = Utf8               RuntimeVisibleAnnotations\n+  #126 = Utf8               Lorg/junit/Test;\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               JiraCsv213Test.java\n+  #129 = Utf8               Lorg/junit/Ignore;\n {\n   public org.apache.commons.csv.issues.JiraCsv213Test();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -150,80 +150,80 @@\n         line 42: 0\n \n   private void createEndChannel(java.io.File);\n     descriptor: (Ljava/io/File;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=6, args_size=2\n-         0: getstatic     #2                  // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n+         0: getstatic     #7                  // Field org/apache/commons/csv/CSVFormat.DEFAULT:Lorg/apache/commons/csv/CSVFormat;\n          3: bipush        59\n-         5: invokevirtual #3                  // Method org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n-         8: invokevirtual #4                  // Method org/apache/commons/csv/CSVFormat.withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n+         5: invokevirtual #13                 // Method org/apache/commons/csv/CSVFormat.withDelimiter:(C)Lorg/apache/commons/csv/CSVFormat;\n+         8: invokevirtual #17                 // Method org/apache/commons/csv/CSVFormat.withFirstRecordAsHeader:()Lorg/apache/commons/csv/CSVFormat;\n         11: bipush        10\n-        13: invokevirtual #5                  // Method org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n-        16: getstatic     #6                  // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n-        19: invokevirtual #7                  // Method org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n+        13: invokevirtual #21                 // Method org/apache/commons/csv/CSVFormat.withRecordSeparator:(C)Lorg/apache/commons/csv/CSVFormat;\n+        16: getstatic     #24                 // Field org/apache/commons/csv/QuoteMode.ALL:Lorg/apache/commons/csv/QuoteMode;\n+        19: invokevirtual #30                 // Method org/apache/commons/csv/CSVFormat.withQuoteMode:(Lorg/apache/commons/csv/QuoteMode;)Lorg/apache/commons/csv/CSVFormat;\n         22: astore_2\n         23: aload_2\n-        24: new           #8                  // class java/io/InputStreamReader\n+        24: new           #34                 // class java/io/InputStreamReader\n         27: dup\n-        28: new           #9                  // class java/io/FileInputStream\n+        28: new           #36                 // class java/io/FileInputStream\n         31: dup\n         32: aload_1\n-        33: invokespecial #10                 // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n-        36: getstatic     #11                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n-        39: invokespecial #12                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n-        42: invokevirtual #13                 // Method org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n+        33: invokespecial #38                 // Method java/io/FileInputStream.\"<init>\":(Ljava/io/File;)V\n+        36: getstatic     #41                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;\n+        39: invokespecial #47                 // Method java/io/InputStreamReader.\"<init>\":(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V\n+        42: invokevirtual #50                 // Method org/apache/commons/csv/CSVFormat.parse:(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;\n         45: astore_3\n         46: aload_3\n-        47: invokevirtual #14                 // Method org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n-        50: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        47: invokevirtual #54                 // Method org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n+        50: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n         55: ifeq          101\n-        58: getstatic     #16                 // Field java/lang/System.out:Ljava/io/PrintStream;\n+        58: getstatic     #66                 // Field java/lang/System.out:Ljava/io/PrintStream;\n         61: aload_3\n-        62: invokevirtual #17                 // Method org/apache/commons/csv/CSVParser.getCurrentLineNumber:()J\n-        65: invokevirtual #18                 // Method java/io/PrintStream.println:(J)V\n-        68: getstatic     #16                 // Field java/lang/System.out:Ljava/io/PrintStream;\n+        62: invokevirtual #72                 // Method org/apache/commons/csv/CSVParser.getCurrentLineNumber:()J\n+        65: invokevirtual #76                 // Method java/io/PrintStream.println:(J)V\n+        68: getstatic     #66                 // Field java/lang/System.out:Ljava/io/PrintStream;\n         71: aload_3\n-        72: invokevirtual #19                 // Method org/apache/commons/csv/CSVParser.getRecordNumber:()J\n-        75: invokevirtual #18                 // Method java/io/PrintStream.println:(J)V\n+        72: invokevirtual #82                 // Method org/apache/commons/csv/CSVParser.getRecordNumber:()J\n+        75: invokevirtual #76                 // Method java/io/PrintStream.println:(J)V\n         78: aload_3\n-        79: invokevirtual #14                 // Method org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n-        82: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        87: checkcast     #21                 // class org/apache/commons/csv/CSVRecord\n+        79: invokevirtual #54                 // Method org/apache/commons/csv/CSVParser.iterator:()Ljava/util/Iterator;\n+        82: invokeinterface #85,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        87: checkcast     #89                 // class org/apache/commons/csv/CSVRecord\n         90: astore        4\n         92: aload_3\n         93: ifnull        100\n         96: aload_3\n-        97: invokevirtual #22                 // Method org/apache/commons/csv/CSVParser.close:()V\n+        97: invokevirtual #91                 // Method org/apache/commons/csv/CSVParser.close:()V\n        100: return\n        101: aload_3\n        102: ifnull        137\n        105: aload_3\n-       106: invokevirtual #22                 // Method org/apache/commons/csv/CSVParser.close:()V\n+       106: invokevirtual #91                 // Method org/apache/commons/csv/CSVParser.close:()V\n        109: goto          137\n        112: astore        4\n        114: aload_3\n        115: ifnull        134\n        118: aload_3\n-       119: invokevirtual #22                 // Method org/apache/commons/csv/CSVParser.close:()V\n+       119: invokevirtual #91                 // Method org/apache/commons/csv/CSVParser.close:()V\n        122: goto          134\n        125: astore        5\n        127: aload         4\n        129: aload         5\n-       131: invokevirtual #24                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n+       131: invokevirtual #96                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V\n        134: aload         4\n        136: athrow\n        137: goto          152\n        140: astore_3\n-       141: new           #26                 // class java/lang/RuntimeException\n+       141: new           #102                // class java/lang/RuntimeException\n        144: dup\n-       145: ldc           #27                 // String Error while adding end channel to csv\n+       145: ldc           #104                // String Error while adding end channel to csv\n        147: aload_3\n-       148: invokespecial #28                 // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n+       148: invokespecial #106                // Method java/lang/RuntimeException.\"<init>\":(Ljava/lang/String;Ljava/lang/Throwable;)V\n        151: athrow\n        152: return\n       Exception table:\n          from    to  target type\n             46    92   112   Class java/lang/Throwable\n            118   122   125   Class java/lang/Throwable\n             23   100   140   Class java/io/IOException\n@@ -269,24 +269,24 @@\n \n   public void test();\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: new           #29                 // class java/io/File\n+         1: new           #109                // class java/io/File\n          4: dup\n-         5: ldc           #30                 // String src/test/resources/CSV-213/999751170.patch.csv\n-         7: invokespecial #31                 // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n-        10: invokespecial #32                 // Method createEndChannel:(Ljava/io/File;)V\n+         5: ldc           #111                // String src/test/resources/CSV-213/999751170.patch.csv\n+         7: invokespecial #113                // Method java/io/File.\"<init>\":(Ljava/lang/String;)V\n+        10: invokespecial #116                // Method createEndChannel:(Ljava/io/File;)V\n         13: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 13\n     RuntimeVisibleAnnotations:\n-      0: #46()\n+      0: #126()\n         org.junit.Test\n }\n SourceFile: \"JiraCsv213Test.java\"\n RuntimeVisibleAnnotations:\n-  0: #49()\n+  0: #129()\n     org.junit.Ignore\n"}]}
