{"diffoscope-json-version": 1, "source1": "first/FileSystem.class", "source2": "second/FileSystem.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,114 +1,114 @@\n-  SHA-256 checksum 09cc9307e6df874a65a3f9bc65ad6c337867c0d3b716db5d4a59bc4e5418b435\n+  SHA-256 checksum 64b7c28036125fabdaa61651427c8e46e016d4f7bd91e089fe8ec54e78541228\n   Compiled from \"FileSystem.java\"\n public final class org.apache.commons.io.FileSystem extends java.lang.Enum<org.apache.commons.io.FileSystem>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n   this_class: #4                          // org/apache/commons/io/FileSystem\n   super_class: #97                        // java/lang/Enum\n   interfaces: 0, fields: 16, methods: 19, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #4.#186       // org/apache/commons/io/FileSystem.$VALUES:[Lorg/apache/commons/io/FileSystem;\n-    #2 = Methodref          #187.#188     // \"[Lorg/apache/commons/io/FileSystem;\".clone:()Ljava/lang/Object;\n+    #1 = Fieldref           #4.#182       // org/apache/commons/io/FileSystem.$VALUES:[Lorg/apache/commons/io/FileSystem;\n+    #2 = Methodref          #183.#184     // \"[Lorg/apache/commons/io/FileSystem;\".clone:()Ljava/lang/Object;\n     #3 = Class              #121          // \"[Lorg/apache/commons/io/FileSystem;\"\n-    #4 = Class              #189          // org/apache/commons/io/FileSystem\n-    #5 = Methodref          #97.#190      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Fieldref           #4.#191       // org/apache/commons/io/FileSystem.IS_OS_LINUX:Z\n-    #7 = Fieldref           #4.#192       // org/apache/commons/io/FileSystem.LINUX:Lorg/apache/commons/io/FileSystem;\n-    #8 = Fieldref           #4.#193       // org/apache/commons/io/FileSystem.IS_OS_MAC:Z\n-    #9 = Fieldref           #4.#194       // org/apache/commons/io/FileSystem.MAC_OSX:Lorg/apache/commons/io/FileSystem;\n-   #10 = Fieldref           #4.#195       // org/apache/commons/io/FileSystem.IS_OS_WINDOWS:Z\n-   #11 = Fieldref           #4.#196       // org/apache/commons/io/FileSystem.WINDOWS:Lorg/apache/commons/io/FileSystem;\n-   #12 = Fieldref           #4.#197       // org/apache/commons/io/FileSystem.GENERIC:Lorg/apache/commons/io/FileSystem;\n-   #13 = String             #198          // os.name\n-   #14 = Methodref          #4.#199       // org/apache/commons/io/FileSystem.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #15 = Methodref          #4.#200       // org/apache/commons/io/FileSystem.isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #16 = Methodref          #201.#202     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #17 = Class              #203          // java/lang/SecurityException\n-   #18 = Fieldref           #201.#204     // java/lang/System.err:Ljava/io/PrintStream;\n-   #19 = Class              #205          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#206      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #207          // Caught a SecurityException reading the system property \\'\n-   #22 = Methodref          #19.#208      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = String             #209          // \\'; the SystemUtils property value will default to null.\n-   #24 = Methodref          #19.#210      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #211.#212     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #26 = Fieldref           #213.#214     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #27 = Methodref          #66.#215      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #28 = Methodref          #66.#216      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #29 = Methodref          #97.#217      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #30 = Fieldref           #4.#218       // org/apache/commons/io/FileSystem.maxFileNameLength:I\n-   #31 = Fieldref           #4.#219       // org/apache/commons/io/FileSystem.maxPathLength:I\n+    #4 = Class              #185          // org/apache/commons/io/FileSystem\n+    #5 = Methodref          #97.#186      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+    #6 = Fieldref           #4.#187       // org/apache/commons/io/FileSystem.IS_OS_LINUX:Z\n+    #7 = Fieldref           #4.#188       // org/apache/commons/io/FileSystem.LINUX:Lorg/apache/commons/io/FileSystem;\n+    #8 = Fieldref           #4.#189       // org/apache/commons/io/FileSystem.IS_OS_MAC:Z\n+    #9 = Fieldref           #4.#190       // org/apache/commons/io/FileSystem.MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+   #10 = Fieldref           #4.#191       // org/apache/commons/io/FileSystem.IS_OS_WINDOWS:Z\n+   #11 = Fieldref           #4.#192       // org/apache/commons/io/FileSystem.WINDOWS:Lorg/apache/commons/io/FileSystem;\n+   #12 = Fieldref           #4.#193       // org/apache/commons/io/FileSystem.GENERIC:Lorg/apache/commons/io/FileSystem;\n+   #13 = String             #194          // os.name\n+   #14 = Methodref          #4.#195       // org/apache/commons/io/FileSystem.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #15 = Methodref          #4.#196       // org/apache/commons/io/FileSystem.isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #16 = Methodref          #197.#198     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #17 = Class              #199          // java/lang/SecurityException\n+   #18 = Fieldref           #197.#200     // java/lang/System.err:Ljava/io/PrintStream;\n+   #19 = Class              #201          // java/lang/StringBuilder\n+   #20 = Methodref          #19.#202      // java/lang/StringBuilder.\"<init>\":()V\n+   #21 = String             #203          // Caught a SecurityException reading the system property \\'\n+   #22 = Methodref          #19.#204      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #23 = String             #205          // \\'; the SystemUtils property value will default to null.\n+   #24 = Methodref          #19.#206      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #25 = Methodref          #207.#208     // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #26 = Fieldref           #209.#210     // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #27 = Methodref          #66.#211      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #28 = Methodref          #66.#212      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #29 = Methodref          #97.#213      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+   #30 = Fieldref           #4.#214       // org/apache/commons/io/FileSystem.maxFileNameLength:I\n+   #31 = Fieldref           #4.#215       // org/apache/commons/io/FileSystem.maxPathLength:I\n    #32 = String             #112          // illegalFileNameChars\n-   #33 = Methodref          #220.#221     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #33 = Methodref          #216.#217     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n    #34 = Class              #113          // \"[C\"\n-   #35 = Fieldref           #4.#222       // org/apache/commons/io/FileSystem.illegalFileNameChars:[C\n+   #35 = Fieldref           #4.#218       // org/apache/commons/io/FileSystem.illegalFileNameChars:[C\n    #36 = String             #117          // reservedFileNames\n    #37 = Class              #118          // \"[Ljava/lang/String;\"\n-   #38 = Fieldref           #4.#223       // org/apache/commons/io/FileSystem.reservedFileNames:[Ljava/lang/String;\n-   #39 = Fieldref           #4.#224       // org/apache/commons/io/FileSystem.caseSensitive:Z\n-   #40 = Fieldref           #4.#225       // org/apache/commons/io/FileSystem.casePreserving:Z\n-   #41 = Fieldref           #4.#226       // org/apache/commons/io/FileSystem.supportsDriveLetter:Z\n-   #42 = Methodref          #227.#188     // \"[C\".clone:()Ljava/lang/Object;\n-   #43 = Methodref          #228.#188     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #44 = Methodref          #229.#230     // java/util/Arrays.binarySearch:([CC)I\n-   #45 = InterfaceMethodref #231.#232     // java/lang/CharSequence.length:()I\n-   #46 = Methodref          #4.#233       // org/apache/commons/io/FileSystem.isReservedFileName:(Ljava/lang/CharSequence;)Z\n-   #47 = InterfaceMethodref #231.#234     // java/lang/CharSequence.charAt:(I)C\n-   #48 = Methodref          #4.#235       // org/apache/commons/io/FileSystem.isIllegalFileNameChar:(C)Z\n-   #49 = Methodref          #229.#236     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #50 = Class              #237          // java/lang/IllegalArgumentException\n-   #51 = String             #238          // The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n-   #52 = Class              #239          // java/lang/Object\n-   #53 = String             #240          // \\\\0\n-   #54 = Methodref          #241.#242     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #55 = Methodref          #4.#243       // org/apache/commons/io/FileSystem.name:()Ljava/lang/String;\n-   #56 = Methodref          #229.#244     // java/util/Arrays.toString:([C)Ljava/lang/String;\n-   #57 = Methodref          #66.#245      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #58 = Methodref          #50.#246      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #59 = Methodref          #66.#232      // java/lang/String.length:()I\n-   #60 = Methodref          #66.#247      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #61 = Methodref          #66.#248      // java/lang/String.toCharArray:()[C\n-   #62 = Methodref          #66.#249      // java/lang/String.valueOf:([C)Ljava/lang/String;\n+   #38 = Fieldref           #4.#219       // org/apache/commons/io/FileSystem.reservedFileNames:[Ljava/lang/String;\n+   #39 = Fieldref           #4.#220       // org/apache/commons/io/FileSystem.caseSensitive:Z\n+   #40 = Fieldref           #4.#221       // org/apache/commons/io/FileSystem.casePreserving:Z\n+   #41 = Fieldref           #4.#222       // org/apache/commons/io/FileSystem.supportsDriveLetter:Z\n+   #42 = Methodref          #223.#184     // \"[C\".clone:()Ljava/lang/Object;\n+   #43 = Methodref          #224.#184     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+   #44 = Methodref          #225.#226     // java/util/Arrays.binarySearch:([CC)I\n+   #45 = InterfaceMethodref #227.#228     // java/lang/CharSequence.length:()I\n+   #46 = Methodref          #4.#229       // org/apache/commons/io/FileSystem.isReservedFileName:(Ljava/lang/CharSequence;)Z\n+   #47 = InterfaceMethodref #227.#230     // java/lang/CharSequence.charAt:(I)C\n+   #48 = Methodref          #4.#231       // org/apache/commons/io/FileSystem.isIllegalFileNameChar:(C)Z\n+   #49 = Methodref          #225.#232     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+   #50 = Class              #233          // java/lang/IllegalArgumentException\n+   #51 = String             #234          // The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n+   #52 = Class              #235          // java/lang/Object\n+   #53 = String             #236          // \\\\0\n+   #54 = Methodref          #237.#238     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+   #55 = Methodref          #4.#239       // org/apache/commons/io/FileSystem.name:()Ljava/lang/String;\n+   #56 = Methodref          #225.#240     // java/util/Arrays.toString:([C)Ljava/lang/String;\n+   #57 = Methodref          #66.#241      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+   #58 = Methodref          #50.#242      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #59 = Methodref          #66.#228      // java/lang/String.length:()I\n+   #60 = Methodref          #66.#243      // java/lang/String.substring:(II)Ljava/lang/String;\n+   #61 = Methodref          #66.#244      // java/lang/String.toCharArray:()[C\n+   #62 = Methodref          #66.#245      // java/lang/String.valueOf:([C)Ljava/lang/String;\n    #63 = String             #98           // GENERIC\n-   #64 = Class              #250          // java/lang/Integer\n+   #64 = Class              #246          // java/lang/Integer\n    #65 = Integer            2147483647\n-   #66 = Class              #251          // java/lang/String\n-   #67 = Methodref          #4.#252       // org/apache/commons/io/FileSystem.\"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+   #66 = Class              #247          // java/lang/String\n+   #67 = Methodref          #4.#248       // org/apache/commons/io/FileSystem.\"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n    #68 = String             #100          // LINUX\n    #69 = String             #101          // MAC_OSX\n    #70 = String             #102          // WINDOWS\n-   #71 = String             #253          // AUX\n-   #72 = String             #254          // COM1\n-   #73 = String             #255          // COM2\n-   #74 = String             #256          // COM3\n-   #75 = String             #257          // COM4\n-   #76 = String             #258          // COM5\n-   #77 = String             #259          // COM6\n-   #78 = String             #260          // COM7\n-   #79 = String             #261          // COM8\n-   #80 = String             #262          // COM9\n-   #81 = String             #263          // CON\n-   #82 = String             #264          // LPT1\n-   #83 = String             #265          // LPT2\n-   #84 = String             #266          // LPT3\n-   #85 = String             #267          // LPT4\n-   #86 = String             #268          // LPT5\n-   #87 = String             #269          // LPT6\n-   #88 = String             #270          // LPT7\n-   #89 = String             #271          // LPT8\n-   #90 = String             #272          // LPT9\n-   #91 = String             #273          // NUL\n-   #92 = String             #274          // PRN\n-   #93 = String             #275          // Linux\n-   #94 = Methodref          #4.#276       // org/apache/commons/io/FileSystem.getOsMatchesName:(Ljava/lang/String;)Z\n-   #95 = String             #277          // Mac\n-   #96 = String             #278          // Windows\n-   #97 = Class              #279          // java/lang/Enum\n+   #71 = String             #249          // AUX\n+   #72 = String             #250          // COM1\n+   #73 = String             #251          // COM2\n+   #74 = String             #252          // COM3\n+   #75 = String             #253          // COM4\n+   #76 = String             #254          // COM5\n+   #77 = String             #255          // COM6\n+   #78 = String             #256          // COM7\n+   #79 = String             #257          // COM8\n+   #80 = String             #258          // COM9\n+   #81 = String             #259          // CON\n+   #82 = String             #260          // LPT1\n+   #83 = String             #261          // LPT2\n+   #84 = String             #262          // LPT3\n+   #85 = String             #263          // LPT4\n+   #86 = String             #264          // LPT5\n+   #87 = String             #265          // LPT6\n+   #88 = String             #266          // LPT7\n+   #89 = String             #267          // LPT8\n+   #90 = String             #268          // LPT9\n+   #91 = String             #269          // NUL\n+   #92 = String             #270          // PRN\n+   #93 = String             #271          // Linux\n+   #94 = Methodref          #4.#272       // org/apache/commons/io/FileSystem.getOsMatchesName:(Ljava/lang/String;)Z\n+   #95 = String             #273          // Mac\n+   #96 = String             #274          // Windows\n+   #97 = Class              #275          // java/lang/Enum\n    #98 = Utf8               GENERIC\n    #99 = Utf8               Lorg/apache/commons/io/FileSystem;\n   #100 = Utf8               LINUX\n   #101 = Utf8               MAC_OSX\n   #102 = Utf8               WINDOWS\n   #103 = Utf8               IS_OS_LINUX\n   #104 = Utf8               Z\n@@ -144,194 +144,190 @@\n   #134 = Utf8               (Ljava/lang/String;)Z\n   #135 = Utf8               osNamePrefix\n   #136 = Utf8               getSystemProperty\n   #137 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n   #138 = Utf8               ex\n   #139 = Utf8               Ljava/lang/SecurityException;\n   #140 = Utf8               property\n-  #141 = Class              #203          // java/lang/SecurityException\n-  #142 = Utf8               isOsNameMatch\n-  #143 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #144 = Utf8               osName\n-  #145 = Utf8               <init>\n-  #146 = Utf8               (Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-  #147 = Utf8               this\n-  #148 = Utf8               maxFileLength\n-  #149 = Utf8               Signature\n-  #150 = Utf8               (ZZII[C[Ljava/lang/String;Z)V\n-  #151 = Utf8               getIllegalFileNameChars\n-  #152 = Utf8               ()[C\n-  #153 = Utf8               getMaxFileNameLength\n-  #154 = Utf8               ()I\n-  #155 = Utf8               getMaxPathLength\n-  #156 = Utf8               getReservedFileNames\n-  #157 = Utf8               ()[Ljava/lang/String;\n-  #158 = Utf8               isCasePreserving\n-  #159 = Utf8               ()Z\n-  #160 = Utf8               isCaseSensitive\n-  #161 = Utf8               isIllegalFileNameChar\n-  #162 = Utf8               (C)Z\n-  #163 = Utf8               c\n-  #164 = Utf8               C\n-  #165 = Utf8               isLegalFileName\n-  #166 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #167 = Utf8               i\n-  #168 = Utf8               candidate\n-  #169 = Utf8               Ljava/lang/CharSequence;\n-  #170 = Utf8               isReservedFileName\n-  #171 = Utf8               toLegalFileName\n-  #172 = Utf8               (Ljava/lang/String;C)Ljava/lang/String;\n-  #173 = Utf8               replacement\n-  #174 = Utf8               truncated\n-  #175 = Utf8               changed\n-  #176 = Utf8               charArray\n-  #177 = Class              #189          // org/apache/commons/io/FileSystem\n-  #178 = Class              #251          // java/lang/String\n-  #179 = Class              #280          // \"[Ljava/lang/Object;\"\n-  #180 = Class              #239          // java/lang/Object\n-  #181 = Utf8               <clinit>\n-  #182 = Utf8               ()V\n-  #183 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n-  #184 = Utf8               SourceFile\n-  #185 = Utf8               FileSystem.java\n-  #186 = NameAndType        #120:#121     // $VALUES:[Lorg/apache/commons/io/FileSystem;\n-  #187 = Class              #121          // \"[Lorg/apache/commons/io/FileSystem;\"\n-  #188 = NameAndType        #281:#282     // clone:()Ljava/lang/Object;\n-  #189 = Utf8               org/apache/commons/io/FileSystem\n-  #190 = NameAndType        #126:#283     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #191 = NameAndType        #103:#104     // IS_OS_LINUX:Z\n-  #192 = NameAndType        #100:#99      // LINUX:Lorg/apache/commons/io/FileSystem;\n-  #193 = NameAndType        #105:#104     // IS_OS_MAC:Z\n-  #194 = NameAndType        #101:#99      // MAC_OSX:Lorg/apache/commons/io/FileSystem;\n-  #195 = NameAndType        #109:#104     // IS_OS_WINDOWS:Z\n-  #196 = NameAndType        #102:#99      // WINDOWS:Lorg/apache/commons/io/FileSystem;\n-  #197 = NameAndType        #98:#99       // GENERIC:Lorg/apache/commons/io/FileSystem;\n-  #198 = Utf8               os.name\n-  #199 = NameAndType        #136:#137     // getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #200 = NameAndType        #142:#143     // isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #201 = Class              #284          // java/lang/System\n-  #202 = NameAndType        #285:#137     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #203 = Utf8               java/lang/SecurityException\n-  #204 = NameAndType        #286:#287     // err:Ljava/io/PrintStream;\n-  #205 = Utf8               java/lang/StringBuilder\n-  #206 = NameAndType        #145:#182     // \"<init>\":()V\n-  #207 = Utf8               Caught a SecurityException reading the system property \\'\n-  #208 = NameAndType        #288:#289     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #209 = Utf8               \\'; the SystemUtils property value will default to null.\n-  #210 = NameAndType        #290:#291     // toString:()Ljava/lang/String;\n-  #211 = Class              #292          // java/io/PrintStream\n-  #212 = NameAndType        #293:#294     // println:(Ljava/lang/String;)V\n-  #213 = Class              #295          // java/util/Locale\n-  #214 = NameAndType        #296:#297     // ROOT:Ljava/util/Locale;\n-  #215 = NameAndType        #298:#299     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #216 = NameAndType        #300:#134     // startsWith:(Ljava/lang/String;)Z\n-  #217 = NameAndType        #145:#301     // \"<init>\":(Ljava/lang/String;I)V\n-  #218 = NameAndType        #114:#115     // maxFileNameLength:I\n-  #219 = NameAndType        #116:#115     // maxPathLength:I\n-  #220 = Class              #302          // java/util/Objects\n-  #221 = NameAndType        #303:#304     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #222 = NameAndType        #112:#113     // illegalFileNameChars:[C\n-  #223 = NameAndType        #117:#118     // reservedFileNames:[Ljava/lang/String;\n-  #224 = NameAndType        #111:#104     // caseSensitive:Z\n-  #225 = NameAndType        #110:#104     // casePreserving:Z\n-  #226 = NameAndType        #119:#104     // supportsDriveLetter:Z\n-  #227 = Class              #113          // \"[C\"\n-  #228 = Class              #118          // \"[Ljava/lang/String;\"\n-  #229 = Class              #305          // java/util/Arrays\n-  #230 = NameAndType        #306:#307     // binarySearch:([CC)I\n-  #231 = Class              #308          // java/lang/CharSequence\n-  #232 = NameAndType        #309:#154     // length:()I\n-  #233 = NameAndType        #170:#166     // isReservedFileName:(Ljava/lang/CharSequence;)Z\n-  #234 = NameAndType        #310:#311     // charAt:(I)C\n-  #235 = NameAndType        #161:#162     // isIllegalFileNameChar:(C)Z\n-  #236 = NameAndType        #306:#312     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #237 = Utf8               java/lang/IllegalArgumentException\n-  #238 = Utf8               The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n-  #239 = Utf8               java/lang/Object\n-  #240 = Utf8               \\\\0\n-  #241 = Class              #313          // java/lang/Character\n-  #242 = NameAndType        #126:#314     // valueOf:(C)Ljava/lang/Character;\n-  #243 = NameAndType        #129:#291     // name:()Ljava/lang/String;\n-  #244 = NameAndType        #290:#315     // toString:([C)Ljava/lang/String;\n-  #245 = NameAndType        #316:#317     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #246 = NameAndType        #145:#294     // \"<init>\":(Ljava/lang/String;)V\n-  #247 = NameAndType        #318:#319     // substring:(II)Ljava/lang/String;\n-  #248 = NameAndType        #320:#152     // toCharArray:()[C\n-  #249 = NameAndType        #126:#315     // valueOf:([C)Ljava/lang/String;\n-  #250 = Utf8               java/lang/Integer\n-  #251 = Utf8               java/lang/String\n-  #252 = NameAndType        #145:#146     // \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-  #253 = Utf8               AUX\n-  #254 = Utf8               COM1\n-  #255 = Utf8               COM2\n-  #256 = Utf8               COM3\n-  #257 = Utf8               COM4\n-  #258 = Utf8               COM5\n-  #259 = Utf8               COM6\n-  #260 = Utf8               COM7\n-  #261 = Utf8               COM8\n-  #262 = Utf8               COM9\n-  #263 = Utf8               CON\n-  #264 = Utf8               LPT1\n-  #265 = Utf8               LPT2\n-  #266 = Utf8               LPT3\n-  #267 = Utf8               LPT4\n-  #268 = Utf8               LPT5\n-  #269 = Utf8               LPT6\n-  #270 = Utf8               LPT7\n-  #271 = Utf8               LPT8\n-  #272 = Utf8               LPT9\n-  #273 = Utf8               NUL\n-  #274 = Utf8               PRN\n-  #275 = Utf8               Linux\n-  #276 = NameAndType        #133:#134     // getOsMatchesName:(Ljava/lang/String;)Z\n-  #277 = Utf8               Mac\n-  #278 = Utf8               Windows\n-  #279 = Utf8               java/lang/Enum\n-  #280 = Utf8               [Ljava/lang/Object;\n-  #281 = Utf8               clone\n-  #282 = Utf8               ()Ljava/lang/Object;\n-  #283 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #284 = Utf8               java/lang/System\n-  #285 = Utf8               getProperty\n-  #286 = Utf8               err\n-  #287 = Utf8               Ljava/io/PrintStream;\n-  #288 = Utf8               append\n-  #289 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #290 = Utf8               toString\n-  #291 = Utf8               ()Ljava/lang/String;\n-  #292 = Utf8               java/io/PrintStream\n-  #293 = Utf8               println\n-  #294 = Utf8               (Ljava/lang/String;)V\n-  #295 = Utf8               java/util/Locale\n-  #296 = Utf8               ROOT\n-  #297 = Utf8               Ljava/util/Locale;\n-  #298 = Utf8               toUpperCase\n-  #299 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #300 = Utf8               startsWith\n-  #301 = Utf8               (Ljava/lang/String;I)V\n-  #302 = Utf8               java/util/Objects\n-  #303 = Utf8               requireNonNull\n-  #304 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #305 = Utf8               java/util/Arrays\n-  #306 = Utf8               binarySearch\n-  #307 = Utf8               ([CC)I\n-  #308 = Utf8               java/lang/CharSequence\n-  #309 = Utf8               length\n-  #310 = Utf8               charAt\n-  #311 = Utf8               (I)C\n-  #312 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #313 = Utf8               java/lang/Character\n-  #314 = Utf8               (C)Ljava/lang/Character;\n-  #315 = Utf8               ([C)Ljava/lang/String;\n-  #316 = Utf8               format\n-  #317 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #318 = Utf8               substring\n-  #319 = Utf8               (II)Ljava/lang/String;\n-  #320 = Utf8               toCharArray\n+  #141 = Utf8               isOsNameMatch\n+  #142 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+  #143 = Utf8               osName\n+  #144 = Utf8               <init>\n+  #145 = Utf8               (Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+  #146 = Utf8               this\n+  #147 = Utf8               maxFileLength\n+  #148 = Utf8               Signature\n+  #149 = Utf8               (ZZII[C[Ljava/lang/String;Z)V\n+  #150 = Utf8               getIllegalFileNameChars\n+  #151 = Utf8               ()[C\n+  #152 = Utf8               getMaxFileNameLength\n+  #153 = Utf8               ()I\n+  #154 = Utf8               getMaxPathLength\n+  #155 = Utf8               getReservedFileNames\n+  #156 = Utf8               ()[Ljava/lang/String;\n+  #157 = Utf8               isCasePreserving\n+  #158 = Utf8               ()Z\n+  #159 = Utf8               isCaseSensitive\n+  #160 = Utf8               isIllegalFileNameChar\n+  #161 = Utf8               (C)Z\n+  #162 = Utf8               c\n+  #163 = Utf8               C\n+  #164 = Utf8               isLegalFileName\n+  #165 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #166 = Utf8               i\n+  #167 = Utf8               candidate\n+  #168 = Utf8               Ljava/lang/CharSequence;\n+  #169 = Utf8               isReservedFileName\n+  #170 = Utf8               toLegalFileName\n+  #171 = Utf8               (Ljava/lang/String;C)Ljava/lang/String;\n+  #172 = Utf8               replacement\n+  #173 = Utf8               truncated\n+  #174 = Utf8               changed\n+  #175 = Utf8               charArray\n+  #176 = Class              #276          // \"[Ljava/lang/Object;\"\n+  #177 = Utf8               <clinit>\n+  #178 = Utf8               ()V\n+  #179 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n+  #180 = Utf8               SourceFile\n+  #181 = Utf8               FileSystem.java\n+  #182 = NameAndType        #120:#121     // $VALUES:[Lorg/apache/commons/io/FileSystem;\n+  #183 = Class              #121          // \"[Lorg/apache/commons/io/FileSystem;\"\n+  #184 = NameAndType        #277:#278     // clone:()Ljava/lang/Object;\n+  #185 = Utf8               org/apache/commons/io/FileSystem\n+  #186 = NameAndType        #126:#279     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #187 = NameAndType        #103:#104     // IS_OS_LINUX:Z\n+  #188 = NameAndType        #100:#99      // LINUX:Lorg/apache/commons/io/FileSystem;\n+  #189 = NameAndType        #105:#104     // IS_OS_MAC:Z\n+  #190 = NameAndType        #101:#99      // MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+  #191 = NameAndType        #109:#104     // IS_OS_WINDOWS:Z\n+  #192 = NameAndType        #102:#99      // WINDOWS:Lorg/apache/commons/io/FileSystem;\n+  #193 = NameAndType        #98:#99       // GENERIC:Lorg/apache/commons/io/FileSystem;\n+  #194 = Utf8               os.name\n+  #195 = NameAndType        #136:#137     // getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #196 = NameAndType        #141:#142     // isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+  #197 = Class              #280          // java/lang/System\n+  #198 = NameAndType        #281:#137     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+  #199 = Utf8               java/lang/SecurityException\n+  #200 = NameAndType        #282:#283     // err:Ljava/io/PrintStream;\n+  #201 = Utf8               java/lang/StringBuilder\n+  #202 = NameAndType        #144:#178     // \"<init>\":()V\n+  #203 = Utf8               Caught a SecurityException reading the system property \\'\n+  #204 = NameAndType        #284:#285     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #205 = Utf8               \\'; the SystemUtils property value will default to null.\n+  #206 = NameAndType        #286:#287     // toString:()Ljava/lang/String;\n+  #207 = Class              #288          // java/io/PrintStream\n+  #208 = NameAndType        #289:#290     // println:(Ljava/lang/String;)V\n+  #209 = Class              #291          // java/util/Locale\n+  #210 = NameAndType        #292:#293     // ROOT:Ljava/util/Locale;\n+  #211 = NameAndType        #294:#295     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+  #212 = NameAndType        #296:#134     // startsWith:(Ljava/lang/String;)Z\n+  #213 = NameAndType        #144:#297     // \"<init>\":(Ljava/lang/String;I)V\n+  #214 = NameAndType        #114:#115     // maxFileNameLength:I\n+  #215 = NameAndType        #116:#115     // maxPathLength:I\n+  #216 = Class              #298          // java/util/Objects\n+  #217 = NameAndType        #299:#300     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #218 = NameAndType        #112:#113     // illegalFileNameChars:[C\n+  #219 = NameAndType        #117:#118     // reservedFileNames:[Ljava/lang/String;\n+  #220 = NameAndType        #111:#104     // caseSensitive:Z\n+  #221 = NameAndType        #110:#104     // casePreserving:Z\n+  #222 = NameAndType        #119:#104     // supportsDriveLetter:Z\n+  #223 = Class              #113          // \"[C\"\n+  #224 = Class              #118          // \"[Ljava/lang/String;\"\n+  #225 = Class              #301          // java/util/Arrays\n+  #226 = NameAndType        #302:#303     // binarySearch:([CC)I\n+  #227 = Class              #304          // java/lang/CharSequence\n+  #228 = NameAndType        #305:#153     // length:()I\n+  #229 = NameAndType        #169:#165     // isReservedFileName:(Ljava/lang/CharSequence;)Z\n+  #230 = NameAndType        #306:#307     // charAt:(I)C\n+  #231 = NameAndType        #160:#161     // isIllegalFileNameChar:(C)Z\n+  #232 = NameAndType        #302:#308     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #233 = Utf8               java/lang/IllegalArgumentException\n+  #234 = Utf8               The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n+  #235 = Utf8               java/lang/Object\n+  #236 = Utf8               \\\\0\n+  #237 = Class              #309          // java/lang/Character\n+  #238 = NameAndType        #126:#310     // valueOf:(C)Ljava/lang/Character;\n+  #239 = NameAndType        #129:#287     // name:()Ljava/lang/String;\n+  #240 = NameAndType        #286:#311     // toString:([C)Ljava/lang/String;\n+  #241 = NameAndType        #312:#313     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #242 = NameAndType        #144:#290     // \"<init>\":(Ljava/lang/String;)V\n+  #243 = NameAndType        #314:#315     // substring:(II)Ljava/lang/String;\n+  #244 = NameAndType        #316:#151     // toCharArray:()[C\n+  #245 = NameAndType        #126:#311     // valueOf:([C)Ljava/lang/String;\n+  #246 = Utf8               java/lang/Integer\n+  #247 = Utf8               java/lang/String\n+  #248 = NameAndType        #144:#145     // \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+  #249 = Utf8               AUX\n+  #250 = Utf8               COM1\n+  #251 = Utf8               COM2\n+  #252 = Utf8               COM3\n+  #253 = Utf8               COM4\n+  #254 = Utf8               COM5\n+  #255 = Utf8               COM6\n+  #256 = Utf8               COM7\n+  #257 = Utf8               COM8\n+  #258 = Utf8               COM9\n+  #259 = Utf8               CON\n+  #260 = Utf8               LPT1\n+  #261 = Utf8               LPT2\n+  #262 = Utf8               LPT3\n+  #263 = Utf8               LPT4\n+  #264 = Utf8               LPT5\n+  #265 = Utf8               LPT6\n+  #266 = Utf8               LPT7\n+  #267 = Utf8               LPT8\n+  #268 = Utf8               LPT9\n+  #269 = Utf8               NUL\n+  #270 = Utf8               PRN\n+  #271 = Utf8               Linux\n+  #272 = NameAndType        #133:#134     // getOsMatchesName:(Ljava/lang/String;)Z\n+  #273 = Utf8               Mac\n+  #274 = Utf8               Windows\n+  #275 = Utf8               java/lang/Enum\n+  #276 = Utf8               [Ljava/lang/Object;\n+  #277 = Utf8               clone\n+  #278 = Utf8               ()Ljava/lang/Object;\n+  #279 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+  #280 = Utf8               java/lang/System\n+  #281 = Utf8               getProperty\n+  #282 = Utf8               err\n+  #283 = Utf8               Ljava/io/PrintStream;\n+  #284 = Utf8               append\n+  #285 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #286 = Utf8               toString\n+  #287 = Utf8               ()Ljava/lang/String;\n+  #288 = Utf8               java/io/PrintStream\n+  #289 = Utf8               println\n+  #290 = Utf8               (Ljava/lang/String;)V\n+  #291 = Utf8               java/util/Locale\n+  #292 = Utf8               ROOT\n+  #293 = Utf8               Ljava/util/Locale;\n+  #294 = Utf8               toUpperCase\n+  #295 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+  #296 = Utf8               startsWith\n+  #297 = Utf8               (Ljava/lang/String;I)V\n+  #298 = Utf8               java/util/Objects\n+  #299 = Utf8               requireNonNull\n+  #300 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #301 = Utf8               java/util/Arrays\n+  #302 = Utf8               binarySearch\n+  #303 = Utf8               ([CC)I\n+  #304 = Utf8               java/lang/CharSequence\n+  #305 = Utf8               length\n+  #306 = Utf8               charAt\n+  #307 = Utf8               (I)C\n+  #308 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #309 = Utf8               java/lang/Character\n+  #310 = Utf8               (C)Ljava/lang/Character;\n+  #311 = Utf8               ([C)Ljava/lang/String;\n+  #312 = Utf8               format\n+  #313 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #314 = Utf8               substring\n+  #315 = Utf8               (II)Ljava/lang/String;\n+  #316 = Utf8               toCharArray\n {\n   public static final org.apache.commons.io.FileSystem GENERIC;\n     descriptor: Lorg/apache/commons/io/FileSystem;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.FileSystem LINUX;\n     descriptor: Lorg/apache/commons/io/FileSystem;\n@@ -590,15 +586,15 @@\n             0      64     3 caseSensitive   Z\n             0      64     4 casePreserving   Z\n             0      64     5 maxFileLength   I\n             0      64     6 maxPathLength   I\n             0      64     7 illegalFileNameChars   [C\n             0      64     8 reservedFileNames   [Ljava/lang/String;\n             0      64     9 supportsDriveLetter   Z\n-    Signature: #150                         // (ZZII[C[Ljava/lang/String;Z)V\n+    Signature: #149                         // (ZZII[C[Ljava/lang/String;Z)V\n \n   public char[] getIllegalFileNameChars();\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n@@ -896,17 +892,18 @@\n        137: invokestatic  #62                 // Method java/lang/String.valueOf:([C)Ljava/lang/String;\n        140: goto          144\n        143: aload_3\n        144: areturn\n       LineNumberTable:\n         line 359: 0\n         line 360: 8\n-        line 363: 30\n+        line 363: 20\n         line 361: 51\n         line 365: 58\n+        line 366: 81\n         line 367: 83\n         line 368: 86\n         line 369: 92\n         line 370: 103\n         line 371: 115\n         line 372: 121\n         line 369: 124\n@@ -1320,9 +1317,9 @@\n         line 56: 69\n         line 77: 112\n         line 34: 503\n         line 100: 534\n         line 110: 542\n         line 125: 550\n }\n-Signature: #183                         // Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n+Signature: #179                         // Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n SourceFile: \"FileSystem.java\"\n"}]}
