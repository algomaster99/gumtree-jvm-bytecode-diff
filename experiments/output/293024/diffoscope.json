{"diffoscope-json-version": 1, "source1": "first/XMLTokener.class", "source2": "second/XMLTokener.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,223 +1,219 @@\n-  SHA-256 checksum 92154fdc932bea3deec4439340e2809248e2f3c6b9376ed7c9a57c446d83a3b5\n+  SHA-256 checksum 5c05c09b93ef453e42d43f6d1107d632b87f68843184c9f295be7f4e762c0a61\n   Compiled from \"XMLTokener.java\"\n public class org.json.XMLTokener extends org.json.JSONTokener\n   minor version: 0\n   major version: 50\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #60                         // org/json/XMLTokener\n   super_class: #61                        // org/json/JSONTokener\n   interfaces: 0, fields: 1, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Methodref          #61.#94       // org/json/JSONTokener.\"<init>\":(Ljava/io/Reader;)V\n-    #2 = Methodref          #61.#95       // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n-    #3 = Class              #96           // java/lang/StringBuilder\n-    #4 = Methodref          #3.#97        // java/lang/StringBuilder.\"<init>\":()V\n-    #5 = Methodref          #60.#98       // org/json/XMLTokener.more:()Z\n-    #6 = Methodref          #60.#99       // org/json/XMLTokener.next:()C\n-    #7 = Methodref          #3.#100       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-    #8 = Methodref          #3.#101       // java/lang/StringBuilder.length:()I\n-    #9 = Methodref          #3.#102       // java/lang/StringBuilder.charAt:(I)C\n-   #10 = Methodref          #3.#103       // java/lang/StringBuilder.setLength:(I)V\n-   #11 = Methodref          #3.#104       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #12 = String             #105          // Unclosed CDATA\n-   #13 = Methodref          #60.#106      // org/json/XMLTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-   #14 = Methodref          #35.#107      // java/lang/Character.isWhitespace:(C)Z\n-   #15 = Fieldref           #108.#109     // org/json/XML.LT:Ljava/lang/Character;\n-   #16 = Methodref          #31.#110      // java/lang/String.trim:()Ljava/lang/String;\n-   #17 = Methodref          #60.#111      // org/json/XMLTokener.back:()V\n-   #18 = Methodref          #60.#112      // org/json/XMLTokener.nextEntity:(C)Ljava/lang/Object;\n-   #19 = Methodref          #3.#113       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #35.#114      // java/lang/Character.isLetterOrDigit:(C)Z\n-   #21 = Methodref          #35.#115      // java/lang/Character.toLowerCase:(C)C\n-   #22 = String             #116          // Missing \\';\\' in XML entity: &\n-   #23 = Methodref          #3.#117       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #24 = Methodref          #60.#118      // org/json/XMLTokener.unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n-   #25 = Methodref          #31.#119      // java/lang/String.isEmpty:()Z\n-   #26 = String             #120          //\n-   #27 = Methodref          #31.#102      // java/lang/String.charAt:(I)C\n-   #28 = Methodref          #31.#121      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #29 = Methodref          #122.#123     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-   #30 = Methodref          #122.#124     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #31 = Class              #125          // java/lang/String\n-   #32 = Methodref          #31.#126      // java/lang/String.\"<init>\":([III)V\n-   #33 = Fieldref           #60.#127      // org/json/XMLTokener.entity:Ljava/util/HashMap;\n-   #34 = Methodref          #49.#128      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n-   #35 = Class              #129          // java/lang/Character\n-   #36 = Methodref          #35.#104      // java/lang/Character.toString:()Ljava/lang/String;\n-   #37 = String             #130          // Misshaped meta tag\n-   #38 = Fieldref           #108.#131     // org/json/XML.GT:Ljava/lang/Character;\n-   #39 = Fieldref           #108.#132     // org/json/XML.SLASH:Ljava/lang/Character;\n-   #40 = Fieldref           #108.#133     // org/json/XML.EQ:Ljava/lang/Character;\n-   #41 = Fieldref           #108.#134     // org/json/XML.BANG:Ljava/lang/Character;\n-   #42 = Fieldref           #108.#135     // org/json/XML.QUEST:Ljava/lang/Character;\n-   #43 = String             #136          // Unterminated string\n-   #44 = Fieldref           #137.#138     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n-   #45 = String             #139          // Misshaped element\n-   #46 = String             #140          // Misplaced \\'<\\'\n-   #47 = String             #141          // Bad character in a name\n-   #48 = Methodref          #31.#101      // java/lang/String.length:()I\n-   #49 = Class              #142          // java/util/HashMap\n-   #50 = Methodref          #49.#143      // java/util/HashMap.\"<init>\":(I)V\n-   #51 = String             #144          // amp\n-   #52 = Fieldref           #108.#145     // org/json/XML.AMP:Ljava/lang/Character;\n-   #53 = Methodref          #49.#146      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-   #54 = String             #147          // apos\n-   #55 = Fieldref           #108.#148     // org/json/XML.APOS:Ljava/lang/Character;\n-   #56 = String             #149          // gt\n-   #57 = String             #150          // lt\n-   #58 = String             #151          // quot\n-   #59 = Fieldref           #108.#152     // org/json/XML.QUOT:Ljava/lang/Character;\n-   #60 = Class              #153          // org/json/XMLTokener\n-   #61 = Class              #154          // org/json/JSONTokener\n+    #1 = Methodref          #61.#90       // org/json/JSONTokener.\"<init>\":(Ljava/io/Reader;)V\n+    #2 = Methodref          #61.#91       // org/json/JSONTokener.\"<init>\":(Ljava/lang/String;)V\n+    #3 = Class              #92           // java/lang/StringBuilder\n+    #4 = Methodref          #3.#93        // java/lang/StringBuilder.\"<init>\":()V\n+    #5 = Methodref          #60.#94       // org/json/XMLTokener.more:()Z\n+    #6 = Methodref          #60.#95       // org/json/XMLTokener.next:()C\n+    #7 = Methodref          #3.#96        // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+    #8 = Methodref          #3.#97        // java/lang/StringBuilder.length:()I\n+    #9 = Methodref          #3.#98        // java/lang/StringBuilder.charAt:(I)C\n+   #10 = Methodref          #3.#99        // java/lang/StringBuilder.setLength:(I)V\n+   #11 = Methodref          #3.#100       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #12 = String             #101          // Unclosed CDATA\n+   #13 = Methodref          #60.#102      // org/json/XMLTokener.syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+   #14 = Methodref          #35.#103      // java/lang/Character.isWhitespace:(C)Z\n+   #15 = Fieldref           #104.#105     // org/json/XML.LT:Ljava/lang/Character;\n+   #16 = Methodref          #31.#106      // java/lang/String.trim:()Ljava/lang/String;\n+   #17 = Methodref          #60.#107      // org/json/XMLTokener.back:()V\n+   #18 = Methodref          #60.#108      // org/json/XMLTokener.nextEntity:(C)Ljava/lang/Object;\n+   #19 = Methodref          #3.#109       // java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+   #20 = Methodref          #35.#110      // java/lang/Character.isLetterOrDigit:(C)Z\n+   #21 = Methodref          #35.#111      // java/lang/Character.toLowerCase:(C)C\n+   #22 = String             #112          // Missing \\';\\' in XML entity: &\n+   #23 = Methodref          #3.#113       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #24 = Methodref          #60.#114      // org/json/XMLTokener.unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n+   #25 = Methodref          #31.#115      // java/lang/String.isEmpty:()Z\n+   #26 = String             #116          //\n+   #27 = Methodref          #31.#98       // java/lang/String.charAt:(I)C\n+   #28 = Methodref          #31.#117      // java/lang/String.substring:(I)Ljava/lang/String;\n+   #29 = Methodref          #118.#119     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+   #30 = Methodref          #118.#120     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+   #31 = Class              #121          // java/lang/String\n+   #32 = Methodref          #31.#122      // java/lang/String.\"<init>\":([III)V\n+   #33 = Fieldref           #60.#123      // org/json/XMLTokener.entity:Ljava/util/HashMap;\n+   #34 = Methodref          #49.#124      // java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;\n+   #35 = Class              #125          // java/lang/Character\n+   #36 = Methodref          #35.#100      // java/lang/Character.toString:()Ljava/lang/String;\n+   #37 = String             #126          // Misshaped meta tag\n+   #38 = Fieldref           #104.#127     // org/json/XML.GT:Ljava/lang/Character;\n+   #39 = Fieldref           #104.#128     // org/json/XML.SLASH:Ljava/lang/Character;\n+   #40 = Fieldref           #104.#129     // org/json/XML.EQ:Ljava/lang/Character;\n+   #41 = Fieldref           #104.#130     // org/json/XML.BANG:Ljava/lang/Character;\n+   #42 = Fieldref           #104.#131     // org/json/XML.QUEST:Ljava/lang/Character;\n+   #43 = String             #132          // Unterminated string\n+   #44 = Fieldref           #133.#134     // java/lang/Boolean.TRUE:Ljava/lang/Boolean;\n+   #45 = String             #135          // Misshaped element\n+   #46 = String             #136          // Misplaced \\'<\\'\n+   #47 = String             #137          // Bad character in a name\n+   #48 = Methodref          #31.#97       // java/lang/String.length:()I\n+   #49 = Class              #138          // java/util/HashMap\n+   #50 = Methodref          #49.#139      // java/util/HashMap.\"<init>\":(I)V\n+   #51 = String             #140          // amp\n+   #52 = Fieldref           #104.#141     // org/json/XML.AMP:Ljava/lang/Character;\n+   #53 = Methodref          #49.#142      // java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+   #54 = String             #143          // apos\n+   #55 = Fieldref           #104.#144     // org/json/XML.APOS:Ljava/lang/Character;\n+   #56 = String             #145          // gt\n+   #57 = String             #146          // lt\n+   #58 = String             #147          // quot\n+   #59 = Fieldref           #104.#148     // org/json/XML.QUOT:Ljava/lang/Character;\n+   #60 = Class              #149          // org/json/XMLTokener\n+   #61 = Class              #150          // org/json/JSONTokener\n    #62 = Utf8               entity\n    #63 = Utf8               Ljava/util/HashMap;\n    #64 = Utf8               Signature\n    #65 = Utf8               Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Character;>;\n    #66 = Utf8               <init>\n    #67 = Utf8               (Ljava/io/Reader;)V\n    #68 = Utf8               Code\n    #69 = Utf8               LineNumberTable\n    #70 = Utf8               (Ljava/lang/String;)V\n    #71 = Utf8               nextCDATA\n    #72 = Utf8               ()Ljava/lang/String;\n    #73 = Utf8               StackMapTable\n-   #74 = Class              #96           // java/lang/StringBuilder\n-   #75 = Utf8               Exceptions\n-   #76 = Class              #155          // org/json/JSONException\n-   #77 = Utf8               nextContent\n-   #78 = Utf8               ()Ljava/lang/Object;\n-   #79 = Utf8               nextEntity\n-   #80 = Utf8               (C)Ljava/lang/Object;\n-   #81 = Utf8               unescapeEntity\n-   #82 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-   #83 = Class              #129          // java/lang/Character\n-   #84 = Utf8               nextMeta\n-   #85 = Utf8               nextToken\n-   #86 = Utf8               skipPast\n-   #87 = Class              #153          // org/json/XMLTokener\n-   #88 = Class              #125          // java/lang/String\n-   #89 = Class              #156          // \"[C\"\n-   #90 = Utf8               <clinit>\n-   #91 = Utf8               ()V\n-   #92 = Utf8               SourceFile\n-   #93 = Utf8               XMLTokener.java\n-   #94 = NameAndType        #66:#67       // \"<init>\":(Ljava/io/Reader;)V\n-   #95 = NameAndType        #66:#70       // \"<init>\":(Ljava/lang/String;)V\n-   #96 = Utf8               java/lang/StringBuilder\n-   #97 = NameAndType        #66:#91       // \"<init>\":()V\n-   #98 = NameAndType        #157:#158     // more:()Z\n-   #99 = NameAndType        #159:#160     // next:()C\n-  #100 = NameAndType        #161:#162     // append:(C)Ljava/lang/StringBuilder;\n-  #101 = NameAndType        #163:#164     // length:()I\n-  #102 = NameAndType        #165:#166     // charAt:(I)C\n-  #103 = NameAndType        #167:#168     // setLength:(I)V\n-  #104 = NameAndType        #169:#72      // toString:()Ljava/lang/String;\n-  #105 = Utf8               Unclosed CDATA\n-  #106 = NameAndType        #170:#171     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n-  #107 = NameAndType        #172:#173     // isWhitespace:(C)Z\n-  #108 = Class              #174          // org/json/XML\n-  #109 = NameAndType        #175:#176     // LT:Ljava/lang/Character;\n-  #110 = NameAndType        #177:#72      // trim:()Ljava/lang/String;\n-  #111 = NameAndType        #178:#91      // back:()V\n-  #112 = NameAndType        #79:#80       // nextEntity:(C)Ljava/lang/Object;\n-  #113 = NameAndType        #161:#179     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #114 = NameAndType        #180:#173     // isLetterOrDigit:(C)Z\n-  #115 = NameAndType        #181:#182     // toLowerCase:(C)C\n-  #116 = Utf8               Missing \\';\\' in XML entity: &\n-  #117 = NameAndType        #161:#183     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #118 = NameAndType        #81:#82       // unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n-  #119 = NameAndType        #184:#158     // isEmpty:()Z\n-  #120 = Utf8\n-  #121 = NameAndType        #185:#186     // substring:(I)Ljava/lang/String;\n-  #122 = Class              #187          // java/lang/Integer\n-  #123 = NameAndType        #188:#189     // parseInt:(Ljava/lang/String;I)I\n-  #124 = NameAndType        #188:#190     // parseInt:(Ljava/lang/String;)I\n-  #125 = Utf8               java/lang/String\n-  #126 = NameAndType        #66:#191      // \"<init>\":([III)V\n-  #127 = NameAndType        #62:#63       // entity:Ljava/util/HashMap;\n-  #128 = NameAndType        #192:#193     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n-  #129 = Utf8               java/lang/Character\n-  #130 = Utf8               Misshaped meta tag\n-  #131 = NameAndType        #194:#176     // GT:Ljava/lang/Character;\n-  #132 = NameAndType        #195:#176     // SLASH:Ljava/lang/Character;\n-  #133 = NameAndType        #196:#176     // EQ:Ljava/lang/Character;\n-  #134 = NameAndType        #197:#176     // BANG:Ljava/lang/Character;\n-  #135 = NameAndType        #198:#176     // QUEST:Ljava/lang/Character;\n-  #136 = Utf8               Unterminated string\n-  #137 = Class              #199          // java/lang/Boolean\n-  #138 = NameAndType        #200:#201     // TRUE:Ljava/lang/Boolean;\n-  #139 = Utf8               Misshaped element\n-  #140 = Utf8               Misplaced \\'<\\'\n-  #141 = Utf8               Bad character in a name\n-  #142 = Utf8               java/util/HashMap\n-  #143 = NameAndType        #66:#168      // \"<init>\":(I)V\n-  #144 = Utf8               amp\n-  #145 = NameAndType        #202:#176     // AMP:Ljava/lang/Character;\n-  #146 = NameAndType        #203:#204     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #147 = Utf8               apos\n-  #148 = NameAndType        #205:#176     // APOS:Ljava/lang/Character;\n-  #149 = Utf8               gt\n-  #150 = Utf8               lt\n-  #151 = Utf8               quot\n-  #152 = NameAndType        #206:#176     // QUOT:Ljava/lang/Character;\n-  #153 = Utf8               org/json/XMLTokener\n-  #154 = Utf8               org/json/JSONTokener\n-  #155 = Utf8               org/json/JSONException\n-  #156 = Utf8               [C\n-  #157 = Utf8               more\n-  #158 = Utf8               ()Z\n-  #159 = Utf8               next\n-  #160 = Utf8               ()C\n-  #161 = Utf8               append\n-  #162 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #163 = Utf8               length\n-  #164 = Utf8               ()I\n-  #165 = Utf8               charAt\n-  #166 = Utf8               (I)C\n-  #167 = Utf8               setLength\n-  #168 = Utf8               (I)V\n-  #169 = Utf8               toString\n-  #170 = Utf8               syntaxError\n-  #171 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n-  #172 = Utf8               isWhitespace\n-  #173 = Utf8               (C)Z\n-  #174 = Utf8               org/json/XML\n-  #175 = Utf8               LT\n-  #176 = Utf8               Ljava/lang/Character;\n-  #177 = Utf8               trim\n-  #178 = Utf8               back\n-  #179 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n-  #180 = Utf8               isLetterOrDigit\n-  #181 = Utf8               toLowerCase\n-  #182 = Utf8               (C)C\n-  #183 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #184 = Utf8               isEmpty\n-  #185 = Utf8               substring\n-  #186 = Utf8               (I)Ljava/lang/String;\n-  #187 = Utf8               java/lang/Integer\n-  #188 = Utf8               parseInt\n-  #189 = Utf8               (Ljava/lang/String;I)I\n-  #190 = Utf8               (Ljava/lang/String;)I\n-  #191 = Utf8               ([III)V\n-  #192 = Utf8               get\n-  #193 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n-  #194 = Utf8               GT\n-  #195 = Utf8               SLASH\n-  #196 = Utf8               EQ\n-  #197 = Utf8               BANG\n-  #198 = Utf8               QUEST\n-  #199 = Utf8               java/lang/Boolean\n-  #200 = Utf8               TRUE\n-  #201 = Utf8               Ljava/lang/Boolean;\n-  #202 = Utf8               AMP\n-  #203 = Utf8               put\n-  #204 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n-  #205 = Utf8               APOS\n-  #206 = Utf8               QUOT\n+   #74 = Utf8               Exceptions\n+   #75 = Class              #151          // org/json/JSONException\n+   #76 = Utf8               nextContent\n+   #77 = Utf8               ()Ljava/lang/Object;\n+   #78 = Utf8               nextEntity\n+   #79 = Utf8               (C)Ljava/lang/Object;\n+   #80 = Utf8               unescapeEntity\n+   #81 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #82 = Utf8               nextMeta\n+   #83 = Utf8               nextToken\n+   #84 = Utf8               skipPast\n+   #85 = Class              #152          // \"[C\"\n+   #86 = Utf8               <clinit>\n+   #87 = Utf8               ()V\n+   #88 = Utf8               SourceFile\n+   #89 = Utf8               XMLTokener.java\n+   #90 = NameAndType        #66:#67       // \"<init>\":(Ljava/io/Reader;)V\n+   #91 = NameAndType        #66:#70       // \"<init>\":(Ljava/lang/String;)V\n+   #92 = Utf8               java/lang/StringBuilder\n+   #93 = NameAndType        #66:#87       // \"<init>\":()V\n+   #94 = NameAndType        #153:#154     // more:()Z\n+   #95 = NameAndType        #155:#156     // next:()C\n+   #96 = NameAndType        #157:#158     // append:(C)Ljava/lang/StringBuilder;\n+   #97 = NameAndType        #159:#160     // length:()I\n+   #98 = NameAndType        #161:#162     // charAt:(I)C\n+   #99 = NameAndType        #163:#164     // setLength:(I)V\n+  #100 = NameAndType        #165:#72      // toString:()Ljava/lang/String;\n+  #101 = Utf8               Unclosed CDATA\n+  #102 = NameAndType        #166:#167     // syntaxError:(Ljava/lang/String;)Lorg/json/JSONException;\n+  #103 = NameAndType        #168:#169     // isWhitespace:(C)Z\n+  #104 = Class              #170          // org/json/XML\n+  #105 = NameAndType        #171:#172     // LT:Ljava/lang/Character;\n+  #106 = NameAndType        #173:#72      // trim:()Ljava/lang/String;\n+  #107 = NameAndType        #174:#87      // back:()V\n+  #108 = NameAndType        #78:#79       // nextEntity:(C)Ljava/lang/Object;\n+  #109 = NameAndType        #157:#175     // append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #110 = NameAndType        #176:#169     // isLetterOrDigit:(C)Z\n+  #111 = NameAndType        #177:#178     // toLowerCase:(C)C\n+  #112 = Utf8               Missing \\';\\' in XML entity: &\n+  #113 = NameAndType        #157:#179     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #114 = NameAndType        #80:#81       // unescapeEntity:(Ljava/lang/String;)Ljava/lang/String;\n+  #115 = NameAndType        #180:#154     // isEmpty:()Z\n+  #116 = Utf8\n+  #117 = NameAndType        #181:#182     // substring:(I)Ljava/lang/String;\n+  #118 = Class              #183          // java/lang/Integer\n+  #119 = NameAndType        #184:#185     // parseInt:(Ljava/lang/String;I)I\n+  #120 = NameAndType        #184:#186     // parseInt:(Ljava/lang/String;)I\n+  #121 = Utf8               java/lang/String\n+  #122 = NameAndType        #66:#187      // \"<init>\":([III)V\n+  #123 = NameAndType        #62:#63       // entity:Ljava/util/HashMap;\n+  #124 = NameAndType        #188:#189     // get:(Ljava/lang/Object;)Ljava/lang/Object;\n+  #125 = Utf8               java/lang/Character\n+  #126 = Utf8               Misshaped meta tag\n+  #127 = NameAndType        #190:#172     // GT:Ljava/lang/Character;\n+  #128 = NameAndType        #191:#172     // SLASH:Ljava/lang/Character;\n+  #129 = NameAndType        #192:#172     // EQ:Ljava/lang/Character;\n+  #130 = NameAndType        #193:#172     // BANG:Ljava/lang/Character;\n+  #131 = NameAndType        #194:#172     // QUEST:Ljava/lang/Character;\n+  #132 = Utf8               Unterminated string\n+  #133 = Class              #195          // java/lang/Boolean\n+  #134 = NameAndType        #196:#197     // TRUE:Ljava/lang/Boolean;\n+  #135 = Utf8               Misshaped element\n+  #136 = Utf8               Misplaced \\'<\\'\n+  #137 = Utf8               Bad character in a name\n+  #138 = Utf8               java/util/HashMap\n+  #139 = NameAndType        #66:#164      // \"<init>\":(I)V\n+  #140 = Utf8               amp\n+  #141 = NameAndType        #198:#172     // AMP:Ljava/lang/Character;\n+  #142 = NameAndType        #199:#200     // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #143 = Utf8               apos\n+  #144 = NameAndType        #201:#172     // APOS:Ljava/lang/Character;\n+  #145 = Utf8               gt\n+  #146 = Utf8               lt\n+  #147 = Utf8               quot\n+  #148 = NameAndType        #202:#172     // QUOT:Ljava/lang/Character;\n+  #149 = Utf8               org/json/XMLTokener\n+  #150 = Utf8               org/json/JSONTokener\n+  #151 = Utf8               org/json/JSONException\n+  #152 = Utf8               [C\n+  #153 = Utf8               more\n+  #154 = Utf8               ()Z\n+  #155 = Utf8               next\n+  #156 = Utf8               ()C\n+  #157 = Utf8               append\n+  #158 = Utf8               (C)Ljava/lang/StringBuilder;\n+  #159 = Utf8               length\n+  #160 = Utf8               ()I\n+  #161 = Utf8               charAt\n+  #162 = Utf8               (I)C\n+  #163 = Utf8               setLength\n+  #164 = Utf8               (I)V\n+  #165 = Utf8               toString\n+  #166 = Utf8               syntaxError\n+  #167 = Utf8               (Ljava/lang/String;)Lorg/json/JSONException;\n+  #168 = Utf8               isWhitespace\n+  #169 = Utf8               (C)Z\n+  #170 = Utf8               org/json/XML\n+  #171 = Utf8               LT\n+  #172 = Utf8               Ljava/lang/Character;\n+  #173 = Utf8               trim\n+  #174 = Utf8               back\n+  #175 = Utf8               (Ljava/lang/Object;)Ljava/lang/StringBuilder;\n+  #176 = Utf8               isLetterOrDigit\n+  #177 = Utf8               toLowerCase\n+  #178 = Utf8               (C)C\n+  #179 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+  #180 = Utf8               isEmpty\n+  #181 = Utf8               substring\n+  #182 = Utf8               (I)Ljava/lang/String;\n+  #183 = Utf8               java/lang/Integer\n+  #184 = Utf8               parseInt\n+  #185 = Utf8               (Ljava/lang/String;I)I\n+  #186 = Utf8               (Ljava/lang/String;)I\n+  #187 = Utf8               ([III)V\n+  #188 = Utf8               get\n+  #189 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;\n+  #190 = Utf8               GT\n+  #191 = Utf8               SLASH\n+  #192 = Utf8               EQ\n+  #193 = Utf8               BANG\n+  #194 = Utf8               QUEST\n+  #195 = Utf8               java/lang/Boolean\n+  #196 = Utf8               TRUE\n+  #197 = Utf8               Ljava/lang/Boolean;\n+  #198 = Utf8               AMP\n+  #199 = Utf8               put\n+  #200 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;\n+  #201 = Utf8               APOS\n+  #202 = Utf8               QUOT\n {\n   public static final java.util.HashMap<java.lang.String, java.lang.Character> entity;\n     descriptor: Ljava/util/HashMap;\n     flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL\n     Signature: #65                          // Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Character;>;\n \n   public org.json.XMLTokener(java.io.Reader);\n"}]}
