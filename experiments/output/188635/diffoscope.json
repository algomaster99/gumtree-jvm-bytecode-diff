{"diffoscope-json-version": 1, "source1": "first/SnappyCompressorOutputStream.class", "source2": "second/SnappyCompressorOutputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,309 +1,309 @@\n-  SHA-256 checksum 7ab211d7a05d129c00b68e4f76b5b8961872642b90384cf3221399b4c3869c18\n+  SHA-256 checksum 3c452538682f88a19ae6eb223a7f1d81fd49679bfefb92ffbd8b7468b70bbaf6\n   Compiled from \"SnappyCompressorOutputStream.java\"\n public class org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream extends org.apache.commons.compress.compressors.CompressorOutputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #28                         // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-  super_class: #60                        // org/apache/commons/compress/compressors/CompressorOutputStream\n+  this_class: #5                          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+  super_class: #24                        // org/apache/commons/compress/compressors/CompressorOutputStream\n   interfaces: 0, fields: 22, methods: 23, attributes: 3\n Constant pool:\n-    #1 = Class              #181          // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-    #2 = Integer            32768\n-    #3 = Methodref          #28.#182      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JI)V\n-    #4 = Methodref          #28.#183      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-    #5 = Methodref          #171.#184     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-    #6 = Methodref          #28.#185      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-    #7 = Methodref          #60.#186      // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n-    #8 = Fieldref           #28.#187      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.oneByte:[B\n-    #9 = Fieldref           #28.#188      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.os:Ljava/io/OutputStream;\n-   #10 = Class              #190          // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-   #11 = Methodref          #10.#192      // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n-   #12 = Fieldref           #28.#193      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #13 = Class              #194          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-   #14 = InvokeDynamic      #0:#199       // #0:accept:(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-   #15 = Methodref          #13.#200      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-   #16 = Fieldref           #28.#201      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-   #17 = Methodref          #28.#202      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeUncompressedSize:(J)V\n-   #18 = Methodref          #28.#203      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.write:([B)V\n-   #19 = Methodref          #13.#204      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n-   #20 = Methodref          #28.#205      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finish:()V\n-   #21 = Methodref          #206.#207     // java/io/OutputStream.close:()V\n-   #22 = Fieldref           #28.#208      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finished:Z\n-   #23 = Methodref          #13.#205      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n-   #24 = Long               127l\n-   #26 = Methodref          #206.#209     // java/io/OutputStream.write:(I)V\n-   #27 = Methodref          #56.#210      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n-   #28 = Class              #211          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-   #29 = Methodref          #28.#212      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #30 = Methodref          #28.#213      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #31 = Integer            65536\n-   #32 = Methodref          #28.#214      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #33 = Integer            16777216\n-   #34 = Methodref          #28.#215      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #35 = Methodref          #28.#216      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-   #36 = Methodref          #28.#217      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-   #37 = Methodref          #28.#218      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLittleEndian:(II)V\n-   #38 = Methodref          #56.#219      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n-   #39 = Methodref          #56.#220      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n-   #40 = Methodref          #206.#221     // java/io/OutputStream.write:([BII)V\n-   #41 = Methodref          #189.#222     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-   #42 = Methodref          #58.#210      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n-   #43 = Methodref          #58.#220      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n-   #44 = Methodref          #28.#223      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithOneOffsetByte:(II)V\n-   #45 = Methodref          #28.#224      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithTwoOffsetBytes:(II)V\n-   #46 = Methodref          #28.#225      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithFourOffsetBytes:(II)V\n-   #47 = Methodref          #28.#226      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithLittleEndianOffset:(IIII)V\n-   #48 = Methodref          #227.#228     // org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #49 = Methodref          #171.#229     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #50 = Methodref          #171.#230     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #51 = Methodref          #171.#231     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #52 = Methodref          #171.#232     // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-   #53 = Fieldref           #61.#233      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType:[I\n-   #54 = Methodref          #175.#234     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block.getType:()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n-   #55 = Methodref          #235.#236     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType.ordinal:()I\n-   #56 = Class              #237          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-   #57 = Methodref          #28.#238      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-   #58 = Class              #239          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-   #59 = Methodref          #28.#240      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-   #60 = Class              #241          // org/apache/commons/compress/compressors/CompressorOutputStream\n-   #61 = Class              #242          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n-   #62 = Utf8               InnerClasses\n-   #63 = Utf8               compressor\n-   #64 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-   #65 = Utf8               os\n-   #66 = Utf8               Ljava/io/OutputStream;\n-   #67 = Utf8               consumer\n-   #68 = Class              #243          // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-   #69 = Utf8               ByteConsumer\n-   #70 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-   #71 = Utf8               oneByte\n-   #72 = Utf8               [B\n-   #73 = Utf8               finished\n-   #74 = Utf8               Z\n-   #75 = Utf8               MAX_LITERAL_SIZE_WITHOUT_SIZE_BYTES\n-   #76 = Utf8               I\n-   #77 = Utf8               ConstantValue\n-   #78 = Integer            60\n-   #79 = Utf8               MAX_LITERAL_SIZE_WITH_ONE_SIZE_BYTE\n-   #80 = Integer            256\n-   #81 = Utf8               MAX_LITERAL_SIZE_WITH_TWO_SIZE_BYTES\n-   #82 = Utf8               MAX_LITERAL_SIZE_WITH_THREE_SIZE_BYTES\n-   #83 = Utf8               ONE_SIZE_BYTE_MARKER\n-   #84 = Integer            240\n-   #85 = Utf8               TWO_SIZE_BYTE_MARKER\n-   #86 = Integer            244\n-   #87 = Utf8               THREE_SIZE_BYTE_MARKER\n-   #88 = Integer            248\n-   #89 = Utf8               FOUR_SIZE_BYTE_MARKER\n-   #90 = Integer            252\n-   #91 = Utf8               MIN_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n-   #92 = Integer            4\n-   #93 = Utf8               MAX_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n-   #94 = Integer            11\n-   #95 = Utf8               MAX_OFFSET_WITH_ONE_OFFSET_BYTE\n-   #96 = Integer            1024\n-   #97 = Utf8               MAX_OFFSET_WITH_TWO_OFFSET_BYTES\n-   #98 = Utf8               ONE_BYTE_COPY_TAG\n-   #99 = Integer            1\n-  #100 = Utf8               TWO_BYTE_COPY_TAG\n-  #101 = Integer            2\n-  #102 = Utf8               FOUR_BYTE_COPY_TAG\n-  #103 = Integer            3\n-  #104 = Utf8               MIN_MATCH_LENGTH\n-  #105 = Utf8               MAX_MATCH_LENGTH\n-  #106 = Integer            64\n-  #107 = Utf8               <init>\n-  #108 = Utf8               (Ljava/io/OutputStream;J)V\n-  #109 = Utf8               Code\n-  #110 = Utf8               LineNumberTable\n-  #111 = Utf8               LocalVariableTable\n-  #112 = Utf8               this\n-  #113 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n-  #114 = Utf8               uncompressedSize\n-  #115 = Utf8               J\n-  #116 = Utf8               Exceptions\n-  #117 = Class              #244          // java/io/IOException\n-  #118 = Utf8               (Ljava/io/OutputStream;JI)V\n-  #119 = Utf8               blockSize\n-  #120 = Utf8               (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-  #121 = Utf8               params\n-  #122 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #123 = Utf8               write\n-  #124 = Utf8               (I)V\n-  #125 = Utf8               b\n-  #126 = Utf8               ([BII)V\n-  #127 = Utf8               data\n-  #128 = Utf8               off\n-  #129 = Utf8               len\n-  #130 = Utf8               close\n-  #131 = Utf8               ()V\n-  #132 = Utf8               StackMapTable\n-  #133 = Class              #245          // java/lang/Throwable\n-  #134 = Utf8               finish\n-  #135 = Utf8               writeUncompressedSize\n-  #136 = Utf8               (J)V\n-  #137 = Utf8               currentByte\n-  #138 = Utf8               more\n-  #139 = Utf8               writeLiteralBlock\n-  #140 = Utf8               LiteralBlock\n-  #141 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #142 = Utf8               block\n-  #143 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n-  #144 = Utf8               writeLiteralBlockNoSizeBytes\n-  #145 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #146 = Utf8               writeLiteralBlockOneSizeByte\n-  #147 = Utf8               writeLiteralBlockTwoSizeBytes\n-  #148 = Utf8               writeLiteralBlockThreeSizeBytes\n-  #149 = Utf8               writeLiteralBlockFourSizeBytes\n-  #150 = Utf8               writeLiteralBlockWithSize\n-  #151 = Utf8               (IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #152 = Utf8               tagByte\n-  #153 = Utf8               sizeBytes\n-  #154 = Utf8               writeLittleEndian\n-  #155 = Utf8               (II)V\n-  #156 = Utf8               numBytes\n-  #157 = Utf8               num\n-  #158 = Utf8               writeBackReference\n-  #159 = Utf8               BackReference\n-  #160 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-  #161 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n-  #162 = Utf8               offset\n-  #163 = Utf8               writeBackReferenceWithOneOffsetByte\n-  #164 = Utf8               writeBackReferenceWithTwoOffsetBytes\n-  #165 = Utf8               writeBackReferenceWithFourOffsetBytes\n-  #166 = Utf8               writeBackReferenceWithLittleEndianOffset\n-  #167 = Utf8               (IIII)V\n-  #168 = Utf8               tag\n-  #169 = Utf8               offsetBytes\n-  #170 = Utf8               createParameterBuilder\n-  #171 = Class              #246          // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  #172 = Utf8               Builder\n-  #173 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #174 = Utf8               lambda$new$0\n-  #175 = Class              #247          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n-  #176 = Utf8               Block\n-  #177 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #178 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n-  #179 = Utf8               SourceFile\n-  #180 = Utf8               SnappyCompressorOutputStream.java\n-  #181 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n-  #182 = NameAndType        #107:#118     // \"<init>\":(Ljava/io/OutputStream;JI)V\n-  #183 = NameAndType        #170:#173     // createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #184 = NameAndType        #248:#249     // build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #185 = NameAndType        #107:#120     // \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n-  #186 = NameAndType        #107:#131     // \"<init>\":()V\n-  #187 = NameAndType        #71:#72       // oneByte:[B\n-  #188 = NameAndType        #65:#66       // os:Ljava/io/OutputStream;\n-  #189 = Class              #250          // org/apache/commons/compress/utils/ByteUtils\n-  #190 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n-  #191 = Utf8               OutputStreamByteConsumer\n-  #192 = NameAndType        #107:#251     // \"<init>\":(Ljava/io/OutputStream;)V\n-  #193 = NameAndType        #67:#70       // consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n-  #194 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  #195 = Utf8               BootstrapMethods\n-  #196 = MethodHandle       6:#252        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #197 = MethodType         #177          //  (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #198 = MethodHandle       7:#253        // REF_invokeSpecial org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #199 = NameAndType        #254:#257     // accept:(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-  #200 = NameAndType        #107:#258     // \"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-  #201 = NameAndType        #63:#64       // compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-  #202 = NameAndType        #135:#136     // writeUncompressedSize:(J)V\n-  #203 = NameAndType        #123:#259     // write:([B)V\n-  #204 = NameAndType        #260:#126     // compress:([BII)V\n-  #205 = NameAndType        #134:#131     // finish:()V\n-  #206 = Class              #261          // java/io/OutputStream\n-  #207 = NameAndType        #130:#131     // close:()V\n-  #208 = NameAndType        #73:#74       // finished:Z\n-  #209 = NameAndType        #123:#124     // write:(I)V\n-  #210 = NameAndType        #262:#263     // getLength:()I\n-  #211 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n-  #212 = NameAndType        #144:#145     // writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #213 = NameAndType        #146:#145     // writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #214 = NameAndType        #147:#145     // writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #215 = NameAndType        #148:#145     // writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #216 = NameAndType        #149:#145     // writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n-  #217 = NameAndType        #150:#151     // writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #218 = NameAndType        #154:#155     // writeLittleEndian:(II)V\n-  #219 = NameAndType        #264:#265     // getData:()[B\n-  #220 = NameAndType        #266:#263     // getOffset:()I\n-  #221 = NameAndType        #123:#126     // write:([BII)V\n-  #222 = NameAndType        #267:#268     // toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #223 = NameAndType        #163:#155     // writeBackReferenceWithOneOffsetByte:(II)V\n-  #224 = NameAndType        #164:#155     // writeBackReferenceWithTwoOffsetBytes:(II)V\n-  #225 = NameAndType        #165:#155     // writeBackReferenceWithFourOffsetBytes:(II)V\n-  #226 = NameAndType        #166:#167     // writeBackReferenceWithLittleEndianOffset:(IIII)V\n-  #227 = Class              #269          // org/apache/commons/compress/compressors/lz77support/Parameters\n-  #228 = NameAndType        #270:#173     // builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #229 = NameAndType        #271:#173     // withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #230 = NameAndType        #272:#173     // withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #231 = NameAndType        #273:#173     // withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #232 = NameAndType        #274:#173     // withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-  #233 = NameAndType        #275:#276     // $SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType:[I\n-  #234 = NameAndType        #277:#279     // getType:()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n-  #235 = Class              #280          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType\n-  #236 = NameAndType        #281:#263     // ordinal:()I\n-  #237 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-  #238 = NameAndType        #139:#141     // writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n-  #239 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-  #240 = NameAndType        #158:#160     // writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n-  #241 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n-  #242 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n-  #243 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n-  #244 = Utf8               java/io/IOException\n-  #245 = Utf8               java/lang/Throwable\n-  #246 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n-  #247 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n-  #248 = Utf8               build\n-  #249 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-  #250 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #251 = Utf8               (Ljava/io/OutputStream;)V\n-  #252 = Methodref          #282.#283     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #253 = Methodref          #28.#284      // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #254 = Utf8               accept\n-  #255 = Class              #285          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n-  #256 = Utf8               Callback\n-  #257 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-  #258 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-  #259 = Utf8               ([B)V\n-  #260 = Utf8               compress\n-  #261 = Utf8               java/io/OutputStream\n-  #262 = Utf8               getLength\n-  #263 = Utf8               ()I\n-  #264 = Utf8               getData\n-  #265 = Utf8               ()[B\n-  #266 = Utf8               getOffset\n-  #267 = Utf8               toLittleEndian\n-  #268 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n-  #269 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n-  #270 = Utf8               builder\n-  #271 = Utf8               withMinBackReferenceLength\n-  #272 = Utf8               withMaxBackReferenceLength\n-  #273 = Utf8               withMaxOffset\n-  #274 = Utf8               withMaxLiteralLength\n-  #275 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType\n-  #276 = Utf8               [I\n-  #277 = Utf8               getType\n-  #278 = Utf8               BlockType\n-  #279 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n-  #280 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType\n-  #281 = Utf8               ordinal\n-  #282 = Class              #286          // java/lang/invoke/LambdaMetafactory\n-  #283 = NameAndType        #287:#290     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #284 = NameAndType        #174:#177     // lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-  #285 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n-  #286 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #287 = Utf8               metafactory\n-  #288 = Class              #292          // java/lang/invoke/MethodHandles$Lookup\n-  #289 = Utf8               Lookup\n-  #290 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #291 = Class              #293          // java/lang/invoke/MethodHandles\n-  #292 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #293 = Utf8               java/lang/invoke/MethodHandles\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorInputStream\n+    #3 = Integer            32768\n+    #4 = Methodref          #5.#6         // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JI)V\n+    #5 = Class              #7            // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+    #6 = NameAndType        #8:#9         // \"<init>\":(Ljava/io/OutputStream;JI)V\n+    #7 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream\n+    #8 = Utf8               <init>\n+    #9 = Utf8               (Ljava/io/OutputStream;JI)V\n+   #10 = Methodref          #5.#11        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #11 = NameAndType        #12:#13       // createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #12 = Utf8               createParameterBuilder\n+   #13 = Utf8               (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+   #14 = Methodref          #15.#16       // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #15 = Class              #17           // org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+   #16 = NameAndType        #18:#19       // build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #17 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters$Builder\n+   #18 = Utf8               build\n+   #19 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+   #20 = Methodref          #5.#21        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.\"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #21 = NameAndType        #8:#22        // \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #22 = Utf8               (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+   #23 = Methodref          #24.#25       // org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+   #24 = Class              #26           // org/apache/commons/compress/compressors/CompressorOutputStream\n+   #25 = NameAndType        #8:#27        // \"<init>\":()V\n+   #26 = Utf8               org/apache/commons/compress/compressors/CompressorOutputStream\n+   #27 = Utf8               ()V\n+   #28 = Fieldref           #5.#29        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.oneByte:[B\n+   #29 = NameAndType        #30:#31       // oneByte:[B\n+   #30 = Utf8               oneByte\n+   #31 = Utf8               [B\n+   #32 = Fieldref           #5.#33        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.os:Ljava/io/OutputStream;\n+   #33 = NameAndType        #34:#35       // os:Ljava/io/OutputStream;\n+   #34 = Utf8               os\n+   #35 = Utf8               Ljava/io/OutputStream;\n+   #36 = Class              #37           // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+   #37 = Utf8               org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+   #38 = Methodref          #36.#39       // org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n+   #39 = NameAndType        #8:#40        // \"<init>\":(Ljava/io/OutputStream;)V\n+   #40 = Utf8               (Ljava/io/OutputStream;)V\n+   #41 = Fieldref           #5.#42        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #42 = NameAndType        #43:#44       // consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #43 = Utf8               consumer\n+   #44 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+   #45 = Class              #46           // org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+   #46 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+   #47 = InvokeDynamic      #0:#48        // #0:accept:(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+   #48 = NameAndType        #49:#50       // accept:(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+   #49 = Utf8               accept\n+   #50 = Utf8               (Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+   #51 = Methodref          #45.#52       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+   #52 = NameAndType        #8:#53        // \"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+   #53 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+   #54 = Fieldref           #5.#55        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+   #55 = NameAndType        #56:#57       // compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+   #56 = Utf8               compressor\n+   #57 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+   #58 = Methodref          #5.#59        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeUncompressedSize:(J)V\n+   #59 = NameAndType        #60:#61       // writeUncompressedSize:(J)V\n+   #60 = Utf8               writeUncompressedSize\n+   #61 = Utf8               (J)V\n+   #62 = Methodref          #5.#63        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.write:([B)V\n+   #63 = NameAndType        #64:#65       // write:([B)V\n+   #64 = Utf8               write\n+   #65 = Utf8               ([B)V\n+   #66 = Methodref          #45.#67       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n+   #67 = NameAndType        #68:#69       // compress:([BII)V\n+   #68 = Utf8               compress\n+   #69 = Utf8               ([BII)V\n+   #70 = Methodref          #5.#71        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finish:()V\n+   #71 = NameAndType        #72:#27       // finish:()V\n+   #72 = Utf8               finish\n+   #73 = Methodref          #74.#75       // java/io/OutputStream.close:()V\n+   #74 = Class              #76           // java/io/OutputStream\n+   #75 = NameAndType        #77:#27       // close:()V\n+   #76 = Utf8               java/io/OutputStream\n+   #77 = Utf8               close\n+   #78 = Fieldref           #5.#79        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.finished:Z\n+   #79 = NameAndType        #80:#81       // finished:Z\n+   #80 = Utf8               finished\n+   #81 = Utf8               Z\n+   #82 = Methodref          #45.#71       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n+   #83 = Long               127l\n+   #85 = Methodref          #74.#86       // java/io/OutputStream.write:(I)V\n+   #86 = NameAndType        #64:#87       // write:(I)V\n+   #87 = Utf8               (I)V\n+   #88 = Methodref          #89.#90       // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n+   #89 = Class              #91           // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+   #90 = NameAndType        #92:#93       // getLength:()I\n+   #91 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+   #92 = Utf8               getLength\n+   #93 = Utf8               ()I\n+   #94 = Methodref          #5.#95        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+   #95 = NameAndType        #96:#97       // writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+   #96 = Utf8               writeLiteralBlockNoSizeBytes\n+   #97 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+   #98 = Methodref          #5.#99        // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+   #99 = NameAndType        #100:#97      // writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #100 = Utf8               writeLiteralBlockOneSizeByte\n+  #101 = Integer            65536\n+  #102 = Methodref          #5.#103       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #103 = NameAndType        #104:#97      // writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #104 = Utf8               writeLiteralBlockTwoSizeBytes\n+  #105 = Integer            16777216\n+  #106 = Methodref          #5.#107       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #107 = NameAndType        #108:#97      // writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #108 = Utf8               writeLiteralBlockThreeSizeBytes\n+  #109 = Methodref          #5.#110       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #110 = NameAndType        #111:#97      // writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+  #111 = Utf8               writeLiteralBlockFourSizeBytes\n+  #112 = Methodref          #5.#113       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #113 = NameAndType        #114:#115     // writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #114 = Utf8               writeLiteralBlockWithSize\n+  #115 = Utf8               (IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #116 = Methodref          #5.#117       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLittleEndian:(II)V\n+  #117 = NameAndType        #118:#119     // writeLittleEndian:(II)V\n+  #118 = Utf8               writeLittleEndian\n+  #119 = Utf8               (II)V\n+  #120 = Methodref          #89.#121      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n+  #121 = NameAndType        #122:#123     // getData:()[B\n+  #122 = Utf8               getData\n+  #123 = Utf8               ()[B\n+  #124 = Methodref          #89.#125      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+  #125 = NameAndType        #126:#93      // getOffset:()I\n+  #126 = Utf8               getOffset\n+  #127 = Methodref          #74.#128      // java/io/OutputStream.write:([BII)V\n+  #128 = NameAndType        #64:#69       // write:([BII)V\n+  #129 = Methodref          #130.#131     // org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #130 = Class              #132          // org/apache/commons/compress/utils/ByteUtils\n+  #131 = NameAndType        #133:#134     // toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #132 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #133 = Utf8               toLittleEndian\n+  #134 = Utf8               (Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+  #135 = Methodref          #136.#90      // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n+  #136 = Class              #137          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+  #137 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+  #138 = Methodref          #136.#125     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n+  #139 = Methodref          #5.#140       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithOneOffsetByte:(II)V\n+  #140 = NameAndType        #141:#119     // writeBackReferenceWithOneOffsetByte:(II)V\n+  #141 = Utf8               writeBackReferenceWithOneOffsetByte\n+  #142 = Methodref          #5.#143       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithTwoOffsetBytes:(II)V\n+  #143 = NameAndType        #144:#119     // writeBackReferenceWithTwoOffsetBytes:(II)V\n+  #144 = Utf8               writeBackReferenceWithTwoOffsetBytes\n+  #145 = Methodref          #5.#146       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithFourOffsetBytes:(II)V\n+  #146 = NameAndType        #147:#119     // writeBackReferenceWithFourOffsetBytes:(II)V\n+  #147 = Utf8               writeBackReferenceWithFourOffsetBytes\n+  #148 = Methodref          #5.#149       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReferenceWithLittleEndianOffset:(IIII)V\n+  #149 = NameAndType        #150:#151     // writeBackReferenceWithLittleEndianOffset:(IIII)V\n+  #150 = Utf8               writeBackReferenceWithLittleEndianOffset\n+  #151 = Utf8               (IIII)V\n+  #152 = Methodref          #153.#154     // org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #153 = Class              #155          // org/apache/commons/compress/compressors/lz77support/Parameters\n+  #154 = NameAndType        #156:#13      // builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #155 = Utf8               org/apache/commons/compress/compressors/lz77support/Parameters\n+  #156 = Utf8               builder\n+  #157 = Methodref          #15.#158      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #158 = NameAndType        #159:#13      // withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #159 = Utf8               withMinBackReferenceLength\n+  #160 = Methodref          #15.#161      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #161 = NameAndType        #162:#13      // withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #162 = Utf8               withMaxBackReferenceLength\n+  #163 = Methodref          #15.#164      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #164 = NameAndType        #165:#13      // withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #165 = Utf8               withMaxOffset\n+  #166 = Methodref          #15.#167      // org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #167 = NameAndType        #168:#13      // withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+  #168 = Utf8               withMaxLiteralLength\n+  #169 = Fieldref           #170.#171     // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType:[I\n+  #170 = Class              #172          // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+  #171 = NameAndType        #173:#174     // $SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType:[I\n+  #172 = Utf8               org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+  #173 = Utf8               $SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType\n+  #174 = Utf8               [I\n+  #175 = Methodref          #176.#177     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block.getType:()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n+  #176 = Class              #178          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+  #177 = NameAndType        #179:#180     // getType:()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n+  #178 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+  #179 = Utf8               getType\n+  #180 = Utf8               ()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n+  #181 = Methodref          #182.#183     // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType.ordinal:()I\n+  #182 = Class              #184          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType\n+  #183 = NameAndType        #185:#93      // ordinal:()I\n+  #184 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType\n+  #185 = Utf8               ordinal\n+  #186 = Methodref          #5.#187       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #187 = NameAndType        #188:#189     // writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #188 = Utf8               writeLiteralBlock\n+  #189 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+  #190 = Methodref          #5.#191       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #191 = NameAndType        #192:#193     // writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #192 = Utf8               writeBackReference\n+  #193 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+  #194 = Utf8               MAX_LITERAL_SIZE_WITHOUT_SIZE_BYTES\n+  #195 = Utf8               I\n+  #196 = Utf8               ConstantValue\n+  #197 = Integer            60\n+  #198 = Utf8               MAX_LITERAL_SIZE_WITH_ONE_SIZE_BYTE\n+  #199 = Integer            256\n+  #200 = Utf8               MAX_LITERAL_SIZE_WITH_TWO_SIZE_BYTES\n+  #201 = Utf8               MAX_LITERAL_SIZE_WITH_THREE_SIZE_BYTES\n+  #202 = Utf8               ONE_SIZE_BYTE_MARKER\n+  #203 = Integer            240\n+  #204 = Utf8               TWO_SIZE_BYTE_MARKER\n+  #205 = Integer            244\n+  #206 = Utf8               THREE_SIZE_BYTE_MARKER\n+  #207 = Integer            248\n+  #208 = Utf8               FOUR_SIZE_BYTE_MARKER\n+  #209 = Integer            252\n+  #210 = Utf8               MIN_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n+  #211 = Integer            4\n+  #212 = Utf8               MAX_MATCH_LENGTH_WITH_ONE_OFFSET_BYTE\n+  #213 = Integer            11\n+  #214 = Utf8               MAX_OFFSET_WITH_ONE_OFFSET_BYTE\n+  #215 = Integer            1024\n+  #216 = Utf8               MAX_OFFSET_WITH_TWO_OFFSET_BYTES\n+  #217 = Utf8               ONE_BYTE_COPY_TAG\n+  #218 = Integer            1\n+  #219 = Utf8               TWO_BYTE_COPY_TAG\n+  #220 = Integer            2\n+  #221 = Utf8               FOUR_BYTE_COPY_TAG\n+  #222 = Integer            3\n+  #223 = Utf8               MIN_MATCH_LENGTH\n+  #224 = Utf8               MAX_MATCH_LENGTH\n+  #225 = Integer            64\n+  #226 = Utf8               (Ljava/io/OutputStream;J)V\n+  #227 = Utf8               Code\n+  #228 = Utf8               LineNumberTable\n+  #229 = Utf8               LocalVariableTable\n+  #230 = Utf8               this\n+  #231 = Utf8               Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n+  #232 = Utf8               uncompressedSize\n+  #233 = Utf8               J\n+  #234 = Utf8               Exceptions\n+  #235 = Class              #236          // java/io/IOException\n+  #236 = Utf8               java/io/IOException\n+  #237 = Utf8               blockSize\n+  #238 = Utf8               params\n+  #239 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+  #240 = Utf8               b\n+  #241 = Utf8               data\n+  #242 = Utf8               off\n+  #243 = Utf8               len\n+  #244 = Utf8               StackMapTable\n+  #245 = Class              #246          // java/lang/Throwable\n+  #246 = Utf8               java/lang/Throwable\n+  #247 = Utf8               currentByte\n+  #248 = Utf8               more\n+  #249 = Utf8               block\n+  #250 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;\n+  #251 = Utf8               tagByte\n+  #252 = Utf8               sizeBytes\n+  #253 = Utf8               numBytes\n+  #254 = Utf8               num\n+  #255 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;\n+  #256 = Utf8               offset\n+  #257 = Utf8               tag\n+  #258 = Utf8               offsetBytes\n+  #259 = Utf8               lambda$new$0\n+  #260 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #261 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;\n+  #262 = Utf8               SourceFile\n+  #263 = Utf8               SnappyCompressorOutputStream.java\n+  #264 = Utf8               BootstrapMethods\n+  #265 = MethodHandle       6:#266        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #266 = Methodref          #267.#268     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #267 = Class              #269          // java/lang/invoke/LambdaMetafactory\n+  #268 = NameAndType        #270:#271     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #269 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #270 = Utf8               metafactory\n+  #271 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #272 = MethodType         #260          //  (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #273 = MethodHandle       7:#274        // REF_invokeSpecial org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #274 = Methodref          #5.#275       // org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #275 = NameAndType        #259:#260     // lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+  #276 = Utf8               InnerClasses\n+  #277 = Utf8               Builder\n+  #278 = Utf8               OutputStreamByteConsumer\n+  #279 = Class              #280          // org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #280 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteConsumer\n+  #281 = Utf8               ByteConsumer\n+  #282 = Class              #283          // org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #283 = Utf8               org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback\n+  #284 = Utf8               Callback\n+  #285 = Utf8               LiteralBlock\n+  #286 = Utf8               BackReference\n+  #287 = Utf8               Block\n+  #288 = Utf8               BlockType\n+  #289 = Class              #290          // java/lang/invoke/MethodHandles$Lookup\n+  #290 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #291 = Class              #292          // java/lang/invoke/MethodHandles\n+  #292 = Utf8               java/lang/invoke/MethodHandles\n+  #293 = Utf8               Lookup\n {\n   private final org.apache.commons.compress.compressors.lz77support.LZ77Compressor compressor;\n     descriptor: Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final java.io.OutputStream os;\n     descriptor: Ljava/io/OutputStream;\n@@ -410,16 +410,16 @@\n     descriptor: (Ljava/io/OutputStream;J)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=4, args_size=3\n          0: aload_0\n          1: aload_1\n          2: lload_2\n-         3: ldc           #2                  // int 32768\n-         5: invokespecial #3                  // Method \"<init>\":(Ljava/io/OutputStream;JI)V\n+         3: ldc           #3                  // int 32768\n+         5: invokespecial #4                  // Method \"<init>\":(Ljava/io/OutputStream;JI)V\n          8: return\n       LineNumberTable:\n         line 72: 0\n         line 73: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -433,17 +433,17 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n          1: aload_1\n          2: lload_2\n          3: iload         4\n-         5: invokestatic  #4                  // Method createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n-         8: invokevirtual #5                  // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n-        11: invokespecial #6                  // Method \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n+         5: invokestatic  #10                 // Method createParameterBuilder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         8: invokevirtual #14                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.build:()Lorg/apache/commons/compress/compressors/lz77support/Parameters;\n+        11: invokespecial #20                 // Method \"<init>\":(Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n         14: return\n       LineNumberTable:\n         line 85: 0\n         line 86: 14\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      15     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -455,39 +455,39 @@\n \n   public org.apache.commons.compress.compressors.snappy.SnappyCompressorOutputStream(java.io.OutputStream, long, org.apache.commons.compress.compressors.lz77support.Parameters) throws java.io.IOException;\n     descriptor: (Ljava/io/OutputStream;JLorg/apache/commons/compress/compressors/lz77support/Parameters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=5, args_size=4\n          0: aload_0\n-         1: invokespecial #7                  // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n+         1: invokespecial #23                 // Method org/apache/commons/compress/compressors/CompressorOutputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #8                  // Field oneByte:[B\n+         8: putfield      #28                 // Field oneByte:[B\n         11: aload_0\n         12: aload_1\n-        13: putfield      #9                  // Field os:Ljava/io/OutputStream;\n+        13: putfield      #32                 // Field os:Ljava/io/OutputStream;\n         16: aload_0\n-        17: new           #10                 // class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n+        17: new           #36                 // class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer\n         20: dup\n         21: aload_1\n-        22: invokespecial #11                 // Method org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n-        25: putfield      #12                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+        22: invokespecial #38                 // Method org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer.\"<init>\":(Ljava/io/OutputStream;)V\n+        25: putfield      #41                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n         28: aload_0\n-        29: new           #13                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+        29: new           #45                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n         32: dup\n         33: aload         4\n         35: aload_0\n-        36: invokedynamic #14,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n-        41: invokespecial #15                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n-        44: putfield      #16                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+        36: invokedynamic #47,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;)Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;\n+        41: invokespecial #51                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.\"<init>\":(Lorg/apache/commons/compress/compressors/lz77support/Parameters;Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback;)V\n+        44: putfield      #54                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n         47: aload_0\n         48: lload_2\n-        49: invokespecial #17                 // Method writeUncompressedSize:(J)V\n+        49: invokespecial #58                 // Method writeUncompressedSize:(J)V\n         52: return\n       LineNumberTable:\n         line 99: 0\n         line 60: 4\n         line 100: 11\n         line 101: 16\n         line 102: 28\n@@ -504,25 +504,25 @@\n \n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field oneByte:[B\n+         1: getfield      #28                 // Field oneByte:[B\n          4: iconst_0\n          5: iload_1\n          6: sipush        255\n          9: iand\n         10: i2b\n         11: bastore\n         12: aload_0\n         13: aload_0\n-        14: getfield      #8                  // Field oneByte:[B\n-        17: invokevirtual #18                 // Method write:([B)V\n+        14: getfield      #28                 // Field oneByte:[B\n+        17: invokevirtual #62                 // Method write:([B)V\n         20: return\n       LineNumberTable:\n         line 119: 0\n         line 120: 12\n         line 121: 20\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -533,19 +533,19 @@\n \n   public void write(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n-         1: getfield      #16                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+         1: getfield      #54                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n          4: aload_1\n          5: iload_2\n          6: iload_3\n-         7: invokevirtual #19                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n+         7: invokevirtual #66                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.compress:([BII)V\n         10: return\n       LineNumberTable:\n         line 125: 0\n         line 126: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -557,23 +557,23 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #20                 // Method finish:()V\n+         1: invokevirtual #70                 // Method finish:()V\n          4: aload_0\n-         5: getfield      #9                  // Field os:Ljava/io/OutputStream;\n-         8: invokevirtual #21                 // Method java/io/OutputStream.close:()V\n+         5: getfield      #32                 // Field os:Ljava/io/OutputStream;\n+         8: invokevirtual #73                 // Method java/io/OutputStream.close:()V\n         11: goto          24\n         14: astore_1\n         15: aload_0\n-        16: getfield      #9                  // Field os:Ljava/io/OutputStream;\n-        19: invokevirtual #21                 // Method java/io/OutputStream.close:()V\n+        16: getfield      #32                 // Field os:Ljava/io/OutputStream;\n+        19: invokevirtual #73                 // Method java/io/OutputStream.close:()V\n         22: aload_1\n         23: athrow\n         24: return\n       Exception table:\n          from    to  target type\n              0     4    14   any\n       LineNumberTable:\n@@ -595,22 +595,22 @@\n \n   public void finish() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #22                 // Field finished:Z\n+         1: getfield      #78                 // Field finished:Z\n          4: ifne          19\n          7: aload_0\n-         8: getfield      #16                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n-        11: invokevirtual #23                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n+         8: getfield      #54                 // Field compressor:Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor;\n+        11: invokevirtual #82                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor.finish:()V\n         14: aload_0\n         15: iconst_1\n-        16: putfield      #22                 // Field finished:Z\n+        16: putfield      #78                 // Field finished:Z\n         19: return\n       LineNumberTable:\n         line 143: 0\n         line 144: 7\n         line 145: 14\n         line 147: 19\n       LocalVariableTable:\n@@ -625,15 +625,15 @@\n     descriptor: (J)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=5, args_size=2\n          0: iconst_0\n          1: istore_3\n          2: lload_1\n-         3: ldc2_w        #24                 // long 127l\n+         3: ldc2_w        #83                 // long 127l\n          6: land\n          7: l2i\n          8: istore        4\n         10: lload_1\n         11: iload         4\n         13: i2l\n         14: lcmp\n@@ -645,17 +645,17 @@\n         24: iload_3\n         25: ifeq          36\n         28: iload         4\n         30: sipush        128\n         33: ior\n         34: istore        4\n         36: aload_0\n-        37: getfield      #9                  // Field os:Ljava/io/OutputStream;\n+        37: getfield      #32                 // Field os:Ljava/io/OutputStream;\n         40: iload         4\n-        42: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+        42: invokevirtual #85                 // Method java/io/OutputStream.write:(I)V\n         45: lload_1\n         46: bipush        7\n         48: lshr\n         49: lstore_1\n         50: iload_3\n         51: ifne          2\n         54: return\n@@ -690,52 +690,52 @@\n \n   private void writeLiteralBlock(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n-         1: invokevirtual #27                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n+         1: invokevirtual #88                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getLength:()I\n          4: istore_2\n          5: iload_2\n          6: bipush        60\n          8: if_icmpgt     20\n         11: aload_0\n         12: aload_1\n         13: iload_2\n-        14: invokespecial #29                 // Method writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        14: invokespecial #94                 // Method writeLiteralBlockNoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         17: goto          72\n         20: iload_2\n         21: sipush        256\n         24: if_icmpgt     36\n         27: aload_0\n         28: aload_1\n         29: iload_2\n-        30: invokespecial #30                 // Method writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        30: invokespecial #98                 // Method writeLiteralBlockOneSizeByte:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         33: goto          72\n         36: iload_2\n-        37: ldc           #31                 // int 65536\n+        37: ldc           #101                // int 65536\n         39: if_icmpgt     51\n         42: aload_0\n         43: aload_1\n         44: iload_2\n-        45: invokespecial #32                 // Method writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        45: invokespecial #102                // Method writeLiteralBlockTwoSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         48: goto          72\n         51: iload_2\n-        52: ldc           #33                 // int 16777216\n+        52: ldc           #105                // int 16777216\n         54: if_icmpgt     66\n         57: aload_0\n         58: aload_1\n         59: iload_2\n-        60: invokespecial #34                 // Method writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        60: invokespecial #106                // Method writeLiteralBlockThreeSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         63: goto          72\n         66: aload_0\n         67: aload_1\n         68: iload_2\n-        69: invokespecial #35                 // Method writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n+        69: invokespecial #109                // Method writeLiteralBlockFourSizeBytes:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;I)V\n         72: return\n       LineNumberTable:\n         line 175: 0\n         line 176: 5\n         line 177: 11\n         line 178: 20\n         line 179: 27\n@@ -771,15 +771,15 @@\n          2: iconst_1\n          3: isub\n          4: iconst_2\n          5: ishl\n          6: iconst_0\n          7: iload_2\n          8: aload_1\n-         9: invokespecial #36                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         9: invokespecial #112                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         12: return\n       LineNumberTable:\n         line 190: 0\n         line 191: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -794,15 +794,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        240\n          4: iconst_1\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #36                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #112                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 194: 0\n         line 195: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -817,15 +817,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        244\n          4: iconst_2\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #36                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #112                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 198: 0\n         line 199: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -840,15 +840,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        248\n          4: iconst_3\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #36                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #112                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 202: 0\n         line 203: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -863,15 +863,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: sipush        252\n          4: iconst_4\n          5: iload_2\n          6: aload_1\n-         7: invokespecial #36                 // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+         7: invokespecial #112                // Method writeLiteralBlockWithSize:(IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         10: return\n       LineNumberTable:\n         line 206: 0\n         line 207: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -882,31 +882,31 @@\n \n   private void writeLiteralBlockWithSize(int, int, int, org.apache.commons.compress.compressors.lz77support.LZ77Compressor$LiteralBlock) throws java.io.IOException;\n     descriptor: (IIILorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_0\n-         1: getfield      #9                  // Field os:Ljava/io/OutputStream;\n+         1: getfield      #32                 // Field os:Ljava/io/OutputStream;\n          4: iload_1\n-         5: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+         5: invokevirtual #85                 // Method java/io/OutputStream.write:(I)V\n          8: aload_0\n          9: iload_2\n         10: iload_3\n         11: iconst_1\n         12: isub\n-        13: invokespecial #37                 // Method writeLittleEndian:(II)V\n+        13: invokespecial #116                // Method writeLittleEndian:(II)V\n         16: aload_0\n-        17: getfield      #9                  // Field os:Ljava/io/OutputStream;\n+        17: getfield      #32                 // Field os:Ljava/io/OutputStream;\n         20: aload         4\n-        22: invokevirtual #38                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n+        22: invokevirtual #120                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getData:()[B\n         25: aload         4\n-        27: invokevirtual #39                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n+        27: invokevirtual #124                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock.getOffset:()I\n         30: iload_3\n-        31: invokevirtual #40                 // Method java/io/OutputStream.write:([BII)V\n+        31: invokevirtual #127                // Method java/io/OutputStream.write:([BII)V\n         34: return\n       LineNumberTable:\n         line 211: 0\n         line 212: 8\n         line 213: 16\n         line 214: 34\n       LocalVariableTable:\n@@ -921,19 +921,19 @@\n \n   private void writeLittleEndian(int, int) throws java.io.IOException;\n     descriptor: (II)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #12                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n+         1: getfield      #41                 // Field consumer:Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;\n          4: iload_2\n          5: i2l\n          6: iload_1\n-         7: invokestatic  #41                 // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n+         7: invokestatic  #129                // Method org/apache/commons/compress/utils/ByteUtils.toLittleEndian:(Lorg/apache/commons/compress/utils/ByteUtils$ByteConsumer;JI)V\n         10: return\n       LineNumberTable:\n         line 217: 0\n         line 218: 10\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      11     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -944,45 +944,45 @@\n \n   private void writeBackReference(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$BackReference) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=4, args_size=2\n          0: aload_1\n-         1: invokevirtual #42                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n+         1: invokevirtual #135                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getLength:()I\n          4: istore_2\n          5: aload_1\n-         6: invokevirtual #43                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n+         6: invokevirtual #138                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference.getOffset:()I\n          9: istore_3\n         10: iload_2\n         11: iconst_4\n         12: if_icmplt     37\n         15: iload_2\n         16: bipush        11\n         18: if_icmpgt     37\n         21: iload_3\n         22: sipush        1024\n         25: if_icmpgt     37\n         28: aload_0\n         29: iload_2\n         30: iload_3\n-        31: invokespecial #44                 // Method writeBackReferenceWithOneOffsetByte:(II)V\n+        31: invokespecial #139                // Method writeBackReferenceWithOneOffsetByte:(II)V\n         34: goto          58\n         37: iload_3\n-        38: ldc           #2                  // int 32768\n+        38: ldc           #3                  // int 32768\n         40: if_icmpge     52\n         43: aload_0\n         44: iload_2\n         45: iload_3\n-        46: invokespecial #45                 // Method writeBackReferenceWithTwoOffsetBytes:(II)V\n+        46: invokespecial #142                // Method writeBackReferenceWithTwoOffsetBytes:(II)V\n         49: goto          58\n         52: aload_0\n         53: iload_2\n         54: iload_3\n-        55: invokespecial #46                 // Method writeBackReferenceWithFourOffsetBytes:(II)V\n+        55: invokespecial #145                // Method writeBackReferenceWithFourOffsetBytes:(II)V\n         58: return\n       LineNumberTable:\n         line 232: 0\n         line 233: 5\n         line 234: 10\n         line 236: 28\n         line 237: 37\n@@ -1006,35 +1006,35 @@\n \n   private void writeBackReferenceWithOneOffsetByte(int, int) throws java.io.IOException;\n     descriptor: (II)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: getfield      #9                  // Field os:Ljava/io/OutputStream;\n+         1: getfield      #32                 // Field os:Ljava/io/OutputStream;\n          4: iconst_1\n          5: iload_1\n          6: iconst_4\n          7: isub\n          8: iconst_2\n          9: ishl\n         10: ior\n         11: iload_2\n         12: sipush        1792\n         15: iand\n         16: iconst_3\n         17: ishr\n         18: ior\n-        19: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+        19: invokevirtual #85                 // Method java/io/OutputStream.write:(I)V\n         22: aload_0\n-        23: getfield      #9                  // Field os:Ljava/io/OutputStream;\n+        23: getfield      #32                 // Field os:Ljava/io/OutputStream;\n         26: iload_2\n         27: sipush        255\n         30: iand\n-        31: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+        31: invokevirtual #85                 // Method java/io/OutputStream.write:(I)V\n         34: return\n       LineNumberTable:\n         line 245: 0\n         line 246: 22\n         line 247: 34\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1050,15 +1050,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: iconst_2\n          2: iconst_2\n          3: iload_1\n          4: iload_2\n-         5: invokespecial #47                 // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n+         5: invokespecial #148                // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n          8: return\n       LineNumberTable:\n         line 250: 0\n         line 251: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -1073,15 +1073,15 @@\n     Code:\n       stack=5, locals=3, args_size=3\n          0: aload_0\n          1: iconst_3\n          2: iconst_4\n          3: iload_1\n          4: iload_2\n-         5: invokespecial #47                 // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n+         5: invokespecial #148                // Method writeBackReferenceWithLittleEndianOffset:(IIII)V\n          8: return\n       LineNumberTable:\n         line 254: 0\n         line 255: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream;\n@@ -1092,27 +1092,27 @@\n \n   private void writeBackReferenceWithLittleEndianOffset(int, int, int, int) throws java.io.IOException;\n     descriptor: (IIII)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=4, locals=5, args_size=5\n          0: aload_0\n-         1: getfield      #9                  // Field os:Ljava/io/OutputStream;\n+         1: getfield      #32                 // Field os:Ljava/io/OutputStream;\n          4: iload_1\n          5: iload_3\n          6: iconst_1\n          7: isub\n          8: iconst_2\n          9: ishl\n         10: ior\n-        11: invokevirtual #26                 // Method java/io/OutputStream.write:(I)V\n+        11: invokevirtual #85                 // Method java/io/OutputStream.write:(I)V\n         14: aload_0\n         15: iload_2\n         16: iload         4\n-        18: invokespecial #37                 // Method writeLittleEndian:(II)V\n+        18: invokespecial #116                // Method writeLittleEndian:(II)V\n         21: return\n       LineNumberTable:\n         line 259: 0\n         line 260: 14\n         line 261: 21\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1126,23 +1126,23 @@\n \n   public static org.apache.commons.compress.compressors.lz77support.Parameters$Builder createParameterBuilder(int);\n     descriptor: (I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: iload_0\n-         1: invokestatic  #48                 // Method org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         1: invokestatic  #152                // Method org/apache/commons/compress/compressors/lz77support/Parameters.builder:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n          4: iconst_4\n-         5: invokevirtual #49                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+         5: invokevirtual #157                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMinBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n          8: bipush        64\n-        10: invokevirtual #50                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+        10: invokevirtual #160                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxBackReferenceLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n         13: iload_0\n-        14: invokevirtual #51                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+        14: invokevirtual #163                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxOffset:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n         17: iload_0\n-        18: invokevirtual #52                 // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n+        18: invokevirtual #166                // Method org/apache/commons/compress/compressors/lz77support/Parameters$Builder.withMaxLiteralLength:(I)Lorg/apache/commons/compress/compressors/lz77support/Parameters$Builder;\n         21: areturn\n       LineNumberTable:\n         line 279: 0\n         line 280: 5\n         line 281: 10\n         line 282: 14\n         line 283: 18\n@@ -1152,34 +1152,34 @@\n             0      22     0 blockSize   I\n \n   private void lambda$new$0(org.apache.commons.compress.compressors.lz77support.LZ77Compressor$Block) throws java.io.IOException;\n     descriptor: (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n     flags: (0x1002) ACC_PRIVATE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n-         0: getstatic     #53                 // Field org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType:[I\n+         0: getstatic     #169                // Field org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1.$SwitchMap$org$apache$commons$compress$compressors$lz77support$LZ77Compressor$Block$BlockType:[I\n          3: aload_1\n-         4: invokevirtual #54                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block.getType:()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n-         7: invokevirtual #55                 // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType.ordinal:()I\n+         4: invokevirtual #175                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block.getType:()Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType;\n+         7: invokevirtual #181                // Method org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType.ordinal:()I\n         10: iaload\n         11: tableswitch   { // 1 to 3\n                        1: 36\n                        2: 47\n                        3: 58\n                  default: 58\n             }\n         36: aload_0\n         37: aload_1\n-        38: checkcast     #56                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n-        41: invokespecial #57                 // Method writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n+        38: checkcast     #89                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock\n+        41: invokespecial #186                // Method writeLiteralBlock:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock;)V\n         44: goto          58\n         47: aload_0\n         48: aload_1\n-        49: checkcast     #58                 // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n-        52: invokespecial #59                 // Method writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n+        49: checkcast     #136                // class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference\n+        52: invokespecial #190                // Method writeBackReference:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference;)V\n         55: goto          58\n         58: return\n       LineNumberTable:\n         line 103: 0\n         line 105: 36\n         line 106: 44\n         line 108: 47\n@@ -1193,24 +1193,24 @@\n         frame_type = 36 /* same */\n         frame_type = 10 /* same */\n         frame_type = 10 /* same */\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"SnappyCompressorOutputStream.java\"\n-InnerClasses:\n-  static #61;                             // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n-  public static #69= #68 of #189;         // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #140= #56 of #13;   // LiteralBlock=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static final #159= #58 of #13;   // BackReference=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static #172= #171 of #227;       // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n-  public static abstract #176= #175 of #13; // Block=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static #191= #10 of #189;        // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n-  public static #256= #255 of #13;        // Callback=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n-  public static final #278= #235 of #175; // BlockType=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n-  public static final #289= #288 of #291; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #196 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #265 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #197 (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-      #198 REF_invokeSpecial org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n-      #197 (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+      #272 (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+      #273 REF_invokeSpecial org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream.lambda$new$0:(Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+      #272 (Lorg/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block;)V\n+InnerClasses:\n+  public static #277= #15 of #153;        // Builder=class org/apache/commons/compress/compressors/lz77support/Parameters$Builder of class org/apache/commons/compress/compressors/lz77support/Parameters\n+  public static #278= #36 of #130;        // OutputStreamByteConsumer=class org/apache/commons/compress/utils/ByteUtils$OutputStreamByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #281= #279 of #130;       // ByteConsumer=class org/apache/commons/compress/utils/ByteUtils$ByteConsumer of class org/apache/commons/compress/utils/ByteUtils\n+  public static #284= #282 of #45;        // Callback=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Callback of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static final #285= #89 of #45;   // LiteralBlock=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$LiteralBlock of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static final #286= #136 of #45;  // BackReference=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$BackReference of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  static #170;                            // class org/apache/commons/compress/compressors/snappy/SnappyCompressorOutputStream$1\n+  public static abstract #287= #176 of #45; // Block=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor\n+  public static final #288= #182 of #176; // BlockType=class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block$BlockType of class org/apache/commons/compress/compressors/lz77support/LZ77Compressor$Block\n+  public static final #293= #289 of #291; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
