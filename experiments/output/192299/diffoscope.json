{"diffoscope-json-version": 1, "source1": "first/UnsynchronizedBufferedInputStream.class", "source2": "second/UnsynchronizedBufferedInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,143 +1,143 @@\n-  SHA-256 checksum d930ef1995ce593577dee18b6ff8d7a44ccd98254afab1a425801cdb07861d54\n+  SHA-256 checksum 3afd4fca75897dd7c483f1a2fa4684c4a003d046ad2c453138756dcb82b4712e\n   Compiled from \"UnsynchronizedBufferedInputStream.java\"\n public final class org.apache.commons.io.input.UnsynchronizedBufferedInputStream extends org.apache.commons.io.input.UnsynchronizedFilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER\n-  this_class: #26                         // org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n-  super_class: #27                        // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+  this_class: #2                          // org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n+  super_class: #8                         // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n   interfaces: 0, fields: 5, methods: 12, attributes: 2\n Constant pool:\n-    #1 = Methodref          #26.#90       // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n-    #2 = Methodref          #27.#91       // org/apache/commons/io/input/UnsynchronizedFilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-    #3 = Class              #92           // org/apache/commons/io/IOUtils\n-    #4 = Fieldref           #26.#93       // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.markPos:I\n-    #5 = Class              #94           // java/lang/IllegalArgumentException\n-    #6 = String             #95           // Size must be > 0\n-    #7 = Methodref          #5.#96        // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-    #8 = Fieldref           #26.#97       // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.buffer:[B\n-    #9 = Fieldref           #26.#98       // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.inputStream:Ljava/io/InputStream;\n-   #10 = Class              #99           // java/io/IOException\n-   #11 = String             #100          // Stream is closed\n-   #12 = Methodref          #10.#96       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-   #13 = Fieldref           #26.#101      // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.count:I\n-   #14 = Fieldref           #26.#102      // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.pos:I\n-   #15 = Methodref          #50.#103      // java/io/InputStream.available:()I\n-   #16 = Methodref          #50.#104      // java/io/InputStream.close:()V\n-   #17 = Fieldref           #26.#105      // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.markLimit:I\n-   #18 = Methodref          #50.#106      // java/io/InputStream.read:([B)I\n-   #19 = Methodref          #107.#108     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #20 = Methodref          #50.#109      // java/io/InputStream.read:([BII)I\n-   #21 = Methodref          #26.#110      // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.fillBuffer:(Ljava/io/InputStream;[B)I\n-   #22 = Class              #111          // java/lang/IndexOutOfBoundsException\n-   #23 = Methodref          #22.#112      // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n-   #24 = String             #113          // Mark has been invalidated\n-   #25 = Methodref          #50.#114      // java/io/InputStream.skip:(J)J\n-   #26 = Class              #115          // org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n-   #27 = Class              #116          // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n-   #28 = Class              #117          // org/apache/commons/io/input/UnsynchronizedBufferedInputStream$1\n-   #29 = Utf8               InnerClasses\n-   #30 = Class              #118          // org/apache/commons/io/input/UnsynchronizedBufferedInputStream$Builder\n-   #31 = Utf8               Builder\n-   #32 = Utf8               buffer\n-   #33 = Utf8               [B\n-   #34 = Utf8               count\n-   #35 = Utf8               I\n-   #36 = Utf8               markLimit\n-   #37 = Utf8               markPos\n-   #38 = Utf8               pos\n-   #39 = Utf8               <init>\n-   #40 = Utf8               (Ljava/io/InputStream;I)V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               LocalVariableTable\n-   #44 = Utf8               this\n-   #45 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream;\n-   #46 = Utf8               in\n-   #47 = Utf8               Ljava/io/InputStream;\n-   #48 = Utf8               size\n-   #49 = Utf8               StackMapTable\n-   #50 = Class              #119          // java/io/InputStream\n-   #51 = Utf8               available\n-   #52 = Utf8               ()I\n-   #53 = Utf8               localIn\n-   #54 = Utf8               Exceptions\n-   #55 = Utf8               close\n-   #56 = Utf8               ()V\n-   #57 = Utf8               fillBuffer\n-   #58 = Utf8               (Ljava/io/InputStream;[B)I\n-   #59 = Utf8               result\n-   #60 = Utf8               newLength\n-   #61 = Utf8               newbuf\n-   #62 = Utf8               localBuf\n-   #63 = Utf8               bytesread\n-   #64 = Class              #33           // \"[B\"\n-   #65 = Utf8               getBuffer\n-   #66 = Utf8               ()[B\n-   #67 = Utf8               mark\n-   #68 = Utf8               (I)V\n-   #69 = Utf8               readlimit\n-   #70 = Utf8               markSupported\n-   #71 = Utf8               ()Z\n-   #72 = Utf8               read\n-   #73 = Utf8               ([BII)I\n-   #74 = Utf8               copylength\n-   #75 = Utf8               required\n-   #76 = Utf8               offset\n-   #77 = Utf8               length\n-   #78 = Utf8               reset\n-   #79 = Utf8               skip\n-   #80 = Utf8               (J)J\n-   #81 = Utf8               amount\n-   #82 = Utf8               J\n-   #83 = Utf8               (Ljava/io/InputStream;ILorg/apache/commons/io/input/UnsynchronizedBufferedInputStream$1;)V\n-   #84 = Utf8               x0\n-   #85 = Utf8               x1\n-   #86 = Utf8               x2\n-   #87 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream$1;\n-   #88 = Utf8               SourceFile\n-   #89 = Utf8               UnsynchronizedBufferedInputStream.java\n-   #90 = NameAndType        #39:#40       // \"<init>\":(Ljava/io/InputStream;I)V\n-   #91 = NameAndType        #39:#120      // \"<init>\":(Ljava/io/InputStream;)V\n-   #92 = Utf8               org/apache/commons/io/IOUtils\n-   #93 = NameAndType        #37:#35       // markPos:I\n-   #94 = Utf8               java/lang/IllegalArgumentException\n-   #95 = Utf8               Size must be > 0\n-   #96 = NameAndType        #39:#121      // \"<init>\":(Ljava/lang/String;)V\n-   #97 = NameAndType        #32:#33       // buffer:[B\n-   #98 = NameAndType        #122:#47      // inputStream:Ljava/io/InputStream;\n-   #99 = Utf8               java/io/IOException\n-  #100 = Utf8               Stream is closed\n-  #101 = NameAndType        #34:#35       // count:I\n-  #102 = NameAndType        #38:#35       // pos:I\n-  #103 = NameAndType        #51:#52       // available:()I\n-  #104 = NameAndType        #55:#56       // close:()V\n-  #105 = NameAndType        #36:#35       // markLimit:I\n-  #106 = NameAndType        #72:#123      // read:([B)I\n-  #107 = Class              #124          // java/lang/System\n-  #108 = NameAndType        #125:#126     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #109 = NameAndType        #72:#73       // read:([BII)I\n-  #110 = NameAndType        #57:#58       // fillBuffer:(Ljava/io/InputStream;[B)I\n-  #111 = Utf8               java/lang/IndexOutOfBoundsException\n-  #112 = NameAndType        #39:#56       // \"<init>\":()V\n-  #113 = Utf8               Mark has been invalidated\n-  #114 = NameAndType        #79:#80       // skip:(J)J\n-  #115 = Utf8               org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n-  #116 = Utf8               org/apache/commons/io/input/UnsynchronizedFilterInputStream\n-  #117 = Utf8               org/apache/commons/io/input/UnsynchronizedBufferedInputStream$1\n-  #118 = Utf8               org/apache/commons/io/input/UnsynchronizedBufferedInputStream$Builder\n-  #119 = Utf8               java/io/InputStream\n-  #120 = Utf8               (Ljava/io/InputStream;)V\n-  #121 = Utf8               (Ljava/lang/String;)V\n-  #122 = Utf8               inputStream\n-  #123 = Utf8               ([B)I\n-  #124 = Utf8               java/lang/System\n-  #125 = Utf8               arraycopy\n-  #126 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+    #1 = Methodref          #2.#3         // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.\"<init>\":(Ljava/io/InputStream;I)V\n+    #2 = Class              #4            // org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/InputStream;I)V\n+    #4 = Utf8               org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/InputStream;I)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/input/UnsynchronizedFilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+    #8 = Class              #10           // org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+    #9 = NameAndType        #5:#11        // \"<init>\":(Ljava/io/InputStream;)V\n+   #10 = Utf8               org/apache/commons/io/input/UnsynchronizedFilterInputStream\n+   #11 = Utf8               (Ljava/io/InputStream;)V\n+   #12 = Class              #13           // org/apache/commons/io/IOUtils\n+   #13 = Utf8               org/apache/commons/io/IOUtils\n+   #14 = Fieldref           #2.#15        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.markPos:I\n+   #15 = NameAndType        #16:#17       // markPos:I\n+   #16 = Utf8               markPos\n+   #17 = Utf8               I\n+   #18 = Class              #19           // java/lang/IllegalArgumentException\n+   #19 = Utf8               java/lang/IllegalArgumentException\n+   #20 = String             #21           // Size must be > 0\n+   #21 = Utf8               Size must be > 0\n+   #22 = Methodref          #18.#23       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #23 = NameAndType        #5:#24        // \"<init>\":(Ljava/lang/String;)V\n+   #24 = Utf8               (Ljava/lang/String;)V\n+   #25 = Fieldref           #2.#26        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.buffer:[B\n+   #26 = NameAndType        #27:#28       // buffer:[B\n+   #27 = Utf8               buffer\n+   #28 = Utf8               [B\n+   #29 = Fieldref           #2.#30        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.inputStream:Ljava/io/InputStream;\n+   #30 = NameAndType        #31:#32       // inputStream:Ljava/io/InputStream;\n+   #31 = Utf8               inputStream\n+   #32 = Utf8               Ljava/io/InputStream;\n+   #33 = Class              #34           // java/io/IOException\n+   #34 = Utf8               java/io/IOException\n+   #35 = String             #36           // Stream is closed\n+   #36 = Utf8               Stream is closed\n+   #37 = Methodref          #33.#23       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+   #38 = Fieldref           #2.#39        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.count:I\n+   #39 = NameAndType        #40:#17       // count:I\n+   #40 = Utf8               count\n+   #41 = Fieldref           #2.#42        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.pos:I\n+   #42 = NameAndType        #43:#17       // pos:I\n+   #43 = Utf8               pos\n+   #44 = Methodref          #45.#46       // java/io/InputStream.available:()I\n+   #45 = Class              #47           // java/io/InputStream\n+   #46 = NameAndType        #48:#49       // available:()I\n+   #47 = Utf8               java/io/InputStream\n+   #48 = Utf8               available\n+   #49 = Utf8               ()I\n+   #50 = Methodref          #45.#51       // java/io/InputStream.close:()V\n+   #51 = NameAndType        #52:#53       // close:()V\n+   #52 = Utf8               close\n+   #53 = Utf8               ()V\n+   #54 = Fieldref           #2.#55        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.markLimit:I\n+   #55 = NameAndType        #56:#17       // markLimit:I\n+   #56 = Utf8               markLimit\n+   #57 = Methodref          #45.#58       // java/io/InputStream.read:([B)I\n+   #58 = NameAndType        #59:#60       // read:([B)I\n+   #59 = Utf8               read\n+   #60 = Utf8               ([B)I\n+   #61 = Methodref          #62.#63       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #62 = Class              #64           // java/lang/System\n+   #63 = NameAndType        #65:#66       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #64 = Utf8               java/lang/System\n+   #65 = Utf8               arraycopy\n+   #66 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #67 = Methodref          #45.#68       // java/io/InputStream.read:([BII)I\n+   #68 = NameAndType        #59:#69       // read:([BII)I\n+   #69 = Utf8               ([BII)I\n+   #70 = Methodref          #2.#71        // org/apache/commons/io/input/UnsynchronizedBufferedInputStream.fillBuffer:(Ljava/io/InputStream;[B)I\n+   #71 = NameAndType        #72:#73       // fillBuffer:(Ljava/io/InputStream;[B)I\n+   #72 = Utf8               fillBuffer\n+   #73 = Utf8               (Ljava/io/InputStream;[B)I\n+   #74 = Class              #75           // java/lang/IndexOutOfBoundsException\n+   #75 = Utf8               java/lang/IndexOutOfBoundsException\n+   #76 = Methodref          #74.#77       // java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+   #77 = NameAndType        #5:#53        // \"<init>\":()V\n+   #78 = String             #79           // Mark has been invalidated\n+   #79 = Utf8               Mark has been invalidated\n+   #80 = Methodref          #45.#81       // java/io/InputStream.skip:(J)J\n+   #81 = NameAndType        #82:#83       // skip:(J)J\n+   #82 = Utf8               skip\n+   #83 = Utf8               (J)J\n+   #84 = Utf8               Code\n+   #85 = Utf8               LineNumberTable\n+   #86 = Utf8               LocalVariableTable\n+   #87 = Utf8               this\n+   #88 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream;\n+   #89 = Utf8               in\n+   #90 = Utf8               size\n+   #91 = Utf8               StackMapTable\n+   #92 = Utf8               localIn\n+   #93 = Utf8               Exceptions\n+   #94 = Utf8               result\n+   #95 = Utf8               newLength\n+   #96 = Utf8               newbuf\n+   #97 = Utf8               localBuf\n+   #98 = Utf8               bytesread\n+   #99 = Class              #28           // \"[B\"\n+  #100 = Utf8               getBuffer\n+  #101 = Utf8               ()[B\n+  #102 = Utf8               mark\n+  #103 = Utf8               (I)V\n+  #104 = Utf8               readlimit\n+  #105 = Utf8               markSupported\n+  #106 = Utf8               ()Z\n+  #107 = Utf8               copylength\n+  #108 = Utf8               required\n+  #109 = Utf8               offset\n+  #110 = Utf8               length\n+  #111 = Utf8               reset\n+  #112 = Utf8               amount\n+  #113 = Utf8               J\n+  #114 = Utf8               (Ljava/io/InputStream;ILorg/apache/commons/io/input/UnsynchronizedBufferedInputStream$1;)V\n+  #115 = Utf8               x0\n+  #116 = Utf8               x1\n+  #117 = Utf8               x2\n+  #118 = Utf8               Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream$1;\n+  #119 = Utf8               SourceFile\n+  #120 = Utf8               UnsynchronizedBufferedInputStream.java\n+  #121 = Utf8               InnerClasses\n+  #122 = Class              #123          // org/apache/commons/io/input/UnsynchronizedBufferedInputStream$1\n+  #123 = Utf8               org/apache/commons/io/input/UnsynchronizedBufferedInputStream$1\n+  #124 = Class              #125          // org/apache/commons/io/input/UnsynchronizedBufferedInputStream$Builder\n+  #125 = Utf8               org/apache/commons/io/input/UnsynchronizedBufferedInputStream$Builder\n+  #126 = Utf8               Builder\n {\n   protected volatile byte[] buffer;\n     descriptor: [B\n     flags: (0x0044) ACC_PROTECTED, ACC_VOLATILE\n \n   protected int count;\n     descriptor: I\n@@ -158,29 +158,29 @@\n   private org.apache.commons.io.input.UnsynchronizedBufferedInputStream(java.io.InputStream, int);\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #2                  // Method org/apache/commons/io/input/UnsynchronizedFilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+         2: invokespecial #7                  // Method org/apache/commons/io/input/UnsynchronizedFilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n          5: aload_0\n          6: iconst_m1\n-         7: putfield      #4                  // Field markPos:I\n+         7: putfield      #14                 // Field markPos:I\n         10: iload_2\n         11: ifgt          24\n-        14: new           #5                  // class java/lang/IllegalArgumentException\n+        14: new           #18                 // class java/lang/IllegalArgumentException\n         17: dup\n-        18: ldc           #6                  // String Size must be > 0\n-        20: invokespecial #7                  // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        18: ldc           #20                 // String Size must be > 0\n+        20: invokespecial #22                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         23: athrow\n         24: aload_0\n         25: iload_2\n         26: newarray       byte\n-        28: putfield      #8                  // Field buffer:[B\n+        28: putfield      #25                 // Field buffer:[B\n         31: return\n       LineNumberTable:\n         line 121: 0\n         line 105: 5\n         line 122: 10\n         line 123: 14\n         line 125: 24\n@@ -198,33 +198,33 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #9                  // Field inputStream:Ljava/io/InputStream;\n+         1: getfield      #29                 // Field inputStream:Ljava/io/InputStream;\n          4: astore_1\n          5: aload_0\n-         6: getfield      #8                  // Field buffer:[B\n+         6: getfield      #25                 // Field buffer:[B\n          9: ifnull        16\n         12: aload_1\n         13: ifnonnull     26\n-        16: new           #10                 // class java/io/IOException\n+        16: new           #33                 // class java/io/IOException\n         19: dup\n-        20: ldc           #11                 // String Stream is closed\n-        22: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        20: ldc           #35                 // String Stream is closed\n+        22: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         25: athrow\n         26: aload_0\n-        27: getfield      #13                 // Field count:I\n+        27: getfield      #38                 // Field count:I\n         30: aload_0\n-        31: getfield      #14                 // Field pos:I\n+        31: getfield      #41                 // Field pos:I\n         34: isub\n         35: aload_1\n-        36: invokevirtual #15                 // Method java/io/InputStream.available:()I\n+        36: invokevirtual #44                 // Method java/io/InputStream.available:()I\n         39: iadd\n         40: ireturn\n       LineNumberTable:\n         line 137: 0\n         line 138: 5\n         line 139: 16\n         line 141: 26\n@@ -243,25 +243,25 @@\n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n          1: aconst_null\n-         2: putfield      #8                  // Field buffer:[B\n+         2: putfield      #25                 // Field buffer:[B\n          5: aload_0\n-         6: getfield      #9                  // Field inputStream:Ljava/io/InputStream;\n+         6: getfield      #29                 // Field inputStream:Ljava/io/InputStream;\n          9: astore_1\n         10: aload_0\n         11: aconst_null\n-        12: putfield      #9                  // Field inputStream:Ljava/io/InputStream;\n+        12: putfield      #29                 // Field inputStream:Ljava/io/InputStream;\n         15: aload_1\n         16: ifnull        23\n         19: aload_1\n-        20: invokevirtual #16                 // Method java/io/InputStream.close:()V\n+        20: invokevirtual #50                 // Method java/io/InputStream.close:()V\n         23: return\n       LineNumberTable:\n         line 151: 0\n         line 152: 5\n         line 153: 10\n         line 154: 15\n         line 155: 19\n@@ -279,127 +279,127 @@\n \n   private int fillBuffer(java.io.InputStream, byte[]) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;[B)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=5, args_size=3\n          0: aload_0\n-         1: getfield      #4                  // Field markPos:I\n+         1: getfield      #14                 // Field markPos:I\n          4: iconst_m1\n          5: if_icmpeq     24\n          8: aload_0\n-         9: getfield      #14                 // Field pos:I\n+         9: getfield      #41                 // Field pos:I\n         12: aload_0\n-        13: getfield      #4                  // Field markPos:I\n+        13: getfield      #14                 // Field markPos:I\n         16: isub\n         17: aload_0\n-        18: getfield      #17                 // Field markLimit:I\n+        18: getfield      #54                 // Field markLimit:I\n         21: if_icmplt     51\n         24: aload_1\n         25: aload_2\n-        26: invokevirtual #18                 // Method java/io/InputStream.read:([B)I\n+        26: invokevirtual #57                 // Method java/io/InputStream.read:([B)I\n         29: istore_3\n         30: iload_3\n         31: ifle          49\n         34: aload_0\n         35: iconst_m1\n-        36: putfield      #4                  // Field markPos:I\n+        36: putfield      #14                 // Field markPos:I\n         39: aload_0\n         40: iconst_0\n-        41: putfield      #14                 // Field pos:I\n+        41: putfield      #41                 // Field pos:I\n         44: aload_0\n         45: iload_3\n-        46: putfield      #13                 // Field count:I\n+        46: putfield      #38                 // Field count:I\n         49: iload_3\n         50: ireturn\n         51: aload_0\n-        52: getfield      #4                  // Field markPos:I\n+        52: getfield      #14                 // Field markPos:I\n         55: ifne          111\n         58: aload_0\n-        59: getfield      #17                 // Field markLimit:I\n+        59: getfield      #54                 // Field markLimit:I\n         62: aload_2\n         63: arraylength\n         64: if_icmple     111\n         67: aload_2\n         68: arraylength\n         69: iconst_2\n         70: imul\n         71: istore_3\n         72: iload_3\n         73: aload_0\n-        74: getfield      #17                 // Field markLimit:I\n+        74: getfield      #54                 // Field markLimit:I\n         77: if_icmple     85\n         80: aload_0\n-        81: getfield      #17                 // Field markLimit:I\n+        81: getfield      #54                 // Field markLimit:I\n         84: istore_3\n         85: iload_3\n         86: newarray       byte\n         88: astore        4\n         90: aload_2\n         91: iconst_0\n         92: aload         4\n         94: iconst_0\n         95: aload_2\n         96: arraylength\n-        97: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        97: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        100: aload_0\n        101: aload         4\n        103: dup_x1\n-       104: putfield      #8                  // Field buffer:[B\n+       104: putfield      #25                 // Field buffer:[B\n        107: astore_2\n        108: goto          135\n        111: aload_0\n-       112: getfield      #4                  // Field markPos:I\n+       112: getfield      #14                 // Field markPos:I\n        115: ifle          135\n        118: aload_2\n        119: aload_0\n-       120: getfield      #4                  // Field markPos:I\n+       120: getfield      #14                 // Field markPos:I\n        123: aload_2\n        124: iconst_0\n        125: aload_2\n        126: arraylength\n        127: aload_0\n-       128: getfield      #4                  // Field markPos:I\n+       128: getfield      #14                 // Field markPos:I\n        131: isub\n-       132: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       132: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        135: aload_0\n        136: dup\n-       137: getfield      #14                 // Field pos:I\n+       137: getfield      #41                 // Field pos:I\n        140: aload_0\n-       141: getfield      #4                  // Field markPos:I\n+       141: getfield      #14                 // Field markPos:I\n        144: isub\n-       145: putfield      #14                 // Field pos:I\n+       145: putfield      #41                 // Field pos:I\n        148: aload_0\n        149: aload_0\n        150: iconst_0\n        151: dup_x1\n-       152: putfield      #4                  // Field markPos:I\n-       155: putfield      #13                 // Field count:I\n+       152: putfield      #14                 // Field markPos:I\n+       155: putfield      #38                 // Field count:I\n        158: aload_1\n        159: aload_2\n        160: aload_0\n-       161: getfield      #14                 // Field pos:I\n+       161: getfield      #41                 // Field pos:I\n        164: aload_2\n        165: arraylength\n        166: aload_0\n-       167: getfield      #14                 // Field pos:I\n+       167: getfield      #41                 // Field pos:I\n        170: isub\n-       171: invokevirtual #20                 // Method java/io/InputStream.read:([BII)I\n+       171: invokevirtual #67                 // Method java/io/InputStream.read:([BII)I\n        174: istore_3\n        175: aload_0\n        176: iload_3\n        177: ifgt          187\n        180: aload_0\n-       181: getfield      #14                 // Field pos:I\n+       181: getfield      #41                 // Field pos:I\n        184: goto          193\n        187: aload_0\n-       188: getfield      #14                 // Field pos:I\n+       188: getfield      #41                 // Field pos:I\n        191: iload_3\n        192: iadd\n-       193: putfield      #13                 // Field count:I\n+       193: putfield      #38                 // Field count:I\n        196: iload_3\n        197: ireturn\n       LineNumberTable:\n         line 160: 0\n         line 162: 24\n         line 163: 30\n         line 164: 34\n@@ -455,34 +455,34 @@\n \n   byte[] getBuffer();\n     descriptor: ()[B\n     flags: (0x0000)\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field buffer:[B\n+         1: getfield      #25                 // Field buffer:[B\n          4: areturn\n       LineNumberTable:\n         line 193: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream;\n \n   public void mark(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #17                 // Field markLimit:I\n+         2: putfield      #54                 // Field markLimit:I\n          5: aload_0\n          6: aload_0\n-         7: getfield      #14                 // Field pos:I\n-        10: putfield      #4                  // Field markPos:I\n+         7: getfield      #41                 // Field pos:I\n+        10: putfield      #14                 // Field markPos:I\n         13: return\n       LineNumberTable:\n         line 206: 0\n         line 207: 5\n         line 208: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -504,69 +504,69 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field buffer:[B\n+         1: getfield      #25                 // Field buffer:[B\n          4: astore_1\n          5: aload_0\n-         6: getfield      #9                  // Field inputStream:Ljava/io/InputStream;\n+         6: getfield      #29                 // Field inputStream:Ljava/io/InputStream;\n          9: astore_2\n         10: aload_1\n         11: ifnull        18\n         14: aload_2\n         15: ifnonnull     28\n-        18: new           #10                 // class java/io/IOException\n+        18: new           #33                 // class java/io/IOException\n         21: dup\n-        22: ldc           #11                 // String Stream is closed\n-        24: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        22: ldc           #35                 // String Stream is closed\n+        24: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         27: athrow\n         28: aload_0\n-        29: getfield      #14                 // Field pos:I\n+        29: getfield      #41                 // Field pos:I\n         32: aload_0\n-        33: getfield      #13                 // Field count:I\n+        33: getfield      #38                 // Field count:I\n         36: if_icmplt     51\n         39: aload_0\n         40: aload_2\n         41: aload_1\n-        42: invokespecial #21                 // Method fillBuffer:(Ljava/io/InputStream;[B)I\n+        42: invokespecial #70                 // Method fillBuffer:(Ljava/io/InputStream;[B)I\n         45: iconst_m1\n         46: if_icmpne     51\n         49: iconst_m1\n         50: ireturn\n         51: aload_1\n         52: aload_0\n-        53: getfield      #8                  // Field buffer:[B\n+        53: getfield      #25                 // Field buffer:[B\n         56: if_acmpeq     78\n         59: aload_0\n-        60: getfield      #8                  // Field buffer:[B\n+        60: getfield      #25                 // Field buffer:[B\n         63: astore_1\n         64: aload_1\n         65: ifnonnull     78\n-        68: new           #10                 // class java/io/IOException\n+        68: new           #33                 // class java/io/IOException\n         71: dup\n-        72: ldc           #11                 // String Stream is closed\n-        74: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        72: ldc           #35                 // String Stream is closed\n+        74: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         77: athrow\n         78: aload_0\n-        79: getfield      #13                 // Field count:I\n+        79: getfield      #38                 // Field count:I\n         82: aload_0\n-        83: getfield      #14                 // Field pos:I\n+        83: getfield      #41                 // Field pos:I\n         86: isub\n         87: ifle          108\n         90: aload_1\n         91: aload_0\n         92: dup\n-        93: getfield      #14                 // Field pos:I\n+        93: getfield      #41                 // Field pos:I\n         96: dup_x1\n         97: iconst_1\n         98: iadd\n-        99: putfield      #14                 // Field pos:I\n+        99: putfield      #41                 // Field pos:I\n        102: baload\n        103: sipush        255\n        106: iand\n        107: ireturn\n        108: iconst_m1\n        109: ireturn\n       LineNumberTable:\n@@ -604,85 +604,85 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=8, args_size=4\n          0: aload_1\n          1: astore        4\n          3: aload         4\n          5: ifnonnull     18\n-         8: new           #10                 // class java/io/IOException\n+         8: new           #33                 // class java/io/IOException\n         11: dup\n-        12: ldc           #11                 // String Stream is closed\n-        14: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #35                 // String Stream is closed\n+        14: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: iload_2\n         19: aload_1\n         20: arraylength\n         21: iload_3\n         22: isub\n         23: if_icmpgt     34\n         26: iload_2\n         27: iflt          34\n         30: iload_3\n         31: ifge          42\n-        34: new           #22                 // class java/lang/IndexOutOfBoundsException\n+        34: new           #74                 // class java/lang/IndexOutOfBoundsException\n         37: dup\n-        38: invokespecial #23                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n+        38: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException.\"<init>\":()V\n         41: athrow\n         42: iload_3\n         43: ifne          48\n         46: iconst_0\n         47: ireturn\n         48: aload_0\n-        49: getfield      #9                  // Field inputStream:Ljava/io/InputStream;\n+        49: getfield      #29                 // Field inputStream:Ljava/io/InputStream;\n         52: astore        5\n         54: aload         5\n         56: ifnonnull     69\n-        59: new           #10                 // class java/io/IOException\n+        59: new           #33                 // class java/io/IOException\n         62: dup\n-        63: ldc           #11                 // String Stream is closed\n-        65: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        63: ldc           #35                 // String Stream is closed\n+        65: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: aload_0\n-        70: getfield      #14                 // Field pos:I\n+        70: getfield      #41                 // Field pos:I\n         73: aload_0\n-        74: getfield      #13                 // Field count:I\n+        74: getfield      #38                 // Field count:I\n         77: if_icmpge     163\n         80: aload_0\n-        81: getfield      #13                 // Field count:I\n+        81: getfield      #38                 // Field count:I\n         84: aload_0\n-        85: getfield      #14                 // Field pos:I\n+        85: getfield      #41                 // Field pos:I\n         88: isub\n         89: iload_3\n         90: if_icmplt     97\n         93: iload_3\n         94: goto          106\n         97: aload_0\n-        98: getfield      #13                 // Field count:I\n+        98: getfield      #38                 // Field count:I\n        101: aload_0\n-       102: getfield      #14                 // Field pos:I\n+       102: getfield      #41                 // Field pos:I\n        105: isub\n        106: istore        7\n        108: aload         4\n        110: aload_0\n-       111: getfield      #14                 // Field pos:I\n+       111: getfield      #41                 // Field pos:I\n        114: aload_1\n        115: iload_2\n        116: iload         7\n-       118: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       118: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        121: aload_0\n        122: dup\n-       123: getfield      #14                 // Field pos:I\n+       123: getfield      #41                 // Field pos:I\n        126: iload         7\n        128: iadd\n-       129: putfield      #14                 // Field pos:I\n+       129: putfield      #41                 // Field pos:I\n        132: iload         7\n        134: iload_3\n        135: if_icmpeq     146\n        138: aload         5\n-       140: invokevirtual #15                 // Method java/io/InputStream.available:()I\n+       140: invokevirtual #44                 // Method java/io/InputStream.available:()I\n        143: ifne          149\n        146: iload         7\n        148: ireturn\n        149: iload_2\n        150: iload         7\n        152: iadd\n        153: istore_2\n@@ -690,26 +690,26 @@\n        155: iload         7\n        157: isub\n        158: istore        6\n        160: goto          166\n        163: iload_3\n        164: istore        6\n        166: aload_0\n-       167: getfield      #4                  // Field markPos:I\n+       167: getfield      #14                 // Field markPos:I\n        170: iconst_m1\n        171: if_icmpne     214\n        174: iload         6\n        176: aload         4\n        178: arraylength\n        179: if_icmplt     214\n        182: aload         5\n        184: aload_1\n        185: iload_2\n        186: iload         6\n-       188: invokevirtual #20                 // Method java/io/InputStream.read:([BII)I\n+       188: invokevirtual #67                 // Method java/io/InputStream.read:([BII)I\n        191: istore        7\n        193: iload         7\n        195: iconst_m1\n        196: if_icmpne     319\n        199: iload         6\n        201: iload_3\n        202: if_icmpne     209\n@@ -718,15 +718,15 @@\n        209: iload_3\n        210: iload         6\n        212: isub\n        213: ireturn\n        214: aload_0\n        215: aload         5\n        217: aload         4\n-       219: invokespecial #21                 // Method fillBuffer:(Ljava/io/InputStream;[B)I\n+       219: invokespecial #70                 // Method fillBuffer:(Ljava/io/InputStream;[B)I\n        222: iconst_m1\n        223: if_icmpne     241\n        226: iload         6\n        228: iload_3\n        229: if_icmpne     236\n        232: iconst_m1\n        233: goto          240\n@@ -737,57 +737,57 @@\n        241: aload         4\n        243: aload_1\n        244: if_acmpeq     265\n        247: aload_1\n        248: astore        4\n        250: aload         4\n        252: ifnonnull     265\n-       255: new           #10                 // class java/io/IOException\n+       255: new           #33                 // class java/io/IOException\n        258: dup\n-       259: ldc           #11                 // String Stream is closed\n-       261: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+       259: ldc           #35                 // String Stream is closed\n+       261: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n        264: athrow\n        265: aload_0\n-       266: getfield      #13                 // Field count:I\n+       266: getfield      #38                 // Field count:I\n        269: aload_0\n-       270: getfield      #14                 // Field pos:I\n+       270: getfield      #41                 // Field pos:I\n        273: isub\n        274: iload         6\n        276: if_icmplt     284\n        279: iload         6\n        281: goto          293\n        284: aload_0\n-       285: getfield      #13                 // Field count:I\n+       285: getfield      #38                 // Field count:I\n        288: aload_0\n-       289: getfield      #14                 // Field pos:I\n+       289: getfield      #41                 // Field pos:I\n        292: isub\n        293: istore        7\n        295: aload         4\n        297: aload_0\n-       298: getfield      #14                 // Field pos:I\n+       298: getfield      #41                 // Field pos:I\n        301: aload_1\n        302: iload_2\n        303: iload         7\n-       305: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       305: invokestatic  #61                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        308: aload_0\n        309: dup\n-       310: getfield      #14                 // Field pos:I\n+       310: getfield      #41                 // Field pos:I\n        313: iload         7\n        315: iadd\n-       316: putfield      #14                 // Field pos:I\n+       316: putfield      #41                 // Field pos:I\n        319: iload         6\n        321: iload         7\n        323: isub\n        324: istore        6\n        326: iload         6\n        328: ifne          333\n        331: iload_3\n        332: ireturn\n        333: aload         5\n-       335: invokevirtual #15                 // Method java/io/InputStream.available:()I\n+       335: invokevirtual #44                 // Method java/io/InputStream.available:()I\n        338: ifne          346\n        341: iload_3\n        342: iload         6\n        344: isub\n        345: ireturn\n        346: iload_2\n        347: iload         7\n@@ -895,34 +895,34 @@\n \n   public void reset() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field buffer:[B\n+         1: getfield      #25                 // Field buffer:[B\n          4: ifnonnull     17\n-         7: new           #10                 // class java/io/IOException\n+         7: new           #33                 // class java/io/IOException\n         10: dup\n-        11: ldc           #11                 // String Stream is closed\n-        13: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #35                 // String Stream is closed\n+        13: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: iconst_m1\n         18: aload_0\n-        19: getfield      #4                  // Field markPos:I\n+        19: getfield      #14                 // Field markPos:I\n         22: if_icmpne     35\n-        25: new           #10                 // class java/io/IOException\n+        25: new           #33                 // class java/io/IOException\n         28: dup\n-        29: ldc           #24                 // String Mark has been invalidated\n-        31: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        29: ldc           #78                 // String Mark has been invalidated\n+        31: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         34: athrow\n         35: aload_0\n         36: aload_0\n-        37: getfield      #4                  // Field markPos:I\n-        40: putfield      #14                 // Field pos:I\n+        37: getfield      #14                 // Field markPos:I\n+        40: putfield      #41                 // Field pos:I\n         43: return\n       LineNumberTable:\n         line 352: 0\n         line 353: 7\n         line 355: 17\n         line 356: 25\n         line 358: 35\n@@ -938,131 +938,131 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=7, args_size=2\n          0: aload_0\n-         1: getfield      #8                  // Field buffer:[B\n+         1: getfield      #25                 // Field buffer:[B\n          4: astore_3\n          5: aload_0\n-         6: getfield      #9                  // Field inputStream:Ljava/io/InputStream;\n+         6: getfield      #29                 // Field inputStream:Ljava/io/InputStream;\n          9: astore        4\n         11: aload_3\n         12: ifnonnull     25\n-        15: new           #10                 // class java/io/IOException\n+        15: new           #33                 // class java/io/IOException\n         18: dup\n-        19: ldc           #11                 // String Stream is closed\n-        21: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        19: ldc           #35                 // String Stream is closed\n+        21: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         24: athrow\n         25: lload_1\n         26: lconst_1\n         27: lcmp\n         28: ifge          33\n         31: lconst_0\n         32: lreturn\n         33: aload         4\n         35: ifnonnull     48\n-        38: new           #10                 // class java/io/IOException\n+        38: new           #33                 // class java/io/IOException\n         41: dup\n-        42: ldc           #11                 // String Stream is closed\n-        44: invokespecial #12                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        42: ldc           #35                 // String Stream is closed\n+        44: invokespecial #37                 // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         47: athrow\n         48: aload_0\n-        49: getfield      #13                 // Field count:I\n+        49: getfield      #38                 // Field count:I\n         52: aload_0\n-        53: getfield      #14                 // Field pos:I\n+        53: getfield      #41                 // Field pos:I\n         56: isub\n         57: i2l\n         58: lload_1\n         59: lcmp\n         60: iflt          77\n         63: aload_0\n         64: dup\n-        65: getfield      #14                 // Field pos:I\n+        65: getfield      #41                 // Field pos:I\n         68: i2l\n         69: lload_1\n         70: ladd\n         71: l2i\n-        72: putfield      #14                 // Field pos:I\n+        72: putfield      #41                 // Field pos:I\n         75: lload_1\n         76: lreturn\n         77: aload_0\n-        78: getfield      #13                 // Field count:I\n+        78: getfield      #38                 // Field count:I\n         81: aload_0\n-        82: getfield      #14                 // Field pos:I\n+        82: getfield      #41                 // Field pos:I\n         85: isub\n         86: i2l\n         87: lstore        5\n         89: aload_0\n         90: aload_0\n-        91: getfield      #13                 // Field count:I\n-        94: putfield      #14                 // Field pos:I\n+        91: getfield      #38                 // Field count:I\n+        94: putfield      #41                 // Field pos:I\n         97: aload_0\n-        98: getfield      #4                  // Field markPos:I\n+        98: getfield      #14                 // Field markPos:I\n        101: iconst_m1\n        102: if_icmpeq     190\n        105: lload_1\n        106: aload_0\n-       107: getfield      #17                 // Field markLimit:I\n+       107: getfield      #54                 // Field markLimit:I\n        110: i2l\n        111: lcmp\n        112: ifgt          190\n        115: aload_0\n        116: aload         4\n        118: aload_3\n-       119: invokespecial #21                 // Method fillBuffer:(Ljava/io/InputStream;[B)I\n+       119: invokespecial #70                 // Method fillBuffer:(Ljava/io/InputStream;[B)I\n        122: iconst_m1\n        123: if_icmpne     129\n        126: lload         5\n        128: lreturn\n        129: aload_0\n-       130: getfield      #13                 // Field count:I\n+       130: getfield      #38                 // Field count:I\n        133: aload_0\n-       134: getfield      #14                 // Field pos:I\n+       134: getfield      #41                 // Field pos:I\n        137: isub\n        138: i2l\n        139: lload_1\n        140: lload         5\n        142: lsub\n        143: lcmp\n        144: iflt          164\n        147: aload_0\n        148: dup\n-       149: getfield      #14                 // Field pos:I\n+       149: getfield      #41                 // Field pos:I\n        152: i2l\n        153: lload_1\n        154: lload         5\n        156: lsub\n        157: ladd\n        158: l2i\n-       159: putfield      #14                 // Field pos:I\n+       159: putfield      #41                 // Field pos:I\n        162: lload_1\n        163: lreturn\n        164: lload         5\n        166: aload_0\n-       167: getfield      #13                 // Field count:I\n+       167: getfield      #38                 // Field count:I\n        170: aload_0\n-       171: getfield      #14                 // Field pos:I\n+       171: getfield      #41                 // Field pos:I\n        174: isub\n        175: i2l\n        176: ladd\n        177: lstore        5\n        179: aload_0\n        180: aload_0\n-       181: getfield      #13                 // Field count:I\n-       184: putfield      #14                 // Field pos:I\n+       181: getfield      #38                 // Field count:I\n+       184: putfield      #41                 // Field pos:I\n        187: lload         5\n        189: lreturn\n        190: lload         5\n        192: aload         4\n        194: lload_1\n        195: lload         5\n        197: lsub\n-       198: invokevirtual #25                 // Method java/io/InputStream.skip:(J)J\n+       198: invokevirtual #80                 // Method java/io/InputStream.skip:(J)J\n        201: ladd\n        202: lreturn\n       LineNumberTable:\n         line 372: 0\n         line 373: 5\n         line 374: 11\n         line 375: 15\n@@ -1124,9 +1124,9 @@\n             0       7     0  this   Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream;\n             0       7     1    x0   Ljava/io/InputStream;\n             0       7     2    x1   I\n             0       7     3    x2   Lorg/apache/commons/io/input/UnsynchronizedBufferedInputStream$1;\n }\n SourceFile: \"UnsynchronizedBufferedInputStream.java\"\n InnerClasses:\n-  static #28;                             // class org/apache/commons/io/input/UnsynchronizedBufferedInputStream$1\n-  public static #31= #30 of #26;          // Builder=class org/apache/commons/io/input/UnsynchronizedBufferedInputStream$Builder of class org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n+  static #122;                            // class org/apache/commons/io/input/UnsynchronizedBufferedInputStream$1\n+  public static #126= #124 of #2;         // Builder=class org/apache/commons/io/input/UnsynchronizedBufferedInputStream$Builder of class org/apache/commons/io/input/UnsynchronizedBufferedInputStream\n"}]}
