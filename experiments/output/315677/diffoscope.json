{"diffoscope-json-version": 1, "source1": "first/FileSystem.class", "source2": "second/FileSystem.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,316 +1,316 @@\n-  SHA-256 checksum 5ccc9da4ce9a8d76fe35b84c06f16af3a2500ba0b5f2ea30c280e17b3c75f3d9\n+  SHA-256 checksum 979e92a8fa30df1811ee4ff6b69a44be4dae7ef45cf47026f12a4121bc3e7a02\n   Compiled from \"FileSystem.java\"\n public final class org.apache.commons.io.FileSystem extends java.lang.Enum<org.apache.commons.io.FileSystem>\n   minor version: 0\n   major version: 52\n   flags: (0x4031) ACC_PUBLIC, ACC_FINAL, ACC_SUPER, ACC_ENUM\n-  this_class: #4                          // org/apache/commons/io/FileSystem\n-  super_class: #97                        // java/lang/Enum\n-  interfaces: 0, fields: 16, methods: 19, attributes: 2\n+  this_class: #1                          // org/apache/commons/io/FileSystem\n+  super_class: #26                        // java/lang/Enum\n+  interfaces: 0, fields: 16, methods: 20, attributes: 2\n Constant pool:\n-    #1 = Fieldref           #4.#164       // org/apache/commons/io/FileSystem.$VALUES:[Lorg/apache/commons/io/FileSystem;\n-    #2 = Methodref          #165.#166     // \"[Lorg/apache/commons/io/FileSystem;\".clone:()Ljava/lang/Object;\n-    #3 = Class              #121          // \"[Lorg/apache/commons/io/FileSystem;\"\n-    #4 = Class              #167          // org/apache/commons/io/FileSystem\n-    #5 = Methodref          #97.#168      // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-    #6 = Fieldref           #4.#169       // org/apache/commons/io/FileSystem.IS_OS_LINUX:Z\n-    #7 = Fieldref           #4.#170       // org/apache/commons/io/FileSystem.LINUX:Lorg/apache/commons/io/FileSystem;\n-    #8 = Fieldref           #4.#171       // org/apache/commons/io/FileSystem.IS_OS_MAC:Z\n-    #9 = Fieldref           #4.#172       // org/apache/commons/io/FileSystem.MAC_OSX:Lorg/apache/commons/io/FileSystem;\n-   #10 = Fieldref           #4.#173       // org/apache/commons/io/FileSystem.IS_OS_WINDOWS:Z\n-   #11 = Fieldref           #4.#174       // org/apache/commons/io/FileSystem.WINDOWS:Lorg/apache/commons/io/FileSystem;\n-   #12 = Fieldref           #4.#175       // org/apache/commons/io/FileSystem.GENERIC:Lorg/apache/commons/io/FileSystem;\n-   #13 = String             #176          // os.name\n-   #14 = Methodref          #4.#177       // org/apache/commons/io/FileSystem.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #15 = Methodref          #4.#178       // org/apache/commons/io/FileSystem.isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #16 = Methodref          #179.#180     // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-   #17 = Class              #181          // java/lang/SecurityException\n-   #18 = Fieldref           #179.#182     // java/lang/System.err:Ljava/io/PrintStream;\n-   #19 = Class              #183          // java/lang/StringBuilder\n-   #20 = Methodref          #19.#184      // java/lang/StringBuilder.\"<init>\":()V\n-   #21 = String             #185          // Caught a SecurityException reading the system property \\'\n-   #22 = Methodref          #19.#186      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #23 = String             #187          // \\'; the SystemUtils property value will default to null.\n-   #24 = Methodref          #19.#188      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #25 = Methodref          #189.#190     // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #26 = Fieldref           #191.#192     // java/util/Locale.ROOT:Ljava/util/Locale;\n-   #27 = Methodref          #66.#193      // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-   #28 = Methodref          #66.#194      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #29 = Methodref          #97.#195      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n-   #30 = Fieldref           #4.#196       // org/apache/commons/io/FileSystem.maxFileNameLength:I\n-   #31 = Fieldref           #4.#197       // org/apache/commons/io/FileSystem.maxPathLength:I\n-   #32 = String             #112          // illegalFileNameChars\n-   #33 = Methodref          #198.#199     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #34 = Class              #113          // \"[C\"\n-   #35 = Fieldref           #4.#200       // org/apache/commons/io/FileSystem.illegalFileNameChars:[C\n-   #36 = String             #117          // reservedFileNames\n-   #37 = Class              #118          // \"[Ljava/lang/String;\"\n-   #38 = Fieldref           #4.#201       // org/apache/commons/io/FileSystem.reservedFileNames:[Ljava/lang/String;\n-   #39 = Fieldref           #4.#202       // org/apache/commons/io/FileSystem.caseSensitive:Z\n-   #40 = Fieldref           #4.#203       // org/apache/commons/io/FileSystem.casePreserving:Z\n-   #41 = Fieldref           #4.#204       // org/apache/commons/io/FileSystem.supportsDriveLetter:Z\n-   #42 = Methodref          #205.#166     // \"[C\".clone:()Ljava/lang/Object;\n-   #43 = Methodref          #206.#166     // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-   #44 = Methodref          #207.#208     // java/util/Arrays.binarySearch:([CC)I\n-   #45 = InterfaceMethodref #209.#210     // java/lang/CharSequence.length:()I\n-   #46 = Methodref          #4.#211       // org/apache/commons/io/FileSystem.isReservedFileName:(Ljava/lang/CharSequence;)Z\n-   #47 = InterfaceMethodref #209.#212     // java/lang/CharSequence.charAt:(I)C\n-   #48 = Methodref          #4.#213       // org/apache/commons/io/FileSystem.isIllegalFileNameChar:(C)Z\n-   #49 = Methodref          #207.#214     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-   #50 = Class              #215          // java/lang/IllegalArgumentException\n-   #51 = String             #216          // The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n-   #52 = Class              #217          // java/lang/Object\n-   #53 = String             #218          // \\\\0\n-   #54 = Methodref          #219.#220     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n-   #55 = Methodref          #4.#221       // org/apache/commons/io/FileSystem.name:()Ljava/lang/String;\n-   #56 = Methodref          #207.#222     // java/util/Arrays.toString:([C)Ljava/lang/String;\n-   #57 = Methodref          #66.#223      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-   #58 = Methodref          #50.#224      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #59 = Methodref          #66.#210      // java/lang/String.length:()I\n-   #60 = Methodref          #66.#225      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #61 = Methodref          #66.#226      // java/lang/String.toCharArray:()[C\n-   #62 = Methodref          #66.#227      // java/lang/String.valueOf:([C)Ljava/lang/String;\n-   #63 = String             #98           // GENERIC\n-   #64 = Class              #228          // java/lang/Integer\n-   #65 = Integer            2147483647\n-   #66 = Class              #229          // java/lang/String\n-   #67 = Methodref          #4.#230       // org/apache/commons/io/FileSystem.\"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-   #68 = String             #100          // LINUX\n-   #69 = String             #101          // MAC_OSX\n-   #70 = String             #102          // WINDOWS\n-   #71 = String             #231          // AUX\n-   #72 = String             #232          // COM1\n-   #73 = String             #233          // COM2\n-   #74 = String             #234          // COM3\n-   #75 = String             #235          // COM4\n-   #76 = String             #236          // COM5\n-   #77 = String             #237          // COM6\n-   #78 = String             #238          // COM7\n-   #79 = String             #239          // COM8\n-   #80 = String             #240          // COM9\n-   #81 = String             #241          // CON\n-   #82 = String             #242          // LPT1\n-   #83 = String             #243          // LPT2\n-   #84 = String             #244          // LPT3\n-   #85 = String             #245          // LPT4\n-   #86 = String             #246          // LPT5\n-   #87 = String             #247          // LPT6\n-   #88 = String             #248          // LPT7\n-   #89 = String             #249          // LPT8\n-   #90 = String             #250          // LPT9\n-   #91 = String             #251          // NUL\n-   #92 = String             #252          // PRN\n-   #93 = String             #253          // Linux\n-   #94 = Methodref          #4.#254       // org/apache/commons/io/FileSystem.getOsMatchesName:(Ljava/lang/String;)Z\n-   #95 = String             #255          // Mac\n-   #96 = String             #256          // Windows\n-   #97 = Class              #257          // java/lang/Enum\n-   #98 = Utf8               GENERIC\n-   #99 = Utf8               Lorg/apache/commons/io/FileSystem;\n-  #100 = Utf8               LINUX\n-  #101 = Utf8               MAC_OSX\n-  #102 = Utf8               WINDOWS\n-  #103 = Utf8               IS_OS_LINUX\n-  #104 = Utf8               Z\n-  #105 = Utf8               IS_OS_MAC\n-  #106 = Utf8               OS_NAME_WINDOWS_PREFIX\n-  #107 = Utf8               Ljava/lang/String;\n-  #108 = Utf8               ConstantValue\n-  #109 = Utf8               IS_OS_WINDOWS\n-  #110 = Utf8               casePreserving\n-  #111 = Utf8               caseSensitive\n-  #112 = Utf8               illegalFileNameChars\n-  #113 = Utf8               [C\n-  #114 = Utf8               maxFileNameLength\n-  #115 = Utf8               I\n-  #116 = Utf8               maxPathLength\n-  #117 = Utf8               reservedFileNames\n-  #118 = Utf8               [Ljava/lang/String;\n-  #119 = Utf8               supportsDriveLetter\n-  #120 = Utf8               $VALUES\n-  #121 = Utf8               [Lorg/apache/commons/io/FileSystem;\n-  #122 = Utf8               values\n-  #123 = Utf8               ()[Lorg/apache/commons/io/FileSystem;\n-  #124 = Utf8               Code\n-  #125 = Utf8               LineNumberTable\n-  #126 = Utf8               valueOf\n-  #127 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/FileSystem;\n-  #128 = Utf8               getCurrent\n-  #129 = Utf8               ()Lorg/apache/commons/io/FileSystem;\n-  #130 = Utf8               StackMapTable\n-  #131 = Utf8               getOsMatchesName\n-  #132 = Utf8               (Ljava/lang/String;)Z\n-  #133 = Utf8               getSystemProperty\n-  #134 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #135 = Utf8               isOsNameMatch\n-  #136 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #137 = Utf8               <init>\n-  #138 = Utf8               (Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-  #139 = Utf8               Signature\n-  #140 = Utf8               (ZZII[C[Ljava/lang/String;Z)V\n-  #141 = Utf8               getIllegalFileNameChars\n-  #142 = Utf8               ()[C\n-  #143 = Utf8               getMaxFileNameLength\n-  #144 = Utf8               ()I\n-  #145 = Utf8               getMaxPathLength\n-  #146 = Utf8               getReservedFileNames\n-  #147 = Utf8               ()[Ljava/lang/String;\n-  #148 = Utf8               isCasePreserving\n-  #149 = Utf8               ()Z\n-  #150 = Utf8               isCaseSensitive\n-  #151 = Utf8               isIllegalFileNameChar\n-  #152 = Utf8               (C)Z\n-  #153 = Utf8               isLegalFileName\n-  #154 = Utf8               (Ljava/lang/CharSequence;)Z\n+    #1 = Class              #2            // org/apache/commons/io/FileSystem\n+    #2 = Utf8               org/apache/commons/io/FileSystem\n+    #3 = Fieldref           #1.#4         // org/apache/commons/io/FileSystem.GENERIC:Lorg/apache/commons/io/FileSystem;\n+    #4 = NameAndType        #5:#6         // GENERIC:Lorg/apache/commons/io/FileSystem;\n+    #5 = Utf8               GENERIC\n+    #6 = Utf8               Lorg/apache/commons/io/FileSystem;\n+    #7 = Fieldref           #1.#8         // org/apache/commons/io/FileSystem.LINUX:Lorg/apache/commons/io/FileSystem;\n+    #8 = NameAndType        #9:#6         // LINUX:Lorg/apache/commons/io/FileSystem;\n+    #9 = Utf8               LINUX\n+   #10 = Fieldref           #1.#11        // org/apache/commons/io/FileSystem.MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+   #11 = NameAndType        #12:#6        // MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+   #12 = Utf8               MAC_OSX\n+   #13 = Fieldref           #1.#14        // org/apache/commons/io/FileSystem.WINDOWS:Lorg/apache/commons/io/FileSystem;\n+   #14 = NameAndType        #15:#6        // WINDOWS:Lorg/apache/commons/io/FileSystem;\n+   #15 = Utf8               WINDOWS\n+   #16 = Fieldref           #1.#17        // org/apache/commons/io/FileSystem.$VALUES:[Lorg/apache/commons/io/FileSystem;\n+   #17 = NameAndType        #18:#19       // $VALUES:[Lorg/apache/commons/io/FileSystem;\n+   #18 = Utf8               $VALUES\n+   #19 = Utf8               [Lorg/apache/commons/io/FileSystem;\n+   #20 = Methodref          #21.#22       // \"[Lorg/apache/commons/io/FileSystem;\".clone:()Ljava/lang/Object;\n+   #21 = Class              #19           // \"[Lorg/apache/commons/io/FileSystem;\"\n+   #22 = NameAndType        #23:#24       // clone:()Ljava/lang/Object;\n+   #23 = Utf8               clone\n+   #24 = Utf8               ()Ljava/lang/Object;\n+   #25 = Methodref          #26.#27       // java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #26 = Class              #28           // java/lang/Enum\n+   #27 = NameAndType        #29:#30       // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #28 = Utf8               java/lang/Enum\n+   #29 = Utf8               valueOf\n+   #30 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+   #31 = Fieldref           #1.#32        // org/apache/commons/io/FileSystem.IS_OS_LINUX:Z\n+   #32 = NameAndType        #33:#34       // IS_OS_LINUX:Z\n+   #33 = Utf8               IS_OS_LINUX\n+   #34 = Utf8               Z\n+   #35 = Fieldref           #1.#36        // org/apache/commons/io/FileSystem.IS_OS_MAC:Z\n+   #36 = NameAndType        #37:#34       // IS_OS_MAC:Z\n+   #37 = Utf8               IS_OS_MAC\n+   #38 = Fieldref           #1.#39        // org/apache/commons/io/FileSystem.IS_OS_WINDOWS:Z\n+   #39 = NameAndType        #40:#34       // IS_OS_WINDOWS:Z\n+   #40 = Utf8               IS_OS_WINDOWS\n+   #41 = String             #42           // os.name\n+   #42 = Utf8               os.name\n+   #43 = Methodref          #1.#44        // org/apache/commons/io/FileSystem.getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #44 = NameAndType        #45:#46       // getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #45 = Utf8               getSystemProperty\n+   #46 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #47 = Methodref          #1.#48        // org/apache/commons/io/FileSystem.isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #48 = NameAndType        #49:#50       // isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #49 = Utf8               isOsNameMatch\n+   #50 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #51 = Methodref          #52.#53       // java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #52 = Class              #54           // java/lang/System\n+   #53 = NameAndType        #55:#46       // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+   #54 = Utf8               java/lang/System\n+   #55 = Utf8               getProperty\n+   #56 = Class              #57           // java/lang/SecurityException\n+   #57 = Utf8               java/lang/SecurityException\n+   #58 = Fieldref           #52.#59       // java/lang/System.err:Ljava/io/PrintStream;\n+   #59 = NameAndType        #60:#61       // err:Ljava/io/PrintStream;\n+   #60 = Utf8               err\n+   #61 = Utf8               Ljava/io/PrintStream;\n+   #62 = Class              #63           // java/lang/StringBuilder\n+   #63 = Utf8               java/lang/StringBuilder\n+   #64 = Methodref          #62.#65       // java/lang/StringBuilder.\"<init>\":()V\n+   #65 = NameAndType        #66:#67       // \"<init>\":()V\n+   #66 = Utf8               <init>\n+   #67 = Utf8               ()V\n+   #68 = String             #69           // Caught a SecurityException reading the system property \\'\n+   #69 = Utf8               Caught a SecurityException reading the system property \\'\n+   #70 = Methodref          #62.#71       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #71 = NameAndType        #72:#73       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #72 = Utf8               append\n+   #73 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #74 = String             #75           // \\'; the SystemUtils property value will default to null.\n+   #75 = Utf8               \\'; the SystemUtils property value will default to null.\n+   #76 = Methodref          #62.#77       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #77 = NameAndType        #78:#79       // toString:()Ljava/lang/String;\n+   #78 = Utf8               toString\n+   #79 = Utf8               ()Ljava/lang/String;\n+   #80 = Methodref          #81.#82       // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #81 = Class              #83           // java/io/PrintStream\n+   #82 = NameAndType        #84:#85       // println:(Ljava/lang/String;)V\n+   #83 = Utf8               java/io/PrintStream\n+   #84 = Utf8               println\n+   #85 = Utf8               (Ljava/lang/String;)V\n+   #86 = Fieldref           #87.#88       // java/util/Locale.ROOT:Ljava/util/Locale;\n+   #87 = Class              #89           // java/util/Locale\n+   #88 = NameAndType        #90:#91       // ROOT:Ljava/util/Locale;\n+   #89 = Utf8               java/util/Locale\n+   #90 = Utf8               ROOT\n+   #91 = Utf8               Ljava/util/Locale;\n+   #92 = Methodref          #93.#94       // java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #93 = Class              #95           // java/lang/String\n+   #94 = NameAndType        #96:#97       // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+   #95 = Utf8               java/lang/String\n+   #96 = Utf8               toUpperCase\n+   #97 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n+   #98 = Methodref          #93.#99       // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+   #99 = NameAndType        #100:#101     // startsWith:(Ljava/lang/String;)Z\n+  #100 = Utf8               startsWith\n+  #101 = Utf8               (Ljava/lang/String;)Z\n+  #102 = Methodref          #26.#103      // java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+  #103 = NameAndType        #66:#104      // \"<init>\":(Ljava/lang/String;I)V\n+  #104 = Utf8               (Ljava/lang/String;I)V\n+  #105 = Fieldref           #1.#106       // org/apache/commons/io/FileSystem.maxFileNameLength:I\n+  #106 = NameAndType        #107:#108     // maxFileNameLength:I\n+  #107 = Utf8               maxFileNameLength\n+  #108 = Utf8               I\n+  #109 = Fieldref           #1.#110       // org/apache/commons/io/FileSystem.maxPathLength:I\n+  #110 = NameAndType        #111:#108     // maxPathLength:I\n+  #111 = Utf8               maxPathLength\n+  #112 = String             #113          // illegalFileNameChars\n+  #113 = Utf8               illegalFileNameChars\n+  #114 = Methodref          #115.#116     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #115 = Class              #117          // java/util/Objects\n+  #116 = NameAndType        #118:#119     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #117 = Utf8               java/util/Objects\n+  #118 = Utf8               requireNonNull\n+  #119 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+  #120 = Class              #121          // \"[C\"\n+  #121 = Utf8               [C\n+  #122 = Fieldref           #1.#123       // org/apache/commons/io/FileSystem.illegalFileNameChars:[C\n+  #123 = NameAndType        #113:#121     // illegalFileNameChars:[C\n+  #124 = String             #125          // reservedFileNames\n+  #125 = Utf8               reservedFileNames\n+  #126 = Class              #127          // \"[Ljava/lang/String;\"\n+  #127 = Utf8               [Ljava/lang/String;\n+  #128 = Fieldref           #1.#129       // org/apache/commons/io/FileSystem.reservedFileNames:[Ljava/lang/String;\n+  #129 = NameAndType        #125:#127     // reservedFileNames:[Ljava/lang/String;\n+  #130 = Fieldref           #1.#131       // org/apache/commons/io/FileSystem.caseSensitive:Z\n+  #131 = NameAndType        #132:#34      // caseSensitive:Z\n+  #132 = Utf8               caseSensitive\n+  #133 = Fieldref           #1.#134       // org/apache/commons/io/FileSystem.casePreserving:Z\n+  #134 = NameAndType        #135:#34      // casePreserving:Z\n+  #135 = Utf8               casePreserving\n+  #136 = Fieldref           #1.#137       // org/apache/commons/io/FileSystem.supportsDriveLetter:Z\n+  #137 = NameAndType        #138:#34      // supportsDriveLetter:Z\n+  #138 = Utf8               supportsDriveLetter\n+  #139 = Methodref          #120.#22      // \"[C\".clone:()Ljava/lang/Object;\n+  #140 = Methodref          #126.#22      // \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+  #141 = Methodref          #142.#143     // java/util/Arrays.binarySearch:([CC)I\n+  #142 = Class              #144          // java/util/Arrays\n+  #143 = NameAndType        #145:#146     // binarySearch:([CC)I\n+  #144 = Utf8               java/util/Arrays\n+  #145 = Utf8               binarySearch\n+  #146 = Utf8               ([CC)I\n+  #147 = InterfaceMethodref #148.#149     // java/lang/CharSequence.length:()I\n+  #148 = Class              #150          // java/lang/CharSequence\n+  #149 = NameAndType        #151:#152     // length:()I\n+  #150 = Utf8               java/lang/CharSequence\n+  #151 = Utf8               length\n+  #152 = Utf8               ()I\n+  #153 = Methodref          #1.#154       // org/apache/commons/io/FileSystem.isReservedFileName:(Ljava/lang/CharSequence;)Z\n+  #154 = NameAndType        #155:#156     // isReservedFileName:(Ljava/lang/CharSequence;)Z\n   #155 = Utf8               isReservedFileName\n-  #156 = Utf8               toLegalFileName\n-  #157 = Utf8               (Ljava/lang/String;C)Ljava/lang/String;\n-  #158 = Class              #258          // \"[Ljava/lang/Object;\"\n-  #159 = Utf8               <clinit>\n-  #160 = Utf8               ()V\n-  #161 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n-  #162 = Utf8               SourceFile\n-  #163 = Utf8               FileSystem.java\n-  #164 = NameAndType        #120:#121     // $VALUES:[Lorg/apache/commons/io/FileSystem;\n-  #165 = Class              #121          // \"[Lorg/apache/commons/io/FileSystem;\"\n-  #166 = NameAndType        #259:#260     // clone:()Ljava/lang/Object;\n-  #167 = Utf8               org/apache/commons/io/FileSystem\n-  #168 = NameAndType        #126:#261     // valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #169 = NameAndType        #103:#104     // IS_OS_LINUX:Z\n-  #170 = NameAndType        #100:#99      // LINUX:Lorg/apache/commons/io/FileSystem;\n-  #171 = NameAndType        #105:#104     // IS_OS_MAC:Z\n-  #172 = NameAndType        #101:#99      // MAC_OSX:Lorg/apache/commons/io/FileSystem;\n-  #173 = NameAndType        #109:#104     // IS_OS_WINDOWS:Z\n-  #174 = NameAndType        #102:#99      // WINDOWS:Lorg/apache/commons/io/FileSystem;\n-  #175 = NameAndType        #98:#99       // GENERIC:Lorg/apache/commons/io/FileSystem;\n-  #176 = Utf8               os.name\n-  #177 = NameAndType        #133:#134     // getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #178 = NameAndType        #135:#136     // isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #179 = Class              #262          // java/lang/System\n-  #180 = NameAndType        #263:#134     // getProperty:(Ljava/lang/String;)Ljava/lang/String;\n-  #181 = Utf8               java/lang/SecurityException\n-  #182 = NameAndType        #264:#265     // err:Ljava/io/PrintStream;\n-  #183 = Utf8               java/lang/StringBuilder\n-  #184 = NameAndType        #137:#160     // \"<init>\":()V\n-  #185 = Utf8               Caught a SecurityException reading the system property \\'\n-  #186 = NameAndType        #266:#267     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #187 = Utf8               \\'; the SystemUtils property value will default to null.\n-  #188 = NameAndType        #268:#269     // toString:()Ljava/lang/String;\n-  #189 = Class              #270          // java/io/PrintStream\n-  #190 = NameAndType        #271:#272     // println:(Ljava/lang/String;)V\n-  #191 = Class              #273          // java/util/Locale\n-  #192 = NameAndType        #274:#275     // ROOT:Ljava/util/Locale;\n-  #193 = NameAndType        #276:#277     // toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-  #194 = NameAndType        #278:#132     // startsWith:(Ljava/lang/String;)Z\n-  #195 = NameAndType        #137:#279     // \"<init>\":(Ljava/lang/String;I)V\n-  #196 = NameAndType        #114:#115     // maxFileNameLength:I\n-  #197 = NameAndType        #116:#115     // maxPathLength:I\n-  #198 = Class              #280          // java/util/Objects\n-  #199 = NameAndType        #281:#282     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #200 = NameAndType        #112:#113     // illegalFileNameChars:[C\n-  #201 = NameAndType        #117:#118     // reservedFileNames:[Ljava/lang/String;\n-  #202 = NameAndType        #111:#104     // caseSensitive:Z\n-  #203 = NameAndType        #110:#104     // casePreserving:Z\n-  #204 = NameAndType        #119:#104     // supportsDriveLetter:Z\n-  #205 = Class              #113          // \"[C\"\n-  #206 = Class              #118          // \"[Ljava/lang/String;\"\n-  #207 = Class              #283          // java/util/Arrays\n-  #208 = NameAndType        #284:#285     // binarySearch:([CC)I\n-  #209 = Class              #286          // java/lang/CharSequence\n-  #210 = NameAndType        #287:#144     // length:()I\n-  #211 = NameAndType        #155:#154     // isReservedFileName:(Ljava/lang/CharSequence;)Z\n-  #212 = NameAndType        #288:#289     // charAt:(I)C\n-  #213 = NameAndType        #151:#152     // isIllegalFileNameChar:(C)Z\n-  #214 = NameAndType        #284:#290     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #215 = Utf8               java/lang/IllegalArgumentException\n-  #216 = Utf8               The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n-  #217 = Utf8               java/lang/Object\n-  #218 = Utf8               \\\\0\n-  #219 = Class              #291          // java/lang/Character\n-  #220 = NameAndType        #126:#292     // valueOf:(C)Ljava/lang/Character;\n-  #221 = NameAndType        #293:#269     // name:()Ljava/lang/String;\n-  #222 = NameAndType        #268:#294     // toString:([C)Ljava/lang/String;\n-  #223 = NameAndType        #295:#296     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #224 = NameAndType        #137:#272     // \"<init>\":(Ljava/lang/String;)V\n-  #225 = NameAndType        #297:#298     // substring:(II)Ljava/lang/String;\n-  #226 = NameAndType        #299:#142     // toCharArray:()[C\n-  #227 = NameAndType        #126:#294     // valueOf:([C)Ljava/lang/String;\n-  #228 = Utf8               java/lang/Integer\n-  #229 = Utf8               java/lang/String\n-  #230 = NameAndType        #137:#138     // \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-  #231 = Utf8               AUX\n-  #232 = Utf8               COM1\n-  #233 = Utf8               COM2\n-  #234 = Utf8               COM3\n-  #235 = Utf8               COM4\n-  #236 = Utf8               COM5\n-  #237 = Utf8               COM6\n-  #238 = Utf8               COM7\n-  #239 = Utf8               COM8\n-  #240 = Utf8               COM9\n-  #241 = Utf8               CON\n-  #242 = Utf8               LPT1\n-  #243 = Utf8               LPT2\n-  #244 = Utf8               LPT3\n-  #245 = Utf8               LPT4\n-  #246 = Utf8               LPT5\n+  #156 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #157 = InterfaceMethodref #148.#158     // java/lang/CharSequence.charAt:(I)C\n+  #158 = NameAndType        #159:#160     // charAt:(I)C\n+  #159 = Utf8               charAt\n+  #160 = Utf8               (I)C\n+  #161 = Methodref          #1.#162       // org/apache/commons/io/FileSystem.isIllegalFileNameChar:(C)Z\n+  #162 = NameAndType        #163:#164     // isIllegalFileNameChar:(C)Z\n+  #163 = Utf8               isIllegalFileNameChar\n+  #164 = Utf8               (C)Z\n+  #165 = Methodref          #142.#166     // java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #166 = NameAndType        #145:#167     // binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #167 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n+  #168 = Class              #169          // java/lang/IllegalArgumentException\n+  #169 = Utf8               java/lang/IllegalArgumentException\n+  #170 = String             #171          // The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n+  #171 = Utf8               The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n+  #172 = Class              #173          // java/lang/Object\n+  #173 = Utf8               java/lang/Object\n+  #174 = String             #175          // \\\\0\n+  #175 = Utf8               \\\\0\n+  #176 = Methodref          #177.#178     // java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+  #177 = Class              #179          // java/lang/Character\n+  #178 = NameAndType        #29:#180      // valueOf:(C)Ljava/lang/Character;\n+  #179 = Utf8               java/lang/Character\n+  #180 = Utf8               (C)Ljava/lang/Character;\n+  #181 = Methodref          #1.#182       // org/apache/commons/io/FileSystem.name:()Ljava/lang/String;\n+  #182 = NameAndType        #183:#79      // name:()Ljava/lang/String;\n+  #183 = Utf8               name\n+  #184 = Methodref          #142.#185     // java/util/Arrays.toString:([C)Ljava/lang/String;\n+  #185 = NameAndType        #78:#186      // toString:([C)Ljava/lang/String;\n+  #186 = Utf8               ([C)Ljava/lang/String;\n+  #187 = Methodref          #93.#188      // java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #188 = NameAndType        #189:#190     // format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #189 = Utf8               format\n+  #190 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+  #191 = Methodref          #168.#192     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #192 = NameAndType        #66:#85       // \"<init>\":(Ljava/lang/String;)V\n+  #193 = Methodref          #93.#149      // java/lang/String.length:()I\n+  #194 = Methodref          #93.#195      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #195 = NameAndType        #196:#197     // substring:(II)Ljava/lang/String;\n+  #196 = Utf8               substring\n+  #197 = Utf8               (II)Ljava/lang/String;\n+  #198 = Methodref          #93.#199      // java/lang/String.toCharArray:()[C\n+  #199 = NameAndType        #200:#201     // toCharArray:()[C\n+  #200 = Utf8               toCharArray\n+  #201 = Utf8               ()[C\n+  #202 = Methodref          #93.#203      // java/lang/String.valueOf:([C)Ljava/lang/String;\n+  #203 = NameAndType        #29:#186      // valueOf:([C)Ljava/lang/String;\n+  #204 = String             #5            // GENERIC\n+  #205 = Class              #206          // java/lang/Integer\n+  #206 = Utf8               java/lang/Integer\n+  #207 = Integer            2147483647\n+  #208 = Methodref          #1.#209       // org/apache/commons/io/FileSystem.\"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+  #209 = NameAndType        #66:#210      // \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+  #210 = Utf8               (Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+  #211 = String             #9            // LINUX\n+  #212 = String             #12           // MAC_OSX\n+  #213 = String             #15           // WINDOWS\n+  #214 = String             #215          // AUX\n+  #215 = Utf8               AUX\n+  #216 = String             #217          // COM1\n+  #217 = Utf8               COM1\n+  #218 = String             #219          // COM2\n+  #219 = Utf8               COM2\n+  #220 = String             #221          // COM3\n+  #221 = Utf8               COM3\n+  #222 = String             #223          // COM4\n+  #223 = Utf8               COM4\n+  #224 = String             #225          // COM5\n+  #225 = Utf8               COM5\n+  #226 = String             #227          // COM6\n+  #227 = Utf8               COM6\n+  #228 = String             #229          // COM7\n+  #229 = Utf8               COM7\n+  #230 = String             #231          // COM8\n+  #231 = Utf8               COM8\n+  #232 = String             #233          // COM9\n+  #233 = Utf8               COM9\n+  #234 = String             #235          // CON\n+  #235 = Utf8               CON\n+  #236 = String             #237          // LPT1\n+  #237 = Utf8               LPT1\n+  #238 = String             #239          // LPT2\n+  #239 = Utf8               LPT2\n+  #240 = String             #241          // LPT3\n+  #241 = Utf8               LPT3\n+  #242 = String             #243          // LPT4\n+  #243 = Utf8               LPT4\n+  #244 = String             #245          // LPT5\n+  #245 = Utf8               LPT5\n+  #246 = String             #247          // LPT6\n   #247 = Utf8               LPT6\n-  #248 = Utf8               LPT7\n-  #249 = Utf8               LPT8\n-  #250 = Utf8               LPT9\n-  #251 = Utf8               NUL\n-  #252 = Utf8               PRN\n-  #253 = Utf8               Linux\n-  #254 = NameAndType        #131:#132     // getOsMatchesName:(Ljava/lang/String;)Z\n-  #255 = Utf8               Mac\n-  #256 = Utf8               Windows\n-  #257 = Utf8               java/lang/Enum\n-  #258 = Utf8               [Ljava/lang/Object;\n-  #259 = Utf8               clone\n-  #260 = Utf8               ()Ljava/lang/Object;\n-  #261 = Utf8               (Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-  #262 = Utf8               java/lang/System\n-  #263 = Utf8               getProperty\n-  #264 = Utf8               err\n-  #265 = Utf8               Ljava/io/PrintStream;\n-  #266 = Utf8               append\n-  #267 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #268 = Utf8               toString\n-  #269 = Utf8               ()Ljava/lang/String;\n-  #270 = Utf8               java/io/PrintStream\n-  #271 = Utf8               println\n-  #272 = Utf8               (Ljava/lang/String;)V\n-  #273 = Utf8               java/util/Locale\n-  #274 = Utf8               ROOT\n-  #275 = Utf8               Ljava/util/Locale;\n-  #276 = Utf8               toUpperCase\n-  #277 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;\n-  #278 = Utf8               startsWith\n-  #279 = Utf8               (Ljava/lang/String;I)V\n-  #280 = Utf8               java/util/Objects\n-  #281 = Utf8               requireNonNull\n-  #282 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #283 = Utf8               java/util/Arrays\n-  #284 = Utf8               binarySearch\n-  #285 = Utf8               ([CC)I\n-  #286 = Utf8               java/lang/CharSequence\n-  #287 = Utf8               length\n-  #288 = Utf8               charAt\n-  #289 = Utf8               (I)C\n-  #290 = Utf8               ([Ljava/lang/Object;Ljava/lang/Object;)I\n-  #291 = Utf8               java/lang/Character\n-  #292 = Utf8               (C)Ljava/lang/Character;\n-  #293 = Utf8               name\n-  #294 = Utf8               ([C)Ljava/lang/String;\n-  #295 = Utf8               format\n-  #296 = Utf8               (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-  #297 = Utf8               substring\n-  #298 = Utf8               (II)Ljava/lang/String;\n-  #299 = Utf8               toCharArray\n+  #248 = String             #249          // LPT7\n+  #249 = Utf8               LPT7\n+  #250 = String             #251          // LPT8\n+  #251 = Utf8               LPT8\n+  #252 = String             #253          // LPT9\n+  #253 = Utf8               LPT9\n+  #254 = String             #255          // NUL\n+  #255 = Utf8               NUL\n+  #256 = String             #257          // PRN\n+  #257 = Utf8               PRN\n+  #258 = Methodref          #1.#259       // org/apache/commons/io/FileSystem.$values:()[Lorg/apache/commons/io/FileSystem;\n+  #259 = NameAndType        #260:#261     // $values:()[Lorg/apache/commons/io/FileSystem;\n+  #260 = Utf8               $values\n+  #261 = Utf8               ()[Lorg/apache/commons/io/FileSystem;\n+  #262 = String             #263          // Linux\n+  #263 = Utf8               Linux\n+  #264 = Methodref          #1.#265       // org/apache/commons/io/FileSystem.getOsMatchesName:(Ljava/lang/String;)Z\n+  #265 = NameAndType        #266:#101     // getOsMatchesName:(Ljava/lang/String;)Z\n+  #266 = Utf8               getOsMatchesName\n+  #267 = String             #268          // Mac\n+  #268 = Utf8               Mac\n+  #269 = String             #270          // Windows\n+  #270 = Utf8               Windows\n+  #271 = Utf8               OS_NAME_WINDOWS_PREFIX\n+  #272 = Utf8               Ljava/lang/String;\n+  #273 = Utf8               ConstantValue\n+  #274 = Utf8               values\n+  #275 = Utf8               Code\n+  #276 = Utf8               LineNumberTable\n+  #277 = Utf8               (Ljava/lang/String;)Lorg/apache/commons/io/FileSystem;\n+  #278 = Utf8               getCurrent\n+  #279 = Utf8               ()Lorg/apache/commons/io/FileSystem;\n+  #280 = Utf8               StackMapTable\n+  #281 = Utf8               Signature\n+  #282 = Utf8               (ZZII[C[Ljava/lang/String;Z)V\n+  #283 = Utf8               getIllegalFileNameChars\n+  #284 = Utf8               getMaxFileNameLength\n+  #285 = Utf8               getMaxPathLength\n+  #286 = Utf8               getReservedFileNames\n+  #287 = Utf8               ()[Ljava/lang/String;\n+  #288 = Utf8               isCasePreserving\n+  #289 = Utf8               ()Z\n+  #290 = Utf8               isCaseSensitive\n+  #291 = Utf8               isLegalFileName\n+  #292 = Utf8               toLegalFileName\n+  #293 = Utf8               (Ljava/lang/String;C)Ljava/lang/String;\n+  #294 = Class              #295          // \"[Ljava/lang/Object;\"\n+  #295 = Utf8               [Ljava/lang/Object;\n+  #296 = Utf8               <clinit>\n+  #297 = Utf8               Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n+  #298 = Utf8               SourceFile\n+  #299 = Utf8               FileSystem.java\n {\n   public static final org.apache.commons.io.FileSystem GENERIC;\n     descriptor: Lorg/apache/commons/io/FileSystem;\n     flags: (0x4019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL, ACC_ENUM\n \n   public static final org.apache.commons.io.FileSystem LINUX;\n     descriptor: Lorg/apache/commons/io/FileSystem;\n@@ -374,52 +374,52 @@\n     flags: (0x101a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL, ACC_SYNTHETIC\n \n   public static org.apache.commons.io.FileSystem[] values();\n     descriptor: ()[Lorg/apache/commons/io/FileSystem;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/FileSystem;\n-         3: invokevirtual #2                  // Method \"[Lorg/apache/commons/io/FileSystem;\".clone:()Ljava/lang/Object;\n-         6: checkcast     #3                  // class \"[Lorg/apache/commons/io/FileSystem;\"\n+         0: getstatic     #16                 // Field $VALUES:[Lorg/apache/commons/io/FileSystem;\n+         3: invokevirtual #20                 // Method \"[Lorg/apache/commons/io/FileSystem;\".clone:()Ljava/lang/Object;\n+         6: checkcast     #21                 // class \"[Lorg/apache/commons/io/FileSystem;\"\n          9: areturn\n       LineNumberTable:\n         line 34: 0\n \n   public static org.apache.commons.io.FileSystem valueOf(java.lang.String);\n     descriptor: (Ljava/lang/String;)Lorg/apache/commons/io/FileSystem;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #4                  // class org/apache/commons/io/FileSystem\n+         0: ldc           #1                  // class org/apache/commons/io/FileSystem\n          2: aload_0\n-         3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n-         6: checkcast     #4                  // class org/apache/commons/io/FileSystem\n+         3: invokestatic  #25                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;\n+         6: checkcast     #1                  // class org/apache/commons/io/FileSystem\n          9: areturn\n       LineNumberTable:\n         line 34: 0\n \n   public static org.apache.commons.io.FileSystem getCurrent();\n     descriptor: ()Lorg/apache/commons/io/FileSystem;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n-         0: getstatic     #6                  // Field IS_OS_LINUX:Z\n+         0: getstatic     #31                 // Field IS_OS_LINUX:Z\n          3: ifeq          10\n          6: getstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;\n          9: areturn\n-        10: getstatic     #8                  // Field IS_OS_MAC:Z\n+        10: getstatic     #35                 // Field IS_OS_MAC:Z\n         13: ifeq          20\n-        16: getstatic     #9                  // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+        16: getstatic     #10                 // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;\n         19: areturn\n-        20: getstatic     #10                 // Field IS_OS_WINDOWS:Z\n+        20: getstatic     #38                 // Field IS_OS_WINDOWS:Z\n         23: ifeq          30\n-        26: getstatic     #11                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;\n+        26: getstatic     #13                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;\n         29: areturn\n-        30: getstatic     #12                 // Field GENERIC:Lorg/apache/commons/io/FileSystem;\n+        30: getstatic     #3                  // Field GENERIC:Lorg/apache/commons/io/FileSystem;\n         33: areturn\n       LineNumberTable:\n         line 133: 0\n         line 134: 6\n         line 136: 10\n         line 137: 16\n         line 139: 20\n@@ -431,43 +431,43 @@\n         frame_type = 9 /* same */\n \n   private static boolean getOsMatchesName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: ldc           #13                 // String os.name\n-         2: invokestatic  #14                 // Method getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         0: ldc           #41                 // String os.name\n+         2: invokestatic  #43                 // Method getSystemProperty:(Ljava/lang/String;)Ljava/lang/String;\n          5: aload_0\n-         6: invokestatic  #15                 // Method isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n+         6: invokestatic  #47                 // Method isOsNameMatch:(Ljava/lang/String;Ljava/lang/String;)Z\n          9: ireturn\n       LineNumberTable:\n         line 153: 0\n \n   private static java.lang.String getSystemProperty(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: invokestatic  #16                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n+         1: invokestatic  #51                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;\n          4: areturn\n          5: astore_1\n-         6: getstatic     #18                 // Field java/lang/System.err:Ljava/io/PrintStream;\n-         9: new           #19                 // class java/lang/StringBuilder\n+         6: getstatic     #58                 // Field java/lang/System.err:Ljava/io/PrintStream;\n+         9: new           #62                 // class java/lang/StringBuilder\n         12: dup\n-        13: invokespecial #20                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        16: ldc           #21                 // String Caught a SecurityException reading the system property \\'\n-        18: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: invokespecial #64                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        16: ldc           #68                 // String Caught a SecurityException reading the system property \\'\n+        18: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         21: aload_0\n-        22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        25: ldc           #23                 // String \\'; the SystemUtils property value will default to null.\n-        27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        30: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        33: invokevirtual #25                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+        22: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        25: ldc           #74                 // String \\'; the SystemUtils property value will default to null.\n+        27: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        30: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        33: invokevirtual #80                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n         36: aconst_null\n         37: areturn\n       Exception table:\n          from    to  target type\n              0     4     5   Class java/lang/SecurityException\n       LineNumberTable:\n         line 171: 0\n@@ -484,20 +484,20 @@\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getstatic     #26                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-        10: invokevirtual #27                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+         7: getstatic     #86                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+        10: invokevirtual #92                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n         13: aload_1\n-        14: getstatic     #26                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n-        17: invokevirtual #27                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n-        20: invokevirtual #28                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        14: getstatic     #86                 // Field java/util/Locale.ROOT:Ljava/util/Locale;\n+        17: invokevirtual #92                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;\n+        20: invokevirtual #98                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n         23: ireturn\n       LineNumberTable:\n         line 193: 0\n         line 194: 4\n         line 196: 6\n       StackMapTable: number_of_entries = 1\n         frame_type = 6 /* same */\n@@ -506,134 +506,134 @@\n     descriptor: (Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=10, args_size=10\n          0: aload_0\n          1: aload_1\n          2: iload_2\n-         3: invokespecial #29                 // Method java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n+         3: invokespecial #102                // Method java/lang/Enum.\"<init>\":(Ljava/lang/String;I)V\n          6: aload_0\n          7: iload         5\n-         9: putfield      #30                 // Field maxFileNameLength:I\n+         9: putfield      #105                // Field maxFileNameLength:I\n         12: aload_0\n         13: iload         6\n-        15: putfield      #31                 // Field maxPathLength:I\n+        15: putfield      #109                // Field maxPathLength:I\n         18: aload_0\n         19: aload         7\n-        21: ldc           #32                 // String illegalFileNameChars\n-        23: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        26: checkcast     #34                 // class \"[C\"\n-        29: putfield      #35                 // Field illegalFileNameChars:[C\n+        21: ldc           #112                // String illegalFileNameChars\n+        23: invokestatic  #114                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        26: checkcast     #120                // class \"[C\"\n+        29: putfield      #122                // Field illegalFileNameChars:[C\n         32: aload_0\n         33: aload         8\n-        35: ldc           #36                 // String reservedFileNames\n-        37: invokestatic  #33                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-        40: checkcast     #37                 // class \"[Ljava/lang/String;\"\n-        43: putfield      #38                 // Field reservedFileNames:[Ljava/lang/String;\n+        35: ldc           #124                // String reservedFileNames\n+        37: invokestatic  #114                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+        40: checkcast     #126                // class \"[Ljava/lang/String;\"\n+        43: putfield      #128                // Field reservedFileNames:[Ljava/lang/String;\n         46: aload_0\n         47: iload_3\n-        48: putfield      #39                 // Field caseSensitive:Z\n+        48: putfield      #130                // Field caseSensitive:Z\n         51: aload_0\n         52: iload         4\n-        54: putfield      #40                 // Field casePreserving:Z\n+        54: putfield      #133                // Field casePreserving:Z\n         57: aload_0\n         58: iload         9\n-        60: putfield      #41                 // Field supportsDriveLetter:Z\n+        60: putfield      #136                // Field supportsDriveLetter:Z\n         63: return\n       LineNumberTable:\n         line 220: 0\n         line 221: 6\n         line 222: 12\n         line 223: 18\n         line 224: 32\n         line 225: 46\n         line 226: 51\n         line 227: 57\n         line 228: 63\n-    Signature: #140                         // (ZZII[C[Ljava/lang/String;Z)V\n+    Signature: #282                         // (ZZII[C[Ljava/lang/String;Z)V\n \n   public char[] getIllegalFileNameChars();\n     descriptor: ()[C\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #35                 // Field illegalFileNameChars:[C\n-         4: invokevirtual #42                 // Method \"[C\".clone:()Ljava/lang/Object;\n-         7: checkcast     #34                 // class \"[C\"\n+         1: getfield      #122                // Field illegalFileNameChars:[C\n+         4: invokevirtual #139                // Method \"[C\".clone:()Ljava/lang/Object;\n+         7: checkcast     #120                // class \"[C\"\n         10: areturn\n       LineNumberTable:\n         line 236: 0\n \n   public int getMaxFileNameLength();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #30                 // Field maxFileNameLength:I\n+         1: getfield      #105                // Field maxFileNameLength:I\n          4: ireturn\n       LineNumberTable:\n         line 245: 0\n \n   public int getMaxPathLength();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #31                 // Field maxPathLength:I\n+         1: getfield      #109                // Field maxPathLength:I\n          4: ireturn\n       LineNumberTable:\n         line 254: 0\n \n   public java.lang.String[] getReservedFileNames();\n     descriptor: ()[Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #38                 // Field reservedFileNames:[Ljava/lang/String;\n-         4: invokevirtual #43                 // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n-         7: checkcast     #37                 // class \"[Ljava/lang/String;\"\n+         1: getfield      #128                // Field reservedFileNames:[Ljava/lang/String;\n+         4: invokevirtual #140                // Method \"[Ljava/lang/String;\".clone:()Ljava/lang/Object;\n+         7: checkcast     #126                // class \"[Ljava/lang/String;\"\n         10: areturn\n       LineNumberTable:\n         line 263: 0\n \n   public boolean isCasePreserving();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #40                 // Field casePreserving:Z\n+         1: getfield      #133                // Field casePreserving:Z\n          4: ireturn\n       LineNumberTable:\n         line 272: 0\n \n   public boolean isCaseSensitive();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #39                 // Field caseSensitive:Z\n+         1: getfield      #130                // Field caseSensitive:Z\n          4: ireturn\n       LineNumberTable:\n         line 281: 0\n \n   private boolean isIllegalFileNameChar(char);\n     descriptor: (C)Z\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #35                 // Field illegalFileNameChars:[C\n+         1: getfield      #122                // Field illegalFileNameChars:[C\n          4: iload_1\n-         5: invokestatic  #44                 // Method java/util/Arrays.binarySearch:([CC)I\n+         5: invokestatic  #141                // Method java/util/Arrays.binarySearch:([CC)I\n          8: iflt          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n       LineNumberTable:\n         line 292: 0\n@@ -646,40 +646,40 @@\n     descriptor: (Ljava/lang/CharSequence;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_1\n          1: ifnull        26\n          4: aload_1\n-         5: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+         5: invokeinterface #147,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         10: ifeq          26\n         13: aload_1\n-        14: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        14: invokeinterface #147,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         19: aload_0\n-        20: getfield      #30                 // Field maxFileNameLength:I\n+        20: getfield      #105                // Field maxFileNameLength:I\n         23: if_icmple     28\n         26: iconst_0\n         27: ireturn\n         28: aload_0\n         29: aload_1\n-        30: invokevirtual #46                 // Method isReservedFileName:(Ljava/lang/CharSequence;)Z\n+        30: invokevirtual #153                // Method isReservedFileName:(Ljava/lang/CharSequence;)Z\n         33: ifeq          38\n         36: iconst_0\n         37: ireturn\n         38: iconst_0\n         39: istore_2\n         40: iload_2\n         41: aload_1\n-        42: invokeinterface #45,  1           // InterfaceMethod java/lang/CharSequence.length:()I\n+        42: invokeinterface #147,  1          // InterfaceMethod java/lang/CharSequence.length:()I\n         47: if_icmpge     72\n         50: aload_0\n         51: aload_1\n         52: iload_2\n-        53: invokeinterface #47,  2           // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n-        58: invokespecial #48                 // Method isIllegalFileNameChar:(C)Z\n+        53: invokeinterface #157,  2          // InterfaceMethod java/lang/CharSequence.charAt:(I)C\n+        58: invokespecial #161                // Method isIllegalFileNameChar:(C)Z\n         61: ifeq          66\n         64: iconst_0\n         65: ireturn\n         66: iinc          2, 1\n         69: goto          40\n         72: iconst_1\n         73: ireturn\n@@ -706,17 +706,17 @@\n \n   public boolean isReservedFileName(java.lang.CharSequence);\n     descriptor: (Ljava/lang/CharSequence;)Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n-         1: getfield      #38                 // Field reservedFileNames:[Ljava/lang/String;\n+         1: getfield      #128                // Field reservedFileNames:[Ljava/lang/String;\n          4: aload_1\n-         5: invokestatic  #49                 // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n+         5: invokestatic  #165                // Method java/util/Arrays.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I\n          8: iflt          15\n         11: iconst_1\n         12: goto          16\n         15: iconst_0\n         16: ireturn\n       LineNumberTable:\n         line 327: 0\n@@ -727,98 +727,98 @@\n \n   public boolean supportsDriveLetter();\n     descriptor: ()Z\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #41                 // Field supportsDriveLetter:Z\n+         1: getfield      #136                // Field supportsDriveLetter:Z\n          4: ireturn\n       LineNumberTable:\n         line 343: 0\n \n   public java.lang.String toLegalFileName(java.lang.String, char);\n     descriptor: (Ljava/lang/String;C)Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=7, args_size=3\n          0: aload_0\n          1: iload_2\n-         2: invokespecial #48                 // Method isIllegalFileNameChar:(C)Z\n+         2: invokespecial #161                // Method isIllegalFileNameChar:(C)Z\n          5: ifeq          58\n-         8: new           #50                 // class java/lang/IllegalArgumentException\n+         8: new           #168                // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #51                 // String The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n+        12: ldc           #170                // String The replacement character \\'%s\\' cannot be one of the %s illegal characters: %s\n         14: iconst_3\n-        15: anewarray     #52                 // class java/lang/Object\n+        15: anewarray     #172                // class java/lang/Object\n         18: dup\n         19: iconst_0\n         20: iload_2\n         21: ifne          29\n-        24: ldc           #53                 // String \\\\0\n+        24: ldc           #174                // String \\\\0\n         26: goto          33\n         29: iload_2\n-        30: invokestatic  #54                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n+        30: invokestatic  #176                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;\n         33: aastore\n         34: dup\n         35: iconst_1\n         36: aload_0\n-        37: invokevirtual #55                 // Method name:()Ljava/lang/String;\n+        37: invokevirtual #181                // Method name:()Ljava/lang/String;\n         40: aastore\n         41: dup\n         42: iconst_2\n         43: aload_0\n-        44: getfield      #35                 // Field illegalFileNameChars:[C\n-        47: invokestatic  #56                 // Method java/util/Arrays.toString:([C)Ljava/lang/String;\n+        44: getfield      #122                // Field illegalFileNameChars:[C\n+        47: invokestatic  #184                // Method java/util/Arrays.toString:([C)Ljava/lang/String;\n         50: aastore\n-        51: invokestatic  #57                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n-        54: invokespecial #58                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        51: invokestatic  #187                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;\n+        54: invokespecial #191                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         57: athrow\n         58: aload_1\n-        59: invokevirtual #59                 // Method java/lang/String.length:()I\n+        59: invokevirtual #193                // Method java/lang/String.length:()I\n         62: aload_0\n-        63: getfield      #30                 // Field maxFileNameLength:I\n+        63: getfield      #105                // Field maxFileNameLength:I\n         66: if_icmple     81\n         69: aload_1\n         70: iconst_0\n         71: aload_0\n-        72: getfield      #30                 // Field maxFileNameLength:I\n-        75: invokevirtual #60                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        72: getfield      #105                // Field maxFileNameLength:I\n+        75: invokevirtual #194                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         78: goto          82\n         81: aload_1\n         82: astore_3\n         83: iconst_0\n         84: istore        4\n         86: aload_3\n-        87: invokevirtual #61                 // Method java/lang/String.toCharArray:()[C\n+        87: invokevirtual #198                // Method java/lang/String.toCharArray:()[C\n         90: astore        5\n         92: iconst_0\n         93: istore        6\n         95: iload         6\n         97: aload         5\n         99: arraylength\n        100: if_icmpge     130\n        103: aload_0\n        104: aload         5\n        106: iload         6\n        108: caload\n-       109: invokespecial #48                 // Method isIllegalFileNameChar:(C)Z\n+       109: invokespecial #161                // Method isIllegalFileNameChar:(C)Z\n        112: ifeq          124\n        115: aload         5\n        117: iload         6\n        119: iload_2\n        120: castore\n        121: iconst_1\n        122: istore        4\n        124: iinc          6, 1\n        127: goto          95\n        130: iload         4\n        132: ifeq          143\n        135: aload         5\n-       137: invokestatic  #62                 // Method java/lang/String.valueOf:([C)Ljava/lang/String;\n+       137: invokestatic  #202                // Method java/lang/String.valueOf:([C)Ljava/lang/String;\n        140: goto          144\n        143: aload_3\n        144: areturn\n       LineNumberTable:\n         line 359: 0\n         line 360: 8\n         line 363: 20\n@@ -853,41 +853,68 @@\n         frame_type = 28 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 5\n         frame_type = 12 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ class java/lang/String ]\n \n+  private static org.apache.commons.io.FileSystem[] $values();\n+    descriptor: ()[Lorg/apache/commons/io/FileSystem;\n+    flags: (0x100a) ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC\n+    Code:\n+      stack=4, locals=0, args_size=0\n+         0: iconst_4\n+         1: anewarray     #1                  // class org/apache/commons/io/FileSystem\n+         4: dup\n+         5: iconst_0\n+         6: getstatic     #3                  // Field GENERIC:Lorg/apache/commons/io/FileSystem;\n+         9: aastore\n+        10: dup\n+        11: iconst_1\n+        12: getstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;\n+        15: aastore\n+        16: dup\n+        17: iconst_2\n+        18: getstatic     #10                 // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+        21: aastore\n+        22: dup\n+        23: iconst_3\n+        24: getstatic     #13                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;\n+        27: aastore\n+        28: areturn\n+      LineNumberTable:\n+        line 34: 0\n+\n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=13, locals=0, args_size=0\n-         0: new           #4                  // class org/apache/commons/io/FileSystem\n+         0: new           #1                  // class org/apache/commons/io/FileSystem\n          3: dup\n-         4: ldc           #63                 // String GENERIC\n+         4: ldc           #204                // String GENERIC\n          6: iconst_0\n          7: iconst_0\n          8: iconst_0\n-         9: ldc           #65                 // int 2147483647\n-        11: ldc           #65                 // int 2147483647\n+         9: ldc           #207                // int 2147483647\n+        11: ldc           #207                // int 2147483647\n         13: iconst_1\n         14: newarray       char\n         16: dup\n         17: iconst_0\n         18: iconst_0\n         19: castore\n         20: iconst_0\n-        21: anewarray     #66                 // class java/lang/String\n+        21: anewarray     #93                 // class java/lang/String\n         24: iconst_0\n-        25: invokespecial #67                 // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-        28: putstatic     #12                 // Field GENERIC:Lorg/apache/commons/io/FileSystem;\n-        31: new           #4                  // class org/apache/commons/io/FileSystem\n+        25: invokespecial #208                // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+        28: putstatic     #3                  // Field GENERIC:Lorg/apache/commons/io/FileSystem;\n+        31: new           #1                  // class org/apache/commons/io/FileSystem\n         34: dup\n-        35: ldc           #68                 // String LINUX\n+        35: ldc           #211                // String LINUX\n         37: iconst_1\n         38: iconst_1\n         39: iconst_1\n         40: sipush        255\n         43: sipush        4096\n         46: iconst_2\n         47: newarray       char\n@@ -896,21 +923,21 @@\n         51: iconst_0\n         52: castore\n         53: dup\n         54: iconst_1\n         55: bipush        47\n         57: castore\n         58: iconst_0\n-        59: anewarray     #66                 // class java/lang/String\n+        59: anewarray     #93                 // class java/lang/String\n         62: iconst_0\n-        63: invokespecial #67                 // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+        63: invokespecial #208                // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n         66: putstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;\n-        69: new           #4                  // class org/apache/commons/io/FileSystem\n+        69: new           #1                  // class org/apache/commons/io/FileSystem\n         72: dup\n-        73: ldc           #69                 // String MAC_OSX\n+        73: ldc           #212                // String MAC_OSX\n         75: iconst_2\n         76: iconst_1\n         77: iconst_1\n         78: sipush        255\n         81: sipush        1024\n         84: iconst_3\n         85: newarray       char\n@@ -923,21 +950,21 @@\n         93: bipush        47\n         95: castore\n         96: dup\n         97: iconst_2\n         98: bipush        58\n        100: castore\n        101: iconst_0\n-       102: anewarray     #66                 // class java/lang/String\n+       102: anewarray     #93                 // class java/lang/String\n        105: iconst_0\n-       106: invokespecial #67                 // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-       109: putstatic     #9                  // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;\n-       112: new           #4                  // class org/apache/commons/io/FileSystem\n+       106: invokespecial #208                // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+       109: putstatic     #10                 // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;\n+       112: new           #1                  // class org/apache/commons/io/FileSystem\n        115: dup\n-       116: ldc           #70                 // String WINDOWS\n+       116: ldc           #213                // String WINDOWS\n        118: iconst_3\n        119: iconst_0\n        120: iconst_1\n        121: sipush        255\n        124: sipush        32000\n        127: bipush        41\n        129: newarray       char\n@@ -1102,140 +1129,123 @@\n        356: bipush        92\n        358: castore\n        359: dup\n        360: bipush        40\n        362: bipush        124\n        364: castore\n        365: bipush        22\n-       367: anewarray     #66                 // class java/lang/String\n+       367: anewarray     #93                 // class java/lang/String\n        370: dup\n        371: iconst_0\n-       372: ldc           #71                 // String AUX\n+       372: ldc           #214                // String AUX\n        374: aastore\n        375: dup\n        376: iconst_1\n-       377: ldc           #72                 // String COM1\n+       377: ldc           #216                // String COM1\n        379: aastore\n        380: dup\n        381: iconst_2\n-       382: ldc           #73                 // String COM2\n+       382: ldc           #218                // String COM2\n        384: aastore\n        385: dup\n        386: iconst_3\n-       387: ldc           #74                 // String COM3\n+       387: ldc           #220                // String COM3\n        389: aastore\n        390: dup\n        391: iconst_4\n-       392: ldc           #75                 // String COM4\n+       392: ldc           #222                // String COM4\n        394: aastore\n        395: dup\n        396: iconst_5\n-       397: ldc           #76                 // String COM5\n+       397: ldc           #224                // String COM5\n        399: aastore\n        400: dup\n        401: bipush        6\n-       403: ldc           #77                 // String COM6\n+       403: ldc           #226                // String COM6\n        405: aastore\n        406: dup\n        407: bipush        7\n-       409: ldc           #78                 // String COM7\n+       409: ldc           #228                // String COM7\n        411: aastore\n        412: dup\n        413: bipush        8\n-       415: ldc           #79                 // String COM8\n+       415: ldc           #230                // String COM8\n        417: aastore\n        418: dup\n        419: bipush        9\n-       421: ldc           #80                 // String COM9\n+       421: ldc           #232                // String COM9\n        423: aastore\n        424: dup\n        425: bipush        10\n-       427: ldc           #81                 // String CON\n+       427: ldc           #234                // String CON\n        429: aastore\n        430: dup\n        431: bipush        11\n-       433: ldc           #82                 // String LPT1\n+       433: ldc           #236                // String LPT1\n        435: aastore\n        436: dup\n        437: bipush        12\n-       439: ldc           #83                 // String LPT2\n+       439: ldc           #238                // String LPT2\n        441: aastore\n        442: dup\n        443: bipush        13\n-       445: ldc           #84                 // String LPT3\n+       445: ldc           #240                // String LPT3\n        447: aastore\n        448: dup\n        449: bipush        14\n-       451: ldc           #85                 // String LPT4\n+       451: ldc           #242                // String LPT4\n        453: aastore\n        454: dup\n        455: bipush        15\n-       457: ldc           #86                 // String LPT5\n+       457: ldc           #244                // String LPT5\n        459: aastore\n        460: dup\n        461: bipush        16\n-       463: ldc           #87                 // String LPT6\n+       463: ldc           #246                // String LPT6\n        465: aastore\n        466: dup\n        467: bipush        17\n-       469: ldc           #88                 // String LPT7\n+       469: ldc           #248                // String LPT7\n        471: aastore\n        472: dup\n        473: bipush        18\n-       475: ldc           #89                 // String LPT8\n+       475: ldc           #250                // String LPT8\n        477: aastore\n        478: dup\n        479: bipush        19\n-       481: ldc           #90                 // String LPT9\n+       481: ldc           #252                // String LPT9\n        483: aastore\n        484: dup\n        485: bipush        20\n-       487: ldc           #91                 // String NUL\n+       487: ldc           #254                // String NUL\n        489: aastore\n        490: dup\n        491: bipush        21\n-       493: ldc           #92                 // String PRN\n-       495: aastore\n-       496: iconst_1\n-       497: invokespecial #67                 // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n-       500: putstatic     #11                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;\n-       503: iconst_4\n-       504: anewarray     #4                  // class org/apache/commons/io/FileSystem\n-       507: dup\n-       508: iconst_0\n-       509: getstatic     #12                 // Field GENERIC:Lorg/apache/commons/io/FileSystem;\n-       512: aastore\n-       513: dup\n-       514: iconst_1\n-       515: getstatic     #7                  // Field LINUX:Lorg/apache/commons/io/FileSystem;\n-       518: aastore\n-       519: dup\n-       520: iconst_2\n-       521: getstatic     #9                  // Field MAC_OSX:Lorg/apache/commons/io/FileSystem;\n-       524: aastore\n-       525: dup\n-       526: iconst_3\n-       527: getstatic     #11                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;\n-       530: aastore\n-       531: putstatic     #1                  // Field $VALUES:[Lorg/apache/commons/io/FileSystem;\n-       534: ldc           #93                 // String Linux\n-       536: invokestatic  #94                 // Method getOsMatchesName:(Ljava/lang/String;)Z\n-       539: putstatic     #6                  // Field IS_OS_LINUX:Z\n-       542: ldc           #95                 // String Mac\n-       544: invokestatic  #94                 // Method getOsMatchesName:(Ljava/lang/String;)Z\n-       547: putstatic     #8                  // Field IS_OS_MAC:Z\n-       550: ldc           #96                 // String Windows\n-       552: invokestatic  #94                 // Method getOsMatchesName:(Ljava/lang/String;)Z\n-       555: putstatic     #10                 // Field IS_OS_WINDOWS:Z\n-       558: return\n+       493: ldc_w         #256                // String PRN\n+       496: aastore\n+       497: iconst_1\n+       498: invokespecial #208                // Method \"<init>\":(Ljava/lang/String;IZZII[C[Ljava/lang/String;Z)V\n+       501: putstatic     #13                 // Field WINDOWS:Lorg/apache/commons/io/FileSystem;\n+       504: invokestatic  #258                // Method $values:()[Lorg/apache/commons/io/FileSystem;\n+       507: putstatic     #16                 // Field $VALUES:[Lorg/apache/commons/io/FileSystem;\n+       510: ldc_w         #262                // String Linux\n+       513: invokestatic  #264                // Method getOsMatchesName:(Ljava/lang/String;)Z\n+       516: putstatic     #31                 // Field IS_OS_LINUX:Z\n+       519: ldc_w         #267                // String Mac\n+       522: invokestatic  #264                // Method getOsMatchesName:(Ljava/lang/String;)Z\n+       525: putstatic     #35                 // Field IS_OS_MAC:Z\n+       528: ldc_w         #269                // String Windows\n+       531: invokestatic  #264                // Method getOsMatchesName:(Ljava/lang/String;)Z\n+       534: putstatic     #38                 // Field IS_OS_WINDOWS:Z\n+       537: return\n       LineNumberTable:\n         line 39: 0\n         line 44: 31\n         line 56: 69\n         line 77: 112\n-        line 34: 503\n-        line 100: 534\n-        line 110: 542\n-        line 125: 550\n+        line 34: 504\n+        line 100: 510\n+        line 110: 519\n+        line 125: 528\n }\n-Signature: #161                         // Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n+Signature: #297                         // Ljava/lang/Enum<Lorg/apache/commons/io/FileSystem;>;\n SourceFile: \"FileSystem.java\"\n"}]}
