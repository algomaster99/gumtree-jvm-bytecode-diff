{"diffoscope-json-version": 1, "source1": "first/Attribute.class", "source2": "second/Attribute.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,95 +1,95 @@\n-  SHA-256 checksum 63a45db40fc03d685f4704cbbbbc58579539e52857b08a0f5fc0f7bd1e41efa7\n+  SHA-256 checksum 355ecd11a88b87c8166fde5831060ac9c53f657d36512dc7d30de7f370080ff3\n   Compiled from \"Attribute.java\"\n public abstract class org.apache.commons.compress.harmony.unpack200.bytecode.Attribute extends org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry\n   minor version: 0\n   major version: 52\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #9                          // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-  super_class: #11                        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+  this_class: #8                          // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+  super_class: #2                         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n   interfaces: 0, fields: 2, methods: 12, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#47        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.\"<init>\":()V\n-   #2 = Fieldref           #9.#48         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-   #3 = Fieldref           #9.#49         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.attributeNameIndex:I\n-   #4 = Methodref          #50.#51        // java/io/DataOutputStream.writeShort:(I)V\n-   #5 = Methodref          #9.#52         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.getLength:()I\n-   #6 = Methodref          #50.#53        // java/io/DataOutputStream.writeInt:(I)V\n-   #7 = Methodref          #9.#54         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.writeBody:(Ljava/io/DataOutputStream;)V\n-   #8 = Methodref          #55.#56        // java/lang/Object.getClass:()Ljava/lang/Class;\n-   #9 = Class              #57            // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-  #10 = Methodref          #58.#59        // org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.equals:(Ljava/lang/Object;)Z\n-  #11 = Class              #60            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #12 = Methodref          #9.#61         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #13 = Methodref          #58.#62        // org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.hashCode:()I\n-  #14 = Methodref          #11.#63        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #15 = Methodref          #64.#65        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #16 = Utf8               attributeName\n-  #17 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #18 = Utf8               attributeNameIndex\n-  #19 = Utf8               I\n-  #20 = Utf8               <init>\n-  #21 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n-  #22 = Utf8               Code\n-  #23 = Utf8               LineNumberTable\n-  #24 = Utf8               doWrite\n-  #25 = Utf8               (Ljava/io/DataOutputStream;)V\n-  #26 = Utf8               Exceptions\n-  #27 = Class              #66            // java/io/IOException\n-  #28 = Utf8               equals\n-  #29 = Utf8               (Ljava/lang/Object;)Z\n-  #30 = Utf8               StackMapTable\n-  #31 = Utf8               getAttributeName\n-  #32 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #33 = Utf8               getLength\n-  #34 = Utf8               ()I\n-  #35 = Utf8               getLengthIncludingHeader\n-  #36 = Utf8               getNestedClassFileEntries\n-  #37 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n-  #38 = Utf8               hasBCIRenumbering\n-  #39 = Utf8               ()Z\n-  #40 = Utf8               isSourceFileAttribute\n-  #41 = Utf8               hashCode\n-  #42 = Utf8               resolve\n-  #43 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #44 = Utf8               writeBody\n-  #45 = Utf8               SourceFile\n-  #46 = Utf8               Attribute.java\n-  #47 = NameAndType        #20:#67        // \"<init>\":()V\n-  #48 = NameAndType        #16:#17        // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #49 = NameAndType        #18:#19        // attributeNameIndex:I\n-  #50 = Class              #68            // java/io/DataOutputStream\n-  #51 = NameAndType        #69:#70        // writeShort:(I)V\n-  #52 = NameAndType        #33:#34        // getLength:()I\n-  #53 = NameAndType        #71:#70        // writeInt:(I)V\n-  #54 = NameAndType        #44:#25        // writeBody:(Ljava/io/DataOutputStream;)V\n-  #55 = Class              #72            // java/lang/Object\n-  #56 = NameAndType        #73:#74        // getClass:()Ljava/lang/Class;\n-  #57 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n-  #58 = Class              #75            // org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8\n-  #59 = NameAndType        #28:#29        // equals:(Ljava/lang/Object;)Z\n-  #60 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n-  #61 = NameAndType        #31:#32        // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-  #62 = NameAndType        #41:#34        // hashCode:()I\n-  #63 = NameAndType        #42:#43        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n-  #64 = Class              #76            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #65 = NameAndType        #77:#78        // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-  #66 = Utf8               java/io/IOException\n-  #67 = Utf8               ()V\n-  #68 = Utf8               java/io/DataOutputStream\n-  #69 = Utf8               writeShort\n-  #70 = Utf8               (I)V\n-  #71 = Utf8               writeInt\n-  #72 = Utf8               java/lang/Object\n-  #73 = Utf8               getClass\n-  #74 = Utf8               ()Ljava/lang/Class;\n-  #75 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8\n-  #76 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n-  #77 = Utf8               indexOf\n-  #78 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+   #1 = Methodref          #2.#3          // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.\"<init>\":()V\n+   #2 = Class              #4             // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #3 = NameAndType        #5:#6          // \"<init>\":()V\n+   #4 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+   #5 = Utf8               <init>\n+   #6 = Utf8               ()V\n+   #7 = Fieldref           #8.#9          // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+   #8 = Class              #10            // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+   #9 = NameAndType        #11:#12        // attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #10 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+  #11 = Utf8               attributeName\n+  #12 = Utf8               Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #13 = Fieldref           #8.#14         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.attributeNameIndex:I\n+  #14 = NameAndType        #15:#16        // attributeNameIndex:I\n+  #15 = Utf8               attributeNameIndex\n+  #16 = Utf8               I\n+  #17 = Methodref          #18.#19        // java/io/DataOutputStream.writeShort:(I)V\n+  #18 = Class              #20            // java/io/DataOutputStream\n+  #19 = NameAndType        #21:#22        // writeShort:(I)V\n+  #20 = Utf8               java/io/DataOutputStream\n+  #21 = Utf8               writeShort\n+  #22 = Utf8               (I)V\n+  #23 = Methodref          #8.#24         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.getLength:()I\n+  #24 = NameAndType        #25:#26        // getLength:()I\n+  #25 = Utf8               getLength\n+  #26 = Utf8               ()I\n+  #27 = Methodref          #18.#28        // java/io/DataOutputStream.writeInt:(I)V\n+  #28 = NameAndType        #29:#22        // writeInt:(I)V\n+  #29 = Utf8               writeInt\n+  #30 = Methodref          #8.#31         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.writeBody:(Ljava/io/DataOutputStream;)V\n+  #31 = NameAndType        #32:#33        // writeBody:(Ljava/io/DataOutputStream;)V\n+  #32 = Utf8               writeBody\n+  #33 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #34 = Methodref          #35.#36        // java/lang/Object.getClass:()Ljava/lang/Class;\n+  #35 = Class              #37            // java/lang/Object\n+  #36 = NameAndType        #38:#39        // getClass:()Ljava/lang/Class;\n+  #37 = Utf8               java/lang/Object\n+  #38 = Utf8               getClass\n+  #39 = Utf8               ()Ljava/lang/Class;\n+  #40 = Methodref          #41.#42        // org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.equals:(Ljava/lang/Object;)Z\n+  #41 = Class              #43            // org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8\n+  #42 = NameAndType        #44:#45        // equals:(Ljava/lang/Object;)Z\n+  #43 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8\n+  #44 = Utf8               equals\n+  #45 = Utf8               (Ljava/lang/Object;)Z\n+  #46 = Methodref          #8.#47         // org/apache/commons/compress/harmony/unpack200/bytecode/Attribute.getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #47 = NameAndType        #48:#49        // getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #48 = Utf8               getAttributeName\n+  #49 = Utf8               ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+  #50 = Methodref          #41.#51        // org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.hashCode:()I\n+  #51 = NameAndType        #52:#26        // hashCode:()I\n+  #52 = Utf8               hashCode\n+  #53 = Methodref          #2.#54         // org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #54 = NameAndType        #55:#56        // resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #55 = Utf8               resolve\n+  #56 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+  #57 = Methodref          #58.#59        // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #58 = Class              #60            // org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+  #59 = NameAndType        #61:#62        // indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #60 = Utf8               org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool\n+  #61 = Utf8               indexOf\n+  #62 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+  #63 = Utf8               (Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;)V\n+  #64 = Utf8               Code\n+  #65 = Utf8               LineNumberTable\n+  #66 = Utf8               doWrite\n+  #67 = Utf8               Exceptions\n+  #68 = Class              #69            // java/io/IOException\n+  #69 = Utf8               java/io/IOException\n+  #70 = Utf8               StackMapTable\n+  #71 = Utf8               getLengthIncludingHeader\n+  #72 = Utf8               getNestedClassFileEntries\n+  #73 = Utf8               ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n+  #74 = Utf8               hasBCIRenumbering\n+  #75 = Utf8               ()Z\n+  #76 = Utf8               isSourceFileAttribute\n+  #77 = Utf8               SourceFile\n+  #78 = Utf8               Attribute.java\n {\n   protected final org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 attributeName;\n     descriptor: Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   private int attributeNameIndex;\n     descriptor: I\n@@ -100,37 +100,37 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: invokespecial #1                  // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.\"<init>\":()V\n          4: aload_0\n          5: aload_1\n-         6: putfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         6: putfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n          9: return\n       LineNumberTable:\n         line 31: 0\n         line 32: 4\n         line 33: 9\n \n   protected void doWrite(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #3                  // Field attributeNameIndex:I\n-         5: invokevirtual #4                  // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #13                 // Field attributeNameIndex:I\n+         5: invokevirtual #17                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: invokevirtual #5                  // Method getLength:()I\n-        13: invokevirtual #6                  // Method java/io/DataOutputStream.writeInt:(I)V\n+        10: invokevirtual #23                 // Method getLength:()I\n+        13: invokevirtual #27                 // Method java/io/DataOutputStream.writeInt:(I)V\n         16: aload_0\n         17: aload_1\n-        18: invokevirtual #7                  // Method writeBody:(Ljava/io/DataOutputStream;)V\n+        18: invokevirtual #30                 // Method writeBody:(Ljava/io/DataOutputStream;)V\n         21: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 8\n         line 39: 16\n         line 40: 21\n     Exceptions:\n@@ -147,36 +147,36 @@\n          5: iconst_1\n          6: ireturn\n          7: aload_1\n          8: ifnonnull     13\n         11: iconst_0\n         12: ireturn\n         13: aload_0\n-        14: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        14: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         17: aload_1\n-        18: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;\n+        18: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;\n         21: if_acmpeq     26\n         24: iconst_0\n         25: ireturn\n         26: aload_1\n-        27: checkcast     #9                  // class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n+        27: checkcast     #8                  // class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute\n         30: astore_2\n         31: aload_0\n-        32: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        32: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         35: ifnonnull     47\n         38: aload_2\n-        39: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        39: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         42: ifnull        63\n         45: iconst_0\n         46: ireturn\n         47: aload_0\n-        48: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        48: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         51: aload_2\n-        52: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-        55: invokevirtual #10                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.equals:(Ljava/lang/Object;)Z\n+        52: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        55: invokevirtual #40                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.equals:(Ljava/lang/Object;)Z\n         58: ifne          63\n         61: iconst_0\n         62: ireturn\n         63: iconst_1\n         64: ireturn\n       LineNumberTable:\n         line 44: 0\n@@ -203,49 +203,49 @@\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.CPUTF8 getAttributeName();\n     descriptor: ()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         1: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n          4: areturn\n       LineNumberTable:\n         line 65: 0\n \n   protected abstract int getLength();\n     descriptor: ()I\n     flags: (0x0404) ACC_PROTECTED, ACC_ABSTRACT\n \n   protected int getLengthIncludingHeader();\n     descriptor: ()I\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #5                  // Method getLength:()I\n+         1: invokevirtual #23                 // Method getLength:()I\n          4: iconst_2\n          5: iadd\n          6: iconst_4\n          7: iadd\n          8: ireturn\n       LineNumberTable:\n         line 78: 0\n \n   protected org.apache.commons.compress.harmony.unpack200.bytecode.ClassFileEntry[] getNestedClassFileEntries();\n     descriptor: ()[Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=1, args_size=1\n          0: iconst_1\n-         1: anewarray     #11                 // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n+         1: anewarray     #2                  // class org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry\n          4: dup\n          5: iconst_0\n          6: aload_0\n-         7: invokevirtual #12                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         7: invokevirtual #46                 // Method getAttributeName:()Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         10: aastore\n         11: areturn\n       LineNumberTable:\n         line 83: 0\n \n   public boolean hasBCIRenumbering();\n     descriptor: ()Z\n@@ -267,60 +267,60 @@\n       LineNumberTable:\n         line 102: 0\n \n   public int hashCode();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n-      stack=2, locals=3, args_size=1\n+      stack=2, locals=2, args_size=1\n          0: iconst_1\n-         1: istore_2\n+         1: istore_1\n          2: bipush        31\n-         4: iload_2\n+         4: iload_1\n          5: imul\n          6: aload_0\n-         7: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+         7: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n         10: ifnonnull     17\n         13: iconst_0\n         14: goto          24\n         17: aload_0\n-        18: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-        21: invokevirtual #13                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.hashCode:()I\n+        18: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        21: invokevirtual #50                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8.hashCode:()I\n         24: iadd\n-        25: istore_2\n-        26: iload_2\n+        25: istore_1\n+        26: iload_1\n         27: ireturn\n       LineNumberTable:\n         line 108: 0\n         line 109: 2\n         line 110: 26\n       StackMapTable: number_of_entries = 2\n         frame_type = 255 /* full_frame */\n           offset_delta = 17\n-          locals = [ class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute, top, int ]\n+          locals = [ class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute, int ]\n           stack = [ int ]\n         frame_type = 255 /* full_frame */\n           offset_delta = 6\n-          locals = [ class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute, top, int ]\n+          locals = [ class org/apache/commons/compress/harmony/unpack200/bytecode/Attribute, int ]\n           stack = [ int, int ]\n \n   protected void resolve(org.apache.commons.compress.harmony.unpack200.bytecode.ClassConstantPool);\n     descriptor: (Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokespecial #14                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n+         2: invokespecial #53                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry.resolve:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool;)V\n          5: aload_0\n          6: aload_1\n          7: aload_0\n-         8: getfield      #2                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n-        11: invokevirtual #15                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n-        14: putfield      #3                  // Field attributeNameIndex:I\n+         8: getfield      #7                  // Field attributeName:Lorg/apache/commons/compress/harmony/unpack200/bytecode/CPUTF8;\n+        11: invokevirtual #57                 // Method org/apache/commons/compress/harmony/unpack200/bytecode/ClassConstantPool.indexOf:(Lorg/apache/commons/compress/harmony/unpack200/bytecode/ClassFileEntry;)I\n+        14: putfield      #13                 // Field attributeNameIndex:I\n         17: return\n       LineNumberTable:\n         line 115: 0\n         line 116: 5\n         line 117: 17\n \n   protected abstract void writeBody(java.io.DataOutputStream) throws java.io.IOException;\n"}]}
