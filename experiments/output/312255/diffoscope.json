{"diffoscope-json-version": 1, "source1": "first/CountingInputStream.class", "source2": "second/CountingInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,59 +1,59 @@\n-  SHA-256 checksum 22e4830ecc5d2674fe7b7d5d84ed605c10a18d47219d3afba46b1b3bf4a00781\n+  SHA-256 checksum e33f9d93e6c71ed3ac28b9c9bea503a341d792e02f9713769c36d6979ce3388b\n   Compiled from \"CountingInputStream.java\"\n public class org.apache.commons.compress.utils.CountingInputStream extends java.io.FilterInputStream\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n   this_class: #10                         // org/apache/commons/compress/utils/CountingInputStream\n-  super_class: #11                        // java/io/FilterInputStream\n+  super_class: #2                         // java/io/FilterInputStream\n   interfaces: 0, fields: 1, methods: 6, attributes: 1\n Constant pool:\n-   #1 = Methodref          #11.#31        // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #2 = Long               -1l\n-   #4 = Fieldref           #10.#32        // org/apache/commons/compress/utils/CountingInputStream.bytesRead:J\n-   #5 = Fieldref           #10.#33        // org/apache/commons/compress/utils/CountingInputStream.in:Ljava/io/InputStream;\n-   #6 = Methodref          #34.#35        // java/io/InputStream.read:()I\n-   #7 = Methodref          #10.#36        // org/apache/commons/compress/utils/CountingInputStream.count:(J)V\n-   #8 = Methodref          #10.#37        // org/apache/commons/compress/utils/CountingInputStream.read:([BII)I\n-   #9 = Methodref          #34.#37        // java/io/InputStream.read:([BII)I\n-  #10 = Class              #38            // org/apache/commons/compress/utils/CountingInputStream\n-  #11 = Class              #39            // java/io/FilterInputStream\n-  #12 = Utf8               bytesRead\n-  #13 = Utf8               J\n-  #14 = Utf8               <init>\n-  #15 = Utf8               (Ljava/io/InputStream;)V\n-  #16 = Utf8               Code\n-  #17 = Utf8               LineNumberTable\n-  #18 = Utf8               count\n-  #19 = Utf8               (J)V\n-  #20 = Utf8               StackMapTable\n-  #21 = Utf8               getBytesRead\n-  #22 = Utf8               ()J\n+   #1 = Methodref          #2.#3          // java/io/FilterInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #2 = Class              #4             // java/io/FilterInputStream\n+   #3 = NameAndType        #5:#6          // \"<init>\":(Ljava/io/InputStream;)V\n+   #4 = Utf8               java/io/FilterInputStream\n+   #5 = Utf8               <init>\n+   #6 = Utf8               (Ljava/io/InputStream;)V\n+   #7 = Long               -1l\n+   #9 = Fieldref           #10.#11        // org/apache/commons/compress/utils/CountingInputStream.bytesRead:J\n+  #10 = Class              #12            // org/apache/commons/compress/utils/CountingInputStream\n+  #11 = NameAndType        #13:#14        // bytesRead:J\n+  #12 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+  #13 = Utf8               bytesRead\n+  #14 = Utf8               J\n+  #15 = Fieldref           #10.#16        // org/apache/commons/compress/utils/CountingInputStream.in:Ljava/io/InputStream;\n+  #16 = NameAndType        #17:#18        // in:Ljava/io/InputStream;\n+  #17 = Utf8               in\n+  #18 = Utf8               Ljava/io/InputStream;\n+  #19 = Methodref          #20.#21        // java/io/InputStream.read:()I\n+  #20 = Class              #22            // java/io/InputStream\n+  #21 = NameAndType        #23:#24        // read:()I\n+  #22 = Utf8               java/io/InputStream\n   #23 = Utf8               read\n   #24 = Utf8               ()I\n-  #25 = Utf8               Exceptions\n-  #26 = Class              #40            // java/io/IOException\n-  #27 = Utf8               ([B)I\n-  #28 = Utf8               ([BII)I\n-  #29 = Utf8               SourceFile\n-  #30 = Utf8               CountingInputStream.java\n-  #31 = NameAndType        #14:#15        // \"<init>\":(Ljava/io/InputStream;)V\n-  #32 = NameAndType        #12:#13        // bytesRead:J\n-  #33 = NameAndType        #41:#42        // in:Ljava/io/InputStream;\n-  #34 = Class              #43            // java/io/InputStream\n-  #35 = NameAndType        #23:#24        // read:()I\n-  #36 = NameAndType        #18:#19        // count:(J)V\n-  #37 = NameAndType        #23:#28        // read:([BII)I\n-  #38 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-  #39 = Utf8               java/io/FilterInputStream\n+  #25 = Methodref          #10.#26        // org/apache/commons/compress/utils/CountingInputStream.count:(J)V\n+  #26 = NameAndType        #27:#28        // count:(J)V\n+  #27 = Utf8               count\n+  #28 = Utf8               (J)V\n+  #29 = Methodref          #10.#30        // org/apache/commons/compress/utils/CountingInputStream.read:([BII)I\n+  #30 = NameAndType        #23:#31        // read:([BII)I\n+  #31 = Utf8               ([BII)I\n+  #32 = Methodref          #20.#30        // java/io/InputStream.read:([BII)I\n+  #33 = Utf8               Code\n+  #34 = Utf8               LineNumberTable\n+  #35 = Utf8               StackMapTable\n+  #36 = Utf8               getBytesRead\n+  #37 = Utf8               ()J\n+  #38 = Utf8               Exceptions\n+  #39 = Class              #40            // java/io/IOException\n   #40 = Utf8               java/io/IOException\n-  #41 = Utf8               in\n-  #42 = Utf8               Ljava/io/InputStream;\n-  #43 = Utf8               java/io/InputStream\n+  #41 = Utf8               ([B)I\n+  #42 = Utf8               SourceFile\n+  #43 = Utf8               CountingInputStream.java\n {\n   private long bytesRead;\n     descriptor: J\n     flags: (0x0002) ACC_PRIVATE\n \n   public org.apache.commons.compress.utils.CountingInputStream(java.io.InputStream);\n     descriptor: (Ljava/io/InputStream;)V\n@@ -70,56 +70,56 @@\n \n   protected final void count(long);\n     descriptor: (J)V\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=5, locals=3, args_size=2\n          0: lload_1\n-         1: ldc2_w        #2                  // long -1l\n+         1: ldc2_w        #7                  // long -1l\n          4: lcmp\n          5: ifeq          18\n          8: aload_0\n          9: dup\n-        10: getfield      #4                  // Field bytesRead:J\n+        10: getfield      #9                  // Field bytesRead:J\n         13: lload_1\n         14: ladd\n-        15: putfield      #4                  // Field bytesRead:J\n+        15: putfield      #9                  // Field bytesRead:J\n         18: return\n       LineNumberTable:\n         line 44: 0\n         line 45: 8\n         line 47: 18\n       StackMapTable: number_of_entries = 1\n         frame_type = 18 /* same */\n \n   public long getBytesRead();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #4                  // Field bytesRead:J\n+         1: getfield      #9                  // Field bytesRead:J\n          4: lreturn\n       LineNumberTable:\n         line 54: 0\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #6                  // Method java/io/InputStream.read:()I\n+         1: getfield      #15                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #19                 // Method java/io/InputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iflt          17\n         12: aload_0\n         13: lconst_1\n-        14: invokevirtual #7                  // Method count:(J)V\n+        14: invokevirtual #25                 // Method count:(J)V\n         17: iload_1\n         18: ireturn\n       LineNumberTable:\n         line 59: 0\n         line 60: 8\n         line 61: 12\n         line 63: 17\n@@ -136,15 +136,15 @@\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n          3: aload_1\n          4: arraylength\n-         5: invokevirtual #8                  // Method read:([BII)I\n+         5: invokevirtual #29                 // Method read:([BII)I\n          8: ireturn\n       LineNumberTable:\n         line 68: 0\n     Exceptions:\n       throws java.io.IOException\n \n   public int read(byte[], int, int) throws java.io.IOException;\n@@ -153,26 +153,26 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #5                  // Field in:Ljava/io/InputStream;\n+         7: getfield      #15                 // Field in:Ljava/io/InputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #9                  // Method java/io/InputStream.read:([BII)I\n+        13: invokevirtual #32                 // Method java/io/InputStream.read:([BII)I\n         16: istore        4\n         18: iload         4\n         20: iflt          30\n         23: aload_0\n         24: iload         4\n         26: i2l\n-        27: invokevirtual #7                  // Method count:(J)V\n+        27: invokevirtual #25                 // Method count:(J)V\n         30: iload         4\n         32: ireturn\n       LineNumberTable:\n         line 73: 0\n         line 74: 4\n         line 76: 6\n         line 77: 18\n"}]}
