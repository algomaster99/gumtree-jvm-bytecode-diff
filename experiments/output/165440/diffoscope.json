{"diffoscope-json-version": 1, "source1": "first/ZipArchiveInputStream.class", "source2": "second/ZipArchiveInputStream.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -165,16 +165,15 @@\n         }\n         else {\n             this.skip(Long.MAX_VALUE);\n             final long inB = (ZipArchiveInputStream.CurrentEntry.access$400(this.current).getMethod() == 8) ? this.getBytesInflated() : ZipArchiveInputStream.CurrentEntry.access$500(this.current);\n             final int diff = (int)(ZipArchiveInputStream.CurrentEntry.access$200(this.current) - inB);\n             if (diff > 0) {\n                 this.pushback(this.buf.array(), this.buf.limit() - diff, diff);\n-                final ZipArchiveInputStream.CurrentEntry current = this.current;\n-                ZipArchiveInputStream.CurrentEntry.access$202(current, ZipArchiveInputStream.CurrentEntry.access$200(current) - (long)diff);\n+                ZipArchiveInputStream.CurrentEntry.access$222(this.current, (long)diff);\n             }\n             if (this.currentEntryHasOutstandingBytes()) {\n                 this.drainCurrentEntryData();\n             }\n         }\n         if (this.lastStoredEntry == null && ZipArchiveInputStream.CurrentEntry.access$600(this.current)) {\n             this.readDataDescriptor();\n@@ -589,16 +588,15 @@\n     \n     private int readFromInflater(final byte[] buffer, final int offset, final int length) throws IOException {\n         int read = 0;\n         do {\n             if (this.inf.needsInput()) {\n                 final int l = this.fill();\n                 if (l > 0) {\n-                    final ZipArchiveInputStream.CurrentEntry current = this.current;\n-                    ZipArchiveInputStream.CurrentEntry.access$202(current, ZipArchiveInputStream.CurrentEntry.access$200(current) + (long)this.buf.limit());\n+                    ZipArchiveInputStream.CurrentEntry.access$214(this.current, (long)this.buf.limit());\n                 }\n                 else {\n                     if (l == -1) {\n                         return -1;\n                     }\n                     break;\n                 }\n@@ -659,24 +657,22 @@\n             final int l = this.inputStream.read(this.buf.array());\n             if (l == -1) {\n                 this.buf.limit();\n                 throw new IOException(\"Truncated ZIP file\");\n             }\n             this.buf.limit();\n             this.count(l);\n-            final ZipArchiveInputStream.CurrentEntry current = this.current;\n-            ZipArchiveInputStream.CurrentEntry.access$202(current, ZipArchiveInputStream.CurrentEntry.access$200(current) + (long)l);\n+            ZipArchiveInputStream.CurrentEntry.access$214(this.current, (long)l);\n         }\n         int toRead = Math.min(this.buf.remaining(), length);\n         if (csize - ZipArchiveInputStream.CurrentEntry.access$500(this.current) < toRead) {\n             toRead = (int)(csize - ZipArchiveInputStream.CurrentEntry.access$500(this.current));\n         }\n         this.buf.get(buffer, offset, toRead);\n-        final ZipArchiveInputStream.CurrentEntry current2 = this.current;\n-        ZipArchiveInputStream.CurrentEntry.access$502(current2, ZipArchiveInputStream.CurrentEntry.access$500(current2) + (long)toRead);\n+        ZipArchiveInputStream.CurrentEntry.access$514(this.current, (long)toRead);\n         return toRead;\n     }\n     \n     private void readStoredEntry() throws IOException {\n         final ByteArrayOutputStream bos = new ByteArrayOutputStream();\n         int off = 0;\n         boolean done = false;\n"}]}
