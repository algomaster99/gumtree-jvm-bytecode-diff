{"diffoscope-json-version": 1, "source1": "first/FilenameUtils.class", "source2": "second/FilenameUtils.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,541 +1,541 @@\n-  SHA-256 checksum 39743a4117f8d8cd3c8e91a044c444a30f83d40ab22d3e8dc4c5a66482c8c064\n+  SHA-256 checksum 6be90065d3e414c17084073cfcbe2cb714ce89a521cfcd2dd2c09c05e66768de\n   Compiled from \"FilenameUtils.java\"\n public class org.apache.commons.io.FilenameUtils\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #3                          // org/apache/commons/io/FilenameUtils\n-  super_class: #121                       // java/lang/Object\n+  this_class: #8                          // org/apache/commons/io/FilenameUtils\n+  super_class: #2                         // java/lang/Object\n   interfaces: 0, fields: 16, methods: 46, attributes: 1\n Constant pool:\n-    #1 = Methodref          #121.#311     // java/lang/Object.\"<init>\":()V\n-    #2 = Fieldref           #3.#312       // org/apache/commons/io/FilenameUtils.SYSTEM_SEPARATOR:C\n-    #3 = Class              #313          // org/apache/commons/io/FilenameUtils\n-    #4 = Methodref          #3.#314       // org/apache/commons/io/FilenameUtils.doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n-    #5 = Methodref          #3.#315       // org/apache/commons/io/FilenameUtils.requireNonNullChars:(Ljava/lang/String;)V\n-    #6 = Methodref          #12.#316      // java/lang/String.length:()I\n-    #7 = Methodref          #3.#317       // org/apache/commons/io/FilenameUtils.getPrefixLength:(Ljava/lang/String;)I\n-    #8 = Methodref          #12.#318      // java/lang/String.getChars:(II[CI)V\n-    #9 = Fieldref           #3.#319       // org/apache/commons/io/FilenameUtils.OTHER_SEPARATOR:C\n-   #10 = Methodref          #320.#321     // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #11 = String             #322          //\n-   #12 = Class              #323          // java/lang/String\n-   #13 = Methodref          #12.#324      // java/lang/String.\"<init>\":([CII)V\n-   #14 = Methodref          #3.#325       // org/apache/commons/io/FilenameUtils.normalize:(Ljava/lang/String;)Ljava/lang/String;\n-   #15 = Methodref          #12.#326      // java/lang/String.charAt:(I)C\n-   #16 = Methodref          #3.#327       // org/apache/commons/io/FilenameUtils.isSeparator:(C)Z\n-   #17 = Class              #328          // java/lang/StringBuilder\n-   #18 = Methodref          #17.#311      // java/lang/StringBuilder.\"<init>\":()V\n-   #19 = Methodref          #17.#329      // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #20 = Methodref          #17.#330      // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #21 = Methodref          #17.#331      // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-   #22 = String             #192          // canonicalParent\n-   #23 = Methodref          #332.#333     // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-   #24 = Fieldref           #272.#334     // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-   #25 = Methodref          #272.#335     // org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #26 = Methodref          #272.#336     // org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-   #27 = Methodref          #12.#337      // java/lang/String.indexOf:(I)I\n-   #28 = Methodref          #12.#338      // java/lang/String.replace:(CC)Ljava/lang/String;\n-   #29 = Methodref          #3.#339       // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n-   #30 = Methodref          #3.#340       // org/apache/commons/io/FilenameUtils.separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n-   #31 = Methodref          #3.#341       // org/apache/commons/io/FilenameUtils.separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n-   #32 = Methodref          #12.#342      // java/lang/String.indexOf:(II)I\n-   #33 = Methodref          #343.#344     // java/lang/Math.min:(II)I\n-   #34 = Methodref          #345.#346     // java/lang/Character.toUpperCase:(C)C\n-   #35 = Methodref          #347.#348     // org/apache/commons/io/FileSystem.getCurrent:()Lorg/apache/commons/io/FileSystem;\n-   #36 = Methodref          #347.#349     // org/apache/commons/io/FileSystem.supportsDriveLetter:()Z\n-   #37 = Methodref          #12.#350      // java/lang/String.substring:(II)Ljava/lang/String;\n-   #38 = Methodref          #3.#351       // org/apache/commons/io/FilenameUtils.isValidHostName:(Ljava/lang/String;)Z\n-   #39 = Methodref          #12.#352      // java/lang/String.lastIndexOf:(I)I\n-   #40 = Methodref          #343.#353     // java/lang/Math.max:(II)I\n-   #41 = Methodref          #3.#354       // org/apache/commons/io/FilenameUtils.getAdsCriticalOffset:(Ljava/lang/String;)I\n-   #42 = Class              #355          // java/lang/IllegalArgumentException\n-   #43 = String             #356          // NTFS ADS separator (\\':\\') in file name is forbidden.\n-   #44 = Methodref          #42.#357      // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #45 = Methodref          #3.#358       // org/apache/commons/io/FilenameUtils.indexOfLastSeparator:(Ljava/lang/String;)I\n-   #46 = Methodref          #3.#359       // org/apache/commons/io/FilenameUtils.doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n-   #47 = Methodref          #3.#360       // org/apache/commons/io/FilenameUtils.doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #48 = Methodref          #3.#361       // org/apache/commons/io/FilenameUtils.getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n-   #49 = Methodref          #12.#362      // java/lang/String.substring:(I)Ljava/lang/String;\n-   #50 = String             #363          // Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n-   #51 = Methodref          #3.#364       // org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n-   #52 = Methodref          #3.#365       // org/apache/commons/io/FilenameUtils.removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #53 = Methodref          #3.#366       // org/apache/commons/io/FilenameUtils.indexOfExtension:(Ljava/lang/String;)I\n-   #54 = Fieldref           #272.#367     // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-   #55 = Methodref          #3.#368       // org/apache/commons/io/FilenameUtils.equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n-   #56 = Methodref          #12.#369      // java/lang/String.isEmpty:()Z\n-   #57 = Methodref          #3.#370       // org/apache/commons/io/FilenameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n-   #58 = Methodref          #12.#371      // java/lang/String.equals:(Ljava/lang/Object;)Z\n-   #59 = InterfaceMethodref #372.#369     // java/util/Collection.isEmpty:()Z\n-   #60 = InterfaceMethodref #372.#373     // java/util/Collection.iterator:()Ljava/util/Iterator;\n-   #61 = InterfaceMethodref #256.#374     // java/util/Iterator.hasNext:()Z\n-   #62 = InterfaceMethodref #256.#375     // java/util/Iterator.next:()Ljava/lang/Object;\n-   #63 = Methodref          #3.#376       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-   #64 = Methodref          #3.#377       // org/apache/commons/io/FilenameUtils.splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n-   #65 = Class              #378          // java/util/ArrayDeque\n-   #66 = Methodref          #65.#379      // java/util/ArrayDeque.\"<init>\":(I)V\n-   #67 = InterfaceMethodref #273.#369     // java/util/Deque.isEmpty:()Z\n-   #68 = InterfaceMethodref #273.#380     // java/util/Deque.pop:()Ljava/lang/Object;\n-   #69 = Class              #263          // \"[I\"\n-   #70 = String             #381          // ?\n-   #71 = String             #382          // *\n-   #72 = Methodref          #272.#383     // org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n-   #73 = InterfaceMethodref #273.#384     // java/util/Deque.push:(Ljava/lang/Object;)V\n-   #74 = Methodref          #272.#385     // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-   #75 = Methodref          #12.#386      // java/lang/String.toCharArray:()[C\n-   #76 = Class              #387          // java/util/ArrayList\n-   #77 = Methodref          #76.#311      // java/util/ArrayList.\"<init>\":()V\n-   #78 = Methodref          #17.#316      // java/lang/StringBuilder.length:()I\n-   #79 = Methodref          #76.#388      // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n-   #80 = Methodref          #17.#389      // java/lang/StringBuilder.setLength:(I)V\n-   #81 = Fieldref           #3.#390       // org/apache/commons/io/FilenameUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-   #82 = Methodref          #76.#391      // java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-   #83 = Class              #123          // \"[Ljava/lang/String;\"\n-   #84 = Methodref          #3.#392       // org/apache/commons/io/FilenameUtils.isIPv6Address:(Ljava/lang/String;)Z\n-   #85 = Methodref          #3.#393       // org/apache/commons/io/FilenameUtils.isRFC3986HostName:(Ljava/lang/String;)Z\n-   #86 = Fieldref           #3.#394       // org/apache/commons/io/FilenameUtils.IPV4_PATTERN:Ljava/util/regex/Pattern;\n-   #87 = Methodref          #395.#396     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-   #88 = Methodref          #291.#397     // java/util/regex/Matcher.matches:()Z\n-   #89 = Methodref          #291.#398     // java/util/regex/Matcher.groupCount:()I\n-   #90 = Methodref          #291.#399     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n-   #91 = Methodref          #400.#401     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n-   #92 = String             #402          // 0\n-   #93 = Methodref          #12.#403      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n-   #94 = String             #404          // ::\n-   #95 = Methodref          #12.#405      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-   #96 = Methodref          #12.#406      // java/lang/String.indexOf:(Ljava/lang/String;)I\n-   #97 = Methodref          #12.#407      // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-   #98 = String             #408          // :\n-   #99 = Methodref          #12.#409      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n-  #100 = Methodref          #12.#410      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #101 = Methodref          #411.#412     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #102 = Methodref          #76.#413      // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-  #103 = InterfaceMethodref #305.#388     // java/util/List.add:(Ljava/lang/Object;)Z\n-  #104 = InterfaceMethodref #305.#369     // java/util/List.isEmpty:()Z\n-  #105 = InterfaceMethodref #305.#414     // java/util/List.remove:(I)Ljava/lang/Object;\n-  #106 = InterfaceMethodref #305.#391     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #107 = String             #415          // .\n-  #108 = Methodref          #3.#416       // org/apache/commons/io/FilenameUtils.isIPv4Address:(Ljava/lang/String;)Z\n-  #109 = Methodref          #400.#417     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-  #110 = Class              #418          // java/lang/NumberFormatException\n-  #111 = Integer            65535\n-  #112 = String             #419          // \\\\.\n-  #113 = Methodref          #12.#420      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #114 = Fieldref           #3.#421       // org/apache/commons/io/FilenameUtils.REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-  #115 = Methodref          #345.#422     // java/lang/Character.toString:(C)Ljava/lang/String;\n-  #116 = Fieldref           #3.#423       // org/apache/commons/io/FilenameUtils.EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n-  #117 = Fieldref           #424.#425     // java/io/File.separatorChar:C\n-  #118 = String             #426          // ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n-  #119 = Methodref          #395.#427     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #120 = String             #428          // ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n-  #121 = Class              #429          // java/lang/Object\n-  #122 = Utf8               EMPTY_STRING_ARRAY\n-  #123 = Utf8               [Ljava/lang/String;\n-  #124 = Utf8               EMPTY_STRING\n-  #125 = Utf8               Ljava/lang/String;\n-  #126 = Utf8               ConstantValue\n-  #127 = Utf8               NOT_FOUND\n-  #128 = Utf8               I\n-  #129 = Integer            -1\n-  #130 = Utf8               EXTENSION_SEPARATOR\n-  #131 = Utf8               C\n-  #132 = Integer            46\n-  #133 = Utf8               EXTENSION_SEPARATOR_STR\n-  #134 = Utf8               UNIX_SEPARATOR\n-  #135 = Integer            47\n-  #136 = Utf8               WINDOWS_SEPARATOR\n-  #137 = Integer            92\n-  #138 = Utf8               SYSTEM_SEPARATOR\n-  #139 = Utf8               OTHER_SEPARATOR\n-  #140 = Utf8               IPV4_PATTERN\n-  #141 = Utf8               Ljava/util/regex/Pattern;\n-  #142 = Utf8               IPV4_MAX_OCTET_VALUE\n-  #143 = Integer            255\n-  #144 = Utf8               IPV6_MAX_HEX_GROUPS\n-  #145 = Integer            8\n-  #146 = Utf8               IPV6_MAX_HEX_DIGITS_PER_GROUP\n-  #147 = Integer            4\n-  #148 = Utf8               MAX_UNSIGNED_SHORT\n-  #149 = Utf8               BASE_16\n-  #150 = Integer            16\n-  #151 = Utf8               REG_NAME_PART_PATTERN\n-  #152 = Utf8               <init>\n-  #153 = Utf8               ()V\n-  #154 = Utf8               Code\n-  #155 = Utf8               LineNumberTable\n-  #156 = Utf8               LocalVariableTable\n-  #157 = Utf8               this\n-  #158 = Utf8               Lorg/apache/commons/io/FilenameUtils;\n-  #159 = Utf8               isSystemWindows\n-  #160 = Utf8               ()Z\n-  #161 = Utf8               StackMapTable\n-  #162 = Utf8               isSeparator\n-  #163 = Utf8               (C)Z\n-  #164 = Utf8               ch\n-  #165 = Utf8               normalize\n-  #166 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n-  #167 = Utf8               fileName\n-  #168 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #169 = Utf8               unixSeparator\n-  #170 = Utf8               Z\n-  #171 = Utf8               separator\n-  #172 = Utf8               normalizeNoEndSeparator\n-  #173 = Utf8               doNormalize\n-  #174 = Utf8               (Ljava/lang/String;CZ)Ljava/lang/String;\n-  #175 = Utf8               i\n-  #176 = Utf8               j\n-  #177 = Utf8               keepSeparator\n-  #178 = Utf8               size\n-  #179 = Utf8               prefix\n-  #180 = Utf8               array\n-  #181 = Utf8               [C\n-  #182 = Utf8               otherSeparator\n-  #183 = Utf8               lastIsDirectory\n-  #184 = Class              #181          // \"[C\"\n-  #185 = Utf8               concat\n-  #186 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n-  #187 = Utf8               basePath\n-  #188 = Utf8               fullFileNameToAdd\n-  #189 = Utf8               len\n-  #190 = Utf8               directoryContains\n-  #191 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n-  #192 = Utf8               canonicalParent\n-  #193 = Utf8               canonicalChild\n-  #194 = Utf8               Exceptions\n-  #195 = Class              #430          // java/io/IOException\n-  #196 = Utf8               separatorsToUnix\n-  #197 = Utf8               path\n-  #198 = Utf8               separatorsToWindows\n-  #199 = Utf8               separatorsToSystem\n-  #200 = Utf8               getPrefixLength\n-  #201 = Utf8               (Ljava/lang/String;)I\n-  #202 = Utf8               posUnix\n-  #203 = Utf8               posWin\n-  #204 = Utf8               ch0\n-  #205 = Utf8               ch1\n-  #206 = Utf8               pos\n-  #207 = Utf8               hostnamePart\n-  #208 = Utf8               indexOfLastSeparator\n-  #209 = Utf8               lastUnixPos\n-  #210 = Utf8               lastWindowsPos\n-  #211 = Utf8               indexOfExtension\n-  #212 = Utf8               offset\n-  #213 = Utf8               extensionPos\n-  #214 = Utf8               lastSeparator\n-  #215 = Utf8               getPrefix\n-  #216 = Utf8               getPath\n-  #217 = Utf8               getPathNoEndSeparator\n-  #218 = Utf8               doGetPath\n-  #219 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n-  #220 = Utf8               separatorAdd\n-  #221 = Utf8               index\n-  #222 = Utf8               endIndex\n-  #223 = Utf8               getFullPath\n-  #224 = Utf8               getFullPathNoEndSeparator\n-  #225 = Utf8               doGetFullPath\n-  #226 = Utf8               includeSeparator\n-  #227 = Utf8               end\n-  #228 = Utf8               getName\n-  #229 = Utf8               requireNonNullChars\n-  #230 = Utf8               (Ljava/lang/String;)V\n-  #231 = Utf8               getBaseName\n-  #232 = Utf8               getExtension\n-  #233 = Utf8               getAdsCriticalOffset\n-  #234 = Utf8               offset1\n-  #235 = Utf8               offset2\n-  #236 = Utf8               removeExtension\n-  #237 = Utf8               equals\n-  #238 = Utf8               fileName1\n-  #239 = Utf8               fileName2\n-  #240 = Utf8               equalsOnSystem\n-  #241 = Utf8               equalsNormalized\n-  #242 = Utf8               equalsNormalizedOnSystem\n-  #243 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n-  #244 = Utf8               normalized\n-  #245 = Utf8               caseSensitivity\n-  #246 = Utf8               Lorg/apache/commons/io/IOCase;\n-  #247 = Utf8               isExtension\n-  #248 = Utf8               extension\n-  #249 = Utf8               fileExt\n-  #250 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Z\n-  #251 = Utf8               extensions\n-  #252 = Utf8               (Ljava/lang/String;Ljava/util/Collection;)Z\n-  #253 = Utf8               Ljava/util/Collection;\n-  #254 = Utf8               LocalVariableTypeTable\n-  #255 = Utf8               Ljava/util/Collection<Ljava/lang/String;>;\n-  #256 = Class              #431          // java/util/Iterator\n-  #257 = Utf8               Signature\n-  #258 = Utf8               (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n-  #259 = Utf8               wildcardMatch\n-  #260 = Utf8               wildcardMatcher\n-  #261 = Utf8               wildcardMatchOnSystem\n-  #262 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #263 = Utf8               [I\n-  #264 = Utf8               repeat\n-  #265 = Utf8               wcs\n-  #266 = Utf8               anyChars\n-  #267 = Utf8               textIdx\n-  #268 = Utf8               wcsIdx\n-  #269 = Utf8               backtrack\n-  #270 = Utf8               Ljava/util/Deque;\n-  #271 = Utf8               Ljava/util/Deque<[I>;\n-  #272 = Class              #432          // org/apache/commons/io/IOCase\n-  #273 = Class              #433          // java/util/Deque\n-  #274 = Utf8               splitOnTokens\n-  #275 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n-  #276 = Utf8               text\n-  #277 = Utf8               list\n-  #278 = Utf8               Ljava/util/ArrayList;\n-  #279 = Utf8               buffer\n-  #280 = Utf8               Ljava/lang/StringBuilder;\n-  #281 = Utf8               prevChar\n-  #282 = Utf8               Ljava/util/ArrayList<Ljava/lang/String;>;\n-  #283 = Utf8               isValidHostName\n-  #284 = Utf8               (Ljava/lang/String;)Z\n-  #285 = Utf8               name\n-  #286 = Utf8               isIPv4Address\n-  #287 = Utf8               ipSegment\n-  #288 = Utf8               iIpSegment\n-  #289 = Utf8               m\n-  #290 = Utf8               Ljava/util/regex/Matcher;\n-  #291 = Class              #434          // java/util/regex/Matcher\n-  #292 = Utf8               isIPv6Address\n-  #293 = Utf8               octetList\n-  #294 = Utf8               Ljava/util/List;\n-  #295 = Utf8               e\n-  #296 = Utf8               Ljava/lang/NumberFormatException;\n-  #297 = Utf8               octetInt\n-  #298 = Utf8               octet\n-  #299 = Utf8               inet6Address\n-  #300 = Utf8               containsCompressedZeroes\n-  #301 = Utf8               octets\n-  #302 = Utf8               validOctets\n-  #303 = Utf8               emptyOctets\n-  #304 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n-  #305 = Class              #435          // java/util/List\n-  #306 = Utf8               isRFC3986HostName\n-  #307 = Utf8               parts\n-  #308 = Utf8               <clinit>\n-  #309 = Utf8               SourceFile\n-  #310 = Utf8               FilenameUtils.java\n-  #311 = NameAndType        #152:#153     // \"<init>\":()V\n-  #312 = NameAndType        #138:#131     // SYSTEM_SEPARATOR:C\n-  #313 = Utf8               org/apache/commons/io/FilenameUtils\n-  #314 = NameAndType        #173:#174     // doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n-  #315 = NameAndType        #229:#230     // requireNonNullChars:(Ljava/lang/String;)V\n-  #316 = NameAndType        #436:#437     // length:()I\n-  #317 = NameAndType        #200:#201     // getPrefixLength:(Ljava/lang/String;)I\n-  #318 = NameAndType        #438:#439     // getChars:(II[CI)V\n-  #319 = NameAndType        #139:#131     // OTHER_SEPARATOR:C\n-  #320 = Class              #440          // java/lang/System\n-  #321 = NameAndType        #441:#442     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #322 = Utf8\n-  #323 = Utf8               java/lang/String\n-  #324 = NameAndType        #152:#443     // \"<init>\":([CII)V\n-  #325 = NameAndType        #165:#166     // normalize:(Ljava/lang/String;)Ljava/lang/String;\n-  #326 = NameAndType        #444:#445     // charAt:(I)C\n-  #327 = NameAndType        #162:#163     // isSeparator:(C)Z\n-  #328 = Utf8               java/lang/StringBuilder\n-  #329 = NameAndType        #446:#447     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #330 = NameAndType        #448:#449     // toString:()Ljava/lang/String;\n-  #331 = NameAndType        #446:#450     // append:(C)Ljava/lang/StringBuilder;\n-  #332 = Class              #451          // java/util/Objects\n-  #333 = NameAndType        #452:#453     // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #334 = NameAndType        #454:#246     // SYSTEM:Lorg/apache/commons/io/IOCase;\n-  #335 = NameAndType        #455:#191     // checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #336 = NameAndType        #456:#191     // checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n-  #337 = NameAndType        #457:#458     // indexOf:(I)I\n-  #338 = NameAndType        #459:#460     // replace:(CC)Ljava/lang/String;\n-  #339 = NameAndType        #159:#160     // isSystemWindows:()Z\n-  #340 = NameAndType        #198:#166     // separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n-  #341 = NameAndType        #196:#166     // separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n-  #342 = NameAndType        #457:#461     // indexOf:(II)I\n-  #343 = Class              #462          // java/lang/Math\n-  #344 = NameAndType        #463:#461     // min:(II)I\n-  #345 = Class              #464          // java/lang/Character\n-  #346 = NameAndType        #465:#466     // toUpperCase:(C)C\n-  #347 = Class              #467          // org/apache/commons/io/FileSystem\n-  #348 = NameAndType        #468:#469     // getCurrent:()Lorg/apache/commons/io/FileSystem;\n-  #349 = NameAndType        #470:#160     // supportsDriveLetter:()Z\n-  #350 = NameAndType        #471:#472     // substring:(II)Ljava/lang/String;\n-  #351 = NameAndType        #283:#284     // isValidHostName:(Ljava/lang/String;)Z\n-  #352 = NameAndType        #473:#458     // lastIndexOf:(I)I\n-  #353 = NameAndType        #474:#461     // max:(II)I\n-  #354 = NameAndType        #233:#201     // getAdsCriticalOffset:(Ljava/lang/String;)I\n-  #355 = Utf8               java/lang/IllegalArgumentException\n-  #356 = Utf8               NTFS ADS separator (\\':\\') in file name is forbidden.\n-  #357 = NameAndType        #152:#230     // \"<init>\":(Ljava/lang/String;)V\n-  #358 = NameAndType        #208:#201     // indexOfLastSeparator:(Ljava/lang/String;)I\n-  #359 = NameAndType        #218:#219     // doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n-  #360 = NameAndType        #225:#168     // doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #361 = NameAndType        #215:#166     // getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n-  #362 = NameAndType        #471:#475     // substring:(I)Ljava/lang/String;\n-  #363 = Utf8               Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n-  #364 = NameAndType        #228:#166     // getName:(Ljava/lang/String;)Ljava/lang/String;\n-  #365 = NameAndType        #236:#166     // removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #366 = NameAndType        #211:#201     // indexOfExtension:(Ljava/lang/String;)I\n-  #367 = NameAndType        #476:#246     // SENSITIVE:Lorg/apache/commons/io/IOCase;\n-  #368 = NameAndType        #237:#243     // equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n-  #369 = NameAndType        #477:#160     // isEmpty:()Z\n-  #370 = NameAndType        #232:#166     // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n-  #371 = NameAndType        #237:#478     // equals:(Ljava/lang/Object;)Z\n-  #372 = Class              #479          // java/util/Collection\n-  #373 = NameAndType        #480:#481     // iterator:()Ljava/util/Iterator;\n-  #374 = NameAndType        #482:#160     // hasNext:()Z\n-  #375 = NameAndType        #483:#484     // next:()Ljava/lang/Object;\n-  #376 = NameAndType        #259:#262     // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n-  #377 = NameAndType        #274:#275     // splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n-  #378 = Utf8               java/util/ArrayDeque\n-  #379 = NameAndType        #152:#485     // \"<init>\":(I)V\n-  #380 = NameAndType        #486:#484     // pop:()Ljava/lang/Object;\n-  #381 = Utf8               ?\n-  #382 = Utf8               *\n-  #383 = NameAndType        #487:#488     // checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n-  #384 = NameAndType        #489:#490     // push:(Ljava/lang/Object;)V\n-  #385 = NameAndType        #491:#492     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n-  #386 = NameAndType        #493:#494     // toCharArray:()[C\n-  #387 = Utf8               java/util/ArrayList\n-  #388 = NameAndType        #495:#478     // add:(Ljava/lang/Object;)Z\n-  #389 = NameAndType        #496:#485     // setLength:(I)V\n-  #390 = NameAndType        #122:#123     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-  #391 = NameAndType        #497:#498     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #392 = NameAndType        #292:#284     // isIPv6Address:(Ljava/lang/String;)Z\n-  #393 = NameAndType        #306:#284     // isRFC3986HostName:(Ljava/lang/String;)Z\n-  #394 = NameAndType        #140:#141     // IPV4_PATTERN:Ljava/util/regex/Pattern;\n-  #395 = Class              #499          // java/util/regex/Pattern\n-  #396 = NameAndType        #500:#501     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #397 = NameAndType        #502:#160     // matches:()Z\n-  #398 = NameAndType        #503:#437     // groupCount:()I\n-  #399 = NameAndType        #504:#475     // group:(I)Ljava/lang/String;\n-  #400 = Class              #505          // java/lang/Integer\n-  #401 = NameAndType        #506:#201     // parseInt:(Ljava/lang/String;)I\n-  #402 = Utf8               0\n-  #403 = NameAndType        #507:#284     // startsWith:(Ljava/lang/String;)Z\n-  #404 = Utf8               ::\n-  #405 = NameAndType        #508:#509     // contains:(Ljava/lang/CharSequence;)Z\n-  #406 = NameAndType        #457:#201     // indexOf:(Ljava/lang/String;)I\n-  #407 = NameAndType        #473:#201     // lastIndexOf:(Ljava/lang/String;)I\n-  #408 = Utf8               :\n-  #409 = NameAndType        #510:#284     // endsWith:(Ljava/lang/String;)Z\n-  #410 = NameAndType        #511:#275     // split:(Ljava/lang/String;)[Ljava/lang/String;\n-  #411 = Class              #512          // java/util/Arrays\n-  #412 = NameAndType        #513:#514     // asList:([Ljava/lang/Object;)Ljava/util/List;\n-  #413 = NameAndType        #152:#515     // \"<init>\":(Ljava/util/Collection;)V\n-  #414 = NameAndType        #516:#517     // remove:(I)Ljava/lang/Object;\n-  #415 = Utf8               .\n-  #416 = NameAndType        #286:#284     // isIPv4Address:(Ljava/lang/String;)Z\n-  #417 = NameAndType        #506:#518     // parseInt:(Ljava/lang/String;I)I\n-  #418 = Utf8               java/lang/NumberFormatException\n-  #419 = Utf8               \\\\.\n-  #420 = NameAndType        #511:#519     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n-  #421 = NameAndType        #151:#141     // REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-  #422 = NameAndType        #448:#520     // toString:(C)Ljava/lang/String;\n-  #423 = NameAndType        #133:#125     // EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n-  #424 = Class              #521          // java/io/File\n-  #425 = NameAndType        #522:#131     // separatorChar:C\n-  #426 = Utf8               ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n-  #427 = NameAndType        #523:#524     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-  #428 = Utf8               ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n-  #429 = Utf8               java/lang/Object\n-  #430 = Utf8               java/io/IOException\n-  #431 = Utf8               java/util/Iterator\n-  #432 = Utf8               org/apache/commons/io/IOCase\n-  #433 = Utf8               java/util/Deque\n-  #434 = Utf8               java/util/regex/Matcher\n-  #435 = Utf8               java/util/List\n-  #436 = Utf8               length\n-  #437 = Utf8               ()I\n-  #438 = Utf8               getChars\n-  #439 = Utf8               (II[CI)V\n-  #440 = Utf8               java/lang/System\n-  #441 = Utf8               arraycopy\n-  #442 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-  #443 = Utf8               ([CII)V\n-  #444 = Utf8               charAt\n-  #445 = Utf8               (I)C\n-  #446 = Utf8               append\n-  #447 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #448 = Utf8               toString\n-  #449 = Utf8               ()Ljava/lang/String;\n-  #450 = Utf8               (C)Ljava/lang/StringBuilder;\n-  #451 = Utf8               java/util/Objects\n-  #452 = Utf8               requireNonNull\n-  #453 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n-  #454 = Utf8               SYSTEM\n-  #455 = Utf8               checkEquals\n-  #456 = Utf8               checkStartsWith\n-  #457 = Utf8               indexOf\n-  #458 = Utf8               (I)I\n-  #459 = Utf8               replace\n-  #460 = Utf8               (CC)Ljava/lang/String;\n-  #461 = Utf8               (II)I\n-  #462 = Utf8               java/lang/Math\n-  #463 = Utf8               min\n-  #464 = Utf8               java/lang/Character\n-  #465 = Utf8               toUpperCase\n-  #466 = Utf8               (C)C\n-  #467 = Utf8               org/apache/commons/io/FileSystem\n-  #468 = Utf8               getCurrent\n-  #469 = Utf8               ()Lorg/apache/commons/io/FileSystem;\n-  #470 = Utf8               supportsDriveLetter\n-  #471 = Utf8               substring\n-  #472 = Utf8               (II)Ljava/lang/String;\n-  #473 = Utf8               lastIndexOf\n-  #474 = Utf8               max\n-  #475 = Utf8               (I)Ljava/lang/String;\n-  #476 = Utf8               SENSITIVE\n-  #477 = Utf8               isEmpty\n-  #478 = Utf8               (Ljava/lang/Object;)Z\n-  #479 = Utf8               java/util/Collection\n-  #480 = Utf8               iterator\n-  #481 = Utf8               ()Ljava/util/Iterator;\n-  #482 = Utf8               hasNext\n-  #483 = Utf8               next\n-  #484 = Utf8               ()Ljava/lang/Object;\n-  #485 = Utf8               (I)V\n-  #486 = Utf8               pop\n-  #487 = Utf8               checkIndexOf\n-  #488 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n-  #489 = Utf8               push\n-  #490 = Utf8               (Ljava/lang/Object;)V\n-  #491 = Utf8               checkRegionMatches\n-  #492 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n-  #493 = Utf8               toCharArray\n-  #494 = Utf8               ()[C\n-  #495 = Utf8               add\n-  #496 = Utf8               setLength\n-  #497 = Utf8               toArray\n-  #498 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n-  #499 = Utf8               java/util/regex/Pattern\n-  #500 = Utf8               matcher\n-  #501 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-  #502 = Utf8               matches\n-  #503 = Utf8               groupCount\n-  #504 = Utf8               group\n-  #505 = Utf8               java/lang/Integer\n-  #506 = Utf8               parseInt\n-  #507 = Utf8               startsWith\n-  #508 = Utf8               contains\n-  #509 = Utf8               (Ljava/lang/CharSequence;)Z\n-  #510 = Utf8               endsWith\n-  #511 = Utf8               split\n-  #512 = Utf8               java/util/Arrays\n-  #513 = Utf8               asList\n-  #514 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n-  #515 = Utf8               (Ljava/util/Collection;)V\n-  #516 = Utf8               remove\n-  #517 = Utf8               (I)Ljava/lang/Object;\n-  #518 = Utf8               (Ljava/lang/String;I)I\n-  #519 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n-  #520 = Utf8               (C)Ljava/lang/String;\n-  #521 = Utf8               java/io/File\n-  #522 = Utf8               separatorChar\n-  #523 = Utf8               compile\n-  #524 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+    #1 = Methodref          #2.#3         // java/lang/Object.\"<init>\":()V\n+    #2 = Class              #4            // java/lang/Object\n+    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #4 = Utf8               java/lang/Object\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Fieldref           #8.#9         // org/apache/commons/io/FilenameUtils.SYSTEM_SEPARATOR:C\n+    #8 = Class              #10           // org/apache/commons/io/FilenameUtils\n+    #9 = NameAndType        #11:#12       // SYSTEM_SEPARATOR:C\n+   #10 = Utf8               org/apache/commons/io/FilenameUtils\n+   #11 = Utf8               SYSTEM_SEPARATOR\n+   #12 = Utf8               C\n+   #13 = Methodref          #8.#14        // org/apache/commons/io/FilenameUtils.doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+   #14 = NameAndType        #15:#16       // doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+   #15 = Utf8               doNormalize\n+   #16 = Utf8               (Ljava/lang/String;CZ)Ljava/lang/String;\n+   #17 = Methodref          #8.#18        // org/apache/commons/io/FilenameUtils.requireNonNullChars:(Ljava/lang/String;)V\n+   #18 = NameAndType        #19:#20       // requireNonNullChars:(Ljava/lang/String;)V\n+   #19 = Utf8               requireNonNullChars\n+   #20 = Utf8               (Ljava/lang/String;)V\n+   #21 = Methodref          #22.#23       // java/lang/String.length:()I\n+   #22 = Class              #24           // java/lang/String\n+   #23 = NameAndType        #25:#26       // length:()I\n+   #24 = Utf8               java/lang/String\n+   #25 = Utf8               length\n+   #26 = Utf8               ()I\n+   #27 = Methodref          #8.#28        // org/apache/commons/io/FilenameUtils.getPrefixLength:(Ljava/lang/String;)I\n+   #28 = NameAndType        #29:#30       // getPrefixLength:(Ljava/lang/String;)I\n+   #29 = Utf8               getPrefixLength\n+   #30 = Utf8               (Ljava/lang/String;)I\n+   #31 = Methodref          #22.#32       // java/lang/String.getChars:(II[CI)V\n+   #32 = NameAndType        #33:#34       // getChars:(II[CI)V\n+   #33 = Utf8               getChars\n+   #34 = Utf8               (II[CI)V\n+   #35 = Fieldref           #8.#36        // org/apache/commons/io/FilenameUtils.OTHER_SEPARATOR:C\n+   #36 = NameAndType        #37:#12       // OTHER_SEPARATOR:C\n+   #37 = Utf8               OTHER_SEPARATOR\n+   #38 = Methodref          #39.#40       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #39 = Class              #41           // java/lang/System\n+   #40 = NameAndType        #42:#43       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #41 = Utf8               java/lang/System\n+   #42 = Utf8               arraycopy\n+   #43 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #44 = String             #45           //\n+   #45 = Utf8\n+   #46 = Methodref          #22.#47       // java/lang/String.\"<init>\":([CII)V\n+   #47 = NameAndType        #5:#48        // \"<init>\":([CII)V\n+   #48 = Utf8               ([CII)V\n+   #49 = Methodref          #8.#50        // org/apache/commons/io/FilenameUtils.normalize:(Ljava/lang/String;)Ljava/lang/String;\n+   #50 = NameAndType        #51:#52       // normalize:(Ljava/lang/String;)Ljava/lang/String;\n+   #51 = Utf8               normalize\n+   #52 = Utf8               (Ljava/lang/String;)Ljava/lang/String;\n+   #53 = Methodref          #22.#54       // java/lang/String.charAt:(I)C\n+   #54 = NameAndType        #55:#56       // charAt:(I)C\n+   #55 = Utf8               charAt\n+   #56 = Utf8               (I)C\n+   #57 = Methodref          #8.#58        // org/apache/commons/io/FilenameUtils.isSeparator:(C)Z\n+   #58 = NameAndType        #59:#60       // isSeparator:(C)Z\n+   #59 = Utf8               isSeparator\n+   #60 = Utf8               (C)Z\n+   #61 = Class              #62           // java/lang/StringBuilder\n+   #62 = Utf8               java/lang/StringBuilder\n+   #63 = Methodref          #61.#3        // java/lang/StringBuilder.\"<init>\":()V\n+   #64 = Methodref          #61.#65       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #65 = NameAndType        #66:#67       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #66 = Utf8               append\n+   #67 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #68 = Methodref          #61.#69       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #69 = NameAndType        #70:#71       // toString:()Ljava/lang/String;\n+   #70 = Utf8               toString\n+   #71 = Utf8               ()Ljava/lang/String;\n+   #72 = Methodref          #61.#73       // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+   #73 = NameAndType        #66:#74       // append:(C)Ljava/lang/StringBuilder;\n+   #74 = Utf8               (C)Ljava/lang/StringBuilder;\n+   #75 = String             #76           // canonicalParent\n+   #76 = Utf8               canonicalParent\n+   #77 = Methodref          #78.#79       // java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #78 = Class              #80           // java/util/Objects\n+   #79 = NameAndType        #81:#82       // requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #80 = Utf8               java/util/Objects\n+   #81 = Utf8               requireNonNull\n+   #82 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+   #83 = Fieldref           #84.#85       // org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #84 = Class              #86           // org/apache/commons/io/IOCase\n+   #85 = NameAndType        #87:#88       // SYSTEM:Lorg/apache/commons/io/IOCase;\n+   #86 = Utf8               org/apache/commons/io/IOCase\n+   #87 = Utf8               SYSTEM\n+   #88 = Utf8               Lorg/apache/commons/io/IOCase;\n+   #89 = Methodref          #84.#90       // org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #90 = NameAndType        #91:#92       // checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #91 = Utf8               checkEquals\n+   #92 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Z\n+   #93 = Methodref          #84.#94       // org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #94 = NameAndType        #95:#92       // checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+   #95 = Utf8               checkStartsWith\n+   #96 = Methodref          #22.#97       // java/lang/String.indexOf:(I)I\n+   #97 = NameAndType        #98:#99       // indexOf:(I)I\n+   #98 = Utf8               indexOf\n+   #99 = Utf8               (I)I\n+  #100 = Methodref          #22.#101      // java/lang/String.replace:(CC)Ljava/lang/String;\n+  #101 = NameAndType        #102:#103     // replace:(CC)Ljava/lang/String;\n+  #102 = Utf8               replace\n+  #103 = Utf8               (CC)Ljava/lang/String;\n+  #104 = Methodref          #8.#105       // org/apache/commons/io/FilenameUtils.isSystemWindows:()Z\n+  #105 = NameAndType        #106:#107     // isSystemWindows:()Z\n+  #106 = Utf8               isSystemWindows\n+  #107 = Utf8               ()Z\n+  #108 = Methodref          #8.#109       // org/apache/commons/io/FilenameUtils.separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n+  #109 = NameAndType        #110:#52      // separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n+  #110 = Utf8               separatorsToWindows\n+  #111 = Methodref          #8.#112       // org/apache/commons/io/FilenameUtils.separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n+  #112 = NameAndType        #113:#52      // separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n+  #113 = Utf8               separatorsToUnix\n+  #114 = Methodref          #22.#115      // java/lang/String.indexOf:(II)I\n+  #115 = NameAndType        #98:#116      // indexOf:(II)I\n+  #116 = Utf8               (II)I\n+  #117 = Methodref          #118.#119     // java/lang/Math.min:(II)I\n+  #118 = Class              #120          // java/lang/Math\n+  #119 = NameAndType        #121:#116     // min:(II)I\n+  #120 = Utf8               java/lang/Math\n+  #121 = Utf8               min\n+  #122 = Methodref          #123.#124     // java/lang/Character.toUpperCase:(C)C\n+  #123 = Class              #125          // java/lang/Character\n+  #124 = NameAndType        #126:#127     // toUpperCase:(C)C\n+  #125 = Utf8               java/lang/Character\n+  #126 = Utf8               toUpperCase\n+  #127 = Utf8               (C)C\n+  #128 = Methodref          #129.#130     // org/apache/commons/io/FileSystem.getCurrent:()Lorg/apache/commons/io/FileSystem;\n+  #129 = Class              #131          // org/apache/commons/io/FileSystem\n+  #130 = NameAndType        #132:#133     // getCurrent:()Lorg/apache/commons/io/FileSystem;\n+  #131 = Utf8               org/apache/commons/io/FileSystem\n+  #132 = Utf8               getCurrent\n+  #133 = Utf8               ()Lorg/apache/commons/io/FileSystem;\n+  #134 = Methodref          #129.#135     // org/apache/commons/io/FileSystem.supportsDriveLetter:()Z\n+  #135 = NameAndType        #136:#107     // supportsDriveLetter:()Z\n+  #136 = Utf8               supportsDriveLetter\n+  #137 = Methodref          #22.#138      // java/lang/String.substring:(II)Ljava/lang/String;\n+  #138 = NameAndType        #139:#140     // substring:(II)Ljava/lang/String;\n+  #139 = Utf8               substring\n+  #140 = Utf8               (II)Ljava/lang/String;\n+  #141 = Methodref          #8.#142       // org/apache/commons/io/FilenameUtils.isValidHostName:(Ljava/lang/String;)Z\n+  #142 = NameAndType        #143:#144     // isValidHostName:(Ljava/lang/String;)Z\n+  #143 = Utf8               isValidHostName\n+  #144 = Utf8               (Ljava/lang/String;)Z\n+  #145 = Methodref          #22.#146      // java/lang/String.lastIndexOf:(I)I\n+  #146 = NameAndType        #147:#99      // lastIndexOf:(I)I\n+  #147 = Utf8               lastIndexOf\n+  #148 = Methodref          #118.#149     // java/lang/Math.max:(II)I\n+  #149 = NameAndType        #150:#116     // max:(II)I\n+  #150 = Utf8               max\n+  #151 = Methodref          #8.#152       // org/apache/commons/io/FilenameUtils.getAdsCriticalOffset:(Ljava/lang/String;)I\n+  #152 = NameAndType        #153:#30      // getAdsCriticalOffset:(Ljava/lang/String;)I\n+  #153 = Utf8               getAdsCriticalOffset\n+  #154 = Class              #155          // java/lang/IllegalArgumentException\n+  #155 = Utf8               java/lang/IllegalArgumentException\n+  #156 = String             #157          // NTFS ADS separator (\\':\\') in file name is forbidden.\n+  #157 = Utf8               NTFS ADS separator (\\':\\') in file name is forbidden.\n+  #158 = Methodref          #154.#159     // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+  #159 = NameAndType        #5:#20        // \"<init>\":(Ljava/lang/String;)V\n+  #160 = Methodref          #8.#161       // org/apache/commons/io/FilenameUtils.indexOfLastSeparator:(Ljava/lang/String;)I\n+  #161 = NameAndType        #162:#30      // indexOfLastSeparator:(Ljava/lang/String;)I\n+  #162 = Utf8               indexOfLastSeparator\n+  #163 = Methodref          #8.#164       // org/apache/commons/io/FilenameUtils.doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+  #164 = NameAndType        #165:#166     // doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+  #165 = Utf8               doGetPath\n+  #166 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;\n+  #167 = Methodref          #8.#168       // org/apache/commons/io/FilenameUtils.doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #168 = NameAndType        #169:#170     // doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+  #169 = Utf8               doGetFullPath\n+  #170 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+  #171 = Methodref          #8.#172       // org/apache/commons/io/FilenameUtils.getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n+  #172 = NameAndType        #173:#52      // getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n+  #173 = Utf8               getPrefix\n+  #174 = Methodref          #22.#175      // java/lang/String.substring:(I)Ljava/lang/String;\n+  #175 = NameAndType        #139:#176     // substring:(I)Ljava/lang/String;\n+  #176 = Utf8               (I)Ljava/lang/String;\n+  #177 = String             #178          // Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n+  #178 = Utf8               Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n+  #179 = Methodref          #8.#180       // org/apache/commons/io/FilenameUtils.getName:(Ljava/lang/String;)Ljava/lang/String;\n+  #180 = NameAndType        #181:#52      // getName:(Ljava/lang/String;)Ljava/lang/String;\n+  #181 = Utf8               getName\n+  #182 = Methodref          #8.#183       // org/apache/commons/io/FilenameUtils.removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #183 = NameAndType        #184:#52      // removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #184 = Utf8               removeExtension\n+  #185 = Methodref          #8.#186       // org/apache/commons/io/FilenameUtils.indexOfExtension:(Ljava/lang/String;)I\n+  #186 = NameAndType        #187:#30      // indexOfExtension:(Ljava/lang/String;)I\n+  #187 = Utf8               indexOfExtension\n+  #188 = Fieldref           #84.#189      // org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #189 = NameAndType        #190:#88      // SENSITIVE:Lorg/apache/commons/io/IOCase;\n+  #190 = Utf8               SENSITIVE\n+  #191 = Methodref          #8.#192       // org/apache/commons/io/FilenameUtils.equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+  #192 = NameAndType        #193:#194     // equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+  #193 = Utf8               equals\n+  #194 = Utf8               (Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+  #195 = Methodref          #22.#196      // java/lang/String.isEmpty:()Z\n+  #196 = NameAndType        #197:#107     // isEmpty:()Z\n+  #197 = Utf8               isEmpty\n+  #198 = Methodref          #8.#199       // org/apache/commons/io/FilenameUtils.getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #199 = NameAndType        #200:#52      // getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+  #200 = Utf8               getExtension\n+  #201 = Methodref          #22.#202      // java/lang/String.equals:(Ljava/lang/Object;)Z\n+  #202 = NameAndType        #193:#203     // equals:(Ljava/lang/Object;)Z\n+  #203 = Utf8               (Ljava/lang/Object;)Z\n+  #204 = InterfaceMethodref #205.#196     // java/util/Collection.isEmpty:()Z\n+  #205 = Class              #206          // java/util/Collection\n+  #206 = Utf8               java/util/Collection\n+  #207 = InterfaceMethodref #205.#208     // java/util/Collection.iterator:()Ljava/util/Iterator;\n+  #208 = NameAndType        #209:#210     // iterator:()Ljava/util/Iterator;\n+  #209 = Utf8               iterator\n+  #210 = Utf8               ()Ljava/util/Iterator;\n+  #211 = InterfaceMethodref #212.#213     // java/util/Iterator.hasNext:()Z\n+  #212 = Class              #214          // java/util/Iterator\n+  #213 = NameAndType        #215:#107     // hasNext:()Z\n+  #214 = Utf8               java/util/Iterator\n+  #215 = Utf8               hasNext\n+  #216 = InterfaceMethodref #212.#217     // java/util/Iterator.next:()Ljava/lang/Object;\n+  #217 = NameAndType        #218:#219     // next:()Ljava/lang/Object;\n+  #218 = Utf8               next\n+  #219 = Utf8               ()Ljava/lang/Object;\n+  #220 = Methodref          #8.#221       // org/apache/commons/io/FilenameUtils.wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #221 = NameAndType        #222:#223     // wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #222 = Utf8               wildcardMatch\n+  #223 = Utf8               (Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+  #224 = Methodref          #8.#225       // org/apache/commons/io/FilenameUtils.splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n+  #225 = NameAndType        #226:#227     // splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n+  #226 = Utf8               splitOnTokens\n+  #227 = Utf8               (Ljava/lang/String;)[Ljava/lang/String;\n+  #228 = Class              #229          // java/util/ArrayDeque\n+  #229 = Utf8               java/util/ArrayDeque\n+  #230 = Methodref          #228.#231     // java/util/ArrayDeque.\"<init>\":(I)V\n+  #231 = NameAndType        #5:#232       // \"<init>\":(I)V\n+  #232 = Utf8               (I)V\n+  #233 = InterfaceMethodref #234.#196     // java/util/Deque.isEmpty:()Z\n+  #234 = Class              #235          // java/util/Deque\n+  #235 = Utf8               java/util/Deque\n+  #236 = InterfaceMethodref #234.#237     // java/util/Deque.pop:()Ljava/lang/Object;\n+  #237 = NameAndType        #238:#219     // pop:()Ljava/lang/Object;\n+  #238 = Utf8               pop\n+  #239 = Class              #240          // \"[I\"\n+  #240 = Utf8               [I\n+  #241 = String             #242          // ?\n+  #242 = Utf8               ?\n+  #243 = String             #244          // *\n+  #244 = Utf8               *\n+  #245 = Methodref          #84.#246      // org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+  #246 = NameAndType        #247:#248     // checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+  #247 = Utf8               checkIndexOf\n+  #248 = Utf8               (Ljava/lang/String;ILjava/lang/String;)I\n+  #249 = InterfaceMethodref #234.#250     // java/util/Deque.push:(Ljava/lang/Object;)V\n+  #250 = NameAndType        #251:#252     // push:(Ljava/lang/Object;)V\n+  #251 = Utf8               push\n+  #252 = Utf8               (Ljava/lang/Object;)V\n+  #253 = Methodref          #84.#254      // org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #254 = NameAndType        #255:#256     // checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+  #255 = Utf8               checkRegionMatches\n+  #256 = Utf8               (Ljava/lang/String;ILjava/lang/String;)Z\n+  #257 = Methodref          #22.#258      // java/lang/String.toCharArray:()[C\n+  #258 = NameAndType        #259:#260     // toCharArray:()[C\n+  #259 = Utf8               toCharArray\n+  #260 = Utf8               ()[C\n+  #261 = Class              #262          // java/util/ArrayList\n+  #262 = Utf8               java/util/ArrayList\n+  #263 = Methodref          #261.#3       // java/util/ArrayList.\"<init>\":()V\n+  #264 = Methodref          #61.#23       // java/lang/StringBuilder.length:()I\n+  #265 = Methodref          #261.#266     // java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+  #266 = NameAndType        #267:#203     // add:(Ljava/lang/Object;)Z\n+  #267 = Utf8               add\n+  #268 = Methodref          #61.#269      // java/lang/StringBuilder.setLength:(I)V\n+  #269 = NameAndType        #270:#232     // setLength:(I)V\n+  #270 = Utf8               setLength\n+  #271 = Fieldref           #8.#272       // org/apache/commons/io/FilenameUtils.EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #272 = NameAndType        #273:#274     // EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+  #273 = Utf8               EMPTY_STRING_ARRAY\n+  #274 = Utf8               [Ljava/lang/String;\n+  #275 = Methodref          #261.#276     // java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #276 = NameAndType        #277:#278     // toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #277 = Utf8               toArray\n+  #278 = Utf8               ([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #279 = Class              #274          // \"[Ljava/lang/String;\"\n+  #280 = Methodref          #8.#281       // org/apache/commons/io/FilenameUtils.isIPv6Address:(Ljava/lang/String;)Z\n+  #281 = NameAndType        #282:#144     // isIPv6Address:(Ljava/lang/String;)Z\n+  #282 = Utf8               isIPv6Address\n+  #283 = Methodref          #8.#284       // org/apache/commons/io/FilenameUtils.isRFC3986HostName:(Ljava/lang/String;)Z\n+  #284 = NameAndType        #285:#144     // isRFC3986HostName:(Ljava/lang/String;)Z\n+  #285 = Utf8               isRFC3986HostName\n+  #286 = Fieldref           #8.#287       // org/apache/commons/io/FilenameUtils.IPV4_PATTERN:Ljava/util/regex/Pattern;\n+  #287 = NameAndType        #288:#289     // IPV4_PATTERN:Ljava/util/regex/Pattern;\n+  #288 = Utf8               IPV4_PATTERN\n+  #289 = Utf8               Ljava/util/regex/Pattern;\n+  #290 = Methodref          #291.#292     // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #291 = Class              #293          // java/util/regex/Pattern\n+  #292 = NameAndType        #294:#295     // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #293 = Utf8               java/util/regex/Pattern\n+  #294 = Utf8               matcher\n+  #295 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+  #296 = Methodref          #297.#298     // java/util/regex/Matcher.matches:()Z\n+  #297 = Class              #299          // java/util/regex/Matcher\n+  #298 = NameAndType        #300:#107     // matches:()Z\n+  #299 = Utf8               java/util/regex/Matcher\n+  #300 = Utf8               matches\n+  #301 = Methodref          #297.#302     // java/util/regex/Matcher.groupCount:()I\n+  #302 = NameAndType        #303:#26      // groupCount:()I\n+  #303 = Utf8               groupCount\n+  #304 = Methodref          #297.#305     // java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+  #305 = NameAndType        #306:#176     // group:(I)Ljava/lang/String;\n+  #306 = Utf8               group\n+  #307 = Methodref          #308.#309     // java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+  #308 = Class              #310          // java/lang/Integer\n+  #309 = NameAndType        #311:#30      // parseInt:(Ljava/lang/String;)I\n+  #310 = Utf8               java/lang/Integer\n+  #311 = Utf8               parseInt\n+  #312 = String             #313          // 0\n+  #313 = Utf8               0\n+  #314 = Methodref          #22.#315      // java/lang/String.startsWith:(Ljava/lang/String;)Z\n+  #315 = NameAndType        #316:#144     // startsWith:(Ljava/lang/String;)Z\n+  #316 = Utf8               startsWith\n+  #317 = String             #318          // ::\n+  #318 = Utf8               ::\n+  #319 = Methodref          #22.#320      // java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+  #320 = NameAndType        #321:#322     // contains:(Ljava/lang/CharSequence;)Z\n+  #321 = Utf8               contains\n+  #322 = Utf8               (Ljava/lang/CharSequence;)Z\n+  #323 = Methodref          #22.#324      // java/lang/String.indexOf:(Ljava/lang/String;)I\n+  #324 = NameAndType        #98:#30       // indexOf:(Ljava/lang/String;)I\n+  #325 = Methodref          #22.#326      // java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+  #326 = NameAndType        #147:#30      // lastIndexOf:(Ljava/lang/String;)I\n+  #327 = String             #328          // :\n+  #328 = Utf8               :\n+  #329 = Methodref          #22.#330      // java/lang/String.endsWith:(Ljava/lang/String;)Z\n+  #330 = NameAndType        #331:#144     // endsWith:(Ljava/lang/String;)Z\n+  #331 = Utf8               endsWith\n+  #332 = Methodref          #22.#333      // java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #333 = NameAndType        #334:#227     // split:(Ljava/lang/String;)[Ljava/lang/String;\n+  #334 = Utf8               split\n+  #335 = Methodref          #336.#337     // java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #336 = Class              #338          // java/util/Arrays\n+  #337 = NameAndType        #339:#340     // asList:([Ljava/lang/Object;)Ljava/util/List;\n+  #338 = Utf8               java/util/Arrays\n+  #339 = Utf8               asList\n+  #340 = Utf8               ([Ljava/lang/Object;)Ljava/util/List;\n+  #341 = Methodref          #261.#342     // java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+  #342 = NameAndType        #5:#343       // \"<init>\":(Ljava/util/Collection;)V\n+  #343 = Utf8               (Ljava/util/Collection;)V\n+  #344 = InterfaceMethodref #345.#266     // java/util/List.add:(Ljava/lang/Object;)Z\n+  #345 = Class              #346          // java/util/List\n+  #346 = Utf8               java/util/List\n+  #347 = InterfaceMethodref #345.#196     // java/util/List.isEmpty:()Z\n+  #348 = InterfaceMethodref #345.#349     // java/util/List.remove:(I)Ljava/lang/Object;\n+  #349 = NameAndType        #350:#351     // remove:(I)Ljava/lang/Object;\n+  #350 = Utf8               remove\n+  #351 = Utf8               (I)Ljava/lang/Object;\n+  #352 = InterfaceMethodref #345.#276     // java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+  #353 = String             #354          // .\n+  #354 = Utf8               .\n+  #355 = Methodref          #8.#356       // org/apache/commons/io/FilenameUtils.isIPv4Address:(Ljava/lang/String;)Z\n+  #356 = NameAndType        #357:#144     // isIPv4Address:(Ljava/lang/String;)Z\n+  #357 = Utf8               isIPv4Address\n+  #358 = Methodref          #308.#359     // java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+  #359 = NameAndType        #311:#360     // parseInt:(Ljava/lang/String;I)I\n+  #360 = Utf8               (Ljava/lang/String;I)I\n+  #361 = Class              #362          // java/lang/NumberFormatException\n+  #362 = Utf8               java/lang/NumberFormatException\n+  #363 = Integer            65535\n+  #364 = String             #365          // \\\\.\n+  #365 = Utf8               \\\\.\n+  #366 = Methodref          #22.#367      // java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #367 = NameAndType        #334:#368     // split:(Ljava/lang/String;I)[Ljava/lang/String;\n+  #368 = Utf8               (Ljava/lang/String;I)[Ljava/lang/String;\n+  #369 = Fieldref           #8.#370       // org/apache/commons/io/FilenameUtils.REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+  #370 = NameAndType        #371:#289     // REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+  #371 = Utf8               REG_NAME_PART_PATTERN\n+  #372 = Methodref          #123.#373     // java/lang/Character.toString:(C)Ljava/lang/String;\n+  #373 = NameAndType        #70:#374      // toString:(C)Ljava/lang/String;\n+  #374 = Utf8               (C)Ljava/lang/String;\n+  #375 = Fieldref           #8.#376       // org/apache/commons/io/FilenameUtils.EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n+  #376 = NameAndType        #377:#378     // EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n+  #377 = Utf8               EXTENSION_SEPARATOR_STR\n+  #378 = Utf8               Ljava/lang/String;\n+  #379 = Fieldref           #380.#381     // java/io/File.separatorChar:C\n+  #380 = Class              #382          // java/io/File\n+  #381 = NameAndType        #383:#12      // separatorChar:C\n+  #382 = Utf8               java/io/File\n+  #383 = Utf8               separatorChar\n+  #384 = String             #385          // ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n+  #385 = Utf8               ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n+  #386 = Methodref          #291.#387     // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #387 = NameAndType        #388:#389     // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #388 = Utf8               compile\n+  #389 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;\n+  #390 = String             #391          // ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n+  #391 = Utf8               ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n+  #392 = Utf8               EMPTY_STRING\n+  #393 = Utf8               ConstantValue\n+  #394 = Utf8               NOT_FOUND\n+  #395 = Utf8               I\n+  #396 = Integer            -1\n+  #397 = Utf8               EXTENSION_SEPARATOR\n+  #398 = Integer            46\n+  #399 = Utf8               UNIX_SEPARATOR\n+  #400 = Integer            47\n+  #401 = Utf8               WINDOWS_SEPARATOR\n+  #402 = Integer            92\n+  #403 = Utf8               IPV4_MAX_OCTET_VALUE\n+  #404 = Integer            255\n+  #405 = Utf8               IPV6_MAX_HEX_GROUPS\n+  #406 = Integer            8\n+  #407 = Utf8               IPV6_MAX_HEX_DIGITS_PER_GROUP\n+  #408 = Integer            4\n+  #409 = Utf8               MAX_UNSIGNED_SHORT\n+  #410 = Utf8               BASE_16\n+  #411 = Integer            16\n+  #412 = Utf8               Code\n+  #413 = Utf8               LineNumberTable\n+  #414 = Utf8               LocalVariableTable\n+  #415 = Utf8               this\n+  #416 = Utf8               Lorg/apache/commons/io/FilenameUtils;\n+  #417 = Utf8               StackMapTable\n+  #418 = Utf8               ch\n+  #419 = Utf8               fileName\n+  #420 = Utf8               unixSeparator\n+  #421 = Utf8               Z\n+  #422 = Utf8               separator\n+  #423 = Utf8               normalizeNoEndSeparator\n+  #424 = Utf8               i\n+  #425 = Utf8               j\n+  #426 = Utf8               keepSeparator\n+  #427 = Utf8               size\n+  #428 = Utf8               prefix\n+  #429 = Utf8               array\n+  #430 = Utf8               [C\n+  #431 = Utf8               otherSeparator\n+  #432 = Utf8               lastIsDirectory\n+  #433 = Class              #430          // \"[C\"\n+  #434 = Utf8               concat\n+  #435 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n+  #436 = Utf8               basePath\n+  #437 = Utf8               fullFileNameToAdd\n+  #438 = Utf8               len\n+  #439 = Utf8               directoryContains\n+  #440 = Utf8               canonicalChild\n+  #441 = Utf8               Exceptions\n+  #442 = Class              #443          // java/io/IOException\n+  #443 = Utf8               java/io/IOException\n+  #444 = Utf8               path\n+  #445 = Utf8               separatorsToSystem\n+  #446 = Utf8               posUnix\n+  #447 = Utf8               posWin\n+  #448 = Utf8               ch0\n+  #449 = Utf8               ch1\n+  #450 = Utf8               pos\n+  #451 = Utf8               hostnamePart\n+  #452 = Utf8               lastUnixPos\n+  #453 = Utf8               lastWindowsPos\n+  #454 = Utf8               offset\n+  #455 = Utf8               extensionPos\n+  #456 = Utf8               lastSeparator\n+  #457 = Utf8               getPath\n+  #458 = Utf8               getPathNoEndSeparator\n+  #459 = Utf8               separatorAdd\n+  #460 = Utf8               index\n+  #461 = Utf8               endIndex\n+  #462 = Utf8               getFullPath\n+  #463 = Utf8               getFullPathNoEndSeparator\n+  #464 = Utf8               includeSeparator\n+  #465 = Utf8               end\n+  #466 = Utf8               getBaseName\n+  #467 = Utf8               offset1\n+  #468 = Utf8               offset2\n+  #469 = Utf8               fileName1\n+  #470 = Utf8               fileName2\n+  #471 = Utf8               equalsOnSystem\n+  #472 = Utf8               equalsNormalized\n+  #473 = Utf8               equalsNormalizedOnSystem\n+  #474 = Utf8               normalized\n+  #475 = Utf8               caseSensitivity\n+  #476 = Utf8               isExtension\n+  #477 = Utf8               extension\n+  #478 = Utf8               fileExt\n+  #479 = Utf8               (Ljava/lang/String;[Ljava/lang/String;)Z\n+  #480 = Utf8               extensions\n+  #481 = Utf8               (Ljava/lang/String;Ljava/util/Collection;)Z\n+  #482 = Utf8               Ljava/util/Collection;\n+  #483 = Utf8               LocalVariableTypeTable\n+  #484 = Utf8               Ljava/util/Collection<Ljava/lang/String;>;\n+  #485 = Utf8               Signature\n+  #486 = Utf8               (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n+  #487 = Utf8               wildcardMatcher\n+  #488 = Utf8               wildcardMatchOnSystem\n+  #489 = Utf8               repeat\n+  #490 = Utf8               wcs\n+  #491 = Utf8               anyChars\n+  #492 = Utf8               textIdx\n+  #493 = Utf8               wcsIdx\n+  #494 = Utf8               backtrack\n+  #495 = Utf8               Ljava/util/Deque;\n+  #496 = Utf8               Ljava/util/Deque<[I>;\n+  #497 = Utf8               text\n+  #498 = Utf8               list\n+  #499 = Utf8               Ljava/util/ArrayList;\n+  #500 = Utf8               buffer\n+  #501 = Utf8               Ljava/lang/StringBuilder;\n+  #502 = Utf8               prevChar\n+  #503 = Utf8               Ljava/util/ArrayList<Ljava/lang/String;>;\n+  #504 = Utf8               name\n+  #505 = Utf8               ipSegment\n+  #506 = Utf8               iIpSegment\n+  #507 = Utf8               m\n+  #508 = Utf8               Ljava/util/regex/Matcher;\n+  #509 = Utf8               octetList\n+  #510 = Utf8               Ljava/util/List;\n+  #511 = Utf8               e\n+  #512 = Utf8               Ljava/lang/NumberFormatException;\n+  #513 = Utf8               octetInt\n+  #514 = Utf8               octet\n+  #515 = Utf8               inet6Address\n+  #516 = Utf8               containsCompressedZeroes\n+  #517 = Utf8               octets\n+  #518 = Utf8               validOctets\n+  #519 = Utf8               emptyOctets\n+  #520 = Utf8               Ljava/util/List<Ljava/lang/String;>;\n+  #521 = Utf8               parts\n+  #522 = Utf8               <clinit>\n+  #523 = Utf8               SourceFile\n+  #524 = Utf8               FilenameUtils.java\n {\n   private static final java.lang.String[] EMPTY_STRING_ARRAY;\n     descriptor: [Ljava/lang/String;\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n \n   private static final java.lang.String EMPTY_STRING = \"\";\n     descriptor: Ljava/lang/String;\n@@ -623,15 +623,15 @@\n             0       5     0  this   Lorg/apache/commons/io/FilenameUtils;\n \n   static boolean isSystemWindows();\n     descriptor: ()Z\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=2, locals=0, args_size=0\n-         0: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+         0: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n          3: bipush        92\n          5: if_icmpne     12\n          8: iconst_1\n          9: goto          13\n         12: iconst_0\n         13: ireturn\n       LineNumberTable:\n@@ -669,17 +669,17 @@\n \n   public static java.lang.String normalize(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+         1: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n          4: iconst_1\n-         5: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+         5: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 204: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 fileName   Ljava/lang/String;\n \n@@ -693,15 +693,15 @@\n          4: bipush        47\n          6: goto          11\n          9: bipush        92\n         11: istore_2\n         12: aload_0\n         13: iload_2\n         14: iconst_1\n-        15: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+        15: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 251: 0\n         line 252: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 fileName   Ljava/lang/String;\n@@ -714,17 +714,17 @@\n \n   public static java.lang.String normalizeNoEndSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+         1: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n          4: iconst_0\n-         5: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+         5: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n          8: areturn\n       LineNumberTable:\n         line 298: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 fileName   Ljava/lang/String;\n \n@@ -738,15 +738,15 @@\n          4: bipush        47\n          6: goto          11\n          9: bipush        92\n         11: istore_2\n         12: aload_0\n         13: iload_2\n         14: iconst_0\n-        15: invokestatic  #4                  // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n+        15: invokestatic  #13                 // Method doNormalize:(Ljava/lang/String;CZ)Ljava/lang/String;\n         18: areturn\n       LineNumberTable:\n         line 345: 0\n         line 346: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      19     0 fileName   Ljava/lang/String;\n@@ -763,47 +763,47 @@\n     Code:\n       stack=6, locals=10, args_size=3\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         10: aload_0\n-        11: invokevirtual #6                  // Method java/lang/String.length:()I\n+        11: invokevirtual #21                 // Method java/lang/String.length:()I\n         14: istore_3\n         15: iload_3\n         16: ifne          21\n         19: aload_0\n         20: areturn\n         21: aload_0\n-        22: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+        22: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         25: istore        4\n         27: iload         4\n         29: ifge          34\n         32: aconst_null\n         33: areturn\n         34: iload_3\n         35: iconst_2\n         36: iadd\n         37: newarray       char\n         39: astore        5\n         41: aload_0\n         42: iconst_0\n         43: aload_0\n-        44: invokevirtual #6                  // Method java/lang/String.length:()I\n+        44: invokevirtual #21                 // Method java/lang/String.length:()I\n         47: aload         5\n         49: iconst_0\n-        50: invokevirtual #8                  // Method java/lang/String.getChars:(II[CI)V\n+        50: invokevirtual #31                 // Method java/lang/String.getChars:(II[CI)V\n         53: iload_1\n-        54: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+        54: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n         57: if_icmpne     66\n-        60: getstatic     #9                  // Field OTHER_SEPARATOR:C\n+        60: getstatic     #35                 // Field OTHER_SEPARATOR:C\n         63: goto          69\n-        66: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n+        66: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n         69: istore        6\n         71: iconst_0\n         72: istore        7\n         74: iload         7\n         76: aload         5\n         78: arraylength\n         79: if_icmpge     104\n@@ -860,15 +860,15 @@\n        171: aload         5\n        173: iload         8\n        175: iconst_1\n        176: isub\n        177: iload_3\n        178: iload         8\n        180: isub\n-       181: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       181: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        184: iinc          3, -1\n        187: iinc          8, -1\n        190: iinc          8, 1\n        193: goto          141\n        196: iload         4\n        198: iconst_1\n        199: iadd\n@@ -914,15 +914,15 @@\n        266: aload         5\n        268: iload         8\n        270: iconst_1\n        271: isub\n        272: iload_3\n        273: iload         8\n        275: isub\n-       276: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       276: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        279: iinc          3, -2\n        282: iinc          8, -1\n        285: iinc          8, 1\n        288: goto          202\n        291: iload         4\n        293: iconst_2\n        294: iadd\n@@ -994,15 +994,15 @@\n        406: aload         5\n        408: iload         9\n        410: iconst_1\n        411: iadd\n        412: iload_3\n        413: iload         8\n        415: isub\n-       416: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       416: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        419: iload_3\n        420: iload         8\n        422: iload         9\n        424: isub\n        425: isub\n        426: istore_3\n        427: iload         9\n@@ -1017,15 +1017,15 @@\n        446: iconst_1\n        447: iadd\n        448: aload         5\n        450: iload         4\n        452: iload_3\n        453: iload         8\n        455: isub\n-       456: invokestatic  #10                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       456: invokestatic  #38                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n        459: iload_3\n        460: iload         8\n        462: iconst_1\n        463: iadd\n        464: iload         4\n        466: isub\n        467: isub\n@@ -1034,45 +1034,45 @@\n        471: iconst_1\n        472: iadd\n        473: istore        8\n        475: iinc          8, 1\n        478: goto          297\n        481: iload_3\n        482: ifgt          488\n-       485: ldc           #11                 // String\n+       485: ldc           #44                 // String\n        487: areturn\n        488: iload_3\n        489: iload         4\n        491: if_icmpgt     506\n-       494: new           #12                 // class java/lang/String\n+       494: new           #22                 // class java/lang/String\n        497: dup\n        498: aload         5\n        500: iconst_0\n        501: iload_3\n-       502: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       502: invokespecial #46                 // Method java/lang/String.\"<init>\":([CII)V\n        505: areturn\n        506: iload         7\n        508: ifeq          527\n        511: iload_2\n        512: ifeq          527\n-       515: new           #12                 // class java/lang/String\n+       515: new           #22                 // class java/lang/String\n        518: dup\n        519: aload         5\n        521: iconst_0\n        522: iload_3\n-       523: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       523: invokespecial #46                 // Method java/lang/String.\"<init>\":([CII)V\n        526: areturn\n-       527: new           #12                 // class java/lang/String\n+       527: new           #22                 // class java/lang/String\n        530: dup\n        531: aload         5\n        533: iconst_0\n        534: iload_3\n        535: iconst_1\n        536: isub\n-       537: invokespecial #13                 // Method java/lang/String.\"<init>\":([CII)V\n+       537: invokespecial #46                 // Method java/lang/String.\"<init>\":([CII)V\n        540: areturn\n       LineNumberTable:\n         line 358: 0\n         line 359: 4\n         line 362: 6\n         line 364: 10\n         line 365: 15\n@@ -1204,67 +1204,67 @@\n \n   public static java.lang.String concat(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_1\n-         1: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         1: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n          4: istore_2\n          5: iload_2\n          6: ifge          11\n          9: aconst_null\n         10: areturn\n         11: iload_2\n         12: ifle          20\n         15: aload_1\n-        16: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        16: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         19: areturn\n         20: aload_0\n         21: ifnonnull     26\n         24: aconst_null\n         25: areturn\n         26: aload_0\n-        27: invokevirtual #6                  // Method java/lang/String.length:()I\n+        27: invokevirtual #21                 // Method java/lang/String.length:()I\n         30: istore_3\n         31: iload_3\n         32: ifne          40\n         35: aload_1\n-        36: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         39: areturn\n         40: aload_0\n         41: iload_3\n         42: iconst_1\n         43: isub\n-        44: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+        44: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n         47: istore        4\n         49: iload         4\n-        51: invokestatic  #16                 // Method isSeparator:(C)Z\n+        51: invokestatic  #57                 // Method isSeparator:(C)Z\n         54: ifeq          79\n-        57: new           #17                 // class java/lang/StringBuilder\n+        57: new           #61                 // class java/lang/StringBuilder\n         60: dup\n-        61: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        61: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         64: aload_0\n-        65: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        65: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         68: aload_1\n-        69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        72: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        75: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        69: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        72: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        75: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         78: areturn\n-        79: new           #17                 // class java/lang/StringBuilder\n+        79: new           #61                 // class java/lang/StringBuilder\n         82: dup\n-        83: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        83: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         86: aload_0\n-        87: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        87: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         90: bipush        47\n-        92: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        92: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n         95: aload_1\n-        96: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        99: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       102: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        96: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        99: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       102: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n        105: areturn\n       LineNumberTable:\n         line 497: 0\n         line 498: 5\n         line 499: 9\n         line 501: 11\n         line 502: 15\n@@ -1299,32 +1299,32 @@\n \n   public static boolean directoryContains(java.lang.String, java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n-         1: ldc           #22                 // String canonicalParent\n-         3: invokestatic  #23                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n+         1: ldc           #75                 // String canonicalParent\n+         3: invokestatic  #77                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;\n          6: pop\n          7: aload_1\n          8: ifnonnull     13\n         11: iconst_0\n         12: ireturn\n-        13: getstatic     #24                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+        13: getstatic     #83                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n         16: aload_0\n         17: aload_1\n-        18: invokevirtual #25                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+        18: invokevirtual #89                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n         21: ifeq          26\n         24: iconst_0\n         25: ireturn\n-        26: getstatic     #24                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+        26: getstatic     #83                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n         29: aload_1\n         30: aload_0\n-        31: invokevirtual #26                 // Method org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n+        31: invokevirtual #93                 // Method org/apache/commons/io/IOCase.checkStartsWith:(Ljava/lang/String;Ljava/lang/String;)Z\n         34: ireturn\n       LineNumberTable:\n         line 542: 0\n         line 544: 7\n         line 545: 11\n         line 548: 13\n         line 549: 24\n@@ -1344,23 +1344,23 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n          5: bipush        92\n-         7: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I\n+         7: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I\n         10: iconst_m1\n         11: if_icmpne     16\n         14: aload_0\n         15: areturn\n         16: aload_0\n         17: bipush        92\n         19: bipush        47\n-        21: invokevirtual #28                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        21: invokevirtual #100                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 562: 0\n         line 563: 14\n         line 565: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1374,23 +1374,23 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: ifnull        14\n          4: aload_0\n          5: bipush        47\n-         7: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I\n+         7: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I\n         10: iconst_m1\n         11: if_icmpne     16\n         14: aload_0\n         15: areturn\n         16: aload_0\n         17: bipush        47\n         19: bipush        92\n-        21: invokevirtual #28                 // Method java/lang/String.replace:(CC)Ljava/lang/String;\n+        21: invokevirtual #100                // Method java/lang/String.replace:(CC)Ljava/lang/String;\n         24: areturn\n       LineNumberTable:\n         line 575: 0\n         line 576: 14\n         line 578: 16\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1404,21 +1404,21 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n-         6: invokestatic  #29                 // Method isSystemWindows:()Z\n+         6: invokestatic  #104                // Method isSystemWindows:()Z\n          9: ifeq          19\n         12: aload_0\n-        13: invokestatic  #30                 // Method separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n+        13: invokestatic  #108                // Method separatorsToWindows:(Ljava/lang/String;)Ljava/lang/String;\n         16: goto          23\n         19: aload_0\n-        20: invokestatic  #31                 // Method separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n+        20: invokestatic  #111                // Method separatorsToUnix:(Ljava/lang/String;)Ljava/lang/String;\n         23: areturn\n       LineNumberTable:\n         line 588: 0\n         line 589: 4\n         line 591: 6\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n@@ -1435,23 +1435,23 @@\n     Code:\n       stack=4, locals=8, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_m1\n          5: ireturn\n          6: aload_0\n-         7: invokevirtual #6                  // Method java/lang/String.length:()I\n+         7: invokevirtual #21                 // Method java/lang/String.length:()I\n         10: istore_1\n         11: iload_1\n         12: ifne          17\n         15: iconst_0\n         16: ireturn\n         17: aload_0\n         18: iconst_0\n-        19: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+        19: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n         22: istore_2\n         23: iload_2\n         24: bipush        58\n         26: if_icmpne     31\n         29: iconst_m1\n         30: ireturn\n         31: iload_1\n@@ -1459,32 +1459,32 @@\n         33: if_icmpne     57\n         36: iload_2\n         37: bipush        126\n         39: if_icmpne     44\n         42: iconst_2\n         43: ireturn\n         44: iload_2\n-        45: invokestatic  #16                 // Method isSeparator:(C)Z\n+        45: invokestatic  #57                 // Method isSeparator:(C)Z\n         48: ifeq          55\n         51: iconst_1\n         52: goto          56\n         55: iconst_0\n         56: ireturn\n         57: iload_2\n         58: bipush        126\n         60: if_icmpne     130\n         63: aload_0\n         64: bipush        47\n         66: iconst_1\n-        67: invokevirtual #32                 // Method java/lang/String.indexOf:(II)I\n+        67: invokevirtual #114                // Method java/lang/String.indexOf:(II)I\n         70: istore_3\n         71: aload_0\n         72: bipush        92\n         74: iconst_1\n-        75: invokevirtual #32                 // Method java/lang/String.indexOf:(II)I\n+        75: invokevirtual #114                // Method java/lang/String.indexOf:(II)I\n         78: istore        4\n         80: iload_3\n         81: iconst_m1\n         82: if_icmpne     95\n         85: iload         4\n         87: iconst_m1\n         88: if_icmpne     95\n@@ -1504,83 +1504,83 @@\n        110: if_icmpne     117\n        113: iload_3\n        114: goto          119\n        117: iload         4\n        119: istore        4\n        121: iload_3\n        122: iload         4\n-       124: invokestatic  #33                 // Method java/lang/Math.min:(II)I\n+       124: invokestatic  #117                // Method java/lang/Math.min:(II)I\n        127: iconst_1\n        128: iadd\n        129: ireturn\n        130: aload_0\n        131: iconst_1\n-       132: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n+       132: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n        135: istore_3\n        136: iload_3\n        137: bipush        58\n        139: if_icmpne     205\n        142: iload_2\n-       143: invokestatic  #34                 // Method java/lang/Character.toUpperCase:(C)C\n+       143: invokestatic  #122                // Method java/lang/Character.toUpperCase:(C)C\n        146: istore_2\n        147: iload_2\n        148: bipush        65\n        150: if_icmplt     195\n        153: iload_2\n        154: bipush        90\n        156: if_icmpgt     195\n        159: iload_1\n        160: iconst_2\n        161: if_icmpne     175\n-       164: invokestatic  #35                 // Method org/apache/commons/io/FileSystem.getCurrent:()Lorg/apache/commons/io/FileSystem;\n-       167: invokevirtual #36                 // Method org/apache/commons/io/FileSystem.supportsDriveLetter:()Z\n+       164: invokestatic  #128                // Method org/apache/commons/io/FileSystem.getCurrent:()Lorg/apache/commons/io/FileSystem;\n+       167: invokevirtual #134                // Method org/apache/commons/io/FileSystem.supportsDriveLetter:()Z\n        170: ifne          175\n        173: iconst_0\n        174: ireturn\n        175: iload_1\n        176: iconst_2\n        177: if_icmpeq     191\n        180: aload_0\n        181: iconst_2\n-       182: invokevirtual #15                 // Method java/lang/String.charAt:(I)C\n-       185: invokestatic  #16                 // Method isSeparator:(C)Z\n+       182: invokevirtual #53                 // Method java/lang/String.charAt:(I)C\n+       185: invokestatic  #57                 // Method isSeparator:(C)Z\n        188: ifne          193\n        191: iconst_2\n        192: ireturn\n        193: iconst_3\n        194: ireturn\n        195: iload_2\n        196: bipush        47\n        198: if_icmpne     203\n        201: iconst_1\n        202: ireturn\n        203: iconst_m1\n        204: ireturn\n        205: iload_2\n-       206: invokestatic  #16                 // Method isSeparator:(C)Z\n+       206: invokestatic  #57                 // Method isSeparator:(C)Z\n        209: ifeq          219\n        212: iload_3\n-       213: invokestatic  #16                 // Method isSeparator:(C)Z\n+       213: invokestatic  #57                 // Method isSeparator:(C)Z\n        216: ifne          232\n        219: iload_2\n-       220: invokestatic  #16                 // Method isSeparator:(C)Z\n+       220: invokestatic  #57                 // Method isSeparator:(C)Z\n        223: ifeq          230\n        226: iconst_1\n        227: goto          231\n        230: iconst_0\n        231: ireturn\n        232: aload_0\n        233: bipush        47\n        235: iconst_2\n-       236: invokevirtual #32                 // Method java/lang/String.indexOf:(II)I\n+       236: invokevirtual #114                // Method java/lang/String.indexOf:(II)I\n        239: istore        4\n        241: aload_0\n        242: bipush        92\n        244: iconst_2\n-       245: invokevirtual #32                 // Method java/lang/String.indexOf:(II)I\n+       245: invokevirtual #114                // Method java/lang/String.indexOf:(II)I\n        248: istore        5\n        250: iload         4\n        252: iconst_m1\n        253: if_icmpne     262\n        256: iload         5\n        258: iconst_m1\n        259: if_icmpeq     274\n@@ -1604,27 +1604,27 @@\n        294: if_icmpne     302\n        297: iload         4\n        299: goto          304\n        302: iload         5\n        304: istore        5\n        306: iload         4\n        308: iload         5\n-       310: invokestatic  #33                 // Method java/lang/Math.min:(II)I\n+       310: invokestatic  #117                // Method java/lang/Math.min:(II)I\n        313: iconst_1\n        314: iadd\n        315: istore        6\n        317: aload_0\n        318: iconst_2\n        319: iload         6\n        321: iconst_1\n        322: isub\n-       323: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+       323: invokevirtual #137                // Method java/lang/String.substring:(II)Ljava/lang/String;\n        326: astore        7\n        328: aload         7\n-       330: invokestatic  #38                 // Method isValidHostName:(Ljava/lang/String;)Z\n+       330: invokestatic  #141                // Method isValidHostName:(Ljava/lang/String;)Z\n        333: ifeq          341\n        336: iload         6\n        338: goto          342\n        341: iconst_m1\n        342: ireturn\n       LineNumberTable:\n         line 634: 0\n@@ -1743,23 +1743,23 @@\n       stack=2, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_m1\n          5: ireturn\n          6: aload_0\n          7: bipush        47\n-         9: invokevirtual #39                 // Method java/lang/String.lastIndexOf:(I)I\n+         9: invokevirtual #145                // Method java/lang/String.lastIndexOf:(I)I\n         12: istore_1\n         13: aload_0\n         14: bipush        92\n-        16: invokevirtual #39                 // Method java/lang/String.lastIndexOf:(I)I\n+        16: invokevirtual #145                // Method java/lang/String.lastIndexOf:(I)I\n         19: istore_2\n         20: iload_1\n         21: iload_2\n-        22: invokestatic  #40                 // Method java/lang/Math.max:(II)I\n+        22: invokestatic  #148                // Method java/lang/Math.max:(II)I\n         25: ireturn\n       LineNumberTable:\n         line 707: 0\n         line 708: 4\n         line 710: 6\n         line 711: 13\n         line 712: 20\n@@ -1776,36 +1776,36 @@\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_m1\n          5: ireturn\n-         6: invokestatic  #29                 // Method isSystemWindows:()Z\n+         6: invokestatic  #104                // Method isSystemWindows:()Z\n          9: ifeq          38\n         12: aload_0\n         13: bipush        58\n         15: aload_0\n-        16: invokestatic  #41                 // Method getAdsCriticalOffset:(Ljava/lang/String;)I\n-        19: invokevirtual #32                 // Method java/lang/String.indexOf:(II)I\n+        16: invokestatic  #151                // Method getAdsCriticalOffset:(Ljava/lang/String;)I\n+        19: invokevirtual #114                // Method java/lang/String.indexOf:(II)I\n         22: istore_1\n         23: iload_1\n         24: iconst_m1\n         25: if_icmpeq     38\n-        28: new           #42                 // class java/lang/IllegalArgumentException\n+        28: new           #154                // class java/lang/IllegalArgumentException\n         31: dup\n-        32: ldc           #43                 // String NTFS ADS separator (\\':\\') in file name is forbidden.\n-        34: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #156                // String NTFS ADS separator (\\':\\') in file name is forbidden.\n+        34: invokespecial #158                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n         39: bipush        46\n-        41: invokevirtual #39                 // Method java/lang/String.lastIndexOf:(I)I\n+        41: invokevirtual #145                // Method java/lang/String.lastIndexOf:(I)I\n         44: istore_1\n         45: aload_0\n-        46: invokestatic  #45                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        46: invokestatic  #160                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         49: istore_2\n         50: iload_2\n         51: iload_1\n         52: if_icmple     59\n         55: iconst_m1\n         56: goto          60\n         59: iload_1\n@@ -1843,49 +1843,49 @@\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         7: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         10: istore_1\n         11: iload_1\n         12: ifge          17\n         15: aconst_null\n         16: areturn\n         17: iload_1\n         18: aload_0\n-        19: invokevirtual #6                  // Method java/lang/String.length:()I\n+        19: invokevirtual #21                 // Method java/lang/String.length:()I\n         22: if_icmple     67\n-        25: new           #17                 // class java/lang/StringBuilder\n+        25: new           #61                 // class java/lang/StringBuilder\n         28: dup\n-        29: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        29: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         32: aload_0\n-        33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        33: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         36: bipush        47\n-        38: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        41: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        44: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n-        47: new           #17                 // class java/lang/StringBuilder\n+        38: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        41: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        44: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n+        47: new           #61                 // class java/lang/StringBuilder\n         50: dup\n-        51: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        51: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         54: aload_0\n-        55: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        55: invokevirtual #64                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         58: bipush        47\n-        60: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n-        63: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        60: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+        63: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         66: areturn\n         67: aload_0\n         68: iconst_0\n         69: iload_1\n-        70: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        70: invokevirtual #137                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         73: astore_2\n         74: aload_2\n-        75: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+        75: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         78: aload_2\n         79: areturn\n       LineNumberTable:\n         line 784: 0\n         line 785: 4\n         line 787: 6\n         line 788: 11\n@@ -1911,30 +1911,30 @@\n   public static java.lang.String getPath(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokestatic  #46                 // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+         2: invokestatic  #163                // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 824: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 fileName   Ljava/lang/String;\n \n   public static java.lang.String getPathNoEndSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #46                 // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n+         2: invokestatic  #163                // Method doGetPath:(Ljava/lang/String;I)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 852: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 fileName   Ljava/lang/String;\n \n@@ -1944,45 +1944,45 @@\n     Code:\n       stack=3, locals=6, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         7: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         10: istore_2\n         11: iload_2\n         12: ifge          17\n         15: aconst_null\n         16: areturn\n         17: aload_0\n-        18: invokestatic  #45                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        18: invokestatic  #160                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         21: istore_3\n         22: iload_3\n         23: iload_1\n         24: iadd\n         25: istore        4\n         27: iload_2\n         28: aload_0\n-        29: invokevirtual #6                  // Method java/lang/String.length:()I\n+        29: invokevirtual #21                 // Method java/lang/String.length:()I\n         32: if_icmpge     45\n         35: iload_3\n         36: iflt          45\n         39: iload_2\n         40: iload         4\n         42: if_icmplt     48\n-        45: ldc           #11                 // String\n+        45: ldc           #44                 // String\n         47: areturn\n         48: aload_0\n         49: iload_2\n         50: iload         4\n-        52: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        52: invokevirtual #137                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         55: astore        5\n         57: aload         5\n-        59: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+        59: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         62: aload         5\n         64: areturn\n       LineNumberTable:\n         line 863: 0\n         line 864: 4\n         line 866: 6\n         line 867: 11\n@@ -2015,30 +2015,30 @@\n   public static java.lang.String getFullPath(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_1\n-         2: invokestatic  #47                 // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+         2: invokestatic  #167                // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 906: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 fileName   Ljava/lang/String;\n \n   public static java.lang.String getFullPathNoEndSeparator(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokestatic  #47                 // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n+         2: invokestatic  #167                // Method doGetFullPath:(Ljava/lang/String;Z)Ljava/lang/String;\n          5: areturn\n       LineNumberTable:\n         line 936: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0 fileName   Ljava/lang/String;\n \n@@ -2048,40 +2048,40 @@\n     Code:\n       stack=3, locals=5, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #7                  // Method getPrefixLength:(Ljava/lang/String;)I\n+         7: invokestatic  #27                 // Method getPrefixLength:(Ljava/lang/String;)I\n         10: istore_2\n         11: iload_2\n         12: ifge          17\n         15: aconst_null\n         16: areturn\n         17: iload_2\n         18: aload_0\n-        19: invokevirtual #6                  // Method java/lang/String.length:()I\n+        19: invokevirtual #21                 // Method java/lang/String.length:()I\n         22: if_icmplt     36\n         25: iload_1\n         26: ifeq          34\n         29: aload_0\n-        30: invokestatic  #48                 // Method getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n+        30: invokestatic  #171                // Method getPrefix:(Ljava/lang/String;)Ljava/lang/String;\n         33: areturn\n         34: aload_0\n         35: areturn\n         36: aload_0\n-        37: invokestatic  #45                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        37: invokestatic  #160                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         40: istore_3\n         41: iload_3\n         42: ifge          52\n         45: aload_0\n         46: iconst_0\n         47: iload_2\n-        48: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        48: invokevirtual #137                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         51: areturn\n         52: iload_3\n         53: iload_1\n         54: ifeq          61\n         57: iconst_1\n         58: goto          62\n         61: iconst_0\n@@ -2089,15 +2089,15 @@\n         63: istore        4\n         65: iload         4\n         67: ifne          73\n         70: iinc          4, 1\n         73: aload_0\n         74: iconst_0\n         75: iload         4\n-        77: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        77: invokevirtual #137                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         80: areturn\n       LineNumberTable:\n         line 947: 0\n         line 948: 4\n         line 950: 6\n         line 951: 11\n         line 952: 15\n@@ -2145,23 +2145,23 @@\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         10: aload_0\n-        11: invokestatic  #45                 // Method indexOfLastSeparator:(Ljava/lang/String;)I\n+        11: invokestatic  #160                // Method indexOfLastSeparator:(Ljava/lang/String;)I\n         14: istore_1\n         15: aload_0\n         16: iload_1\n         17: iconst_1\n         18: iadd\n-        19: invokevirtual #49                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        19: invokevirtual #174                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         22: areturn\n       LineNumberTable:\n         line 990: 0\n         line 991: 4\n         line 993: 6\n         line 994: 10\n         line 995: 15\n@@ -2175,20 +2175,20 @@\n   private static void requireNonNullChars(java.lang.String);\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=1, args_size=1\n          0: aload_0\n          1: iconst_0\n-         2: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I\n+         2: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I\n          5: iflt          18\n-         8: new           #42                 // class java/lang/IllegalArgumentException\n+         8: new           #154                // class java/lang/IllegalArgumentException\n         11: dup\n-        12: ldc           #50                 // String Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n-        14: invokespecial #44                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        12: ldc           #177                // String Null byte present in file/path name. There are no known legitimate use cases for such data, but several injection attacks may use it\n+        14: invokespecial #158                // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         17: athrow\n         18: return\n       LineNumberTable:\n         line 1006: 0\n         line 1007: 8\n         line 1010: 18\n       LocalVariableTable:\n@@ -2199,16 +2199,16 @@\n \n   public static java.lang.String getBaseName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Ljava/lang/String;\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #51                 // Method getName:(Ljava/lang/String;)Ljava/lang/String;\n-         4: invokestatic  #52                 // Method removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n+         1: invokestatic  #179                // Method getName:(Ljava/lang/String;)Ljava/lang/String;\n+         4: invokestatic  #182                // Method removeExtension:(Ljava/lang/String;)Ljava/lang/String;\n          7: areturn\n       LineNumberTable:\n         line 1031: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0 fileName   Ljava/lang/String;\n \n@@ -2218,26 +2218,26 @@\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #53                 // Method indexOfExtension:(Ljava/lang/String;)I\n+         7: invokestatic  #185                // Method indexOfExtension:(Ljava/lang/String;)I\n         10: istore_1\n         11: iload_1\n         12: iconst_m1\n         13: if_icmpne     19\n-        16: ldc           #11                 // String\n+        16: ldc           #44                 // String\n         18: areturn\n         19: aload_0\n         20: iload_1\n         21: iconst_1\n         22: iadd\n-        23: invokevirtual #49                 // Method java/lang/String.substring:(I)Ljava/lang/String;\n+        23: invokevirtual #174                // Method java/lang/String.substring:(I)Ljava/lang/String;\n         26: areturn\n       LineNumberTable:\n         line 1063: 0\n         line 1064: 4\n         line 1066: 6\n         line 1067: 11\n         line 1068: 16\n@@ -2256,20 +2256,20 @@\n \n   private static int getAdsCriticalOffset(java.lang.String);\n     descriptor: (Ljava/lang/String;)I\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=3, args_size=1\n          0: aload_0\n-         1: getstatic     #2                  // Field SYSTEM_SEPARATOR:C\n-         4: invokevirtual #39                 // Method java/lang/String.lastIndexOf:(I)I\n+         1: getstatic     #7                  // Field SYSTEM_SEPARATOR:C\n+         4: invokevirtual #145                // Method java/lang/String.lastIndexOf:(I)I\n          7: istore_1\n          8: aload_0\n-         9: getstatic     #9                  // Field OTHER_SEPARATOR:C\n-        12: invokevirtual #39                 // Method java/lang/String.lastIndexOf:(I)I\n+         9: getstatic     #35                 // Field OTHER_SEPARATOR:C\n+        12: invokevirtual #145                // Method java/lang/String.lastIndexOf:(I)I\n         15: istore_2\n         16: iload_1\n         17: iconst_m1\n         18: if_icmpne     32\n         21: iload_2\n         22: iconst_m1\n         23: if_icmpne     28\n@@ -2284,15 +2284,15 @@\n         34: if_icmpne     41\n         37: iload_1\n         38: iconst_1\n         39: iadd\n         40: ireturn\n         41: iload_1\n         42: iload_2\n-        43: invokestatic  #40                 // Method java/lang/Math.max:(II)I\n+        43: invokestatic  #148                // Method java/lang/Math.max:(II)I\n         46: iconst_1\n         47: iadd\n         48: ireturn\n       LineNumberTable:\n         line 1081: 0\n         line 1082: 8\n         line 1083: 16\n@@ -2320,27 +2320,27 @@\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n          1: ifnonnull     6\n          4: aconst_null\n          5: areturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         10: aload_0\n-        11: invokestatic  #53                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        11: invokestatic  #185                // Method indexOfExtension:(Ljava/lang/String;)I\n         14: istore_1\n         15: iload_1\n         16: iconst_m1\n         17: if_icmpne     22\n         20: aload_0\n         21: areturn\n         22: aload_0\n         23: iconst_0\n         24: iload_1\n-        25: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;\n+        25: invokevirtual #137                // Method java/lang/String.substring:(II)Ljava/lang/String;\n         28: areturn\n       LineNumberTable:\n         line 1114: 0\n         line 1115: 4\n         line 1117: 6\n         line 1119: 10\n         line 1120: 15\n@@ -2360,16 +2360,16 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: getstatic     #54                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #55                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #188                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #191                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1139: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 fileName1   Ljava/lang/String;\n             0      10     1 fileName2   Ljava/lang/String;\n@@ -2378,16 +2378,16 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_0\n-         3: getstatic     #24                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #55                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #83                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #191                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1154: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 fileName1   Ljava/lang/String;\n             0      10     1 fileName2   Ljava/lang/String;\n@@ -2396,16 +2396,16 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: getstatic     #54                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #55                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #188                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #191                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1170: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 fileName1   Ljava/lang/String;\n             0      10     1 fileName2   Ljava/lang/String;\n@@ -2414,16 +2414,16 @@\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: iconst_1\n-         3: getstatic     #24                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-         6: invokestatic  #55                 // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n+         3: getstatic     #83                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+         6: invokestatic  #191                // Method equals:(Ljava/lang/String;Ljava/lang/String;ZLorg/apache/commons/io/IOCase;)Z\n          9: ireturn\n       LineNumberTable:\n         line 1187: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0 fileName1   Ljava/lang/String;\n             0      10     1 fileName2   Ljava/lang/String;\n@@ -2444,35 +2444,35 @@\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n         21: ireturn\n         22: iload_2\n         23: ifeq          48\n         26: aload_0\n-        27: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        27: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         30: astore_0\n         31: aload_0\n         32: ifnonnull     37\n         35: iconst_0\n         36: ireturn\n         37: aload_1\n-        38: invokestatic  #14                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n+        38: invokestatic  #49                 // Method normalize:(Ljava/lang/String;)Ljava/lang/String;\n         41: astore_1\n         42: aload_1\n         43: ifnonnull     48\n         46: iconst_0\n         47: ireturn\n         48: aload_3\n         49: ifnonnull     56\n-        52: getstatic     #54                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+        52: getstatic     #188                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         55: astore_3\n         56: aload_3\n         57: aload_0\n         58: aload_1\n-        59: invokevirtual #25                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n+        59: invokevirtual #89                 // Method org/apache/commons/io/IOCase.checkEquals:(Ljava/lang/String;Ljava/lang/String;)Z\n         62: ireturn\n       LineNumberTable:\n         line 1205: 0\n         line 1206: 8\n         line 1208: 22\n         line 1209: 26\n         line 1210: 31\n@@ -2505,34 +2505,34 @@\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         10: aload_1\n         11: ifnull        21\n         14: aload_1\n-        15: invokevirtual #56                 // Method java/lang/String.isEmpty:()Z\n+        15: invokevirtual #195                // Method java/lang/String.isEmpty:()Z\n         18: ifeq          35\n         21: aload_0\n-        22: invokestatic  #53                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        22: invokestatic  #185                // Method indexOfExtension:(Ljava/lang/String;)I\n         25: iconst_m1\n         26: if_icmpne     33\n         29: iconst_1\n         30: goto          34\n         33: iconst_0\n         34: ireturn\n         35: aload_0\n-        36: invokestatic  #57                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        36: invokestatic  #198                // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         39: astore_2\n         40: aload_2\n         41: aload_1\n-        42: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        42: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         45: ireturn\n       LineNumberTable:\n         line 1238: 0\n         line 1239: 4\n         line 1241: 6\n         line 1243: 10\n         line 1244: 21\n@@ -2557,30 +2557,30 @@\n     Code:\n       stack=2, locals=7, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         10: aload_1\n         11: ifnull        19\n         14: aload_1\n         15: arraylength\n         16: ifne          33\n         19: aload_0\n-        20: invokestatic  #53                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        20: invokestatic  #185                // Method indexOfExtension:(Ljava/lang/String;)I\n         23: iconst_m1\n         24: if_icmpne     31\n         27: iconst_1\n         28: goto          32\n         31: iconst_0\n         32: ireturn\n         33: aload_0\n-        34: invokestatic  #57                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        34: invokestatic  #198                // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         37: astore_2\n         38: aload_1\n         39: astore_3\n         40: aload_3\n         41: arraylength\n         42: istore        4\n         44: iconst_0\n@@ -2590,15 +2590,15 @@\n         51: if_icmpge     77\n         54: aload_3\n         55: iload         5\n         57: aaload\n         58: astore        6\n         60: aload_2\n         61: aload         6\n-        63: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        63: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         66: ifeq          71\n         69: iconst_1\n         70: ireturn\n         71: iinc          5, 1\n         74: goto          47\n         77: iconst_0\n         78: ireturn\n@@ -2641,44 +2641,44 @@\n     Code:\n       stack=2, locals=5, args_size=2\n          0: aload_0\n          1: ifnonnull     6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: invokestatic  #5                  // Method requireNonNullChars:(Ljava/lang/String;)V\n+         7: invokestatic  #17                 // Method requireNonNullChars:(Ljava/lang/String;)V\n         10: aload_1\n         11: ifnull        23\n         14: aload_1\n-        15: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z\n+        15: invokeinterface #204,  1          // InterfaceMethod java/util/Collection.isEmpty:()Z\n         20: ifeq          37\n         23: aload_0\n-        24: invokestatic  #53                 // Method indexOfExtension:(Ljava/lang/String;)I\n+        24: invokestatic  #185                // Method indexOfExtension:(Ljava/lang/String;)I\n         27: iconst_m1\n         28: if_icmpne     35\n         31: iconst_1\n         32: goto          36\n         35: iconst_0\n         36: ireturn\n         37: aload_0\n-        38: invokestatic  #57                 // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n+        38: invokestatic  #198                // Method getExtension:(Ljava/lang/String;)Ljava/lang/String;\n         41: astore_2\n         42: aload_1\n-        43: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n+        43: invokeinterface #207,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;\n         48: astore_3\n         49: aload_3\n-        50: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z\n+        50: invokeinterface #211,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z\n         55: ifeq          83\n         58: aload_3\n-        59: invokeinterface #62,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n-        64: checkcast     #12                 // class java/lang/String\n+        59: invokeinterface #216,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;\n+        64: checkcast     #22                 // class java/lang/String\n         67: astore        4\n         69: aload_2\n         70: aload         4\n-        72: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+        72: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n         75: ifeq          80\n         78: iconst_1\n         79: ireturn\n         80: goto          49\n         83: iconst_0\n         84: ireturn\n       LineNumberTable:\n@@ -2711,25 +2711,25 @@\n         frame_type = 0 /* same */\n         frame_type = 253 /* append */\n           offset_delta = 11\n           locals = [ class java/lang/String, class java/util/Iterator ]\n         frame_type = 30 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 2\n-    Signature: #258                         // (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n+    Signature: #486                         // (Ljava/lang/String;Ljava/util/Collection<Ljava/lang/String;>;)Z\n \n   public static boolean wildcardMatch(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #54                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n-         5: invokestatic  #63                 // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+         2: getstatic     #188                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+         5: invokestatic  #220                // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n          8: ireturn\n       LineNumberTable:\n         line 1334: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 fileName   Ljava/lang/String;\n             0       9     1 wildcardMatcher   Ljava/lang/String;\n@@ -2737,16 +2737,16 @@\n   public static boolean wildcardMatchOnSystem(java.lang.String, java.lang.String);\n     descriptor: (Ljava/lang/String;Ljava/lang/String;)Z\n     flags: (0x0009) ACC_PUBLIC, ACC_STATIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: getstatic     #24                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n-         5: invokestatic  #63                 // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n+         2: getstatic     #83                 // Field org/apache/commons/io/IOCase.SYSTEM:Lorg/apache/commons/io/IOCase;\n+         5: invokestatic  #220                // Method wildcardMatch:(Ljava/lang/String;Ljava/lang/String;Lorg/apache/commons/io/IOCase;)Z\n          8: ireturn\n       LineNumberTable:\n         line 1360: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0 fileName   Ljava/lang/String;\n             0       9     1 wildcardMatcher   Ljava/lang/String;\n@@ -2766,37 +2766,37 @@\n         11: ifnull        18\n         14: aload_1\n         15: ifnonnull     20\n         18: iconst_0\n         19: ireturn\n         20: aload_2\n         21: ifnonnull     28\n-        24: getstatic     #54                 // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n+        24: getstatic     #188                // Field org/apache/commons/io/IOCase.SENSITIVE:Lorg/apache/commons/io/IOCase;\n         27: astore_2\n         28: aload_1\n-        29: invokestatic  #64                 // Method splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n+        29: invokestatic  #224                // Method splitOnTokens:(Ljava/lang/String;)[Ljava/lang/String;\n         32: astore_3\n         33: iconst_0\n         34: istore        4\n         36: iconst_0\n         37: istore        5\n         39: iconst_0\n         40: istore        6\n-        42: new           #65                 // class java/util/ArrayDeque\n+        42: new           #228                // class java/util/ArrayDeque\n         45: dup\n         46: aload_3\n         47: arraylength\n-        48: invokespecial #66                 // Method java/util/ArrayDeque.\"<init>\":(I)V\n+        48: invokespecial #230                // Method java/util/ArrayDeque.\"<init>\":(I)V\n         51: astore        7\n         53: aload         7\n-        55: invokeinterface #67,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z\n+        55: invokeinterface #233,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z\n         60: ifne          90\n         63: aload         7\n-        65: invokeinterface #68,  1           // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;\n-        70: checkcast     #69                 // class \"[I\"\n+        65: invokeinterface #236,  1          // InterfaceMethod java/util/Deque.pop:()Ljava/lang/Object;\n+        70: checkcast     #239                // class \"[I\"\n         73: astore        8\n         75: aload         8\n         77: iconst_0\n         78: iaload\n         79: istore        6\n         81: aload         8\n         83: iconst_1\n@@ -2807,115 +2807,115 @@\n         90: iload         6\n         92: aload_3\n         93: arraylength\n         94: if_icmpge     271\n         97: aload_3\n         98: iload         6\n        100: aaload\n-       101: ldc           #70                 // String ?\n-       103: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       101: ldc           #241                // String ?\n+       103: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        106: ifeq          130\n        109: iinc          5, 1\n        112: iload         5\n        114: aload_0\n-       115: invokevirtual #6                  // Method java/lang/String.length:()I\n+       115: invokevirtual #21                 // Method java/lang/String.length:()I\n        118: if_icmple     124\n        121: goto          271\n        124: iconst_0\n        125: istore        4\n        127: goto          265\n        130: aload_3\n        131: iload         6\n        133: aaload\n-       134: ldc           #71                 // String *\n-       136: invokevirtual #58                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n+       134: ldc           #243                // String *\n+       136: invokevirtual #201                // Method java/lang/String.equals:(Ljava/lang/Object;)Z\n        139: ifeq          163\n        142: iconst_1\n        143: istore        4\n        145: iload         6\n        147: aload_3\n        148: arraylength\n        149: iconst_1\n        150: isub\n        151: if_icmpne     265\n        154: aload_0\n-       155: invokevirtual #6                  // Method java/lang/String.length:()I\n+       155: invokevirtual #21                 // Method java/lang/String.length:()I\n        158: istore        5\n        160: goto          265\n        163: iload         4\n        165: ifeq          233\n        168: aload_2\n        169: aload_0\n        170: iload         5\n        172: aload_3\n        173: iload         6\n        175: aaload\n-       176: invokevirtual #72                 // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+       176: invokevirtual #245                // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n        179: istore        5\n        181: iload         5\n        183: iconst_m1\n        184: if_icmpne     190\n        187: goto          271\n        190: aload_2\n        191: aload_0\n        192: iload         5\n        194: iconst_1\n        195: iadd\n        196: aload_3\n        197: iload         6\n        199: aaload\n-       200: invokevirtual #72                 // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n+       200: invokevirtual #245                // Method org/apache/commons/io/IOCase.checkIndexOf:(Ljava/lang/String;ILjava/lang/String;)I\n        203: istore        8\n        205: iload         8\n        207: iflt          230\n        210: aload         7\n        212: iconst_2\n        213: newarray       int\n        215: dup\n        216: iconst_0\n        217: iload         6\n        219: iastore\n        220: dup\n        221: iconst_1\n        222: iload         8\n        224: iastore\n-       225: invokeinterface #73,  2           // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V\n+       225: invokeinterface #249,  2          // InterfaceMethod java/util/Deque.push:(Ljava/lang/Object;)V\n        230: goto          250\n        233: aload_2\n        234: aload_0\n        235: iload         5\n        237: aload_3\n        238: iload         6\n        240: aaload\n-       241: invokevirtual #74                 // Method org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n+       241: invokevirtual #253                // Method org/apache/commons/io/IOCase.checkRegionMatches:(Ljava/lang/String;ILjava/lang/String;)Z\n        244: ifne          250\n        247: goto          271\n        250: iload         5\n        252: aload_3\n        253: iload         6\n        255: aaload\n-       256: invokevirtual #6                  // Method java/lang/String.length:()I\n+       256: invokevirtual #21                 // Method java/lang/String.length:()I\n        259: iadd\n        260: istore        5\n        262: iconst_0\n        263: istore        4\n        265: iinc          6, 1\n        268: goto          90\n        271: iload         6\n        273: aload_3\n        274: arraylength\n        275: if_icmpne     289\n        278: iload         5\n        280: aload_0\n-       281: invokevirtual #6                  // Method java/lang/String.length:()I\n+       281: invokevirtual #21                 // Method java/lang/String.length:()I\n        284: if_icmpne     289\n        287: iconst_1\n        288: ireturn\n        289: aload         7\n-       291: invokeinterface #67,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z\n+       291: invokeinterface #233,  1          // InterfaceMethod java/util/Deque.isEmpty:()Z\n        296: ifeq          53\n        299: iconst_0\n        300: ireturn\n       LineNumberTable:\n         line 1378: 0\n         line 1379: 8\n         line 1381: 10\n@@ -2997,39 +2997,39 @@\n   static java.lang.String[] splitOnTokens(java.lang.String);\n     descriptor: (Ljava/lang/String;)[Ljava/lang/String;\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=4, locals=9, args_size=1\n          0: aload_0\n          1: bipush        63\n-         3: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I\n+         3: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I\n          6: iconst_m1\n          7: if_icmpne     29\n         10: aload_0\n         11: bipush        42\n-        13: invokevirtual #27                 // Method java/lang/String.indexOf:(I)I\n+        13: invokevirtual #96                 // Method java/lang/String.indexOf:(I)I\n         16: iconst_m1\n         17: if_icmpne     29\n         20: iconst_1\n-        21: anewarray     #12                 // class java/lang/String\n+        21: anewarray     #22                 // class java/lang/String\n         24: dup\n         25: iconst_0\n         26: aload_0\n         27: aastore\n         28: areturn\n         29: aload_0\n-        30: invokevirtual #75                 // Method java/lang/String.toCharArray:()[C\n+        30: invokevirtual #257                // Method java/lang/String.toCharArray:()[C\n         33: astore_1\n-        34: new           #76                 // class java/util/ArrayList\n+        34: new           #261                // class java/util/ArrayList\n         37: dup\n-        38: invokespecial #77                 // Method java/util/ArrayList.\"<init>\":()V\n+        38: invokespecial #263                // Method java/util/ArrayList.\"<init>\":()V\n         41: astore_2\n-        42: new           #17                 // class java/lang/StringBuilder\n+        42: new           #61                 // class java/lang/StringBuilder\n         45: dup\n-        46: invokespecial #18                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        46: invokespecial #63                 // Method java/lang/StringBuilder.\"<init>\":()V\n         49: astore_3\n         50: iconst_0\n         51: istore        4\n         53: aload_1\n         54: astore        5\n         56: aload         5\n         58: arraylength\n@@ -3046,60 +3046,60 @@\n         78: iload         8\n         80: bipush        63\n         82: if_icmpeq     92\n         85: iload         8\n         87: bipush        42\n         89: if_icmpne     147\n         92: aload_3\n-        93: invokevirtual #78                 // Method java/lang/StringBuilder.length:()I\n+        93: invokevirtual #264                // Method java/lang/StringBuilder.length:()I\n         96: ifeq          113\n         99: aload_2\n        100: aload_3\n-       101: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       104: invokevirtual #79                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       101: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       104: invokevirtual #265                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        107: pop\n        108: aload_3\n        109: iconst_0\n-       110: invokevirtual #80                 // Method java/lang/StringBuilder.setLength:(I)V\n+       110: invokevirtual #268                // Method java/lang/StringBuilder.setLength:(I)V\n        113: iload         8\n        115: bipush        63\n        117: if_icmpne     130\n        120: aload_2\n-       121: ldc           #70                 // String ?\n-       123: invokevirtual #79                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       121: ldc           #241                // String ?\n+       123: invokevirtual #265                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        126: pop\n        127: goto          154\n        130: iload         4\n        132: bipush        42\n        134: if_icmpeq     154\n        137: aload_2\n-       138: ldc           #71                 // String *\n-       140: invokevirtual #79                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       138: ldc           #243                // String *\n+       140: invokevirtual #265                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        143: pop\n        144: goto          154\n        147: aload_3\n        148: iload         8\n-       150: invokevirtual #21                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n+       150: invokevirtual #72                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;\n        153: pop\n        154: iload         8\n        156: istore        4\n        158: iinc          7, 1\n        161: goto          64\n        164: aload_3\n-       165: invokevirtual #78                 // Method java/lang/StringBuilder.length:()I\n+       165: invokevirtual #264                // Method java/lang/StringBuilder.length:()I\n        168: ifeq          180\n        171: aload_2\n        172: aload_3\n-       173: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-       176: invokevirtual #79                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n+       173: invokevirtual #68                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       176: invokevirtual #265                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z\n        179: pop\n        180: aload_2\n-       181: getstatic     #81                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-       184: invokevirtual #82                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       187: checkcast     #83                 // class \"[Ljava/lang/String;\"\n+       181: getstatic     #271                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+       184: invokevirtual #275                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       187: checkcast     #279                // class \"[Ljava/lang/String;\"\n        190: areturn\n       LineNumberTable:\n         line 1469: 0\n         line 1470: 20\n         line 1473: 29\n         line 1474: 34\n         line 1475: 42\n@@ -3151,18 +3151,18 @@\n \n   private static boolean isValidHostName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: invokestatic  #84                 // Method isIPv6Address:(Ljava/lang/String;)Z\n+         1: invokestatic  #280                // Method isIPv6Address:(Ljava/lang/String;)Z\n          4: ifne          14\n          7: aload_0\n-         8: invokestatic  #85                 // Method isRFC3986HostName:(Ljava/lang/String;)Z\n+         8: invokestatic  #283                // Method isRFC3986HostName:(Ljava/lang/String;)Z\n         11: ifeq          18\n         14: iconst_1\n         15: goto          19\n         18: iconst_0\n         19: ireturn\n       LineNumberTable:\n         line 1513: 0\n@@ -3176,345 +3176,345 @@\n           stack = [ int ]\n \n   private static boolean isIPv4Address(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=2, locals=5, args_size=1\n-         0: getstatic     #86                 // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n+         0: getstatic     #286                // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n          3: aload_0\n-         4: invokevirtual #87                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+         4: invokevirtual #290                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n          7: astore_1\n          8: aload_1\n-         9: invokevirtual #88                 // Method java/util/regex/Matcher.matches:()Z\n+         9: invokevirtual #296                // Method java/util/regex/Matcher.matches:()Z\n         12: ifeq          23\n         15: aload_1\n-        16: invokevirtual #89                 // Method java/util/regex/Matcher.groupCount:()I\n+        16: invokevirtual #301                // Method java/util/regex/Matcher.groupCount:()I\n         19: iconst_4\n         20: if_icmpeq     25\n         23: iconst_0\n         24: ireturn\n         25: iconst_1\n         26: istore_2\n         27: iload_2\n         28: iconst_4\n-        29: if_icmpgt     79\n+        29: if_icmpgt     80\n         32: aload_1\n         33: iload_2\n-        34: invokevirtual #90                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n+        34: invokevirtual #304                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;\n         37: astore_3\n         38: aload_3\n-        39: invokestatic  #91                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n+        39: invokestatic  #307                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I\n         42: istore        4\n         44: iload         4\n         46: sipush        255\n         49: if_icmple     54\n         52: iconst_0\n         53: ireturn\n         54: aload_3\n-        55: invokevirtual #6                  // Method java/lang/String.length:()I\n+        55: invokevirtual #21                 // Method java/lang/String.length:()I\n         58: iconst_1\n-        59: if_icmple     73\n+        59: if_icmple     74\n         62: aload_3\n-        63: ldc           #92                 // String 0\n-        65: invokevirtual #93                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        68: ifeq          73\n-        71: iconst_0\n-        72: ireturn\n-        73: iinc          2, 1\n-        76: goto          27\n-        79: iconst_1\n-        80: ireturn\n+        63: ldc_w         #312                // String 0\n+        66: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        69: ifeq          74\n+        72: iconst_0\n+        73: ireturn\n+        74: iinc          2, 1\n+        77: goto          27\n+        80: iconst_1\n+        81: ireturn\n       LineNumberTable:\n         line 1528: 0\n         line 1529: 8\n         line 1530: 23\n         line 1534: 25\n         line 1535: 32\n         line 1536: 38\n         line 1537: 44\n         line 1538: 52\n         line 1541: 54\n-        line 1542: 71\n-        line 1534: 73\n-        line 1547: 79\n+        line 1542: 72\n+        line 1534: 74\n+        line 1547: 80\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           38      35     3 ipSegment   Ljava/lang/String;\n-           44      29     4 iIpSegment   I\n-           27      52     2     i   I\n-            0      81     0  name   Ljava/lang/String;\n-            8      73     1     m   Ljava/util/regex/Matcher;\n+           38      36     3 ipSegment   Ljava/lang/String;\n+           44      30     4 iIpSegment   I\n+           27      53     2     i   I\n+            0      82     0  name   Ljava/lang/String;\n+            8      74     1     m   Ljava/util/regex/Matcher;\n       StackMapTable: number_of_entries = 6\n         frame_type = 252 /* append */\n           offset_delta = 23\n           locals = [ class java/util/regex/Matcher ]\n         frame_type = 1 /* same */\n         frame_type = 252 /* append */\n           offset_delta = 1\n           locals = [ int ]\n         frame_type = 253 /* append */\n           offset_delta = 26\n           locals = [ class java/lang/String, int ]\n         frame_type = 249 /* chop */\n-          offset_delta = 18\n+          offset_delta = 19\n         frame_type = 250 /* chop */\n           offset_delta = 5\n \n   private static boolean isIPv6Address(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=9, args_size=1\n          0: aload_0\n-         1: ldc           #94                 // String ::\n-         3: invokevirtual #95                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-         6: istore_1\n-         7: iload_1\n-         8: ifeq          28\n-        11: aload_0\n-        12: ldc           #94                 // String ::\n-        14: invokevirtual #96                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n-        17: aload_0\n-        18: ldc           #94                 // String ::\n-        20: invokevirtual #97                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n-        23: if_icmpeq     28\n-        26: iconst_0\n-        27: ireturn\n-        28: aload_0\n-        29: ldc           #98                 // String :\n-        31: invokevirtual #93                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        34: ifeq          46\n-        37: aload_0\n-        38: ldc           #94                 // String ::\n-        40: invokevirtual #93                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-        43: ifeq          64\n-        46: aload_0\n-        47: ldc           #98                 // String :\n-        49: invokevirtual #99                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        52: ifeq          66\n-        55: aload_0\n-        56: ldc           #94                 // String ::\n-        58: invokevirtual #99                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        61: ifne          66\n-        64: iconst_0\n-        65: ireturn\n-        66: aload_0\n-        67: ldc           #98                 // String :\n-        69: invokevirtual #100                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n-        72: astore_2\n-        73: iload_1\n-        74: ifeq          149\n-        77: new           #76                 // class java/util/ArrayList\n-        80: dup\n-        81: aload_2\n-        82: invokestatic  #101                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n-        85: invokespecial #102                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n-        88: astore_3\n-        89: aload_0\n-        90: ldc           #94                 // String ::\n-        92: invokevirtual #99                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n-        95: ifeq          110\n-        98: aload_3\n-        99: ldc           #11                 // String\n-       101: invokeinterface #103,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n-       106: pop\n-       107: goto          136\n-       110: aload_0\n-       111: ldc           #94                 // String ::\n-       113: invokevirtual #93                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n-       116: ifeq          136\n-       119: aload_3\n-       120: invokeinterface #104,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n-       125: ifne          136\n-       128: aload_3\n-       129: iconst_0\n-       130: invokeinterface #105,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;\n-       135: pop\n-       136: aload_3\n-       137: getstatic     #81                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n-       140: invokeinterface #106,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n-       145: checkcast     #83                 // class \"[Ljava/lang/String;\"\n-       148: astore_2\n-       149: aload_2\n-       150: arraylength\n-       151: bipush        8\n-       153: if_icmple     158\n-       156: iconst_0\n-       157: ireturn\n-       158: iconst_0\n-       159: istore_3\n-       160: iconst_0\n-       161: istore        4\n-       163: iconst_0\n-       164: istore        5\n-       166: iload         5\n-       168: aload_2\n-       169: arraylength\n-       170: if_icmpge     289\n-       173: aload_2\n-       174: iload         5\n-       176: aaload\n-       177: astore        6\n-       179: aload         6\n-       181: invokevirtual #56                 // Method java/lang/String.isEmpty:()Z\n-       184: ifeq          198\n-       187: iinc          4, 1\n-       190: iload         4\n-       192: iconst_1\n-       193: if_icmple     280\n-       196: iconst_0\n-       197: ireturn\n-       198: iconst_0\n-       199: istore        4\n-       201: iload         5\n-       203: aload_2\n-       204: arraylength\n-       205: iconst_1\n-       206: isub\n-       207: if_icmpne     236\n-       210: aload         6\n-       212: ldc           #107                // String .\n-       214: invokevirtual #95                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n-       217: ifeq          236\n+         1: ldc_w         #317                // String ::\n+         4: invokevirtual #319                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+         7: istore_1\n+         8: iload_1\n+         9: ifeq          31\n+        12: aload_0\n+        13: ldc_w         #317                // String ::\n+        16: invokevirtual #323                // Method java/lang/String.indexOf:(Ljava/lang/String;)I\n+        19: aload_0\n+        20: ldc_w         #317                // String ::\n+        23: invokevirtual #325                // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I\n+        26: if_icmpeq     31\n+        29: iconst_0\n+        30: ireturn\n+        31: aload_0\n+        32: ldc_w         #327                // String :\n+        35: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        38: ifeq          51\n+        41: aload_0\n+        42: ldc_w         #317                // String ::\n+        45: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+        48: ifeq          71\n+        51: aload_0\n+        52: ldc_w         #327                // String :\n+        55: invokevirtual #329                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        58: ifeq          73\n+        61: aload_0\n+        62: ldc_w         #317                // String ::\n+        65: invokevirtual #329                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+        68: ifne          73\n+        71: iconst_0\n+        72: ireturn\n+        73: aload_0\n+        74: ldc_w         #327                // String :\n+        77: invokevirtual #332                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;\n+        80: astore_2\n+        81: iload_1\n+        82: ifeq          159\n+        85: new           #261                // class java/util/ArrayList\n+        88: dup\n+        89: aload_2\n+        90: invokestatic  #335                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;\n+        93: invokespecial #341                // Method java/util/ArrayList.\"<init>\":(Ljava/util/Collection;)V\n+        96: astore_3\n+        97: aload_0\n+        98: ldc_w         #317                // String ::\n+       101: invokevirtual #329                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z\n+       104: ifeq          119\n+       107: aload_3\n+       108: ldc           #44                 // String\n+       110: invokeinterface #344,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z\n+       115: pop\n+       116: goto          146\n+       119: aload_0\n+       120: ldc_w         #317                // String ::\n+       123: invokevirtual #314                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z\n+       126: ifeq          146\n+       129: aload_3\n+       130: invokeinterface #347,  1          // InterfaceMethod java/util/List.isEmpty:()Z\n+       135: ifne          146\n+       138: aload_3\n+       139: iconst_0\n+       140: invokeinterface #348,  2          // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;\n+       145: pop\n+       146: aload_3\n+       147: getstatic     #271                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+       150: invokeinterface #352,  2          // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;\n+       155: checkcast     #279                // class \"[Ljava/lang/String;\"\n+       158: astore_2\n+       159: aload_2\n+       160: arraylength\n+       161: bipush        8\n+       163: if_icmple     168\n+       166: iconst_0\n+       167: ireturn\n+       168: iconst_0\n+       169: istore_3\n+       170: iconst_0\n+       171: istore        4\n+       173: iconst_0\n+       174: istore        5\n+       176: iload         5\n+       178: aload_2\n+       179: arraylength\n+       180: if_icmpge     301\n+       183: aload_2\n+       184: iload         5\n+       186: aaload\n+       187: astore        6\n+       189: aload         6\n+       191: invokevirtual #195                // Method java/lang/String.isEmpty:()Z\n+       194: ifeq          208\n+       197: iinc          4, 1\n+       200: iload         4\n+       202: iconst_1\n+       203: if_icmple     292\n+       206: iconst_0\n+       207: ireturn\n+       208: iconst_0\n+       209: istore        4\n+       211: iload         5\n+       213: aload_2\n+       214: arraylength\n+       215: iconst_1\n+       216: isub\n+       217: if_icmpne     247\n        220: aload         6\n-       222: invokestatic  #108                // Method isIPv4Address:(Ljava/lang/String;)Z\n-       225: ifne          230\n-       228: iconst_0\n-       229: ireturn\n-       230: iinc          3, 2\n-       233: goto          283\n-       236: aload         6\n-       238: invokevirtual #6                  // Method java/lang/String.length:()I\n-       241: iconst_4\n-       242: if_icmple     247\n-       245: iconst_0\n-       246: ireturn\n-       247: iconst_0\n-       248: istore        7\n-       250: aload         6\n-       252: bipush        16\n-       254: invokestatic  #109                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n-       257: istore        7\n-       259: goto          266\n-       262: astore        8\n-       264: iconst_0\n-       265: ireturn\n-       266: iload         7\n-       268: iflt          278\n-       271: iload         7\n-       273: ldc           #111                // int 65535\n-       275: if_icmple     280\n-       278: iconst_0\n-       279: ireturn\n-       280: iinc          3, 1\n-       283: iinc          5, 1\n-       286: goto          166\n-       289: iload_3\n-       290: bipush        8\n-       292: if_icmpgt     309\n-       295: iload_3\n-       296: bipush        8\n-       298: if_icmpge     305\n-       301: iload_1\n-       302: ifeq          309\n-       305: iconst_1\n-       306: goto          310\n-       309: iconst_0\n-       310: ireturn\n+       222: ldc_w         #353                // String .\n+       225: invokevirtual #319                // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z\n+       228: ifeq          247\n+       231: aload         6\n+       233: invokestatic  #355                // Method isIPv4Address:(Ljava/lang/String;)Z\n+       236: ifne          241\n+       239: iconst_0\n+       240: ireturn\n+       241: iinc          3, 2\n+       244: goto          295\n+       247: aload         6\n+       249: invokevirtual #21                 // Method java/lang/String.length:()I\n+       252: iconst_4\n+       253: if_icmple     258\n+       256: iconst_0\n+       257: ireturn\n+       258: iconst_0\n+       259: istore        7\n+       261: aload         6\n+       263: bipush        16\n+       265: invokestatic  #358                // Method java/lang/Integer.parseInt:(Ljava/lang/String;I)I\n+       268: istore        7\n+       270: goto          277\n+       273: astore        8\n+       275: iconst_0\n+       276: ireturn\n+       277: iload         7\n+       279: iflt          290\n+       282: iload         7\n+       284: ldc_w         #363                // int 65535\n+       287: if_icmple     292\n+       290: iconst_0\n+       291: ireturn\n+       292: iinc          3, 1\n+       295: iinc          5, 1\n+       298: goto          176\n+       301: iload_3\n+       302: bipush        8\n+       304: if_icmpgt     321\n+       307: iload_3\n+       308: bipush        8\n+       310: if_icmpge     317\n+       313: iload_1\n+       314: ifeq          321\n+       317: iconst_1\n+       318: goto          322\n+       321: iconst_0\n+       322: ireturn\n       Exception table:\n          from    to  target type\n-           250   259   262   Class java/lang/NumberFormatException\n+           261   270   273   Class java/lang/NumberFormatException\n       LineNumberTable:\n         line 1563: 0\n-        line 1564: 7\n-        line 1565: 26\n-        line 1567: 28\n-        line 1568: 49\n-        line 1569: 64\n-        line 1571: 66\n-        line 1572: 73\n-        line 1573: 77\n-        line 1574: 89\n-        line 1576: 98\n-        line 1577: 110\n-        line 1578: 128\n-        line 1580: 136\n-        line 1582: 149\n-        line 1583: 156\n-        line 1585: 158\n-        line 1586: 160\n-        line 1587: 163\n-        line 1588: 173\n-        line 1589: 179\n-        line 1590: 187\n-        line 1591: 190\n-        line 1592: 196\n-        line 1595: 198\n-        line 1597: 201\n-        line 1598: 220\n-        line 1599: 228\n-        line 1601: 230\n-        line 1602: 233\n-        line 1604: 236\n-        line 1605: 245\n-        line 1607: 247\n-        line 1609: 250\n-        line 1612: 259\n-        line 1610: 262\n-        line 1611: 264\n-        line 1613: 266\n-        line 1614: 278\n-        line 1617: 280\n-        line 1587: 283\n-        line 1619: 289\n-      LocalVariableTable:\n-        Start  Length  Slot  Name   Signature\n-           89      60     3 octetList   Ljava/util/List;\n-          264       2     8     e   Ljava/lang/NumberFormatException;\n-          250      30     7 octetInt   I\n-          179     104     6 octet   Ljava/lang/String;\n-          166     123     5 index   I\n-            0     311     0 inet6Address   Ljava/lang/String;\n-            7     304     1 containsCompressedZeroes   Z\n-           73     238     2 octets   [Ljava/lang/String;\n-          160     151     3 validOctets   I\n-          163     148     4 emptyOctets   I\n+        line 1564: 8\n+        line 1565: 29\n+        line 1567: 31\n+        line 1568: 55\n+        line 1569: 71\n+        line 1571: 73\n+        line 1572: 81\n+        line 1573: 85\n+        line 1574: 97\n+        line 1576: 107\n+        line 1577: 119\n+        line 1578: 138\n+        line 1580: 146\n+        line 1582: 159\n+        line 1583: 166\n+        line 1585: 168\n+        line 1586: 170\n+        line 1587: 173\n+        line 1588: 183\n+        line 1589: 189\n+        line 1590: 197\n+        line 1591: 200\n+        line 1592: 206\n+        line 1595: 208\n+        line 1597: 211\n+        line 1598: 231\n+        line 1599: 239\n+        line 1601: 241\n+        line 1602: 244\n+        line 1604: 247\n+        line 1605: 256\n+        line 1607: 258\n+        line 1609: 261\n+        line 1612: 270\n+        line 1610: 273\n+        line 1611: 275\n+        line 1613: 277\n+        line 1614: 290\n+        line 1617: 292\n+        line 1587: 295\n+        line 1619: 301\n+      LocalVariableTable:\n+        Start  Length  Slot  Name   Signature\n+           97      62     3 octetList   Ljava/util/List;\n+          275       2     8     e   Ljava/lang/NumberFormatException;\n+          261      31     7 octetInt   I\n+          189     106     6 octet   Ljava/lang/String;\n+          176     125     5 index   I\n+            0     323     0 inet6Address   Ljava/lang/String;\n+            8     315     1 containsCompressedZeroes   Z\n+           81     242     2 octets   [Ljava/lang/String;\n+          170     153     3 validOctets   I\n+          173     150     4 emptyOctets   I\n       LocalVariableTypeTable:\n         Start  Length  Slot  Name   Signature\n-           89      60     3 octetList   Ljava/util/List<Ljava/lang/String;>;\n+           97      62     3 octetList   Ljava/util/List<Ljava/lang/String;>;\n       StackMapTable: number_of_entries = 22\n         frame_type = 252 /* append */\n-          offset_delta = 28\n+          offset_delta = 31\n           locals = [ int ]\n-        frame_type = 17 /* same */\n-        frame_type = 17 /* same */\n+        frame_type = 19 /* same */\n+        frame_type = 19 /* same */\n         frame_type = 1 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 43\n+          offset_delta = 45\n           locals = [ class \"[Ljava/lang/String;\", class java/util/List ]\n-        frame_type = 25 /* same */\n+        frame_type = 26 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 12\n         frame_type = 8 /* same */\n         frame_type = 254 /* append */\n           offset_delta = 7\n           locals = [ int, int, int ]\n         frame_type = 252 /* append */\n           offset_delta = 31\n           locals = [ class java/lang/String ]\n-        frame_type = 31 /* same */\n+        frame_type = 32 /* same */\n         frame_type = 5 /* same */\n         frame_type = 10 /* same */\n         frame_type = 255 /* full_frame */\n           offset_delta = 14\n           locals = [ class java/lang/String, int, class \"[Ljava/lang/String;\", int, int, int, class java/lang/String, int ]\n           stack = [ class java/lang/NumberFormatException ]\n         frame_type = 3 /* same */\n-        frame_type = 11 /* same */\n+        frame_type = 12 /* same */\n         frame_type = 250 /* chop */\n           offset_delta = 1\n         frame_type = 250 /* chop */\n           offset_delta = 2\n         frame_type = 250 /* chop */\n           offset_delta = 5\n         frame_type = 15 /* same */\n@@ -3524,69 +3524,69 @@\n \n   private static boolean isRFC3986HostName(java.lang.String);\n     descriptor: (Ljava/lang/String;)Z\n     flags: (0x000a) ACC_PRIVATE, ACC_STATIC\n     Code:\n       stack=3, locals=3, args_size=1\n          0: aload_0\n-         1: ldc           #112                // String \\\\.\n-         3: iconst_m1\n-         4: invokevirtual #113                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n-         7: astore_1\n-         8: iconst_0\n-         9: istore_2\n-        10: iload_2\n-        11: aload_1\n-        12: arraylength\n-        13: if_icmpge     62\n-        16: aload_1\n-        17: iload_2\n-        18: aaload\n-        19: invokevirtual #56                 // Method java/lang/String.isEmpty:()Z\n-        22: ifeq          39\n-        25: iload_2\n-        26: aload_1\n-        27: arraylength\n-        28: iconst_1\n-        29: isub\n-        30: if_icmpne     37\n-        33: iconst_1\n-        34: goto          38\n-        37: iconst_0\n-        38: ireturn\n-        39: getstatic     #114                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-        42: aload_1\n-        43: iload_2\n-        44: aaload\n-        45: invokevirtual #87                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n-        48: invokevirtual #88                 // Method java/util/regex/Matcher.matches:()Z\n-        51: ifne          56\n-        54: iconst_0\n-        55: ireturn\n-        56: iinc          2, 1\n-        59: goto          10\n-        62: iconst_1\n-        63: ireturn\n+         1: ldc_w         #364                // String \\\\.\n+         4: iconst_m1\n+         5: invokevirtual #366                // Method java/lang/String.split:(Ljava/lang/String;I)[Ljava/lang/String;\n+         8: astore_1\n+         9: iconst_0\n+        10: istore_2\n+        11: iload_2\n+        12: aload_1\n+        13: arraylength\n+        14: if_icmpge     63\n+        17: aload_1\n+        18: iload_2\n+        19: aaload\n+        20: invokevirtual #195                // Method java/lang/String.isEmpty:()Z\n+        23: ifeq          40\n+        26: iload_2\n+        27: aload_1\n+        28: arraylength\n+        29: iconst_1\n+        30: isub\n+        31: if_icmpne     38\n+        34: iconst_1\n+        35: goto          39\n+        38: iconst_0\n+        39: ireturn\n+        40: getstatic     #369                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+        43: aload_1\n+        44: iload_2\n+        45: aaload\n+        46: invokevirtual #290                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;\n+        49: invokevirtual #296                // Method java/util/regex/Matcher.matches:()Z\n+        52: ifne          57\n+        55: iconst_0\n+        56: ireturn\n+        57: iinc          2, 1\n+        60: goto          11\n+        63: iconst_1\n+        64: ireturn\n       LineNumberTable:\n         line 1633: 0\n-        line 1634: 8\n-        line 1635: 16\n-        line 1637: 25\n-        line 1639: 39\n-        line 1640: 54\n-        line 1634: 56\n-        line 1643: 62\n+        line 1634: 9\n+        line 1635: 17\n+        line 1637: 26\n+        line 1639: 40\n+        line 1640: 55\n+        line 1634: 57\n+        line 1643: 63\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           10      52     2     i   I\n-            0      64     0  name   Ljava/lang/String;\n-            8      56     1 parts   [Ljava/lang/String;\n+           11      52     2     i   I\n+            0      65     0  name   Ljava/lang/String;\n+            9      56     1 parts   [Ljava/lang/String;\n       StackMapTable: number_of_entries = 6\n         frame_type = 253 /* append */\n-          offset_delta = 10\n+          offset_delta = 11\n           locals = [ class \"[Ljava/lang/String;\", int ]\n         frame_type = 26 /* same */\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 0 /* same */\n         frame_type = 16 /* same */\n         frame_type = 250 /* chop */\n@@ -3594,43 +3594,43 @@\n \n   static {};\n     descriptor: ()V\n     flags: (0x0008) ACC_STATIC\n     Code:\n       stack=1, locals=0, args_size=0\n          0: iconst_0\n-         1: anewarray     #12                 // class java/lang/String\n-         4: putstatic     #81                 // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n+         1: anewarray     #22                 // class java/lang/String\n+         4: putstatic     #271                // Field EMPTY_STRING_ARRAY:[Ljava/lang/String;\n          7: bipush        46\n-         9: invokestatic  #115                // Method java/lang/Character.toString:(C)Ljava/lang/String;\n-        12: putstatic     #116                // Field EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n-        15: getstatic     #117                // Field java/io/File.separatorChar:C\n-        18: putstatic     #2                  // Field SYSTEM_SEPARATOR:C\n-        21: invokestatic  #29                 // Method isSystemWindows:()Z\n+         9: invokestatic  #372                // Method java/lang/Character.toString:(C)Ljava/lang/String;\n+        12: putstatic     #375                // Field EXTENSION_SEPARATOR_STR:Ljava/lang/String;\n+        15: getstatic     #379                // Field java/io/File.separatorChar:C\n+        18: putstatic     #7                  // Field SYSTEM_SEPARATOR:C\n+        21: invokestatic  #104                // Method isSystemWindows:()Z\n         24: ifeq          35\n         27: bipush        47\n-        29: putstatic     #9                  // Field OTHER_SEPARATOR:C\n+        29: putstatic     #35                 // Field OTHER_SEPARATOR:C\n         32: goto          40\n         35: bipush        92\n-        37: putstatic     #9                  // Field OTHER_SEPARATOR:C\n-        40: ldc           #118                // String ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n-        42: invokestatic  #119                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        45: putstatic     #86                 // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n-        48: ldc           #120                // String ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n-        50: invokestatic  #119                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n-        53: putstatic     #114                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n-        56: return\n+        37: putstatic     #35                 // Field OTHER_SEPARATOR:C\n+        40: ldc_w         #384                // String ^(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})\\\\.(\\\\d{1,3})$\n+        43: invokestatic  #386                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        46: putstatic     #286                // Field IPV4_PATTERN:Ljava/util/regex/Pattern;\n+        49: ldc_w         #390                // String ^[a-zA-Z0-9][a-zA-Z0-9-]*$\n+        52: invokestatic  #386                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;\n+        55: putstatic     #369                // Field REG_NAME_PART_PATTERN:Ljava/util/regex/Pattern;\n+        58: return\n       LineNumberTable:\n         line 90: 0\n         line 106: 7\n         line 121: 15\n         line 128: 21\n         line 129: 27\n         line 131: 35\n         line 1516: 40\n-        line 1517: 42\n-        line 1622: 48\n+        line 1517: 43\n+        line 1622: 49\n       StackMapTable: number_of_entries = 2\n         frame_type = 35 /* same */\n         frame_type = 4 /* same */\n }\n SourceFile: \"FilenameUtils.java\"\n"}]}
