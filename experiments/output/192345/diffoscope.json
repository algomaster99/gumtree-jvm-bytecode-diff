{"diffoscope-json-version": 1, "source1": "first/ProxyWriter.class", "source2": "second/ProxyWriter.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,140 +1,140 @@\n-  SHA-256 checksum 67342b1ec6ef29b91e9d403707158f334aa0cab59ce2f4b27a9e163ae0ca141e\n+  SHA-256 checksum a4aec12b45534ee9eec088eb4d59589d47b0701c3791c5496a6472530ebd267b\n   Compiled from \"ProxyWriter.java\"\n public class org.apache.commons.io.output.ProxyWriter extends java.io.FilterWriter\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #23                         // org/apache/commons/io/output/ProxyWriter\n-  super_class: #24                        // java/io/FilterWriter\n+  this_class: #8                          // org/apache/commons/io/output/ProxyWriter\n+  super_class: #2                         // java/io/FilterWriter\n   interfaces: 0, fields: 0, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Methodref          #24.#74       // java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n-    #2 = Methodref          #23.#75       // org/apache/commons/io/output/ProxyWriter.beforeWrite:(I)V\n-    #3 = Fieldref           #23.#76       // org/apache/commons/io/output/ProxyWriter.out:Ljava/io/Writer;\n-    #4 = Methodref          #77.#78       // java/io/Writer.append:(C)Ljava/io/Writer;\n-    #5 = Methodref          #23.#79       // org/apache/commons/io/output/ProxyWriter.afterWrite:(I)V\n-    #6 = Class              #80           // java/io/IOException\n-    #7 = Methodref          #23.#81       // org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n-    #8 = Methodref          #82.#83       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n-    #9 = Methodref          #77.#84       // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #10 = Methodref          #77.#85       // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #11 = InvokeDynamic      #0:#91        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-   #12 = Methodref          #82.#92       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #13 = Methodref          #77.#93       // java/io/Writer.flush:()V\n-   #14 = Methodref          #82.#94       // org/apache/commons/io/IOUtils.length:([C)I\n-   #15 = Methodref          #77.#95       // java/io/Writer.write:([C)V\n-   #16 = Methodref          #77.#96       // java/io/Writer.write:([CII)V\n-   #17 = Methodref          #77.#97       // java/io/Writer.write:(I)V\n-   #18 = Methodref          #77.#98       // java/io/Writer.write:(Ljava/lang/String;)V\n-   #19 = Methodref          #77.#99       // java/io/Writer.write:(Ljava/lang/String;II)V\n-   #20 = Methodref          #23.#78       // org/apache/commons/io/output/ProxyWriter.append:(C)Ljava/io/Writer;\n-   #21 = Methodref          #23.#85       // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #22 = Methodref          #23.#84       // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #23 = Class              #100          // org/apache/commons/io/output/ProxyWriter\n-   #24 = Class              #101          // java/io/FilterWriter\n-   #25 = Utf8               <init>\n-   #26 = Utf8               (Ljava/io/Writer;)V\n-   #27 = Utf8               Code\n-   #28 = Utf8               LineNumberTable\n-   #29 = Utf8               LocalVariableTable\n-   #30 = Utf8               this\n-   #31 = Utf8               Lorg/apache/commons/io/output/ProxyWriter;\n-   #32 = Utf8               proxy\n-   #33 = Utf8               Ljava/io/Writer;\n-   #34 = Utf8               afterWrite\n-   #35 = Utf8               (I)V\n-   #36 = Utf8               n\n-   #37 = Utf8               I\n-   #38 = Utf8               Exceptions\n-   #39 = Utf8               append\n-   #40 = Utf8               (C)Ljava/io/Writer;\n-   #41 = Utf8               e\n-   #42 = Utf8               Ljava/io/IOException;\n-   #43 = Utf8               c\n-   #44 = Utf8               C\n-   #45 = Utf8               StackMapTable\n-   #46 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #47 = Utf8               len\n-   #48 = Utf8               csq\n-   #49 = Utf8               Ljava/lang/CharSequence;\n-   #50 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #51 = Utf8               start\n-   #52 = Utf8               end\n-   #53 = Utf8               beforeWrite\n-   #54 = Utf8               close\n+    #1 = Methodref          #2.#3         // java/io/FilterWriter.\"<init>\":(Ljava/io/Writer;)V\n+    #2 = Class              #4            // java/io/FilterWriter\n+    #3 = NameAndType        #5:#6         // \"<init>\":(Ljava/io/Writer;)V\n+    #4 = Utf8               java/io/FilterWriter\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (Ljava/io/Writer;)V\n+    #7 = Methodref          #8.#9         // org/apache/commons/io/output/ProxyWriter.beforeWrite:(I)V\n+    #8 = Class              #10           // org/apache/commons/io/output/ProxyWriter\n+    #9 = NameAndType        #11:#12       // beforeWrite:(I)V\n+   #10 = Utf8               org/apache/commons/io/output/ProxyWriter\n+   #11 = Utf8               beforeWrite\n+   #12 = Utf8               (I)V\n+   #13 = Fieldref           #8.#14        // org/apache/commons/io/output/ProxyWriter.out:Ljava/io/Writer;\n+   #14 = NameAndType        #15:#16       // out:Ljava/io/Writer;\n+   #15 = Utf8               out\n+   #16 = Utf8               Ljava/io/Writer;\n+   #17 = Methodref          #18.#19       // java/io/Writer.append:(C)Ljava/io/Writer;\n+   #18 = Class              #20           // java/io/Writer\n+   #19 = NameAndType        #21:#22       // append:(C)Ljava/io/Writer;\n+   #20 = Utf8               java/io/Writer\n+   #21 = Utf8               append\n+   #22 = Utf8               (C)Ljava/io/Writer;\n+   #23 = Methodref          #8.#24        // org/apache/commons/io/output/ProxyWriter.afterWrite:(I)V\n+   #24 = NameAndType        #25:#12       // afterWrite:(I)V\n+   #25 = Utf8               afterWrite\n+   #26 = Class              #27           // java/io/IOException\n+   #27 = Utf8               java/io/IOException\n+   #28 = Methodref          #8.#29        // org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n+   #29 = NameAndType        #30:#31       // handleIOException:(Ljava/io/IOException;)V\n+   #30 = Utf8               handleIOException\n+   #31 = Utf8               (Ljava/io/IOException;)V\n+   #32 = Methodref          #33.#34       // org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+   #33 = Class              #35           // org/apache/commons/io/IOUtils\n+   #34 = NameAndType        #36:#37       // length:(Ljava/lang/CharSequence;)I\n+   #35 = Utf8               org/apache/commons/io/IOUtils\n+   #36 = Utf8               length\n+   #37 = Utf8               (Ljava/lang/CharSequence;)I\n+   #38 = Methodref          #18.#39       // java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #39 = NameAndType        #21:#40       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #40 = Utf8               (Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #41 = Methodref          #18.#42       // java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #42 = NameAndType        #21:#43       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #43 = Utf8               (Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #44 = InvokeDynamic      #0:#45        // #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #45 = NameAndType        #46:#47       // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #46 = Utf8               accept\n+   #47 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+   #48 = Methodref          #33.#49       // org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #49 = NameAndType        #50:#51       // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #50 = Utf8               close\n+   #51 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+   #52 = Methodref          #18.#53       // java/io/Writer.flush:()V\n+   #53 = NameAndType        #54:#55       // flush:()V\n+   #54 = Utf8               flush\n    #55 = Utf8               ()V\n-   #56 = Utf8               flush\n-   #57 = Utf8               handleIOException\n-   #58 = Utf8               (Ljava/io/IOException;)V\n-   #59 = Utf8               write\n-   #60 = Utf8               ([C)V\n-   #61 = Utf8               cbuf\n-   #62 = Utf8               [C\n-   #63 = Utf8               ([CII)V\n-   #64 = Utf8               off\n-   #65 = Utf8               (Ljava/lang/String;)V\n-   #66 = Utf8               str\n-   #67 = Utf8               Ljava/lang/String;\n-   #68 = Utf8               (Ljava/lang/String;II)V\n-   #69 = Utf8               (C)Ljava/lang/Appendable;\n-   #70 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n-   #71 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n-   #72 = Utf8               SourceFile\n-   #73 = Utf8               ProxyWriter.java\n-   #74 = NameAndType        #25:#26       // \"<init>\":(Ljava/io/Writer;)V\n-   #75 = NameAndType        #53:#35       // beforeWrite:(I)V\n-   #76 = NameAndType        #102:#33      // out:Ljava/io/Writer;\n-   #77 = Class              #103          // java/io/Writer\n-   #78 = NameAndType        #39:#40       // append:(C)Ljava/io/Writer;\n-   #79 = NameAndType        #34:#35       // afterWrite:(I)V\n-   #80 = Utf8               java/io/IOException\n-   #81 = NameAndType        #57:#58       // handleIOException:(Ljava/io/IOException;)V\n-   #82 = Class              #104          // org/apache/commons/io/IOUtils\n-   #83 = NameAndType        #105:#106     // length:(Ljava/lang/CharSequence;)I\n-   #84 = NameAndType        #39:#46       // append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n-   #85 = NameAndType        #39:#50       // append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n-   #86 = Utf8               BootstrapMethods\n-   #87 = MethodHandle       6:#107        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-   #88 = MethodType         #108          //  (Ljava/lang/Object;)V\n-   #89 = MethodHandle       5:#7          // REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n-   #90 = MethodType         #58           //  (Ljava/io/IOException;)V\n-   #91 = NameAndType        #109:#110     // accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-   #92 = NameAndType        #54:#111      // close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-   #93 = NameAndType        #56:#55       // flush:()V\n-   #94 = NameAndType        #105:#112     // length:([C)I\n-   #95 = NameAndType        #59:#60       // write:([C)V\n-   #96 = NameAndType        #59:#63       // write:([CII)V\n-   #97 = NameAndType        #59:#35       // write:(I)V\n-   #98 = NameAndType        #59:#65       // write:(Ljava/lang/String;)V\n-   #99 = NameAndType        #59:#68       // write:(Ljava/lang/String;II)V\n-  #100 = Utf8               org/apache/commons/io/output/ProxyWriter\n-  #101 = Utf8               java/io/FilterWriter\n-  #102 = Utf8               out\n-  #103 = Utf8               java/io/Writer\n-  #104 = Utf8               org/apache/commons/io/IOUtils\n-  #105 = Utf8               length\n-  #106 = Utf8               (Ljava/lang/CharSequence;)I\n-  #107 = Methodref          #113.#114     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #108 = Utf8               (Ljava/lang/Object;)V\n-  #109 = Utf8               accept\n-  #110 = Utf8               (Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-  #111 = Utf8               (Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n-  #112 = Utf8               ([C)I\n-  #113 = Class              #115          // java/lang/invoke/LambdaMetafactory\n-  #114 = NameAndType        #116:#120     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #115 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #116 = Utf8               metafactory\n-  #117 = Class              #122          // java/lang/invoke/MethodHandles$Lookup\n-  #118 = Utf8               Lookup\n-  #119 = Utf8               InnerClasses\n-  #120 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #121 = Class              #123          // java/lang/invoke/MethodHandles\n-  #122 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #123 = Utf8               java/lang/invoke/MethodHandles\n+   #56 = Methodref          #33.#57       // org/apache/commons/io/IOUtils.length:([C)I\n+   #57 = NameAndType        #36:#58       // length:([C)I\n+   #58 = Utf8               ([C)I\n+   #59 = Methodref          #18.#60       // java/io/Writer.write:([C)V\n+   #60 = NameAndType        #61:#62       // write:([C)V\n+   #61 = Utf8               write\n+   #62 = Utf8               ([C)V\n+   #63 = Methodref          #18.#64       // java/io/Writer.write:([CII)V\n+   #64 = NameAndType        #61:#65       // write:([CII)V\n+   #65 = Utf8               ([CII)V\n+   #66 = Methodref          #18.#67       // java/io/Writer.write:(I)V\n+   #67 = NameAndType        #61:#12       // write:(I)V\n+   #68 = Methodref          #18.#69       // java/io/Writer.write:(Ljava/lang/String;)V\n+   #69 = NameAndType        #61:#70       // write:(Ljava/lang/String;)V\n+   #70 = Utf8               (Ljava/lang/String;)V\n+   #71 = Methodref          #18.#72       // java/io/Writer.write:(Ljava/lang/String;II)V\n+   #72 = NameAndType        #61:#73       // write:(Ljava/lang/String;II)V\n+   #73 = Utf8               (Ljava/lang/String;II)V\n+   #74 = Methodref          #8.#19        // org/apache/commons/io/output/ProxyWriter.append:(C)Ljava/io/Writer;\n+   #75 = Methodref          #8.#42        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+   #76 = Methodref          #8.#39        // org/apache/commons/io/output/ProxyWriter.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+   #77 = Utf8               Code\n+   #78 = Utf8               LineNumberTable\n+   #79 = Utf8               LocalVariableTable\n+   #80 = Utf8               this\n+   #81 = Utf8               Lorg/apache/commons/io/output/ProxyWriter;\n+   #82 = Utf8               proxy\n+   #83 = Utf8               n\n+   #84 = Utf8               I\n+   #85 = Utf8               Exceptions\n+   #86 = Utf8               e\n+   #87 = Utf8               Ljava/io/IOException;\n+   #88 = Utf8               c\n+   #89 = Utf8               C\n+   #90 = Utf8               StackMapTable\n+   #91 = Utf8               len\n+   #92 = Utf8               csq\n+   #93 = Utf8               Ljava/lang/CharSequence;\n+   #94 = Utf8               start\n+   #95 = Utf8               end\n+   #96 = Utf8               cbuf\n+   #97 = Utf8               [C\n+   #98 = Utf8               off\n+   #99 = Utf8               str\n+  #100 = Utf8               Ljava/lang/String;\n+  #101 = Utf8               (C)Ljava/lang/Appendable;\n+  #102 = Utf8               (Ljava/lang/CharSequence;II)Ljava/lang/Appendable;\n+  #103 = Utf8               (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n+  #104 = Utf8               SourceFile\n+  #105 = Utf8               ProxyWriter.java\n+  #106 = Utf8               BootstrapMethods\n+  #107 = MethodHandle       6:#108        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #108 = Methodref          #109.#110     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #109 = Class              #111          // java/lang/invoke/LambdaMetafactory\n+  #110 = NameAndType        #112:#113     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #111 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #112 = Utf8               metafactory\n+  #113 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #114 = MethodType         #115          //  (Ljava/lang/Object;)V\n+  #115 = Utf8               (Ljava/lang/Object;)V\n+  #116 = MethodHandle       5:#28         // REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n+  #117 = MethodType         #31           //  (Ljava/io/IOException;)V\n+  #118 = Utf8               InnerClasses\n+  #119 = Class              #120          // java/lang/invoke/MethodHandles$Lookup\n+  #120 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #121 = Class              #122          // java/lang/invoke/MethodHandles\n+  #122 = Utf8               java/lang/invoke/MethodHandles\n+  #123 = Utf8               Lookup\n {\n   public org.apache.commons.io.output.ProxyWriter(java.io.Writer);\n     descriptor: (Ljava/io/Writer;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n@@ -167,28 +167,28 @@\n   public java.io.Writer append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #7                  // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #13                 // Field out:Ljava/io/Writer;\n          9: iload_1\n-        10: invokevirtual #4                  // Method java/io/Writer.append:(C)Ljava/io/Writer;\n+        10: invokevirtual #17                 // Method java/io/Writer.append:(C)Ljava/io/Writer;\n         13: pop\n         14: aload_0\n         15: iconst_1\n-        16: invokevirtual #5                  // Method afterWrite:(I)V\n+        16: invokevirtual #23                 // Method afterWrite:(I)V\n         19: goto          28\n         22: astore_2\n         23: aload_0\n         24: aload_2\n-        25: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        25: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         28: aload_0\n         29: areturn\n       Exception table:\n          from    to  target type\n              0    19    22   Class java/io/IOException\n       LineNumberTable:\n         line 73: 0\n@@ -212,32 +212,32 @@\n \n   public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/io/Writer;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #8                  // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         1: invokestatic  #32                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #7                  // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/Writer;\n+        11: getfield      #13                 // Field out:Ljava/io/Writer;\n         14: aload_1\n-        15: invokevirtual #9                  // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+        15: invokevirtual #38                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n         18: pop\n         19: aload_0\n         20: iload_2\n-        21: invokevirtual #5                  // Method afterWrite:(I)V\n+        21: invokevirtual #23                 // Method afterWrite:(I)V\n         24: goto          33\n         27: astore_2\n         28: aload_0\n         29: aload_2\n-        30: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        30: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         33: aload_0\n         34: areturn\n       Exception table:\n          from    to  target type\n              0    24    27   Class java/io/IOException\n       LineNumberTable:\n         line 92: 0\n@@ -266,32 +266,32 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n          2: iload_2\n          3: isub\n-         4: invokevirtual #2                  // Method beforeWrite:(I)V\n+         4: invokevirtual #7                  // Method beforeWrite:(I)V\n          7: aload_0\n-         8: getfield      #3                  // Field out:Ljava/io/Writer;\n+         8: getfield      #13                 // Field out:Ljava/io/Writer;\n         11: aload_1\n         12: iload_2\n         13: iload_3\n-        14: invokevirtual #10                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+        14: invokevirtual #41                 // Method java/io/Writer.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n         17: pop\n         18: aload_0\n         19: iload_3\n         20: iload_2\n         21: isub\n-        22: invokevirtual #5                  // Method afterWrite:(I)V\n+        22: invokevirtual #23                 // Method afterWrite:(I)V\n         25: goto          36\n         28: astore        4\n         30: aload_0\n         31: aload         4\n-        33: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        33: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         36: aload_0\n         37: areturn\n       Exception table:\n          from    to  target type\n              0    25    28   Class java/io/IOException\n       LineNumberTable:\n         line 114: 0\n@@ -332,18 +332,18 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/Writer;\n+         1: getfield      #13                 // Field out:Ljava/io/Writer;\n          4: aload_0\n-         5: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n-        10: invokestatic  #12                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n+         5: invokedynamic #44,  0             // InvokeDynamic #0:accept:(Lorg/apache/commons/io/output/ProxyWriter;)Lorg/apache/commons/io/function/IOConsumer;\n+        10: invokestatic  #48                 // Method org/apache/commons/io/IOUtils.close:(Ljava/io/Closeable;Lorg/apache/commons/io/function/IOConsumer;)V\n         13: return\n       LineNumberTable:\n         line 148: 0\n         line 149: 13\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      14     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n@@ -352,21 +352,21 @@\n \n   public void flush() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #3                  // Field out:Ljava/io/Writer;\n-         4: invokevirtual #13                 // Method java/io/Writer.flush:()V\n+         1: getfield      #13                 // Field out:Ljava/io/Writer;\n+         4: invokevirtual #52                 // Method java/io/Writer.flush:()V\n          7: goto          16\n         10: astore_1\n         11: aload_0\n         12: aload_1\n-        13: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        13: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         16: return\n       Exception table:\n          from    to  target type\n              0     7    10   Class java/io/IOException\n       LineNumberTable:\n         line 158: 0\n         line 161: 7\n@@ -402,31 +402,31 @@\n \n   public void write(char[]) throws java.io.IOException;\n     descriptor: ([C)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #14                 // Method org/apache/commons/io/IOUtils.length:([C)I\n+         1: invokestatic  #56                 // Method org/apache/commons/io/IOUtils.length:([C)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #7                  // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/Writer;\n+        11: getfield      #13                 // Field out:Ljava/io/Writer;\n         14: aload_1\n-        15: invokevirtual #15                 // Method java/io/Writer.write:([C)V\n+        15: invokevirtual #59                 // Method java/io/Writer.write:([C)V\n         18: aload_0\n         19: iload_2\n-        20: invokevirtual #5                  // Method afterWrite:(I)V\n+        20: invokevirtual #23                 // Method afterWrite:(I)V\n         23: goto          32\n         26: astore_2\n         27: aload_0\n         28: aload_2\n-        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        29: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         32: return\n       Exception table:\n          from    to  target type\n              0    23    26   Class java/io/IOException\n       LineNumberTable:\n         line 187: 0\n         line 188: 5\n@@ -452,29 +452,29 @@\n   public void write(char[], int, int) throws java.io.IOException;\n     descriptor: ([CII)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #7                  // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #13                 // Field out:Ljava/io/Writer;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #16                 // Method java/io/Writer.write:([CII)V\n+        12: invokevirtual #63                 // Method java/io/Writer.write:([CII)V\n         15: aload_0\n         16: iload_3\n-        17: invokevirtual #5                  // Method afterWrite:(I)V\n+        17: invokevirtual #23                 // Method afterWrite:(I)V\n         20: goto          31\n         23: astore        4\n         25: aload_0\n         26: aload         4\n-        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        28: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         31: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 206: 0\n         line 207: 5\n@@ -500,27 +500,27 @@\n   public void write(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_0\n          1: iconst_1\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #7                  // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #13                 // Field out:Ljava/io/Writer;\n          9: iload_1\n-        10: invokevirtual #17                 // Method java/io/Writer.write:(I)V\n+        10: invokevirtual #66                 // Method java/io/Writer.write:(I)V\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #5                  // Method afterWrite:(I)V\n+        15: invokevirtual #23                 // Method afterWrite:(I)V\n         18: goto          27\n         21: astore_2\n         22: aload_0\n         23: aload_2\n-        24: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        24: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         27: return\n       Exception table:\n          from    to  target type\n              0    18    21   Class java/io/IOException\n       LineNumberTable:\n         line 222: 0\n         line 223: 5\n@@ -543,31 +543,31 @@\n \n   public void write(java.lang.String) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=2\n          0: aload_1\n-         1: invokestatic  #8                  // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n+         1: invokestatic  #32                 // Method org/apache/commons/io/IOUtils.length:(Ljava/lang/CharSequence;)I\n          4: istore_2\n          5: aload_0\n          6: iload_2\n-         7: invokevirtual #2                  // Method beforeWrite:(I)V\n+         7: invokevirtual #7                  // Method beforeWrite:(I)V\n         10: aload_0\n-        11: getfield      #3                  // Field out:Ljava/io/Writer;\n+        11: getfield      #13                 // Field out:Ljava/io/Writer;\n         14: aload_1\n-        15: invokevirtual #18                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n+        15: invokevirtual #68                 // Method java/io/Writer.write:(Ljava/lang/String;)V\n         18: aload_0\n         19: iload_2\n-        20: invokevirtual #5                  // Method afterWrite:(I)V\n+        20: invokevirtual #23                 // Method afterWrite:(I)V\n         23: goto          32\n         26: astore_2\n         27: aload_0\n         28: aload_2\n-        29: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        29: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         32: return\n       Exception table:\n          from    to  target type\n              0    23    26   Class java/io/IOException\n       LineNumberTable:\n         line 238: 0\n         line 239: 5\n@@ -593,29 +593,29 @@\n   public void write(java.lang.String, int, int) throws java.io.IOException;\n     descriptor: (Ljava/lang/String;II)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n          1: iload_3\n-         2: invokevirtual #2                  // Method beforeWrite:(I)V\n+         2: invokevirtual #7                  // Method beforeWrite:(I)V\n          5: aload_0\n-         6: getfield      #3                  // Field out:Ljava/io/Writer;\n+         6: getfield      #13                 // Field out:Ljava/io/Writer;\n          9: aload_1\n         10: iload_2\n         11: iload_3\n-        12: invokevirtual #19                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n+        12: invokevirtual #71                 // Method java/io/Writer.write:(Ljava/lang/String;II)V\n         15: aload_0\n         16: iload_3\n-        17: invokevirtual #5                  // Method afterWrite:(I)V\n+        17: invokevirtual #23                 // Method afterWrite:(I)V\n         20: goto          31\n         23: astore        4\n         25: aload_0\n         26: aload         4\n-        28: invokevirtual #7                  // Method handleIOException:(Ljava/io/IOException;)V\n+        28: invokevirtual #28                 // Method handleIOException:(Ljava/io/IOException;)V\n         31: return\n       Exception table:\n          from    to  target type\n              0    20    23   Class java/io/IOException\n       LineNumberTable:\n         line 257: 0\n         line 258: 5\n@@ -641,15 +641,15 @@\n   public java.lang.Appendable append(char) throws java.io.IOException;\n     descriptor: (C)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: invokevirtual #20                 // Method append:(C)Ljava/io/Writer;\n+         2: invokevirtual #74                 // Method append:(C)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 31: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n     Exceptions:\n@@ -660,15 +660,15 @@\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: aload_1\n          2: iload_2\n          3: iload_3\n-         4: invokevirtual #21                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n+         4: invokevirtual #75                 // Method append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;\n          7: areturn\n       LineNumberTable:\n         line 31: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n     Exceptions:\n@@ -677,26 +677,26 @@\n   public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;\n     descriptor: (Ljava/lang/CharSequence;)Ljava/lang/Appendable;\n     flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokevirtual #22                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n+         2: invokevirtual #76                 // Method append:(Ljava/lang/CharSequence;)Ljava/io/Writer;\n          5: areturn\n       LineNumberTable:\n         line 31: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/commons/io/output/ProxyWriter;\n     Exceptions:\n       throws java.io.IOException\n }\n SourceFile: \"ProxyWriter.java\"\n-InnerClasses:\n-  public static final #118= #117 of #121; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n BootstrapMethods:\n-  0: #87 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #107 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n-      #88 (Ljava/lang/Object;)V\n-      #89 REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n-      #90 (Ljava/io/IOException;)V\n+      #114 (Ljava/lang/Object;)V\n+      #116 REF_invokeVirtual org/apache/commons/io/output/ProxyWriter.handleIOException:(Ljava/io/IOException;)V\n+      #117 (Ljava/io/IOException;)V\n+InnerClasses:\n+  public static final #123= #119 of #121; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n"}]}
