{"diffoscope-json-version": 1, "source1": "first/BootstrapMethod.class", "source2": "second/BootstrapMethod.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,158 +1,158 @@\n-  SHA-256 checksum 016d86535a28a147a362392a5b637233a5d4b33ee5e955bde2394c2d188d12f1\n+  SHA-256 checksum 05ceb60b766ab27f99f6e1caf009de5c3fd761bff6b140bf8e3c1fb19eacc75e\n   Compiled from \"BootstrapMethod.java\"\n public class org.apache.bcel.classfile.BootstrapMethod implements java.lang.Cloneable\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #28                         // org/apache/bcel/classfile/BootstrapMethod\n-  super_class: #30                        // java/lang/Object\n+  this_class: #2                          // org/apache/bcel/classfile/BootstrapMethod\n+  super_class: #28                        // java/lang/Object\n   interfaces: 1, fields: 2, methods: 13, attributes: 1\n Constant pool:\n-    #1 = Methodref          #28.#86       // org/apache/bcel/classfile/BootstrapMethod.getBootstrapMethodRef:()I\n-    #2 = Methodref          #28.#87       // org/apache/bcel/classfile/BootstrapMethod.getBootstrapArguments:()[I\n-    #3 = Methodref          #28.#88       // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(I[I)V\n-    #4 = InterfaceMethodref #49.#89       // java/io/DataInput.readUnsignedShort:()I\n-    #5 = Methodref          #28.#90       // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(II)V\n-    #6 = Fieldref           #28.#91       // org/apache/bcel/classfile/BootstrapMethod.bootstrapArguments:[I\n-    #7 = Methodref          #30.#92       // java/lang/Object.\"<init>\":()V\n-    #8 = Fieldref           #28.#93       // org/apache/bcel/classfile/BootstrapMethod.bootstrapMethodRef:I\n-    #9 = Class              #94           // java/lang/StringBuilder\n-   #10 = Methodref          #9.#92        // java/lang/StringBuilder.\"<init>\":()V\n-   #11 = String             #95           // BootstrapMethod(\n-   #12 = Methodref          #9.#96        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #13 = Methodref          #9.#97        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #14 = String             #98           // ,\n-   #15 = Methodref          #99.#100      // java/util/Arrays.toString:([I)Ljava/lang/String;\n-   #16 = String             #101          // )\n-   #17 = Methodref          #9.#102       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Class              #103          // org/apache/bcel/Const\n-   #19 = Methodref          #74.#104      // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n-   #20 = Methodref          #105.#106     // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-   #21 = String             #107          // \\nMethod Arguments:\n-   #22 = String             #108          // \\n\n-   #23 = String             #109          // :\n-   #24 = Methodref          #74.#110      // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #25 = Methodref          #74.#111      // org/apache/bcel/classfile/ConstantPool.constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-   #26 = Methodref          #112.#113     // java/io/DataOutputStream.writeShort:(I)V\n-   #27 = Methodref          #30.#114      // java/lang/Object.clone:()Ljava/lang/Object;\n-   #28 = Class              #115          // org/apache/bcel/classfile/BootstrapMethod\n-   #29 = Class              #116          // java/lang/CloneNotSupportedException\n-   #30 = Class              #117          // java/lang/Object\n-   #31 = Class              #118          // java/lang/Cloneable\n-   #32 = Utf8               bootstrapMethodRef\n-   #33 = Utf8               I\n-   #34 = Utf8               bootstrapArguments\n-   #35 = Utf8               [I\n-   #36 = Utf8               <init>\n-   #37 = Utf8               (Lorg/apache/bcel/classfile/BootstrapMethod;)V\n-   #38 = Utf8               Code\n-   #39 = Utf8               LineNumberTable\n-   #40 = Utf8               LocalVariableTable\n-   #41 = Utf8               this\n-   #42 = Utf8               Lorg/apache/bcel/classfile/BootstrapMethod;\n-   #43 = Utf8               c\n-   #44 = Utf8               (Ljava/io/DataInput;)V\n-   #45 = Utf8               i\n-   #46 = Utf8               input\n-   #47 = Utf8               Ljava/io/DataInput;\n-   #48 = Utf8               StackMapTable\n-   #49 = Class              #119          // java/io/DataInput\n-   #50 = Utf8               Exceptions\n-   #51 = Class              #120          // java/io/IOException\n-   #52 = Utf8               (II)V\n-   #53 = Utf8               bootstrap_method_ref\n-   #54 = Utf8               num_bootstrap_arguments\n-   #55 = Utf8               (I[I)V\n-   #56 = Utf8               getBootstrapMethodRef\n-   #57 = Utf8               ()I\n-   #58 = Utf8               setBootstrapMethodRef\n-   #59 = Utf8               (I)V\n-   #60 = Utf8               getBootstrapArguments\n-   #61 = Utf8               ()[I\n-   #62 = Utf8               getNumBootstrapArguments\n-   #63 = Utf8               setBootstrapArguments\n-   #64 = Utf8               ([I)V\n-   #65 = Utf8               toString\n-   #66 = Utf8               ()Ljava/lang/String;\n-   #67 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n-   #68 = Utf8               constantPool\n-   #69 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n-   #70 = Utf8               buf\n-   #71 = Utf8               Ljava/lang/StringBuilder;\n-   #72 = Utf8               bootstrap_method_name\n-   #73 = Utf8               Ljava/lang/String;\n-   #74 = Class              #121          // org/apache/bcel/classfile/ConstantPool\n-   #75 = Class              #122          // java/lang/String\n-   #76 = Utf8               dump\n-   #77 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #78 = Utf8               bootstrap_argument\n-   #79 = Utf8               file\n-   #80 = Utf8               Ljava/io/DataOutputStream;\n-   #81 = Class              #35           // \"[I\"\n-   #82 = Utf8               copy\n-   #83 = Utf8               ()Lorg/apache/bcel/classfile/BootstrapMethod;\n-   #84 = Utf8               SourceFile\n-   #85 = Utf8               BootstrapMethod.java\n-   #86 = NameAndType        #56:#57       // getBootstrapMethodRef:()I\n-   #87 = NameAndType        #60:#61       // getBootstrapArguments:()[I\n-   #88 = NameAndType        #36:#55       // \"<init>\":(I[I)V\n-   #89 = NameAndType        #123:#57      // readUnsignedShort:()I\n-   #90 = NameAndType        #36:#52       // \"<init>\":(II)V\n-   #91 = NameAndType        #34:#35       // bootstrapArguments:[I\n-   #92 = NameAndType        #36:#124      // \"<init>\":()V\n-   #93 = NameAndType        #32:#33       // bootstrapMethodRef:I\n-   #94 = Utf8               java/lang/StringBuilder\n-   #95 = Utf8               BootstrapMethod(\n-   #96 = NameAndType        #125:#126     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #97 = NameAndType        #125:#127     // append:(I)Ljava/lang/StringBuilder;\n-   #98 = Utf8               ,\n-   #99 = Class              #128          // java/util/Arrays\n-  #100 = NameAndType        #65:#129      // toString:([I)Ljava/lang/String;\n-  #101 = Utf8               )\n-  #102 = NameAndType        #65:#66       // toString:()Ljava/lang/String;\n-  #103 = Utf8               org/apache/bcel/Const\n-  #104 = NameAndType        #130:#131     // constantToString:(IB)Ljava/lang/String;\n-  #105 = Class              #132          // org/apache/bcel/classfile/Utility\n-  #106 = NameAndType        #133:#134     // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-  #107 = Utf8               \\nMethod Arguments:\n-  #108 = Utf8               \\n\n-  #109 = Utf8               :\n-  #110 = NameAndType        #135:#136     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-  #111 = NameAndType        #130:#137     // constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-  #112 = Class              #138          // java/io/DataOutputStream\n-  #113 = NameAndType        #139:#59      // writeShort:(I)V\n-  #114 = NameAndType        #140:#141     // clone:()Ljava/lang/Object;\n-  #115 = Utf8               org/apache/bcel/classfile/BootstrapMethod\n-  #116 = Utf8               java/lang/CloneNotSupportedException\n-  #117 = Utf8               java/lang/Object\n-  #118 = Utf8               java/lang/Cloneable\n-  #119 = Utf8               java/io/DataInput\n-  #120 = Utf8               java/io/IOException\n-  #121 = Utf8               org/apache/bcel/classfile/ConstantPool\n-  #122 = Utf8               java/lang/String\n-  #123 = Utf8               readUnsignedShort\n-  #124 = Utf8               ()V\n-  #125 = Utf8               append\n-  #126 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #127 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #128 = Utf8               java/util/Arrays\n-  #129 = Utf8               ([I)Ljava/lang/String;\n-  #130 = Utf8               constantToString\n-  #131 = Utf8               (IB)Ljava/lang/String;\n-  #132 = Utf8               org/apache/bcel/classfile/Utility\n-  #133 = Utf8               compactClassName\n-  #134 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n-  #135 = Utf8               getConstant\n-  #136 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #137 = Utf8               (Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-  #138 = Utf8               java/io/DataOutputStream\n-  #139 = Utf8               writeShort\n-  #140 = Utf8               clone\n-  #141 = Utf8               ()Ljava/lang/Object;\n+    #1 = Methodref          #2.#3         // org/apache/bcel/classfile/BootstrapMethod.getBootstrapMethodRef:()I\n+    #2 = Class              #4            // org/apache/bcel/classfile/BootstrapMethod\n+    #3 = NameAndType        #5:#6         // getBootstrapMethodRef:()I\n+    #4 = Utf8               org/apache/bcel/classfile/BootstrapMethod\n+    #5 = Utf8               getBootstrapMethodRef\n+    #6 = Utf8               ()I\n+    #7 = Methodref          #2.#8         // org/apache/bcel/classfile/BootstrapMethod.getBootstrapArguments:()[I\n+    #8 = NameAndType        #9:#10        // getBootstrapArguments:()[I\n+    #9 = Utf8               getBootstrapArguments\n+   #10 = Utf8               ()[I\n+   #11 = Methodref          #2.#12        // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(I[I)V\n+   #12 = NameAndType        #13:#14       // \"<init>\":(I[I)V\n+   #13 = Utf8               <init>\n+   #14 = Utf8               (I[I)V\n+   #15 = InterfaceMethodref #16.#17       // java/io/DataInput.readUnsignedShort:()I\n+   #16 = Class              #18           // java/io/DataInput\n+   #17 = NameAndType        #19:#6        // readUnsignedShort:()I\n+   #18 = Utf8               java/io/DataInput\n+   #19 = Utf8               readUnsignedShort\n+   #20 = Methodref          #2.#21        // org/apache/bcel/classfile/BootstrapMethod.\"<init>\":(II)V\n+   #21 = NameAndType        #13:#22       // \"<init>\":(II)V\n+   #22 = Utf8               (II)V\n+   #23 = Fieldref           #2.#24        // org/apache/bcel/classfile/BootstrapMethod.bootstrapArguments:[I\n+   #24 = NameAndType        #25:#26       // bootstrapArguments:[I\n+   #25 = Utf8               bootstrapArguments\n+   #26 = Utf8               [I\n+   #27 = Methodref          #28.#29       // java/lang/Object.\"<init>\":()V\n+   #28 = Class              #30           // java/lang/Object\n+   #29 = NameAndType        #13:#31       // \"<init>\":()V\n+   #30 = Utf8               java/lang/Object\n+   #31 = Utf8               ()V\n+   #32 = Fieldref           #2.#33        // org/apache/bcel/classfile/BootstrapMethod.bootstrapMethodRef:I\n+   #33 = NameAndType        #34:#35       // bootstrapMethodRef:I\n+   #34 = Utf8               bootstrapMethodRef\n+   #35 = Utf8               I\n+   #36 = Class              #37           // java/lang/StringBuilder\n+   #37 = Utf8               java/lang/StringBuilder\n+   #38 = Methodref          #36.#29       // java/lang/StringBuilder.\"<init>\":()V\n+   #39 = String             #40           // BootstrapMethod(\n+   #40 = Utf8               BootstrapMethod(\n+   #41 = Methodref          #36.#42       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #42 = NameAndType        #43:#44       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #43 = Utf8               append\n+   #44 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #45 = Methodref          #36.#46       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #46 = NameAndType        #43:#47       // append:(I)Ljava/lang/StringBuilder;\n+   #47 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #48 = String             #49           // ,\n+   #49 = Utf8               ,\n+   #50 = Methodref          #51.#52       // java/util/Arrays.toString:([I)Ljava/lang/String;\n+   #51 = Class              #53           // java/util/Arrays\n+   #52 = NameAndType        #54:#55       // toString:([I)Ljava/lang/String;\n+   #53 = Utf8               java/util/Arrays\n+   #54 = Utf8               toString\n+   #55 = Utf8               ([I)Ljava/lang/String;\n+   #56 = String             #57           // )\n+   #57 = Utf8               )\n+   #58 = Methodref          #36.#59       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #59 = NameAndType        #54:#60       // toString:()Ljava/lang/String;\n+   #60 = Utf8               ()Ljava/lang/String;\n+   #61 = Class              #62           // org/apache/bcel/Const\n+   #62 = Utf8               org/apache/bcel/Const\n+   #63 = Methodref          #64.#65       // org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+   #64 = Class              #66           // org/apache/bcel/classfile/ConstantPool\n+   #65 = NameAndType        #67:#68       // constantToString:(IB)Ljava/lang/String;\n+   #66 = Utf8               org/apache/bcel/classfile/ConstantPool\n+   #67 = Utf8               constantToString\n+   #68 = Utf8               (IB)Ljava/lang/String;\n+   #69 = Methodref          #70.#71       // org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #70 = Class              #72           // org/apache/bcel/classfile/Utility\n+   #71 = NameAndType        #73:#74       // compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+   #72 = Utf8               org/apache/bcel/classfile/Utility\n+   #73 = Utf8               compactClassName\n+   #74 = Utf8               (Ljava/lang/String;Z)Ljava/lang/String;\n+   #75 = String             #76           // \\nMethod Arguments:\n+   #76 = Utf8               \\nMethod Arguments:\n+   #77 = String             #78           // \\n\n+   #78 = Utf8               \\n\n+   #79 = String             #80           // :\n+   #80 = Utf8               :\n+   #81 = Methodref          #64.#82       // org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #82 = NameAndType        #83:#84       // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+   #83 = Utf8               getConstant\n+   #84 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+   #85 = Methodref          #64.#86       // org/apache/bcel/classfile/ConstantPool.constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+   #86 = NameAndType        #67:#87       // constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+   #87 = Utf8               (Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+   #88 = Methodref          #89.#90       // java/io/DataOutputStream.writeShort:(I)V\n+   #89 = Class              #91           // java/io/DataOutputStream\n+   #90 = NameAndType        #92:#93       // writeShort:(I)V\n+   #91 = Utf8               java/io/DataOutputStream\n+   #92 = Utf8               writeShort\n+   #93 = Utf8               (I)V\n+   #94 = Methodref          #28.#95       // java/lang/Object.clone:()Ljava/lang/Object;\n+   #95 = NameAndType        #96:#97       // clone:()Ljava/lang/Object;\n+   #96 = Utf8               clone\n+   #97 = Utf8               ()Ljava/lang/Object;\n+   #98 = Class              #99           // java/lang/CloneNotSupportedException\n+   #99 = Utf8               java/lang/CloneNotSupportedException\n+  #100 = Class              #101          // java/lang/Cloneable\n+  #101 = Utf8               java/lang/Cloneable\n+  #102 = Utf8               (Lorg/apache/bcel/classfile/BootstrapMethod;)V\n+  #103 = Utf8               Code\n+  #104 = Utf8               LineNumberTable\n+  #105 = Utf8               LocalVariableTable\n+  #106 = Utf8               this\n+  #107 = Utf8               Lorg/apache/bcel/classfile/BootstrapMethod;\n+  #108 = Utf8               c\n+  #109 = Utf8               (Ljava/io/DataInput;)V\n+  #110 = Utf8               i\n+  #111 = Utf8               input\n+  #112 = Utf8               Ljava/io/DataInput;\n+  #113 = Utf8               StackMapTable\n+  #114 = Utf8               Exceptions\n+  #115 = Class              #116          // java/io/IOException\n+  #116 = Utf8               java/io/IOException\n+  #117 = Utf8               bootstrap_method_ref\n+  #118 = Utf8               num_bootstrap_arguments\n+  #119 = Utf8               setBootstrapMethodRef\n+  #120 = Utf8               getNumBootstrapArguments\n+  #121 = Utf8               setBootstrapArguments\n+  #122 = Utf8               ([I)V\n+  #123 = Utf8               (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n+  #124 = Utf8               constantPool\n+  #125 = Utf8               Lorg/apache/bcel/classfile/ConstantPool;\n+  #126 = Utf8               buf\n+  #127 = Utf8               Ljava/lang/StringBuilder;\n+  #128 = Utf8               bootstrap_method_name\n+  #129 = Utf8               Ljava/lang/String;\n+  #130 = Class              #131          // java/lang/String\n+  #131 = Utf8               java/lang/String\n+  #132 = Utf8               dump\n+  #133 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #134 = Utf8               bootstrap_argument\n+  #135 = Utf8               file\n+  #136 = Utf8               Ljava/io/DataOutputStream;\n+  #137 = Class              #26           // \"[I\"\n+  #138 = Utf8               copy\n+  #139 = Utf8               ()Lorg/apache/bcel/classfile/BootstrapMethod;\n+  #140 = Utf8               SourceFile\n+  #141 = Utf8               BootstrapMethod.java\n {\n   private int bootstrapMethodRef;\n     descriptor: I\n     flags: (0x0002) ACC_PRIVATE\n \n   private int[] bootstrapArguments;\n     descriptor: [I\n@@ -163,16 +163,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: invokevirtual #1                  // Method getBootstrapMethodRef:()I\n          5: aload_1\n-         6: invokevirtual #2                  // Method getBootstrapArguments:()[I\n-         9: invokespecial #3                  // Method \"<init>\":(I[I)V\n+         6: invokevirtual #7                  // Method getBootstrapArguments:()[I\n+         9: invokespecial #11                 // Method \"<init>\":(I[I)V\n         12: return\n       LineNumberTable:\n         line 49: 0\n         line 50: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n@@ -181,30 +181,30 @@\n   org.apache.bcel.classfile.BootstrapMethod(java.io.DataInput) throws java.io.IOException;\n     descriptor: (Ljava/io/DataInput;)V\n     flags: (0x0000)\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+         2: invokeinterface #15,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n          7: aload_1\n-         8: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n-        13: invokespecial #5                  // Method \"<init>\":(II)V\n+         8: invokeinterface #15,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        13: invokespecial #20                 // Method \"<init>\":(II)V\n         16: iconst_0\n         17: istore_2\n         18: iload_2\n         19: aload_0\n-        20: getfield      #6                  // Field bootstrapArguments:[I\n+        20: getfield      #23                 // Field bootstrapArguments:[I\n         23: arraylength\n         24: if_icmpge     45\n         27: aload_0\n-        28: getfield      #6                  // Field bootstrapArguments:[I\n+        28: getfield      #23                 // Field bootstrapArguments:[I\n         31: iload_2\n         32: aload_1\n-        33: invokeinterface #4,  1            // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n+        33: invokeinterface #15,  1           // InterfaceMethod java/io/DataInput.readUnsignedShort:()I\n         38: iastore\n         39: iinc          2, 1\n         42: goto          18\n         45: return\n       LineNumberTable:\n         line 59: 0\n         line 61: 16\n@@ -231,15 +231,15 @@\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=3, locals=3, args_size=3\n          0: aload_0\n          1: iload_1\n          2: iload_2\n          3: newarray       int\n-         5: invokespecial #3                  // Method \"<init>\":(I[I)V\n+         5: invokespecial #11                 // Method \"<init>\":(I[I)V\n          8: return\n       LineNumberTable:\n         line 68: 0\n         line 69: 8\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n@@ -248,21 +248,21 @@\n \n   public org.apache.bcel.classfile.BootstrapMethod(int, int[]);\n     descriptor: (I[I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #7                  // Method java/lang/Object.\"<init>\":()V\n+         1: invokespecial #27                 // Method java/lang/Object.\"<init>\":()V\n          4: aload_0\n          5: iload_1\n-         6: putfield      #8                  // Field bootstrapMethodRef:I\n+         6: putfield      #32                 // Field bootstrapMethodRef:I\n          9: aload_0\n         10: aload_2\n-        11: putfield      #6                  // Field bootstrapArguments:[I\n+        11: putfield      #23                 // Field bootstrapArguments:[I\n         14: return\n       LineNumberTable:\n         line 75: 0\n         line 76: 4\n         line 77: 9\n         line 78: 14\n       LocalVariableTable:\n@@ -273,30 +273,30 @@\n \n   public int getBootstrapMethodRef();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #8                  // Field bootstrapMethodRef:I\n+         1: getfield      #32                 // Field bootstrapMethodRef:I\n          4: ireturn\n       LineNumberTable:\n         line 84: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n \n   public void setBootstrapMethodRef(int);\n     descriptor: (I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: iload_1\n-         2: putfield      #8                  // Field bootstrapMethodRef:I\n+         2: putfield      #32                 // Field bootstrapMethodRef:I\n          5: return\n       LineNumberTable:\n         line 91: 0\n         line 92: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n@@ -304,29 +304,29 @@\n \n   public int[] getBootstrapArguments();\n     descriptor: ()[I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field bootstrapArguments:[I\n+         1: getfield      #23                 // Field bootstrapArguments:[I\n          4: areturn\n       LineNumberTable:\n         line 98: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n \n   public int getNumBootstrapArguments();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #6                  // Field bootstrapArguments:[I\n+         1: getfield      #23                 // Field bootstrapArguments:[I\n          4: arraylength\n          5: ireturn\n       LineNumberTable:\n         line 105: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n@@ -334,120 +334,120 @@\n   public void setBootstrapArguments(int[]);\n     descriptor: ([I)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n-         2: putfield      #6                  // Field bootstrapArguments:[I\n+         2: putfield      #23                 // Field bootstrapArguments:[I\n          5: return\n       LineNumberTable:\n         line 112: 0\n         line 113: 5\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       6     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n             0       6     1 bootstrapArguments   [I\n \n   public final java.lang.String toString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=1, args_size=1\n-         0: new           #9                  // class java/lang/StringBuilder\n+         0: new           #36                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":()V\n-         7: ldc           #11                 // String BootstrapMethod(\n-         9: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         4: invokespecial #38                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         7: ldc           #39                 // String BootstrapMethod(\n+         9: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         12: aload_0\n-        13: getfield      #8                  // Field bootstrapMethodRef:I\n-        16: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        19: ldc           #14                 // String ,\n-        21: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        13: getfield      #32                 // Field bootstrapMethodRef:I\n+        16: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        19: ldc           #48                 // String ,\n+        21: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         24: aload_0\n-        25: getfield      #6                  // Field bootstrapArguments:[I\n+        25: getfield      #23                 // Field bootstrapArguments:[I\n         28: arraylength\n-        29: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        32: ldc           #14                 // String ,\n-        34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        29: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        32: ldc           #48                 // String ,\n+        34: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         37: aload_0\n-        38: getfield      #6                  // Field bootstrapArguments:[I\n-        41: invokestatic  #15                 // Method java/util/Arrays.toString:([I)Ljava/lang/String;\n-        44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        47: ldc           #16                 // String )\n-        49: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        52: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        38: getfield      #23                 // Field bootstrapArguments:[I\n+        41: invokestatic  #50                 // Method java/util/Arrays.toString:([I)Ljava/lang/String;\n+        44: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        47: ldc           #56                 // String )\n+        49: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        52: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n         55: areturn\n       LineNumberTable:\n         line 120: 0\n         line 121: 41\n         line 120: 55\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      56     0  this   Lorg/apache/bcel/classfile/BootstrapMethod;\n \n   public final java.lang.String toString(org.apache.bcel.classfile.ConstantPool);\n     descriptor: (Lorg/apache/bcel/classfile/ConstantPool;)Ljava/lang/String;\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=5, locals=6, args_size=2\n-         0: new           #9                  // class java/lang/StringBuilder\n+         0: new           #36                 // class java/lang/StringBuilder\n          3: dup\n-         4: invokespecial #10                 // Method java/lang/StringBuilder.\"<init>\":()V\n+         4: invokespecial #38                 // Method java/lang/StringBuilder.\"<init>\":()V\n          7: astore_2\n          8: aload_1\n          9: aload_0\n-        10: getfield      #8                  // Field bootstrapMethodRef:I\n+        10: getfield      #32                 // Field bootstrapMethodRef:I\n         13: bipush        15\n-        15: invokevirtual #19                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n+        15: invokevirtual #63                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(IB)Ljava/lang/String;\n         18: astore_3\n         19: aload_2\n         20: aload_3\n         21: iconst_0\n-        22: invokestatic  #20                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n-        25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: invokestatic  #69                 // Method org/apache/bcel/classfile/Utility.compactClassName:(Ljava/lang/String;Z)Ljava/lang/String;\n+        25: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         28: pop\n         29: aload_0\n-        30: getfield      #6                  // Field bootstrapArguments:[I\n+        30: getfield      #23                 // Field bootstrapArguments:[I\n         33: arraylength\n         34: istore        4\n         36: iload         4\n         38: ifle          101\n         41: aload_2\n-        42: ldc           #21                 // String \\nMethod Arguments:\n-        44: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        42: ldc           #75                 // String \\nMethod Arguments:\n+        44: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         47: pop\n         48: iconst_0\n         49: istore        5\n         51: iload         5\n         53: iload         4\n         55: if_icmpge     101\n         58: aload_2\n-        59: ldc           #22                 // String \\n\n-        61: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        59: ldc           #77                 // String \\n\n+        61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         64: iload         5\n-        66: invokevirtual #13                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        69: ldc           #23                 // String :\n-        71: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        66: invokevirtual #45                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        69: ldc           #79                 // String :\n+        71: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         74: pop\n         75: aload_2\n         76: aload_1\n         77: aload_1\n         78: aload_0\n-        79: getfield      #6                  // Field bootstrapArguments:[I\n+        79: getfield      #23                 // Field bootstrapArguments:[I\n         82: iload         5\n         84: iaload\n-        85: invokevirtual #24                 // Method org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        88: invokevirtual #25                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n-        91: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        85: invokevirtual #81                 // Method org/apache/bcel/classfile/ConstantPool.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        88: invokevirtual #85                 // Method org/apache/bcel/classfile/ConstantPool.constantToString:(Lorg/apache/bcel/classfile/Constant;)Ljava/lang/String;\n+        91: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         94: pop\n         95: iinc          5, 1\n         98: goto          51\n        101: aload_2\n-       102: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+       102: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n        105: areturn\n       LineNumberTable:\n         line 128: 0\n         line 130: 8\n         line 132: 19\n         line 133: 29\n         line 134: 36\n@@ -476,23 +476,23 @@\n   public final void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0011) ACC_PUBLIC, ACC_FINAL\n     Code:\n       stack=2, locals=6, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: getfield      #8                  // Field bootstrapMethodRef:I\n-         5: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n+         2: getfield      #32                 // Field bootstrapMethodRef:I\n+         5: invokevirtual #88                 // Method java/io/DataOutputStream.writeShort:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #6                  // Field bootstrapArguments:[I\n+        10: getfield      #23                 // Field bootstrapArguments:[I\n         13: arraylength\n-        14: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        14: invokevirtual #88                 // Method java/io/DataOutputStream.writeShort:(I)V\n         17: aload_0\n-        18: getfield      #6                  // Field bootstrapArguments:[I\n+        18: getfield      #23                 // Field bootstrapArguments:[I\n         21: astore_2\n         22: aload_2\n         23: arraylength\n         24: istore_3\n         25: iconst_0\n         26: istore        4\n         28: iload         4\n@@ -500,15 +500,15 @@\n         31: if_icmpge     52\n         34: aload_2\n         35: iload         4\n         37: iaload\n         38: istore        5\n         40: aload_1\n         41: iload         5\n-        43: invokevirtual #26                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        43: invokevirtual #88                 // Method java/io/DataOutputStream.writeShort:(I)V\n         46: iinc          4, 1\n         49: goto          28\n         52: return\n       LineNumberTable:\n         line 151: 0\n         line 152: 8\n         line 153: 17\n@@ -531,16 +531,16 @@\n \n   public org.apache.bcel.classfile.BootstrapMethod copy();\n     descriptor: ()Lorg/apache/bcel/classfile/BootstrapMethod;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #27                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n-         4: checkcast     #28                 // class org/apache/bcel/classfile/BootstrapMethod\n+         1: invokevirtual #94                 // Method java/lang/Object.clone:()Ljava/lang/Object;\n+         4: checkcast     #2                  // class org/apache/bcel/classfile/BootstrapMethod\n          7: areturn\n          8: astore_1\n          9: aconst_null\n         10: areturn\n       Exception table:\n          from    to  target type\n              0     7     8   Class java/lang/CloneNotSupportedException\n"}]}
