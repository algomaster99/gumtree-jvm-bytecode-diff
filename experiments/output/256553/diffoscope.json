{"diffoscope-json-version": 1, "source1": "first/MetadataBandGroup.class", "source2": "second/MetadataBandGroup.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -31,16 +31,16 @@\n     public IntList casearray_N;\n     public List<CPSignature> nesttype_RS;\n     public IntList nestpair_N;\n     public List<CPUTF8> nestname_RU;\n     private final CpBands cpBands;\n     private final int context;\n     \n-    public MetadataBandGroup(final String type, final int context, final CpBands cpBands, final SegmentHeader segmentHeader, final int effort) {\n-        super(effort, segmentHeader);\n+    public MetadataBandGroup(final String type, final int context, final CpBands cpBands, final SegmentHeader segmentHeader, final int n) {\n+        super(n, segmentHeader);\n         this.numBackwardsCalls = 0;\n         this.param_NB = new IntList();\n         this.anno_N = new IntList();\n         this.type_RS = new ArrayList<CPSignature>();\n         this.pair_N = new IntList();\n         this.name_RU = new ArrayList<CPUTF8>();\n         this.T = new ArrayList<String>();\n@@ -57,219 +57,212 @@\n         this.nestpair_N = new IntList();\n         this.nestname_RU = new ArrayList<CPUTF8>();\n         this.type = type;\n         this.cpBands = cpBands;\n         this.context = context;\n     }\n     \n-    public void pack(final OutputStream out) throws IOException, Pack200Exception {\n+    public void pack(final OutputStream outputStream) throws IOException, Pack200Exception {\n         PackingUtils.log(\"Writing metadata band group...\");\n         if (this.hasContent()) {\n-            String contextStr;\n+            String s;\n             if (this.context == 0) {\n-                contextStr = \"Class\";\n+                s = \"Class\";\n             }\n             else if (this.context == 1) {\n-                contextStr = \"Field\";\n+                s = \"Field\";\n             }\n             else {\n-                contextStr = \"Method\";\n+                s = \"Method\";\n             }\n-            byte[] encodedBand = null;\n             if (!this.type.equals(\"AD\")) {\n                 if (this.type.indexOf(80) != -1) {\n-                    encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" param_NB\", this.param_NB.toArray(), Codec.BYTE1);\n-                    out.write(encodedBand);\n-                    PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" anno_N[\" + this.param_NB.size() + \"]\");\n+                    final byte[] encodeBandInt = this.encodeBandInt(s + \"_\" + this.type + \" param_NB\", this.param_NB.toArray(), Codec.BYTE1);\n+                    outputStream.write(encodeBandInt);\n+                    PackingUtils.log(\"Wrote \" + encodeBandInt.length + \" bytes from \" + s + \"_\" + this.type + \" anno_N[\" + this.param_NB.size() + \"]\");\n                 }\n-                encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" anno_N\", this.anno_N.toArray(), Codec.UNSIGNED5);\n-                out.write(encodedBand);\n-                PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" anno_N[\" + this.anno_N.size() + \"]\");\n-                encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" type_RS\", this.cpEntryListToArray((List)this.type_RS), Codec.UNSIGNED5);\n-                out.write(encodedBand);\n-                PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" type_RS[\" + this.type_RS.size() + \"]\");\n-                encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" pair_N\", this.pair_N.toArray(), Codec.UNSIGNED5);\n-                out.write(encodedBand);\n-                PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" pair_N[\" + this.pair_N.size() + \"]\");\n-                encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" name_RU\", this.cpEntryListToArray((List)this.name_RU), Codec.UNSIGNED5);\n-                out.write(encodedBand);\n-                PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" name_RU[\" + this.name_RU.size() + \"]\");\n-            }\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" T\", this.tagListToArray(this.T), Codec.BYTE1);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" T[\" + this.T.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" caseI_KI\", this.cpEntryListToArray((List)this.caseI_KI), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" caseI_KI[\" + this.caseI_KI.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" caseD_KD\", this.cpEntryListToArray((List)this.caseD_KD), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" caseD_KD[\" + this.caseD_KD.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" caseF_KF\", this.cpEntryListToArray((List)this.caseF_KF), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" caseF_KF[\" + this.caseF_KF.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" caseJ_KJ\", this.cpEntryListToArray((List)this.caseJ_KJ), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" caseJ_KJ[\" + this.caseJ_KJ.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" casec_RS\", this.cpEntryListToArray((List)this.casec_RS), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" casec_RS[\" + this.casec_RS.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" caseet_RS\", this.cpEntryListToArray((List)this.caseet_RS), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" caseet_RS[\" + this.caseet_RS.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" caseec_RU\", this.cpEntryListToArray((List)this.caseec_RU), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" caseec_RU[\" + this.caseec_RU.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" cases_RU\", this.cpEntryListToArray((List)this.cases_RU), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" cases_RU[\" + this.cases_RU.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" casearray_N\", this.casearray_N.toArray(), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" casearray_N[\" + this.casearray_N.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" nesttype_RS\", this.cpEntryListToArray((List)this.nesttype_RS), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" nesttype_RS[\" + this.nesttype_RS.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" nestpair_N\", this.nestpair_N.toArray(), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" nestpair_N[\" + this.nestpair_N.size() + \"]\");\n-            encodedBand = this.encodeBandInt(contextStr + \"_\" + this.type + \" nestname_RU\", this.cpEntryListToArray((List)this.nestname_RU), Codec.UNSIGNED5);\n-            out.write(encodedBand);\n-            PackingUtils.log(\"Wrote \" + encodedBand.length + \" bytes from \" + contextStr + \"_\" + this.type + \" nestname_RU[\" + this.nestname_RU.size() + \"]\");\n+                final byte[] encodeBandInt2 = this.encodeBandInt(s + \"_\" + this.type + \" anno_N\", this.anno_N.toArray(), Codec.UNSIGNED5);\n+                outputStream.write(encodeBandInt2);\n+                PackingUtils.log(\"Wrote \" + encodeBandInt2.length + \" bytes from \" + s + \"_\" + this.type + \" anno_N[\" + this.anno_N.size() + \"]\");\n+                final byte[] encodeBandInt3 = this.encodeBandInt(s + \"_\" + this.type + \" type_RS\", this.cpEntryListToArray((List)this.type_RS), Codec.UNSIGNED5);\n+                outputStream.write(encodeBandInt3);\n+                PackingUtils.log(\"Wrote \" + encodeBandInt3.length + \" bytes from \" + s + \"_\" + this.type + \" type_RS[\" + this.type_RS.size() + \"]\");\n+                final byte[] encodeBandInt4 = this.encodeBandInt(s + \"_\" + this.type + \" pair_N\", this.pair_N.toArray(), Codec.UNSIGNED5);\n+                outputStream.write(encodeBandInt4);\n+                PackingUtils.log(\"Wrote \" + encodeBandInt4.length + \" bytes from \" + s + \"_\" + this.type + \" pair_N[\" + this.pair_N.size() + \"]\");\n+                final byte[] encodeBandInt5 = this.encodeBandInt(s + \"_\" + this.type + \" name_RU\", this.cpEntryListToArray((List)this.name_RU), Codec.UNSIGNED5);\n+                outputStream.write(encodeBandInt5);\n+                PackingUtils.log(\"Wrote \" + encodeBandInt5.length + \" bytes from \" + s + \"_\" + this.type + \" name_RU[\" + this.name_RU.size() + \"]\");\n+            }\n+            final byte[] encodeBandInt6 = this.encodeBandInt(s + \"_\" + this.type + \" T\", this.tagListToArray(this.T), Codec.BYTE1);\n+            outputStream.write(encodeBandInt6);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt6.length + \" bytes from \" + s + \"_\" + this.type + \" T[\" + this.T.size() + \"]\");\n+            final byte[] encodeBandInt7 = this.encodeBandInt(s + \"_\" + this.type + \" caseI_KI\", this.cpEntryListToArray((List)this.caseI_KI), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt7);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt7.length + \" bytes from \" + s + \"_\" + this.type + \" caseI_KI[\" + this.caseI_KI.size() + \"]\");\n+            final byte[] encodeBandInt8 = this.encodeBandInt(s + \"_\" + this.type + \" caseD_KD\", this.cpEntryListToArray((List)this.caseD_KD), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt8);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt8.length + \" bytes from \" + s + \"_\" + this.type + \" caseD_KD[\" + this.caseD_KD.size() + \"]\");\n+            final byte[] encodeBandInt9 = this.encodeBandInt(s + \"_\" + this.type + \" caseF_KF\", this.cpEntryListToArray((List)this.caseF_KF), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt9);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt9.length + \" bytes from \" + s + \"_\" + this.type + \" caseF_KF[\" + this.caseF_KF.size() + \"]\");\n+            final byte[] encodeBandInt10 = this.encodeBandInt(s + \"_\" + this.type + \" caseJ_KJ\", this.cpEntryListToArray((List)this.caseJ_KJ), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt10);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt10.length + \" bytes from \" + s + \"_\" + this.type + \" caseJ_KJ[\" + this.caseJ_KJ.size() + \"]\");\n+            final byte[] encodeBandInt11 = this.encodeBandInt(s + \"_\" + this.type + \" casec_RS\", this.cpEntryListToArray((List)this.casec_RS), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt11);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt11.length + \" bytes from \" + s + \"_\" + this.type + \" casec_RS[\" + this.casec_RS.size() + \"]\");\n+            final byte[] encodeBandInt12 = this.encodeBandInt(s + \"_\" + this.type + \" caseet_RS\", this.cpEntryListToArray((List)this.caseet_RS), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt12);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt12.length + \" bytes from \" + s + \"_\" + this.type + \" caseet_RS[\" + this.caseet_RS.size() + \"]\");\n+            final byte[] encodeBandInt13 = this.encodeBandInt(s + \"_\" + this.type + \" caseec_RU\", this.cpEntryListToArray((List)this.caseec_RU), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt13);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt13.length + \" bytes from \" + s + \"_\" + this.type + \" caseec_RU[\" + this.caseec_RU.size() + \"]\");\n+            final byte[] encodeBandInt14 = this.encodeBandInt(s + \"_\" + this.type + \" cases_RU\", this.cpEntryListToArray((List)this.cases_RU), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt14);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt14.length + \" bytes from \" + s + \"_\" + this.type + \" cases_RU[\" + this.cases_RU.size() + \"]\");\n+            final byte[] encodeBandInt15 = this.encodeBandInt(s + \"_\" + this.type + \" casearray_N\", this.casearray_N.toArray(), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt15);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt15.length + \" bytes from \" + s + \"_\" + this.type + \" casearray_N[\" + this.casearray_N.size() + \"]\");\n+            final byte[] encodeBandInt16 = this.encodeBandInt(s + \"_\" + this.type + \" nesttype_RS\", this.cpEntryListToArray((List)this.nesttype_RS), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt16);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt16.length + \" bytes from \" + s + \"_\" + this.type + \" nesttype_RS[\" + this.nesttype_RS.size() + \"]\");\n+            final byte[] encodeBandInt17 = this.encodeBandInt(s + \"_\" + this.type + \" nestpair_N\", this.nestpair_N.toArray(), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt17);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt17.length + \" bytes from \" + s + \"_\" + this.type + \" nestpair_N[\" + this.nestpair_N.size() + \"]\");\n+            final byte[] encodeBandInt18 = this.encodeBandInt(s + \"_\" + this.type + \" nestname_RU\", this.cpEntryListToArray((List)this.nestname_RU), Codec.UNSIGNED5);\n+            outputStream.write(encodeBandInt18);\n+            PackingUtils.log(\"Wrote \" + encodeBandInt18.length + \" bytes from \" + s + \"_\" + this.type + \" nestname_RU[\" + this.nestname_RU.size() + \"]\");\n         }\n     }\n     \n     private int[] tagListToArray(final List<String> list) {\n         return list.stream().mapToInt(s -> s.charAt(0)).toArray();\n     }\n     \n-    public void addParameterAnnotation(final int numParams, final int[] annoN, final IntList pairN, final List<String> typeRS, final List<String> nameRU, final List<String> t, final List<Object> values, final List<Integer> caseArrayN, final List<String> nestTypeRS, final List<String> nestNameRU, final List<Integer> nestPairN) {\n-        this.param_NB.add(numParams);\n-        for (final int element : annoN) {\n-            this.anno_N.add(element);\n-        }\n-        this.pair_N.addAll(pairN);\n-        for (final String desc : typeRS) {\n-            this.type_RS.add(this.cpBands.getCPSignature(desc));\n-        }\n-        for (final String name : nameRU) {\n-            this.name_RU.add(this.cpBands.getCPUtf8(name));\n-        }\n-        final Iterator<Object> valuesIterator = values.iterator();\n-        for (final String tag : t) {\n-            this.T.add(tag);\n-            if (tag.equals(\"B\") || tag.equals(\"C\") || tag.equals(\"I\") || tag.equals(\"S\") || tag.equals(\"Z\")) {\n-                final Integer value = Integer.valueOf(valuesIterator.next());\n-                this.caseI_KI.add((CPConstant<?>)this.cpBands.getConstant((Object)value));\n-            }\n-            else if (tag.equals(\"D\")) {\n-                final Double value2 = Double.valueOf(valuesIterator.next());\n-                this.caseD_KD.add((CPConstant<?>)this.cpBands.getConstant((Object)value2));\n-            }\n-            else if (tag.equals(\"F\")) {\n-                final Float value3 = Float.valueOf(valuesIterator.next());\n-                this.caseF_KF.add((CPConstant<?>)this.cpBands.getConstant((Object)value3));\n-            }\n-            else if (tag.equals(\"J\")) {\n-                final Long value4 = Long.valueOf(valuesIterator.next());\n-                this.caseJ_KJ.add((CPConstant<?>)this.cpBands.getConstant((Object)value4));\n-            }\n-            else if (tag.equals(\"c\")) {\n-                final String value5 = (String)valuesIterator.next();\n-                this.casec_RS.add(this.cpBands.getCPSignature(value5));\n-            }\n-            else if (tag.equals(\"e\")) {\n-                final String value5 = (String)valuesIterator.next();\n-                final String value6 = (String)valuesIterator.next();\n-                this.caseet_RS.add(this.cpBands.getCPSignature(value5));\n-                this.caseec_RU.add(this.cpBands.getCPUtf8(value6));\n+    public void addParameterAnnotation(final int n, final int[] array, final IntList list, final List<String> list2, final List<String> list3, final List<String> list4, final List<Object> list5, final List<Integer> list6, final List<String> list7, final List<String> list8, final List<Integer> list9) {\n+        this.param_NB.add(n);\n+        for (int length = array.length, i = 0; i < length; ++i) {\n+            this.anno_N.add(array[i]);\n+        }\n+        this.pair_N.addAll(list);\n+        final Iterator<String> iterator = list2.iterator();\n+        while (iterator.hasNext()) {\n+            this.type_RS.add(this.cpBands.getCPSignature((String)iterator.next()));\n+        }\n+        final Iterator<String> iterator2 = list3.iterator();\n+        while (iterator2.hasNext()) {\n+            this.name_RU.add(this.cpBands.getCPUtf8((String)iterator2.next()));\n+        }\n+        final Iterator<Integer> iterator3 = list5.iterator();\n+        for (final String s : list4) {\n+            this.T.add(s);\n+            if (s.equals(\"B\") || s.equals(\"C\") || s.equals(\"I\") || s.equals(\"S\") || s.equals(\"Z\")) {\n+                this.caseI_KI.add((CPConstant<?>)this.cpBands.getConstant((Object)Integer.valueOf(iterator3.next())));\n+            }\n+            else if (s.equals(\"D\")) {\n+                this.caseD_KD.add((CPConstant<?>)this.cpBands.getConstant((Object)Double.valueOf(iterator3.next())));\n+            }\n+            else if (s.equals(\"F\")) {\n+                this.caseF_KF.add((CPConstant<?>)this.cpBands.getConstant((Object)Float.valueOf(iterator3.next())));\n+            }\n+            else if (s.equals(\"J\")) {\n+                this.caseJ_KJ.add((CPConstant<?>)this.cpBands.getConstant((Object)Long.valueOf(iterator3.next())));\n+            }\n+            else if (s.equals(\"c\")) {\n+                this.casec_RS.add(this.cpBands.getCPSignature((String)iterator3.next()));\n+            }\n+            else if (s.equals(\"e\")) {\n+                final String s2 = (String)iterator3.next();\n+                final String s3 = (String)iterator3.next();\n+                this.caseet_RS.add(this.cpBands.getCPSignature(s2));\n+                this.caseec_RU.add(this.cpBands.getCPUtf8(s3));\n             }\n             else {\n-                if (!tag.equals(\"s\")) {\n+                if (!s.equals(\"s\")) {\n                     continue;\n                 }\n-                final String value5 = (String)valuesIterator.next();\n-                this.cases_RU.add(this.cpBands.getCPUtf8(value5));\n+                this.cases_RU.add(this.cpBands.getCPUtf8((String)iterator3.next()));\n             }\n         }\n-        for (final Integer element2 : caseArrayN) {\n-            final int arraySize = (int)element2;\n-            this.casearray_N.add(arraySize);\n-            this.numBackwardsCalls += arraySize;\n+        final Iterator<Integer> iterator5 = list6.iterator();\n+        while (iterator5.hasNext()) {\n+            final int intValue = (int)Integer.valueOf(iterator5.next());\n+            this.casearray_N.add(intValue);\n+            this.numBackwardsCalls += intValue;\n         }\n-        for (final String type : nestTypeRS) {\n-            this.nesttype_RS.add(this.cpBands.getCPSignature(type));\n+        final Iterator<String> iterator6 = list7.iterator();\n+        while (iterator6.hasNext()) {\n+            this.nesttype_RS.add(this.cpBands.getCPSignature((String)iterator6.next()));\n         }\n-        for (final String name2 : nestNameRU) {\n-            this.nestname_RU.add(this.cpBands.getCPUtf8(name2));\n+        final Iterator<String> iterator7 = list8.iterator();\n+        while (iterator7.hasNext()) {\n+            this.nestname_RU.add(this.cpBands.getCPUtf8((String)iterator7.next()));\n         }\n-        for (final Integer numPairs : nestPairN) {\n-            this.nestpair_N.add((int)numPairs);\n-            this.numBackwardsCalls += numPairs;\n+        for (final Integer n2 : list9) {\n+            this.nestpair_N.add((int)n2);\n+            this.numBackwardsCalls += n2;\n         }\n     }\n     \n-    public void addAnnotation(final String desc, final List<String> nameRU, final List<String> tags, final List<Object> values, final List<Integer> caseArrayN, final List<String> nestTypeRS, final List<String> nestNameRU, final List<Integer> nestPairN) {\n-        this.type_RS.add(this.cpBands.getCPSignature(desc));\n-        this.pair_N.add(nameRU.size());\n-        for (final String name : nameRU) {\n-            this.name_RU.add(this.cpBands.getCPUtf8(name));\n+    public void addAnnotation(final String s, final List<String> list, final List<String> list2, final List<Object> list3, final List<Integer> list4, final List<String> list5, final List<String> list6, final List<Integer> list7) {\n+        this.type_RS.add(this.cpBands.getCPSignature(s));\n+        this.pair_N.add(list.size());\n+        final Iterator iterator = list.iterator();\n+        while (iterator.hasNext()) {\n+            this.name_RU.add(this.cpBands.getCPUtf8((String)iterator.next()));\n         }\n-        final Iterator<Object> valuesIterator = values.iterator();\n-        for (final String tag : tags) {\n-            this.T.add(tag);\n-            if (tag.equals(\"B\") || tag.equals(\"C\") || tag.equals(\"I\") || tag.equals(\"S\") || tag.equals(\"Z\")) {\n-                final Integer value = Integer.valueOf(valuesIterator.next());\n-                this.caseI_KI.add((CPConstant<?>)this.cpBands.getConstant((Object)value));\n+        final Iterator<Integer> iterator2 = list3.iterator();\n+        for (final String s2 : list2) {\n+            this.T.add(s2);\n+            if (s2.equals(\"B\") || s2.equals(\"C\") || s2.equals(\"I\") || s2.equals(\"S\") || s2.equals(\"Z\")) {\n+                this.caseI_KI.add((CPConstant<?>)this.cpBands.getConstant((Object)Integer.valueOf(iterator2.next())));\n             }\n-            else if (tag.equals(\"D\")) {\n-                final Double value2 = Double.valueOf(valuesIterator.next());\n-                this.caseD_KD.add((CPConstant<?>)this.cpBands.getConstant((Object)value2));\n+            else if (s2.equals(\"D\")) {\n+                this.caseD_KD.add((CPConstant<?>)this.cpBands.getConstant((Object)Double.valueOf(iterator2.next())));\n             }\n-            else if (tag.equals(\"F\")) {\n-                final Float value3 = Float.valueOf(valuesIterator.next());\n-                this.caseF_KF.add((CPConstant<?>)this.cpBands.getConstant((Object)value3));\n+            else if (s2.equals(\"F\")) {\n+                this.caseF_KF.add((CPConstant<?>)this.cpBands.getConstant((Object)Float.valueOf(iterator2.next())));\n             }\n-            else if (tag.equals(\"J\")) {\n-                final Long value4 = Long.valueOf(valuesIterator.next());\n-                this.caseJ_KJ.add((CPConstant<?>)this.cpBands.getConstant((Object)value4));\n+            else if (s2.equals(\"J\")) {\n+                this.caseJ_KJ.add((CPConstant<?>)this.cpBands.getConstant((Object)Long.valueOf(iterator2.next())));\n             }\n-            else if (tag.equals(\"c\")) {\n-                final String value5 = (String)valuesIterator.next();\n-                this.casec_RS.add(this.cpBands.getCPSignature(value5));\n+            else if (s2.equals(\"c\")) {\n+                this.casec_RS.add(this.cpBands.getCPSignature((String)iterator2.next()));\n             }\n-            else if (tag.equals(\"e\")) {\n-                final String value5 = (String)valuesIterator.next();\n-                final String value6 = (String)valuesIterator.next();\n-                this.caseet_RS.add(this.cpBands.getCPSignature(value5));\n-                this.caseec_RU.add(this.cpBands.getCPUtf8(value6));\n+            else if (s2.equals(\"e\")) {\n+                final String s3 = (String)iterator2.next();\n+                final String s4 = (String)iterator2.next();\n+                this.caseet_RS.add(this.cpBands.getCPSignature(s3));\n+                this.caseec_RU.add(this.cpBands.getCPUtf8(s4));\n             }\n             else {\n-                if (!tag.equals(\"s\")) {\n+                if (!s2.equals(\"s\")) {\n                     continue;\n                 }\n-                final String value5 = (String)valuesIterator.next();\n-                this.cases_RU.add(this.cpBands.getCPUtf8(value5));\n+                this.cases_RU.add(this.cpBands.getCPUtf8((String)iterator2.next()));\n             }\n         }\n-        for (final Integer element : caseArrayN) {\n-            final int arraySize = (int)element;\n-            this.casearray_N.add(arraySize);\n-            this.numBackwardsCalls += arraySize;\n-        }\n-        for (final String type : nestTypeRS) {\n-            final String element2 = type;\n-            this.nesttype_RS.add(this.cpBands.getCPSignature(type));\n-        }\n-        for (final String name2 : nestNameRU) {\n-            final String element2 = name2;\n-            this.nestname_RU.add(this.cpBands.getCPUtf8(name2));\n-        }\n-        for (final Integer numPairs : nestPairN) {\n-            final Integer element = numPairs;\n-            this.nestpair_N.add((int)numPairs);\n-            this.numBackwardsCalls += numPairs;\n+        final Iterator<Integer> iterator4 = list4.iterator();\n+        while (iterator4.hasNext()) {\n+            final int intValue = (int)Integer.valueOf(iterator4.next());\n+            this.casearray_N.add(intValue);\n+            this.numBackwardsCalls += intValue;\n+        }\n+        final Iterator<String> iterator5 = list5.iterator();\n+        while (iterator5.hasNext()) {\n+            this.nesttype_RS.add(this.cpBands.getCPSignature((String)iterator5.next()));\n+        }\n+        final Iterator<String> iterator6 = list6.iterator();\n+        while (iterator6.hasNext()) {\n+            this.nestname_RU.add(this.cpBands.getCPUtf8((String)iterator6.next()));\n+        }\n+        for (final Integer n : list7) {\n+            this.nestpair_N.add((int)n);\n+            this.numBackwardsCalls += n;\n         }\n     }\n     \n     public boolean hasContent() {\n         return this.type_RS.size() > 0;\n     }\n     \n@@ -282,56 +275,56 @@\n     }\n     \n     public void newEntryInAnnoN() {\n         this.anno_N.add(1);\n     }\n     \n     public void removeLatest() {\n-        for (int latest = this.anno_N.remove(this.anno_N.size() - 1), i = 0; i < latest; ++i) {\n+        for (int remove = this.anno_N.remove(this.anno_N.size() - 1), i = 0; i < remove; ++i) {\n             this.type_RS.remove(this.type_RS.size() - 1);\n-            for (int pairs = this.pair_N.remove(this.pair_N.size() - 1), j = 0; j < pairs; ++j) {\n+            for (int remove2 = this.pair_N.remove(this.pair_N.size() - 1), j = 0; j < remove2; ++j) {\n                 this.removeOnePair();\n             }\n         }\n     }\n     \n     private void removeOnePair() {\n-        final String tag = (String)this.T.remove(this.T.size() - 1);\n-        if (tag.equals(\"B\") || tag.equals(\"C\") || tag.equals(\"I\") || tag.equals(\"S\") || tag.equals(\"Z\")) {\n+        final String s = (String)this.T.remove(this.T.size() - 1);\n+        if (s.equals(\"B\") || s.equals(\"C\") || s.equals(\"I\") || s.equals(\"S\") || s.equals(\"Z\")) {\n             this.caseI_KI.remove(this.caseI_KI.size() - 1);\n         }\n-        else if (tag.equals(\"D\")) {\n+        else if (s.equals(\"D\")) {\n             this.caseD_KD.remove(this.caseD_KD.size() - 1);\n         }\n-        else if (tag.equals(\"F\")) {\n+        else if (s.equals(\"F\")) {\n             this.caseF_KF.remove(this.caseF_KF.size() - 1);\n         }\n-        else if (tag.equals(\"J\")) {\n+        else if (s.equals(\"J\")) {\n             this.caseJ_KJ.remove(this.caseJ_KJ.size() - 1);\n         }\n-        else if (tag.equals(\"C\")) {\n+        else if (s.equals(\"C\")) {\n             this.casec_RS.remove(this.casec_RS.size() - 1);\n         }\n-        else if (tag.equals(\"e\")) {\n+        else if (s.equals(\"e\")) {\n             this.caseet_RS.remove(this.caseet_RS.size() - 1);\n             this.caseec_RU.remove(this.caseet_RS.size() - 1);\n         }\n-        else if (tag.equals(\"s\")) {\n+        else if (s.equals(\"s\")) {\n             this.cases_RU.remove(this.cases_RU.size() - 1);\n         }\n-        else if (tag.equals(\"[\")) {\n-            final int arraySize = this.casearray_N.remove(this.casearray_N.size() - 1);\n-            this.numBackwardsCalls -= arraySize;\n-            for (int k = 0; k < arraySize; ++k) {\n+        else if (s.equals(\"[\")) {\n+            final int remove = this.casearray_N.remove(this.casearray_N.size() - 1);\n+            this.numBackwardsCalls -= remove;\n+            for (int i = 0; i < remove; ++i) {\n                 this.removeOnePair();\n             }\n         }\n-        else if (tag.equals(\"@\")) {\n+        else if (s.equals(\"@\")) {\n             this.nesttype_RS.remove(this.nesttype_RS.size() - 1);\n-            final int numPairs = this.nestpair_N.remove(this.nestpair_N.size() - 1);\n-            this.numBackwardsCalls -= numPairs;\n-            for (int i = 0; i < numPairs; ++i) {\n+            final int remove2 = this.nestpair_N.remove(this.nestpair_N.size() - 1);\n+            this.numBackwardsCalls -= remove2;\n+            for (int j = 0; j < remove2; ++j) {\n                 this.removeOnePair();\n             }\n         }\n     }\n }\n"}]}
