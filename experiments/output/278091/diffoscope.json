{"diffoscope-json-version": 1, "source1": "first/NewAttributeBands$Reference.class", "source2": "second/NewAttributeBands$Reference.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -26,89 +26,89 @@\n     \n     public Reference(final NewAttributeBands this$0, final String tag) {\n         super(this.this$0 = this$0, (NewAttributeBands.NewAttributeBands$1)null);\n         this.tag = tag;\n         this.length = this.getLength(tag.charAt(tag.length() - 1));\n     }\n     \n-    public void readBands(final InputStream in, final int count) throws IOException, Pack200Exception {\n+    public void readBands(final InputStream inputStream, final int n) throws IOException, Pack200Exception {\n         if (this.tag.startsWith(\"KI\")) {\n-            this.band = this.this$0.parseCPIntReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPIntReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"KJ\")) {\n-            this.band = this.this$0.parseCPLongReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPLongReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"KF\")) {\n-            this.band = this.this$0.parseCPFloatReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPFloatReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"KD\")) {\n-            this.band = this.this$0.parseCPDoubleReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPDoubleReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"KS\")) {\n-            this.band = this.this$0.parseCPStringReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPStringReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RC\")) {\n-            this.band = this.this$0.parseCPClassReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPClassReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RS\")) {\n-            this.band = this.this$0.parseCPSignatureReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPSignatureReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RD\")) {\n-            this.band = this.this$0.parseCPDescriptorReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPDescriptorReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RF\")) {\n-            this.band = this.this$0.parseCPFieldRefReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPFieldRefReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RM\")) {\n-            this.band = this.this$0.parseCPMethodRefReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPMethodRefReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RI\")) {\n-            this.band = this.this$0.parseCPInterfaceMethodRefReferences(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPInterfaceMethodRefReferences(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n         else if (this.tag.startsWith(\"RU\")) {\n-            this.band = this.this$0.parseCPUTF8References(NewAttributeBands.access$400(this.this$0).getName(), in, Codec.UNSIGNED5, count);\n+            this.band = this.this$0.parseCPUTF8References(NewAttributeBands.access$400(this.this$0).getName(), inputStream, Codec.UNSIGNED5, n);\n         }\n     }\n     \n-    public void addToAttribute(final int n, final NewAttribute attribute) {\n+    public void addToAttribute(final int n, final NewAttribute newAttribute) {\n         if (this.tag.startsWith(\"KI\")) {\n-            attribute.addToBody(this.length, (Object)((CPInteger[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPInteger[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"KJ\")) {\n-            attribute.addToBody(this.length, (Object)((CPLong[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPLong[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"KF\")) {\n-            attribute.addToBody(this.length, (Object)((CPFloat[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPFloat[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"KD\")) {\n-            attribute.addToBody(this.length, (Object)((CPDouble[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPDouble[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"KS\")) {\n-            attribute.addToBody(this.length, (Object)((CPString[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPString[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RC\")) {\n-            attribute.addToBody(this.length, (Object)((CPClass[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPClass[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RS\")) {\n-            attribute.addToBody(this.length, (Object)((CPUTF8[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPUTF8[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RD\")) {\n-            attribute.addToBody(this.length, (Object)((CPNameAndType[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPNameAndType[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RF\")) {\n-            attribute.addToBody(this.length, (Object)((CPFieldRef[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPFieldRef[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RM\")) {\n-            attribute.addToBody(this.length, (Object)((CPMethodRef[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPMethodRef[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RI\")) {\n-            attribute.addToBody(this.length, (Object)((CPInterfaceMethodRef[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPInterfaceMethodRef[])this.band)[n]);\n         }\n         else if (this.tag.startsWith(\"RU\")) {\n-            attribute.addToBody(this.length, (Object)((CPUTF8[])this.band)[n]);\n+            newAttribute.addToBody(this.length, (Object)((CPUTF8[])this.band)[n]);\n         }\n     }\n     \n     public String getTag() {\n         return this.tag;\n     }\n }\n"}]}
