{"diffoscope-json-version": 1, "source1": "first/DeflateCompressorInputStream.class", "source2": "second/DeflateCompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,137 +1,137 @@\n-  SHA-256 checksum 9947a590e64db3bcf30765d05f296a14d82f4e4a1248687b47e40e8beb87a94d\n+  SHA-256 checksum fbb3e27224cea93d16413baab3c3a25a6f7caf8e8bd8a466fcd5aa87bd5b0515\n   Compiled from \"DeflateCompressorInputStream.java\"\n public class org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #23                         // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-  super_class: #24                        // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #8                          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+  super_class: #13                        // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 8, methods: 9, attributes: 1\n Constant pool:\n-    #1 = Class              #83           // org/apache/commons/compress/compressors/deflate/DeflateParameters\n-    #2 = Methodref          #1.#84        // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n-    #3 = Methodref          #23.#85       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-    #4 = Methodref          #24.#84       // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #5 = Class              #86           // java/util/zip/Inflater\n-    #6 = Methodref          #1.#87        // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n-    #7 = Methodref          #5.#88        // java/util/zip/Inflater.\"<init>\":(Z)V\n-    #8 = Fieldref           #23.#89       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.inflater:Ljava/util/zip/Inflater;\n-    #9 = Class              #90           // java/util/zip/InflaterInputStream\n-   #10 = Class              #91           // org/apache/commons/compress/utils/CountingInputStream\n-   #11 = Methodref          #10.#92       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #12 = Fieldref           #23.#93       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #13 = Methodref          #9.#94        // java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-   #14 = Fieldref           #23.#95       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.in:Ljava/io/InputStream;\n-   #15 = Methodref          #56.#96       // java/io/InputStream.read:()I\n-   #16 = Methodref          #23.#97       // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.count:(I)V\n-   #17 = Methodref          #56.#98       // java/io/InputStream.read:([BII)I\n-   #18 = Methodref          #99.#100      // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n-   #19 = Methodref          #56.#101      // java/io/InputStream.available:()I\n-   #20 = Methodref          #56.#102      // java/io/InputStream.close:()V\n-   #21 = Methodref          #5.#103       // java/util/zip/Inflater.end:()V\n-   #22 = Methodref          #10.#104      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #23 = Class              #105          // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-   #24 = Class              #106          // org/apache/commons/compress/compressors/CompressorInputStream\n-   #25 = Class              #107          // org/apache/commons/compress/utils/InputStreamStatistics\n-   #26 = Utf8               MAGIC_1\n-   #27 = Utf8               I\n-   #28 = Utf8               ConstantValue\n-   #29 = Integer            120\n-   #30 = Utf8               MAGIC_2a\n-   #31 = Integer            1\n-   #32 = Utf8               MAGIC_2b\n-   #33 = Integer            94\n-   #34 = Utf8               MAGIC_2c\n-   #35 = Integer            156\n-   #36 = Utf8               MAGIC_2d\n-   #37 = Integer            218\n-   #38 = Utf8               countingStream\n-   #39 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #40 = Utf8               in\n-   #41 = Utf8               Ljava/io/InputStream;\n-   #42 = Utf8               inflater\n-   #43 = Utf8               Ljava/util/zip/Inflater;\n-   #44 = Utf8               <init>\n-   #45 = Utf8               (Ljava/io/InputStream;)V\n-   #46 = Utf8               Code\n-   #47 = Utf8               LineNumberTable\n-   #48 = Utf8               LocalVariableTable\n-   #49 = Utf8               this\n-   #50 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n-   #51 = Utf8               inputStream\n-   #52 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-   #53 = Utf8               parameters\n-   #54 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n-   #55 = Utf8               StackMapTable\n-   #56 = Class              #108          // java/io/InputStream\n-   #57 = Utf8               read\n-   #58 = Utf8               ()I\n-   #59 = Utf8               ret\n-   #60 = Utf8               Exceptions\n-   #61 = Class              #109          // java/io/IOException\n-   #62 = Utf8               ([BII)I\n-   #63 = Utf8               buf\n-   #64 = Utf8               [B\n-   #65 = Utf8               off\n-   #66 = Utf8               len\n-   #67 = Utf8               skip\n-   #68 = Utf8               (J)J\n-   #69 = Utf8               n\n-   #70 = Utf8               J\n-   #71 = Utf8               available\n-   #72 = Utf8               close\n-   #73 = Utf8               ()V\n-   #74 = Class              #110          // java/lang/Throwable\n-   #75 = Utf8               getCompressedCount\n-   #76 = Utf8               ()J\n-   #77 = Utf8               matches\n-   #78 = Utf8               ([BI)Z\n-   #79 = Utf8               signature\n-   #80 = Utf8               length\n-   #81 = Utf8               SourceFile\n-   #82 = Utf8               DeflateCompressorInputStream.java\n-   #83 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n-   #84 = NameAndType        #44:#73       // \"<init>\":()V\n-   #85 = NameAndType        #44:#52       // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n-   #86 = Utf8               java/util/zip/Inflater\n-   #87 = NameAndType        #111:#112     // withZlibHeader:()Z\n-   #88 = NameAndType        #44:#113      // \"<init>\":(Z)V\n-   #89 = NameAndType        #42:#43       // inflater:Ljava/util/zip/Inflater;\n-   #90 = Utf8               java/util/zip/InflaterInputStream\n-   #91 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-   #92 = NameAndType        #44:#45       // \"<init>\":(Ljava/io/InputStream;)V\n-   #93 = NameAndType        #38:#39       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #94 = NameAndType        #44:#114      // \"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-   #95 = NameAndType        #40:#41       // in:Ljava/io/InputStream;\n-   #96 = NameAndType        #57:#58       // read:()I\n-   #97 = NameAndType        #115:#116     // count:(I)V\n-   #98 = NameAndType        #57:#62       // read:([BII)I\n-   #99 = Class              #117          // org/apache/commons/compress/utils/IOUtils\n-  #100 = NameAndType        #67:#118      // skip:(Ljava/io/InputStream;J)J\n-  #101 = NameAndType        #71:#58       // available:()I\n-  #102 = NameAndType        #72:#73       // close:()V\n-  #103 = NameAndType        #119:#73      // end:()V\n-  #104 = NameAndType        #120:#76      // getBytesRead:()J\n-  #105 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n-  #106 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-  #107 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #108 = Utf8               java/io/InputStream\n-  #109 = Utf8               java/io/IOException\n-  #110 = Utf8               java/lang/Throwable\n-  #111 = Utf8               withZlibHeader\n-  #112 = Utf8               ()Z\n-  #113 = Utf8               (Z)V\n-  #114 = Utf8               (Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-  #115 = Utf8               count\n-  #116 = Utf8               (I)V\n-  #117 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #118 = Utf8               (Ljava/io/InputStream;J)J\n-  #119 = Utf8               end\n-  #120 = Utf8               getBytesRead\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/deflate/DeflateParameters\n+    #2 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateParameters\n+    #3 = Methodref          #1.#4         // org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n+    #4 = NameAndType        #5:#6         // \"<init>\":()V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               ()V\n+    #7 = Methodref          #8.#9         // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.\"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+    #8 = Class              #10           // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+    #9 = NameAndType        #5:#11        // \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+   #10 = Utf8               org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream\n+   #11 = Utf8               (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+   #12 = Methodref          #13.#4        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #13 = Class              #14           // org/apache/commons/compress/compressors/CompressorInputStream\n+   #14 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n+   #15 = Class              #16           // java/util/zip/Inflater\n+   #16 = Utf8               java/util/zip/Inflater\n+   #17 = Methodref          #1.#18        // org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n+   #18 = NameAndType        #19:#20       // withZlibHeader:()Z\n+   #19 = Utf8               withZlibHeader\n+   #20 = Utf8               ()Z\n+   #21 = Methodref          #15.#22       // java/util/zip/Inflater.\"<init>\":(Z)V\n+   #22 = NameAndType        #5:#23        // \"<init>\":(Z)V\n+   #23 = Utf8               (Z)V\n+   #24 = Fieldref           #8.#25        // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.inflater:Ljava/util/zip/Inflater;\n+   #25 = NameAndType        #26:#27       // inflater:Ljava/util/zip/Inflater;\n+   #26 = Utf8               inflater\n+   #27 = Utf8               Ljava/util/zip/Inflater;\n+   #28 = Class              #29           // java/util/zip/InflaterInputStream\n+   #29 = Utf8               java/util/zip/InflaterInputStream\n+   #30 = Class              #31           // org/apache/commons/compress/utils/CountingInputStream\n+   #31 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #32 = Methodref          #30.#33       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #33 = NameAndType        #5:#34        // \"<init>\":(Ljava/io/InputStream;)V\n+   #34 = Utf8               (Ljava/io/InputStream;)V\n+   #35 = Fieldref           #8.#36        // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #36 = NameAndType        #37:#38       // countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #37 = Utf8               countingStream\n+   #38 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #39 = Methodref          #28.#40       // java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #40 = NameAndType        #5:#41        // \"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #41 = Utf8               (Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+   #42 = Fieldref           #8.#43        // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.in:Ljava/io/InputStream;\n+   #43 = NameAndType        #44:#45       // in:Ljava/io/InputStream;\n+   #44 = Utf8               in\n+   #45 = Utf8               Ljava/io/InputStream;\n+   #46 = Methodref          #47.#48       // java/io/InputStream.read:()I\n+   #47 = Class              #49           // java/io/InputStream\n+   #48 = NameAndType        #50:#51       // read:()I\n+   #49 = Utf8               java/io/InputStream\n+   #50 = Utf8               read\n+   #51 = Utf8               ()I\n+   #52 = Methodref          #8.#53        // org/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream.count:(I)V\n+   #53 = NameAndType        #54:#55       // count:(I)V\n+   #54 = Utf8               count\n+   #55 = Utf8               (I)V\n+   #56 = Methodref          #47.#57       // java/io/InputStream.read:([BII)I\n+   #57 = NameAndType        #50:#58       // read:([BII)I\n+   #58 = Utf8               ([BII)I\n+   #59 = Methodref          #60.#61       // org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+   #60 = Class              #62           // org/apache/commons/compress/utils/IOUtils\n+   #61 = NameAndType        #63:#64       // skip:(Ljava/io/InputStream;J)J\n+   #62 = Utf8               org/apache/commons/compress/utils/IOUtils\n+   #63 = Utf8               skip\n+   #64 = Utf8               (Ljava/io/InputStream;J)J\n+   #65 = Methodref          #47.#66       // java/io/InputStream.available:()I\n+   #66 = NameAndType        #67:#51       // available:()I\n+   #67 = Utf8               available\n+   #68 = Methodref          #47.#69       // java/io/InputStream.close:()V\n+   #69 = NameAndType        #70:#6        // close:()V\n+   #70 = Utf8               close\n+   #71 = Methodref          #15.#72       // java/util/zip/Inflater.end:()V\n+   #72 = NameAndType        #73:#6        // end:()V\n+   #73 = Utf8               end\n+   #74 = Methodref          #30.#75       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+   #75 = NameAndType        #76:#77       // getBytesRead:()J\n+   #76 = Utf8               getBytesRead\n+   #77 = Utf8               ()J\n+   #78 = Class              #79           // org/apache/commons/compress/utils/InputStreamStatistics\n+   #79 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+   #80 = Utf8               MAGIC_1\n+   #81 = Utf8               I\n+   #82 = Utf8               ConstantValue\n+   #83 = Integer            120\n+   #84 = Utf8               MAGIC_2a\n+   #85 = Integer            1\n+   #86 = Utf8               MAGIC_2b\n+   #87 = Integer            94\n+   #88 = Utf8               MAGIC_2c\n+   #89 = Integer            156\n+   #90 = Utf8               MAGIC_2d\n+   #91 = Integer            218\n+   #92 = Utf8               Code\n+   #93 = Utf8               LineNumberTable\n+   #94 = Utf8               LocalVariableTable\n+   #95 = Utf8               this\n+   #96 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n+   #97 = Utf8               inputStream\n+   #98 = Utf8               parameters\n+   #99 = Utf8               Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;\n+  #100 = Utf8               StackMapTable\n+  #101 = Utf8               ret\n+  #102 = Utf8               Exceptions\n+  #103 = Class              #104          // java/io/IOException\n+  #104 = Utf8               java/io/IOException\n+  #105 = Utf8               buf\n+  #106 = Utf8               [B\n+  #107 = Utf8               off\n+  #108 = Utf8               len\n+  #109 = Utf8               (J)J\n+  #110 = Utf8               n\n+  #111 = Utf8               J\n+  #112 = Class              #113          // java/lang/Throwable\n+  #113 = Utf8               java/lang/Throwable\n+  #114 = Utf8               getCompressedCount\n+  #115 = Utf8               matches\n+  #116 = Utf8               ([BI)Z\n+  #117 = Utf8               signature\n+  #118 = Utf8               length\n+  #119 = Utf8               SourceFile\n+  #120 = Utf8               DeflateCompressorInputStream.java\n {\n   private static final int MAGIC_1 = 120;\n     descriptor: I\n     flags: (0x001a) ACC_PRIVATE, ACC_STATIC, ACC_FINAL\n     ConstantValue: int 120\n \n   private static final int MAGIC_2a = 1;\n@@ -171,16 +171,16 @@\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=4, locals=2, args_size=2\n          0: aload_0\n          1: aload_1\n          2: new           #1                  // class org/apache/commons/compress/compressors/deflate/DeflateParameters\n          5: dup\n-         6: invokespecial #2                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n-         9: invokespecial #3                  // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n+         6: invokespecial #3                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.\"<init>\":()V\n+         9: invokespecial #7                  // Method \"<init>\":(Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n         12: return\n       LineNumberTable:\n         line 56: 0\n         line 57: 12\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      13     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n@@ -188,40 +188,40 @@\n \n   public org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream(java.io.InputStream, org.apache.commons.compress.compressors.deflate.DeflateParameters);\n     descriptor: (Ljava/io/InputStream;Lorg/apache/commons/compress/compressors/deflate/DeflateParameters;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=7, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #4                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #12                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n-         5: new           #5                  // class java/util/zip/Inflater\n+         5: new           #15                 // class java/util/zip/Inflater\n          8: dup\n          9: aload_2\n-        10: invokevirtual #6                  // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n+        10: invokevirtual #17                 // Method org/apache/commons/compress/compressors/deflate/DeflateParameters.withZlibHeader:()Z\n         13: ifne          20\n         16: iconst_1\n         17: goto          21\n         20: iconst_0\n-        21: invokespecial #7                  // Method java/util/zip/Inflater.\"<init>\":(Z)V\n-        24: putfield      #8                  // Field inflater:Ljava/util/zip/Inflater;\n+        21: invokespecial #21                 // Method java/util/zip/Inflater.\"<init>\":(Z)V\n+        24: putfield      #24                 // Field inflater:Ljava/util/zip/Inflater;\n         27: aload_0\n-        28: new           #9                  // class java/util/zip/InflaterInputStream\n+        28: new           #28                 // class java/util/zip/InflaterInputStream\n         31: dup\n         32: aload_0\n-        33: new           #10                 // class org/apache/commons/compress/utils/CountingInputStream\n+        33: new           #30                 // class org/apache/commons/compress/utils/CountingInputStream\n         36: dup\n         37: aload_1\n-        38: invokespecial #11                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        38: invokespecial #32                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n         41: dup_x1\n-        42: putfield      #12                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        42: putfield      #35                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n         45: aload_0\n-        46: getfield      #8                  // Field inflater:Ljava/util/zip/Inflater;\n-        49: invokespecial #13                 // Method java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n-        52: putfield      #14                 // Field in:Ljava/io/InputStream;\n+        46: getfield      #24                 // Field inflater:Ljava/util/zip/Inflater;\n+        49: invokespecial #39                 // Method java/util/zip/InflaterInputStream.\"<init>\":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V\n+        52: putfield      #42                 // Field in:Ljava/io/InputStream;\n         55: return\n       LineNumberTable:\n         line 67: 0\n         line 68: 4\n         line 69: 27\n         line 70: 55\n       LocalVariableTable:\n@@ -241,25 +241,25 @@\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #15                 // Method java/io/InputStream.read:()I\n+         1: getfield      #42                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #46                 // Method java/io/InputStream.read:()I\n          7: istore_1\n          8: aload_0\n          9: iload_1\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_0\n         15: goto          19\n         18: iconst_1\n-        19: invokevirtual #16                 // Method count:(I)V\n+        19: invokevirtual #52                 // Method count:(I)V\n         22: iload_1\n         23: ireturn\n       LineNumberTable:\n         line 75: 0\n         line 76: 8\n         line 77: 22\n       LocalVariableTable:\n@@ -284,23 +284,23 @@\n     Code:\n       stack=4, locals=5, args_size=4\n          0: iload_3\n          1: ifne          6\n          4: iconst_0\n          5: ireturn\n          6: aload_0\n-         7: getfield      #14                 // Field in:Ljava/io/InputStream;\n+         7: getfield      #42                 // Field in:Ljava/io/InputStream;\n         10: aload_1\n         11: iload_2\n         12: iload_3\n-        13: invokevirtual #17                 // Method java/io/InputStream.read:([BII)I\n+        13: invokevirtual #56                 // Method java/io/InputStream.read:([BII)I\n         16: istore        4\n         18: aload_0\n         19: iload         4\n-        21: invokevirtual #16                 // Method count:(I)V\n+        21: invokevirtual #52                 // Method count:(I)V\n         24: iload         4\n         26: ireturn\n       LineNumberTable:\n         line 83: 0\n         line 84: 4\n         line 86: 6\n         line 87: 18\n@@ -319,17 +319,17 @@\n \n   public long skip(long) throws java.io.IOException;\n     descriptor: (J)J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #14                 // Field in:Ljava/io/InputStream;\n+         1: getfield      #42                 // Field in:Ljava/io/InputStream;\n          4: lload_1\n-         5: invokestatic  #18                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n+         5: invokestatic  #59                 // Method org/apache/commons/compress/utils/IOUtils.skip:(Ljava/io/InputStream;J)J\n          8: lreturn\n       LineNumberTable:\n         line 94: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       9     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n             0       9     1     n   J\n@@ -338,16 +338,16 @@\n \n   public int available() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #19                 // Method java/io/InputStream.available:()I\n+         1: getfield      #42                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #65                 // Method java/io/InputStream.available:()I\n          7: ireturn\n       LineNumberTable:\n         line 100: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n     Exceptions:\n@@ -355,24 +355,24 @@\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #14                 // Field in:Ljava/io/InputStream;\n-         4: invokevirtual #20                 // Method java/io/InputStream.close:()V\n+         1: getfield      #42                 // Field in:Ljava/io/InputStream;\n+         4: invokevirtual #68                 // Method java/io/InputStream.close:()V\n          7: aload_0\n-         8: getfield      #8                  // Field inflater:Ljava/util/zip/Inflater;\n-        11: invokevirtual #21                 // Method java/util/zip/Inflater.end:()V\n+         8: getfield      #24                 // Field inflater:Ljava/util/zip/Inflater;\n+        11: invokevirtual #71                 // Method java/util/zip/Inflater.end:()V\n         14: goto          27\n         17: astore_1\n         18: aload_0\n-        19: getfield      #8                  // Field inflater:Ljava/util/zip/Inflater;\n-        22: invokevirtual #21                 // Method java/util/zip/Inflater.end:()V\n+        19: getfield      #24                 // Field inflater:Ljava/util/zip/Inflater;\n+        22: invokevirtual #71                 // Method java/util/zip/Inflater.end:()V\n         25: aload_1\n         26: athrow\n         27: return\n       Exception table:\n          from    to  target type\n              0     7    17   any\n       LineNumberTable:\n@@ -394,16 +394,16 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #12                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #22                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #35                 // Field countingStream:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #74                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 118: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/deflate/DeflateCompressorInputStream;\n \n"}]}
