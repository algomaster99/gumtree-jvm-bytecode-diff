{"diffoscope-json-version": 1, "source1": "first/EnumElementValueGen.class", "source2": "second/EnumElementValueGen.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,145 +1,145 @@\n-  SHA-256 checksum 5d4ddd42691f7df6288b6492713e150e9dcbe6ee4aedaed253c47e528abea870\n+  SHA-256 checksum f89f457c50319f9ce78834013929dd805f208af627354b99c4ec0b48d55d59ff\n   Compiled from \"EnumElementValueGen.java\"\n public class org.apache.bcel.generic.EnumElementValueGen extends org.apache.bcel.generic.ElementValueGen\n   minor version: 0\n   major version: 52\n   flags: (0x0021) ACC_PUBLIC, ACC_SUPER\n-  this_class: #35                         // org/apache/bcel/generic/EnumElementValueGen\n+  this_class: #20                         // org/apache/bcel/generic/EnumElementValueGen\n   super_class: #1                         // org/apache/bcel/generic/ElementValueGen\n   interfaces: 0, fields: 2, methods: 10, attributes: 1\n Constant pool:\n-    #1 = Class              #62           // org/apache/bcel/generic/ElementValueGen\n-    #2 = Methodref          #1.#63        // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-    #3 = Methodref          #28.#64       // org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n-    #4 = Methodref          #44.#65       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-    #5 = Fieldref           #35.#66       // org/apache/bcel/generic/EnumElementValueGen.typeIdx:I\n-    #6 = Methodref          #28.#67       // org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n-    #7 = Fieldref           #35.#68       // org/apache/bcel/generic/EnumElementValueGen.valueIdx:I\n-    #8 = Methodref          #28.#69       // org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n-    #9 = Methodref          #28.#70       // org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n-   #10 = Methodref          #1.#71        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-   #11 = Class              #72           // java/lang/IllegalArgumentException\n-   #12 = Class              #73           // java/lang/StringBuilder\n-   #13 = Methodref          #12.#74       // java/lang/StringBuilder.\"<init>\":()V\n-   #14 = String             #75           // Only element values of type enum can be built with this ctor - type specified:\n-   #15 = Methodref          #12.#76       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #16 = Methodref          #12.#77       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-   #17 = Methodref          #12.#78       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n-   #18 = Methodref          #11.#79       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #19 = Methodref          #80.#81       // org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n-   #20 = Methodref          #82.#83       // java/io/DataOutputStream.writeByte:(I)V\n-   #21 = Methodref          #82.#84       // java/io/DataOutputStream.writeShort:(I)V\n-   #22 = Fieldref           #85.#86       // java/lang/System.err:Ljava/io/PrintStream;\n-   #23 = String             #87           // Duplicating value:\n-   #24 = Methodref          #35.#64       // org/apache/bcel/generic/EnumElementValueGen.getEnumTypeString:()Ljava/lang/String;\n-   #25 = String             #88           // :\n-   #26 = Methodref          #35.#67       // org/apache/bcel/generic/EnumElementValueGen.getEnumValueString:()Ljava/lang/String;\n-   #27 = Methodref          #89.#90       // java/io/PrintStream.println:(Ljava/lang/String;)V\n-   #28 = Class              #91           // org/apache/bcel/classfile/EnumElementValue\n-   #29 = Methodref          #35.#92       // org/apache/bcel/generic/EnumElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #30 = Methodref          #44.#93       // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #31 = Methodref          #28.#94       // org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #32 = Methodref          #44.#95       // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #33 = Class              #96           // org/apache/bcel/classfile/ConstantUtf8\n-   #34 = Methodref          #33.#97       // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n-   #35 = Class              #98           // org/apache/bcel/generic/EnumElementValueGen\n-   #36 = Utf8               typeIdx\n-   #37 = Utf8               I\n-   #38 = Utf8               valueIdx\n-   #39 = Utf8               <init>\n-   #40 = Utf8               (Lorg/apache/bcel/classfile/EnumElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n-   #41 = Utf8               Code\n-   #42 = Utf8               LineNumberTable\n-   #43 = Utf8               StackMapTable\n-   #44 = Class              #99           // org/apache/bcel/generic/ConstantPoolGen\n-   #45 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #46 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #47 = Utf8               dump\n-   #48 = Utf8               (Ljava/io/DataOutputStream;)V\n-   #49 = Utf8               Exceptions\n-   #50 = Class              #100          // java/io/IOException\n-   #51 = Utf8               getElementValue\n-   #52 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n-   #53 = Utf8               getEnumTypeString\n-   #54 = Utf8               ()Ljava/lang/String;\n-   #55 = Utf8               getEnumValueString\n-   #56 = Utf8               getTypeIndex\n-   #57 = Utf8               ()I\n-   #58 = Utf8               getValueIndex\n-   #59 = Utf8               stringifyValue\n-   #60 = Utf8               SourceFile\n-   #61 = Utf8               EnumElementValueGen.java\n-   #62 = Utf8               org/apache/bcel/generic/ElementValueGen\n-   #63 = NameAndType        #39:#101      // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-   #64 = NameAndType        #53:#54       // getEnumTypeString:()Ljava/lang/String;\n-   #65 = NameAndType        #102:#103     // addUtf8:(Ljava/lang/String;)I\n-   #66 = NameAndType        #36:#37       // typeIdx:I\n-   #67 = NameAndType        #55:#54       // getEnumValueString:()Ljava/lang/String;\n-   #68 = NameAndType        #38:#37       // valueIdx:I\n-   #69 = NameAndType        #56:#57       // getTypeIndex:()I\n-   #70 = NameAndType        #58:#57       // getValueIndex:()I\n-   #71 = NameAndType        #104:#57      // getElementValueType:()I\n-   #72 = Utf8               java/lang/IllegalArgumentException\n-   #73 = Utf8               java/lang/StringBuilder\n-   #74 = NameAndType        #39:#105      // \"<init>\":()V\n-   #75 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n-   #76 = NameAndType        #106:#107     // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-   #77 = NameAndType        #106:#108     // append:(I)Ljava/lang/StringBuilder;\n-   #78 = NameAndType        #109:#54      // toString:()Ljava/lang/String;\n-   #79 = NameAndType        #39:#110      // \"<init>\":(Ljava/lang/String;)V\n-   #80 = Class              #111          // org/apache/bcel/generic/ObjectType\n-   #81 = NameAndType        #112:#54      // getSignature:()Ljava/lang/String;\n-   #82 = Class              #113          // java/io/DataOutputStream\n-   #83 = NameAndType        #114:#115     // writeByte:(I)V\n-   #84 = NameAndType        #116:#115     // writeShort:(I)V\n-   #85 = Class              #117          // java/lang/System\n-   #86 = NameAndType        #118:#119     // err:Ljava/io/PrintStream;\n-   #87 = Utf8               Duplicating value:\n-   #88 = Utf8               :\n-   #89 = Class              #120          // java/io/PrintStream\n-   #90 = NameAndType        #121:#110     // println:(Ljava/lang/String;)V\n-   #91 = Utf8               org/apache/bcel/classfile/EnumElementValue\n-   #92 = NameAndType        #122:#123     // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-   #93 = NameAndType        #122:#124     // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-   #94 = NameAndType        #39:#125      // \"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n-   #95 = NameAndType        #126:#127     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-   #96 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n-   #97 = NameAndType        #128:#54      // getBytes:()Ljava/lang/String;\n-   #98 = Utf8               org/apache/bcel/generic/EnumElementValueGen\n-   #99 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n-  #100 = Utf8               java/io/IOException\n-  #101 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n-  #102 = Utf8               addUtf8\n-  #103 = Utf8               (Ljava/lang/String;)I\n-  #104 = Utf8               getElementValueType\n-  #105 = Utf8               ()V\n-  #106 = Utf8               append\n-  #107 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n-  #108 = Utf8               (I)Ljava/lang/StringBuilder;\n-  #109 = Utf8               toString\n-  #110 = Utf8               (Ljava/lang/String;)V\n-  #111 = Utf8               org/apache/bcel/generic/ObjectType\n-  #112 = Utf8               getSignature\n-  #113 = Utf8               java/io/DataOutputStream\n-  #114 = Utf8               writeByte\n-  #115 = Utf8               (I)V\n-  #116 = Utf8               writeShort\n-  #117 = Utf8               java/lang/System\n-  #118 = Utf8               err\n-  #119 = Utf8               Ljava/io/PrintStream;\n-  #120 = Utf8               java/io/PrintStream\n-  #121 = Utf8               println\n-  #122 = Utf8               getConstantPool\n-  #123 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n-  #124 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n-  #125 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n-  #126 = Utf8               getConstant\n-  #127 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n-  #128 = Utf8               getBytes\n+    #1 = Class              #2            // org/apache/bcel/generic/ElementValueGen\n+    #2 = Utf8               org/apache/bcel/generic/ElementValueGen\n+    #3 = Methodref          #1.#4         // org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #4 = NameAndType        #5:#6         // \"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #5 = Utf8               <init>\n+    #6 = Utf8               (ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+    #7 = Methodref          #8.#9         // org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n+    #8 = Class              #10           // org/apache/bcel/classfile/EnumElementValue\n+    #9 = NameAndType        #11:#12       // getEnumTypeString:()Ljava/lang/String;\n+   #10 = Utf8               org/apache/bcel/classfile/EnumElementValue\n+   #11 = Utf8               getEnumTypeString\n+   #12 = Utf8               ()Ljava/lang/String;\n+   #13 = Methodref          #14.#15       // org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+   #14 = Class              #16           // org/apache/bcel/generic/ConstantPoolGen\n+   #15 = NameAndType        #17:#18       // addUtf8:(Ljava/lang/String;)I\n+   #16 = Utf8               org/apache/bcel/generic/ConstantPoolGen\n+   #17 = Utf8               addUtf8\n+   #18 = Utf8               (Ljava/lang/String;)I\n+   #19 = Fieldref           #20.#21       // org/apache/bcel/generic/EnumElementValueGen.typeIdx:I\n+   #20 = Class              #22           // org/apache/bcel/generic/EnumElementValueGen\n+   #21 = NameAndType        #23:#24       // typeIdx:I\n+   #22 = Utf8               org/apache/bcel/generic/EnumElementValueGen\n+   #23 = Utf8               typeIdx\n+   #24 = Utf8               I\n+   #25 = Methodref          #8.#26        // org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n+   #26 = NameAndType        #27:#12       // getEnumValueString:()Ljava/lang/String;\n+   #27 = Utf8               getEnumValueString\n+   #28 = Fieldref           #20.#29       // org/apache/bcel/generic/EnumElementValueGen.valueIdx:I\n+   #29 = NameAndType        #30:#24       // valueIdx:I\n+   #30 = Utf8               valueIdx\n+   #31 = Methodref          #8.#32        // org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n+   #32 = NameAndType        #33:#34       // getTypeIndex:()I\n+   #33 = Utf8               getTypeIndex\n+   #34 = Utf8               ()I\n+   #35 = Methodref          #8.#36        // org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n+   #36 = NameAndType        #37:#34       // getValueIndex:()I\n+   #37 = Utf8               getValueIndex\n+   #38 = Methodref          #1.#39        // org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+   #39 = NameAndType        #40:#34       // getElementValueType:()I\n+   #40 = Utf8               getElementValueType\n+   #41 = Class              #42           // java/lang/IllegalArgumentException\n+   #42 = Utf8               java/lang/IllegalArgumentException\n+   #43 = Class              #44           // java/lang/StringBuilder\n+   #44 = Utf8               java/lang/StringBuilder\n+   #45 = Methodref          #43.#46       // java/lang/StringBuilder.\"<init>\":()V\n+   #46 = NameAndType        #5:#47        // \"<init>\":()V\n+   #47 = Utf8               ()V\n+   #48 = String             #49           // Only element values of type enum can be built with this ctor - type specified:\n+   #49 = Utf8               Only element values of type enum can be built with this ctor - type specified:\n+   #50 = Methodref          #43.#51       // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #51 = NameAndType        #52:#53       // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #52 = Utf8               append\n+   #53 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;\n+   #54 = Methodref          #43.#55       // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+   #55 = NameAndType        #52:#56       // append:(I)Ljava/lang/StringBuilder;\n+   #56 = Utf8               (I)Ljava/lang/StringBuilder;\n+   #57 = Methodref          #43.#58       // java/lang/StringBuilder.toString:()Ljava/lang/String;\n+   #58 = NameAndType        #59:#12       // toString:()Ljava/lang/String;\n+   #59 = Utf8               toString\n+   #60 = Methodref          #41.#61       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #61 = NameAndType        #5:#62        // \"<init>\":(Ljava/lang/String;)V\n+   #62 = Utf8               (Ljava/lang/String;)V\n+   #63 = Methodref          #64.#65       // org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n+   #64 = Class              #66           // org/apache/bcel/generic/ObjectType\n+   #65 = NameAndType        #67:#12       // getSignature:()Ljava/lang/String;\n+   #66 = Utf8               org/apache/bcel/generic/ObjectType\n+   #67 = Utf8               getSignature\n+   #68 = Methodref          #69.#70       // java/io/DataOutputStream.writeByte:(I)V\n+   #69 = Class              #71           // java/io/DataOutputStream\n+   #70 = NameAndType        #72:#73       // writeByte:(I)V\n+   #71 = Utf8               java/io/DataOutputStream\n+   #72 = Utf8               writeByte\n+   #73 = Utf8               (I)V\n+   #74 = Methodref          #69.#75       // java/io/DataOutputStream.writeShort:(I)V\n+   #75 = NameAndType        #76:#73       // writeShort:(I)V\n+   #76 = Utf8               writeShort\n+   #77 = Fieldref           #78.#79       // java/lang/System.err:Ljava/io/PrintStream;\n+   #78 = Class              #80           // java/lang/System\n+   #79 = NameAndType        #81:#82       // err:Ljava/io/PrintStream;\n+   #80 = Utf8               java/lang/System\n+   #81 = Utf8               err\n+   #82 = Utf8               Ljava/io/PrintStream;\n+   #83 = String             #84           // Duplicating value:\n+   #84 = Utf8               Duplicating value:\n+   #85 = Methodref          #20.#9        // org/apache/bcel/generic/EnumElementValueGen.getEnumTypeString:()Ljava/lang/String;\n+   #86 = String             #87           // :\n+   #87 = Utf8               :\n+   #88 = Methodref          #20.#26       // org/apache/bcel/generic/EnumElementValueGen.getEnumValueString:()Ljava/lang/String;\n+   #89 = Methodref          #90.#91       // java/io/PrintStream.println:(Ljava/lang/String;)V\n+   #90 = Class              #92           // java/io/PrintStream\n+   #91 = NameAndType        #93:#62       // println:(Ljava/lang/String;)V\n+   #92 = Utf8               java/io/PrintStream\n+   #93 = Utf8               println\n+   #94 = Methodref          #20.#95       // org/apache/bcel/generic/EnumElementValueGen.getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #95 = NameAndType        #96:#97       // getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #96 = Utf8               getConstantPool\n+   #97 = Utf8               ()Lorg/apache/bcel/generic/ConstantPoolGen;\n+   #98 = Methodref          #14.#99       // org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+   #99 = NameAndType        #96:#100      // getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+  #100 = Utf8               ()Lorg/apache/bcel/classfile/ConstantPool;\n+  #101 = Methodref          #8.#102       // org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+  #102 = NameAndType        #5:#103       // \"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+  #103 = Utf8               (IIILorg/apache/bcel/classfile/ConstantPool;)V\n+  #104 = Methodref          #14.#105      // org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #105 = NameAndType        #106:#107     // getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+  #106 = Utf8               getConstant\n+  #107 = Utf8               (I)Lorg/apache/bcel/classfile/Constant;\n+  #108 = Class              #109          // org/apache/bcel/classfile/ConstantUtf8\n+  #109 = Utf8               org/apache/bcel/classfile/ConstantUtf8\n+  #110 = Methodref          #108.#111     // org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+  #111 = NameAndType        #112:#12      // getBytes:()Ljava/lang/String;\n+  #112 = Utf8               getBytes\n+  #113 = Utf8               (Lorg/apache/bcel/classfile/EnumElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n+  #114 = Utf8               Code\n+  #115 = Utf8               LineNumberTable\n+  #116 = Utf8               StackMapTable\n+  #117 = Utf8               (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #118 = Utf8               (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n+  #119 = Utf8               dump\n+  #120 = Utf8               (Ljava/io/DataOutputStream;)V\n+  #121 = Utf8               Exceptions\n+  #122 = Class              #123          // java/io/IOException\n+  #123 = Utf8               java/io/IOException\n+  #124 = Utf8               getElementValue\n+  #125 = Utf8               ()Lorg/apache/bcel/classfile/ElementValue;\n+  #126 = Utf8               stringifyValue\n+  #127 = Utf8               SourceFile\n+  #128 = Utf8               EnumElementValueGen.java\n {\n   private final int typeIdx;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final int valueIdx;\n     descriptor: I\n@@ -149,38 +149,38 @@\n     descriptor: (Lorg/apache/bcel/classfile/EnumElementValue;Lorg/apache/bcel/generic/ConstantPoolGen;Z)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: bipush        101\n          3: aload_2\n-         4: invokespecial #2                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+         4: invokespecial #3                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          7: iload_3\n          8: ifeq          38\n         11: aload_0\n         12: aload_2\n         13: aload_1\n-        14: invokevirtual #3                  // Method org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n-        17: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-        20: putfield      #5                  // Field typeIdx:I\n+        14: invokevirtual #7                  // Method org/apache/bcel/classfile/EnumElementValue.getEnumTypeString:()Ljava/lang/String;\n+        17: invokevirtual #13                 // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+        20: putfield      #19                 // Field typeIdx:I\n         23: aload_0\n         24: aload_2\n         25: aload_1\n-        26: invokevirtual #6                  // Method org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n-        29: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-        32: putfield      #7                  // Field valueIdx:I\n+        26: invokevirtual #25                 // Method org/apache/bcel/classfile/EnumElementValue.getEnumValueString:()Ljava/lang/String;\n+        29: invokevirtual #13                 // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+        32: putfield      #28                 // Field valueIdx:I\n         35: goto          54\n         38: aload_0\n         39: aload_1\n-        40: invokevirtual #8                  // Method org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n-        43: putfield      #5                  // Field typeIdx:I\n+        40: invokevirtual #31                 // Method org/apache/bcel/classfile/EnumElementValue.getTypeIndex:()I\n+        43: putfield      #19                 // Field typeIdx:I\n         46: aload_0\n         47: aload_1\n-        48: invokevirtual #9                  // Method org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n-        51: putfield      #7                  // Field valueIdx:I\n+        48: invokevirtual #35                 // Method org/apache/bcel/classfile/EnumElementValue.getValueIndex:()I\n+        51: putfield      #28                 // Field valueIdx:I\n         54: return\n       LineNumberTable:\n         line 37: 0\n         line 38: 7\n         line 39: 11\n         line 41: 23\n         line 44: 38\n@@ -197,38 +197,38 @@\n     descriptor: (IILorg/apache/bcel/generic/ConstantPoolGen;)V\n     flags: (0x0004) ACC_PROTECTED\n     Code:\n       stack=4, locals=4, args_size=4\n          0: aload_0\n          1: bipush        101\n          3: aload_3\n-         4: invokespecial #2                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+         4: invokespecial #3                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          7: aload_0\n-         8: invokespecial #10                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         8: invokespecial #38                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n         11: bipush        101\n         13: if_icmpeq     46\n-        16: new           #11                 // class java/lang/IllegalArgumentException\n+        16: new           #41                 // class java/lang/IllegalArgumentException\n         19: dup\n-        20: new           #12                 // class java/lang/StringBuilder\n+        20: new           #43                 // class java/lang/StringBuilder\n         23: dup\n-        24: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        27: ldc           #14                 // String Only element values of type enum can be built with this ctor - type specified:\n-        29: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        24: invokespecial #45                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        27: ldc           #48                 // String Only element values of type enum can be built with this ctor - type specified:\n+        29: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         32: aload_0\n-        33: invokespecial #10                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-        36: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n-        39: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        42: invokespecial #18                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        33: invokespecial #38                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+        36: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;\n+        39: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        42: invokespecial #60                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         45: athrow\n         46: aload_0\n         47: iload_1\n-        48: putfield      #5                  // Field typeIdx:I\n+        48: putfield      #19                 // Field typeIdx:I\n         51: aload_0\n         52: iload_2\n-        53: putfield      #7                  // Field valueIdx:I\n+        53: putfield      #28                 // Field valueIdx:I\n         56: return\n       LineNumberTable:\n         line 54: 0\n         line 55: 7\n         line 56: 16\n         line 58: 46\n         line 59: 51\n@@ -243,164 +243,164 @@\n     descriptor: (Lorg/apache/bcel/generic/ObjectType;Ljava/lang/String;Lorg/apache/bcel/generic/ConstantPoolGen;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=3, locals=4, args_size=4\n          0: aload_0\n          1: bipush        101\n          3: aload_3\n-         4: invokespecial #2                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n+         4: invokespecial #3                  // Method org/apache/bcel/generic/ElementValueGen.\"<init>\":(ILorg/apache/bcel/generic/ConstantPoolGen;)V\n          7: aload_0\n          8: aload_3\n          9: aload_1\n-        10: invokevirtual #19                 // Method org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n-        13: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-        16: putfield      #5                  // Field typeIdx:I\n+        10: invokevirtual #63                 // Method org/apache/bcel/generic/ObjectType.getSignature:()Ljava/lang/String;\n+        13: invokevirtual #13                 // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+        16: putfield      #19                 // Field typeIdx:I\n         19: aload_0\n         20: aload_3\n         21: aload_2\n-        22: invokevirtual #4                  // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n-        25: putfield      #7                  // Field valueIdx:I\n+        22: invokevirtual #13                 // Method org/apache/bcel/generic/ConstantPoolGen.addUtf8:(Ljava/lang/String;)I\n+        25: putfield      #28                 // Field valueIdx:I\n         28: return\n       LineNumberTable:\n         line 63: 0\n         line 64: 7\n         line 65: 19\n         line 66: 28\n \n   public void dump(java.io.DataOutputStream) throws java.io.IOException;\n     descriptor: (Ljava/io/DataOutputStream;)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=2\n          0: aload_1\n          1: aload_0\n-         2: invokespecial #10                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n-         5: invokevirtual #20                 // Method java/io/DataOutputStream.writeByte:(I)V\n+         2: invokespecial #38                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+         5: invokevirtual #68                 // Method java/io/DataOutputStream.writeByte:(I)V\n          8: aload_1\n          9: aload_0\n-        10: getfield      #5                  // Field typeIdx:I\n-        13: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        10: getfield      #19                 // Field typeIdx:I\n+        13: invokevirtual #74                 // Method java/io/DataOutputStream.writeShort:(I)V\n         16: aload_1\n         17: aload_0\n-        18: getfield      #7                  // Field valueIdx:I\n-        21: invokevirtual #21                 // Method java/io/DataOutputStream.writeShort:(I)V\n+        18: getfield      #28                 // Field valueIdx:I\n+        21: invokevirtual #74                 // Method java/io/DataOutputStream.writeShort:(I)V\n         24: return\n       LineNumberTable:\n         line 70: 0\n         line 71: 8\n         line 72: 16\n         line 73: 24\n     Exceptions:\n       throws java.io.IOException\n \n   public org.apache.bcel.classfile.ElementValue getElementValue();\n     descriptor: ()Lorg/apache/bcel/classfile/ElementValue;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=6, locals=1, args_size=1\n-         0: getstatic     #22                 // Field java/lang/System.err:Ljava/io/PrintStream;\n-         3: new           #12                 // class java/lang/StringBuilder\n+         0: getstatic     #77                 // Field java/lang/System.err:Ljava/io/PrintStream;\n+         3: new           #43                 // class java/lang/StringBuilder\n          6: dup\n-         7: invokespecial #13                 // Method java/lang/StringBuilder.\"<init>\":()V\n-        10: ldc           #23                 // String Duplicating value:\n-        12: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+         7: invokespecial #45                 // Method java/lang/StringBuilder.\"<init>\":()V\n+        10: ldc           #83                 // String Duplicating value:\n+        12: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         15: aload_0\n-        16: invokevirtual #24                 // Method getEnumTypeString:()Ljava/lang/String;\n-        19: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        22: ldc           #25                 // String :\n-        24: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        16: invokevirtual #85                 // Method getEnumTypeString:()Ljava/lang/String;\n+        19: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        22: ldc           #86                 // String :\n+        24: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n         27: aload_0\n-        28: invokevirtual #26                 // Method getEnumValueString:()Ljava/lang/String;\n-        31: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n-        34: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n-        37: invokevirtual #27                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n-        40: new           #28                 // class org/apache/bcel/classfile/EnumElementValue\n+        28: invokevirtual #88                 // Method getEnumValueString:()Ljava/lang/String;\n+        31: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;\n+        34: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;\n+        37: invokevirtual #89                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V\n+        40: new           #8                  // class org/apache/bcel/classfile/EnumElementValue\n         43: dup\n         44: aload_0\n-        45: invokespecial #10                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n+        45: invokespecial #38                 // Method org/apache/bcel/generic/ElementValueGen.getElementValueType:()I\n         48: aload_0\n-        49: getfield      #5                  // Field typeIdx:I\n+        49: getfield      #19                 // Field typeIdx:I\n         52: aload_0\n-        53: getfield      #7                  // Field valueIdx:I\n+        53: getfield      #28                 // Field valueIdx:I\n         56: aload_0\n-        57: invokevirtual #29                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n-        60: invokevirtual #30                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n-        63: invokespecial #31                 // Method org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n+        57: invokevirtual #94                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+        60: invokevirtual #98                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstantPool:()Lorg/apache/bcel/classfile/ConstantPool;\n+        63: invokespecial #101                // Method org/apache/bcel/classfile/EnumElementValue.\"<init>\":(IIILorg/apache/bcel/classfile/ConstantPool;)V\n         66: areturn\n       LineNumberTable:\n         line 80: 0\n         line 81: 40\n \n   public java.lang.String getEnumTypeString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         1: invokevirtual #94                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n          4: aload_0\n-         5: getfield      #5                  // Field typeIdx:I\n-         8: invokevirtual #32                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        11: checkcast     #33                 // class org/apache/bcel/classfile/ConstantUtf8\n-        14: invokevirtual #34                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+         5: getfield      #19                 // Field typeIdx:I\n+         8: invokevirtual #104                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        11: checkcast     #108                // class org/apache/bcel/classfile/ConstantUtf8\n+        14: invokevirtual #110                // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n         17: areturn\n       LineNumberTable:\n         line 92: 0\n \n   public java.lang.String getEnumValueString();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         1: invokevirtual #94                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n          4: aload_0\n-         5: getfield      #7                  // Field valueIdx:I\n-         8: invokevirtual #32                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        11: checkcast     #33                 // class org/apache/bcel/classfile/ConstantUtf8\n-        14: invokevirtual #34                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+         5: getfield      #28                 // Field valueIdx:I\n+         8: invokevirtual #104                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        11: checkcast     #108                // class org/apache/bcel/classfile/ConstantUtf8\n+        14: invokevirtual #110                // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n         17: areturn\n       LineNumberTable:\n         line 97: 0\n \n   public int getTypeIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #5                  // Field typeIdx:I\n+         1: getfield      #19                 // Field typeIdx:I\n          4: ireturn\n       LineNumberTable:\n         line 105: 0\n \n   public int getValueIndex();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #7                  // Field valueIdx:I\n+         1: getfield      #28                 // Field valueIdx:I\n          4: ireturn\n       LineNumberTable:\n         line 109: 0\n \n   public java.lang.String stringifyValue();\n     descriptor: ()Ljava/lang/String;\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: invokevirtual #29                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n+         1: invokevirtual #94                 // Method getConstantPool:()Lorg/apache/bcel/generic/ConstantPoolGen;\n          4: aload_0\n-         5: getfield      #7                  // Field valueIdx:I\n-         8: invokevirtual #32                 // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n-        11: checkcast     #33                 // class org/apache/bcel/classfile/ConstantUtf8\n+         5: getfield      #28                 // Field valueIdx:I\n+         8: invokevirtual #104                // Method org/apache/bcel/generic/ConstantPoolGen.getConstant:(I)Lorg/apache/bcel/classfile/Constant;\n+        11: checkcast     #108                // class org/apache/bcel/classfile/ConstantUtf8\n         14: astore_1\n         15: aload_1\n-        16: invokevirtual #34                 // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n+        16: invokevirtual #110                // Method org/apache/bcel/classfile/ConstantUtf8.getBytes:()Ljava/lang/String;\n         19: areturn\n       LineNumberTable:\n         line 114: 0\n         line 115: 15\n }\n SourceFile: \"EnumElementValueGen.java\"\n"}]}
