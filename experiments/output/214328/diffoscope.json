{"diffoscope-json-version": 1, "source1": "first/Property.class", "source2": "second/Property.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -4,31 +4,31 @@\n import java.util.Iterator;\n import java.util.Enumeration;\n import java.util.Properties;\n \n public class Property\n {\n     public static JSONObject toJSONObject(final Properties properties) throws JSONException {\n-        final JSONObject jo = new JSONObject();\n+        final JSONObject jsonObject = new JSONObject();\n         if (properties != null && !properties.isEmpty()) {\n-            final Enumeration<?> enumProperties = properties.propertyNames();\n-            while (enumProperties.hasMoreElements()) {\n-                final String name = (String)enumProperties.nextElement();\n-                jo.put(name, (Object)properties.getProperty(name));\n+            final Enumeration<?> propertyNames = properties.propertyNames();\n+            while (propertyNames.hasMoreElements()) {\n+                final String key = (String)propertyNames.nextElement();\n+                jsonObject.put(key, (Object)properties.getProperty(key));\n             }\n         }\n-        return jo;\n+        return jsonObject;\n     }\n     \n-    public static Properties toProperties(final JSONObject jo) throws JSONException {\n+    public static Properties toProperties(final JSONObject jsonObject) throws JSONException {\n         final Properties properties = new Properties();\n-        if (jo != null) {\n-            for (final String key : jo.keySet()) {\n-                final Object value = jo.opt(key);\n-                if (!JSONObject.NULL.equals(value)) {\n-                    properties.put(key, value.toString());\n+        if (jsonObject != null) {\n+            for (final String key : jsonObject.keySet()) {\n+                final Object opt = jsonObject.opt(key);\n+                if (!JSONObject.NULL.equals(opt)) {\n+                    properties.put(key, opt.toString());\n                 }\n             }\n         }\n         return properties;\n     }\n }\n"}]}
