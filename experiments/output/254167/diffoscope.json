{"diffoscope-json-version": 1, "source1": "first/PrecedingIterator.class", "source2": "second/PrecedingIterator.class", "unified_diff": null, "details": [{"source1": "procyon -ec {}", "source2": "procyon -ec {}", "unified_diff": "@@ -7,38 +7,38 @@\n \n public class PrecedingIterator implements AxisIterator\n {\n     private final AxisIterator ancestorEnum;\n     private AxisIterator previousSiblingEnum;\n     private AxisIterator descendantEnum;\n     \n-    public PrecedingIterator(final NodeInfo start) {\n-        this.ancestorEnum = start.iterateAxis(0);\n-        this.previousSiblingEnum = start.iterateAxis(11);\n+    public PrecedingIterator(final NodeInfo nodeInfo) {\n+        this.ancestorEnum = nodeInfo.iterateAxis(0);\n+        this.previousSiblingEnum = nodeInfo.iterateAxis(11);\n     }\n     \n     public NodeInfo next() {\n-        NodeInfo result = null;\n-        while (result == null) {\n+        NodeInfo nodeInfo = null;\n+        while (nodeInfo == null) {\n             if (this.descendantEnum != null) {\n-                result = this.descendantEnum.next();\n+                nodeInfo = this.descendantEnum.next();\n             }\n-            if (result == null && this.previousSiblingEnum != null) {\n-                result = this.previousSiblingEnum.next();\n-                if (result == null) {\n+            if (nodeInfo == null && this.previousSiblingEnum != null) {\n+                nodeInfo = this.previousSiblingEnum.next();\n+                if (nodeInfo == null) {\n                     this.previousSiblingEnum = null;\n                 }\n                 else {\n-                    this.descendantEnum = (AxisIterator)new ReverseDescendantIterator(result);\n+                    this.descendantEnum = (AxisIterator)new ReverseDescendantIterator(nodeInfo);\n                 }\n             }\n-            if (result == null) {\n-                result = this.ancestorEnum.next();\n-                if (result == null) {\n+            if (nodeInfo == null) {\n+                nodeInfo = this.ancestorEnum.next();\n+                if (nodeInfo == null) {\n                     break;\n                 }\n-                this.previousSiblingEnum = result.iterateAxis(11);\n+                this.previousSiblingEnum = nodeInfo.iterateAxis(11);\n             }\n         }\n-        return result;\n+        return nodeInfo;\n     }\n }\n"}]}
