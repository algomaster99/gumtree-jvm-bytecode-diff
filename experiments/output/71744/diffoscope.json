{"diffoscope-json-version": 1, "source1": "first/AbstractLZ77CompressorInputStream.class", "source2": "second/AbstractLZ77CompressorInputStream.class", "unified_diff": null, "details": [{"source1": "javap -verbose -constants -s -l -private {}", "source2": "javap -verbose -constants -s -l -private {}", "unified_diff": "@@ -1,220 +1,221 @@\n-  SHA-256 checksum 96bcc477c57793eff297bfd4d50911a105b9a5be3de9f6a58b5c0fd7cf597f60\n+  SHA-256 checksum 600e254d9437f5ee12577deffd7e8e2067ff0d730730f09818fc2b11c3638651\n   Compiled from \"AbstractLZ77CompressorInputStream.java\"\n public abstract class org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream extends org.apache.commons.compress.compressors.CompressorInputStream implements org.apache.commons.compress.utils.InputStreamStatistics\n   minor version: 0\n   major version: 53\n   flags: (0x0421) ACC_PUBLIC, ACC_SUPER, ACC_ABSTRACT\n-  this_class: #8                          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-  super_class: #2                         // org/apache/commons/compress/compressors/CompressorInputStream\n+  this_class: #1                          // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+  super_class: #3                         // org/apache/commons/compress/compressors/CompressorInputStream\n   interfaces: 1, fields: 10, methods: 17, attributes: 3\n Constant pool:\n-    #1 = Methodref          #2.#3         // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n-    #2 = Class              #4            // org/apache/commons/compress/compressors/CompressorInputStream\n-    #3 = NameAndType        #5:#6         // \"<init>\":()V\n+    #1 = Class              #2            // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+    #2 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n+    #3 = Class              #4            // org/apache/commons/compress/compressors/CompressorInputStream\n     #4 = Utf8               org/apache/commons/compress/compressors/CompressorInputStream\n-    #5 = Utf8               <init>\n-    #6 = Utf8               ()V\n-    #7 = Fieldref           #8.#9         // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.oneByte:[B\n-    #8 = Class              #10           // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-    #9 = NameAndType        #11:#12       // oneByte:[B\n-   #10 = Utf8               org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream\n-   #11 = Utf8               oneByte\n-   #12 = Utf8               [B\n-   #13 = InvokeDynamic      #0:#14        // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #14 = NameAndType        #15:#16       // getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #15 = Utf8               getAsByte\n-   #16 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #17 = Fieldref           #8.#18        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #18 = NameAndType        #19:#20       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #19 = Utf8               supplier\n-   #20 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-   #21 = Class              #22           // org/apache/commons/compress/utils/CountingInputStream\n-   #22 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n-   #23 = Methodref          #21.#24       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-   #24 = NameAndType        #5:#25        // \"<init>\":(Ljava/io/InputStream;)V\n-   #25 = Utf8               (Ljava/io/InputStream;)V\n-   #26 = Fieldref           #8.#27        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #27 = NameAndType        #28:#29       // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #28 = Utf8               in\n-   #29 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n-   #30 = Class              #31           // java/lang/IllegalArgumentException\n-   #31 = Utf8               java/lang/IllegalArgumentException\n-   #32 = String             #33           // windowSize must be bigger than 0\n-   #33 = Utf8               windowSize must be bigger than 0\n-   #34 = Methodref          #30.#35       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n-   #35 = NameAndType        #5:#36        // \"<init>\":(Ljava/lang/String;)V\n-   #36 = Utf8               (Ljava/lang/String;)V\n-   #37 = Fieldref           #8.#38        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.windowSize:I\n-   #38 = NameAndType        #39:#40       // windowSize:I\n-   #39 = Utf8               windowSize\n-   #40 = Utf8               I\n-   #41 = Fieldref           #8.#42        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.buf:[B\n-   #42 = NameAndType        #43:#12       // buf:[B\n-   #43 = Utf8               buf\n-   #44 = Fieldref           #8.#45        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readIndex:I\n-   #45 = NameAndType        #46:#40       // readIndex:I\n-   #46 = Utf8               readIndex\n-   #47 = Fieldref           #8.#48        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.writeIndex:I\n-   #48 = NameAndType        #49:#40       // writeIndex:I\n-   #49 = Utf8               writeIndex\n-   #50 = Fieldref           #8.#51        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.bytesRemaining:J\n-   #51 = NameAndType        #52:#53       // bytesRemaining:J\n-   #52 = Utf8               bytesRemaining\n-   #53 = Utf8               J\n-   #54 = Methodref          #8.#55        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.read:([BII)I\n-   #55 = NameAndType        #56:#57       // read:([BII)I\n-   #56 = Utf8               read\n-   #57 = Utf8               ([BII)I\n-   #58 = Methodref          #21.#59       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n-   #59 = NameAndType        #60:#6        // close:()V\n-   #60 = Utf8               close\n-   #61 = Fieldref           #8.#62        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.size:I\n-   #62 = NameAndType        #63:#40       // size:I\n-   #63 = Utf8               size\n-   #64 = Class              #65           // java/lang/IllegalStateException\n-   #65 = Utf8               java/lang/IllegalStateException\n-   #66 = String             #67           // The stream has already been read from, can\\'t prefill anymore\n-   #67 = Utf8               The stream has already been read from, can\\'t prefill anymore\n-   #68 = Methodref          #64.#35       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n-   #69 = Methodref          #70.#71       // java/lang/Math.min:(II)I\n-   #70 = Class              #72           // java/lang/Math\n-   #71 = NameAndType        #73:#74       // min:(II)I\n-   #72 = Utf8               java/lang/Math\n-   #73 = Utf8               min\n-   #74 = Utf8               (II)I\n-   #75 = Methodref          #76.#77       // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #76 = Class              #78           // java/lang/System\n-   #77 = NameAndType        #79:#80       // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #78 = Utf8               java/lang/System\n-   #79 = Utf8               arraycopy\n-   #80 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n-   #81 = Methodref          #21.#82       // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n-   #82 = NameAndType        #83:#84       // getBytesRead:()J\n-   #83 = Utf8               getBytesRead\n-   #84 = Utf8               ()J\n-   #85 = String             #86           // length must not be negative\n-   #86 = Utf8               length must not be negative\n-   #87 = Methodref          #8.#88        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.available:()I\n-   #88 = NameAndType        #89:#90       // available:()I\n-   #89 = Utf8               available\n-   #90 = Utf8               ()I\n-   #91 = Methodref          #8.#92        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToReadLiteral:(I)V\n-   #92 = NameAndType        #93:#94       // tryToReadLiteral:(I)V\n-   #93 = Utf8               tryToReadLiteral\n-   #94 = Utf8               (I)V\n-   #95 = Methodref          #8.#96        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readFromBuffer:([BII)I\n-   #96 = NameAndType        #97:#57       // readFromBuffer:([BII)I\n-   #97 = Utf8               readFromBuffer\n-   #98 = Methodref          #70.#99       // java/lang/Math.min:(JJ)J\n-   #99 = NameAndType        #73:#100      // min:(JJ)J\n-  #100 = Utf8               (JJ)J\n-  #101 = Methodref          #102.#103     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n-  #102 = Class              #104          // org/apache/commons/compress/utils/IOUtils\n-  #103 = NameAndType        #105:#106     // readFully:(Ljava/io/InputStream;[BII)I\n-  #104 = Utf8               org/apache/commons/compress/utils/IOUtils\n-  #105 = Utf8               readFully\n-  #106 = Utf8               (Ljava/io/InputStream;[BII)I\n-  #107 = Methodref          #8.#108       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.count:(I)V\n-  #108 = NameAndType        #109:#94      // count:(I)V\n-  #109 = Utf8               count\n-  #110 = Class              #111          // java/io/IOException\n-  #111 = Utf8               java/io/IOException\n-  #112 = String             #113          // Premature end of stream reading literal\n-  #113 = Utf8               Premature end of stream reading literal\n-  #114 = Methodref          #110.#35      // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n-  #115 = Methodref          #8.#116       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.slideBuffer:()V\n-  #116 = NameAndType        #117:#6       // slideBuffer:()V\n-  #117 = Utf8               slideBuffer\n-  #118 = String             #119          // offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n-  #119 = Utf8               offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n-  #120 = Fieldref           #8.#121       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.backReferenceOffset:I\n-  #121 = NameAndType        #122:#40      // backReferenceOffset:I\n-  #122 = Utf8               backReferenceOffset\n-  #123 = Methodref          #8.#124       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToCopy:(I)V\n-  #124 = NameAndType        #125:#94      // tryToCopy:(I)V\n-  #125 = Utf8               tryToCopy\n-  #126 = Methodref          #127.#128     // java/util/Arrays.fill:([BIIB)V\n-  #127 = Class              #129          // java/util/Arrays\n-  #128 = NameAndType        #130:#131     // fill:([BIIB)V\n-  #129 = Utf8               java/util/Arrays\n-  #130 = Utf8               fill\n-  #131 = Utf8               ([BIIB)V\n-  #132 = Methodref          #21.#133      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n-  #133 = NameAndType        #56:#90       // read:()I\n-  #134 = Class              #135          // org/apache/commons/compress/utils/InputStreamStatistics\n-  #135 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n-  #136 = Utf8               (Ljava/io/InputStream;I)V\n-  #137 = Utf8               Code\n-  #138 = Utf8               LineNumberTable\n-  #139 = Utf8               LocalVariableTable\n-  #140 = Utf8               this\n-  #141 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n-  #142 = Utf8               is\n-  #143 = Utf8               Ljava/io/InputStream;\n-  #144 = Utf8               StackMapTable\n-  #145 = Class              #146          // java/io/InputStream\n-  #146 = Utf8               java/io/InputStream\n-  #147 = Utf8               Exceptions\n-  #148 = Utf8               getSize\n-  #149 = Utf8               prefill\n-  #150 = Utf8               ([B)V\n-  #151 = Utf8               data\n-  #152 = Utf8               len\n-  #153 = Utf8               getCompressedCount\n-  #154 = Utf8               startLiteral\n-  #155 = Utf8               (J)V\n-  #156 = Utf8               length\n-  #157 = Utf8               hasMoreDataInBlock\n-  #158 = Utf8               ()Z\n-  #159 = Utf8               readLiteral\n-  #160 = Utf8               b\n-  #161 = Utf8               off\n-  #162 = Utf8               avail\n-  #163 = Utf8               bytesToRead\n-  #164 = Utf8               reallyTryToRead\n-  #165 = Utf8               bytesRead\n-  #166 = Utf8               readable\n-  #167 = Utf8               startBackReference\n-  #168 = Utf8               (IJ)V\n-  #169 = Utf8               offset\n-  #170 = Utf8               readBackReference\n+    #5 = Class              #6            // org/apache/commons/compress/utils/InputStreamStatistics\n+    #6 = Utf8               org/apache/commons/compress/utils/InputStreamStatistics\n+    #7 = Utf8               windowSize\n+    #8 = Utf8               I\n+    #9 = Utf8               buf\n+   #10 = Utf8               [B\n+   #11 = Utf8               writeIndex\n+   #12 = Utf8               readIndex\n+   #13 = Utf8               in\n+   #14 = Utf8               Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #15 = Utf8               bytesRemaining\n+   #16 = Utf8               J\n+   #17 = Utf8               backReferenceOffset\n+   #18 = Utf8               size\n+   #19 = Utf8               oneByte\n+   #20 = Utf8               supplier\n+   #21 = Utf8               Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #22 = Utf8               <init>\n+   #23 = Utf8               (Ljava/io/InputStream;I)V\n+   #24 = Utf8               Exceptions\n+   #25 = Class              #26           // java/io/IOException\n+   #26 = Utf8               java/io/IOException\n+   #27 = Utf8               Code\n+   #28 = Methodref          #3.#29        // org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+   #29 = NameAndType        #22:#30       // \"<init>\":()V\n+   #30 = Utf8               ()V\n+   #31 = Fieldref           #1.#32        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.oneByte:[B\n+   #32 = NameAndType        #19:#10       // oneByte:[B\n+   #33 = InvokeDynamic      #0:#34        // #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #34 = NameAndType        #35:#36       // getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #35 = Utf8               getAsByte\n+   #36 = Utf8               (Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #37 = Fieldref           #1.#38        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #38 = NameAndType        #20:#21       // supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+   #39 = Class              #40           // org/apache/commons/compress/utils/CountingInputStream\n+   #40 = Utf8               org/apache/commons/compress/utils/CountingInputStream\n+   #41 = Methodref          #39.#42       // org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+   #42 = NameAndType        #22:#43       // \"<init>\":(Ljava/io/InputStream;)V\n+   #43 = Utf8               (Ljava/io/InputStream;)V\n+   #44 = Fieldref           #1.#45        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #45 = NameAndType        #13:#14       // in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+   #46 = Class              #47           // java/lang/IllegalArgumentException\n+   #47 = Utf8               java/lang/IllegalArgumentException\n+   #48 = String             #49           // windowSize must be bigger than 0\n+   #49 = Utf8               windowSize must be bigger than 0\n+   #50 = Methodref          #46.#51       // java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+   #51 = NameAndType        #22:#52       // \"<init>\":(Ljava/lang/String;)V\n+   #52 = Utf8               (Ljava/lang/String;)V\n+   #53 = Fieldref           #1.#54        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.windowSize:I\n+   #54 = NameAndType        #7:#8         // windowSize:I\n+   #55 = Fieldref           #1.#56        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.buf:[B\n+   #56 = NameAndType        #9:#10        // buf:[B\n+   #57 = Fieldref           #1.#58        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readIndex:I\n+   #58 = NameAndType        #12:#8        // readIndex:I\n+   #59 = Fieldref           #1.#60        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.writeIndex:I\n+   #60 = NameAndType        #11:#8        // writeIndex:I\n+   #61 = Fieldref           #1.#62        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.bytesRemaining:J\n+   #62 = NameAndType        #15:#16       // bytesRemaining:J\n+   #63 = Utf8               LineNumberTable\n+   #64 = Utf8               LocalVariableTable\n+   #65 = Utf8               this\n+   #66 = Utf8               Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n+   #67 = Utf8               is\n+   #68 = Utf8               Ljava/io/InputStream;\n+   #69 = Utf8               StackMapTable\n+   #70 = Class              #71           // java/io/InputStream\n+   #71 = Utf8               java/io/InputStream\n+   #72 = Utf8               read\n+   #73 = Utf8               ()I\n+   #74 = Methodref          #1.#75        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.read:([BII)I\n+   #75 = NameAndType        #72:#76       // read:([BII)I\n+   #76 = Utf8               ([BII)I\n+   #77 = Utf8               close\n+   #78 = Methodref          #39.#79       // org/apache/commons/compress/utils/CountingInputStream.close:()V\n+   #79 = NameAndType        #77:#30       // close:()V\n+   #80 = Utf8               available\n+   #81 = Utf8               getSize\n+   #82 = Fieldref           #1.#83        // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.size:I\n+   #83 = NameAndType        #18:#8        // size:I\n+   #84 = Utf8               prefill\n+   #85 = Utf8               ([B)V\n+   #86 = Class              #87           // java/lang/IllegalStateException\n+   #87 = Utf8               java/lang/IllegalStateException\n+   #88 = String             #89           // The stream has already been read from, can\\'t prefill anymore\n+   #89 = Utf8               The stream has already been read from, can\\'t prefill anymore\n+   #90 = Methodref          #86.#51       // java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+   #91 = Methodref          #92.#94       // java/lang/Math.min:(II)I\n+   #92 = Class              #93           // java/lang/Math\n+   #93 = Utf8               java/lang/Math\n+   #94 = NameAndType        #95:#96       // min:(II)I\n+   #95 = Utf8               min\n+   #96 = Utf8               (II)I\n+   #97 = Methodref          #98.#100      // java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+   #98 = Class              #99           // java/lang/System\n+   #99 = Utf8               java/lang/System\n+  #100 = NameAndType        #101:#102     // arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #101 = Utf8               arraycopy\n+  #102 = Utf8               (Ljava/lang/Object;ILjava/lang/Object;II)V\n+  #103 = Utf8               data\n+  #104 = Utf8               len\n+  #105 = Utf8               getCompressedCount\n+  #106 = Utf8               ()J\n+  #107 = Methodref          #39.#108      // org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+  #108 = NameAndType        #109:#106     // getBytesRead:()J\n+  #109 = Utf8               getBytesRead\n+  #110 = Utf8               startLiteral\n+  #111 = Utf8               (J)V\n+  #112 = String             #113          // length must not be negative\n+  #113 = Utf8               length must not be negative\n+  #114 = Utf8               length\n+  #115 = Utf8               hasMoreDataInBlock\n+  #116 = Utf8               ()Z\n+  #117 = Utf8               readLiteral\n+  #118 = Methodref          #1.#119       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.available:()I\n+  #119 = NameAndType        #80:#73       // available:()I\n+  #120 = Methodref          #1.#121       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToReadLiteral:(I)V\n+  #121 = NameAndType        #122:#123     // tryToReadLiteral:(I)V\n+  #122 = Utf8               tryToReadLiteral\n+  #123 = Utf8               (I)V\n+  #124 = Methodref          #1.#125       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readFromBuffer:([BII)I\n+  #125 = NameAndType        #126:#76      // readFromBuffer:([BII)I\n+  #126 = Utf8               readFromBuffer\n+  #127 = Utf8               b\n+  #128 = Utf8               off\n+  #129 = Utf8               avail\n+  #130 = Methodref          #92.#131      // java/lang/Math.min:(JJ)J\n+  #131 = NameAndType        #95:#132      // min:(JJ)J\n+  #132 = Utf8               (JJ)J\n+  #133 = Methodref          #134.#136     // org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+  #134 = Class              #135          // org/apache/commons/compress/utils/IOUtils\n+  #135 = Utf8               org/apache/commons/compress/utils/IOUtils\n+  #136 = NameAndType        #137:#138     // readFully:(Ljava/io/InputStream;[BII)I\n+  #137 = Utf8               readFully\n+  #138 = Utf8               (Ljava/io/InputStream;[BII)I\n+  #139 = Methodref          #1.#140       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.count:(I)V\n+  #140 = NameAndType        #141:#123     // count:(I)V\n+  #141 = Utf8               count\n+  #142 = String             #143          // Premature end of stream reading literal\n+  #143 = Utf8               Premature end of stream reading literal\n+  #144 = Methodref          #25.#51       // java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+  #145 = Utf8               bytesToRead\n+  #146 = Utf8               reallyTryToRead\n+  #147 = Utf8               bytesRead\n+  #148 = Methodref          #1.#149       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.slideBuffer:()V\n+  #149 = NameAndType        #150:#30      // slideBuffer:()V\n+  #150 = Utf8               slideBuffer\n+  #151 = Utf8               readable\n+  #152 = Utf8               startBackReference\n+  #153 = Utf8               (IJ)V\n+  #154 = String             #155          // offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n+  #155 = Utf8               offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n+  #156 = Fieldref           #1.#157       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.backReferenceOffset:I\n+  #157 = NameAndType        #17:#8        // backReferenceOffset:I\n+  #158 = Utf8               offset\n+  #159 = Utf8               readBackReference\n+  #160 = Methodref          #1.#161       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.tryToCopy:(I)V\n+  #161 = NameAndType        #162:#123     // tryToCopy:(I)V\n+  #162 = Utf8               tryToCopy\n+  #163 = Methodref          #164.#166     // java/util/Arrays.fill:([BIIB)V\n+  #164 = Class              #165          // java/util/Arrays\n+  #165 = Utf8               java/util/Arrays\n+  #166 = NameAndType        #167:#168     // fill:([BIIB)V\n+  #167 = Utf8               fill\n+  #168 = Utf8               ([BIIB)V\n+  #169 = Utf8               bytesToCopy\n+  #170 = Utf8               copy\n   #171 = Utf8               last\n   #172 = Utf8               B\n-  #173 = Utf8               i\n-  #174 = Utf8               fullRots\n+  #173 = Utf8               fullRots\n+  #174 = Utf8               i\n   #175 = Utf8               pad\n-  #176 = Utf8               bytesToCopy\n-  #177 = Utf8               copy\n-  #178 = Utf8               readOneByte\n+  #176 = Utf8               readOneByte\n+  #177 = Methodref          #39.#178      // org/apache/commons/compress/utils/CountingInputStream.read:()I\n+  #178 = NameAndType        #72:#73       // read:()I\n   #179 = Utf8               SourceFile\n   #180 = Utf8               AbstractLZ77CompressorInputStream.java\n   #181 = Utf8               BootstrapMethods\n-  #182 = MethodHandle       6:#183        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #183 = Methodref          #184.#185     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #184 = Class              #186          // java/lang/invoke/LambdaMetafactory\n-  #185 = NameAndType        #187:#188     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #186 = Utf8               java/lang/invoke/LambdaMetafactory\n-  #187 = Utf8               metafactory\n-  #188 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n-  #189 = MethodType         #90           //  ()I\n-  #190 = MethodHandle       5:#191        // REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n-  #191 = Methodref          #8.#192       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n-  #192 = NameAndType        #178:#90      // readOneByte:()I\n-  #193 = Utf8               InnerClasses\n-  #194 = Class              #195          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #195 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n-  #196 = Class              #197          // org/apache/commons/compress/utils/ByteUtils\n-  #197 = Utf8               org/apache/commons/compress/utils/ByteUtils\n-  #198 = Utf8               ByteSupplier\n-  #199 = Class              #200          // java/lang/invoke/MethodHandles$Lookup\n-  #200 = Utf8               java/lang/invoke/MethodHandles$Lookup\n-  #201 = Class              #202          // java/lang/invoke/MethodHandles\n-  #202 = Utf8               java/lang/invoke/MethodHandles\n-  #203 = Utf8               Lookup\n+  #182 = Methodref          #183.#185     // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #183 = Class              #184          // java/lang/invoke/LambdaMetafactory\n+  #184 = Utf8               java/lang/invoke/LambdaMetafactory\n+  #185 = NameAndType        #186:#187     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #186 = Utf8               metafactory\n+  #187 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #188 = MethodHandle       6:#182        // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  #189 = MethodType         #73           //  ()I\n+  #190 = Methodref          #1.#191       // org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n+  #191 = NameAndType        #176:#73      // readOneByte:()I\n+  #192 = MethodHandle       5:#190        // REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n+  #193 = MethodType         #73           //  ()I\n+  #194 = Utf8               InnerClasses\n+  #195 = Class              #196          // java/lang/invoke/MethodHandles$Lookup\n+  #196 = Utf8               java/lang/invoke/MethodHandles$Lookup\n+  #197 = Class              #198          // java/lang/invoke/MethodHandles\n+  #198 = Utf8               java/lang/invoke/MethodHandles\n+  #199 = Utf8               Lookup\n+  #200 = Class              #201          // org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #201 = Utf8               org/apache/commons/compress/utils/ByteUtils$ByteSupplier\n+  #202 = Class              #203          // org/apache/commons/compress/utils/ByteUtils\n+  #203 = Utf8               org/apache/commons/compress/utils/ByteUtils\n+  #204 = Utf8               ByteSupplier\n {\n   private final int windowSize;\n     descriptor: I\n     flags: (0x0012) ACC_PRIVATE, ACC_FINAL\n \n   private final byte[] buf;\n     descriptor: [B\n@@ -251,57 +252,59 @@\n   protected final org.apache.commons.compress.utils.ByteUtils$ByteSupplier supplier;\n     descriptor: Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n \n   public org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream(java.io.InputStream, int) throws java.io.IOException;\n     descriptor: (Ljava/io/InputStream;I)V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=3, args_size=3\n          0: aload_0\n-         1: invokespecial #1                  // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n+         1: invokespecial #28                 // Method org/apache/commons/compress/compressors/CompressorInputStream.\"<init>\":()V\n          4: aload_0\n          5: iconst_1\n          6: newarray       byte\n-         8: putfield      #7                  // Field oneByte:[B\n+         8: putfield      #31                 // Field oneByte:[B\n         11: aload_0\n         12: aload_0\n-        13: invokedynamic #13,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n-        18: putfield      #17                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        13: invokedynamic #33,  0             // InvokeDynamic #0:getAsByte:(Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;)Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n+        18: putfield      #37                 // Field supplier:Lorg/apache/commons/compress/utils/ByteUtils$ByteSupplier;\n         21: aload_0\n-        22: new           #21                 // class org/apache/commons/compress/utils/CountingInputStream\n+        22: new           #39                 // class org/apache/commons/compress/utils/CountingInputStream\n         25: dup\n         26: aload_1\n-        27: invokespecial #23                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n-        30: putfield      #26                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        27: invokespecial #41                 // Method org/apache/commons/compress/utils/CountingInputStream.\"<init>\":(Ljava/io/InputStream;)V\n+        30: putfield      #44                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n         33: iload_2\n         34: ifgt          47\n-        37: new           #30                 // class java/lang/IllegalArgumentException\n+        37: new           #46                 // class java/lang/IllegalArgumentException\n         40: dup\n-        41: ldc           #32                 // String windowSize must be bigger than 0\n-        43: invokespecial #34                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        41: ldc           #48                 // String windowSize must be bigger than 0\n+        43: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         46: athrow\n         47: aload_0\n         48: iload_2\n-        49: putfield      #37                 // Field windowSize:I\n+        49: putfield      #53                 // Field windowSize:I\n         52: aload_0\n         53: iconst_3\n         54: iload_2\n         55: imul\n         56: newarray       byte\n-        58: putfield      #41                 // Field buf:[B\n+        58: putfield      #55                 // Field buf:[B\n         61: aload_0\n         62: aload_0\n         63: iconst_0\n         64: dup_x1\n-        65: putfield      #44                 // Field readIndex:I\n-        68: putfield      #47                 // Field writeIndex:I\n+        65: putfield      #57                 // Field readIndex:I\n+        68: putfield      #59                 // Field writeIndex:I\n         71: aload_0\n         72: lconst_0\n-        73: putfield      #50                 // Field bytesRemaining:J\n+        73: putfield      #61                 // Field bytesRemaining:J\n         76: return\n       LineNumberTable:\n         line 130: 0\n         line 112: 4\n         line 117: 11\n         line 131: 21\n         line 132: 33\n@@ -317,141 +320,139 @@\n             0      77     1    is   Ljava/io/InputStream;\n             0      77     2 windowSize   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 255 /* full_frame */\n           offset_delta = 47\n           locals = [ class org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream, class java/io/InputStream, int ]\n           stack = []\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int read() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n          1: aload_0\n-         2: getfield      #7                  // Field oneByte:[B\n+         2: getfield      #31                 // Field oneByte:[B\n          5: iconst_0\n          6: iconst_1\n-         7: invokevirtual #54                 // Method read:([BII)I\n+         7: invokevirtual #74                 // Method read:([BII)I\n         10: iconst_m1\n         11: if_icmpne     18\n         14: iconst_m1\n         15: goto          28\n         18: aload_0\n-        19: getfield      #7                  // Field oneByte:[B\n+        19: getfield      #31                 // Field oneByte:[B\n         22: iconst_0\n         23: baload\n         24: sipush        255\n         27: iand\n         28: ireturn\n       LineNumberTable:\n         line 144: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      29     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n       StackMapTable: number_of_entries = 2\n         frame_type = 18 /* same */\n         frame_type = 73 /* same_locals_1_stack_item */\n           stack = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   public void close() throws java.io.IOException;\n     descriptor: ()V\n     flags: (0x0001) ACC_PUBLIC\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #58                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n+         1: getfield      #44                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #78                 // Method org/apache/commons/compress/utils/CountingInputStream.close:()V\n          7: return\n       LineNumberTable:\n         line 150: 0\n         line 151: 7\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n-    Exceptions:\n-      throws java.io.IOException\n \n   public int available();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #47                 // Field writeIndex:I\n+         1: getfield      #59                 // Field writeIndex:I\n          4: aload_0\n-         5: getfield      #44                 // Field readIndex:I\n+         5: getfield      #57                 // Field readIndex:I\n          8: isub\n          9: ireturn\n       LineNumberTable:\n         line 156: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0      10     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n \n   public int getSize();\n     descriptor: ()I\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=1, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #61                 // Field size:I\n+         1: getfield      #82                 // Field size:I\n          4: ireturn\n       LineNumberTable:\n         line 165: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       5     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n \n   public void prefill(byte[]);\n     descriptor: ([B)V\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=5, locals=3, args_size=2\n          0: aload_0\n-         1: getfield      #47                 // Field writeIndex:I\n+         1: getfield      #59                 // Field writeIndex:I\n          4: ifeq          17\n-         7: new           #64                 // class java/lang/IllegalStateException\n+         7: new           #86                 // class java/lang/IllegalStateException\n         10: dup\n-        11: ldc           #66                 // String The stream has already been read from, can\\'t prefill anymore\n-        13: invokespecial #68                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n+        11: ldc           #88                 // String The stream has already been read from, can\\'t prefill anymore\n+        13: invokespecial #90                 // Method java/lang/IllegalStateException.\"<init>\":(Ljava/lang/String;)V\n         16: athrow\n         17: aload_0\n-        18: getfield      #37                 // Field windowSize:I\n+        18: getfield      #53                 // Field windowSize:I\n         21: aload_1\n         22: arraylength\n-        23: invokestatic  #69                 // Method java/lang/Math.min:(II)I\n+        23: invokestatic  #91                 // Method java/lang/Math.min:(II)I\n         26: istore_2\n         27: aload_1\n         28: aload_1\n         29: arraylength\n         30: iload_2\n         31: isub\n         32: aload_0\n-        33: getfield      #41                 // Field buf:[B\n+        33: getfield      #55                 // Field buf:[B\n         36: iconst_0\n         37: iload_2\n-        38: invokestatic  #75                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        38: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         41: aload_0\n         42: dup\n-        43: getfield      #47                 // Field writeIndex:I\n+        43: getfield      #59                 // Field writeIndex:I\n         46: iload_2\n         47: iadd\n-        48: putfield      #47                 // Field writeIndex:I\n+        48: putfield      #59                 // Field writeIndex:I\n         51: aload_0\n         52: dup\n-        53: getfield      #44                 // Field readIndex:I\n+        53: getfield      #57                 // Field readIndex:I\n         56: iload_2\n         57: iadd\n-        58: putfield      #44                 // Field readIndex:I\n+        58: putfield      #57                 // Field readIndex:I\n         61: return\n       LineNumberTable:\n         line 180: 0\n         line 181: 7\n         line 184: 17\n         line 186: 27\n         line 187: 41\n@@ -467,16 +468,16 @@\n \n   public long getCompressedCount();\n     descriptor: ()J\n     flags: (0x0001) ACC_PUBLIC\n     Code:\n       stack=2, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #81                 // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n+         1: getfield      #44                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #107                // Method org/apache/commons/compress/utils/CountingInputStream.getBytesRead:()J\n          7: lreturn\n       LineNumberTable:\n         line 196: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n             0       8     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n \n@@ -485,22 +486,22 @@\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=3, args_size=2\n          0: lload_1\n          1: lconst_0\n          2: lcmp\n          3: ifge          16\n-         6: new           #30                 // class java/lang/IllegalArgumentException\n+         6: new           #46                 // class java/lang/IllegalArgumentException\n          9: dup\n-        10: ldc           #85                 // String length must not be negative\n-        12: invokespecial #34                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        10: ldc           #112                // String length must not be negative\n+        12: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         15: athrow\n         16: aload_0\n         17: lload_1\n-        18: putfield      #50                 // Field bytesRemaining:J\n+        18: putfield      #61                 // Field bytesRemaining:J\n         21: return\n       LineNumberTable:\n         line 206: 0\n         line 207: 6\n         line 209: 16\n         line 210: 21\n       LocalVariableTable:\n@@ -512,53 +513,53 @@\n \n   protected final boolean hasMoreDataInBlock();\n     descriptor: ()Z\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #50                 // Field bytesRemaining:J\n+         1: getfield      #61                 // Field bytesRemaining:J\n          4: lconst_0\n          5: lcmp\n-         6: ifle          13\n+         6: ifle          11\n          9: iconst_1\n-        10: goto          14\n-        13: iconst_0\n-        14: ireturn\n+        10: ireturn\n+        11: iconst_0\n+        12: ireturn\n       LineNumberTable:\n         line 217: 0\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-            0      15     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n-      StackMapTable: number_of_entries = 2\n-        frame_type = 13 /* same */\n-        frame_type = 64 /* same_locals_1_stack_item */\n-          stack = [ int ]\n+            0      13     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n+      StackMapTable: number_of_entries = 1\n+        frame_type = 11 /* same */\n \n   protected final int readLiteral(byte[], int, int) throws java.io.IOException;\n     descriptor: ([BII)I\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n-         1: invokevirtual #87                 // Method available:()I\n+         1: invokevirtual #118                // Method available:()I\n          4: istore        4\n          6: iload_3\n          7: iload         4\n          9: if_icmple     20\n         12: aload_0\n         13: iload_3\n         14: iload         4\n         16: isub\n-        17: invokespecial #91                 // Method tryToReadLiteral:(I)V\n+        17: invokespecial #120                // Method tryToReadLiteral:(I)V\n         20: aload_0\n         21: aload_1\n         22: iload_2\n         23: iload_3\n-        24: invokespecial #95                 // Method readFromBuffer:([BII)I\n+        24: invokespecial #124                // Method readFromBuffer:([BII)I\n         27: ireturn\n       LineNumberTable:\n         line 236: 0\n         line 237: 6\n         line 238: 12\n         line 240: 20\n       LocalVariableTable:\n@@ -568,79 +569,82 @@\n             0      28     2   off   I\n             0      28     3   len   I\n             6      22     4 avail   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   private void tryToReadLiteral(int) throws java.io.IOException;\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=5, locals=4, args_size=2\n          0: iload_1\n          1: i2l\n          2: aload_0\n-         3: getfield      #50                 // Field bytesRemaining:J\n-         6: invokestatic  #98                 // Method java/lang/Math.min:(JJ)J\n+         3: getfield      #61                 // Field bytesRemaining:J\n+         6: invokestatic  #130                // Method java/lang/Math.min:(JJ)J\n          9: l2i\n         10: aload_0\n-        11: getfield      #41                 // Field buf:[B\n+        11: getfield      #55                 // Field buf:[B\n         14: arraylength\n         15: aload_0\n-        16: getfield      #47                 // Field writeIndex:I\n+        16: getfield      #59                 // Field writeIndex:I\n         19: isub\n-        20: invokestatic  #69                 // Method java/lang/Math.min:(II)I\n+        20: invokestatic  #91                 // Method java/lang/Math.min:(II)I\n         23: istore_2\n         24: iload_2\n         25: ifle          47\n         28: aload_0\n-        29: getfield      #26                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+        29: getfield      #44                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n         32: aload_0\n-        33: getfield      #41                 // Field buf:[B\n+        33: getfield      #55                 // Field buf:[B\n         36: aload_0\n-        37: getfield      #47                 // Field writeIndex:I\n+        37: getfield      #59                 // Field writeIndex:I\n         40: iload_2\n-        41: invokestatic  #101                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n+        41: invokestatic  #133                // Method org/apache/commons/compress/utils/IOUtils.readFully:(Ljava/io/InputStream;[BII)I\n         44: goto          48\n         47: iconst_0\n         48: istore_3\n         49: aload_0\n         50: iload_3\n-        51: invokevirtual #107                // Method count:(I)V\n+        51: invokevirtual #139                // Method count:(I)V\n         54: iload_2\n         55: iload_3\n         56: if_icmpeq     69\n-        59: new           #110                // class java/io/IOException\n+        59: new           #25                 // class java/io/IOException\n         62: dup\n-        63: ldc           #112                // String Premature end of stream reading literal\n-        65: invokespecial #114                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n+        63: ldc           #142                // String Premature end of stream reading literal\n+        65: invokespecial #144                // Method java/io/IOException.\"<init>\":(Ljava/lang/String;)V\n         68: athrow\n         69: aload_0\n         70: dup\n-        71: getfield      #47                 // Field writeIndex:I\n+        71: getfield      #59                 // Field writeIndex:I\n         74: iload_2\n         75: iadd\n-        76: putfield      #47                 // Field writeIndex:I\n+        76: putfield      #59                 // Field writeIndex:I\n         79: aload_0\n         80: dup\n-        81: getfield      #50                 // Field bytesRemaining:J\n+        81: getfield      #61                 // Field bytesRemaining:J\n         84: iload_2\n         85: i2l\n         86: lsub\n-        87: putfield      #50                 // Field bytesRemaining:J\n+        87: putfield      #61                 // Field bytesRemaining:J\n         90: return\n       LineNumberTable:\n         line 245: 0\n+        line 246: 10\n+        line 245: 20\n         line 247: 24\n         line 248: 28\n         line 249: 47\n+        line 247: 48\n         line 250: 49\n         line 251: 54\n         line 252: 59\n         line 254: 69\n         line 255: 79\n         line 256: 90\n       LocalVariableTable:\n@@ -654,58 +658,56 @@\n           offset_delta = 47\n           locals = [ int ]\n         frame_type = 64 /* same_locals_1_stack_item */\n           stack = [ int ]\n         frame_type = 252 /* append */\n           offset_delta = 20\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n \n   private int readFromBuffer(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=4\n          0: iload_3\n          1: aload_0\n-         2: invokevirtual #87                 // Method available:()I\n-         5: invokestatic  #69                 // Method java/lang/Math.min:(II)I\n+         2: invokevirtual #118                // Method available:()I\n+         5: invokestatic  #91                 // Method java/lang/Math.min:(II)I\n          8: istore        4\n         10: iload         4\n         12: ifle          58\n         15: aload_0\n-        16: getfield      #41                 // Field buf:[B\n+        16: getfield      #55                 // Field buf:[B\n         19: aload_0\n-        20: getfield      #44                 // Field readIndex:I\n+        20: getfield      #57                 // Field readIndex:I\n         23: aload_1\n         24: iload_2\n         25: iload         4\n-        27: invokestatic  #75                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        27: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         30: aload_0\n         31: dup\n-        32: getfield      #44                 // Field readIndex:I\n+        32: getfield      #57                 // Field readIndex:I\n         35: iload         4\n         37: iadd\n-        38: putfield      #44                 // Field readIndex:I\n+        38: putfield      #57                 // Field readIndex:I\n         41: aload_0\n-        42: getfield      #44                 // Field readIndex:I\n+        42: getfield      #57                 // Field readIndex:I\n         45: iconst_2\n         46: aload_0\n-        47: getfield      #37                 // Field windowSize:I\n+        47: getfield      #53                 // Field windowSize:I\n         50: imul\n         51: if_icmple     58\n         54: aload_0\n-        55: invokespecial #115                // Method slideBuffer:()V\n+        55: invokespecial #148                // Method slideBuffer:()V\n         58: aload_0\n         59: dup\n-        60: getfield      #61                 // Field size:I\n+        60: getfield      #82                 // Field size:I\n         63: iload         4\n         65: iadd\n-        66: putfield      #61                 // Field size:I\n+        66: putfield      #82                 // Field size:I\n         69: iload         4\n         71: ireturn\n       LineNumberTable:\n         line 259: 0\n         line 260: 10\n         line 261: 15\n         line 262: 30\n@@ -727,39 +729,39 @@\n \n   private void slideBuffer();\n     descriptor: ()V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=6, locals=1, args_size=1\n          0: aload_0\n-         1: getfield      #41                 // Field buf:[B\n+         1: getfield      #55                 // Field buf:[B\n          4: aload_0\n-         5: getfield      #37                 // Field windowSize:I\n+         5: getfield      #53                 // Field windowSize:I\n          8: aload_0\n-         9: getfield      #41                 // Field buf:[B\n+         9: getfield      #55                 // Field buf:[B\n         12: iconst_0\n         13: aload_0\n-        14: getfield      #37                 // Field windowSize:I\n+        14: getfield      #53                 // Field windowSize:I\n         17: iconst_2\n         18: imul\n-        19: invokestatic  #75                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+        19: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n         22: aload_0\n         23: dup\n-        24: getfield      #47                 // Field writeIndex:I\n+        24: getfield      #59                 // Field writeIndex:I\n         27: aload_0\n-        28: getfield      #37                 // Field windowSize:I\n+        28: getfield      #53                 // Field windowSize:I\n         31: isub\n-        32: putfield      #47                 // Field writeIndex:I\n+        32: putfield      #59                 // Field writeIndex:I\n         35: aload_0\n         36: dup\n-        37: getfield      #44                 // Field readIndex:I\n+        37: getfield      #57                 // Field readIndex:I\n         40: aload_0\n-        41: getfield      #37                 // Field windowSize:I\n+        41: getfield      #53                 // Field windowSize:I\n         44: isub\n-        45: putfield      #44                 // Field readIndex:I\n+        45: putfield      #57                 // Field readIndex:I\n         48: return\n       LineNumberTable:\n         line 272: 0\n         line 273: 22\n         line 274: 35\n         line 275: 48\n       LocalVariableTable:\n@@ -771,36 +773,36 @@\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=4, args_size=3\n          0: iload_1\n          1: ifle          12\n          4: iload_1\n          5: aload_0\n-         6: getfield      #47                 // Field writeIndex:I\n+         6: getfield      #59                 // Field writeIndex:I\n          9: if_icmple     22\n-        12: new           #30                 // class java/lang/IllegalArgumentException\n+        12: new           #46                 // class java/lang/IllegalArgumentException\n         15: dup\n-        16: ldc           #118                // String offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n-        18: invokespecial #34                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        16: ldc           #154                // String offset must be bigger than 0 but not bigger than the number of bytes available for back-references\n+        18: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         21: athrow\n         22: lload_2\n         23: lconst_0\n         24: lcmp\n         25: ifge          38\n-        28: new           #30                 // class java/lang/IllegalArgumentException\n+        28: new           #46                 // class java/lang/IllegalArgumentException\n         31: dup\n-        32: ldc           #85                 // String length must not be negative\n-        34: invokespecial #34                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n+        32: ldc           #112                // String length must not be negative\n+        34: invokespecial #50                 // Method java/lang/IllegalArgumentException.\"<init>\":(Ljava/lang/String;)V\n         37: athrow\n         38: aload_0\n         39: iload_1\n-        40: putfield      #120                // Field backReferenceOffset:I\n+        40: putfield      #156                // Field backReferenceOffset:I\n         43: aload_0\n         44: lload_2\n-        45: putfield      #50                 // Field bytesRemaining:J\n+        45: putfield      #61                 // Field bytesRemaining:J\n         48: return\n       LineNumberTable:\n         line 286: 0\n         line 287: 12\n         line 290: 22\n         line 291: 28\n         line 293: 38\n@@ -818,29 +820,29 @@\n \n   protected final int readBackReference(byte[], int, int);\n     descriptor: ([BII)I\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n     Code:\n       stack=4, locals=5, args_size=4\n          0: aload_0\n-         1: invokevirtual #87                 // Method available:()I\n+         1: invokevirtual #118                // Method available:()I\n          4: istore        4\n          6: iload_3\n          7: iload         4\n          9: if_icmple     20\n         12: aload_0\n         13: iload_3\n         14: iload         4\n         16: isub\n-        17: invokespecial #123                // Method tryToCopy:(I)V\n+        17: invokespecial #160                // Method tryToCopy:(I)V\n         20: aload_0\n         21: aload_1\n         22: iload_2\n         23: iload_3\n-        24: invokespecial #95                 // Method readFromBuffer:([BII)I\n+        24: invokespecial #124                // Method readFromBuffer:([BII)I\n         27: ireturn\n       LineNumberTable:\n         line 310: 0\n         line 311: 6\n         line 312: 12\n         line 314: 20\n       LocalVariableTable:\n@@ -859,209 +861,211 @@\n     descriptor: (I)V\n     flags: (0x0002) ACC_PRIVATE\n     Code:\n       stack=5, locals=5, args_size=2\n          0: iload_1\n          1: i2l\n          2: aload_0\n-         3: getfield      #50                 // Field bytesRemaining:J\n-         6: invokestatic  #98                 // Method java/lang/Math.min:(JJ)J\n+         3: getfield      #61                 // Field bytesRemaining:J\n+         6: invokestatic  #130                // Method java/lang/Math.min:(JJ)J\n          9: l2i\n         10: aload_0\n-        11: getfield      #41                 // Field buf:[B\n+        11: getfield      #55                 // Field buf:[B\n         14: arraylength\n         15: aload_0\n-        16: getfield      #47                 // Field writeIndex:I\n+        16: getfield      #59                 // Field writeIndex:I\n         19: isub\n-        20: invokestatic  #69                 // Method java/lang/Math.min:(II)I\n+        20: invokestatic  #91                 // Method java/lang/Math.min:(II)I\n         23: istore_2\n         24: iload_2\n-        25: ifne          31\n-        28: goto          243\n-        31: aload_0\n-        32: getfield      #120                // Field backReferenceOffset:I\n-        35: iconst_1\n-        36: if_icmpne     82\n-        39: aload_0\n-        40: getfield      #41                 // Field buf:[B\n-        43: aload_0\n-        44: getfield      #47                 // Field writeIndex:I\n-        47: iconst_1\n-        48: isub\n-        49: baload\n-        50: istore_3\n-        51: aload_0\n-        52: getfield      #41                 // Field buf:[B\n-        55: aload_0\n-        56: getfield      #47                 // Field writeIndex:I\n-        59: aload_0\n-        60: getfield      #47                 // Field writeIndex:I\n-        63: iload_2\n-        64: iadd\n-        65: iload_3\n-        66: invokestatic  #126                // Method java/util/Arrays.fill:([BIIB)V\n-        69: aload_0\n-        70: dup\n-        71: getfield      #47                 // Field writeIndex:I\n-        74: iload_2\n-        75: iadd\n-        76: putfield      #47                 // Field writeIndex:I\n-        79: goto          243\n-        82: iload_2\n-        83: aload_0\n-        84: getfield      #120                // Field backReferenceOffset:I\n-        87: if_icmpge     128\n-        90: aload_0\n-        91: getfield      #41                 // Field buf:[B\n-        94: aload_0\n-        95: getfield      #47                 // Field writeIndex:I\n-        98: aload_0\n-        99: getfield      #120                // Field backReferenceOffset:I\n-       102: isub\n-       103: aload_0\n-       104: getfield      #41                 // Field buf:[B\n-       107: aload_0\n-       108: getfield      #47                 // Field writeIndex:I\n-       111: iload_2\n-       112: invokestatic  #75                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       115: aload_0\n-       116: dup\n-       117: getfield      #47                 // Field writeIndex:I\n-       120: iload_2\n-       121: iadd\n-       122: putfield      #47                 // Field writeIndex:I\n-       125: goto          243\n-       128: iload_2\n-       129: aload_0\n-       130: getfield      #120                // Field backReferenceOffset:I\n-       133: idiv\n-       134: istore_3\n-       135: iconst_0\n-       136: istore        4\n-       138: iload         4\n-       140: iload_3\n-       141: if_icmpge     191\n-       144: aload_0\n-       145: getfield      #41                 // Field buf:[B\n-       148: aload_0\n-       149: getfield      #47                 // Field writeIndex:I\n-       152: aload_0\n-       153: getfield      #120                // Field backReferenceOffset:I\n-       156: isub\n-       157: aload_0\n-       158: getfield      #41                 // Field buf:[B\n-       161: aload_0\n-       162: getfield      #47                 // Field writeIndex:I\n-       165: aload_0\n-       166: getfield      #120                // Field backReferenceOffset:I\n-       169: invokestatic  #75                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       172: aload_0\n-       173: dup\n-       174: getfield      #47                 // Field writeIndex:I\n-       177: aload_0\n-       178: getfield      #120                // Field backReferenceOffset:I\n-       181: iadd\n-       182: putfield      #47                 // Field writeIndex:I\n-       185: iinc          4, 1\n-       188: goto          138\n-       191: iload_2\n-       192: aload_0\n-       193: getfield      #120                // Field backReferenceOffset:I\n-       196: iload_3\n-       197: imul\n-       198: isub\n-       199: istore        4\n-       201: iload         4\n-       203: ifle          243\n-       206: aload_0\n-       207: getfield      #41                 // Field buf:[B\n-       210: aload_0\n-       211: getfield      #47                 // Field writeIndex:I\n-       214: aload_0\n-       215: getfield      #120                // Field backReferenceOffset:I\n-       218: isub\n-       219: aload_0\n-       220: getfield      #41                 // Field buf:[B\n-       223: aload_0\n-       224: getfield      #47                 // Field writeIndex:I\n-       227: iload         4\n-       229: invokestatic  #75                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n-       232: aload_0\n-       233: dup\n-       234: getfield      #47                 // Field writeIndex:I\n-       237: iload         4\n-       239: iadd\n-       240: putfield      #47                 // Field writeIndex:I\n-       243: aload_0\n-       244: dup\n-       245: getfield      #50                 // Field bytesRemaining:J\n-       248: iload_2\n-       249: i2l\n-       250: lsub\n-       251: putfield      #50                 // Field bytesRemaining:J\n-       254: return\n+        25: ifeq          240\n+        28: aload_0\n+        29: getfield      #156                // Field backReferenceOffset:I\n+        32: iconst_1\n+        33: if_icmpne     79\n+        36: aload_0\n+        37: getfield      #55                 // Field buf:[B\n+        40: aload_0\n+        41: getfield      #59                 // Field writeIndex:I\n+        44: iconst_1\n+        45: isub\n+        46: baload\n+        47: istore_3\n+        48: aload_0\n+        49: getfield      #55                 // Field buf:[B\n+        52: aload_0\n+        53: getfield      #59                 // Field writeIndex:I\n+        56: aload_0\n+        57: getfield      #59                 // Field writeIndex:I\n+        60: iload_2\n+        61: iadd\n+        62: iload_3\n+        63: invokestatic  #163                // Method java/util/Arrays.fill:([BIIB)V\n+        66: aload_0\n+        67: dup\n+        68: getfield      #59                 // Field writeIndex:I\n+        71: iload_2\n+        72: iadd\n+        73: putfield      #59                 // Field writeIndex:I\n+        76: goto          240\n+        79: iload_2\n+        80: aload_0\n+        81: getfield      #156                // Field backReferenceOffset:I\n+        84: if_icmpge     125\n+        87: aload_0\n+        88: getfield      #55                 // Field buf:[B\n+        91: aload_0\n+        92: getfield      #59                 // Field writeIndex:I\n+        95: aload_0\n+        96: getfield      #156                // Field backReferenceOffset:I\n+        99: isub\n+       100: aload_0\n+       101: getfield      #55                 // Field buf:[B\n+       104: aload_0\n+       105: getfield      #59                 // Field writeIndex:I\n+       108: iload_2\n+       109: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       112: aload_0\n+       113: dup\n+       114: getfield      #59                 // Field writeIndex:I\n+       117: iload_2\n+       118: iadd\n+       119: putfield      #59                 // Field writeIndex:I\n+       122: goto          240\n+       125: iload_2\n+       126: aload_0\n+       127: getfield      #156                // Field backReferenceOffset:I\n+       130: idiv\n+       131: istore_3\n+       132: iconst_0\n+       133: istore        4\n+       135: goto          182\n+       138: aload_0\n+       139: getfield      #55                 // Field buf:[B\n+       142: aload_0\n+       143: getfield      #59                 // Field writeIndex:I\n+       146: aload_0\n+       147: getfield      #156                // Field backReferenceOffset:I\n+       150: isub\n+       151: aload_0\n+       152: getfield      #55                 // Field buf:[B\n+       155: aload_0\n+       156: getfield      #59                 // Field writeIndex:I\n+       159: aload_0\n+       160: getfield      #156                // Field backReferenceOffset:I\n+       163: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       166: aload_0\n+       167: dup\n+       168: getfield      #59                 // Field writeIndex:I\n+       171: aload_0\n+       172: getfield      #156                // Field backReferenceOffset:I\n+       175: iadd\n+       176: putfield      #59                 // Field writeIndex:I\n+       179: iinc          4, 1\n+       182: iload         4\n+       184: iload_3\n+       185: if_icmplt     138\n+       188: iload_2\n+       189: aload_0\n+       190: getfield      #156                // Field backReferenceOffset:I\n+       193: iload_3\n+       194: imul\n+       195: isub\n+       196: istore        4\n+       198: iload         4\n+       200: ifle          240\n+       203: aload_0\n+       204: getfield      #55                 // Field buf:[B\n+       207: aload_0\n+       208: getfield      #59                 // Field writeIndex:I\n+       211: aload_0\n+       212: getfield      #156                // Field backReferenceOffset:I\n+       215: isub\n+       216: aload_0\n+       217: getfield      #55                 // Field buf:[B\n+       220: aload_0\n+       221: getfield      #59                 // Field writeIndex:I\n+       224: iload         4\n+       226: invokestatic  #97                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V\n+       229: aload_0\n+       230: dup\n+       231: getfield      #59                 // Field writeIndex:I\n+       234: iload         4\n+       236: iadd\n+       237: putfield      #59                 // Field writeIndex:I\n+       240: aload_0\n+       241: dup\n+       242: getfield      #61                 // Field bytesRemaining:J\n+       245: iload_2\n+       246: i2l\n+       247: lsub\n+       248: putfield      #61                 // Field bytesRemaining:J\n+       251: return\n       LineNumberTable:\n         line 320: 0\n+        line 321: 10\n+        line 320: 20\n         line 322: 24\n-        line 324: 31\n-        line 325: 39\n-        line 326: 51\n-        line 327: 69\n-        line 328: 79\n-        line 329: 90\n-        line 330: 115\n-        line 335: 128\n-        line 336: 135\n-        line 337: 144\n-        line 338: 172\n-        line 336: 185\n-        line 341: 191\n-        line 342: 201\n-        line 343: 206\n-        line 344: 232\n-        line 347: 243\n-        line 348: 254\n+        line 324: 28\n+        line 325: 36\n+        line 326: 48\n+        line 327: 66\n+        line 328: 76\n+        line 329: 87\n+        line 330: 112\n+        line 331: 122\n+        line 335: 125\n+        line 336: 132\n+        line 337: 138\n+        line 338: 166\n+        line 336: 179\n+        line 341: 188\n+        line 342: 198\n+        line 343: 203\n+        line 344: 229\n+        line 347: 240\n+        line 348: 251\n       LocalVariableTable:\n         Start  Length  Slot  Name   Signature\n-           51      28     3  last   B\n-          138      53     4     i   I\n-          135     108     3 fullRots   I\n-          201      42     4   pad   I\n-            0     255     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n-            0     255     1 bytesToCopy   I\n-           24     231     2  copy   I\n-      StackMapTable: number_of_entries = 6\n+            0     252     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n+            0     252     1 bytesToCopy   I\n+           24     228     2  copy   I\n+           48      28     3  last   B\n+          132     108     3 fullRots   I\n+          135      53     4     i   I\n+          198      42     4   pad   I\n+      StackMapTable: number_of_entries = 5\n         frame_type = 252 /* append */\n-          offset_delta = 31\n+          offset_delta = 79\n           locals = [ int ]\n-        frame_type = 50 /* same */\n         frame_type = 45 /* same */\n         frame_type = 253 /* append */\n-          offset_delta = 9\n+          offset_delta = 12\n           locals = [ int, int ]\n-        frame_type = 250 /* chop */\n-          offset_delta = 52\n-        frame_type = 250 /* chop */\n-          offset_delta = 51\n+        frame_type = 43 /* same */\n+        frame_type = 249 /* chop */\n+          offset_delta = 57\n \n   protected final int readOneByte() throws java.io.IOException;\n     descriptor: ()I\n     flags: (0x0014) ACC_PROTECTED, ACC_FINAL\n+    Exceptions:\n+      throws java.io.IOException\n     Code:\n       stack=2, locals=2, args_size=1\n          0: aload_0\n-         1: getfield      #26                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n-         4: invokevirtual #132                // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n+         1: getfield      #44                 // Field in:Lorg/apache/commons/compress/utils/CountingInputStream;\n+         4: invokevirtual #177                // Method org/apache/commons/compress/utils/CountingInputStream.read:()I\n          7: istore_1\n          8: iload_1\n          9: iconst_m1\n         10: if_icmpeq     24\n         13: aload_0\n         14: iconst_1\n-        15: invokevirtual #107                // Method count:(I)V\n+        15: invokevirtual #139                // Method count:(I)V\n         18: iload_1\n         19: sipush        255\n         22: iand\n         23: ireturn\n         24: iconst_m1\n         25: ireturn\n       LineNumberTable:\n@@ -1074,20 +1078,18 @@\n         Start  Length  Slot  Name   Signature\n             0      26     0  this   Lorg/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream;\n             8      18     1     b   I\n       StackMapTable: number_of_entries = 1\n         frame_type = 252 /* append */\n           offset_delta = 24\n           locals = [ int ]\n-    Exceptions:\n-      throws java.io.IOException\n }\n SourceFile: \"AbstractLZ77CompressorInputStream.java\"\n BootstrapMethods:\n-  0: #182 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n+  0: #188 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;\n     Method arguments:\n       #189 ()I\n-      #190 REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n-      #189 ()I\n+      #192 REF_invokeVirtual org/apache/commons/compress/compressors/lz77support/AbstractLZ77CompressorInputStream.readOneByte:()I\n+      #193 ()I\n InnerClasses:\n-  public static #198= #194 of #196;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n-  public static final #203= #199 of #201; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static final #199= #195 of #197; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles\n+  public static #204= #200 of #202;       // ByteSupplier=class org/apache/commons/compress/utils/ByteUtils$ByteSupplier of class org/apache/commons/compress/utils/ByteUtils\n"}]}
